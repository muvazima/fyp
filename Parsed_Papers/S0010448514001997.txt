@&#MAIN-TITLE@&#Defining Simulation Intent

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           A novel approach to capturing “Simulation Intent” is described.


                        
                        
                           
                           The design space is partitioned into cells of analysis significance.


                        
                        
                           
                           Analysis attributes are attached to these cells and their interfaces.


                        
                        
                           
                           Models are derived using Simulation Intent, design geometry and analysis attributes.


                        
                        
                           
                           By specifying a different Simulation Intent, different analysis models are obtained.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Finite element modelling

Cellular modelling

Virtual Topology

Dimensional reduction

CAD/CAE integration

@&#ABSTRACT@&#


               
               
                  Defining Simulation Intent involves capturing high level modelling and idealisation decisions in order to create an efficient and fit-for-purpose analysis. These decisions are recorded as attributes of the decomposed design space.
                  An approach to defining Simulation Intent is described utilising three known technologies: Cellular Modelling, the subdivision of space into volumes of simulation significance (structures, gas paths, internal and external airflows, etc.); Equivalencing, maintaining functional links between different analysis representations of the same region of design space across multiple analysis models; and Virtual Topology, which offers tools for partitioning and de-partitioning the model without disturbing the manufacturing oriented design geometry. The end result is a convenient framework to which high-level analysis attributes can be applied, and from which detailed analysis models can be generated with a high degree of controllability, repeatability and automation. There are multiple novel aspects to the approach, including its reusability, robustness to changes in model topology and the inherent links created between analysis models at different levels of fidelity and physics.
                  By utilising Simulation Intent, CAD modelling for simulation can be fully exploited and simulation work-flows can be more readily automated, reducing many repetitive manual tasks (e.g. the definition of appropriate coupling between elements of different types and the application of boundary conditions). The approach has been implemented and tested with practical examples, and significant benefits are demonstrated.
               
            

@&#INTRODUCTION@&#

Effective and efficient use of simulation technology is important to remaining competitive in industry today. It allows product development times to be decreased, reduces the need for expensive physical testing and increases the performance of products and manufacturing processes. As simulation technologies become more central to product development, they have become the subject of increasing research focus. Of particular importance is the need to integrate them more effectively into the overall design process.

Currently there is a significant disconnect between the design process and simulation activities. A designer typically models a component or assembly with a view to how the manufactured product will look. Indeed, CAD technology was initially developed and structured with these purposes in mind. However, of increasing importance is how CAD models can be used to carry out simulation activities. Often the highly detailed CAD models produced by the designer need to be idealised by the analyst before an efficient simulation model can be created  [1]. Idealisation can involve removal of unwanted detail, dimensional reduction or sub-division of regions for mesh or boundary condition application. These steps remain manual, time consuming and often remove the link between the idealised model and the original geometry. Furthermore, when the source CAD model is changed, substantial rework is often required to update the idealisations, mesh generation and boundary condition application.

The desirable situation is that an analyst only spends time ‘analysing’ and not on these repetitive pre-processing tasks. Better integration of design and simulation technology would facilitate the automation of, or eliminate the need for many manual pre-processing operations, freeing the analyst to spend more time on product development, directly adding value to the end product. Secondary benefits would include increasing the scope of optimisation runs, enabling the analyst to explore more of the design space without worrying about the model set-up failing. Analysis activities can also begin much earlier, meaning first stage designs are closer to the target goal, in effect reducing rework for designers as well as analysts.

It is shown in this work that a new concept termed ‘Simulation Intent’ can help establish the link between design and simulation technologies and can then be used and re-used to automatically create fit-for-purpose analysis models. There are multiple novel aspects to the approach, including its reusability, robustness to changes in model topology and the inherent links created between multiple analysis models. The approach is underpinned by three technologies called Cellular Modelling, Equivalencing and Virtual Topology, which are described in more detail in Section  3.

Arabshahi et al.  [2,3] formally identified the need for closer CAD–CAE integration. In the first paper the process of moving from CAD geometry to a suitable analysis model is explored in detail. The steps and processes are broken down using the IDEF0/SADT  [4] systems engineering approach. Two main approaches are identified; building analysis models (a) without prerequisite CAD data, creating fit-for-purpose analysis geometry and (b) by adapting an existing CAD model to suit the analysis needs. Approach (b) has become the predominant approach in recent years, although future systems will still need to offer the facility to use approach (a). In their second paper Arabshahi et al. looked at the specific steps/tools which needed to be developed to form better CAE–FEA integration e.g. Dimensional Reduction Aid and Subdivision Feature Recogniser. Since the publication of that paper, many of these tools have been widely researched and developed in isolation, but there remains a strong need for generic integration into one combined strategy.

Hamri et al.  [5,6] introduced the concept of High Level Topology (HLT). Here the authors state the purpose of HLT is to efficiently support all the models involved in the FE simulation model preparation. It is recognised that in order to achieve effective CAD/CAE integration, any solution needs to not only support the geometry required for manufacturing purposes, but also the additional geometry required for an analysis model including regions to which boundary conditions, meshing constraints, etc. may be applied. Furthermore, it is highlighted that the solution needs to be generic and not specific to any particular CAD/CAE solution. To fully benefit from Hamri’s approach, boundary conditions and regions required for the downstream analyses are to be specified prior to the creation of the HLT (although it is mentioned that specifying these later is possible). The paper does not address directly the possibility of multiple sets of boundary conditions occurring on one source CAD model. Also, catering for multi-dimensional or dimensionally reduced models is not mentioned e.g. if the source CAD model is solid, but one or more of the downstream analyses has reduced dimensionality.

Shahwan et al.  [7,8] explored the idea of using part interfaces identified in a Digital Mock-Up (DMU) along with qualitative reasoning to define their behaviour. It was shown how geometric properties of interfaces may be used to infer their functional behaviour. The approach relies on a pre-defined set of rules about how to interpret manufacturing based modelling features and shows that automatically extracted interfaces may be useful in the creation of analysis models.

Lee  [9] proposes a CAD/CAE integrated approach whereby a non-manifold CAD/CAE integrated model contains both design and analysis components. A multi-abstraction non-manifold topology modelling approach is proposed, facilitating the abstraction of models at various levels of detail and dimensionality. Whilst the author deals comprehensively with the storing and extraction of multiple different models at different levels of detail, bi-directional links between the representations are not formed. These links are necessary to automate the transfer of loads and boundary conditions between different representations.

The need for CAD model simplification is well documented by authors such as Thakur  [10], who reviewed various techniques employed to simplify CAD models. Furthermore, White and Saigal  [11] discuss the complexity of CAD parts and the effect this can have on the mesh generation process. The latter authors propose a method by which to mathematically estimate this complexity. The intention is to allow analysts and managers to estimate the time it will take to achieve a mesh on a particular model, further demonstrating the widespread nature of the problem.

A simplified geometric model created for the purposes of simulation modelling is termed the ‘abstracted’ model. Traditionally the abstracted model has been developed through changes to the base topology of the original CAD model i.e. the user manually manipulates the feature tree of the CAD model by removing or modifying features. However, in recent years, the advancement of a technology known as Virtual Topology has greatly improved this area. This technology was first developed by Sheffer et al.  [12,13], and focused on the concept of virtual entities within the B-Rep scheme. These entities maintain links with their base geometry. Therefore, the original topology of the model need not be modified to create simplified or partitioned analysis geometry.

Virtual Topology merge and split operations are used in this work to create virtual ‘Superset’ and ‘Subset’ entities respectively. ‘Parasite’ entities are utilised in split operations to generate virtual subset entities. These virtual entities are described in Table 1
                        . Their use within the Simulation Intent concept is discussed in Section  3.3.

Quadros and Owen  [14] demonstrate one method by which automation can be applied to de-feature a CAD model. Their approach involves firstly the creation of a faceted representation of the detailed CAD model. Secondly, geometrical characteristics of the facets are compared to target mesh size in order to decide if a feature can be considered ‘irrelevant’. This type of approach would suit the polygonal based analysis geometry found in some software packages. However, the de-featuring mechanism lacks traceability, particularly back to the original B-Rep model and therefore does not facilitate the ‘one common base geometry’ ideas explored later in this paper.

Foucault et al.  [15] demonstrate a concept which is similar to Virtual Topology and term it ‘Mesh Constraint Topology’ (MCT). The structure seems similar but with more emphasis on automation and the consideration of model specific needs i.e. when creating a mesh model or MCT, the needs of the analysis model can be considered  [16]. As a result, it is supposed that an MCT would only be produced after the simulation characteristics had been applied.

In a paper by Shapiro et al.  [17], the geometric issues in CAD/CAE integration are explored. It is stated that current efforts to simplify geometric models for analysis are heuristic and lead to two loosely related geometric models, undermining CAD/CAE integration. Whilst in many cases this is true, it is suggested here that the problem is not with the simplification methods, but the traceability of the steps taken. If steps taken to de-feature/simplify a model were stored in a high-level manner (e.g. Virtual Topology operations), in a generic framework, a firm link between design and analysis geometry could be maintained.

Most mainstream CAD packages utilise a manifold modelling environment e.g. NX  [18], SolidWorks  [19] and CATIA V5  [20]. In these packages, each body can be realised as a separately manufactured component. Where two volumes are adjacent to each other, their topological structures are completely disconnected i.e. modifying one of the volumes can have no direct influence on the other. Volumes, faces, edges and vertices can only be used in the topological definition of one component.

Manifold models are those with topological surfaces which are homeomorphic to a two-dimensional disc  [21]. Non-manifold representations have a different structure and offer significant flexibility compared to their manifold counterparts. Fig. 1
                         illustrates some common features that are unique to non-manifold models. In each of these cases a topological entity is shared by two adjacent volume cells i.e. they are non-manifold entities. In manifold representations this cannot occur. For example, in (c) a single face exists between two adjacent volumes. In a manifold equivalent, there would be two faces at this interface, entirely disconnected from each other topologically.

Various non-manifold representations have been developed over the years  [22–25]. Two of the more commonly utilised non-manifold structures are the radial-edge structure (RES)  [22] and the partial-entity structure (PES)  [23]. The representation of non-manifold models allows them to be used for a wider range of applications than manifold representations. For example, Bronsvoort  [26] utilised non-manifold cellular models to represent the evaluated geometry of a feature model with the ultimate aim of managing the dependencies between separate model views at the design, assembly and manufacturing planning stages of the product development process. In other work non-manifold representations have been exploited to support feature-based analysis modelling capabilities  [27] and for the treatment of multi-region, multi-dimensional solids for mesh generation  [28].

Lee and Lee  [23] point out that one of the drawbacks of non-manifold modelling approaches is the increased storage space required and attempt to address this with a clever data structure. However, they also point out the resulting benefits of a non-manifold model in answering adjacency queries. For example, consider Fig. 1(c). Since the shared face is an integral part of the definition of these two volumes, retrieving their common interface requires a straight-forward interrogation of the model definition. In a manifold modelling framework, there would be two faces existing at this interface, each only associated with their respective body. Therefore, retrieving the common interface would require more intensive proximity searching algorithms. Furthermore, tolerance limitations can render such proximity searches inaccurate.

Non-manifold modelling has had limited mainstream uptake in the past, since models were developed primarily for manufacturing purposes. Since each volume in a manufacture oriented CAD model is a separately manufactured component, adjacency calculations have little importance. Therefore, the storage space and added complexity associated with the additional adjacency information has had little to justify it. However, in Arabshahi et al.  [2] it is stated that any geometric modelling environment developed with CAD/CAE integration in mind should be able to support and manipulate non-manifold geometry. They also point out that such a modelling environment would be capable of storing abstracted models with different dimensionalities.

In order to create suitable analysis models many modelling and idealisation decisions are taken. These decisions are often relayed to the analysis package in an ad-hoc manner. In doing so, they are rendered specific to the given analysis problem. When changes are made to the base model or the required level of detail increases, a significant amount of manual rework may be required. This lack of robustness is particularly restrictive when running optimisation loops, since more extreme design perturbations can disturb model set-up e.g. boundary conditions do not correctly reapply to the newly generated geometry. A need has therefore been identified to capture simulation decisions in such a manner that they can be used to link various analysis representations. This work introduces the concept of Simulation Intent.

Defining Simulation Intent involves capturing high level modelling and idealisation decisions in order to create an efficient and fit-for-purpose analysis. In the framework proposed here these decisions are recorded as attributes of an individual cell or group of cells in a decomposed design space.

The Simulation Intent should include all of the analysis, modelling and idealisation decisions, and all the parameters required to create an efficient and fit-for-purpose analysis model from an input CAD geometry. The scope of this work is not to define the methods used to create, or manipulate, the analysis model, but rather provide a framework in which the modelling decisions, analysis parameters and resulting models can be linked. To be fully generic, it needs to be suitable for application in multiple CAE applications regardless of the CAD source. Table 2
                      is an example of how the reasoning for defining the Simulation Intent for a model could be formalised and presented in a manner to help clarify the operations for the examples throughout this paper. It should be noted that this is only an example and the contents are not an exhaustive attempt to capture all of the capabilities found in commercial packages. Using this approach it can be shown that certain Simulation Intent definitions and analysis decisions may be automatically derived. It is through this approach that the need for repetitive and time consuming procedures may be eliminated. For example, the mesh type can be automatically determined from the dimensionality captured as the Simulation Intent of the cell. The Simulation Intent attribute relating to ‘Solution Type’ will specify the type of analysis required and may be used to determine the element type, i.e. linear hex element may be used for a large deformation fan blade-off analysis. As such, Simulation Intent provides a framework through which analysts and methods engineers can communicate.

There are three enabling technologies which are central to the concept; Cellular Modelling, Equivalencing and Virtual Topology. Cellular Models are non-manifold geometric representations where all regions of simulation significance are represented as separate cells, including solid, fluid and void regions, allowing straight-forward extraction of important interfaces. Equivalencing involves capturing the links between the different analysis representations of the same spatial region in a model e.g. a solid representation of a thin-sheet structure and the derived mid-surface with sheet thickness. Finally, Virtual Topology offers a toolset for not only defining spatial partitions in order to create multiple cells, but also to combine regions of a model where geometry clean-up is required or a lower resolution model is sufficient e.g. merging adjacent faces to facilitate a coarser mesh. By utilising Simulation Intent, the use of geometric modelling for simulation purposes can be fully exploited and simulation work-flows can be more readily automated.

Most CAD models do not directly meet analysis requirements without significant extra preparation steps. There is therefore a need for modelling techniques which better meet simulation needs. Cellular Modelling  [29,30] is an alternative approach to geometric modelling for analysis. Thakur et al.  [10] described cellular models as non-manifold geometric representations which capture positive and negative spatial regions. They offer the flexibility to create several representations of one component/assembly from one common base model. The Cellular Modelling approach employed here is based around the concept of partitioning space into ‘cells’ of simulation significance. The cells may represent void or fluid volumes and not simply the solid, manufactured components. Cellular Modelling provides a convenient topological framework on which high level Simulation Intent attributes can be used to automate many lower level tasks. The non-manifold topology of the cellular model is stored in an accessible manner  [31], enabling interrogations and modifications based on the Simulation Intent.

A cell represents a specific region of space and as such can be a volume, face, edge or vertex. Volumes are bounded by faces, faces by edges and edges by vertices. A cellular model can be of any dimension e.g. a solid or fluid volume, a non-manifold T-section of 3 surfaces meeting at a common edge, a network of 1D wires representing a truss or even a 0D point representing a mass and inertia.

Since cellular models are non-manifold in nature (Section  2.3), they are particularly effective when querying adjacencies between topological entities. Adjacency or interface identification is of paramount importance when building simulation models of any kind since most boundary conditions and loads tend to be applied to these interface regions. Cellular models offer the ability to identify interfaces between cells automatically. In this work it is demonstrated how the Simulation Intent can be associated with the calculated interfaces between cells. Also, the ability to calculate the interfaces can be used to make intelligent decisions about how to model them in an analysis based on the Simulation Intent defined for the adjacent cells. For example, in Fig. 8 a uniform pressure or a distributed edge load and moment may be required, to model the effects of pressure coming from an adjacent fluid cell, based upon the dimensionality of the cell, Table 2.

There follows a number of examples which demonstrate some of the advantages which Simulation Intent provides. The examples in this paper assume an existing CAD model which can be partitioned up in the creation of the Cellular model. However, the generic nature of the Simulation Intent framework means there is no strict requirement to have an existing CAD model prior to defining the Simulation Intent, rather an engineering understanding of the components involved in an assembly and how they interact is sufficient. Cells can exist virtually, and virtual topology can be applied to them, before they are associated with any particular geometry representation.

Often fluid regions play an equal or more important role than solids in the performance of a product. An obvious example is an aero-engine, whereby it is the geometry of the ‘gas-path’ that is of paramount importance. The fluid volume in these cases is usually retrieved through time-consuming and error prone manual operations based upon the model of the adjacent structural domain. Even where automated tools exist, the newly formed geometric model has weak links with the original solid model. With cellular modelling, these fluid cells are modelled and represented in the same way as solid components. The ability to maintain structural and fluid domains within a single representation highlights a clear benefit of cellular modelling, which is the opportunity to exploit the interfaces to provide tighter integration between the distinct physics domains. Simulation Intent parameters can be applied to fluid volume cells in the same way as solids.

Modelling fluid volumes explicitly has several distinct advantages. One is outlined in the next Section  3.1.2, whereby interfaces between solid/fluid regions can be calculated automatically and used in the application of boundary conditions. An extension to this is the ability to pass results coherently and reliably between fluid and solid domains. The analyst may be interested in the detailed interaction between the fluid and the solid structure. The interaction may be modelled directly as part of a multi-disciplinary analysis or manually by passing output results from one domain as inputs to the other e.g. passing fluid pressures from a CFD analysis to the adjacent solid for FEA analysis of stress or deflection. In either case, there will be a need to specify the interface at which the interaction will occur. Since the fluid volume is included in the source cellular model, interface identification is automatic.

As the fluid domains can be defined during the creation of the non-manifold cellular model, the elimination of traditional secondary Boolean operations in the creation of fluid volumes reduces the complexity of multi-disciplinary optimisation loops. Fluid regions will update along with their solid equivalents and so too will the interface between them. Where different levels of idealisation between solid and fluid regions are required, the use of Equivalencing and Virtual Topology (described later in Sections  3.2 and 3.3) can be used to track the relationships between representations. Within the implementation developed for this work, cells are identified by the location of a point on their interior which can help to resolve labelling issues under parametric geometry change.

Due to the availability of adjacency information in cellular models, boundary condition application is much simplified.

For example, in Fig. 2
                            a pressure vessel has been modelled alongside both the internal and external fluid volumes. Consider that the analyst may wish to apply a pressure to the internal surfaces of the vessel. Using conventional methodology, each of the internal surfaces will be manually selected and a pressure magnitude specified on them. Using a cellular model, the analyst can specify the pressure region as a calculated interface, where 
                              
                                 (1)
                                 
                                    Pressure_surface
                                    =
                                    Vessel
                                    ∩
                                    Internal Volume .
                                 
                              
                           
                        


                           Table 3
                            shows the definition of the Simulation Intent associated with a simple stress analysis of the pressure vessel. The fourth row in the table (highlighted grey) contains the Simulation Intent for the boundary condition between the solid and fluid domains. In this example the definition of the cell is the intersection of the solid and one of the fluid cells, Eq. (1). The results of this calculation are shown in Fig. 3
                           . The Simulation Intent dictates that a pressure load should be applied to the ‘vessel’ cell. The magnitude of the pressure load can be specified as a variable associated with the surface cells resulting from the calculation. The pressure direction can be automatically determined from the cellular representation.

The calculated interfaces are the surfaces which form the boundary of both the internal fluid volume cell and the pressure vessel cell, and can be recomputed as either updates. Using this methodology eliminates the manual selection of topological entities during the application stage. Therefore, boundary conditions become topologically independent, allowing major design changes to be made to a model without needing to redefine the boundary condition i.e. the cellular model will accurately return the interface between ‘Vessel’ and ‘Internal Volume’ regardless of the complexity or shape of either.

Individual cells can be used to represent regions with different simulation significance within the same component. As such, cells can be used to represent parts of the model to which different mesh types or styles can be applied. When creating efficient hexahedral or mixed-element solid meshes, complex geometry is often partitioned into sub-regions which can be meshed using the desired meshing strategy. One reason for this is the requirements of hexahedral meshing algorithms, some of which are outlined in  [32].


                           Fig. 4
                            illustrates how a simple model may need to be sub-divided in order to apply a structured hexahedral meshing approach. With the Simulation Intent framework, each of the smaller bodies created during the decomposition processes is cells which can be easily meshed using swept approaches. The management of multi-block decompositions in non-manifold form is by no means a new problem, and is well handled within packages such as Abaqus  [33]. However, solutions are code-dependent and the link between the decomposition and the original CAD model is non-existent. A cellular modelling approach allows meshable sub-regions to be managed in the same way as any other simulation cell. By managing the topology of the decomposition explicitly, it can be re-used in many packages.

Partitioning may also occur where only a localised region requires a hexahedral mesh e.g. to investigate a local stress raiser. In this case there is the potential for meshing neighbouring cells with coarser meshes, possibly of tetrahedral type.

Consider Fig. 5
                            showing two adjacent meshed cells, A and B. Simulation Intent must be specified at the interfaces of cells which are to be meshed differently to define how the mesh transitions or couples, Table 4
                           . The Simulation Intent not only specifies the way in which each of these cells should be meshed individually, but it will also specify the method by which the interface should be handled. This may be in the form of a generic rule applied model-wide such that where a cell with a tetrahedral mesh meets a cell with a hexahedral mesh, pyramid elements should be used to achieve the transition. Or it may be more specific such that the interface between Cell A and Cell B has a particular Simulation Intent applied, regardless of any global Simulation Intent. Table 4 shows the Simulation Intent for the mesh interface (highlighted grey) can be automatically derived from the mesh and dimensionality attributes of the parent cells, A and B. Dissimilar mesh types of parent cells A and B result in a non-conforming interface. Pyramid elements are chosen as the coupling strategy here in line with the desired solution accuracy. However, it is important to recognise that alternative strategies may be chosen based on an organisation’s approved methods; the chosen method for different mesh interfaces may be hard coded into their Simulation Intent implementation. Note also that where the Simulation Intent specifies mesh continuity at interfaces, the cellular model ensures seeding needs only to be defined on the shared surface between the adjacent volume cells in the non-manifold cellular model, negating the need to equivalence coincident nodes, as may be required when utilising manifold representations.

In modern design processes many different analysis models are used to inform the product development. Equivalencing establishes the links between entities in different design and analysis models which represent the same region of space.

Whilst the creation of multiple representations of the same component for analysis purposes is well established practice, links between representations are essential for the transfer of analysis attributes to different analysis models. While these models are often created and used in isolation of other simulation models, through equivalencing the links between all of the different models used to define the same cell, or group of cells, in the cellular model are created. A simple demonstration of entities which must be noted as equivalent during dimensional reduction is shown in Fig. 6
                        . Fig. 6 shows how a characteristically ‘thin’ region of a model is reduced to a mid-surface. Shell elements can then be used to mesh this region, reducing the degrees of freedom over solid alternatives. It also shows how the component could be reduced to a line which is meshed using beam elements with cross sectional attributes.

In order to form the ‘equivalence’ between two representations of the same cell, links need to be created and maintained between the cell in the cellular model and the equivalent models used to represent the same cell, whether geometry or mesh. For example, consider the bounding edges of the newly created mid-surface. These edges are in fact reduced representations of the bounding faces on the original solid cell. To define the equivalencing these links are derived (using techniques described in Ref.  [34]) and stored. Likewise, for the model where the region is reduced to a 1D line, the endpoints are reduced representations of the respective end faces.

Equivalencing relationships can be stored in multiple ways depending on the implementation. A simple method employed repeatedly throughout this work is to use a suitable naming convention. Where Virtual Topology (Section  3.3) is used, it can be reapplied in an equivalent dimensionally-reduced model by tracing the equivalences involved. Some examples of the benefits offered by capturing the equivalence information in this manner follow.

It is possible that the Simulation Intent applied to cells may include applying different mesh dimensionalities to adjacent cells. Mixed-dimensional modelling is used in structural modelling to reduce the computational complexity of analysis models  [35]. Where this is the case, special techniques are used to tie the regions of differing dimensionality together. Coupling may be in the form of Multi-Point Constraints (MPCs), or with careful application of seeding to ensure nodes at the interface match.


                           Fig. 7
                           
                            illustrates how interface identification is important in the creation of mixed dimensional models. The model, (a), has two cells present with dimensionality attributes ‘3D’ and ‘2D’ applied as shown defining the Simulation Intent in Table 5
                           . A query on the cellular model returns the interface between these two cells and identifies it as ‘2D–3D’, (b). With this knowledge, decisions about how to combine the two regions in the simulation model can be made automatically, (c). If the disc had a Simulation Intent of ‘2D’ applied to it, it has been reduced to a mid-surface and meshed with shell elements. The central hub has had a Simulation Intent of ‘3D’ applied to it, therefore it is meshed with solid elements. Therefore, based upon the analysis attributes of the parent cells of the interface it is possible to automatically determine the coupling strategy, highlighted grey in Table 5.

With multi-dimensional modelling comes the possibility of multiple representations of the same cell. For example, the mid-surface which is meshed to produce the shell mesh in Fig. 7(c) represents the same region of space as the cell labelled as “2D mesh” in Fig. 7(a). The mid-surface can be considered a linked equivalent representation of the solid cell.

Equivalencing offers the ability to propagate equivalence boundary conditions to different representations automatically. In Section  3.1 the concept of Cellular Modelling was introduced, along with the ability to automatically extract interface information for boundary condition application. Whilst the Cellular Model returns the topological entities relating to interfaces in the solid representation, equivalencing offers the ability to trace the corresponding entities at multiple dimensions by using the equivalence to link back to the original solid cells. In effect, the boundary conditions themselves are dimensionally reduced and equivalenced.


                           Fig. 8 demonstrates how one Simulation Intent defining the boundary condition can be represented at multiple dimensions on different representations of the same cell. For each analysis model the Simulation Intent relating to the boundary condition remains the same; there is no need for the analyst to redefine it. The Simulation Intent relating to the dimensionality of the cell is the only modification required. Having re-defined the dimensionality of a cell, equivalencing is used to link the topological entities of the new representation to those of the original cellular model. Therefore, the boundary conditions can be automatically derived for the equivalent dimensionally reduced model. In the boundary application step, the interface calculation occurs in the same manner as for the original 3D model, returning the corresponding topology from the cellular model. When topology relating to a dimensionally reduced cell is detected, the corresponding topology at the new dimensionality is queried. At this point, steps can be taken to dimensionally reduce the boundary condition. The details of the dimensional reduction of the boundary conditions are outside the scope of this work, but methods proposed by Donaghy  [36] could be used to achieve this goal. For example, where a pressure on a solid face is reduced to a distributed load on an equivalent mid-surface edge (Fig. 8), a simple calculation is required such as 
                              
                                 (2)
                                 
                                    
                                       
                                          P
                                       
                                       
                                          E
                                       
                                    
                                    =
                                    p
                                    ×
                                    t
                                    .
                                 
                              
                           
                           
                              
                                 
                                    P
                                 
                                 
                                    E
                                 
                              
                            is the new shell edge load, 
                              p
                            is the originally defined pressure and 
                              t
                            is the thickness of the region (usually stored in the mid-surface creation process). Where the pressure lies on an external face of a thin-sheet region to be mid-surfaced as in Fig. 9
                           , consideration of the face normal is used to ensure the pressure is applied in the correct direction on the mid-surface. This is defined in the Simulation Intent definition, where the Orientation attribute of the dimensionally reduced pressure load is automatically derived from the cellular model.

The creation of an abstracted or simplified geometric model before creating a simulation model is common practice. Traditionally the abstracted model has been developed through changes to the base topology of the original CAD model i.e. the user manually manipulates the construction tree of the CAD model by removing or modifying features. However, in recent years, the advancement of Virtual Topology has greatly improved this area. This technology was first introduced by Sheffer  [12] and is now available in leading CAE packages. The concept allows for the creation of virtual topological entities within the boundary representation (B-Rep) scheme. These newly defined entities maintain links with their base geometry without directly modifying it. The primary advantage of this approach is that the original geometry does not need to be modified in order to create simplified or partitioned analysis geometry and mesh. Also, it allows topological entities to be created completely separately from the underlying geometry.

There are two fundamental types of Virtual Topology used in the Simulation Intent scheme which are exploited in this work; supersets and subsets. Supersets allow for the combination of several adjacent topological entities to create one larger entity, facilitating removal of unwanted vertices, edges or faces (model clean-up and simplification). Conversely, subsets allow for the addition of new entities as localised regions of existing entities (partitioning), facilitating the application of analysis attributes such as material properties, mesh dimensionality and type and boundary conditions. The additional cells used to partition on existing cell into subsets are known as ‘parasite’ entities, since they lie within an existing cell and are not defined in the original geometry description.

Examples of the benefits which can be realised by implementing Virtual Topology as part of the models Simulation Intent, are now described.


                           Fig. 10
                            shows an example of how Virtual Topology is used to remove unwanted detail from a CAD model. In (a) it is shown how small so called sliver faces can result in many elements, some of which may be of low quality (b). These small faces can be combined to create a Virtual Superset (c). The resulting mesh (d) is simpler than the original, leading to reduced computational cost and improved quality.

Within the Simulation Intent scheme Virtual Topology is not treated as a closed model preparation tool but as an integral part of simulation model definition. Since one of the aims of Simulation Intent is to provide robust and reusable simulation model definition, it follows that Virtual Topology needs to be managed and maintained transparently. For example, where Virtual Topology is used prior to boundary condition application to merge multiple faces, the superset definition should be stored as part of the Simulation Intent. Using this definition, it is possible to map loading on the original 3D model onto the edges of the 2D slice model of Fig. 11
                           . The correct edges are obtained through use of the equivalencing information as discussed in Section  3.2. The Simulation Intent can be described for model clean-up operations, as per Table 2, where analysis variables such as target element size may dictate the clean-up tolerances. Depending on the solution type other variables such as the time-step for explicit analysis solution may drive the model clean-up operations.

Virtual Topology has an important role to play in how the partitioning process which leads to Cellular Models is implemented. In Section  3.1 some common reasons for partitioning were outlined. It is an important aspect of the Simulation Intent strategy that different levels of representation and decomposition can be managed. Design geometry may need to be partitioned in several independent ways for particular simulation purposes. Virtual Topology provides an effective way to describe these different decompositions without having to implement different geometry editing operations. Each of the decompositions can be treated as Virtual Subsets of the original model. In this way, the original geometry remains unperturbed and topology relations to other decompositions can easily be drawn. Consider Fig. 12
                            where a partition has been added to separate a hexahedral mesh region from a tetrahedral mesh region. Adding a ‘real’ partition to the source geometry would mean that this partition would be present in all downstream analyses. Instead user-defined partitioning geometry can be used to create the parasite entities and virtual subsets as part of the Simulation Intent.


                           Fig. 12(a) illustrates a cross-section of a welded component, (b) illustrates all the virtual cells defined as part of the cellular model. Since these cells are all stored as virtual entities, they can be combined as required to produce multiple analysis models linked to a common base geometry, whilst using the cellular model for interface extraction. In (c) cells have been combined to create a model suitable for a welding simulation, where the weld volumes remain as separate cells. In (d) all of the central cells have been combined into one larger subset which can be meshed with solid elements and the three remaining cells have been reduced to mid-surfaces. The relationship between the virtual cells in (b) and the reduced cells in (d) is maintained through the storage of the equivalences.

The Simulation Intent framework has been presented in terms of the Cellular Modelling, Virtual Topology and Equivalencing technologies. Examples have focused on the importance of each technology and their Simulation Intent definition applicable for the pre-processing (decomposition, geometry clean-up) of analysis models and the management of associated analysis attributes (boundary conditions, mesh mating conditions). The work described in  [31,37] has been used to manage the topological information required to link the different analysis representations. Through the development of this work a relational database has been used to prototype the capabilities which are produced. The data structure is shown in Fig. 13
                           .


                           Fig. 13 shows the links between the Cellular Modelling, Virtual Topology and Equivalencing technologies implemented in this work. The non-manifold topology of the cellular model is stored in the ‘Entity’ and ‘Topology’ relations. Unique ‘Identifier’ and ‘Label’ attributes are assigned to each topological entity to ensure links are maintained with entities in the CAD environment, but enabling the topology within the data structure to be manipulated independently, i.e. for the creation of virtual entities. In addition, by separating the topology from the underlying geometry description in this manner, it is possible to create topologies which cannot be represented using existing toolsets. For example an isolated line or vertex lying inside a face. These topological conditions can be coupled with the Virtual Topology and equivalence relationships to allow the transfer of loading and boundary conditions between models with different Simulation Intents applied.

The ‘Manifold’ relation enables manifold modelling packages to utilise the adjacency information in the non-manifold cellular representation. ‘Virtual Topology’ and ‘Equivalence’ relations manage the dependencies between analysis models at different levels of fidelity. Fig. 14
                            shows how these dependencies are managed using the proposed approach. Once the original model has been partitioned for meshing purposes the partitioned cells are stored as subsets of the original cell, Fig. 14(a). Fig. 14(b) shows the thin-sheet cells and their associated parasite faces. Parasite faces (TS1_1 AND TS2_1) can be identified through the intersection of the subset entities in the data structure. The dimensional reduction of the thin-sheet regions to mid-surface cells is specified in the Simulation Intent definition. Dependencies between the equivalent cells are stored in the ‘Equivalence’ relation, i.e. parasite face TS1_1 is equivalent to mid-surface edge TS1_1_MID, Fig. 14(c). The Simulation Intent definition has described the dimensionality of the analysis cells. The analysis decision to mesh equivalent edge, TS1_1_MID, with beam elements representing region LS1, is made to avoid the creation of an extra cell to represent LS1. Fig. 14(d) shows that the coupling decision can be automatically derived using the Virtual Topology and Equivalence relationships described, i.e. parasite face TS2_1 represents the coupling interface in the partitioned model, while mid-surface edge TS2_1_MID is its equivalence entity in the dimensionally reduced cell. Therefore, the desired analysis model can be automatically generated once the Simulation Intent has been defined for the analysis cells.

One of the advantages of storing the data in this manner is that bespoke queries can be generated easily. These can be used to extract the information used by the individual methods in the creation of the analysis models. For example, the interface between cells TS1, TS2 and LS1 from Fig. 14, can be returned using the SQL query: 
                              
                                 
                                    SELECT Topology.BoundEntity
                                 


                                    FROM Topology
                                 


                                    WHERE Topology.Entity In (‘TS1’, ‘TS2’, ‘LS1’)


                                    GROUP BY Topology.BoundEntity;


                                    
                                       
                                          HAV INGCount(Topology.BoundEntity)
                                       
                                       =
                                       2
                                    ;

Sections  3.1–3.3 include multiple examples of low scale and complexity aimed at giving a broader understanding of the Simulation Intent concept. In  [34,38] the technique is applied to a component of a gas turbine engine in order to create two separate fit-for-purpose meshes from one source geometry. The first step in the process involved decomposing the component into regions of different geometric and meshing significance (Fig. 15
                           ).

Once this decomposition was achieved, two versions of Simulation Intent were applied to the model as detailed in Table 6
                           , resulting in two fit-for-purpose analysis meshes. In each case Simulation Intent was specified to control mesh type, dimensionality, sizing and interface handling.


                           Fig. 16
                            illustrates the two analysis meshes obtained from the two separate definitions of Simulation Intent. For the solid mesh (a), the long-slender regions had a hexahedral mesh swept along their length, the thin-sheet regions had a hexahedral mesh swept through their thickness and the complex regions had an unstructured tetrahedral mesh applied. For the mixed-dimensional mesh (b), the long-slender regions were meshed with beams, the thin-sheet regions with quadrilateral shell elements and the complex regions with unstructured tetrahedral elements.

A powerful enabler to this automatic meshing process was the ability to easily extract the interfaces between regions in the cellular model  [31]. These interfaces are crucial to coupling regions of different mesh strategies together appropriately. The nature of the coupling itself may be something specific to particular analysis types and organisations; however the identification of the interfaces provides all the input needed for automation. The cellular model not only eases the extraction of topological interfaces, but it can also provide the type of interface based on the assigned mesh attributes of adjacent regions e.g. a thin-sheet to beam interface. Furthermore, equivalencing was pivotal in identifying the topological entities on the lower dimensional regions to use for coupling operations, Fig. 16(c).

The application of the Simulation Intent concept to some specialist analysis features provides another example. Fig. 16 illustrates how Simulation Intent can be used to create fit-for-purpose fastener idealisations based on parameters specifying the analysis dimensionality of the fastener and the surrounding structure. The original model consists of two plates and three fastening rivets. The matrix gives a graphical representation of how the correct fastener representation is reasoned based on Simulation Intent. The interfaces used to form the connection between the rivets and the plates are automatically extracted from the cellular model.

The details of which fastener formulation should be utilised for any given scenario is something which will depend on a company’s approved methods. Simulation Intent offers the framework through which Methods Engineers can formally define the preferred formulations to be used. It may be possible that there are no approved methods in certain scenarios e.g. a full solid representation of the rivet would probably not be appropriate where a 2D representation of the plates has been used. Hence this cell is blank in Fig. 17
                           . Being able to record this fact using Simulation Intent is also useful.

@&#DISCUSSION@&#

Engineering companies, particularly in the automotive and aerospace sectors, are continuously increasing their use of simulation technology across multiple domains. Doing so, more of the design space can be explored in the same timeframe resulting in better optimised solutions.

Additionally there is a progression towards larger analysis models of larger systems. One reason for this is the improvement it offers in physical behaviour modelling. Behaviours and interactions, which are not well represented with individual component or sub-system models, can be better represented using a model of the entire system. Rolls-Royce is just one company that is making large ‘whole-system’ models a priority  [39]. Furthermore, there can be direct economic benefits in regulatory validation. The ability to have confidence that an aero-engine can survive a fan blade off event, negating the need to build and destroy multiple prototypes, could potentially save millions of pounds.

Until recently, such large analysis models would not have been achievable in a useful timescale, but advances in computing power have meant that solutions can be attained. However, this has placed an increasing focus on the pre-processing phase of the analysis process, where the analyst is not actively assessing performance and developing the product, but instead carrying out geometry preparation and model creation tasks. Aside from the delay these pre-processing steps cause in the overall design-evolution, analysts’ time is an expensive and finite resource, and reduction in repetitive pre-processing steps leads to more focus on product development i.e. adding value to the end product.

Much research has been conducted, some of which is outlined in Section  2, to improve the speed and efficiency of the individual pre-processing steps employed in the creation of suitable analysis models. However, these steps remain ad-hoc and often need to be repeated should aspects of the upstream CAD model change. An improved situation would see these pre-processing steps defined in a robust and reusable manner, with significantly reduced sensitivity to upstream design changes. An ideal solution would see them stored in a manner which can be understood and relayed to all major CAD and CAE packages. In this way, an analyst would need only to define his intentions once, eliminating expensive manual rework. In this work, the analyst’s intention has been termed the ‘Simulation Intent’.

A side effect of the current practice of case-by-case analyses set-up is the lack of traceability in the CAD to CAE process. An example is the use of geometry clean-up operations. Even when automated tools are used in clean-up, it can be difficult to see exactly what has taken place. For the purposes of quality control, the steps taken to clean-up CAD geometry should be clearly visible. The same principle applies to de-featuring operations. Furthermore, it can be impossible to make these operations visible outside the CAD or CAE package in which they were performed. Only when this traceability is in place can cross-platform reusability be achieved.

Other shortcomings identified when considering current analysis methodology include the lack of useful links between different analysis models arising from the same base CAD geometry. An analyst will typically expend effort applying the same boundary conditions to multiple representations of a component e.g. a preliminary shell model and a detailed solid model. If links existed between the seeding geometries for each of the downstream analysis models, boundary conditions and loads could more readily be transferred between them without manual effort. The Simulation Intent concept can be used to address these issues. Simulation Intent involves capturing the high-level modelling and idealisation decisions in order to create an efficient and fit-for-purpose analysis. It is accomplished by partitioning the design space into the collection of cells to which analysis attributes are applied, which is sufficient to unambiguously define all the required analysis models. Using the concept of equivalencing, all the different analysis representations of the same spatial region can be linked to one another, allowing analysis attributes and results to be seamlessly transferred back and forth. The region of space occupied by a given cell is the carrier for all the analysis representations. The approach separates the definition of the analysis from the operations required to produce an analysis input deck.

The partitioning of space will be different from that seen in a geometric model for manufacture. Subsets may be defined to allow a given analysis attribute to be applied to a specified area, supersets can be used as a hint (e.g. to mesh generators) that given topological elements do not need to be considered in some equivalent representation, and ‘parasite’ entities can be used as internal partitions of a given geometric cell.

Perhaps the greatest challenge for any organisation hoping to implement the Simulation Intent concept is the proposed change in geometric modelling methodology. The move to cellular modelling as the primary design tool is unrealistic in the short-term, since current commercial software assumes manifold representations. The immediate focus therefore needs to be the creation of cellular models from manifold assembly models, as outlined in  [40,31]. In this way, Simulation Intent could be introduced more rapidly into current design workflows in order to demonstrate its worth. The benefits of the global concept can still be reaped by this route, albeit with another process in the CAD to CAE chain.

One of the most significant shortcomings of current analysis methodology is the orientation of CAD models towards the manufacturing phase of the product lifecycle. Whilst the reasoning for this has been the historical precedence of CAM over CAE, that situation is rapidly changing and technology has not kept up. For many organisations CAE is becoming (or has already become) the central design director and a much larger phase of the design lifecycle. Furthermore, the increasing use of CFD has left these manufacturing-oriented CAD models deficient since fluid domains need to be generated manually from the relevant solid component/assembly. Hence, the need to find a better way of representing both solid and fluid geometry that can cater for both CAE and CAM is paramount. It has also been recognised that multiple analysis models are usually derived from one base design model. However, these models are rarely linked in any way, especially where multiple dimensionalities are involved. The lack of links makes the passing of loads, boundary conditions and results between representations a manual task. The third major weakness with current methodology is the lack of robustness in analysis model definition. Owing to the way in which meshes, boundary conditions, loads, etc. are defined, changes in underlying geometry can result in extensive manual rework before re-computing an analysis solution.

Simulation Intent has been devised to address these issues. It produces a framework to capture the analysis decisions which are being made, and through which the analysis decisions and methods used to implement them can be linked. As such, it has been shown that Simulation Intent can alter and enhance the role of Methods Engineers. Instead of issuing guidelines on how particular analysis types should be conducted, Simulation Intent can be provided to directly automate their creation. In this way, both the quality and repeatability of analyses are ensured. A key principle throughout has been generality; the ideas presented are independent of any particular CAD or CAE solution but applicable to many.

@&#CONCLUSIONS@&#

A new approach to CAD/CAE integration is outlined in this work and is termed ‘Simulation Intent’. The concept draws upon the strengths of three key technologies, Cellular Modelling, Equivalencing and Virtual Topology to provide a framework through which analysis models can be defined robustly at a high level.

By defining Simulation Intent, one is recording the high-level modelling and idealisation decisions required to create a given analysis model efficiently. These decisions are stored in a formal manner which allows many analysis models to be automatically derived based on the defined Simulation Intent. Examples have shown how the high-level Simulation Intent definition helps automate subsequent analysis procedures. The generic nature of the Simulation Intent framework enables it to be defined in an abstract manner, independent of CAD/CAE packages and even the associated geometric representations.

@&#ACKNOWLEDGEMENTS@&#

The research leading to these results has received funding from the European Community’s Seventh Framework Programme (FP7/2007-2013) under grant agreement no. 234344 (www.crescendo-fp7.eu). CMT was supported by a grant from the Northern Ireland Department for Employment and Learning (www.delni.gov.uk).

@&#REFERENCES@&#

