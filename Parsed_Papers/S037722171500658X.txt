@&#MAIN-TITLE@&#Optimizing dynamic investment decisions for railway systems protection

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           A bilevel model for optimizing security investments in railway systems is proposed.


                        
                        
                           
                           Two different decomposition approaches are used to solve the model.


                        
                        
                           
                           The dynamic security investment model is tested on the Kent, UK, railway network.


                        
                        
                           
                           Significant system flow loss reductions can be achieved with modest investments.


                        
                        
                           
                           The robustness of the approach to different disruption scenarios is analyzed.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Strategic planning

Transportation

Protection

Bilevel programming

Decomposition

@&#ABSTRACT@&#


               
               
                  Past and recent events have shown that railway infrastructure systems are particularly vulnerable to natural catastrophes, unintentional accidents and terrorist attacks. Protection investments are instrumental in reducing economic losses and preserving public safety. A systematic approach to plan security investments is paramount to guarantee that limited protection resources are utilized in the most efficient manner. In this paper, we present an optimization model to identify the railway assets which should be protected to minimize the impact of worst case disruptions on passenger flows. We consider a dynamic investment problem where protection resources become available over a planning horizon. The problem is formulated as a bilevel mixed-integer model and solved using two different decomposition approaches. Random instances of different sizes are generated to compare the solution algorithms. The model is then tested on the Kent railway network to demonstrate how the results can be used to support efficient protection decisions.
               
            

@&#INTRODUCTION@&#

Nowadays the social well-being of people highly relies on the well functioning of critical interconnected infrastructures such as transportation, information, telecommunication, and electric power systems. Planning and protecting infrastructure systems is a complex task, especially because of their dimension and interdependence. Even small random disruptions can severely affect the normal functioning of one or more infrastructure. Intelligent attacks or large natural catastrophes can have even more dramatic consequences in terms of both economic and life losses. Examples of such events include the 1995 Paris metro bombing, the 2004 Madrid train bombing, the 2005 London underground suicide attacks, and the 2010 Moscow bombing. Most recently, severe floods hit some western regions of the UK and forced the Network Rail to pay £12.5m for the suppressed services and further £15m to repair the infrastructure (Wintour & Topham, 2014). It is therefore paramount to protect infrastructure systems so that continuity in service provision and safety for the users can be guaranteed, even when disruptions occur.

A critical aspect in planning infrastructure protection is the scarce availability of protection resources. Protecting all the components of an infrastructure system to targeted safety levels may infact be cost prohibitive. For example, the Kent (UK) railway system serves 179 stations and has 1094 miles of tracks. Protecting every station and all the tracks is economically impossible. Another complicating factor in protecting railways is that they are open and easily accessible systems. This renders them highly vulnerable to all kinds of disruption and requires careful identification of suitable protection measures. These may include the structural reinforcement of vulnerable parts (tunnels and bridges), video surveillance of critical areas (crosses, stations) and the use of a wide range of sensors to detect intrusions and obstacles on tracks. Since resources are limited, it is important to identify and protect the most critical assets of the infrastructure.

In recent years, several mathematical models have been developed to identify systems’ vulnerabilities and plan protection strategies for critical infrastructures. Predominantly, interdiction and protection of infrastructure systems have been modeled using multi-level optimization. Multi-level optimization models represent an effective tool to “model a complete infrastructure system and its value to society, including how losses of the system’s assets reduce that value, or how improvements in the system mitigate lost value” (Brown, Carlyle, Salmeron, & Wood, 2006). These models are also referred to as defender–attacker models since they emulate the game between two actors with opposite aims. The defender’s aim is to distribute limited defence resources so as to minimize the effects of a worst case disruption. On the other hand, the attacker’s aim is to choose the attack plan which minimizes the system’s value (or maximize the system’s cost). The attacker is an intelligent actor who has perfect knowledge of the system and is always able to inflict the maximum damage. In other words, he is a proxy to model worse-case disruptions. Clearly this kind of models are very useful to simulate terrorist attacks and intentional disruptions. Nonetheless, given the criticality of infrastructure systems, protection efforts are often guided by risk-averse decision making criteria, thus making these models extremely valuable also for problems involving natural catastrophes.

A third actor, referred to as the system user, is often used in multi-level models to evaluate the system’s value after protection and interdiction. Bilevel attacker-user models are typically used to identify the vulnerabilities of a system, by highlighting the outcomes of a worst-case interdiction. Trilevel defender–attacker-user models are typically used to identify the system’s components that should be hardened or protected. Sometimes the models mirroring the actions of the attacker and the system user can be collapsed into a single model (Church, Scaparra, & Middleton, 2004; Losada, Scaparra, Church, & Daskin, 2012a), so that a single level model can represent an interdiction problem whereas a bilevel model can represent a protection problem.

The main contribution of this paper is to study a dynamic network protection problem. The model we present is quite general and, albeit designed for railway infrastructures, can be applied in other contexts as well. The model aims at distributing protection resources among the assets of a railway system so as to maximize its survivability after a worst case disruption. Generally, survivability can be described as “the capability of a system to fulfill its mission, in a timely manner, in the presence of attacks, failures, or accidents” (Ellison, Fisher, Linger, Lipson, & Longstaff, 1997). According to the specific context, network survivability can be measured using different metrics. For instance, for shortest-path based problems, the length of a path is the key measure to assess whether a network is vulnerable and reliable. To evaluate survivability, we use the same metric introduced by Myung and Kim (2004), Murray, Matisziw, and Grubesic (2007), Matisziw and Murray (2009) and Scaparra, Starita, Sterle, Setola, Sforza, Vittorini, and Pragliola (2015). In these works, network survivability is measured in terms of lost or unserved system flow. In our model, the flow between an origin and a destination node is considered lost if after a disruption affecting some network components, the two nodes are no longer connected or they are connected but the post-disruption service is significantly deteriorated (i.e., alternative routes are too long from a user’s perspective). In this case, in fact, rail network users may abandon the trip or resort to another mode of transport.

An important issue that should be taken into account when modelling protection efforts is that protection resources usually become available at different times. Our model addresses this issue by including a temporal component whereby the available budget for protection is spread over a planning horizon. This choice renders the model more applicable to real situations. In fact, public expenditures to protect and modernize critical infrastructures are usually set in spending reviews that cover a number of years. For instance, the last UK spending review (HM Treasury, 2013) allocated £100bn for the modernization of the energy and transportation sectors. This budget is spread over a five-year period (2015–2020). Similarly, after the 2013–2014 floods in the UK, £130m were allocated by the government to repair flood defences. Of the whole budget, £30m were made available in 2014, the rest in 2015 (Carrington & Weaver, 2014). In addition, the UK Department for Environment, Food and Rural Affairs (DEFRA) set out a six-year programme of capital investment to improve flood defences up to 2021, of £2.3bn. Fixed capital settlements were allocated for each year, although flexibility to move funds between years was allowed for effective delivery (DEFRA, 2015). These examples demonstrate that funds availability is often time-related. Consequently, prioritizing expenditures over time is key to the development of long-term, effective strategies for improving infrastructure’s security and resiliency. To respond to the practical planning needs of railway stakeholders and operators, we therefore propose a protection model that optimizes the allocation of scarce protection resources over time.

Our model builds upon and extends the static protection model proposed by Scaparra et al. (2015) by considering dynamic investments. The model has a bilevel structure where the aim of the upper level is to find the best allocation of protection resources over a planning horizon so as to minimize the amount of disrupted flow. The lower level is used to evaluate worse case losses in each time period in response to a given protection plan. The resulting multi-period bilevel model is significantly more difficult to solve than its static counterpart. To find optimal solutions to problem instances of realistic size, we propose two decomposition approaches tailored to the dynamic structure of the model and test them on a set of new, randomly generated instances. Given that the multi-period structure of the model can lead to solve the same lower level program multiple times in our iterative approaches, we streamline the algorithms by using efficient data structures, thus avoiding recomputing solutions already found. The use of this expedient proved to be extremely efficient and on some preliminary tests reduced the overall computing time of the decomposition methods by as much as 80 percent. Finally, some practical insights, including an analysis of dynamic investments, are discussed for a real network representing the railway infrastructure of Kent (UK).

The remainder of this paper is organized as follows. Section 2 provides a review of the literature related to this work. In Section 3, the bilevel formulation of DNP is introduced. Section 4 provides a description of the decomposition algorithms. In Section 5, we report computational results on two sets of random problems, while the results on the Kent case study are analyzed in Section 6. Some conclusive remarks are discussed in Section 7.

@&#BACKGROUND@&#

Since the seminal paper of Wollmer (1964), several papers have appeared in the literature which deal with network interdiction problems. The underlying idea of these models is to find the critical arcs and/or nodes of a network. An element is critical if, after interdiction, the performance of the network drops significantly. Therefore a key issue in these models is to identify a suitable metric to evaluate network performance.

One stream of the literature has analyzed the problem of finding the network components that, when interdicted, minimize the maximum flow between pairs of nodes (Wollmer, 1964). Wood (1993) introduced an integer programming formulation for this problem and extended the model by considering multiple resources and multiple commodities. Since real life interdiction problems are intrinsically characterized by uncertainty (what will the interdicted components be? when will they be interdicted? to what extent?), subsequent work has focused on problems including stochastic and probabilistic elements. For instance, Cormican, Morton, and Wood (1998) proposed a stochastic model aiming at minimizing the expected maximum flow on a network while taking into account that interdictions can be unsuccessful. They also considered further extensions in which arc capacities are random variables and multiple attacks on the same arc can be attempted. Lim and Smith (2007) worked on a multi commodity flow network, considering both discrete and continuous interdiction. Other recent network flow interdiction models can be found in Afshari Rad and Taghizadeh Kakhki (2013), Altner, Ergun, and Uhan (2010), and Royset and Wood (2007).

Another stream of the literature has focused on distance based networks. The models developed in this framework aim at identifying the elements that, if disrupted, maximize the distance, travel time or transportation cost between nodes. Fulkerson and Harding (1977) studied the interdiction problem in a shortest path network using continuous variables. Israeli and Wood (2002) formulated the same problem using binary interdiction variables and introduced different solution approaches. Hemmecke, Schultz, and Woodruff (2003) extended the problem to stochastic networks. Bayrak and Bailey (2008) studied the asymmetric interdiction problem, considering that the two actors have different levels of knowledge of the network.

A third stream has dealt with network connectivity. In these problems, the aim of the interdictor is to use offensive resources in order to reduce connectivity. Grubesic, Matisziw, Murray, and Snediker (2008) used graph theory to assess network connectivity and vulnerability. Several metrics to estimate the network connectivity have been proposed. Albert, Jeong, and Barabasi (2000) used the network diameter, Grubesic, O’Kelly, and Murray (2003) the degree of a node. Shen, Smith, and Goli (2012) used three different metrics: the number of connected components, the largest component size, and the minimum cost required to reconnect the graph after the loss of some nodes.

Interdiction models are a useful tool to identify infrastructure vulnerabilities and critical assets. However, protection decisions must be explicitly represented into a model to ensure that the most efficient resource allocation is identified. In fact, choosing the elements to protect from the interdiction set obtained by solving an attacker-user model may lead to sub-optimal solutions (Church & Scaparra, 2007). The literature stream dealing with protection models has mainly focused on facility protection in supply chain systems (Bricha & Nourelfath, 2015; Liberatore & Scaparra, 2011; Liberatore, Scaparra, & Daskin, 2012; Losada, Scaparra, & O’Hanley, 2012b; Scaparra & Church, 2008a). Only a few papers have dealt with protection issues in transportation networks. Cappanera and Scaparra (2011) analyzed a trilevel protection problem to study the optimal allocation of protection resources in shortest path networks. Yates and Sanjeevi (2013) studied a variation of the shortest path fortification problem where the aim of the interdictor is to travel across a network towards a precise target without being detected. The defender’s goal is to find the optimal allocation of protection devices to detect the intrusions. Du and Peeta (2014) presented a stochastic model to identify the optimal allocation of defense resources in order to minimize the post-disaster response time of a transportation network. Talarico, Reniers, Sörensen, and Springael (2015) proposed a model to allocate security resources in a multi-level chemical transportation network.

If we narrow the focus to the railway context, the number of papers dealing with protection is quite limited. Peterson and Church (2008) introduced a framework to assess the vulnerability of rail networks and apply it to the State of Washington infrastructure. Laporte, Mesa, and Perea (2010) proposed a model to design a robust railway transit network maximizing its minimum utility (e.g., trip coverage) when one link can fail. This model was later extended by Perea and Puerto (2013).

The allocation of defensive and offensive resources over time has recently been analyzed by a few researchers within a game theoretic framework. The majority of these models focused on the protection and disruption of a single target. For example, Levitin and Hausken (2010) proposed a defender–attacker model where the attacker can launch sequential attacks. Hausken and Zhuang (2011a) considered a government–terrorist game over multiple time periods, where the terrorist can stockpile its resources for later attacks and the government can allocate resources for defending the asset or attack the terrorist’s resources. Other single-asset sequential defender–attacker problems can be found in Hausken and Zhuang (2011b), Hausken and Zhuang (2012), and Levitin and Hausken (2012a). A multiple-target version of these problems has been considered in Levitin and Hausken (2009), who studied the problem of protecting identical elements in a parallel system against two sequential attacks. Levitin and Hausken (2012b) extended this model by including the possibility of imperfect detection of the first attack outcomes. In Levitin and Hausken (2013) both the attacker and the defender can stockpile their resources over a planning horizon. Note that the game-theoretic approach used in this literature stream is quite different from our approach in that the problems are represented as a two-stage game and require a closed-form analytic solution for the identification of Nash equilibria. These solutions cannot always be easily identified and, consequently, the application of these models is often limited to simple problems (i.e., small systems or problems with a single target or only two time periods). On the contrary, our proposed approaches, based on the use of sophisticated decomposition techniques for solving mixed-integer bilevel programs, are able to solve problems where all of the network components (nodes and arcs) can be protected and interdicted, the planning horizon can include several time periods, and the networks have realistic sizes.

We consider an undirected graph 
                        
                           G
                           =
                           (
                           N
                           ,
                           A
                           )
                        
                      representing the transportation network. In a railway network, the nodes represent the stations and the arcs are the tracks connecting the nodes. Assumptions, parameters and decision variables are introduced below:

                        
                           (a)
                           The problem is studied over a planning horizon represented by the set 
                                 
                                    T
                                    =
                                    {
                                    0
                                    ,
                                    1
                                    ,
                                    …
                                    ,
                                    
                                       T
                                       ^
                                    
                                    }
                                 
                              .

Interdiction is complete (i.e., an interdicted component is completely unusable in the time period when interdiction takes place).

A protected element becomes completely immune to interdiction. Therefore the same element does not need to be protected more than once in the planning horizon. Both arcs and nodes can be disrupted and protected. This assumption is made to contemplate the possibility of disruptions of tracks, tunnels, bridges and stations at the same time.

Each element has a different protection cost and there is a limited protection budget in each time period. Any unutilized budget can be carried forward to the next time period.

In each time period, interdiction resources are limited and the amount of resources needed to disrupt a component varies according to the component size and topology.

In case of disruption, system users are willing to use alternative paths to reach their destinations only if they are not significantly longer than their shortest route. We refer to these alternative routes as acceptable paths. All the paths that establish connectivity between two nodes s and d are computed in a preprocessing phase. The paths that are too long from a user perspective are then removed from further considerations. This evaluation is done by comparing each path with the shortest one: all paths exceeding a given length threshold are discarded.

The daily traffic flow between any two nodes is known with certainty and the flow matrix is symmetric.

The bilevel model for DNP uses the following notation.


                     Indices, sets and parameters
                  


                     s ∈ N: index used for flow sources.


                     d ∈ N: index used for flow destinations.


                     i ∈ N: index used for network nodes.


                     j ∈ A: index used for network arcs.


                     t, u ∈ T: index used for time periods.


                     fsd
                     : traffic demand between s and d.


                     Nsd
                     : set of acceptable paths that connect s and d.


                     r ∈ Nsd
                     : index used for network paths.


                     N(r): set of nodes along path r.


                     A(r): set of arcs along path r.


                     qt
                     : cumulative protection budget available up to period t.


                     pt
                     : amount of interdiction resources in period t.


                     
                        
                           
                              q
                              i
                              n
                           
                           :
                        
                      estimate of the amount of resources needed to protect node i.


                     
                        
                           
                              p
                              i
                              n
                           
                           :
                        
                      estimate of the amount of resources needed to disrupt node i.


                     
                        
                           
                              q
                              j
                              a
                           
                           :
                        
                      estimate of the amount of resources needed to protect arc j.


                     
                        
                           
                              p
                              j
                              a
                           
                           :
                        
                      estimate of the amount of resources needed to disrupt arc j.


                     λt
                     : weight used in the objective function to give different importance to the time periods.


                     Decision variables
                  


                     
                        
                           
                              X
                              
                                 i
                                 t
                              
                              n
                           
                           =
                           1
                        
                      if node i is disabled in period t; 0 otherwise.


                     
                        
                           
                              X
                              
                                 j
                                 t
                              
                              a
                           
                           =
                           1
                        
                      if arc j is disabled in period t; 0 otherwise.


                     
                        
                           
                              Y
                              
                                 i
                                 t
                              
                              n
                           
                           =
                           1
                        
                      if node i is protected in period t; 0 otherwise.


                     
                        
                           
                              Y
                              
                                 j
                                 t
                              
                              a
                           
                           =
                           1
                        
                      if arc j is protected in period t; 0 otherwise.


                     
                        
                           
                              Z
                              
                                 s
                                 d
                                 t
                              
                           
                           =
                           1
                        
                      if the flow between s and d is unserved in period t; 0 otherwise.

The DNP can be formulated as follows.

                        
                           (1)
                           
                              
                                 
                                    [
                                    DNP
                                    ]
                                 
                                 
                                 
                                    min
                                    Y
                                 
                                 F
                                 
                                    (
                                    Y
                                    )
                                 
                              
                           
                        
                     
                     
                        
                           (2)
                           
                              
                                 
                                    s
                                    .
                                    t
                                    .
                                 
                                 
                                 
                                    ∑
                                    
                                       u
                                       =
                                       1
                                    
                                    t
                                 
                                 
                                    (
                                    
                                       ∑
                                       
                                          i
                                          ∈
                                          N
                                       
                                    
                                    
                                       q
                                       i
                                       n
                                    
                                    
                                       Y
                                       
                                          i
                                          u
                                       
                                       n
                                    
                                    +
                                    
                                       ∑
                                       
                                          j
                                          ∈
                                          A
                                       
                                    
                                    
                                       q
                                       j
                                       a
                                    
                                    
                                       Y
                                       
                                          j
                                          u
                                       
                                       a
                                    
                                    )
                                 
                                 ≤
                                 
                                    q
                                    t
                                 
                                 
                                 ∀
                                 t
                                 ∈
                                 T
                              
                           
                        
                     
                     
                        
                           (3)
                           
                              
                                 
                                    Y
                                    
                                       i
                                       t
                                    
                                    n
                                 
                                 ∈
                                 
                                    {
                                    0
                                    ,
                                    1
                                    }
                                 
                                 
                                 ∀
                                 i
                                 ∈
                                 N
                                 ,
                                 ∀
                                 t
                                 ∈
                                 T
                              
                           
                        
                     
                     
                        
                           (4)
                           
                              
                                 
                                    Y
                                    
                                       j
                                       t
                                    
                                    a
                                 
                                 ∈
                                 
                                    {
                                    0
                                    ,
                                    1
                                    }
                                 
                                 
                                 ∀
                                 j
                                 ∈
                                 A
                                 ,
                                 ∀
                                 t
                                 ∈
                                 T
                              
                           
                        
                     
                     
                        
                           (5)
                           
                              
                                 
                                    where
                                 
                                 
                                 F
                                 
                                    (
                                    Y
                                    )
                                 
                                 =
                                 
                                    max
                                    X
                                 
                                 
                                    ∑
                                    
                                       t
                                       ∈
                                       T
                                    
                                 
                                 
                                    λ
                                    t
                                 
                                 
                                    ∑
                                    s
                                 
                                 
                                    ∑
                                    d
                                 
                                 
                                    f
                                    
                                       s
                                       d
                                    
                                 
                                 
                                    Z
                                    
                                       s
                                       d
                                       t
                                    
                                 
                              
                           
                        
                     
                     
                        
                           (6)
                           
                              
                                 
                                    s
                                    .
                                    t
                                    .
                                 
                                 
                                 
                                    X
                                    
                                       i
                                       t
                                    
                                    n
                                 
                                 ≤
                                 1
                                 −
                                 
                                    ∑
                                    
                                       u
                                       =
                                       1
                                    
                                    t
                                 
                                 
                                    Y
                                    
                                       i
                                       u
                                    
                                    n
                                 
                                 
                                 ∀
                                 i
                                 ∈
                                 N
                                 ,
                                 ∀
                                 t
                                 ∈
                                 T
                              
                           
                        
                     
                     
                        
                           (7)
                           
                              
                                 
                                    X
                                    
                                       j
                                       t
                                    
                                    a
                                 
                                 ≤
                                 1
                                 −
                                 
                                    ∑
                                    
                                       u
                                       =
                                       1
                                    
                                    t
                                 
                                 
                                    Y
                                    
                                       j
                                       u
                                    
                                    a
                                 
                                 
                                 ∀
                                 j
                                 ∈
                                 A
                                 ,
                                 ∀
                                 t
                                 ∈
                                 T
                              
                           
                        
                     
                     
                        
                           (8)
                           
                              
                                 
                                    ∑
                                    
                                       i
                                       ∈
                                       N
                                    
                                 
                                 
                                    p
                                    i
                                    n
                                 
                                 
                                    X
                                    
                                       i
                                       t
                                    
                                    n
                                 
                                 +
                                 
                                    ∑
                                    
                                       j
                                       ∈
                                       A
                                    
                                 
                                 
                                    p
                                    j
                                    a
                                 
                                 
                                    X
                                    
                                       j
                                       t
                                    
                                    a
                                 
                                 ≤
                                 
                                    p
                                    t
                                 
                                 
                                 ∀
                                 t
                                 ∈
                                 T
                              
                           
                        
                     
                     
                        
                           (9)
                           
                              
                                 
                                    ∑
                                    
                                       i
                                       ∈
                                       N
                                       (
                                       r
                                       )
                                    
                                 
                                 
                                    X
                                    
                                       i
                                       t
                                    
                                    n
                                 
                                 +
                                 
                                    ∑
                                    
                                       j
                                       ∈
                                       A
                                       (
                                       r
                                       )
                                    
                                 
                                 
                                    X
                                    
                                       j
                                       t
                                    
                                    a
                                 
                                 ≥
                                 
                                    Z
                                    
                                       s
                                       d
                                       t
                                    
                                 
                                 
                                 ∀
                                 s
                                 ,
                                 d
                                 ∈
                                 N
                                 ,
                                 r
                                 ∈
                                 
                                    N
                                    
                                       s
                                       d
                                    
                                 
                                 ,
                                 ∀
                                 t
                                 ∈
                                 T
                              
                           
                        
                     
                     
                        
                           (10)
                           
                              
                                 
                                    X
                                    
                                       i
                                       t
                                    
                                    n
                                 
                                 ∈
                                 
                                    {
                                    0
                                    ,
                                    1
                                    }
                                 
                                 
                                 ∀
                                 i
                                 ∈
                                 N
                                 ,
                                 ∀
                                 t
                                 ∈
                                 T
                              
                           
                        
                     
                     
                        
                           (11)
                           
                              
                                 
                                    X
                                    
                                       j
                                       t
                                    
                                    a
                                 
                                 ∈
                                 
                                    {
                                    0
                                    ,
                                    1
                                    }
                                 
                                 
                                 ∀
                                 j
                                 ∈
                                 A
                                 ,
                                 ∀
                                 t
                                 ∈
                                 T
                              
                           
                        
                     
                     
                        
                           (12)
                           
                              
                                 
                                    Z
                                    
                                       s
                                       d
                                       t
                                    
                                 
                                 ∈
                                 
                                    {
                                    0
                                    ,
                                    1
                                    }
                                 
                                 
                                 ∀
                                 s
                                 ,
                                 d
                                 ∈
                                 N
                                 ,
                                 ∀
                                 t
                                 ∈
                                 T
                                 .
                              
                           
                        
                     
                  

In the bilevel model above, the leader seeks the optimal protection strategy to minimize the function F 
                     (1), which represents the weighted sum of demand that cannot be served after interdiction, over the planning horizon. Constraint (2) represents the budget limit: the amount of resources utilized up to period t for nodes and arcs protection cannot exceed the available cumulative budget qt
                     . Constraints (3) and (4) are the binary requirements for the protection variables. The lower level program (5)–(12) is the interdiction model. The follower seeks the attack strategy that maximizes the overall amount of unserved demand (5). Constraints (6) state that a node cannot be disrupted at period t, if it is protected in the time window 
                        
                           {
                           1
                           ,
                           …
                           ,
                           t
                           }
                        
                     . Similarly, constraints (7) state that an arc cannot be disrupted at period t, if it is protected in the time window 
                        
                           {
                           1
                           ,
                           …
                           ,
                           t
                           }
                        
                     . Constraints (8) set a limit on the interdiction resources available in each time period. Constraints (9) state that the demand between s and d is unserved in period t (
                        
                           
                              Z
                              
                                 s
                                 d
                                 t
                              
                           
                           =
                           1
                        
                     ), only if all the acceptable paths connecting the two nodes are disrupted at period t. This occurs if at least one node or arc on each path is disabled. Finally, constraints (10)–(12) enforce binary restrictions on the lower level variables.

Multi-level models are generally very difficult to solve. Hansen, Jaumard, and Savard (1992) proved that even the simplest bilevel models, the ones with continuous variables on every level, are strongly NP-hard. Several solution approaches have been studied in the literature, including both heuristic techniques and exact methods. Examples of heuristic approaches can be found in Aksen, Şengul Akca, and Aras (2014); Aksen and Aras (2013); Aksen, Aras, and Piyade (2013); Parvaresh, Hashemi Golpayegany, Moattar Husseini, and Karimi (2013). Exact methods can be broadly classified into reformulation, enumeration and decomposition methods (Saharidis & Ierapetritou, 2009). Reformulation and enumeration techniques are usually only applicable to bilevel problems with linear lower level programs. A few exceptions to this are the reformulation of the p-median interdiction problem with fortification (Scaparra & Church, 2008b) and the implicit enumeration algorithm used to solve several protection-interdiction problems (Cappanera & Scaparra, 2011; Liberatore et al., 2012). In general, the most effective methods for tackling problems with discrete variables in both levels are decomposition methods. These directly exploit the decomposable structure of the model and solve a series of smaller sub-problems to find an overall optimal solution.

In this paper, we present two different decomposition approaches for DNP. The first is based on the use of Benders cuts. Benders decomposition has been widely used in the literature to deal with large-scale MILP problems (Benders, 1962). More recently, the use of Benders-like decomposition algorithms has been extended to multi-level programs (Israeli & Wood, 2002; Losada et al., 2012b; O’Hanley & Church, 2011). The second approach utilizes special cutting planes known as Super Valid Inequalities (SVIs). An SVI is a cutting plane that reduces the feasible region without excluding any optimal solution unless the incumbent solution is itself optimal. SVIs were initially introduced by Israeli and Wood (2002) to speed up a Benders decomposition approach. SVIs were also used explicitly as a stand alone solution method in O’Hanley and Church (2011) and in Losada et al. (2012b).

In all our decomposition approaches, DNP is split into two connected subproblems referred to as the Restricted Master Problem (RMP) and the SubProblem (SP). These subproblems are solved alternatively until the algorithms converge to an optimal solution. The RMP entails decisions about what to protect to thwart the most disruptive interdiction plans identified in previous iterations. At each iteration, the most disruptive interdiction plan in response to a given protection strategy is identified by solving SP, which is the interdiction problem (5)–(12) with the protection variables fixed to the feasible values identified by the current RMP’s solution. The solution to the SP is then used to generate either Benders or SVIs cuts to be appended to the RMP and the process is iterated.

The description of the decomposition methods uses the following additional notation.


                     w: iterations index.


                     
                        
                           
                              
                                 Y
                                 ^
                              
                              w
                           
                           =
                           
                              [
                              
                                 
                                    Y
                                    ^
                                 
                                 w
                                 n
                              
                              ,
                              
                                 
                                    Y
                                    ^
                                 
                                 w
                                 a
                              
                              ]
                           
                           :
                        
                      RMP’s solution at iteration w. This vector holds the values of the protection variables 
                        
                           Y
                           
                              i
                              t
                           
                           n
                        
                      and 
                        
                           
                              Y
                              
                                 j
                                 t
                              
                              a
                           
                           .
                        
                     
                  


                     
                        
                           
                              
                                 
                                    Z
                                    ^
                                 
                                 w
                              
                              
                                 
                                    X
                                    ^
                                 
                                 w
                              
                           
                           :
                        
                      SP’s optimal response plan given protection strategy 
                        
                           
                              Y
                              ^
                           
                           w
                        
                     . This vector holds the values of the variables Zsdt
                     , 
                        
                           
                              X
                              
                                 i
                                 t
                              
                              n
                           
                           ,
                        
                      and 
                        
                           X
                           
                              j
                              t
                           
                           a
                        
                     .


                     
                        
                           
                              
                                 Z
                                 ^
                              
                              w
                           
                           :
                        
                      sub-vector of 
                        
                           
                              
                                 Z
                                 ^
                              
                              w
                           
                           
                              
                                 X
                                 ^
                              
                              w
                           
                        
                      holding the variables Zsdt
                     .


                     
                        
                           
                              
                                 X
                                 ^
                              
                              w
                           
                           =
                           
                              [
                              
                                 
                                    X
                                    ^
                                 
                                 w
                                 n
                              
                              ,
                              
                                 
                                    X
                                    ^
                                 
                                 w
                                 a
                              
                              ]
                           
                           :
                        
                      sub-vector of 
                        
                           
                              
                                 Z
                                 ^
                              
                              w
                           
                           
                              
                                 X
                                 ^
                              
                              w
                           
                        
                      holding the variables 
                        
                           X
                           
                              i
                              t
                           
                           n
                        
                      and 
                        
                           X
                           
                              j
                              t
                           
                           a
                        
                     .

Given a protection strategy 
                        
                           
                              
                                 Y
                                 ^
                              
                              w
                           
                           ,
                        
                      the subproblem SP, which is the same for both the approaches, is simply:


                     
                        
                           [
                           SP
                           
                              (
                              
                                 
                                    Y
                                    ^
                                 
                                 w
                              
                              )
                           
                           ]
                        
                     
                     
                        
                           (13)
                           
                              
                                 
                                    max
                                    X
                                 
                                 
                                    ∑
                                    
                                       t
                                       ∈
                                       T
                                    
                                 
                                 
                                    λ
                                    t
                                 
                                 
                                    ∑
                                    s
                                 
                                 
                                    ∑
                                    d
                                 
                                 
                                    f
                                    
                                       s
                                       d
                                    
                                 
                                 
                                    Z
                                    
                                       s
                                       d
                                       t
                                    
                                 
                              
                           
                        
                     
                     
                        
                           (14)
                           
                              
                                 
                                    s
                                    .
                                    t
                                    .
                                 
                                 
                                 
                                    X
                                    
                                       i
                                       t
                                    
                                    n
                                 
                                 ≤
                                 1
                                 −
                                 
                                    ∑
                                    
                                       u
                                       =
                                       1
                                    
                                    t
                                 
                                 
                                    
                                       Y
                                       ^
                                    
                                    
                                       i
                                       u
                                       w
                                    
                                    n
                                 
                                 
                                 ∀
                                 i
                                 ∈
                                 N
                                 ,
                                 ∀
                                 t
                                 ∈
                                 T
                              
                           
                        
                     
                     
                        
                           (15)
                           
                              
                                 
                                    X
                                    
                                       j
                                       t
                                    
                                    a
                                 
                                 ≤
                                 1
                                 −
                                 
                                    ∑
                                    
                                       u
                                       =
                                       1
                                    
                                    t
                                 
                                 
                                    
                                       Y
                                       ^
                                    
                                    
                                       j
                                       u
                                       w
                                    
                                    a
                                 
                                 
                                 ∀
                                 j
                                 ∈
                                 A
                                 ,
                                 ∀
                                 t
                                 ∈
                                 T
                              
                           
                        
                     
                     
                        
                           
                              
                                 (
                                 8
                                 )
                                 −
                                 (
                                 12
                                 )
                              
                           
                        
                     
                  

By solving this model to optimality, we obtain a feasible solution, 
                        
                           [
                           
                              
                                 Y
                                 ^
                              
                              w
                           
                           ,
                           
                           
                              
                                 
                                    Z
                                    ^
                                 
                                 w
                              
                              
                                 
                                    X
                                    ^
                                 
                                 w
                              
                           
                           ]
                           ,
                        
                      for DNP and an upper bound to its objective. In addition, the optimal response strategy 
                        
                           
                              X
                              ^
                           
                           w
                        
                      can be used to generate cutting planes for the RMP, as described in the following sections.

The Benders decomposition algorithm uses the following additional notation.


                        artw
                        : number of different elements along path r which are interdicted at time t in the interdiction plan identified at iteration w.


                        
                           
                              
                                 
                                    Z
                                    ¯
                                 
                                 w
                              
                              =
                              
                                 {
                                 
                                    (
                                    s
                                    ,
                                    d
                                    ,
                                    t
                                    )
                                 
                                 ∈
                                 N
                                 ×
                                 N
                                 ×
                                 T
                                 
                                 |
                                 
                                 
                                    Z
                                    
                                       s
                                       d
                                       t
                                       w
                                    
                                 
                                 =
                                 1
                                 }
                              
                           
                        : indices of the disrupted flows at iteration w.


                        Qrtw
                        : binary variable which takes value 1 if the interdiction of path r at time t in iteration w is thwarted; 0 otherwise.


                        Qsdtw
                        : binary variable which takes value 1 if the interdiction of the flow from s to d at time t in iteration w is thwarted; 0 otherwise.

In BND-D, the RMP at iteration 
                           
                              w
                              ¯
                           
                         is a mixed-integer program defined as follows:


                        
                           
                              [
                              R
                              M
                              P
                              
                                 (
                                 
                                    w
                                    ¯
                                 
                                 )
                              
                              ]
                           
                        
                        
                           
                              (16)
                              
                                 
                                    
                                    
                                       min
                                       Y
                                    
                                    z
                                 
                              
                           
                        
                        
                           
                              
                                 
                                    
                                       s
                                       .
                                       t
                                       .
                                    
                                    
                                    (
                                    2
                                    )
                                    −
                                    (
                                    4
                                    )
                                 
                              
                           
                        
                        
                           
                              (17)
                              
                                 
                                    z
                                    ≥
                                    
                                       ∑
                                       
                                          
                                             (
                                             s
                                             ,
                                             d
                                             ,
                                             t
                                             )
                                          
                                          ∈
                                          
                                             
                                                Z
                                                ¯
                                             
                                             w
                                          
                                       
                                    
                                    
                                       λ
                                       t
                                    
                                    
                                       (
                                       
                                          f
                                          
                                             s
                                             d
                                          
                                       
                                       
                                          (
                                          1
                                          −
                                          
                                             Q
                                             
                                                s
                                                d
                                                t
                                                w
                                             
                                          
                                          )
                                       
                                       )
                                    
                                    
                                    ∀
                                    w
                                    ∈
                                    
                                       [
                                       1
                                       ,
                                       
                                          w
                                          ¯
                                       
                                       ]
                                    
                                 
                              
                           
                        
                        
                           
                              (18)
                              
                                 
                                    
                                       
                                       
                                       
                                          
                                             
                                                ∑
                                                
                                                   i
                                                   ∈
                                                   N
                                                   (
                                                   r
                                                   )
                                                
                                             
                                             
                                             
                                                
                                                   X
                                                   ^
                                                
                                                
                                                   i
                                                   t
                                                   w
                                                
                                                n
                                             
                                             
                                                ∑
                                                
                                                   u
                                                   =
                                                   1
                                                
                                                t
                                             
                                             
                                                Y
                                                
                                                   i
                                                   u
                                                
                                                n
                                             
                                             +
                                             
                                                ∑
                                                
                                                   j
                                                   ∈
                                                   A
                                                   (
                                                   r
                                                   )
                                                
                                             
                                             
                                             
                                                
                                                   X
                                                   ^
                                                
                                                
                                                   j
                                                   t
                                                   w
                                                
                                                a
                                             
                                             
                                                ∑
                                                
                                                   u
                                                   =
                                                   1
                                                
                                                t
                                             
                                             
                                                Y
                                                
                                                   j
                                                   u
                                                
                                                a
                                             
                                             ≥
                                             
                                             
                                                a
                                                
                                                   r
                                                   t
                                                   w
                                                
                                             
                                             
                                             
                                                Q
                                                
                                                   r
                                                   t
                                                   w
                                                
                                             
                                          
                                       
                                    
                                    
                                       
                                       
                                       
                                          
                                             
                                             ∀
                                             s
                                             ∈
                                             N
                                             ,
                                             d
                                             ∈
                                             N
                                             ,
                                             t
                                             ∈
                                             T
                                             :
                                             
                                                (
                                                s
                                                ,
                                                d
                                                ,
                                                t
                                                )
                                             
                                             ∈
                                             
                                                
                                                   Z
                                                   ¯
                                                
                                                w
                                             
                                             ,
                                             ∀
                                             r
                                             ∈
                                             
                                                N
                                                
                                                   s
                                                   d
                                                
                                             
                                             ,
                                             ∀
                                             w
                                             ∈
                                             
                                                [
                                                1
                                                ,
                                                
                                                   w
                                                   ¯
                                                
                                                ]
                                             
                                          
                                       
                                    
                                 
                              
                           
                        
                        
                           
                              (19)
                              
                                 
                                    
                                       ∑
                                       
                                          r
                                          ∈
                                          
                                             N
                                             
                                                s
                                                d
                                             
                                          
                                       
                                    
                                    
                                    
                                       Q
                                       
                                          r
                                          t
                                          w
                                       
                                    
                                    ≥
                                    
                                    
                                       Q
                                       
                                          s
                                          d
                                          t
                                          w
                                       
                                    
                                    
                                    ∀
                                    s
                                    ∈
                                    N
                                    ,
                                    d
                                    ∈
                                    N
                                    ,
                                    t
                                    ∈
                                    T
                                    :
                                    
                                       (
                                       s
                                       ,
                                       d
                                       ,
                                       t
                                       )
                                    
                                    ∈
                                    
                                       
                                          Z
                                          ¯
                                       
                                       w
                                    
                                    ,
                                    ∀
                                    w
                                    ∈
                                    
                                       [
                                       1
                                       ,
                                       
                                          w
                                          ¯
                                       
                                       ]
                                    
                                 
                              
                           
                        
                        
                           
                              (20)
                              
                                 
                                    
                                       
                                       
                                       
                                          
                                             
                                                Q
                                                
                                                   r
                                                   t
                                                   w
                                                
                                             
                                             ∈
                                             
                                                {
                                                0
                                                ,
                                                1
                                                }
                                             
                                             ∀
                                             s
                                             ∈
                                             N
                                             ,
                                             d
                                             ∈
                                             N
                                             ,
                                             t
                                             ∈
                                             T
                                             :
                                             
                                                (
                                                s
                                                ,
                                                d
                                                ,
                                                t
                                                )
                                             
                                             ∈
                                             
                                                
                                                   Z
                                                   ¯
                                                
                                                w
                                             
                                             ,
                                             ∀
                                             r
                                             ∈
                                             
                                                N
                                                
                                                   s
                                                   d
                                                
                                             
                                             ,
                                          
                                       
                                    
                                    
                                       
                                       
                                       
                                          
                                             
                                             ∀
                                             w
                                             ∈
                                             
                                                [
                                                1
                                                ,
                                                
                                                   w
                                                   ¯
                                                
                                                ]
                                             
                                          
                                       
                                    
                                 
                              
                           
                        
                        
                           
                              (21)
                              
                                 
                                    
                                       Q
                                       
                                          s
                                          d
                                          t
                                          w
                                       
                                    
                                    ∈
                                    
                                       {
                                       0
                                       ,
                                       1
                                       }
                                    
                                    
                                    ∀
                                    
                                       (
                                       s
                                       ,
                                       d
                                       ,
                                       t
                                       )
                                    
                                    ∈
                                    
                                    
                                       
                                          Z
                                          ¯
                                       
                                       w
                                    
                                    ,
                                    ∀
                                    w
                                    ∈
                                    
                                       [
                                       1
                                       ,
                                       
                                          w
                                          ¯
                                       
                                       ]
                                    
                                 
                              
                           
                        
                        
                           
                              (22)
                              
                                 
                                    z
                                    ∈
                                    
                                       R
                                       +
                                    
                                    .
                                 
                              
                           
                        
                     

The aim of the objective function (16) is to find the best protection strategy that thwarts the interdiction plans identified in the previous iterations. Constraints (17) are called Benders cuts. They are lower bounds to the objective function z generated by all the interdiction strategies found in the previous iterations. Constraints (18) represent the relationship between the variables Qrtw
                         and the protection variables. Specifically, they state that a path r connecting s and d can no longer be disrupted at time t by the interdiction strategy 
                           
                              
                                 X
                                 ^
                              
                              w
                           
                         (i.e., 
                           
                              
                                 Q
                                 
                                    r
                                    t
                                    w
                                 
                              
                              =
                              1
                           
                        ), if all its interdicted arcs and nodes are protected either at time t or in some time period prior to t. Constraints (19) state that the interdiction of the flow between s and d at time t in iteration w can be thwarted (i.e., 
                           
                              
                                 Q
                                 
                                    s
                                    d
                                    t
                                    w
                                 
                              
                              =
                              1
                           
                        ) only if the protection strategy thwarts the interdiction of at least one acceptable path r connecting s and d at time t. If atleast one path is not disrupted, then the objective function pushes the variable Qsdtw
                         to take value 1 and the flow fsd
                         at time t is no longer considered unserved in (17). Finally, constraints (20) and (21) represent the binary requirements for the variables Qrtw
                         and Qsdtw
                         and constraint (22) states that variable z is a non negative real.

The pseudo-code of BND-D is displayed below.

The solution of the SP provides an upper bound to the DNP. Conversely, the solution of the RMP is a lower bound for the DNP (the RMP is in fact a relaxation of DNP as it only includes a subset of all possible interdiction plans). When the two sub-problems have the same objective function value, the algorithm stops. It is easy to prove that BND-D converges in a finite number of iterations. The resource constraints, in fact, guarantee that the number of interdiction and protection strategies is finite.

The basic idea behind this approach is that, to thwart a worst-case interdiction and hence lower the objective function value of the follower, the protection strategy must include atleast one element belonging to the optimal interdiction set (Church & Scaparra, 2007). Our SVIs embed this idea by enforcing the protection of atleast one of the arcs or one of the nodes interdicted in the current follower response 
                           
                              
                                 X
                                 ^
                              
                              w
                           
                        . More specifically, the SVI generated at each iteration w is:

                           
                              (23)
                              
                                 
                                    S
                                    V
                                    I
                                    
                                       (
                                       
                                          
                                             X
                                             ^
                                          
                                          w
                                       
                                       )
                                    
                                    :
                                    
                                       ∑
                                       i
                                    
                                    
                                       ∑
                                       t
                                    
                                    
                                       
                                          X
                                          ^
                                       
                                       
                                          i
                                          t
                                          w
                                       
                                       n
                                    
                                    
                                       ∑
                                       
                                          u
                                          =
                                          1
                                       
                                       t
                                    
                                    
                                       Y
                                       
                                          i
                                          u
                                       
                                       n
                                    
                                    +
                                    
                                       ∑
                                       j
                                    
                                    
                                       ∑
                                       t
                                    
                                    
                                       
                                          X
                                          ^
                                       
                                       
                                          j
                                          t
                                          w
                                       
                                       a
                                    
                                    
                                       ∑
                                       
                                          u
                                          =
                                          1
                                       
                                       t
                                    
                                    
                                       Y
                                       
                                          j
                                          u
                                       
                                       a
                                    
                                    ≥
                                    1
                                    .
                                 
                              
                           
                        
                     

This inequality states that at least one interdicted component in 
                           
                              
                                 X
                                 ^
                              
                              w
                           
                         must be protected, either at time t or in a previous time period.

At each iteration w, the RMP for SVI-D is simply a feasibility seeking problem, including constraints 
                           
                              (
                              2
                              )
                              −
                              (
                              4
                              )
                           
                         and all the SVIs generated up to the current iteration. If a feasible solution to the RMP can be identified, SP is solved again with the new protection strategy 
                           
                              
                                 Y
                                 ^
                              
                              w
                           
                         as input and the process is repeated. The algorithm stops when in the master model the protection resources are insufficient to thwart all the interdiction strategies discovered in the previous iterations, and thus the RMP becomes infeasible. Considering that the protection and interdiction resources are limited, the number of possible strategies is finite. Consequently, the RMP will become infeasible after a finite number of iterations.

The fact that inequalities (23) are supervalid is proven in the following proposition.

                           Proposition
                           
                              
                                 
                                    S
                                    V
                                    I
                                    (
                                    
                                       
                                          X
                                          ^
                                       
                                       w
                                    
                                    )
                                 
                               is supervalid.

Let 
                                 
                                    [
                                    
                                       
                                          Y
                                          ^
                                       
                                       w
                                    
                                    ,
                                    
                                    
                                       
                                          
                                             Z
                                             ^
                                          
                                          w
                                       
                                       
                                          
                                             X
                                             ^
                                          
                                          w
                                       
                                    
                                    ]
                                 
                               be the feasible solution of DNP found at iteration w. If this solution is optimal, then by definition inequality (23) is super-valid. If the solution is sub-optimal, adding inequality (23) to the RMP problem will generate a new protection strategy 
                                 
                                    
                                       
                                          Y
                                          ^
                                       
                                       
                                          w
                                          +
                                          1
                                       
                                    
                                    ≠
                                    
                                       
                                          Y
                                          ^
                                       
                                       w
                                    
                                 
                              . This strategy will in turn lead to a solution 
                                 
                                    
                                       
                                          Z
                                          ^
                                       
                                       
                                          w
                                          +
                                          1
                                       
                                    
                                    
                                       
                                          X
                                          ^
                                       
                                       
                                          w
                                          +
                                          1
                                       
                                    
                                 
                               of the SP that is different from the previous one because of constraints (14) and (15). Thus, for every w, the inequality is super-valid because it eliminates the incumbent solution, i.e.:

                                 
                                    
                                       
                                          
                                             [
                                             
                                                
                                                   Y
                                                   ^
                                                
                                                
                                                   w
                                                   +
                                                   1
                                                
                                             
                                             ,
                                             
                                             
                                                
                                                   
                                                      Z
                                                      ^
                                                   
                                                   
                                                      w
                                                      +
                                                      1
                                                   
                                                
                                                
                                                   
                                                      X
                                                      ^
                                                   
                                                   
                                                      w
                                                      +
                                                      1
                                                   
                                                
                                             
                                             ]
                                          
                                          ≠
                                          
                                             [
                                             
                                                
                                                   Y
                                                   ^
                                                
                                                w
                                             
                                             ,
                                             
                                             
                                                
                                                   
                                                      Z
                                                      ^
                                                   
                                                   w
                                                
                                                
                                                   
                                                      X
                                                      ^
                                                   
                                                   w
                                                
                                             
                                             ]
                                          
                                          .
                                          
                                          □
                                       
                                    
                                 
                              
                           

The main steps of the SVI-D algorithm are outlined below:

@&#RESULTS AND ANALYSIS@&#

In this section, we investigate the computational efficiency of solving the dynamic network protection problem using BND-D and SVI-D. Both algorithms were implemented in C and run on a 64-bit machine with a quad-core 3.4 gigahertz processor and 4Gigabyte of RAM. The Restricted Master Problems and the SubProblems were solved using the IBM ILOG CPLEX version 12.5 callable library. In our computational analysis, we set a time limit of 10, 000 seconds. In the algorithms’ implementation, we used specialized data structures to store and retrieve information efficiently. Specifically, we observed that, given a protection strategy, each SubProblem could be decomposed into |T| independent interdiction problems. Some of these sub-problems recurred multiple times across different iterations. We therefore used a hash table to store and retrieve their solutions efficiently. On some preliminary tests, this expedient yielded a reduction in computing time as high as 80 percent.

The initial testing was performed on two sets of randomly generated problems. Specifically, we generated 5 undirected networks with 10 nodes and 15 arcs, and 5 undirected networks with 20 nodes and 25 arcs. Distances were chosen uniformly from the set 
                        
                           {
                           1
                           ,
                           2
                           ,
                           …
                           ,
                           6
                           }
                        
                     . The flow demand matrix was generated by drawing each value uniformly from 
                        
                           {
                           0
                           ,
                           1
                           ,
                           …
                           ,
                           100
                           }
                        
                     . Each unit of flow can be interpreted as 10, 000 passengers. The costs of protecting / disrupting a node (
                        
                           q
                           
                              i
                           
                           n
                        
                      and 
                        
                           p
                           
                              i
                           
                           n
                        
                     ) were drawn uniformly among the values {2, 4, 6}. These three values were chosen to model stations of different size (small, medium and large). We also assumed 
                        
                           
                              p
                              
                                 j
                              
                              a
                           
                           =
                           1
                        
                     . This choice was driven by the observation that in real life disrupting an arc is usually easier than disrupting a station. Tracks, in fact, are highly vulnerable because of their length and the presence of accessible and easily attackable structures (overpasses, bridges, tunnels). Just hitting one of these structures would impair the full link. On the other hand, the complete protection of a track can be an expensive task. Therefore, the values 
                        
                           q
                           
                              j
                           
                           a
                        
                      were chosen uniformly from the set 
                        
                           {
                           1
                           ,
                           2
                           ,
                           …
                           ,
                           6
                           }
                        
                     .

One of the assumptions of our model is that there is a limit to the number of arcs and nodes that can be disrupted. This budget limit is introduced to model disruptions of different magnitude. For example, a small interdiction budget indicates that the disruptive event only affects a few small components of the network. Conversely, a large disruption can affect a larger number of elements of the network and/or big assets. In our analysis, we consider three disruption scenarios. The interdiction resources associated with each scenario are shown in Table 1. Specifically, we assume that a small event is able to interdict only a small station or two arcs, whereas a large event is able to completely disrupt a big station or a combination of small components. The protection budget is assumed to be a percentage α of the total amount of resources needed to protect the full network, denoted by B. Namely, 
                        
                           
                              q
                              
                                 |
                                 T
                                 |
                              
                           
                           =
                           α
                           B
                        
                     . We consider values of α equal to 5 percent and 10 percent. The protection resources are spread in a 5-period planning horizon. The time periods are all weighted equally (
                        
                           λ
                           =
                           [
                           0.2
                           ,
                           0.2
                           ,
                           0.2
                           ,
                           0.2
                           ,
                           0.2
                           ]
                        
                     ).

The results for the two data sets are displayed in Tables 2 and 3, respectively.

For each network, disruption scenario and protection budget level, the tables show the DNP’s objective function values, i.e., the worst-case disrupted flow over the planning horizon, the computing times of the two algorithms, and the number of network elements protected and disrupted in the optimal solutions. In these initial tests, the threshold for the path choice was fixed to 1, i.e., only the shortest paths are considered acceptable.

The tables clearly show that SVI-D outperforms BND-D in every case. This is mostly due to the fact the RMP in the SVI-D approach does not have an objective function and, upon solving it, one stops as soon as a feasible solution is identified. As a consequence, the RMPs can be solved very quickly. The drawback is that without an objective to drive the protection strategy selection, the algorithm takes a considerable number of iterations before converging to an optimal solution. Conversely, finding a solution to each RMP in the BND-D algorithm is quite time-consuming. Although this algorithm converges in a much smaller number of iterations compared to SVI-D, this is not sufficient to offset the greater difficulty of solving each RMP and its overall computing time is considerably higher.

The impact of the size of the network is evident by comparing the two tables. Nonetheless, the high variability in the computing time suggests that the complexity of the problem depends on a combination of several factors, including the network topology. For instance, networks 20-25-4 and 20-25-5, although of equal size, have very different computing times.

In Table 4, we report some
                     
                      additional results for the largest data set using different path thresholds. The threshold value determines the number of acceptable paths, which in turn affects the size of the problems in terms of number of variables and constraints. Table 4 shows the impact of three different threshold values on the number of available paths and the computing time. A threshold value equal to 1.5 indicates that the users are willing to accept a 50 percent increase on their normal travel time, before switching to other transportation services or abandoning the trip. Similarly, a value equal to 2 indicates that a travel delay up to 100 percent is considered acceptable. Given the superiority of SVI-D, the computing times are reported for this algorithm only. In the analysis, we consider two protection levels (
                        
                           α
                           =
                           5
                           percent
                           ,
                           10
                        
                      percent) and three disruption scenarios (2, 4, and 6 disruption units).

Although in most of the cases an increase in the path threshold value results in an increase in computing time, there are some exceptions to this general trend, especially for large instances (
                        
                           α
                           =
                           10
                        
                      percent and 
                        
                           
                              p
                              t
                           
                           =
                           6
                        
                     ). For these instances, the most critical threshold value seems to be 1.5. As previously noted, these results point out that the performance of the algorithms are influenced by an interaction of different elements, such as the protection and disruption budgets, the network topological structure and the flow demand matrix. In general, increasing the number of acceptable paths increases the number of elements that must be targeted to disrupt a flow. As a consequence, the interdiction problems may become more difficult to solve. However, an increment in the path threshold value may also render some flows too difficult or even impossible to disrupt, thus reducing the number of possible interdiction plans and, consequently, the overall solution time.

To highlight how the path threshold affects the interdiction and protection optimal plans, in Fig. 1 we compare the number of arcs and nodes protected and interdicted over the planning horizon.

Changing the threshold value almost always results in different protection and interdiction plans. In some cases the changes are small, in others can be significant. For example, consider network 20-25-1. When the threshold is increased from 1 to 2, the number of interdicted arcs drops from 26 to 10, whereas the number of nodes increases from 1 to 8. This indicates that the interdiction plans are significantly different.

In summary, this analysis shows that changes to the path threshold parameter can have significant effects on both the problem complexity and the optimal solutions. Consequently, modeling users’ behavior accurately is a critical issue when solving this type of protection models for service systems.

In this section, we test the efficiency of the decomposition approaches and analyze the results using a case study which represent the railway network of Kent (UK). The strategic position of this county makes the case study particularly interesting. Kent has a nominal border with France and, therefore, intercepts all the passenger flow from and to France. Although most of the traffic flow is represented by London commuters, Kent’s railway has also a considerable traffic of tourists, attracted by historical places like Canterbury and Rochester. The overall network comprises 18 nodes, corresponding to cities and towns of the region, and 22 undirected arcs. The actual railway network is more complex, having more nodes and arcs. We simplified it by aggregating neighboring stations and the corresponding flow generated/attracted by them. A graphic representation of the network is showed in 
                     Fig. 2.

In the absence of real flow data, we generated the flow matrix as a function of the dimension of the connected towns, and the frequency and capacity of the trains travelling on the network. As in the computational result section, we assumed that disrupting an arc requires one unit of resources (
                        
                           
                              p
                              j
                              a
                           
                           =
                           1
                        
                     ). We also used the same assumption made for the protection/disruption of nodes: we divided the stations into three groups according to their annual passenger usage (Table 5). For example, Battle which is a small touristic town with less than half a million annual passengers, needs two units to be disrupted/protected. Differently, Ashford, which is a town of considerable size with more than 2 million annual passengers, requires six units. The number of protection units, 
                        
                           
                              q
                              j
                              a
                           
                           ,
                        
                      needed to fully protect an arc depends on the number of tunnels and bridges that can be found on that arc. These numbers are displayed along the arcs in Fig. 2. The disruption scenarios are the same as the ones used in the previous section (see Table 1).

To compute the acceptable paths, we choose a threshold value equal to 1.5 (i.e., increases up to 50 percent of the normal travel time are considered acceptable). We focus on a 5-period planning horizon. In our initial investigation each period is weighted equally.

In this section, we analyse the impact that different levels of protection resources have on the amount of flow loss, for different disruption scenarios.

For each disruption scenario and protection budget level, Table 6 displays the worst-case percentage flow loss when the optimal protection strategy for that scenario is implemented. The results show that even a small disruption can result in a loss of traffic flow as high as 27.37 percent of the total traffic, if no protection is carried out. This suggests that the network under study is highly vulnerable: even small, but possibly frequent, disruptive events can affect a significant portion of the flow. Obviously, the impact of disruption is more pronounced for medium and large disruption scenarios, with a flow loss of 34.50 percent and 41.24 percent, respectively. Investing in protection measures brings notable benefits. In particular, with a protection investment equal to 10 percent, the worst-case percentage flow loss can be reduced by about 18 percent, 10 percent and 16 percent in the three scenarios.


                        Fig. 3 displays the marginal percentage decrease in flow loss, for each percent unit increment in protection resources. This graph provides in depth information on how each budget increment affects potential system losses. This analysis is useful to highlight the trade-off between protection expenditures and flow loss reductions in case of disruption. As an example, if small disruptions are considered, a 5 percent investment results in a worst-case flow loss reduction of about 7 percent (first segment of the first bar in the chart). If protection investments can be increased to 10 percent, the benefit is more than doubled with an overall flow loss reduction of about 18 percent. The graph also highlights possible investment inefficiencies. For example, for medium disruptive scenarios (second bar), increasing the budget form 7 percent to 8 percent has no impact on the worst-case flow loss, to denote that this added budget, although optimally allocated, is insufficient to thwart any additional interdiction plan.

One of the main issues involved in infrastructure protection planning is the intrinsic uncertainty of the disruption events. It is difficult and sometimes impossible to forecast when a disruption will happen and what its magnitude will be. The aim of the protection planner is to make the network as robust as possible, which means identifying a strategy that works well in all the possible scenarios. To this end, we consider how the optimal solution found for a given scenario, works if a different scenario occurs. The analysis is performed considering five equally weighted time periods and a protection budget equal to 10 percent of the resources needed to protect the full network. The results are shown in Table 7.

The table shows the percentage increase in unserved flow when an optimal strategy, obtained with a fixed scenario (supposed scenario), is used in a different scenario (actual scenario). The table also shows the maximum and the average increase across all different scenarios. Both solutions obtained for medium and large disruptions can be highly sub-optimal if a small disruption takes place, resulting in a flow loss increase of 13.8 percent and 12.7 percent, respectively. The best solution, in terms of both maximum and average values, is the one obtained for small disruptions. This seems to indicate that planning for a small disruption is overall a more robust strategy for this railway network. Obviously, a thorough analysis of this issue would require the development of more sophisticated optimization models, which account for the probability of occurrence of different scenarios and explicitly incorporate robustness measures (Snyder & Daskin, 2006).
                        
                        
                     

When dynamic investments are considered, a key questions is whether to opt for a protection strategy which renders the network as robust as possible at the end of the planning horizon, or for a strategy which guarantees high levels of protection as soon as possible (although this may decrease the overall efficiency of the final protection plan). In this section, we investigate how the protection strategies change when the time periods are weighted differently. Note that the weight λt
                         associated with the time periods in the model objective has some similarity with the discount parameter used in economics, in that it can be used to discount future losses. However, in economics, future values are usually discounted more heavily. In our model, instead, the weights vary and higher values may be associated with the last time period if the ultimate objective is to achieve maximum protection effectiveness at the end of the planning horizon.

In our analysis, we consider three different cases:

                           
                              •
                              CASE 1: 
                                    
                                       λ
                                       =
                                       [
                                       0.8
                                       ,
                                       0.05
                                       ,
                                       0.05
                                       ,
                                       0.05
                                       ,
                                       0.05
                                       ]
                                    
                                 . Here the aim of the protection planner is to obtain a good level of protection from the very first time period.

CASE 2: 
                                    
                                       λ
                                       =
                                       [
                                       0.2
                                       ,
                                       0.2
                                       ,
                                       0.2
                                       ,
                                       0.2
                                       ,
                                       0.2
                                       ]
                                    
                                 . Here all the periods are equally weighted.

CASE 3: 
                                    
                                       λ
                                       =
                                       [
                                       0.05
                                       ,
                                       0.05
                                       ,
                                       0.05
                                       ,
                                       0.05
                                       ,
                                       0.8
                                       ]
                                    
                                 . Here the aim of the protection planner is to maximize the safety level achieved when the protection strategy is fully implemented.

The protection budget used in this analysis is equal to 10 percent of the budget needed to protect all the assets in the network.


                        Table 8 has three columns for each case. The first one represents the total worst-case percentage flow loss over all the time periods (TL). The second represents the worst-case percentage flow loss in the initial time period (IL). The third represents the worst-case percentage flow loss in the final period (FL). This gives an indication of the protection level reached by the network at the end of the planning horizon. The analysis is done for three different disruption scenarios. Interestingly, the optimal protection strategy identified for large disruptions is the same, independently on the weights used in the objective function. Conversely, the other two scenarios present differences in the optimal protection strategies when more importance is given to the last time period (the first two cases are still equal). For small disruptions, giving more importance to the last period results in a more resilient final network, with a drop of the worst-case flow loss from 17.76 percent to 16.55 percent. Also the total flow loss slightly reduces from 22.34 percent to 22.21 percent. This indicates that aiming for the safest possible network after 5 years also results in a more resilient network during the transitory periods in which protections are implemented. For medium disruptions, the strategy to obtain a good level of protection in the last period results in higher losses of traffic (from 31.12 percent to 31.51 percent) throughout the planning horizon. Overall, for this case study, the weights given to the different time periods do not seem to have a massive impact on the protection strategies and on the network resiliency achieved at the end of the planning horizon.

In this section we show a sample solution of the proposed model. In particular, Fig. 4
                        
                         displays the assets chosen in the optimal protection plans, over the planning horizon, for the three disruption scenarios. The protection budget is again equal to 10 percent of the budget necessary to protect the entire network and all the time periods have equal weights.

It is clear that protecting the traffic to and from London is of strategic importance. In fact, both the arcs connected to Swanley and Dartford are chosen for protection. Also some arcs connected to Maidstone and Ashford are protected. These towns are among the most populated in Kent and therefore generate and attract high volumes of traffic. It is also interesting to notice that two relatively small stations like Otford and Strood are protected. This is a consequence of their strategic position. They intercept the traffic to and from London and are also directly connected to Maidstone. The main difference between the three graphs is that when the extent of a possible disruption increases (Fig. 4c), more stations can be disrupted. Consequently, more stations appear in the optimal protection strategy.

Finally, Fig. 5
                        
                         shows the network components involved in a worst case disruption, after the implementation of the optimal protection strategies displayed in Fig. 4. The interdiction strategies follow a pattern similar to the one identified in the protection plans. The affected components are, in fact, on the paths to and from London (link connected to Ebbsfleet), and on the paths to big or touristic stations (Maidstone, Ashford, Canterbury and Hastings).


                        Table 9 provides the details of how the optimal protection strategies are implemented over the planning horizon and, for each time period, displays the worst case interdictions. It can be noticed that the three protection plans share several targets to protect. Nonetheless the periods in which these targets are protected are usually different. Interestingly, in the second time period no protection is implemented for the small disruption scenario. This is because the resources available in this time period are saved to protect a larger asset (Maidstone–Otford link) in the successive period. This table highlights how, in a real protection planning situation, not only it is critical to choose what to protect but also when to protect the different assets.

To protect critical infrastructure systems, it is necessary to distribute limited protection resources in the most effective way. This paper introduced a bilevel fortification model to identify the best allocation of protection resources against worst case scenario disruptions in transportation networks. This model includes the important issue of considering dynamic investments. Two decomposition methods to find optimal solutions to the model were proposed and compared. The method based on super-valid inequalities clearly outperformed a classic Benders decomposition approach in terms of computational efficiency. Our analysis showed how the model results can be used to identify the optimal investment level to achieve a desirable degree of protection, and highlighted possible trade-offs between protection expenditures and traffic flow preserved in case of disruption. We applied the modeling approach to the Kent railway network and showed the optimal protection strategies for different disruption scenarios (small, medium and large). For this particular case study, the weights given to the different time periods in the objective of our dynamic model did not seem to have a significant impact on the optimal protection plans.

Tests on some randomly generated problems indicated that a critical problem parameter is the path threshold value. This parameter is used to model the users’ behavior and identify the acceptable paths from a user perspective. A limitation of the current model is that each origin-destination path is either acceptable or not. Given that the solutions identified by the model are highly sensitive to the path threshold parameter, variations to this basic model should be developed which better capture the users’ behavior. A logical extension would be to consider that, following a disruption, the proportion of users taking a different path depends on the extra travel time of this path, compared to the shortest one.

Other possible extensions of this work include the following. Other metrics, such as the system costs, and the duration and frequency of a disruption, should be used to measure the system’s performance. These aspects could be merged into a multi-objective model. Our model only considers binary interdictions and protections. Future works may relax this assumption by considering different levels of disruption/protection for each asset at different costs. Protection models against random failures, as opposed to worst-case interdictions, should also be developed and the protection strategies identified by the two modeling approaches should be compared. Finally, an interesting line of research would be to consider scenario-indexed models including robustness measures. These models, which directly capture the intrinsic uncertainty of disruptive events, would be better suited to identify robust solutions across different disruption scenarios.

In terms of methodology, adding a temporal component undoubtedly renders this type of bilevel protection problems significantly more difficult to solve than their static counterparts. The proposed solution approaches can only be applied to small/medium networks, such as the one used in the Kent case study. Solving larger instances will require developing more sophisticated approaches, including heuristics and hybrid approaches.

@&#ACKNOWLEDGEMENTS@&#

The authors gratefully acknowledge three anonymous referees for their insightful and constructive comments.

@&#REFERENCES@&#

