@&#MAIN-TITLE@&#The Airline Container Loading Problem with pickup and delivery

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           We propose a new MIP model for the Airline Container Loading Problem with multiple destinations.


                        
                        
                           
                           Our solution reduces two costs linked to this problem: fuel consumption and handling operations costs.


                        
                        
                           
                           Our solution optimizes the Weight and Balanced problems over several leg and the loading/unloading sequences.


                        
                        
                           
                           We show that this problem is NP-hard.


                        
                        
                           
                           We show measures of performance based on real data.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

OR in airlines

Assignment problem

Fuel consumption

Weight and balance

Sequencing problem

@&#ABSTRACT@&#


               
               
                  This paper considers the loading optimization problem for a set of containers and pallets transported into a cargo aircraft that serves multiple airports. Because of pickup and delivery operations that occur at intermediate airports, this problem is simultaneously a Weight, and Balance Problem and a Sequencing Problem. Our objective is to minimize fuel and handling operation costs. This problem is shown to be NP-hard. We resort to a mixed integer linear program. Based on real-world data from a professional partner (TNT Airways), we perform numerical experiments using a standard B, and C library. This approach yields better solutions than traditional manual planning, which results in substantial cost savings.
               
            

@&#INTRODUCTION@&#

In the Airline Container Loading Problem with Pickup and Delivery (ACLPPD), a set of containers and pallets, known as Unit Load Devices (ULD), must be loaded into a compartmentalized cargo aircraft. We consider that pickup and delivery operations occur at different airports during any given trip. The loading task is illustrated in Fig. 1
                     . We propose an exact solution approach that relies on a mixed integer linear program to find the optimal ULD assignment.

Air cargo represents 10 percent of the world trade volume, but its value is in excess of $6.4 trillion per annum, which is approximately 35 percent of the world trade value (IATA, 2013a). Thus, air cargo transportation plays a highly significant economic role. Optimizing loading assignment on board is critical to airlines for several reasons. First, correct loading conditions safety. Inappropriate loading can cause significant damage, and place the aircraft, the freight or even the crew at risk. Therefore, this paper models a wide set of constraints for operators to consider daily. The proposed model applies to all aircraft and loads, and complies with international standards. Considering the same constraints as Limbourg, Schyns, and Laporte (2012), we adapt such constraints to the case of a sequence of routes, called legs, while considering the additional case of hazardous products and oversized ULDs. Second, optimal loading has a positive impact on aerodynamics, thus resulting in less fuel consumption, i.e., reduced cost and environmental impact. This issue is crucial for airlines, affected by rising oil prices and increased pressure to reduce carbon dioxide emissions. This paper analyzes fuel and handling operations in order to minimize costs. The management of these first two requirements is done through a proper distribution of the ULD weights within the aircraft. This part is a Weight & Balance Problem. The third reason optimal loading is important for airlines is that managing operations on the ground is challenging, especially when the trip includes several legs with P&D operations. Reducing the number of handling operations reduces time, which in turn reduces labor costs per flight. Such reduction also allows shorter turnaround time, i.e., the time that elapses from the moment the plane arrives to the moment it leaves again, thus reducing airport fees. Time saved could be used for other valuable operations. Optimizing loading plans is also crucial and constitutes another reason to consider this problem. Indeed, loadmasters must build plans within an extremely short time, and doing so manually requires significant time. On the other hand, with an interactive computerized efficient tool, loadmasters would be able to consider different alternatives and select the best solution with respect to their experience and the real conditions faced on the ground.

In this context, the problem no longer consists merely, as in Limbourg et al. (2012), in positioning ULDs to reach a proper equilibrium, but also in defining the unloading and loading operation sequence at airports. Because there is only one path between any ULD and the exit door, this path must be free to unload ULDs. The task is to minimize, at each airport, the number of ULDs in transit to be unloaded in order to have access to the ULDs reaching their delivery point. The same question arises when pickup occurs. The problem is even more complex when several doors can be used, as occurs occasionally. The cost of these handling operations is the second element of our proposed objective function. It is important to notice that we face two conflicting objectives: optimizing board assignments for fuel and for ground operations. Our contribution is to propose an exact approach to solve simultaneously both the Weight & Balance Problem over a multi-leg trip, and the sequencing problems associated to pickups and deliveries. We resort to a mixed integer linear program where the objective is to minimize both costs.

Currently, this extremely complex problem (NP-hard) is still essentially solved manually based on best practices. Because load planners have extremely short time windows to choose assignments, they focus mainly on finding a feasible and reasonable solution. As a rule, they do not incorporate P&D operations in the planning process. A common method for managing several legs is, indeed, to plan each leg independently. Accordingly, almost the entire cargo can be unloaded at intermediate airports, and the ULDs that have not reached final destinations are reloaded subsequently, which is the worst possible scenario for ground operations. We show, based on of our first results from real data provided by industrial partners, that our approach allows significant savings.

The remainder of this paper is organized as follows. Section 2 outlines the problem and the assumptions involved. Related literature and contributions are presented in Section 3. Section 4 describes the problem in more detail, and provides the proposed model’s mathematical formulation. Section 5 provides information on the theoretical complexity of the problem, whereas Section 6 illustrates the performance of the approach through numerical results. Finally, some conclusions are drawn.

ACLPPD can be informally summarized as:


                     
                        
                           
                              
                              
                              
                                 
                                    min
                                    Fuel and loading operations costs on the entire trip (global optimization)
                                 
                                 
                                    s.t.
                                    Pickup and delivery sequences are feasible
                                 
                                 
                                    
                                    Customer demand is satisfied (each ULD is loaded)
                                 
                                 
                                    
                                    Each ULD fits in an aircraft position
                                 
                                 
                                    
                                    A position accepts only one ULD
                                 
                                 
                                    
                                    Some positions overlap and cannot be used simultaneously
                                 
                                 
                                    
                                    Longitudinal stability is within certified limits (ZFW, TOW, LW)
                                 
                                 
                                    
                                    Lateral stability is within certified limits
                                 
                                 
                                    
                                    Weight per position is below certified limit
                                 
                                 
                                    
                                    Combined weight load limits are set
                                 
                                 
                                    
                                    Cumulative weight load limits are set
                                 
                                 
                                    
                                    Regulations for hazardous goods are fulfilled
                                 
                                 
                                    
                                    Oversized ULDs are managed
                                 
                              
                           
                        
                     
                  

The decision variables are the location of each ULD within the aircraft. The constraints are described in detail in Section 4.3. We make the following main assumptions. A cargo aircraft has to deliver goods to several airports. The flight plan is presumably known in advance, which means that the airports and the order in which they will be visited are known. We also knowall the containers and pallets (ULDs) to be delivered. For each ULD, we know its size, shape, weight, and respective origin and destination. We follow international standards for ULD description. Full details on the coding standards can be found in the International Air Transport Association (IATA) ULD Regulations (ULDR) 
                     (IATA, 2013b). A cargo aircraft generally contains multiple decks with multiple position configurations for each deck. A position is simply a particular aircraft space that accommodates exactly one ULD. The location of each position and that of all ULDs that fit into such position are also known. The location of the different doors is also given. A cargo aircraft has generally one side cargo door on the main deck and one for each of the three compartments of the lower deck. In addition, a nose door is sometimes available for the main deck. An example of cargo aircraft structure is illustrated in Fig. 2
                     . The focus of this research is on cargo transportation. The central ideas remain the same and extensions of our approach can be considered; however, passenger transportation and the transportation of goods in the lower deck of passenger aircraft are beyond the scope of this paper.

This problem is an Assignment Problem (AP) that is referred in the literature as belonging to the family of Weight & Balance Problems. Over the past years, more attention has been paid to the problem that precedes ACLPPD by considering how to optimize freight loading within ULDs (Chan, Bhagwat, Kumar, Tiwari, and Lam, 2006; Li, Tao, and Wang, 2009; Paquay, Schyns, and Limbourg, 2014; Tang, 2011; Tang and Chang, 2010; Wu, 2010; Yan, Shih, and Shiao, 2008) independently of aircrafts. The scientific literature on aircraft cargo load planning is not extensive, but contains a number of papers.

Prior publications differ in many ways. First, the literature can be subdivided according to two approaches: bin packing and assignment. In the Bin Packing Problem (BPP) approach (for examples, see Amiouny, Bartholdi, Vande Vate, and Zhang, 1992; Guèret, Jussien, Lhomme, Pavageau, and Prins, 2003; Heidelberg, Parnell, and Ames, 1998; Nance, Roesener, and Moore, 2011), the authors attempted to fill the aircraft continuously by excluding empty spaces between the items, whereas in the AP approach (for examples, see Larsen and Mikkelsen, 1980; Limbourg et al., 2012; Mongeau and Bès, 2003; Vancroonenburg, Verstichel, Tavernier, and Vanden Berghe, 2014), the authors attempted to allocate ULDs into predefined standardized positions, similar to our approach. Second, several papers treated the problem with exact approaches (for examples, see Guèret et al., 2003; Limbourg et al., 2012; Mongeau and Bès, 2003; Vancroonenburg et al., 2014), whereas others developed heuristics (for examples, see Amiouny et al., 1992; Heidelberg et al., 1998; Larsen and Mikkelsen, 1980; Nance et al., 2011). Third, some papers attempted to determine how to select the ULDs or items to be loaded in an aircraft or a fleet of aircraft (for examples see Fok and Chun, 2004; Mongeau and Bès, 2003; Vancroonenburg et al., 2014), whereas others assumed that all ULDs must be loaded in the aircraft, similar to us (for examples, see Amiouny et al., 1992; Larsen and Mikkelsen, 1980; Limbourg et al., 2012). Fourth, some papers considered military applications (for examples, see Guèret et al., 2003; Heidelberg et al., 1998; Kaluzny and Shaw, 2009; Nance et al., 2011; Ng, 1992), whereas others were interested in commercial applications (for examples, see Fok and Chun, 2004; Larsen and Mikkelsen, 1980; Limbourg et al., 2012; Mongeau and Bès, 2003; Vancroonenburg et al., 2014). Finally, among these prior works, only Larsen and Mikkelsen (1980) and Vancroonenburg et al. (2014) were interested in multi-leg flights. In Larsen and Mikkelsen (1980), the objective was to minimize the number of unloading and reloading operations at intermediate airports, similar to our objective. However, no details were provided for how they achieved this goal. Vancroonenburg et al. (2014) proposed to assign priorities to ULDs based on their destination.

However, these classifications are not exhaustive, and some papers fall within two categories. This literature also varies on at least three other dimensions: the precise definition of the objective function, the nature of the shipments, and the constraints considered.

Related problems consider container loading in trucks, trains, or ships. All such problems are combinatorial optimization problems that have to satisfy several, and sometimes similar, loading constraints. For these specific carriers, the multiple destinations case is often considered in the literature. The minimization of handling operations is then a common objective to achieve (for examples, see Altarazi, 2013; Bostel and Dejax, 1998; Imai, Sasaki, Nishimura, and Papadimitriou, 2006; Øvstebø, Hvattum, and Fagerholt, 2011). However, optimal loading for each of these carriers is a problem different from aircraft loading. In a truck, there are no predefined positions for the containers. Therefore, the Truck Loading Problem (TLP) is not AP, but it fits under the more general Container Loading Problem (CLP; Bortfeldt and Wäscher, 2013) that includes the BPP. In a train or ship, available locations for containers are also predefined, but the carrier structure is still significantly different from that of an aircraft. Consequently, the weight constraints and loading operations are extremely specific, which makes ACLPPD peculiar and basically different from these two loading problems. Moreover, especially in the case of ships, the number of containers to be loaded leads to problems that are too large to be solved by exact methods. The literature consists mainly of heuristics, and does not present exact mathematical models for real problems.

The studies of Mongeau and Bès (2003) and Vancroonenburg et al. (2014), and especially Limbourg et al. (2012), from which we started, relate most closely to our work. Indeed, these three papers consider commercial cargo aircraft with predefined positions and standardized ULDs, use exact methods, and consider the aircraft’s Center of Gravity (CG). Nonetheless, we depart significantly from these works. Our contributions are multiple. The main contribution is the consideration of a trip that consists of several legs with pickups and deliveries that occur at intermediate airports. This compels us to model the handling operations on the ground, and to adapt the basic constraints of the Weight & Balance Problem to the multi-leg trip. We analyze the impact of loading operations in terms of cost. The mathematical model that we propose simultaneously considers two conflicting monetary objectives. To the best of our knowledge, this has never been done before. The integration of a larger set of realistic constraints is also a contribution. In addition, we provide information regarding the complexity of the problem. Finally, we show performance measures based on real data.

Our model is built on three main sets of parameters. The first is the set 
                           L
                         of legs that are the different parts of a trip that separates two successive airports. This model considers two legs. However, generalization to more legs is simple. A trip composed of two legs is a common case for long-range flights, whereas the consideration of more legs essentially complicates notation. The second main set of parameters is the set 
                           U
                         of ULDs. For each ULD, we know its type (IATA code), weight wi
                        , and airports of origin and destination. We assume that the weight is uniformly distributed within the ULD. We need this assumption in order to presume that the CG of the loaded ULD is at the center of the position occupied. This is important to calculate the loaded aircraft CG or to construct certain weight constraints. As explained by Paquay et al. (2014), this assumption is consistent with the control and loading manuals of airlines that stipulate that the CG of each ULD should lie in a certified area around the geometrical ULD center. By knowing the origin and destination of each ULD, we can establish three distinct ULD subsets: 
                           
                              U
                              1
                           
                         for ULDs loaded at the depot and unloaded at the first destination, 
                           
                              U
                              2
                           
                         for those loaded at the first destination and unloaded at the second one, 
                           
                              U
                              3
                           
                         for those loaded at the depot and unloaded at the second destination. For notation ease, we also define 
                           
                              U
                              k
                              L
                           
                         as the subset of ULDs present in the aircraft for leg 
                           
                              k
                              ∈
                              L
                           
                        . By definition, the intersection of 
                           
                              U
                              1
                              L
                           
                         and 
                           
                              U
                              2
                              L
                           
                         is 
                           
                              U
                              3
                           
                        . The last set of parameters is the set 
                           P
                         that defines available positions, which are the predefined spaces in the aircraft that can accommodate ULDs. Each position is located on a specific deck and can be situated on the left side (L), the right side (R), or cover the entire width (C). To identify all positions on either side of the center, we use the subsets 
                           
                              P
                              R
                           
                         and 
                           
                              
                                 P
                                 L
                              
                              ,
                           
                         respectively.

Our main variables are the binary variables xijk
                         defined as:

                           
                              
                                 
                                    
                                       x
                                       
                                          i
                                          j
                                          k
                                       
                                    
                                    =
                                    
                                       {
                                       
                                          
                                             
                                                1
                                             
                                             
                                                
                                                   
                                                      if
                                                      
                                                      
                                                      ULD
                                                   
                                                   
                                                   i
                                                   
                                                   
                                                      is
                                                      
                                                      in
                                                      
                                                      position
                                                   
                                                
                                             
                                          
                                          
                                             
                                             
                                                
                                                   j
                                                   
                                                   
                                                      during
                                                      
                                                      leg
                                                   
                                                   
                                                   k
                                                
                                             
                                          
                                          
                                             
                                                0
                                             
                                             
                                                
                                                   otherwise
                                                   ,
                                                
                                             
                                          
                                       
                                    
                                    
                                    ∀
                                    i
                                    ∈
                                    U
                                    ,
                                    
                                    
                                    ∀
                                    j
                                    ∈
                                    P
                                    ,
                                    ∀
                                    k
                                    ∈
                                    L
                                 
                              
                           
                        
                     

As stated in the previous section, the objective of ACLPPD is to assign each ULD to one position while minimizing total costs, which is realized by minimizing fuel consumption on each leg andhandling operations at intermediate airports. More precisely, we minimize overcost.

Given that CG location impacts fuel consumption, on each leg, CG should be located at its best position. Without detailing many technical considerations, we can state that aircraft fuel consumption depends on the results of a continuous battle of forces, namely, weight, lift, thrust, and drag (see Fig. 3
                              ). A slightly aft CG should reduce drag, and ultimately, thrust. Less thrust means less fuel consumption. Because the main impact is caused by the CG longitudinal location, we focus only on this axis in the objective function. Lateral location is maintained essentially within feasible limits (see Section 4.3 and Constraint (13)). Henceforth, CG designs only the longitudinal location.

CG location is restricted within a range of certified limits defined by the aircraft’s manufacturer. These limits are crucially important because a CG value outside such limits can cause instability that produces harmful effects. Within this range, some freedom is allowed. Airlines and pilots are aware that an aft CG usually saves fuel. Nonetheless, airlines typically define the CG target location around the center of certified ranges. In our case, we define the optimal location (denoted OCG) to be close to the aft certified limit, less an additional security margin left to the operator’s appreciation. This aft certified limit is established during certification flight testing and is contained in the Pilot’s Operating Handbook. The main purpose of the aft limit is to ensure controllability. We want to find loading plans for which the CG on each leg is located as close as possible to the optimal location. In mathematical terms, this gives:

                                 
                                    
                                       
                                          min
                                          
                                             ∑
                                             
                                                ∀
                                                k
                                                ∈
                                                L
                                             
                                          
                                          
                                          
                                             ϵ
                                             k
                                          
                                       
                                    
                                 
                              Subject to:

                                 
                                    (1)
                                    
                                       
                                          
                                             CG
                                             k
                                          
                                          −
                                          
                                             OCG
                                             k
                                          
                                          −
                                          
                                             ϵ
                                             k
                                          
                                          ≤
                                          0
                                          
                                          ∀
                                          k
                                          ∈
                                          L
                                       
                                    
                                 
                              
                              
                                 
                                    (2)
                                    
                                       
                                          
                                             CG
                                             k
                                          
                                          −
                                          
                                             OCG
                                             k
                                          
                                          +
                                          
                                             ϵ
                                             k
                                          
                                          ≥
                                          0
                                          
                                          ∀
                                          k
                                          ∈
                                          L
                                       
                                    
                                 
                              where OCG
                                 k
                               is the optimal CG location and CG
                                 k
                               is the CG location obtained after ULD assignment. Both CG locations are expressed in inches from a virtual point called the datum. 
                                 
                                    ϵ
                                    k
                                 
                               is the resulting deviation from the target for leg k.

Following the elementary principles of Aircraft Flight Manuals (AFM), the CG of a loaded aircraft, i.e., CG
                                 k
                              , is found by dividing the total balance moment of the aircraft by the total weight. The total balance moment of an aircraft is the algebraic sum of the balance moments from all its components (the empty aircraft, crew, ULDs, etc.). The balance moment of a component is determined by multiplying the weight of the component (
                                 
                                    
                                       weight
                                    
                                    k
                                    c
                                 
                              ) by its longitudinal distance (
                                 
                                    
                                       distance
                                    
                                    k
                                    c
                                 
                              ), in inches, to a virtual point called the datum. Thus, the CG position, in inches from the datum, is expressed by the following expression:

                                 
                                    
                                       
                                          
                                             CG
                                             k
                                          
                                          =
                                          
                                             
                                                
                                                   ∑
                                                   
                                                      c
                                                      ∈
                                                      C
                                                   
                                                
                                                
                                                   
                                                      weight
                                                   
                                                   k
                                                   c
                                                
                                                ×
                                                
                                                   
                                                      distance
                                                   
                                                   k
                                                   c
                                                
                                             
                                             
                                                
                                                   ∑
                                                   
                                                      c
                                                      ∈
                                                      C
                                                   
                                                
                                                
                                                   
                                                      weight
                                                   
                                                   k
                                                   c
                                                
                                             
                                          
                                       
                                    
                                 
                              where 
                                 C
                               is the set of components

One of these components is freight, i.e., all the ULDs to be loaded within the aircraft. The balance moment of a ULD is obtained by multiplying the weight of the ULD, wi
                               by the location of its allocated position. The location of a position j, called the arm and denoted aj
                              , is the longitudinal distance from the datum to the center of position j. Consequently, all ULDs to be loaded can be considered one unique large ULD with weight 
                                 
                                    
                                       
                                          weight
                                       
                                       k
                                       freight
                                    
                                    =
                                    
                                       ∑
                                       
                                          i
                                          ∈
                                          
                                             U
                                             k
                                             L
                                          
                                       
                                    
                                    
                                       w
                                       i
                                    
                                 
                               and longitudinal distance (
                                 
                                    
                                       distance
                                    
                                    k
                                    freight
                                 
                              ) expressed as follows:

                                 
                                    
                                       
                                          
                                             
                                                distance
                                             
                                             k
                                             freight
                                          
                                          =
                                          
                                             
                                                
                                                   ∑
                                                   
                                                      i
                                                      ∈
                                                      
                                                         U
                                                         k
                                                         L
                                                      
                                                   
                                                
                                                
                                                   ∑
                                                   
                                                      j
                                                      ∈
                                                      P
                                                   
                                                
                                                
                                                   w
                                                   i
                                                
                                                ×
                                                
                                                   a
                                                   j
                                                
                                                ×
                                                
                                                   x
                                                   
                                                      i
                                                      j
                                                      k
                                                   
                                                
                                             
                                             
                                                
                                                   ∑
                                                   
                                                      i
                                                      ∈
                                                      
                                                         U
                                                         k
                                                         L
                                                      
                                                   
                                                
                                                
                                                   w
                                                   i
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           

The second ACLPPD objective is to minimize the number of handling operations. All the ULDs from 
                                 
                                    U
                                    1
                                 
                               (respectively 
                                 
                                    U
                                    2
                                 
                              ) must be loaded at the origin of leg 1 (respectively 2) and unloaded at the destination of the same leg. Therefore, the number of ULD moves is equal to the number of ULDs in these sets and cannot be decreased. ULDs from 
                                 
                                    U
                                    3
                                 
                               do not need to be unloaded a priori at the intermediate airport (optimal case). However, all these ULDs are typically unloaded (worst case) in order to unload the ULDs that belong to 
                                 
                                    U
                                    1
                                 
                               and load those that belong to 
                                 
                                    U
                                    2
                                 
                              . This is because 
                                 
                                    U
                                    3
                                 
                               ULDs could be situated in the path of those that must be loaded/unloaded at the intermediate airport, but also because the load plan must be adapted to the new leg while continuing to ensure a feasible and correct CG location for the next leg. If the initial load plan considers different legs, it should be possible to assign ULDs in 
                                 
                                    U
                                    3
                                 
                               to positions not in the entry/exit path of other ULDs, which allows a suitable CG for the second leg. Therefore, we focus on the re-handling operations at the intermediate airport.

Moreover, an aircraft compartment can have more than one door. In this case, the number of operations can be minimized using the most accessible door. Without loss of generality, let us consider that each position can be reached from a maximum of two doors: the first in the direction of the nose (the “nose door”), and the second in the direction of the tail (the “tail door”). There can be more than two doors for the same deck, but only two are relevant for each position.

An example for the main deck of a Boeing 747 is illustrated in Fig. 4
                              . For position j, the nose door is situated exactly at the nose and the tail door is the lateral door. For position j′, the nose door is the lateral door and there is no tail door.

We can identify the set of positions in the entry/exit paths to/from position j as follows (see Fig. 4):

                                 
                                    •
                                    
                                       
                                          
                                             B
                                             j
                                             N
                                          
                                        is the set of all positions situated between position j and the first door in the direction of the nose. 
                                          
                                             B
                                             j
                                             N
                                          
                                        is an empty set if position j is next to the nose door.


                                       
                                          
                                             B
                                             j
                                             T
                                          
                                        is the set of all positions situated between position j and the first door in the direction of the tail. 
                                          
                                             B
                                             j
                                             T
                                          
                                        is an empty set if position j is next to the tail door.

In order to manage ULD unloading at intermediate airport, we introduce the binary variables 
                                 
                                    α
                                    j
                                    N
                                 
                               and 
                                 
                                    α
                                    j
                                    T
                                 
                              :

                                 
                                    
                                       
                                          
                                             
                                                
                                                   α
                                                   j
                                                   N
                                                
                                             
                                             
                                                
                                                   =
                                                   
                                                      {
                                                      
                                                         
                                                            
                                                               1
                                                            
                                                            
                                                               
                                                                  
                                                                     if
                                                                     
                                                                     the
                                                                     
                                                                     ULD
                                                                     
                                                                     in
                                                                     
                                                                     position
                                                                  
                                                                  
                                                                  j
                                                                  
                                                                  
                                                                     is
                                                                     
                                                                     unloaded
                                                                  
                                                               
                                                            
                                                         
                                                         
                                                            
                                                            
                                                               
                                                                  
                                                                  
                                                                     through
                                                                     
                                                                     the
                                                                  
                                                                  
                                                                  
                                                                     nose
                                                                     
                                                                     door
                                                                  
                                                                  ,
                                                               
                                                            
                                                         
                                                         
                                                            
                                                               0
                                                            
                                                            
                                                               
                                                                  otherwise
                                                                  .
                                                               
                                                            
                                                         
                                                      
                                                   
                                                
                                             
                                          
                                          
                                             
                                                
                                                   α
                                                   j
                                                   T
                                                
                                             
                                             
                                                
                                                   =
                                                   
                                                      {
                                                      
                                                         
                                                            
                                                               1
                                                            
                                                            
                                                               
                                                                  
                                                                     if
                                                                     
                                                                     the
                                                                     
                                                                     ULD
                                                                     
                                                                     in
                                                                     
                                                                     position
                                                                  
                                                                  
                                                                  j
                                                                  
                                                                  
                                                                     is
                                                                     
                                                                     unloaded
                                                                  
                                                               
                                                            
                                                         
                                                         
                                                            
                                                            
                                                               
                                                                  
                                                                  
                                                                     through
                                                                     
                                                                     the
                                                                  
                                                                  
                                                                  
                                                                     tail
                                                                     
                                                                     door
                                                                  
                                                                  ,
                                                               
                                                            
                                                         
                                                         
                                                            
                                                               0
                                                            
                                                            
                                                               
                                                                  otherwise
                                                                  .
                                                               
                                                            
                                                         
                                                      
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                              These variables are subject to the following constraints:

                                 
                                    (3)
                                    
                                       
                                          
                                             α
                                             j
                                             N
                                          
                                          +
                                          
                                             α
                                             j
                                             T
                                          
                                          ≤
                                          1
                                          
                                          ∀
                                          j
                                          ∈
                                          P
                                       
                                    
                                 
                              
                              
                                 
                                    (4)
                                    
                                       
                                          
                                             α
                                             j
                                             N
                                          
                                          +
                                          
                                             α
                                             j
                                             T
                                          
                                          ≥
                                          
                                             ∑
                                             
                                                ∀
                                                i
                                                ∈
                                                
                                                   U
                                                   1
                                                
                                             
                                          
                                          
                                             x
                                             
                                                i
                                                j
                                                1
                                             
                                          
                                          
                                          ∀
                                          j
                                          ∈
                                          P
                                       
                                    
                                 
                              
                           

Constraints (3) ensure that ULD unloading occurs through one door only. Constraints (4) guarantee that all ULDs whose final destination is the intermediate airport are unloaded well at the intermediate airport. Indeed, if there exists a ULD in 
                                 
                                    U
                                    1
                                 
                               in position j (
                                 
                                    
                                       x
                                       
                                          i
                                          j
                                          1
                                       
                                    
                                    =
                                    1
                                 
                              ), there is necessarily an unloading from position j to either the nose door or the tail door (
                                 
                                    α
                                    j
                                    N
                                 
                               or 
                                 
                                    α
                                    j
                                    T
                                 
                               must be equal to one). Note that Constraints (3) and (4) do not guarantee that 
                                 
                                    α
                                    j
                                    N
                                 
                               and 
                                 
                                    α
                                    j
                                    T
                                 
                               are equal to zero when a ULD does not need to be unloaded. However, the next two constraints, (6) and (5), in conjunction with the objective function, enforce a zero value for 
                                 
                                    α
                                    j
                                    N
                                 
                               and 
                                 
                                    α
                                    j
                                    T
                                 
                               when there is no unloading from position j.

At the intermediate airport, we want to avoid ULD unloading in 
                                 
                                    U
                                    3
                                 
                              . Indeed, the final destination of these ULDs is not the intermediate airport, and these operations ought to be spared. We introduce binary variables 
                                 
                                    n
                                    j
                                    N
                                 
                               and 
                                 
                                    n
                                    j
                                    T
                                 
                               to identify unnecessarily unloading:

                                 
                                    
                                       
                                          
                                             
                                                
                                                   n
                                                   j
                                                   N
                                                
                                             
                                             
                                                
                                                   =
                                                   
                                                      {
                                                      
                                                         
                                                            
                                                               1
                                                            
                                                            
                                                               
                                                                  
                                                                     if
                                                                     
                                                                     the
                                                                     
                                                                     ULD
                                                                     
                                                                     in
                                                                     
                                                                     position
                                                                  
                                                                  
                                                                  j
                                                                  
                                                                  
                                                                     is
                                                                     
                                                                     unnecessarily
                                                                  
                                                               
                                                            
                                                         
                                                         
                                                            
                                                            
                                                               
                                                                  
                                                                  
                                                                     unloaded
                                                                     
                                                                     through
                                                                     
                                                                     the
                                                                     
                                                                     nose
                                                                     
                                                                     door
                                                                  
                                                                  ,
                                                               
                                                            
                                                         
                                                         
                                                            
                                                               0
                                                            
                                                            
                                                               
                                                                  otherwise
                                                                  .
                                                               
                                                            
                                                         
                                                      
                                                   
                                                
                                             
                                          
                                          
                                             
                                                
                                                   n
                                                   j
                                                   T
                                                
                                             
                                             
                                                
                                                   =
                                                   
                                                      {
                                                      
                                                         
                                                            
                                                               1
                                                            
                                                            
                                                               
                                                                  
                                                                     if
                                                                     
                                                                     the
                                                                     
                                                                     ULD
                                                                     
                                                                     in
                                                                     
                                                                     position
                                                                  
                                                                  
                                                                  j
                                                                  
                                                                  
                                                                     is
                                                                     
                                                                     unnecessarily
                                                                  
                                                               
                                                            
                                                         
                                                         
                                                            
                                                            
                                                               
                                                                  
                                                                  
                                                                     unloaded
                                                                     
                                                                     through
                                                                     
                                                                     the
                                                                     
                                                                     tail
                                                                     
                                                                     door
                                                                  
                                                                  ,
                                                               
                                                            
                                                         
                                                         
                                                            
                                                               0
                                                            
                                                            
                                                               
                                                                  otherwise
                                                                  .
                                                               
                                                            
                                                         
                                                      
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           

Constraints (5) and (6) stipulate that ULD 
                                 
                                    ∈
                                    
                                       U
                                       3
                                    
                                 
                               is unnecessarily unloaded at an intermediate airport if the ULD is in the exit path of a ULD that must be unloaded.

                                 
                                    (5)
                                    
                                       
                                          
                                             n
                                             j
                                             N
                                          
                                          ≥
                                          
                                             α
                                             
                                                
                                                   j
                                                   ′
                                                
                                             
                                             N
                                          
                                          +
                                          
                                             x
                                             
                                                i
                                                j
                                                1
                                             
                                          
                                          −
                                          1
                                          
                                          ∀
                                          j
                                          ∈
                                          P
                                          ,
                                          
                                          ∀
                                          
                                             j
                                             ′
                                          
                                          ∈
                                          
                                             B
                                             j
                                             T
                                          
                                          ,
                                          
                                          ∀
                                          i
                                          ∈
                                          
                                             U
                                             3
                                          
                                       
                                    
                                 
                              
                              
                                 
                                    (6)
                                    
                                       
                                          
                                             n
                                             j
                                             T
                                          
                                          ≥
                                          
                                             α
                                             
                                                
                                                   j
                                                   ′
                                                
                                             
                                             T
                                          
                                          +
                                          
                                             x
                                             
                                                i
                                                j
                                                1
                                             
                                          
                                          −
                                          1
                                          
                                          ∀
                                          j
                                          ∈
                                          P
                                          ,
                                          
                                          ∀
                                          
                                             j
                                             ′
                                          
                                          ∈
                                          
                                             B
                                             j
                                             N
                                          
                                          ,
                                          
                                          ∀
                                          i
                                          ∈
                                          
                                             U
                                             3
                                          
                                       
                                    
                                 
                              
                           

As illustrated in Fig. 5
                              , if the ULD in position j′ is unloaded through the nose door (
                                 
                                    
                                       α
                                       
                                          
                                             j
                                             ′
                                          
                                       
                                       N
                                    
                                    =
                                    1
                                 
                              ), the ULD in position j is blocking the exit path and must also be unloaded through the nose door. If this ULD belongs to 
                                 
                                    U
                                    3
                                 
                               (
                                 
                                    
                                       x
                                       
                                          i
                                          j
                                          1
                                       
                                    
                                    =
                                    1
                                 
                              ), it is an “unnecessary” operation. The right side of Constraints (5) is then strictly positive and 
                                 
                                    n
                                    j
                                    N
                                 
                               can only take the value one. Constraints (6) are equally applicable to unloading through the tail door. Given the objective function, 
                                 
                                    n
                                    j
                                    N
                                 
                               and 
                                 
                                    n
                                    j
                                    N
                                 
                               are pushed to zero when Constraints (5) and (6) are not binding, i.e., either when there is no unloading from position j, or when the unloading from position j is necessary.

Because we want to minimize such unnecessary unloading, we obtain the objective function for the ground operations:

                                 
                                    
                                       
                                          min
                                          
                                             ∑
                                             
                                                ∀
                                                j
                                                ∈
                                                P
                                             
                                          
                                          
                                             (
                                             
                                                n
                                                j
                                                N
                                             
                                             +
                                             
                                                n
                                                j
                                                T
                                             
                                             )
                                          
                                       
                                    
                                 
                              
                           

Finally, both objectives have to be considered together and expressed in monetary terms. For the first element, CG target location is typically expressed as a percentage of the aircraft Mean Aerodynamic Chord (MAC). MAC is defined by the airfoils and is the mean distance between the leading and trailing edges in the direction of airflow. For the Airbus 330, a CG displacement from its location of reference (28 percent) to a more aft CG (37 percent) could increase the number of air nautical miles per KG of fuel by 0.5 percent (Airbus Fuel Economy Material, 2004). This result can be converted in terms of fuel savings. The pilots and load planners consulted expect approximately 2.5 percent decrease of fuel consumption for a Boeing 777 when CG is displaced by a distance equivalent to 10 percent of the MAC to the aft. The exact relationship between CG location and fuel consumption depends on the aircraft type. These examples provide rough approximations for the amount of potential savings. Knowing the exact relationship between CG location and fuel savings for a specific aircraft and the absolute fuel volume required for a given trip with this optimal CG location, we can measure the amount of tons of fuel that must be added for one percent forward shift of the CG. By multiplying this figure by fuel price, we obtain the cost by unit deviation. 
                                 
                                    ϵ
                                    k
                                 
                               measures such deviation. Set 
                                 
                                    c
                                    k
                                    
                                       
                                       f
                                    
                                 
                               as the monetary cost per unit deviation for fuel consumption, then 
                                 
                                    (
                                    
                                       ϵ
                                       k
                                    
                                    
                                       c
                                       k
                                       
                                          
                                          f
                                       
                                    
                                    )
                                 
                               is the additional cost induced on leg k by an improper CG location (too forward). Because the first goal is to push CG to the aft, any positive value for 
                                 
                                    c
                                    k
                                    
                                       
                                       f
                                    
                                 
                               is effective. 
                                 
                                    c
                                    k
                                    
                                       
                                       f
                                    
                                 
                               can be interpreted as penalty coefficients. The main limitation of an approximate value is that it leads to an approximate value for the total cost reduction, but it has no impact on optimal assignment (at least if this value remains a reasonable approximation with respect to the second objective: cost minimization associated to loading operations). If airlines and load planners prefer to select a sub-optimal location more within the range of values certified by the aircraft manufacturer, the target CG does not correspond anymore to the upper certified limit, and always pushing to the aft is not suitable. We decide to model it as a soft constraint. Any deviation of the CG to the aft beyond the target must also be penalized, and at least by a coefficient 
                                 
                                    
                                       c
                                       k
                                       
                                          
                                          f
                                       
                                    
                                    ,
                                 
                               give priority to this constraint. Therefore, 
                                 
                                    ϵ
                                    k
                                 
                               measures the absolute deviations with respect to the optimal CG. Alternatively, a hard constraint can be implemented easily by defining a lower maximum threshold in Constraint (12). When the optimal solutions exist, as is the case for most of our numerical experiments, both options are completely equivalent because the additional cost is null.

The second cost in the objective function is associated to ground operations. The handlers assigned to this task need to operate quickly because the aircraft has a limited time window before the next departure. The total wages cost depends on the number of employees assigned to the task, which is directly proportional to the number of ULDs to be moved. Each company can measure it. The cost coefficient for handling one ULD is denoted as ch
                              .

We resort to the following multi-criteria objective function where all coefficients can be defined precisely when cost realities are known:

                                 
                                    (7)
                                    
                                       
                                          min
                                          
                                          
                                             ∑
                                             
                                                ∀
                                                k
                                                ∈
                                                L
                                             
                                          
                                          
                                             c
                                             k
                                             
                                                
                                                f
                                             
                                          
                                          
                                             ϵ
                                             k
                                          
                                          +
                                          
                                             c
                                             h
                                          
                                          
                                             ∑
                                             
                                                ∀
                                                j
                                                ∈
                                                P
                                             
                                          
                                          
                                             (
                                             
                                                n
                                                j
                                                N
                                             
                                             +
                                             
                                                n
                                                j
                                                T
                                             
                                             )
                                          
                                       
                                    
                                 
                              
                           

This section presents the large number of constraints that characterize ACLPPD. We start with the basic constraints. More precisely, we show how we adapted the realistic weight and balance constraints presented in Limbourg et al. (2012) to the case of multiple legs. Next, we present the P&D constraints whose purpose is to consider the sequences of unloading and loading. We conclude the section with two other advanced constraints linked to hazardous and oversized products.


                              
                                 
                                    (8)
                                    
                                       
                                          
                                             ∑
                                             
                                                j
                                                ∈
                                                P
                                             
                                          
                                          
                                             x
                                             
                                                i
                                                j
                                                k
                                             
                                          
                                          =
                                          1
                                          
                                          ∀
                                          i
                                          ∈
                                          
                                             U
                                             k
                                             L
                                          
                                          ,
                                          
                                          ∀
                                          k
                                          ∈
                                          L
                                       
                                    
                                 
                              
                              
                                 
                                    (9)
                                    
                                       
                                          
                                             ∑
                                             
                                                i
                                                ∈
                                                
                                                   U
                                                   k
                                                   L
                                                
                                             
                                          
                                          
                                             x
                                             
                                                i
                                                j
                                                k
                                             
                                          
                                          ≤
                                          1
                                          
                                          ∀
                                          j
                                          ∈
                                          P
                                          ,
                                          
                                          ∀
                                          k
                                          ∈
                                          L
                                       
                                    
                                 
                              
                           

Constraints (8) ensure that all ULDs are accommodated on board. In our problem, the commercial department of the airline company (TNT Airways) has previously negotiated contracts with clients, and the loadmaster must load all ULDs on board. The orders cannot be rejected by the optimization process at this time. Note that, as explained in Limbourg et al. (2012), there are often far fewer ULDs to load than positions in the aircraft. Constraints (9) state that, for a given leg, a position can accommodate one ULD only.

ULDs are of many different sizes and shapes. For example, some ULDs might have a special shape to fit into the aircraft fuselage. Parameters γij
                               determine whether a particular ULD fits in a particular position:

                                 
                                    
                                       
                                          
                                             γ
                                             
                                                i
                                                j
                                             
                                          
                                          =
                                          
                                             {
                                             
                                                
                                                   
                                                      1
                                                   
                                                   
                                                      
                                                         
                                                            if
                                                            
                                                            ULD
                                                         
                                                         
                                                         i
                                                         
                                                         
                                                            fits
                                                            
                                                            in
                                                            
                                                            position
                                                         
                                                         
                                                         j
                                                      
                                                   
                                                
                                                
                                                   
                                                      0
                                                   
                                                   
                                                      
                                                         otherwise
                                                         ,
                                                      
                                                   
                                                
                                             
                                          
                                          
                                          ∀
                                          i
                                          ∈
                                          U
                                          ,
                                          ∀
                                          j
                                          ∈
                                          P
                                       
                                    
                                 
                              
                           

Constraints (10) ensure that each loaded ULD physically fits in its position. If not, the corresponding assignment is forbidden and the only allowed value for the assignment variable xijk
                               is zero. These variables are removed during optimization.

                                 
                                    (10)
                                    
                                       
                                          
                                             x
                                             
                                                i
                                                j
                                                k
                                             
                                          
                                          ≤
                                          
                                             γ
                                             
                                                i
                                                j
                                             
                                          
                                          
                                          ∀
                                          i
                                          ∈
                                          U
                                          ,
                                          
                                          ∀
                                          j
                                          ∈
                                          P
                                          ,
                                          
                                          ∀
                                          k
                                          ∈
                                          L
                                       
                                    
                                 
                              For the same aircraft, different position configurations of positions are possible. Some positions are larger and overlay several smaller positions (see Fig. 2). For each larger position j, set Ej
                               represents all smaller positions covered by j. If position j is used, all positions in set Ej
                               must be discarded.

                                 
                                    (11)
                                    
                                       
                                          
                                             x
                                             
                                                i
                                                j
                                                k
                                             
                                          
                                          +
                                          
                                             x
                                             
                                                
                                                   i
                                                   ′
                                                
                                                
                                                   j
                                                   ′
                                                
                                                k
                                             
                                          
                                          ≤
                                          1
                                          
                                          ∀
                                          i
                                          ,
                                          
                                             i
                                             ′
                                          
                                          ∈
                                          
                                             U
                                             k
                                             L
                                          
                                          ,
                                          
                                          ∀
                                          j
                                          ∈
                                          P
                                          ,
                                          
                                          ∀
                                          
                                             j
                                             ′
                                          
                                          ∈
                                          
                                             E
                                             j
                                          
                                          ,
                                          
                                          ∀
                                          k
                                          ∈
                                          L
                                       
                                    
                                 
                              
                           


                              
                                 
                                    (12)
                                    
                                       
                                          
                                             minCG
                                             k
                                          
                                          ≤
                                          
                                             CG
                                             k
                                          
                                          ≤
                                          
                                             maxCG
                                             k
                                          
                                          
                                          ∀
                                          k
                                          ∈
                                          L
                                       
                                    
                                 
                              
                              
                                 
                                    (13)
                                    
                                       
                                          −
                                          
                                             D
                                             ¯
                                          
                                          ≤
                                          
                                             ∑
                                             
                                                i
                                                ∈
                                                
                                                   U
                                                   k
                                                   L
                                                
                                             
                                          
                                          
                                             w
                                             i
                                          
                                          
                                             (
                                             
                                                ∑
                                                
                                                   j
                                                   ∈
                                                   
                                                      P
                                                      R
                                                   
                                                
                                             
                                             
                                                x
                                                
                                                   i
                                                   j
                                                   k
                                                
                                             
                                             −
                                             
                                                ∑
                                                
                                                   j
                                                   ∈
                                                   
                                                      P
                                                      L
                                                   
                                                
                                             
                                             
                                                x
                                                
                                                   i
                                                   j
                                                   k
                                                
                                             
                                             )
                                          
                                          ≤
                                          
                                             D
                                             ¯
                                          
                                          
                                          ∀
                                          k
                                          ∈
                                          L
                                       
                                    
                                 
                              
                           

Aircrafts are designed and certified to operate within certain weight and balance limits. The prime concern of aircraft balancing is longitudinal balance, or the fore and aft location of the CG along the longitudinal axis. Constraints (12) ensure longitudinal stability by verifying that the aircraft CG on each leg is within the limits certified by the aircraft manufacturer. More precisely, the boundaries depend on aircraft weight under different scenarios: weight at departure with fuel (Take Off Weight), expected landing weight (Landing Weight), and total weight without fuel (Zero Fuel Weight). The three scenarios define three two-dimensional certified areas called feasibility envelopes. Using expected consumption and the fuel curve relationship between the three scenarios, one single lower bound minCG and one upper bound maxCG are determined.
                                 1
                              
                              
                                 1
                                 A security margin can be added here as mentioned in the previous section.
                               The certified CG limits (minCG and maxCG) are based on a certain set of design load requirements, and condition the stability and controllability of the aircraft. Consequently, exceeding these limits can be dangerous.

CG location with reference to the lateral axis is also important.

Constraints (13) verify that the lateral balance is within reasonable limits. The difference between the weight allocated to either side of the fuselage centerline should not exceed 
                                 
                                    D
                                    ¯
                                 
                              . Laterally unbalanced conditions can cause adverse effects and lower efficiency. Indeed, the pilot might be forced to adjust the aileron trim tab or maintain constant aileron control pressure. Both measures cause more drag and hence more fuel consumption.


                              
                                 
                                    (14)
                                    
                                       
                                          
                                             
                                             
                                             
                                                
                                                   
                                                      w
                                                      i
                                                   
                                                   
                                                      x
                                                      
                                                         i
                                                         j
                                                         k
                                                      
                                                   
                                                   ≤
                                                   
                                                      
                                                         W
                                                         ¯
                                                      
                                                      j
                                                   
                                                   
                                                   ∀
                                                   i
                                                   ∈
                                                   
                                                      U
                                                      k
                                                      L
                                                   
                                                   ,
                                                   
                                                   ∀
                                                   j
                                                   ∈
                                                   P
                                                   ,
                                                   
                                                   ∀
                                                   k
                                                   ∈
                                                   L
                                                
                                             
                                          
                                       
                                    
                                 
                              
                              
                                 
                                    (15)
                                    
                                       
                                          
                                             
                                             
                                             
                                                
                                                   
                                                      ∑
                                                      
                                                         i
                                                         ∈
                                                         
                                                            U
                                                            k
                                                            L
                                                         
                                                      
                                                   
                                                   
                                                      ∑
                                                      
                                                         
                                                            j
                                                            ∈
                                                            P
                                                            |
                                                         
                                                         
                                                            P
                                                            j
                                                         
                                                         ∩
                                                         
                                                            O
                                                            a
                                                            d
                                                         
                                                         ≠
                                                         ∅
                                                      
                                                   
                                                   
                                                      x
                                                      
                                                         i
                                                         j
                                                         k
                                                      
                                                   
                                                   
                                                      o
                                                      
                                                         i
                                                         j
                                                         a
                                                      
                                                      d
                                                   
                                                   ≤
                                                   
                                                      
                                                         O
                                                         ¯
                                                      
                                                      a
                                                      d
                                                   
                                                   
                                                   ∀
                                                   d
                                                   ∈
                                                   D
                                                   ,
                                                   
                                                   ∀
                                                   a
                                                   ∈
                                                   
                                                      O
                                                      d
                                                   
                                                   ,
                                                   
                                                   ∀
                                                   k
                                                   ∈
                                                   L
                                                
                                             
                                          
                                       
                                    
                                 
                              
                              
                                 
                                    (16)
                                    
                                       
                                          
                                             
                                             
                                             
                                                
                                                   
                                                      ∑
                                                      
                                                         i
                                                         ∈
                                                         
                                                            U
                                                            k
                                                            L
                                                         
                                                      
                                                   
                                                   
                                                      ∑
                                                      
                                                         
                                                            j
                                                            ∈
                                                            P
                                                            |
                                                         
                                                         
                                                            P
                                                            j
                                                         
                                                         ∩
                                                         
                                                            ⋃
                                                            
                                                               c
                                                               =
                                                               1
                                                            
                                                            a
                                                         
                                                         
                                                            F
                                                            c
                                                         
                                                         ≠
                                                         ∅
                                                      
                                                   
                                                   
                                                      ∑
                                                      
                                                         l
                                                         =
                                                         1
                                                      
                                                      a
                                                   
                                                   
                                                      x
                                                      
                                                         i
                                                         j
                                                         k
                                                      
                                                   
                                                   
                                                      f
                                                      
                                                         i
                                                         j
                                                         l
                                                      
                                                   
                                                   ≤
                                                   
                                                      
                                                         F
                                                         ¯
                                                      
                                                      a
                                                   
                                                   
                                                   ∀
                                                   a
                                                   ∈
                                                   F
                                                   ,
                                                   
                                                   ∀
                                                   k
                                                   ∈
                                                   L
                                                
                                             
                                          
                                       
                                    
                                 
                              
                              
                                 
                                    (17)
                                    
                                       
                                          
                                             
                                             
                                             
                                                
                                                   
                                                      ∑
                                                      
                                                         i
                                                         ∈
                                                         
                                                            U
                                                            k
                                                            L
                                                         
                                                      
                                                   
                                                   
                                                      ∑
                                                      
                                                         
                                                            j
                                                            ∈
                                                            P
                                                            |
                                                         
                                                         
                                                            P
                                                            j
                                                         
                                                         ∩
                                                         
                                                            ⋃
                                                            
                                                               c
                                                               =
                                                               1
                                                            
                                                            a
                                                         
                                                         
                                                            T
                                                            c
                                                         
                                                         ≠
                                                         ∅
                                                      
                                                   
                                                   
                                                      ∑
                                                      
                                                         l
                                                         =
                                                         1
                                                      
                                                      a
                                                   
                                                   
                                                      x
                                                      
                                                         i
                                                         j
                                                         k
                                                      
                                                   
                                                   
                                                      t
                                                      
                                                         i
                                                         j
                                                         l
                                                      
                                                   
                                                   ≤
                                                   
                                                      
                                                         T
                                                         ¯
                                                      
                                                      a
                                                   
                                                   
                                                   ∀
                                                   a
                                                   ∈
                                                   F
                                                   ,
                                                   
                                                   ∀
                                                   k
                                                   ∈
                                                   L
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           

For structural design reasons, different parts of the aircraft are subject to weight limits. In other words, placing excessive weight on given sections of the aircraft is not allowed.

Constraints (14) ensure that the weight exerted on each position does not exceed the maximum weight allowed by the position (denoted by 
                                 
                                    
                                       W
                                       ¯
                                    
                                    j
                                 
                              ). There are also combined weight limits. Several compartments are defined on each deck, and on the entire aircraft. Constraints (15) ensure that the total weight in each compartment does not exceed the limit.


                              
                                 D
                               denotes the set of decks augmented by an artificial deck that corresponds to the entire aircraft. Let us imagine that the aircraft is cut in slices of one-inch width. There is a specific weight limit for each slice and each deck d in 
                                 D
                              . Under some uniform distribution assumptions of the weight within the positions, the one-inch slices can be replaced by broader slices. 
                                 
                                    O
                                    a
                                    d
                                 
                               denotes the ath slice for deck d, and 
                                 
                                    
                                       O
                                       ¯
                                    
                                    a
                                    d
                                 
                               the maximum weight allowed for this area. Finally, 
                                 
                                    o
                                    
                                       i
                                       j
                                       a
                                    
                                    d
                                 
                               represents the proportion of wi
                               in 
                                 
                                    {
                                    
                                       P
                                       j
                                    
                                    ∩
                                    
                                       O
                                       a
                                       d
                                    
                                    }
                                 
                              . In the same way, there are weight limits on overlapping areas. With Constraint (16) (respectively Constraints (17)), we are interested in the cumulative weight from the nose (respectively the tail) to each of the previously defined slices. The consecutive forward and aft slices are denoted by Fa
                               (forward) and Ta
                               (aft). 
                                 
                                    
                                       F
                                       ¯
                                    
                                    a
                                 
                               (respectively 
                                 
                                    
                                       T
                                       ¯
                                    
                                    a
                                 
                              ) is the maximum cumulative weight allowed for the section that starts at the nose (respectively the tail) and ends at Fa
                               (respectively Ta
                              ). Finally, the variable fija
                               (respectively tija
                              ) represents the proportion of wi
                               in {Pj
                              ∩Fa
                              } (respectively, {Pj
                              ∩Ta
                              }). See Limbourg et al. (2012) for details.

Because of their origin and destination, not all ULDs are present on each leg, which means that the corresponding xijk
                               variables can be initialized to zero (and removed during the optimization). This is specified by Constraint (18).

                                 
                                    (18)
                                    
                                       
                                          
                                             x
                                             
                                                i
                                                j
                                                k
                                             
                                          
                                          =
                                          0
                                          
                                          ∀
                                          i
                                          ∉
                                          
                                             U
                                             k
                                             L
                                          
                                          ,
                                          
                                          ∀
                                          j
                                          ∈
                                          P
                                       
                                    
                                 
                              
                           

Constraints (19) prevent the collision of ULDs unloaded through different doors. Constraints (19) state that the ULD in position j can only leave through the nose door (
                                 
                                    
                                       α
                                       j
                                       N
                                    
                                    =
                                    1
                                 
                              ) if there is no ULD between j and the nose door (
                                 
                                    B
                                    j
                                    N
                                 
                              ) that is attempting to leave in the opposite direction, i.e., through the tail door (the sum is null). Note that Constraints (19) manage potential conflicting moves in both directions.

                                 
                                    (19)
                                    
                                       
                                          
                                             α
                                             
                                                
                                                   j
                                                   ′
                                                
                                             
                                             T
                                          
                                          ≤
                                          1
                                          −
                                          
                                             α
                                             j
                                             N
                                          
                                          
                                          ∀
                                          j
                                          ∈
                                          P
                                          ,
                                          
                                          ∀
                                          
                                             j
                                             ′
                                          
                                          ∈
                                          
                                             B
                                             j
                                             N
                                          
                                       
                                    
                                 
                              
                           

Any ULD assigned to a different position for the second leg must be unloaded first. Constraints (20) ensure that each ULD not unloaded at the intermediate destination, i.e., when 
                                 
                                    (
                                    
                                       n
                                       j
                                       N
                                    
                                    +
                                    
                                       n
                                       j
                                       T
                                    
                                    )
                                 
                               is null, maintains the same position for the second leg (
                                 
                                    
                                       x
                                       
                                          i
                                          j
                                          1
                                       
                                    
                                    =
                                    
                                       x
                                       
                                          i
                                          j
                                          2
                                       
                                    
                                 
                              ).

                                 
                                    (20)
                                    
                                       
                                          
                                             x
                                             
                                                i
                                                j
                                                1
                                             
                                          
                                          −
                                          
                                             x
                                             
                                                i
                                                j
                                                2
                                             
                                          
                                          ≤
                                          
                                             (
                                             
                                                n
                                                j
                                                N
                                             
                                             +
                                             
                                                n
                                                j
                                                T
                                             
                                             )
                                          
                                          
                                          ∀
                                          j
                                          ∈
                                          P
                                          ,
                                          
                                          ∀
                                          i
                                          ∈
                                          
                                             U
                                             3
                                          
                                       
                                    
                                 
                              
                           

Constraints (21)–(23) ensure a feasible loading sequence of the ULDs that belong to 
                                 
                                    U
                                    2
                                 
                               at the intermediate airport. These ULDs can only reach positions with a free path. We define binary variables 
                                 
                                    β
                                    j
                                    N
                                 
                               and 
                                 
                                    β
                                    j
                                    T
                                 
                               to ensure a feasible loading sequence:

                                 
                                    
                                       
                                          
                                             
                                                
                                                   β
                                                   j
                                                   N
                                                
                                             
                                             
                                                
                                                   =
                                                   
                                                      {
                                                      
                                                         
                                                            
                                                               1
                                                            
                                                            
                                                               
                                                                  if
                                                                  
                                                                  the
                                                                  
                                                                  path
                                                                  
                                                                  from
                                                                  
                                                                  the
                                                                  
                                                                  nose
                                                                  
                                                                  door
                                                                  
                                                                  to
                                                                  
                                                                  position
                                                               
                                                            
                                                         
                                                         
                                                            
                                                            
                                                               
                                                                  
                                                                  j
                                                                  
                                                                  
                                                                     is
                                                                     
                                                                     not
                                                                     
                                                                     free
                                                                  
                                                                  ,
                                                               
                                                            
                                                         
                                                         
                                                            
                                                               0
                                                            
                                                            
                                                               
                                                                  otherwise
                                                                  .
                                                               
                                                            
                                                         
                                                      
                                                   
                                                
                                             
                                          
                                          
                                             
                                                
                                                   β
                                                   j
                                                   T
                                                
                                             
                                             
                                                
                                                   =
                                                   
                                                      {
                                                      
                                                         
                                                            
                                                               1
                                                            
                                                            
                                                               
                                                                  if
                                                                  
                                                                  the
                                                                  
                                                                  path
                                                                  
                                                                  from
                                                                  
                                                                  the
                                                                  
                                                                  tail
                                                                  
                                                                  door
                                                                  
                                                                  to
                                                                  
                                                                  position
                                                               
                                                            
                                                         
                                                         
                                                            
                                                            
                                                               
                                                                  
                                                                  j
                                                                  
                                                                  
                                                                     is
                                                                     
                                                                     not
                                                                     
                                                                     free
                                                                  
                                                                  ,
                                                               
                                                            
                                                         
                                                         
                                                            
                                                               0
                                                            
                                                            
                                                               
                                                                  otherwise
                                                                  .
                                                               
                                                            
                                                         
                                                      
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           

Constraints (21) determine whether there is a free path between the nose door and position j. At the time of loading, the path can only be blocked by ULDs from 
                                 
                                    U
                                    3
                                 
                               that were not unloaded (
                                 
                                    
                                       n
                                       
                                          
                                             j
                                             ′
                                          
                                       
                                       T
                                    
                                    +
                                    
                                       n
                                       
                                          
                                             j
                                             ′
                                          
                                       
                                       N
                                    
                                    =
                                    0
                                 
                              ). If there is no free path, the left term of (21) is strictly positive and the new binary variable 
                                 
                                    β
                                    j
                                    N
                                 
                               can only obtain the value one. Similarly, Constraints (22) restrict 
                                 
                                    β
                                    j
                                    T
                                 
                               to one if the path through the tail door to position j is not free. If both paths are blocked, Constraints (23) state that ULD i cannot be assigned to position j.

                                 
                                    (21)
                                    
                                       
                                          
                                             
                                             
                                             
                                                
                                                   
                                                      x
                                                      
                                                         
                                                            i
                                                            ′
                                                         
                                                         
                                                            j
                                                            ′
                                                         
                                                         1
                                                      
                                                   
                                                   −
                                                   
                                                      n
                                                      
                                                         
                                                            j
                                                            ′
                                                         
                                                      
                                                      T
                                                   
                                                   −
                                                   
                                                      n
                                                      
                                                         
                                                            j
                                                            ′
                                                         
                                                      
                                                      N
                                                   
                                                   ≤
                                                   
                                                      β
                                                      j
                                                      N
                                                   
                                                   
                                                   ∀
                                                   j
                                                   ∈
                                                   P
                                                   ,
                                                   
                                                   ∀
                                                   
                                                      j
                                                      ′
                                                   
                                                   ∈
                                                   
                                                      B
                                                      j
                                                      N
                                                   
                                                   ,
                                                   
                                                   ∀
                                                   
                                                      i
                                                      ′
                                                   
                                                   ∈
                                                   
                                                      U
                                                      3
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                              
                              
                                 
                                    (22)
                                    
                                       
                                          
                                             
                                             
                                             
                                                
                                                   
                                                      x
                                                      
                                                         
                                                            i
                                                            ′
                                                         
                                                         
                                                            j
                                                            ′
                                                         
                                                         1
                                                      
                                                   
                                                   −
                                                   
                                                      n
                                                      
                                                         
                                                            j
                                                            ′
                                                         
                                                      
                                                      T
                                                   
                                                   −
                                                   
                                                      n
                                                      
                                                         
                                                            j
                                                            ′
                                                         
                                                      
                                                      N
                                                   
                                                   ≤
                                                   
                                                      β
                                                      j
                                                      T
                                                   
                                                   
                                                   ∀
                                                   j
                                                   ∈
                                                   P
                                                   ,
                                                   
                                                   ∀
                                                   
                                                      j
                                                      ′
                                                   
                                                   ∈
                                                   
                                                      B
                                                      j
                                                      T
                                                   
                                                   ,
                                                   
                                                   ∀
                                                   
                                                      i
                                                      ′
                                                   
                                                   ∈
                                                   
                                                      U
                                                      3
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                              
                              
                                 
                                    (23)
                                    
                                       
                                          
                                             
                                             
                                             
                                                
                                                   
                                                      β
                                                      j
                                                      T
                                                   
                                                   +
                                                   
                                                      β
                                                      j
                                                      N
                                                   
                                                   −
                                                   1
                                                   ≤
                                                   
                                                      (
                                                      1
                                                      −
                                                      
                                                         x
                                                         
                                                            i
                                                            j
                                                            2
                                                         
                                                      
                                                      )
                                                   
                                                   
                                                   ∀
                                                   j
                                                   ∈
                                                   P
                                                   ,
                                                   
                                                   ∀
                                                   i
                                                   ∈
                                                   
                                                      U
                                                      2
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           

Different aircraft types have different door configurations. Binary parameters 
                                 
                                    δ
                                    j
                                    N
                                 
                               and 
                                 
                                    δ
                                    j
                                    T
                                 
                               are introduced to manage the availability of these doors:

                                 
                                    
                                       
                                          
                                             
                                                
                                                   δ
                                                   j
                                                   N
                                                
                                             
                                             
                                                =
                                             
                                             
                                                
                                                   
                                                      {
                                                      
                                                         
                                                            
                                                               
                                                                  1
                                                                  
                                                                  
                                                                     if
                                                                     
                                                                     
                                                                     a
                                                                     
                                                                     nose
                                                                     
                                                                     door
                                                                     
                                                                     is
                                                                     
                                                                     available
                                                                  
                                                                  
                                                                  
                                                                     for
                                                                     
                                                                     position
                                                                  
                                                                  
                                                                  j
                                                               
                                                            
                                                         
                                                         
                                                            
                                                               
                                                                  0
                                                                  
                                                                  otherwise
                                                                  ,
                                                               
                                                            
                                                         
                                                      
                                                   
                                                   ∀
                                                   j
                                                   ∈
                                                   P
                                                
                                             
                                          
                                          
                                             
                                                
                                                   δ
                                                   j
                                                   T
                                                
                                             
                                             
                                                =
                                             
                                             
                                                
                                                   
                                                      {
                                                      
                                                         
                                                            
                                                               
                                                                  1
                                                                  
                                                                  
                                                                     if
                                                                     
                                                                     
                                                                     a
                                                                     
                                                                     tail
                                                                     
                                                                     door
                                                                     
                                                                     is
                                                                  
                                                                  
                                                                  
                                                                     available
                                                                     
                                                                     for
                                                                     
                                                                     position
                                                                  
                                                                  
                                                                  j
                                                               
                                                            
                                                         
                                                         
                                                            
                                                               
                                                                  0
                                                                  
                                                                  otherwise
                                                                  ,
                                                               
                                                            
                                                         
                                                      
                                                   
                                                   
                                                   ∀
                                                   j
                                                   ∈
                                                   P
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           

Constraints (24) and (25) ensure that ULD unloading is not conducted through a door that does not exist. Indeed, if there is no nose door (respectively tail door) for position j, 
                                 
                                    δ
                                    j
                                    N
                                 
                               (respectively 
                                 
                                    δ
                                    j
                                    T
                                 
                              ) is zero and 
                                 
                                    α
                                    j
                                    N
                                 
                               (respectively 
                                 
                                    α
                                    j
                                    T
                                 
                              ) must be zero. Similarly, Constraints (26) and (27) ensure that when there is no nose (respectively tail) door associated to a position, the path from this door to position j is automatically forbidden, and consequently, 
                                 
                                    
                                       β
                                       j
                                       N
                                    
                                    =
                                    1
                                 
                               (respectively 
                                 
                                    
                                       β
                                       j
                                       T
                                    
                                    =
                                    1
                                 
                              ).

                                 
                                    (24)
                                    
                                       
                                          
                                             α
                                             j
                                             N
                                          
                                          ≤
                                          
                                             δ
                                             j
                                             N
                                          
                                          
                                          ∀
                                          j
                                          ∈
                                          P
                                       
                                    
                                 
                              
                              
                                 
                                    (25)
                                    
                                       
                                          
                                             α
                                             j
                                             T
                                          
                                          ≤
                                          
                                             δ
                                             j
                                             T
                                          
                                          
                                          ∀
                                          j
                                          ∈
                                          P
                                       
                                    
                                 
                              
                              
                                 
                                    (26)
                                    
                                       
                                          
                                             β
                                             j
                                             N
                                          
                                          =
                                          1
                                          −
                                          
                                             δ
                                             j
                                             N
                                          
                                          
                                          ∀
                                          j
                                          ∈
                                          P
                                       
                                    
                                 
                              
                              
                                 
                                    (27)
                                    
                                       
                                          
                                             β
                                             j
                                             T
                                          
                                          =
                                          1
                                          −
                                          
                                             δ
                                             j
                                             T
                                          
                                          
                                          ∀
                                          j
                                          ∈
                                          P
                                       
                                    
                                 
                              
                           

Because of ULD dimensions, some doors might not be accessible. Binary parameters 
                                 
                                    μ
                                    j
                                    N
                                 
                               and 
                                 
                                    μ
                                    j
                                    T
                                 
                               are introduced to manage door accessibility for a particular ULD.

                                 
                                    
                                       
                                          
                                             
                                                
                                                   μ
                                                   i
                                                   N
                                                
                                             
                                             
                                                =
                                             
                                             
                                                
                                                   
                                                      {
                                                      
                                                         
                                                            
                                                               
                                                                  1
                                                                  
                                                                  
                                                                     if
                                                                     
                                                                     ULD
                                                                  
                                                                  
                                                                  i
                                                                  
                                                                  
                                                                     pass
                                                                     
                                                                     through
                                                                  
                                                                  
                                                                  
                                                                     the
                                                                     
                                                                     nose
                                                                     
                                                                     door
                                                                  
                                                               
                                                            
                                                         
                                                         
                                                            
                                                               
                                                                  0
                                                                  
                                                                  otherwise
                                                                  ,
                                                               
                                                            
                                                         
                                                      
                                                   
                                                   
                                                   ∀
                                                   i
                                                   ∈
                                                   U
                                                
                                             
                                          
                                          
                                             
                                                
                                                   μ
                                                   i
                                                   T
                                                
                                             
                                             
                                                =
                                             
                                             
                                                
                                                   
                                                      {
                                                      
                                                         
                                                            
                                                               
                                                                  1
                                                                  
                                                                  
                                                                     if
                                                                     
                                                                     ULD
                                                                  
                                                                  
                                                                  i
                                                                  
                                                                  
                                                                     pass
                                                                     
                                                                     through
                                                                  
                                                                  
                                                                  
                                                                     the
                                                                     
                                                                     tail
                                                                     
                                                                     door
                                                                  
                                                               
                                                            
                                                         
                                                         
                                                            
                                                               
                                                                  0
                                                                  
                                                                  otherwise
                                                                  ,
                                                               
                                                            
                                                         
                                                      
                                                   
                                                   
                                                   ∀
                                                   i
                                                   ∈
                                                   U
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           

Constraints (28) stipulate that if ULD i cannot pass through the nose door (
                                 
                                    
                                       μ
                                       i
                                       N
                                    
                                    =
                                    0
                                 
                              ), the unloading of this ULD i assigned to position j (
                                 
                                    
                                       x
                                       
                                          i
                                          j
                                          k
                                       
                                    
                                    =
                                    1
                                 
                              ) cannot occur through the nose door (
                                 
                                    
                                       α
                                       j
                                       N
                                    
                                    =
                                    0
                                 
                               must be zero). Constraints (29) are equally applicable to the tail door.

                                 
                                    (28)
                                    
                                       
                                          
                                             x
                                             
                                                i
                                                j
                                                k
                                             
                                          
                                          +
                                          
                                             α
                                             j
                                             N
                                          
                                          ≤
                                          1
                                          +
                                          
                                             μ
                                             i
                                             N
                                          
                                          
                                          ∀
                                          k
                                          ∈
                                          L
                                          
                                          ∀
                                          i
                                          ∈
                                          
                                             U
                                             k
                                             L
                                          
                                          ,
                                          
                                          ∀
                                          j
                                          ∈
                                          P
                                          ,
                                       
                                    
                                 
                              
                              
                                 
                                    (29)
                                    
                                       
                                          
                                             x
                                             
                                                i
                                                j
                                                k
                                             
                                          
                                          +
                                          
                                             α
                                             j
                                             T
                                          
                                          ≤
                                          1
                                          +
                                          
                                             μ
                                             i
                                             T
                                          
                                          
                                          ∀
                                          k
                                          ∈
                                          L
                                          
                                          ∀
                                          i
                                          ∈
                                          
                                             U
                                             k
                                             L
                                          
                                          ,
                                          
                                          ∀
                                          j
                                          ∈
                                          P
                                          ,
                                       
                                    
                                 
                              
                           

Finally, in order to achieve a CG as close as possible to the target value, some ULDs can be assigned to a different position on the second leg. Each time, the gain in terms of fuel will be greater than the additional costs induced by ground operations. However, this case implies a domino effect: all ULDs in the path of those being unloaded to achieve better CG will have to be unloaded as well. This is ensured by Constraints (30) and (31). With Constraints (30), if the ULD in position j is unloaded unnecessarily through the tail door (
                                 
                                    
                                       n
                                       j
                                       T
                                    
                                    =
                                    1
                                 
                              ), all ULDs from 
                                 
                                    U
                                    3
                                 
                               assigned to a position between j and the tail door (
                                 
                                    B
                                    j
                                    T
                                 
                              ) over the first leg (
                                 
                                    
                                       x
                                       
                                          i
                                          
                                             j
                                             ′
                                          
                                          1
                                       
                                    
                                    =
                                    1
                                 
                              ) must also be unloaded “unnecessarily” (
                                 
                                    
                                       n
                                       
                                          
                                             j
                                             ′
                                          
                                       
                                       T
                                    
                                    =
                                    1
                                 
                              ). Constraints (31) are equally applicable to the nose door.

                                 
                                    (30)
                                    
                                       
                                          
                                             x
                                             
                                                i
                                                
                                                   j
                                                   ′
                                                
                                                1
                                             
                                          
                                          −
                                          1
                                          +
                                          
                                             n
                                             j
                                             T
                                          
                                          ≤
                                          
                                             n
                                             
                                                
                                                   j
                                                   ′
                                                
                                             
                                             T
                                          
                                          
                                          ∀
                                          i
                                          ∈
                                          
                                             U
                                             3
                                          
                                          ,
                                          
                                          ∀
                                          j
                                          ∈
                                          P
                                          ,
                                          
                                          ∀
                                          
                                             j
                                             ′
                                          
                                          ∈
                                          
                                             B
                                             j
                                             T
                                          
                                       
                                    
                                 
                              
                              
                                 
                                    (31)
                                    
                                       
                                          
                                             x
                                             
                                                i
                                                
                                                   j
                                                   ′
                                                
                                                1
                                             
                                          
                                          −
                                          1
                                          +
                                          
                                             n
                                             j
                                             N
                                          
                                          ≤
                                          
                                             n
                                             
                                                
                                                   j
                                                   ′
                                                
                                             
                                             N
                                          
                                          
                                          ∀
                                          i
                                          ∈
                                          
                                             U
                                             3
                                          
                                          ,
                                          
                                          ∀
                                          j
                                          ∈
                                          P
                                          ,
                                          
                                          ∀
                                          
                                             j
                                             ′
                                          
                                          ∈
                                          
                                             B
                                             j
                                             N
                                          
                                       
                                    
                                 
                              
                           

Here are two advanced constraints linked to hazardous and oversized products.

Some loads can contain hazardous goods. For such cases, segregation requirements apply in order to ensure safety. In general, dangerous goods can be classified into a limited number of categories. The required segregation distance (in inches) between categories i and i′ is known and denoted as 
                                 
                                    s
                                    
                                       i
                                       
                                          i
                                          ′
                                       
                                    
                                 
                              . The effective longitudinal distance (in inches) between positions j and j′ is denoted as 
                                 
                                    e
                                    
                                       j
                                       
                                          j
                                          ′
                                       
                                    
                                 
                              . Based on this information, we introduce the following binary parameters 
                                 
                                    ζ
                                    
                                       j
                                       
                                          j
                                          ′
                                       
                                    
                                    
                                       i
                                       
                                          i
                                          ′
                                       
                                    
                                 
                              :

                                 
                                    
                                       
                                          
                                             ζ
                                             
                                                j
                                                
                                                   j
                                                   ′
                                                
                                             
                                             
                                                i
                                                
                                                   i
                                                   ′
                                                
                                             
                                          
                                          =
                                          
                                             {
                                             
                                                
                                                   
                                                      
                                                         1
                                                         
                                                         if
                                                         
                                                         
                                                            e
                                                            
                                                               
                                                               j
                                                               j
                                                            
                                                         
                                                         ≤
                                                         
                                                            s
                                                            
                                                               i
                                                               i
                                                            
                                                         
                                                      
                                                   
                                                
                                                
                                                   
                                                      
                                                         0
                                                         
                                                         otherwise
                                                         ,
                                                      
                                                   
                                                
                                             
                                          
                                          
                                          ∀
                                          i
                                          ,
                                          
                                             i
                                             ′
                                          
                                          ∈
                                          U
                                          ,
                                          
                                          ∀
                                          j
                                          ,
                                          
                                             j
                                             ′
                                          
                                          ∈
                                          P
                                       
                                    
                                 
                              
                           

Constraints (32) ensure that two hazardous ULDs i and i′ are not assigned to positions j and j′ if the distance between these positions does not exceed the requested segregation distance between the two ULDs. Indeed, if the distance between the two positions is not sufficient (
                                 
                                    
                                       ζ
                                       
                                          
                                          j
                                          
                                             j
                                             ′
                                          
                                       
                                       
                                          i
                                          
                                             i
                                             ′
                                          
                                       
                                    
                                    =
                                    1
                                 
                              ), xijk
                               and 
                                 
                                    x
                                    
                                       
                                          i
                                          ′
                                       
                                       
                                          j
                                          ′
                                       
                                       k
                                    
                                 
                               cannot both be equal to one.

                                 
                                    (32)
                                    
                                       
                                          
                                             x
                                             
                                                i
                                                j
                                                k
                                             
                                          
                                          +
                                          
                                             x
                                             
                                                
                                                   i
                                                   ′
                                                
                                                
                                                   j
                                                   ′
                                                
                                                k
                                             
                                          
                                          ≤
                                          2
                                          −
                                          
                                             ζ
                                             
                                                
                                                j
                                                
                                                   j
                                                   ′
                                                
                                             
                                             
                                                i
                                                
                                                   i
                                                   ′
                                                
                                             
                                          
                                          
                                          ∀
                                          k
                                          ∈
                                          L
                                          ,
                                          
                                          ∀
                                          i
                                          ,
                                          
                                             i
                                             ′
                                          
                                          ∈
                                          
                                             U
                                             k
                                             L
                                          
                                          ,
                                          
                                          ∀
                                          j
                                          ,
                                          
                                             j
                                             ′
                                          
                                          ∈
                                          P
                                       
                                    
                                 
                              
                           

Some oversized ULDs do not fit in one position. In this case, several positions are exactly or partially combined to form larger positions. In order to introduce these specific ULDs into our model, we divide each larger ULD into two smaller ones. However, we need to ensure that the model assigns the two parts of the larger ULD to two adjacent positions. If we denote as ti
                               the ULD linked to ULD i, and as 
                                 
                                    A
                                    j
                                 
                               the set of positions adjacent to position j, Constraints (33) ensure the correct assignments of larger ULDs:

                                 
                                    (33)
                                    
                                       
                                          
                                             x
                                             
                                                i
                                                j
                                                k
                                             
                                          
                                          ≤
                                          
                                             ∑
                                             
                                                ∀
                                                
                                                   j
                                                   ′
                                                
                                                ∈
                                                
                                                   A
                                                   j
                                                
                                             
                                          
                                          
                                             x
                                             
                                                
                                                   t
                                                   i
                                                
                                                
                                                   j
                                                   ′
                                                
                                                k
                                             
                                          
                                          
                                          ∀
                                          i
                                          ∈
                                          
                                             U
                                             k
                                             L
                                          
                                          ,
                                          
                                          ∀
                                          j
                                          ∈
                                          P
                                          ,
                                          
                                          ∀
                                          k
                                          ∈
                                          L
                                       
                                    
                                 
                              
                           

Let us now provide insight into the complexity of the problem. The first term of the objective function is to consider balanced loading and fuel consumption. We show below that the problem defined by this first part of the objective function and for one leg is already NP-hard.

                        Definiton
                        We define ACLPPD
                              D
                            as the decision version of ACLPPD that asks whether the objective function (7) can reach a null value.

ACLPPD
                              D
                            is in NP.

Because the problem is expressed as a mixed integer linear problem, inputting the values of the decision variables into the model is sufficient for verifying in linear time all the constraints and value of the objective function.□

Now, we provide a reduction from the Set-Partition Problem (SPP) known to be NP-complete (Garey and Johnson, 1979). In SPP, the question is to determine whether it is possible to divide a set of numbers 
                        
                           S
                           =
                           {
                           
                              s
                              1
                           
                           ,
                           …
                           ,
                           
                              s
                              n
                           
                           }
                        
                      into two disjoint subsets S
                     1 and S
                     2 so that 
                        
                           S
                           =
                           
                              S
                              1
                           
                           ∪
                           
                              S
                              2
                           
                           ,
                        
                     
                     
                        
                           
                              S
                              1
                           
                           ∩
                           
                              S
                              2
                           
                           =
                           ∅
                           ,
                        
                      and 
                        
                           
                              ∑
                              
                                 i
                                 ∈
                                 
                                    S
                                    1
                                 
                              
                           
                           
                              s
                              i
                           
                           =
                           
                              ∑
                              
                                 i
                                 ∈
                                 
                                    S
                                    2
                                 
                              
                           
                           
                              s
                              i
                           
                        
                     . For any instance of the Set-Partition Problem, one can construct in polynomial time an instance τ(S) of ACLPPD
                        D
                      problem as follows:

                        
                           (34)
                           
                              
                                 
                                    
                                    
                                    
                                       
                                          
                                             U
                                             2
                                          
                                          =
                                          
                                             U
                                             3
                                          
                                          =
                                          ∅
                                          
                                          
                                             One
                                             
                                             leg
                                          
                                       
                                    
                                 
                              
                           
                        
                     
                     
                        
                           (35)
                           
                              
                                 
                                    
                                    
                                    
                                       
                                          
                                             c
                                             h
                                          
                                          =
                                          0
                                          
                                          
                                             No
                                             
                                             handling
                                             
                                             costs
                                          
                                       
                                    
                                 
                              
                           
                        
                     
                     
                        
                           (36)
                           
                              
                                 
                                    
                                    
                                    
                                       
                                          P
                                          =
                                          {
                                          1
                                          …
                                          2
                                          n
                                          }
                                          
                                          2
                                          n
                                          
                                          positions
                                       
                                    
                                 
                              
                           
                        
                     
                     
                        
                           (37)
                           
                              
                                 
                                    
                                    
                                    
                                       
                                          
                                             a
                                             j
                                          
                                          =
                                          
                                             {
                                             
                                                
                                                   
                                                      
                                                         
                                                            OCG
                                                            1
                                                         
                                                         −
                                                         1
                                                         
                                                         ∀
                                                         j
                                                         ∈
                                                         
                                                            {
                                                            1
                                                            …
                                                            n
                                                            }
                                                         
                                                      
                                                   
                                                
                                                
                                                   
                                                      
                                                         
                                                            OCG
                                                            1
                                                         
                                                         +
                                                         1
                                                         
                                                         ∀
                                                         j
                                                         ∈
                                                         
                                                            {
                                                            n
                                                            +
                                                            1
                                                            …
                                                            2
                                                            n
                                                            }
                                                         
                                                      
                                                   
                                                
                                             
                                          
                                          
                                          
                                          
                                             Position
                                             
                                             locations
                                          
                                       
                                    
                                 
                              
                           
                        
                     
                     
                        
                           (38)
                           
                              
                                 
                                    
                                    
                                    
                                       
                                          
                                             E
                                             1
                                          
                                          =
                                          ∅
                                          
                                          
                                             No
                                             
                                             overlaying
                                             
                                             positions
                                          
                                       
                                    
                                 
                              
                           
                        
                     
                     
                        
                           (39)
                           
                              
                                 
                                    
                                    
                                    
                                       
                                          U
                                          =
                                          {
                                          1
                                          …
                                          n
                                          }
                                          
                                          n
                                          
                                          ULDs
                                       
                                    
                                 
                              
                           
                        
                     
                     
                        
                           (40)
                           
                              
                                 
                                    
                                    
                                    
                                       
                                          
                                             w
                                             i
                                          
                                          =
                                          
                                             s
                                             i
                                          
                                          
                                          ∀
                                          i
                                          ∈
                                          U
                                          
                                          
                                             ULD
                                             
                                             weights
                                          
                                       
                                    
                                 
                              
                           
                        
                     
                     
                        
                           (41)
                           
                              
                                 
                                    
                                    
                                    
                                       
                                          
                                             γ
                                             
                                                i
                                                j
                                             
                                          
                                          =
                                          1
                                          
                                          ∀
                                          i
                                          ∈
                                          U
                                          ,
                                          ∀
                                          j
                                          ∈
                                          P
                                          
                                          
                                             All
                                             
                                             positions
                                             
                                             are
                                             
                                             feasible
                                          
                                       
                                    
                                 
                              
                           
                        
                     
                     
                        
                           (42)
                           
                              
                                 
                                    
                                    
                                    
                                       
                                          
                                             minCG
                                             1
                                          
                                          =
                                          
                                             OCG
                                             1
                                          
                                          −
                                          1
                                          
                                          
                                             Longitudinal
                                             
                                             stability
                                          
                                       
                                    
                                 
                              
                           
                        
                     
                     
                        
                           (43)
                           
                              
                                 
                                    
                                    
                                    
                                       
                                          
                                             maxCG
                                             1
                                          
                                          =
                                          
                                             OCG
                                             1
                                          
                                          +
                                          1
                                          
                                          
                                             Longitudinal
                                             
                                             stability
                                          
                                       
                                    
                                 
                              
                           
                        
                     
                     
                        
                           (44)
                           
                              
                                 
                                    
                                    
                                    
                                       
                                          
                                             P
                                             R
                                          
                                          =
                                          
                                             P
                                             L
                                          
                                          =
                                          ∅
                                          
                                          
                                             Only
                                             
                                             central
                                             
                                             positions
                                          
                                       
                                    
                                 
                              
                           
                        
                     
                     
                        
                           (45)
                           
                              
                                 
                                    
                                    
                                    
                                       
                                          
                                             
                                                W
                                                ¯
                                             
                                             j
                                          
                                          =
                                          max
                                          
                                             s
                                             i
                                          
                                          
                                          ∀
                                          j
                                          ∈
                                          P
                                          
                                          
                                             No
                                             
                                             weight
                                             
                                             restriction
                                          
                                       
                                    
                                 
                              
                           
                        
                     
                     
                        
                           (46)
                           
                              
                                 
                                    
                                    
                                    
                                       
                                          
                                             O
                                             a
                                             d
                                          
                                          =
                                          
                                             ∑
                                             
                                                i
                                                ∈
                                                S
                                             
                                          
                                          
                                             s
                                             i
                                          
                                          
                                          ∀
                                          d
                                          ∈
                                          D
                                          ,
                                          
                                          ∀
                                          a
                                          ∈
                                          
                                             O
                                             d
                                          
                                          
                                          
                                             No
                                             
                                             weight
                                             
                                             restriction
                                          
                                       
                                    
                                 
                              
                           
                        
                     
                     
                        
                           (47)
                           
                              
                                 
                                    
                                    
                                    
                                       
                                          
                                             
                                                F
                                                ¯
                                             
                                             a
                                          
                                          =
                                          
                                             
                                                T
                                                ¯
                                             
                                             a
                                          
                                          =
                                          
                                             ∑
                                             
                                                i
                                                ∈
                                                S
                                             
                                          
                                          
                                             s
                                             i
                                          
                                          
                                          ∀
                                          a
                                          ∈
                                          F
                                          
                                          
                                             No
                                             
                                             weight
                                             
                                             restriction
                                          
                                       
                                    
                                 
                              
                           
                        
                     
                  

Let us interpret each element of S as one standard ULD. The values {
                        
                           
                              s
                              1
                           
                           ,
                           …
                           ,
                           
                              s
                              n
                           
                        
                     } denote the ULD weights (Equations (39) and (40)). We build an aircraft with 2n positions (Equation (36)) divided into two subsets. The first (respectively last) n positions are located at one unit of distance to the front (respectively to the aft) with respect to the ideal location of the center of gravity OCG (Equation (37)). Let us denote as 
                        
                           P
                           1
                        
                      (respectively 
                        
                           P
                           2
                        
                     ) the set of forward (respectively aft) positions. Because the positions are located at only two different locations, this implies that the containers are stackable. Alternatively or simultaneously, we could consider each position to be on a different deck. In this sense, the positions are not defined as overlaying exclusive positions (Equation (38)). The corresponding ACLPPD
                        D
                      is less constrained than the general problem could be. All ULDs that can fit in any positions (Constraints (10) are always satisfied because of Equations (41)). Longitudinal stability is guaranteed (Equations (42) and (43)) for Constraints (12). All positions are located centrally (Equation 44), which ensures lateral stability (Constraints (13)). There is no weight restriction (Equations (45)–(47) vs. Constraints (14)–(17)). Finally, we assume that the aircraft possesses at least one deck and one door per deck.

The transformation τ is obviously polynomial. Let us now show that it transforms yes-instances of Set-Partition into yes-instances of ACLPP
                        D
                     .

                        Lemma 5.2
                        Any feasible solution {S
                           1, S
                           2} of the Set-Partition Problem can be converted in polynomial time into a solution of τ(S) with value zero.

This Weight & Balance Problem is depicted in Fig. 6
                           . Let us apply transformation τ(S) and load randomly all ULDs associated to elements S
                           1 into positions in 
                              
                                 P
                                 1
                              
                           . By definition, 
                              
                                 P
                                 1
                              
                            is sufficiently large to contain all these elements. The same is applicable for S
                           2 and 
                              
                                 P
                                 2
                              
                           . This is a feasible solution for ACLPPD. Because {S
                           1, S
                           2} is a solution of the Set-Partition Problem, 
                              
                                 
                                    ∑
                                    
                                       i
                                       ∈
                                       
                                          S
                                          1
                                       
                                    
                                 
                                 
                                    w
                                    i
                                 
                                 =
                                 
                                    ∑
                                    
                                       i
                                       ∈
                                       
                                          S
                                          2
                                       
                                    
                                 
                                 
                                    w
                                    i
                                 
                              
                            and exactly the same weight is loaded on each side of the requested center of gravity OCG. Because the distance between OCG and the two loading locations of loading are the same, this implies that CG is located exactly at OCG and that 
                              
                                 
                                    ϵ
                                    1
                                 
                                 =
                                 0
                              
                           . Therefore, this is a solution with optimal value zero for ACLPPD.□

Any solution with value zero for τ(S) can be converted in polynomial time into a solution of the Set-Partition Problem.

The smallest value for ACLPPD objective value is zero when CG is located at OCG. Because the distance between the two locations and OCG is the same, this can occur only when exactly the same weight is loaded in the forward and aft areas. It suffices to list in S
                           1 (respectively S
                           2) the weights of the ULDs in 
                              
                                 P
                                 1
                              
                            (respectively 
                              
                                 P
                                 2
                              
                           ) to obtain a solution for the Set-Partition Problem.□

ACLPPD
                              D
                            is NP-complete.

This follows directly from Lemmas (5.1)–(5.3). In reality, it also shows that the simpler Weight & Balance Problem without handling cost operations and only one leg is already NP-complete.□

It is important to note that even if the Weight & Balance Problem for one leg and without handling operations costs is NP-hard, in a few minutes, we can solve all the realistic instances we tested. This might be because problem size is strongly limited by aircraft capacity. However, when there is more than one leg and the handling operations have to be optimized, the problem becomes far more difficult.

The complexity of defining assignments over two legs cannot be divided into two independent balanced loading problems. Considering two destinations implies solving simultaneously two (NP-hard) related instances of the balanced loading problem: one for each leg. The minimization of the number of operations (at the intermediate airport) is the link that makes these two problems dependent and that explains why it is far more complex to solve the problem with an intermediate airport than to independently solve two instances of the same size. Indeed, the optimization inputs over the second leg, i.e., mainly the positions that are available, depend on the set of feasible solutions for the optimization problem restricted to the first leg only. For each feasible solution of the latter, there exists one instance to optimize over the second leg. This drastically increases the global domain space.

Finally, another originality of our work is that unloading can occur through several doors. For each ULD, when settled in a given position, the question is as follows: through which door should the ULD be unloaded in order to minimize handling operations? This raises the question of complexity associated with the introduction of 
                        
                           α
                           j
                           T
                        
                      and 
                        
                           α
                           j
                           N
                        
                      in the model, and more operationally, of the optimal unloading sequence. This is not the most complex part of the problem. A naïve algorithm with complexity O(n
                     2), where n is the number of ULDs, already answers this question. Indeed, because the ULDs cannot collide once unloaded, there exists, for each deck and lane, at least one position between two doors of the plane for which all ULDs close to the tail door leave by this door (or stay on board), and all ULDs close to the nose door leave by the nose door (or stay on board). For each lane and deck with several doors, each position from the nose door to the tail door can be successively considered as a candidate for partitioning. Globally n operations are required. Starting from this position, the next step is to return to the nose door and stop at the first ULD to be delivered at the intermediate airport (i.e., the first ULD that must be unloaded). From there, the next step is to move to the nose and count the number of ULDs to be delivered at the final airport, i.e., the sum of 
                        
                           n
                           j
                           N
                        
                     . The same steps are applicable from the pivot position to the tail door to compute 
                        
                           ∑
                           
                              n
                              j
                              T
                           
                        
                     . Again, this is performed in n operations. The best partitioning position, which defines all 
                        
                           α
                           j
                           T
                        
                      and 
                        
                           
                              α
                              j
                              N
                           
                           ,
                        
                      is that which minimizes the sum of 
                        
                           n
                           j
                           N
                        
                      and 
                        
                           
                              n
                              j
                              T
                           
                           ,
                        
                      and the complexity of the entire algorithm is O(n
                     2).

Our mathematical model was tested on a set of real-world instances provided by TNT Airways, a wholly owned subsidiary of TNT Express. Their main activity is to provide TNT Express with an airfreight network that connects daily all TNT Express locations throughout the world, and more specifically, in Europe. TNT Express is one of the leading delivery integrators in Europe. The model was implemented in Java and relies on the IBM ILOG CPLEX 12 library (default parameters). Thanks to a graphical interface, it is possible to visualize, for each leg, the loading plans, CG position, and different weight distributions. The tests were performed on a personal computer (Windows 7, Intel Core i5-2450M, 2.50 gigahertz, and 8.00 gigabytes of RAM).

First, we present the detailed results of a historical flight. This is an intercontinental flight with a first leg of approximately 2740 nautical miles and a second leg of 3200 nautical miles. The aircraft is a Boeing 777 Freighter (B777F). The B777F is the successor of the famous B747F, one of the most used freighters in the world. As illustrated in Fig. 2, this Boeing 777 has four doors (one per compartment) and a rather large number, 98, of predefined positions. A total of 40 predefined positions are on the main deck. This corresponds to 13 large positions that overlap 26 small positions (defined on the right and left sides of the aircraft) and one last central position at the rear. On the lower deck, 10 large positions (P) overlap 32 small positions (R and L). There is one more central position (C) for each pair of right and left positions.

The B777F was loaded at full capacity. The ULD sets of ULDs are listed in Table 1
                        . For this shipment, we computed and set the optimal CG location for the first leg (respectively second leg) at 39.3 percent MAC (respectively 38.3 percent MAC), but we reduced it by 1 percent as a security margin. The tanks for each leg were filled with 48 tons of fuel. The cost ch
                         of an unnecessary operation is fixed at 40 USD. Assuming an increase of 2 percent fuel consumption for a 10 percent MAC shift of the CG location, and a cost of 1 USD per fuel liter, we obtain an approximate fuel cost coefficient 
                           
                              c
                              k
                              
                                 
                                 f
                              
                           
                         of 100 USD. The optimal solution found by our software is depicted in Figs. 7
                         and 8
                        , for the first and second leg, respectively. All positions are represented with boxes. When a ULD is assigned to a position, its representative box is colored, and the type and weight of the ULD is indicated on the box. In Fig. 7, the ULDs in light (respectively dark) gray belong to 
                           
                              U
                              1
                           
                         (respectively 
                           
                              U
                              3
                           
                        ). This solution meets all requirements. The aircraft has a lateral weight imbalance below the thresholds: 1929 kilograms for the first leg and 4089 kilograms for the second leg. In the same figures, the two rectangles situated below each loading plan provide the level of combined weights. The lines situated above are the thresholds. The cumulative load limits are also in compliance. For each leg, the three CGs (ZFW-TOW-LW) lie within their respective feasibility envelopes, as depicted in Fig. 9
                        .

First, we measure the solution quality by observing the two terms of the objective function, i.e., the CG location and the number of re-handling operations. The solution found by our software is the best we could expect. The requested CG location, minimizing fuel, is reached for each of the legs (
                           
                              
                                 ϵ
                                 k
                              
                              ≃
                              0
                           
                        ), and no additional re-handling operations are required at the intermediate airport. This last fact appears clearly in Figs. 7 and 8 because all the ULDs that must be unloaded at the intermediate airport are assigned positions close to the doors, and the other ULDs maintain the same positions over the two legs.

The second performance measure is computation time. We limit the computation precision to 1 USD. The CPLEX optimizer stops immediately after finding the optimal solution, or a feasible solution with an objective value, i.e., the excess cost, of no more than 1 USD. We know that the problem is NP-hard and that solving it could be time consuming. Indeed, we required 54 minutes to obtain a near-optimal solution (the excess cost is less than 1 USD) for this instance. However, this seems to be an extreme case and we usually obtain results in a few minutes (see the additional results in the next section). We believe that at least two reasons can explain why this specific instance remains difficult. First, the aircraft is loaded at full capacity on the first leg, which is rather uncommon. Second, the number of positions to consider is extremely large because of the number of different ULD types that are involved. Simply removing one ULD leads to an optimal solution achieved in only 4 minutes. It is also worth noting that the Branch and Cut process found a good feasible solution quickly but considerable time is required to validate the optimal solution. Therefore, we also provide the best result obtained with a time limit of 10 minutes. Finally, another interesting insight is that optimizing independently over the two legs, as done in Limbourg et al. (2012), only requires a few seconds. Considering several legs with P&D operations significantly increases the complexity of the problem.

The last performance measure is to approximate potential savings. For that, we compare our solution with that obtained by the loadmaster who works manually. Loadmasters from different companies follow similar procedures, as verified through interviews. When time permits They try, when time permits, the loadmasters attempt to load cargo in such a way that the observed CG lies close to a predefined value in the feasibility envelope, e.g., at 28 percent or 29 percent of the MAC range. The main results are summarized in Table 2
                        . To save fuel, our approach pushes the leg CGs as much as possible to the aft, well beyond the values usually considered. Using our initial assumptions, this implies a fuel savings of 2010 USD. Moreover, no ULD in transit has to be unloaded at the first airport, whereas it is common to plan the two legs independently and to be required to unload all or a large part of the cargo, as observed in many companies. With respect to the worst case, this saves 24 unnecessary operations, i.e., approximately 960 USD. The total savings for this single trip adds to a maximum of 2970 USD. When we limit computation time to only 10 minutes, we still reach an extremely good feasible solution. The total savings in this case adds to a maximum of 2810 USD. Let us assume that this flight operates under the same conditions three times per week, almost every week, and in both directions; then, the savings can add to a maximum of 650,000 USD per year. Moreover, the same optimization process can be applied to all other aircrafts in the fleet.

The question now is to verify whether the results presented for the specific case in the previous section are representative. To provide a partial answer, we solved hundreds of other real-world cases. We considered the same aircraft, but with different loads and different sets of ULDs. We provide the results for eight configurations in Table 3
                        . All other simulations lead to similar results. Cases (A) and (B) imply Pickup and Delivery Operations. No delivery and only pickups occur with cases (C), (D), and (E), and the opposite is true for cases (F), (G), and (H). We set a computation time limit of 10 minutes. The optimal CG location is reached for all instances, implying fuel savings. Case (H) is the only case that was stopped after 10 minutes of computation. CG was at the optimal location, but we observed eight re-handlings of ULDs in transit. This remains a much better solution than that observed in practice, in which 23 ULDs in 
                           
                              U
                              3
                           
                         were moved at the first airport.

We also generated some hazardous goods among the loaded ULDs randomly and we considered some cases in which a nose door was available. Because these experiments did not provide different results or insights, we decided not to include them in this paper.

@&#CONCLUSIONS@&#

In this paper, we analyzed ACLPPD, which is a crucial problem encountered daily by airlines. We considered trips of several legs at the end of which P&D operations might occur. We proposed a new mixed integer linear model.

Our contributions are multiple. First, the model is based on international standards and is valid for most commercial operators. We integrated, and adapted to the multi-leg context, a large set of the constraints they encounter. Most operators should be able to use this approach in real life, and if needed, to extend it to any of their specifications. Second, we showed how to consider unloading and loading sequences when Pickup and Delivery arises. In this context, we again attempted to maintain reality by considering aircraft with several doors. Third, we showed that the Weight & Balance Problem is NP-hard. Considering several legs and several doors causes the problem to become even more complex to manage. Finally, another originality of our approach is the focus on cost. We analyzed two important costs directly linked to ULD loading: impact on fuel consumption and handling operations cost. We showed that locating the CG closer to the aft should be performed in order to decrease fuel consumption.

Our approach was tested on real data, and we conducted hundreds of experiments. We demonstrated that it is possible to quickly find near optimal or excellent feasible solutions, and that our approach leads to substantial savings with respect to current typical practices.

@&#ACKNOWLEDGEMENTS@&#

This work was initiated as part of a research project with TNT Airways. Special thanks are due to E. Meyer, M. Clety, H. Marchal, and J.M. Urbani. We would also like to thank T. Kleyntssens for his preliminary work on some constraints. Virginie Lurkin is supported by “Fonds National de la Recherche Scientifique” (FNRS). This work was also partially funded by the Interuniversity Attraction Poles Programme initiated by the Belgian Science Policy Office (grant P7/36). We are also grateful to three anonymous referees for helpful suggestions. However, the paper only expresses the authors’ views.

@&#REFERENCES@&#

