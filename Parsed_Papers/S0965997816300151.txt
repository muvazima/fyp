@&#MAIN-TITLE@&#Automatic hierarchical mid-surface abstraction of thin-walled model based on rib decomposition

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           A hierarchical semantic structure is designed for mid-surface model abstraction.


                        
                        
                           
                           An efficient rib recognition method is proposed by using face group pairs.


                        
                        
                           
                           A hybrid method is proposed to handle thin-walled model with complex geometry.


                        
                        
                           
                           An efficient reuse method to reuse the resultant mid-surface model.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Mid-surface

Hierarchical structure

Dimension reduction

Rib feature recognition

Model decomposition

Reuse

@&#ABSTRACT@&#


               
               
                  Model simplification is imperative in the process of computer aided design (CAD) and computer aided engineering (CAE) integration. Mid-surface abstraction is the most effective method to simplify the thin-walled models. Many previous research efforts have been focused on the mid-surface abstraction, including the model decomposition based methods, Medial Axis Transform (MAT) based methods and Chordal Axis Transform (CAT) based methods. However, complex thin-walled models cannot be handled well due to the fact that there are some problems including low geometrical precision, poor topological structure, etc., in the above resultant mid-surface models. Especially, these methods are hard to be reused to generate the mid-surface model efficiently. Therefore, a hierarchical semantic mid-surface abstraction method is proposed for the thin-walled model based on rib feature decomposition in this paper. Firstly, a new hierarchical semantic structure is defined and applied on both the thin-walled models and mid-surface models. After that, the model decomposition is conducted based on the identified rib features and the hierarchical semantic information is obtained at the same time. Then, the offset operation and discretization based methods are used to obtain the mid-surface patch for each sub region with different semantic structure respectively. Finally, the mid-surface model with hierarchical semantic information is generated by stitching all discrete patches. Moreover, the above model can be reused to facilitate the rapid mid-surface abstraction of the changed model based on its hierarchical semantic structure. Several examples are given to demonstrate the outperformance of the proposed method.
               
            

@&#INTRODUCTION@&#

The thin-walled model refers to the model whose thickness is much smaller than of its size in the other two dimensions (i.e. length and width). It has been widely used in the design of complex products, such as aircraft structural parts, cover parts of the automobile and injection models. From the perspective of product design, the thin-walled model has the following characteristics: (1) The geometry of the main surface is complex. A large number of free-form surfaces are involved which leads to a higher geometric complexity. (2) The topological structure is complex. Generally, a large number of complex ribs are created on the thin-walled model to enhance its structural stiffness to satisfy the requirements of low weight and high stiffness. However, these rib features greatly increases the structural complexity of the model. (3) The design process often begins with the main surface and is then followed by the ribs.

From the prospective of product analysis, model simplification is needed to improve the efficiency of Finite Element Analysis (FEA) due to the fact that with the increase of the complexity of the thin-walled model, the analysis cost is multiplied. For thin-walled models, the most effective simplification method is dimensional reduction [1]. Many previous research efforts have been focused on this field, which can be broadly divided into three categories: the Medial Axis Transformation (MAT) based methods, model decomposition based methods and the Chordal Axis Transformation (CAT) based methods. Some research results have been applied in the business software, like NX UGS or CATIA. However, there are still some deficiencies in dealing with the mid-surface abstraction of complex thin-walled models, such as the generation efficiency, geometric accuracy, topology effectiveness, applicability and reusability of the mid-surface model. Based on the analysis of previous methods, the thin-walled models are mostly handled from a macro perspective without making use of the above-mentioned characteristics of thin-walled models. In this study, an automated hierarchical mid-surface abstraction method is proposed based on rib decomposition. Here, the connection semantics and the hierarchical semantics of thin-walled models is utilized to overcome the above-mentioned deficiencies.

The remainder of this paper is organized as follows. Section 2 discusses the related work. Section 3 describes the research motivation and method overview. Then the definition of hierarchical structure is given in Section 4. The rib feature recognition and a new model decomposition method based on Euler operation are proposed in Section 5 and Section 6 respectively. Section 7 presents a hybrid abstraction method to abstract mid-surface model. Section 8 describes the reusability of mid-surface based on the proposed method. Several experiments are conducted to demonstrate the outperformance of the proposed method in Section 9. Finally, the conclusions and some discussions are given in Section 10.

@&#RELATED WORK@&#

Mid-surface abstraction is a widely used dimension reduction method, which is evolved by the MAT method. The latter is also a dimension reduction method which was first proposed by Blum [2] and then has been widely used in analysis modeling [3–5]. However, compared to mid-surface, many tiny branches are created for MAT which are not useful and need to be cut and then the central patches need to be expanded to generate the mid-surface for the MAT based method. Lee and Lee [6] proposed a medial axis algorithm for computing the 3D boundary representation model. However, it cannot handle the degenerated models. Donaghy et al. [7] used MAT to identify regions of large aspect ratio. And then the mixed dimensional models were created automatically with the given aspect ratio threshold to guide the idealization. Ramanathan and Gurumoorthy [8] developed a mid-surface generation technique in which the combination of 2D medial axis and face pairing is used. The deficiency of using MAT to replace mid-surface is that there are additional tiny branches and its resultant surfaces are smaller than the needed mid-surface. The MAT result has a more complicated topology than the mid-surface model, the process of transforming MAT to a mid-surface model is still very complex and hard to get a right topology.

The mesh model based method is another important abstraction method. Quadros and Shimada [9] proposed a CAT based method for mid-surface abstraction. Firstly, a single-layer tetrahedral mesh of the thin-walled solid model is generated. Then these tetrahedral grid cells are enumerated and classified by their position and the chordal surface of each unit is calculated and these surfaces are joined together to obtain a gridded mid-surface. It is indeed a novel idea. However, it is not a trivial task to ensure the generation of a high-quality single-layer tetrahedral mesh. Kwon et al. [10] improved the approach. In their approach, the advancing front mesh generation method is used to generate the single-layer mesh and multiple cutting planes are inserted to retain the feature line on the mid-surface at the bends. However, it has the similar limitation since the lateral surfaces must contain one layer of elements. Quadros [11] overcame the limitations. The mesh of a CAD model is generated by using the Delaunay method without inserting any nodes in the interior of the solid. The tetrahedral elements are cut by their location to generate the mesh of the medial surfaces. However, the tetrahedral mesh elements for the intersected ribs are very complicated and it is difficult for the classification of tetrahedral elements, which makes this method not robust for complex models. Another disadvantage of the approach is that the quality of the mid-surface cannot well be guaranteed.

The face-pair detection based mid-surface abstraction method is also used widely. Rezayat [12] first proposed a face-pair detection method based on face adjacent graph (FAG), which detected the face pairs by judging the distance and attributes between faces. These face pairs were then used to generate the mid-surface. It is considered to be the first method using face pairs in mid-surface abstraction, and some fundamental criteria were suggested for detecting the face pairs. However, these criteria can only be effective for the simple parts. Lee et al. [13] improved the graph-based method in detecting face pairs and let the edges be the extension rule to join the mid-surface patches. This may be the first method that focuses on the topological boundary of mid-surface. However, the limitation is that when the topology of a model is complex, the identification of face pairs often fails. So the model decomposition method was proposed to deal with the complex models.

In order to deal with complex thin-walled models, a decomposition based method has been widely used and has become the most efficient method of mid-surface abstraction. Chong et al. [14] first split the solid model to simple sub-parts, and then detected the face pairs in each part to constitute mid-surface patches. This approach can deal with the model mixed with thin and thick parts. However, the decomposition method can only deal with the models with simple planar or quadratic surfaces and thus is not suitable for the model with complex freeform surfaces. Woo [15] presented another decomposition method to mid-surface abstraction. The model is first decomposed into some fundamental elements and then joined the elements to generate the maximal volumes, in which the face pairs could be easily detected. In their method, Boolean operations are frequently used which makes the model instable, especially for some models with freeform surfaces. Another problem is that one mid-surface patch is abstracted for each face pair. All these patches are separated from each other and need extension or trimming operations to combine them together. The correctness of the topology of the mid-surface model cannot be guaranteed. Robinson et al. [16] proposed a mixed dimension based methods in thin-walled model analysis. In their approach, the flat areas in the MAT model have been kept, and the other areas (the branch part) are replaced with the original model. Then a mixed dimension model is generated for FEA. This approach avoids the topological problems caused by the branches. However, its efficiency is low and the shape of the original model cannot be kept. Nolan et al. [17] proposed a meshing method for stiffened thin-walled structures, in which the original model was firstly decomposed into long-slender, thin-sheet and complex regions. Each region was transformed to different types of meshes. The long-slender regions are idealized to beam elements. The thin-sheets are used to generate triangular surface meshes. The complex regions are meshed with tetrahedral elements. Then, rules are used to connect these types of meshes together. Here, the abstracted beam elements play the connection role in the result by adding constraint to them since the junctions in the model are recognized as long-slender regions. However, only these constraints are not enough for all kinds of analysis applications. For example, the fluid dynamics analysis need more details than what it could provide.

Beside the above mentioned methods, Sheen et al. [18,19] proposed a feature-based solid deflation method to convert a thin solid model into a mid-surface model. It can only be used to the limited types of models, i.e. simple models comprising planar and quadratic surfaces with feature information. Moreover, in some commercial CAD systems such as CATIA and NX UGS, there are also tools for generating the mid-surfaces of thin-wall parts. However, they are not robust for complex models. Lockett and Guenov [20] proposed the attributed mid-surface adjacency graph (AMAG) to represent the mid-surface topology. Recently the AMAG was used to measure the similarity between solid model and mid-surface model [21].

The model decomposition in this paper is based on rib-features. Therefore the recognition of rib features is the basis of this study. Owodunni et al. [22] defined rib-features as a kind of additive, prismatic machine features. They used a property such as the closure of the feature shape in the local x, y and z directions for classification. Chen et al. [23] proposed a set theory to define the rib feature in which he expands the rib feature as a set of adjacent faces of a part which are associated with a set of machining operation. Later approaches are all following this theory. Li et al. [24,25] utilized the seed face as a key to the recognition of rib-features, and then improved this method in which the rib feature was considered to be an object that had some particular attributes. It can be seen that these feature recognition methods are all based on heuristic rules which first recognize the sub-ribs and then combined to form a main rib-feature. However, this search and combination method is inefficient, the semantic information between the faces in the main rib features are not well used and thus the recognition methods need to be improved.

@&#MOTIVATION@&#

Generally, mid-surface abstraction is the most effective simplification method for thin-walled models. To evaluate the performance of mid-surface abstraction methods, the following five aspects should be considered:
                           
                              (1)
                              Applicability. The previous mid-surface abstraction methods are mainly realized by finding the face pairs firstly and then using an offset operation to obtain the mid-surface. They are effective for the model with simple planes or quadratic surfaces, but not applicable for the models with complex freeform surfaces or with various thickness values. The most suitable method for the latter models is to use a discrete method, like CAT based method.

Geometry accuracy. The offset operation can obtain a high precision geometry for the model represented with simple plane or quadratic surface, while the discretize methods can handle more complex models with lower precision.

Topology effectiveness. Both of the decomposition based methods and non-decomposition methods (like CAT or MAT method etc.) have the problems in obtaining a complete and valid topology for complex models. For the former method, there are a lot of slots or over-intersection regions between these mid-surface patches that need to be stitched together. The resultant models always have incorrect topology since the stitching operation is only based on heuristic rules without utilizing the connection semantics. Similarly, the stitching of mid-surface patches obtained by using the latter methods may easily lead to a wrong topology due to the lack of connection semantic information between different patches.

Generation efficiency. The generation efficiency of the offset operation are high while that of the discretization method and the global based ones are low.

Reusability. The resultant mid-surface model using the global based methods cannot be reused. The whole abstraction process needs to be repeated if only the original model has a tiny change. The decomposition based methods are better than the former ones. The design changes in some areas of the original model only affect some sub-regions since the model is decomposed into several sub-regions firstly. Therefore, the efficiency of the whole abstraction process can be hugely improved since only the changed sub-regions need to be abstracted again. However, the lack of connection semantics of these decomposed sub-regions affects the reusability.

The above evaluation of previous methods is summarized in Table 1
                        . It can be inferred from the table that there are more or less some defects in the existing methods. They mostly focus on one or several aspects without consideration of all the above aspects, which is the motivation of this study to propose a more comprehensive mid-surface abstraction method.

Based on the above analysis, to satisfy the above five aspects, a comprehensive mid-surface abstraction method should include the following aspects: (1) rib decomposition based model preprocess; (2) suitable abstraction methods should be applied to different decomposed sub-regions according to the different geometric complexity. For example, the offset method is used for the sub-regions with simple geometry while the discretization method for the sub-regions with complex geometry. (3) The connection semantics between the decomposed sub-regions should be obtained to improve the reusability and topology effectiveness. Based on the above analysis, an automated hierarchical semantic mid-surface abstraction method is proposed in this study, which contains the following five steps:

Firstly, definition of hierarchical semantic structure. A new hierarchical semantic structure for the thin-walled model and mid-surface model is proposed firstly. All the following operations like model decomposition, mid-surface abstraction and resultant model reuse are conducted based on this structure.

Secondly, rib feature recognition and organization. The rib features are recognized from the thin-walled model and then organized to form a hierarchical semantic structure.

Thirdly, model decomposition. A new model decomposition method based on Euler operations is proposed to decompose the rib features from the thin-walled models in accordance with the hierarchical semantic structure.

Fourthly, mid-surface abstraction. The mid-surface patches for each sub-regions are abstracted through an adaptive abstraction method following a bottom up sequence.

Finally, mid-surface reuse. The mid-surface model with hierarchical sematic structure is reused to realize the rapid regeneration when some local changes occur to the initial model.

Generally, a hierarchical semantic structure includes two aspects: (1) the connection semantics and (2) the hierarchical semantics. The former indicates the connection relationships between sub-regions whereas the latter describes the affiliation relationship of two connected sub-regions. Here, only the mid-surface model is used to illustrate the definition of above two aspects since the hierarchical semantic structure of the thin-walled model and the mid-surface model are the same.

Compared to the other non-manifold models, the mid-surface model has some particular characteristics. The faces in a mid-surface model are all connected by edges. Therefore, the connection semantics in a mid-surface model is simple binary relation and can be summarized into two types: the L-connection type and the T-connection (or extended T-connection) type. Two faces are directly connected through their outside boundary edges in the former connection, as shown in Fig. 1
                        a, the angle between two faces is in the range between 0° and 180°. In this type of connection, the association of two faces is simple and their interaction only occurs on the boundary edges. The latter connection is more complicated due to the different roles of two faces. Here, the light grey face in the T-connection is the supported face, while the dark grey face is the supporting face, as is shown in Fig. 1b. There are four cases corresponding to the supported face and the supporting face whether to be split into two parts. When the intersection edge is totally “inside” the supported face or only intersects with one side of the boundary edge of supported face, the latter have not been split into two parts.

Generally, the thin-walled model can be divided into two parts based on its structural characteristics: the main elementary part and the ribs. The latter is created to improve the stiffness of the former. Therefore, the main elementary parts should be at the top level in the model while levels of the ribs are lower than them. It is noteworthy to point out that the ribs could not be classified as the same level since they are created in a specific sequence. For example, if rib A is created to support rib B, it should have a lower level than rib A.

As is shown in Fig. 2
                        , there are three levels in the hierarchical structure of a thin-walled model. Among them, the main elementary models belong to the top level. Note that there may be more than one main part of sub-regions in the model.

In addition to the main parts in the top level, all the other levels contain ribs. Here, the main purpose of ribs in the 2nd level is to increase the stiffness of the main-elementary parts on the top level. Similarly, the ribs in the 3rd level are mainly applied to the sub-regions of the 2nd level. Moreover, there may be more nth level of ribs that are used to increase the stiffness of n
                        −1th level of ribs.

Based on the above analysis, the hierarchical semantics can be classified into two relationships including sibling relationship and subordinate relationship. According the connection relationship between two ribs on the same level, they can be classified into three situations:
                           
                              (1)
                              Independent relationship: two independent ribs without intersection with each other are located on the same main elementary sub-region, as shown in Fig. 3
                                 a.

Weak related relationship: two ribs in the L-connection are located on the same main elementary sub-region, as shown in Fig. 3b.

Strongly correlated relationship: two ribs in the T-connection are located on the same main elementary sub-region, as shown in Fig. 3c.

For the subordinate relationship, the ribs in the lower level should directly support the sub-regions in the upper level. For the lower level, ribs are created depending on the upper level parts. According to the dependency relationships, the lower-level ribs can be classified to five different cases, which are illustrated in Fig. 4
                        . The details are explained as follows:
                           
                              (1)
                              Simple dependency relationship: the lower level rib is only T-connection with the upper level rib and does not penetrate it, as shown in Fig. 4a.

Main dependency relationship: the lower level rib is T-connection with the upper level rib and doesn't penetrate it. Meanwhile the lower level rib is also connected with other [n
                                 −2th, 1st] level sub-regions, as shown in Fig. 4b.

Complex dependency relationship: the lower-level rib is only T-connection with the upper-level rib and penetrate it. The lower-level rib is split into two parts as shown in Fig. 4c.

Mixed dependency relationship: the lower level rib penetrates the upper level rib. Meanwhile the lower level rib is also connected with other [n
                                 −2th, 1st] level sub-regions, as shown in Fig. 4d.

Multiple dependency relationship: the lower-level rib is T-connection with two or more upper-level ribs and these ribs belong to the same level, as shown in Fig. 4e.

After the ribs are recognized and decomposed from the thin-walled model, the model can be easily organized into the above hierarchical semantic structure. With the help of this structure, the mid-surface abstraction can be easier and more efficient.

Rib features can significantly increase the structural stiffness of a model. They are widely used in complex thin-walled models. Generally a thin-walled model is only represented with boundary representation (B-rep) without features, thus the recognition of rib-features is needed. In this section, the definition of rib-feature is given first and then the recognition of structural rib-features is discussed.

A rib-feature (Rib) is defined as a set of adjacent faces (
                           
                              ∪
                              (
                              
                                 R
                                 i
                                 b
                                 _
                                 F
                                 s
                              
                              )
                           
                        ) that meet some specific geometric attributes (Geo).
                           
                              (1)
                              
                                 
                                    R
                                    i
                                    b
                                    =
                                    ∪
                                    
                                       (
                                       
                                          R
                                          i
                                          b
                                          _
                                          F
                                          s
                                       
                                       )
                                    
                                    +
                                    G
                                    e
                                    o
                                 
                              
                           
                        
                     

Here, the faces of the rib-feature (
                           
                              ∪
                              (
                              
                                 R
                                 i
                                 b
                                 _
                                 F
                                 s
                              
                              )
                           
                        ) include two groups of side faces (
                           
                              
                                 ∪
                                 
                                    F
                                    a
                                 
                              
                              
                                 (
                                 
                                    S
                                    i
                                    d
                                    e
                                    _
                                    F
                                    s
                                 
                                 )
                              
                              ,
                              
                                 ∪
                                 
                                    F
                                    a
                                 
                              
                              
                                 (
                                 
                                    S
                                    i
                                    d
                                    e
                                    _
                                    F
                                    s
                                 
                                 )
                              
                           
                        ) and some top faces (
                           
                              ∪
                              (
                              
                                 T
                                 o
                                 p
                                 _
                                 F
                                 s
                              
                              )
                           
                        ) which is given as follows:
                           
                              (2)
                              
                                 
                                    ∪
                                    
                                       (
                                       
                                          R
                                          i
                                          b
                                          _
                                          F
                                          s
                                       
                                       )
                                    
                                    
                                       )
                                       =
                                       
                                    
                                    
                                       ∪
                                       
                                          F
                                          a
                                       
                                    
                                    
                                       (
                                       
                                          S
                                          i
                                          d
                                          e
                                          _
                                          F
                                          s
                                       
                                       )
                                    
                                    +
                                    
                                    
                                       ∪
                                       
                                          F
                                          b
                                       
                                    
                                    
                                       (
                                       
                                          S
                                          i
                                          d
                                          e
                                          _
                                          F
                                          s
                                       
                                       )
                                    
                                    
                                    +
                                    
                                       ∪
                                       T
                                    
                                    
                                       (
                                       
                                          T
                                          o
                                          p
                                          _
                                          F
                                          s
                                       
                                       )
                                    
                                 
                              
                           
                        
                     

The Geo includes parallel attribute (para), convexity attributes (Convexity) and the connection attributes (Connect) which are described as follows:
                           
                              (3)
                              
                                 
                                    G
                                    e
                                    o
                                    =
                                    
                                    p
                                    a
                                    r
                                    a
                                    +
                                    C
                                    o
                                    n
                                    v
                                    e
                                    x
                                    i
                                    t
                                    y
                                    +
                                    C
                                    o
                                    n
                                    n
                                    e
                                    c
                                    t
                                 
                              
                           
                        
                     

These detailed geometric attributes are as follows:
                           
                              (1)
                              The two groups of side faces are parallel (Para(UFa, UFb
                                 )).

The top faces are connected with both groups of side faces at the same time (Connect (UFa, UT
                                 ), Connect (UFb, UT
                                 )). Meanwhile, there are two groups of edges connecting top and side faces (∪
                                    Ea
                                 (Es), ∪
                                    Eb
                                 (Es)).

Both groups of connected edges are parallel (Para(UEa, UEb
                                 )) and convex (Convex(UEa
                                 ))), (Convex(UEb
                                 ))).

The rib is an extension feature which is starting from top faces and terminating at terminated faces (
                                    
                                       
                                          U
                                          
                                             F
                                             T
                                          
                                       
                                       
                                          (
                                          
                                             T
                                             e
                                             r
                                             m
                                             _
                                             F
                                             s
                                          
                                          )
                                       
                                    
                                 ). Therefore, there exists two groups of edges (∪
                                    Ec
                                 (Es), ∪
                                    Ed
                                 (Es)) connected with the side faces and terminated faces (Connect (UFa, UFT
                                 ), Connect (UFb, UFT
                                 )) and both groups of edges are parallel (Para(UEc, UEd
                                 )) and concave (Concave(UEc
                                 ))), (Concave(UEd
                                 ))).

Based on the above analysis, these attributes can be described as follows:
                           
                              (4)
                              
                                 
                                    p
                                    a
                                    r
                                    a
                                    =
                                    
                                    P
                                    a
                                    r
                                    a
                                    
                                       (
                                       
                                          
                                             U
                                             
                                                F
                                                a
                                             
                                          
                                          ,
                                          
                                             U
                                             
                                                F
                                                b
                                             
                                          
                                       
                                       )
                                    
                                    +
                                    
                                    P
                                    a
                                    r
                                    a
                                    
                                       (
                                       
                                          
                                             U
                                             
                                                E
                                                a
                                             
                                          
                                          ,
                                          
                                             U
                                             
                                                E
                                                b
                                             
                                          
                                       
                                       )
                                    
                                    +
                                    P
                                    a
                                    r
                                    a
                                    
                                       (
                                       
                                          
                                             U
                                             
                                                E
                                                c
                                             
                                          
                                          ,
                                          
                                             U
                                             
                                                E
                                                d
                                             
                                          
                                       
                                       )
                                    
                                 
                              
                           
                        
                        
                           
                              (5)
                              
                                 
                                    
                                       
                                          
                                             C
                                             o
                                             n
                                             v
                                             e
                                             x
                                             i
                                             t
                                             y
                                          
                                       
                                       
                                          =
                                       
                                       
                                          
                                             C
                                             o
                                             n
                                             v
                                             e
                                             x
                                             
                                                (
                                                
                                                   U
                                                   
                                                      E
                                                      a
                                                   
                                                
                                                
                                                   )
                                                
                                                )
                                             
                                             +
                                             
                                             C
                                             o
                                             n
                                             v
                                             e
                                             x
                                             
                                                (
                                                
                                                   U
                                                   
                                                      E
                                                      b
                                                   
                                                
                                                
                                                   )
                                                
                                                )
                                             
                                             +
                                             C
                                             o
                                             n
                                             c
                                             a
                                             v
                                             e
                                             
                                                (
                                                
                                                   U
                                                   
                                                      E
                                                      c
                                                   
                                                
                                                
                                                   )
                                                
                                                )
                                             
                                          
                                       
                                    
                                    
                                       
                                       
                                       
                                          
                                             +
                                             
                                             (
                                             C
                                             o
                                             n
                                             c
                                             a
                                             v
                                             e
                                             
                                                (
                                                
                                                   U
                                                   
                                                      E
                                                      d
                                                   
                                                
                                                
                                                   )
                                                
                                                )
                                             
                                          
                                       
                                    
                                 
                              
                           
                        
                        
                           
                              (6)
                              
                                 
                                    
                                       
                                          
                                             C
                                             o
                                             n
                                             n
                                             e
                                             c
                                             t
                                          
                                       
                                       
                                          =
                                       
                                       
                                          
                                             C
                                             o
                                             n
                                             n
                                             e
                                             c
                                             t
                                             
                                             
                                                (
                                                
                                                   
                                                      U
                                                      
                                                         F
                                                         a
                                                      
                                                   
                                                   ,
                                                   
                                                      U
                                                      T
                                                   
                                                
                                                )
                                             
                                             +
                                             C
                                             o
                                             n
                                             n
                                             e
                                             c
                                             t
                                             
                                             
                                                (
                                                
                                                   
                                                      U
                                                      
                                                         F
                                                         b
                                                      
                                                   
                                                   ,
                                                   
                                                      U
                                                      T
                                                   
                                                
                                                )
                                             
                                          
                                       
                                    
                                    
                                       
                                       
                                       
                                          
                                             +
                                             
                                             C
                                             o
                                             n
                                             n
                                             e
                                             c
                                             t
                                             
                                             
                                                (
                                                
                                                   
                                                      U
                                                      
                                                         F
                                                         a
                                                      
                                                   
                                                   ,
                                                   
                                                      U
                                                      
                                                         F
                                                         T
                                                      
                                                   
                                                
                                                )
                                             
                                             +
                                             C
                                             o
                                             n
                                             n
                                             e
                                             c
                                             t
                                             
                                             
                                                (
                                                
                                                   
                                                      U
                                                      
                                                         F
                                                         b
                                                      
                                                   
                                                   ,
                                                   
                                                      U
                                                      
                                                         F
                                                         T
                                                      
                                                   
                                                
                                                )
                                             
                                          
                                       
                                    
                                 
                              
                           
                        
                     


                        Fig. 5
                         shows a part of model which contains some rib features. Here, the top face, terminate face, side face, concave edge and convex edges are pointed out to help understanding. After the definition of rib-feature is given, the next step is to recognize the ribs from the B-rep model and then to construct the hierarchical structure based on these ribs.

All the sub-ribs are found out and then combined in the previous rib recognition methods. This process is of rather low efficiency since the sub-ribs which can be combined together have some common characteristics that can be used to speed up the recognition. Here, an efficient method is proposed for rib recognition, which contains three steps: (1) the generation of face groups, (2) the detection of face group pairs and (3) the recognition of ribs by using face group pairs. Through this method, the main rib that contains several sub-ribs can be found in a single recognition process. Therefore the efficiency of the whole rib recognition process is hugely improved.

As mentioned earlier, the faces on the same side of one rib have the same underlying geometry. They can be grouped together and called face group (FG). FG satisfies the following criteria:
                              
                                 (1)
                                 Geometrical criteria. The faces in the FG must have the same underlying geometry.

Distance criteria. The minimum distance between any one face fi
                                     in the FG and the remained faces R(FG) should be within the specified range t
                                    max. Usually, the value of t
                                    max is set to be the maximum thickness of the thin-walled model.
                                       
                                          (7)
                                          
                                             
                                                Dist
                                                
                                                   (
                                                   
                                                      
                                                         f
                                                         
                                                            i
                                                            ,
                                                         
                                                      
                                                      R
                                                      
                                                         (
                                                         
                                                            F
                                                            G
                                                         
                                                         )
                                                      
                                                   
                                                   )
                                                
                                                <
                                                
                                                   t
                                                   max
                                                
                                             
                                          
                                       
                                    
                                 

Normal criteria. Any face can find its nearest face in the FG, the normal of both faces at their nearest boundary should be approximately equal or within the specified range of angle.

As shown in Fig. 6
                           , there are three different types of models (Fig. 6a,b and d), Fig. 6c and e shows the front view and top view of the latter two models respectively. In the first model shown in Fig. 6a, there are a lot of simple FGs. Three of them are colored. However, in the model shown in Fig. 6b, though faces f
                           1 and f
                           2 have the same underlying geometry, their normal directions at center of face (N
                           1 and N
                           2) are reverse, so they are grouped in different FGs. The last model shown in Fig. 6d is different from the second one. Here, faces f
                           3 and f
                           4 have reverse normal directions (N
                           3 and N
                           4). However, they are still grouped into the same FG according to the normal criteria (the angle between N
                           5 and N
                           6 is only 15°, which is small than threshold angle).


                           
                              
                                 (1)
                                 Previous methods usually detect a face pair in the thin-walled model to help abstract mid-surface. Here, the “face” is instead by FG and thus the face pair is changed into face group pair (FGP). Similarly, a FGP should satisfy the following three criteria: Distance criteria. The maximal distance “d” between two FGs should be smaller than the thickness of the thin-wall solid model “t
                                    max”.
                                       
                                          (8)
                                          
                                             
                                                d
                                                <
                                                
                                                   t
                                                   max
                                                
                                             
                                          
                                       
                                    
                                 

Normal criteria. The normal directions of two FGs, N
                                    1 and N
                                    2, should be approximately opposite.
                                       
                                          (9)
                                          
                                             
                                                
                                                   180
                                                   o
                                                
                                                −
                                                Angle
                                                
                                                   (
                                                   
                                                      
                                                         N
                                                         1
                                                      
                                                      ,
                                                      
                                                         N
                                                         2
                                                      
                                                   
                                                   )
                                                
                                                <
                                                
                                                   ɛ
                                                
                                             
                                          
                                       
                                    
                                 

Here, ɛ  is a given threshold.

Overlapping criteria. While one FG is projected to another one, the projection area should be overlapped to it. For example, in Fig. 6c, face f
                                    1 and f
                                    2 satisfy the distance and normal criteria. However, they cannot form a FGP since there is no overlapping area when one face projected to another one.

The FGPs in the thin-walled model can be easily found by using these three criteria. However, only a few of them are ribs, which should be found out from all the FGPs.

In this study, a graph-based method is proposed to recognize the rib features. The first step is to generate the face group adjacent graph (FGAG). In the FGAG, the FGs are set to be the nodes and all edges in the model are set to be edges of the graph. Each node has two properties: geometric property and structural property. The former mainly refers to the geometric type of the face, such as: the plane type, the quadratic surface, the free-form surface, etc. The latter includes identifying whether one FG belongs to a FGP or not. Similarly, the edges also contain two properties, namely the geometric property and position property. The former refers to the convexity of the edge, which includes two types: concave and convex. The reason why there is no smooth edge type is that the input thin-walled model is a detail removed model, in which all blends have been simplified to the sharp edges. The latter describes the position of each edge on the face group, such as the outer loop of a face group, inner loop of a face, etc. Based on the above attributes, the FGAG is established and the recognition of rib-features is conducted based on the FGAG as follows:

Firstly, randomly select one node (In FGAG, the nodes are FGs) as the start. Determine whether this FG is belonging to one FGP according to its structural property. If so, find out another node in the FGP and then continue the recognition process. Otherwise, select a new node and restart the recognition process.

Secondly, check whether nodes are connected by an edge. If there is no path between them or the length of the path is larger than “1” (1 means the two nodes are directly connected with each other), abandon these two nodes and select a new node to restart from step 1. Otherwise, continue the recognition process if the length of the path is “1”.

Thirdly, judge whether the node in one of the two nodes. If there are two parallel and convex edges that are connected to this node, the node is recognized to be the top face and then continue the recognition process. Otherwise, abandon the two nodes in the FGP and select a new node to restart the recognition from step 1.

Then, find out whether there exist end faces near the two nodes in the FGP or not. The terminated face exists if there exist two edges that meet the following conditions: (1) both the edges are located at the outer loop of the FG; (2) the two edges are parallel; (3) both the edges are concave. If the end face exists, the two nodes in the FGP, contain top faces and all the related edges are combined to a rib-feature.

Finally, select a new node to start a new recognition process from step 1 until all the nodes in the FGAG are traversed.

After all rib features are recognized from the model, the nodes belonging to the rib features are removed from the FGAG. The remaining nodes constitute several sub-graphs, each of which is recognized to be a main element part. Then, the model is decomposed to several sub-regions and each of them contains a rib feature or a main element part. The structure of each sub-region is clearly determined, so its structural semantic is also defined. However, the connection semantics is missing because of model decomposition. The next step is to reconstruct the connection semantics and generate a hierarchical structure of the model.

Model decomposition is the most efficient way to simplify a model. Generally, the decomposition methods can be divided into two categories including complete decomposition and redundancy decomposition based on the decomposed result. Taking the original model in Fig. 7
                     a as an example, the two decomposition method are used to decompose it respectively. In the former method, the Boolean operations are used to decompose the model gradually until the remaining part cannot be decomposed. In this case, all the sub-regions are independent and the connection between them are only the face-connection. The complete decomposition result is shown in Fig. 7b. The latter method decomposes the model based on some specific rules and the decomposed sub-regions may have some common region, as shown in Fig. 7c. The decomposition method used in this study belongs to the redundancy decomposition as it is based on the ribs with a large number of intersection regions. Meanwhile, the decomposition process is from bottom to up. Therefore, the decomposition of ribs in lower levels is introduced firstly.

Since the main elementary parts are all located at the top level of the hierarchy, the low-level sub-regions are all ribs. In this study, an Euler operation based method is proposed to conduct the rib decomposition, which is a divide-and-reconstruct process. The first step is to detect dividing faces belonging to the ribs from the model. The next step is to reconstruct the rib parts and the remaining parts of the model. Since the ribs may be connected with different types of main elementary sub-regions, the decomposition method can be classified into three categories as shown in Fig. 8:
                        
                        
                           
                              (1)
                              The rib is connected with only one main elementary sub-region simply, as shown in Fig. 8a. The first step of decomposition is to find out the intersection edges of a rib and the terminate face, such as e
                                 1, e
                                 2, e
                                 3 and e
                                 4. Then these edges are used to generate a face as the division between the rib and the remaining part, and the underlying geometry of this face is the same, as face f
                                 1 shown in Fig. 8a.

The model shown in Fig. 8b is a little more complex than the previous one. The rib is connected with more than one terminate faces (f
                                 1 and f
                                 2). Therefore, more divided faces should be generated to decompose this rib. Here, the edges (e
                                 1, e
                                 2, e
                                 6) together with the face f
                                 1 could generate one dividing face, the other edges (e
                                 3, e
                                 4, e
                                 5) together with the face f
                                 2 could generate another one. However, edge e
                                 7 is created and added to both faces since the outer loops of these two new faces are not complete.

The model shown in Fig. 8c is another case. The terminate faces (f
                                 1 and f
                                 2) do not belong to the same main elementary sub-region. In order to handle this case, a bridging face should be created. The creation of this face is to build a NURBS face which starts from edge e
                                 1 and ends at e
                                 2 and keeps a smooth connection with the both faces f
                                 1 and f
                                 2 at the same time.

Note that the dividing face is a NURBS bridge face and there may exist other approaches instead of using a simple plane. But these alternatives cannot be applied to all the cases. They may fail when the end face is represented with a free-form surface.

The decomposition of ribs of the same level is similar to the decomposition of rib of lower levels. The only difference is that the former is a complete decomposition while the latter is a redundant decomposition.

When two or more ribs belong to the same level which intersects with each other, the detailed decomposition method is described as follows:
                           
                              (1)
                              Reconstruction of the side face of the ribs. For the ribs that are split into several sub-ribs by others, the original side face has been split into several sub-side-faces too. In order to merge the sub-ribs, these sub-side-faces need to be reconstructed as one face firstly. The reconstruction process contains two steps: (i) using the common underlying geometry as that of the new face, (ii) using the “all outer boundary edges” to constitute a new boundary for the new face. As shown in Fig. 9
                                 , the two side faces (SF
                                 1 and SF
                                 2) are needed to reconstruct a new face, “all outer boundary edges” (the green edges e
                                 1–e
                                 6 which are located at the outer boundary of the new face) are used to constitute a new outer boundary for the new face. During the reconstruction process, some additional edges such as c
                                 1, c
                                 2 are needed to complete the outer loop of the new face.

Reconstruction of the top face of a rib. The reconstruction process is similar to that of the side face.

Rib decomposition from the upper level. This step is the same as the method described in Section 6.1.

The decomposed sub-regions contain ribs and main elementary sub-regions. As mentioned above, the ribs are mostly represented as planes or simple quadric surfaces, so the offset operation is more suitable to abstract their mid-surfaces. The discretization method is more suitable for the main elementary sub-regions since its geometry is often complex. Here, both methods are introduced below.

Generally, offset is a common operation in geometry modeling. It is easy to obtain the geometry of the mid-surface for the rib by using this operation. The detailed process is: (1) select one side face from the rib, (2) set the direction of another side face as the offset direction, (3) set the half distance of these two side faces as the offset distance, (4) execute the offset operation to get a face. The underlying geometry of this obtained face is that of the mid-surface. However, the topology of the mid-surface is still uncertain after the above steps. It is not a trivial task and can be completed as follows:

Firstly, intersect the geometry of the mid-surface with the top face of the rib, the intersection is an edge that is represented as one boundary edge of the mid-surface.

Secondly, intersect the geometry of the mid-surface with the terminate face of the rib, the intersection is another boundary edge.

Finally, if the rib itself is intersected with other ribs of the same level, the next step is to intersect the geometry of the mid-surface with the mid-surface of them. The intersection edge needs to be added to these two ribs.

After these three steps, the topology of the mid-surface is obtained.

For the main elementary region, the most applicable method is to use the discretization method. However, the previous discretization methods like CAT based method needs to be improved since they are not very accurate. In this study, the first step is to generate a surface mesh on the side faces of the model using a Delaunay mesh method. Here, the density of the mesh is controlled by both distance and curvature. The vertices of the triangle mesh are recognized as the initial points. Then a hybrid method is proposed to minimize the error of the computed middle points. As shown in Fig. 10
                        , suppose that F
                        1 and F
                        2 constitute a face pair and V
                        1 is a point on F
                        1. The proposed method of finding the corresponding point on F
                        2 for V
                        1 is given as follows:
                           
                              (1)
                              Project V
                                 1 onto F
                                 2 and obtain the projection point V
                                 3;

Generate a line with the opposite direction of V
                                 1’s normal, and then this line intersected with F2, the intersection is V2
                                 .

Generate a plane by using the vertices V
                                 1, V
                                 2 and V
                                 3. Then, generate the bisector of the angle V
                                 3–V
                                 1–V
                                 2 in this plane and obtain its intersection with F
                                 2 as V
                                 4, which is the improved corresponding point on F
                                 2 for V
                                 1.

After that, generate the middle point V
                                 m of this pair V
                                 1–V
                                 4, which is regarded as the point on the mid-surface for point pair V
                                 1–V
                                 4. The set of mid-points are fitted further to obtain the geometry of the mid-surface.

The mid-surface model is a transitional model which is generated for FEA. People pay little attention to its structure and reusability except the accuracy of its topology and geometry. However, the reusability of the mid-surface model is very important for efficient product development. Generally, a product model needs to be modified repeatedly to satisfy the design goals. Correspondingly, the mid-surface model without reusability should be totally regenerated again and again once the original model is modified. On the contrary, if the resultant mid-surface model is reusable, the new one can be regenerated rapidly by updating the modified region only. In this study, the mid-surface model can be reused thanks to the hierarchical semantic structure. The detailed method is described as follows:
                        
                           (1)
                           Identify the modified region of a model. When a local change occurs on the thin-walled model, the first work is to find out which sub-region has been changed. The thin-walled model and its mid-surface model are shown in Fig. 11
                              a and b respectively. When the original model is changed as shown in Fig. 11c, two ribs are modified to a larger size, the modified area must be identified first. Here, the modified region is divided into two categories: (1) directly changed region; (2) affected region. Here, both ribs are the directly changed region and both the orange faces are the affected region whose changes are caused by the ribs.

Remove the mid-surface patches in the directly changed region of the mid-surface model. Firstly, identify and remove the corresponding mid-surface patches of the directly changed region. In addition, the edges in the affected region should be identified and removed from mid-surface patches at the same time. The result is shown in Fig. 11d.

Regenerate the mid-surface of the directly changed region and add it to the mid-surface model. This process is similar to the rib abstraction process described in the Section 7.1. The final resultant mid-surface model is shown in Fig. 11e.

The proposed method is implemented with CATIA V5R21 and Visual C++. To demonstrate the outperformance of the proposed method, three groups of experiments are conducted as follows.

The whole process of the proposed method for mid-surface abstraction is shown in Fig. 12
                        . Fig. 12a is the original model, it is an artificial thin-walled model with some simple ribs. The first step is to recognize the rib-features from the original model and then the model is decomposed by the ribs, the original model is organized into the sub-regions to generate a hierarchical structure, as shown in Fig. 12b. Here, different colors are used to represent different levels of structure as shown in Fig. 12b. Then the hierarchical mid-surface model is obtained by using the abstraction method proposed in this study, the resultant model is shown in Fig. 12c. This resultant model can provide help in the future FEA. After FEA, the analyst may find some problems in the model and then modify it. Usually these changes happen on the ribs. As shown in Fig. 12d, some ribs have been modified. Then, the affected area containing these changes is found out as shown in Fig. 12e. Finally, the mid-surface model is regenerated quickly as the resultant model shown in Fig. 12f.

To further demonstrate the broad applicability of the proposed method, another typical models are given. The model shown in Fig. 13
                        a is a complex thin-walled model with a lot of ribs on them and these ribs have complex connection relationships. By using the hybrid abstraction method proposed in this study, the resultant hierarchical mid-surface model is correctly obtained and shown in Fig. 13b, the mid-surface patches of different levels are shown with different colors. Here, the mid-surface of the main elementary part is generated by NURBS fitting method whereas those of the ribs are generated by offset method.

To estimate the complexity of the rib recognition method, a set of special parts are constructed with ‘n
                        ×
                        n’ pockets patterns in rectangular boundaries, for example, one test model with ‘6×6’ pocket pattern is shown in Fig. 14
                        , this model contains one main elementary part and lots of simple sub-ribs. Among them, ‘n’ sub-ribs can form a complete rib. To compare the computational efficiency of the proposed method, the typical rib recognition method [25] is used here. It can be seen from Fig. 15
                         that the advantage of proposed method is more obvious with the increase of model complexity.

To analyze the improvement of the geometrical accuracy of the mid-surface obtained by the proposed method, two typical previous methods, i.e., the CAT method and the projection method, are used for comparison here. As shown in Fig. 16
                        a, an artificial thin-walled model with simple topology but complex geometry (represented with freeform surfaces) is used to compare the accuracy of the mid-surface generated by these methods. Note that the “offset” operation is not considered here even though it may be the most accurate method for the geometry of the mid-surface. The reason is that it is not applicable to thin-walled models with freeform surfaces.

The mid-surface models generated by the three methods are shown in Fig. 16b–d respectively. It can be seen that both the CAT method and the projection method can abstract three mid-surface patches from the original thin-walled model. However, the above three patches cannot intersect at one common edge due to the fact that the more the error in the mid-surface patch, the larger the gap in the connection. However, the three mid-surface patches generated by the proposed method can intersect at a common boundary edge that is pre-calculated as shown in Fig. 16d.

To evaluate the geometry accuracy of the three different methods, the relative error (R-error) for a given mid-point is used in this study and defined approximately as follows:
                           
                              (10)
                              
                                 
                                    R
                                    
                                       (
                                       e
                                       )
                                    
                                    =
                                    
                                       
                                          |
                                          
                                             
                                                d
                                                1
                                             
                                             −
                                             
                                                d
                                                2
                                             
                                          
                                          |
                                       
                                       t
                                    
                                 
                              
                           
                        Here, d
                        1 and d
                        2 are the distance values from the mid-point to the upper face and the bottom face respectively, The value t is the local thickness of the model near the mid-point. Considering that the number of mid-points may be large, the statistical results of geometric errors are adopted. The statistical results of geometric errors of the mid-surfaces generated by different methods are listed in Table 2
                         with respect to several error intervals. It can be seen from Table 2 that from the view of the geometric error the CAT method is the worst one since the geometric errors of its mid points are mainly in the interval [1%, 10%]. The projection method is better than the CAT method and the geometric errors of its mid points are mainly in the interval [1‰, 1%]. Obviously, the geometric error of the mid points obtained by the proposed method is minimum. Its geometric accuracy is much better than those of the other two methods due to the fact that the R-error of each point is less than 1‰.

To further demonstrate the influence of the density, another two groups of experiments with discrete points of different densities are conducted and the results are given in Table 2. It can be seen that the geometric accuracy can be improved with the increase of the density of the discrete points. However, it is worthy pointing out that the computational cost of the densification strategy for improving the geometric accuracy of the mid-surface is very high. Here, the time cost is increased nearly three times and ten times respectively. Based on the above analysis, the densification strategy for improving the geometric accuracy of the mid-surface is not very desirable. The method proposed in this study can greatly improve the accuracy of the geometry of the mid-surface model with less computational cost.

@&#CONCLUSION@&#

Dimensional reduction of thin-walled models to the mid-surface is important for FEA. However, there are still challenges for the efficient and reliable generation of the mid-surface because of the complex geometry and topology of the models. A new hierarchical semantic mid-surface abstraction method is proposed based on rib decomposition in this study. The main contributions are summarized as follows:
                        
                           (1)
                           Five indicators are proposed to evaluate the quality of mid-surface abstraction methods. Based on them, the performance of a mid-surface abstraction method can be evaluated.

A hierarchical semantic structure is proposed for representing the thin-walled model and the mid-surface model. By building the sibling connection semantics and the hierarchical connection semantics, the mid-surface model can contain rich semantics, which can support the following operations such as mid-surface reuse.

An efficient rib recognition method is proposed. Based on the proposed method, the thin-walled model is decomposed into the main elementary parts and ribs.

A hybrid method is proposed for the mid-surface extraction of complex freeform surfaces, which can guarantee both the efficiency and the accuracy of mid-surfaces.

An efficient reuse method is proposed for mid-surface model when a local modification is imposed on the initial design model. By reusing the existing mid-surface, the regeneration efficiency of mid-surface can be improved greatly.

However, there are still some deficiencies in the proposed approach. The model mixed with non-thin-walled area cannot be handled now. The hierarchical semantic structure ensures the ability in dealing with these type of models and the future research focus will be on it.

@&#ACKNOWLEDGMENTS@&#

The authors appreciate the financial supports from the NSF of China (61572427, 61370182), the 863 high-technology project of China (2014BAD04B02) and the key project of Science and Technology of Zhejiang province (2014C01052, 2014C01017).

