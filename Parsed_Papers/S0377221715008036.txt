@&#MAIN-TITLE@&#Finding robust timetables for project presentations of student teams

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           We develop a MIP model for timetabling of student teams with diver-sity/homogeneity criteria.


                        
                        
                           
                           We use a bicriteria approach with diversity/homogeneity objective versus robustness of timetables.


                        
                        
                           
                           We identify a Pareto front using the solution pool given by CPLEX.


                        
                        
                           
                           We model the solutions in the solution pool as a network and use it to calculate some heuristic robustness metrics.


                        
                        
                           
                           Tests on seven real instances show some metrics have very high rank cor-relation with the robustness measure.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Timetabling

Mixed integer programming

Robustness

Diverse grouping

Bicriteria optimization

@&#ABSTRACT@&#


               
               
                  This article describes a methodology developed to find robust solutions to a novel timetabling problem encountered during a course. The problem requires grouping student teams according to diversity/homogeneity criteria and assigning the groups to time-slots for presenting their project results. In this article, we develop a mixed integer programming (MIP) formulation of the problem and then solve it with CPLEX. Rather than simply using the optimal solution reported, we obtain a set of solutions provided by the solution pool feature of the solution engine. We then map these solutions to a network, in which each solution is a node and an edge represents the distance between a pair of solutions (as measured by the number of teams assigned to a different time slot in those solutions). Using a scenario-based exact robustness measure, we test a set of metrics to determine which ones can be used to heuristically rank the solutions in terms of their robustness measure. Using seven semesters’ worth of actual data, we analyze performances of the solution approach and the metrics. The results show that by using the solution pool feature, analysts can quickly obtain a set of Pareto-optimal solutions (with objective function value and the robustness measure as the two criteria). Furthermore, two of the heuristic metrics have strong rank correlation with the robustness measure (mostly above 0.80) making them quite suitable for use in the development of new heuristic search algorithms that can improve the solution pool.
               
            

@&#INTRODUCTION@&#

In practice, analysts are often more interested in finding a robust solution rather than an optimal solution to a discrete optimization model of a problem, especially when a model has plenty of good solutions (including several optimal or close-to-optimal solutions). Because models are simplified representations of actual problems, analysts are usually forced to leave out some characteristics or quality criteria of the problems they are addressing. Robustness is one such criterion that is not straightforwardly integrated into a mathematical model. In this research, we propose an approach in which first a solution engine is used to generate a set of solutions (in this case, CPLEX with its solution pool feature) and then the set of solutions is represented by a network. Next, after a robustness measure is calculated using this network, Pareto-optimal solutions are identified (using the objective function values and the robustness measures of the solutions as the two criteria). Because robustness is calculated after a set of solutions has been found, the network-based approach is applicable not only to timetabling but also to scheduling and possibly other discrete optimization problems, with any solution engine that produces a set of alternative solutions (e.g. meta-heuristics).

The timetabling problem we address herein is one that one of the authors faced in an undergraduate-level Introduction to Management course. The characteristics of the course, which we describe in detail subsequently, led to the need to assign student teams to time slots according to diversity and homogeneity criteria. To the best of our knowledge, the literature has not addressed combining grouping decisions with diversity objectives and timetabling in a single model. Furthermore, rather than simply finding an optimal solution, we were interested in discovering a robust solution that was easy to modify (typically by assigning one team to a different time slot) without significantly deteriorating the solution quality (i.e. objective function value). Although scheduling literature has addressed robustness concerns, we have not come across any research on robustness for academic timetabling problems.

The term project of the Introduction to Management course is the preparation of a business plan. For this, teams of three or four students prepare their business plans, which they present at the end of the semester. The course consists of approximately 150 students per semester, resulting in approximately 40 teams. For pedagogical reasons, three or four teams present in a time slot and all members of the teams in a time slot must be in the audience when other teams present their business plans. Each team has 25 minutes to setup, present, and answer questions and, thus the length of each time slot is 100 minutes. This is equivalent to two consecutive lecture hours at the university. Each time slot has two judges; one is the instructor of the course and the other is usually a teaching assistant.

Diversity of the teams assigned to the time slot is an important concern. The university’s undergraduate curriculum does not require students to declare their major until the end of their second (sophomore) year. Although students enter one of the three colleges (called Faculty or School) as freshmen, their choice of major can be in any one of the Faculties (Engineering, Arts & Social Sciences and Management). All students, regardless of the Faculty they enter, take the same set of core courses in their first year. During their sophomore year, students choose a set of courses from different majors, to help them make an informed choice. The Introduction to Management course is one such course; thus, many students with different backgrounds and interests take it. Many juniors and seniors (mainly studying engineering or economics) also take this course, resulting in significant diversity in the academic characteristics of the students.

Thus, two pedagogic concerns are taken into account when grouping teams. First, because judges inevitably grade presentations relative to one another, the instructor wanted each group of teams to reflect the academic diversity present in the course (with respect to enrolled Faculty, GPA, and class). Second, teams with the same type of business plan (e.g. retail, manufacturing, services) should be assigned to the same time slot, with the goal of sparking livelier question-and-answer periods because all the teams would have faced similar challenges in preparing their business plans and could cross-check others’ assumptions, make recommendations, and so on. Therefore, ideally teams in a time slot would have different Faculty, class, and GPA characteristics (referred to as “academic diversity”) but have the same business plan type (referred to as “business plan homogeneity”).

With approximately 40–50 teams, 10–13 time slots were required in a week (the last week of the semester) for the presentations. The course instructor wanted the number of days spanning the time from the first to the last presentation (referred to as the time-span of the timetable) to be as small as possible. From the students’ perspective, this creates a sense of fairness; everyone presents on the same two or three days (around final exams).

The instructor wanted a robust solution for cases when a team, for one reason or another, could not present during its assigned time slot. That is, having announced the timetable to the entire class, the instructor needed to quickly devise an alternative timetable that not only is feasible for each team but also was roughly similar to the initial timetable.

The article is organized as follows: Section 2 provides a review of relevant literature. Section 3 details how the mixed integer programming (MIP) model is formulated (including the data model used, pre-processing of data) and solved (including a heuristic for an initial upper bound). Section 4 discusses the methodology used to identify robust solutions. Section 5 demonstrates the entire approach with an example. Section 6 presents the results of seven semesters’ worth of actual data, and Section 7 concludes.

@&#LITERATURE REVIEW@&#

The problem we analyze in this article is related to two problem domains: forming groups of individual entities (people in general, teams in our case) and timetabling of events. A review of the literature on group formation reveals that most articles deal with the problem of grouping students into teams that have diversity within but similarity across teams. For example, Reeves and Hickman (1992) assign MBA students to their preferred projects while maintaining some control of the quality and foreign student mix of the teams. They use a MIP model that puts student preferences and team quality into its objective function. Team quality is measured by the sum of class ranks of the team members, the maximum of which is minimized across all teams.


                        Baker and Powell (2002) review previous literature on forming work groups that have diverse members within and a minimum difference among groups. They examine alternative formulations and objective functions and recommend a composite measure for solving large problem instances. In our study, the objective function we use builds on the results in this paper, which we discuss in detail in the next section.

In a related study, Baker and Benn (2001) develop a model for assigning incoming students to tutor groups, with the objective of having evenly balanced groups and solve it using a heuristic algorithm. The balance of teams is measured by multiple criteria such as gender, ethnicity, ability level, and so on. The heuristic is a simple neighborhood search implemented in a spreadsheet environment. Weitz and Jelassi (1992), Mingers and O’Brien (1995) and O’Brien and Mingers (1997) all address an almost identical problem.

Grouping and timetabling problems are also common in manufacturing in which operators or workers are grouped into manufacturing cells and/or assigned to shifts. Slomp and Suresh (2005) address the problem of assigning operators in a manufacturing plant to teams that work in a shift system. The formulation of the model includes multiple objectives related to worker cross-training, labor flexibility, and labor costs and uses an interactive goal-programming approach for solution. Although their model contains similar characteristics to ours in terms of team formation and timing, many other manufacturing-related features included in the model are irrelevant for our purposes.

The model we develop in this article has a timetabling aspect, and therefore the timetabling and personnel scheduling problems constitute the second domain of problems in our study. In a recent review of staff scheduling (rostering), Van den Bergh, Beliën, De Bruecker, Demeulemeester, and De Boeck (2013) argue that unique requirements of different industries and organizations require context-specific models (e.g. airline crew rostering, bus crew rostering, call-center rostering). Similarly, each timetabling problem such as exam timetabling, course timetabling, crew scheduling, nurse scheduling has its extensive literature (e.g. see Lewis, 2007; Qu, Burke, McCollum, Merlot, & Lee, 2008; Schaerf, 1999). These timetabling problems are fundamentally different from ours however: the entities (e.g. students, nurses) assigned to time slots must take part in multiple events (e.g. exams, classes, shifts).

Certain timetabling problems do have some similarities to our model. One example is the study by Potthoff and Munger (2003), in which speakers are assigned to sessions of a conference by a conference organizer (grouping dimension), and the sessions are assigned to time slots (timetabling dimension) such that sessions of a subject area are evenly distributed throughout the duration of the conference. The authors solve a problem with 10 time slots and 96 sessions using a MIP formulation, because parallel sessions occur in each time slot. In another study on conference timetabling, Sampson and Weiss (1995) assign presentations to sessions and time slots in such a way that specific requests of session participants are also taken into account. This model is also different from ours, because participants can and do attend multiple sessions, and this is included in the objective function. The problem of student sectioning involves assigning students to sections of the same course, and it can be solved simultaneously with the timetabling of courses, as Müller and Murray (2010) discuss.

Finding robust solutions to optimization problems is a primary goal of many studies. Gabrel, Murat, and Thiele (2014) provide a review of recent advances in robust optimization. The work presented in this research has been influenced mainly by the literature on machine/project scheduling under uncertainty. Authors who have provided reviews of work done in this area include Mehta and Uzsoy (1998), Vieira, Herrmann, and Lin (2003), Herroelen and Leus (2004), Aytug, Lawley, McKay, Mohan, and Uzsoy (2005), Ouelhadj and Petrovic (2009) and Sabuncuoglu and Goren (2009).

A commonly used term for what triggers the rescheduling process is disruption (e.g. a machine failure in scheduling). The reviews cited above highlight two main research themes: (i) developing robust schedules that are less sensitive to disruptions and (ii) rescheduling by reacting to disruptions.

Robustness is measured either with respect to the performance criterion (i.e. the objective function) of schedules created or with respect to some characteristic(s) of the schedule itself (e.g. sequence of operations, start times of operations, assignments of operations to machines). The former is often referred to as quality robustness and the latter as solution robustness (Herroelen & Leus, 2004). The inability to maintain schedule stability is sometimes referred to as creating “nervousness” in the system (Aytug et al. (2005)). The schedule created for planning purposes is often called the predictive schedule (pre-schedule) or proactive schedule, and the general approach of first creating a predictive schedule and then reacting to disruption(s) by creating a new-schedule that is somewhat similar to the proactive schedule is known as proactive–reactive scheduling.

The work presented here fits into the proactive–reactive scheduling framework. In the context of our timetabling problem, the disruption is a team requesting a different time slot, quality robustness pertains to the objective function value of the new timetable, and solution robustness involves the number of teams that are re-assigned to a different time slot with the new timetable. As discussed in Section 4, we use a measure of robustness that combines quality and solution robustness.

Our overall approach is somewhat similar to that of Jensen (2003). Jensen discusses how robustness can be measured by defining a neighborhood for solutions for the job shop scheduling problem. In that study, as well as ours, the idea behind the neighborhood-based robustness measurement is that when an event triggers the need to reschedule and a set of schedules close to the pre-schedule is deemed to have good performance, one of these solutions in the neighborhood can work around this trigger event. The neighborhood defined is based on the Hamming distance in which each solution is represented by a binary vector with each variable, j(α, β), for every pair of operations α and β on the same machine takes the value of 1 if α is the immediate predecessor of β in the schedule. The neighborhood used is 
                           
                              
                                 N
                                 1
                              
                              
                                 (
                                 s
                                 )
                              
                              ,
                           
                        which contains s and all feasible schedules that can be created from s by the interchange of two consecutive operations on the same machine. Because creation of all schedules in 
                           
                              
                                 N
                                 1
                              
                              
                                 (
                                 s
                                 )
                              
                           
                        is too time consuming, rather than an exact calculation of the robustness of a schedule s, an estimate is calculated. A genetic algorithm that uses the robustness measures (actual and estimated robustness measures) to evaluate fitness of solutions is implemented with the goal of identifying robust solutions.

The main concept of the approach used in this research has certain similarities to recoverable robustness developed by (Liebchen, Lübbecke, Möhring, and Stiller, 2009, p. 3), which they describe as “looking for solutions to an optimization problem which in a limited set of scenarios can be made feasible, or recovered, by a limited effort.” Limited effort is “formalized as a class of admissible recovery algorithms” (p. 3). These recovery algorithms are subject to some limitations; mainly with regard to run time and distance of the new solution from the planned one. We also limit the set of scenarios by allowing only one team to request a new time slot. Our recovery algorithm is predefined as well: it assigns one or more teams to a new time slot and the number of such teams is restricted (by the distance cut-off used in the creation of the solution network). There are also significant differences. First, because the problem that Liebchen et al. (2009) address is train timetabling and the event triggering the need to reschedule is a delay, at least one version of the problem can be formulated as a linear program (LP). Second, they formulate the LP such that the restriction on the recovery algorithm (which they denote with λ and is equivalent to our cut-off value) is also a decision variable and the objective is to find a planned timetable for which feasibility can be restored for all scenarios within a limited set of scenarios (small delays), where both recovery algorithms and limitation on the recovery algorithms are decision variables. A third difference is in whether recovery is to be seen as a pure feasibility problem or not. Liebchen et al. (2009) are simply interested in restoring feasibility, whereas we want the recovery (rescheduling) to both minimize the number of teams assigned to a different time slot and keep the objective function value of the new solution small (i.e. our objective includes both solution and quality robustness, respectively).


                        Scöbel and Kratz (2009) also apply the recoverable robustness concept to the aperiodic train timetabling problem. They model the problem, as we do in the work presented here, as a bicriteria optimization model with the nominal objective function and a measure of robustness.

Our solution approach comprises the following steps. First, we pre-process the data to obtain a compact timetable and to ensure the solution of the MIP model uses the time slots that are most likely to result in robust solutions. Second, we solve the MIP formulation using CPLEX to obtain a pool of good-quality solutions. Finally, we present the solution pool by a network and analyze it to help identify the solutions on the corresponding Pareto frontier (with respect to objective function value Z versus robustness measure Q).

We initially process the raw data obtained from the course/student databases of the university’s registrar’s office and the instructor’s MS Excel tables, which contain data on the teams and their business plan types, to prepare binary input data fit, aik
                         and pil
                        , which are defined subsequently (see Table 1
                        ). The first set of data, represented by pil
                         (
                           
                              i
                              =
                              1
                              ,
                              …
                              I
                              ,
                              l
                              =
                              1
                              ,
                              …
                              ,
                              L
                           
                        ), consist of the business plan types of teams. Depending on each team’s business plan, the instructor categorizes these into three or four plan types (i.e. 
                           
                              L
                              =
                              3
                           
                        or 4). For example, one type could be retail/wholesale trade, in which the primary income comes from products being bought/sold. Some examples are gift stores, bars, cafes, import & distribution of goods, and e-commerce sites. A second plan type could be pure service firms, for which either there is no physical product sold, or it is not the source of the main income. Examples are consulting, medical services, matchmaking, career consulting, and daycare centers. A third type is quite often non-service production, which includes manufacturing, agricultural production, software production, and the like. Plans that do not fit in the three categories defined by the instructor are placed into the others category. The second set of data contains teams’ academic attributes (denoted by aik
                        , 
                           
                              i
                              =
                              1
                              ,
                              …
                              I
                              ,
                           
                        
                        
                           
                              i
                              …
                              K
                           
                        ). Three academic attributes are operationalized as binary variables (i.e. 
                           
                              K
                              =
                              3
                           
                        ): the first attribute is GPA. A team’s median GPA of less than 2.5 is designated as ‘low GPA’, otherwise ‘high GPA’. The second attribute is Faculty. If the number of engineering students is more than half the team size we refer to it as an ‘engineer-dominated’ team. The third attribute is year. We categorize teams according to whether more than half the students in a team are in their first two years or not. The third set of data, fit
                        (
                           
                              i
                              =
                              1
                              ,
                              …
                              I
                              ,
                              t
                              =
                              1
                              ,
                              …
                              ,
                              T
                           
                        ), indicates whether time slot, t, is feasible for all the members of team, i. Finally, the number of time slots to be used, b, is chosen by the instructor so that ⌈I/nmax
                        ⌉ ≤ b≤ ⌊I/nmin
                        ⌋ (as discussed in Section 1, 
                           
                              
                                 n
                                 
                                    m
                                    i
                                    n
                                 
                              
                              =
                              3
                           
                        and 
                           
                              
                                 n
                                 
                                    m
                                    a
                                    x
                                 
                              
                              =
                              4
                           
                        for the actual instances solved in this research).


                        Baker and Powell (2002) contend that maximizing academic diversity within a group is equivalent to minimizing the difference between groups. We use the Total Absolute Deviation (TAD) measure of Mingers and O’Brien (1995) to quantify the difference between groups for two reasons. First, it can be formulated as a linear program, and second, compared with a large selection of alternative objective functions, it can perform quite well (see Baker & Powell, 2002).

Let 
                           
                              
                                 C
                                 
                                    t
                                    k
                                 
                              
                              =
                              
                                 ∑
                                 i
                              
                              
                                 a
                                 
                                    i
                                    k
                                 
                              
                              
                                 X
                                 
                                    i
                                    t
                                 
                              
                              ,
                           
                        where Ctk
                         denotes the number of teams in time slot t that have academic characteristic k. Then, let 
                           
                              
                                 q
                                 k
                              
                              =
                              
                                 ∑
                                 i
                              
                              
                                 a
                                 
                                    i
                                    k
                                 
                              
                              /
                              b
                              ,
                           
                        where qk
                         denotes the average number of teams per time slot exhibiting attribute k. Given Ctk
                         and qk
                        , we measure the academic diversity of a particular time slot t by

                           
                              (1)
                              
                                 
                                    
                                       
                                          
                                             
                                                D
                                                t
                                             
                                             =
                                             
                                                ∑
                                                k
                                             
                                             
                                                |
                                                
                                                   C
                                                   
                                                      t
                                                      k
                                                   
                                                
                                                −
                                                
                                                   Y
                                                   t
                                                
                                                
                                                   q
                                                   k
                                                
                                                |
                                             
                                             .
                                          
                                       
                                    
                                 
                              
                           
                        
                     

Then, by introducing slack and surplus variables 
                           
                              
                                 S
                                 
                                    t
                                    k
                                 
                                 +
                              
                              ,
                           
                        
                        
                           
                              S
                              
                                 t
                                 k
                              
                              −
                           
                        (both non-negative), we can linearize Dt
                         as follows:

                           
                              (2)
                              
                                 
                                    
                                       
                                          
                                             
                                                C
                                                
                                                   t
                                                   k
                                                
                                             
                                             +
                                             
                                                S
                                                
                                                   t
                                                   k
                                                
                                                +
                                             
                                             −
                                             
                                                S
                                                
                                                   t
                                                   k
                                                
                                                −
                                             
                                             =
                                             
                                                q
                                                k
                                             
                                             
                                                Y
                                                t
                                             
                                             .
                                          
                                       
                                    
                                 
                              
                           
                        
                     

We measure the second solution quality criterion, namely homogeneity of business plan types within a time slot, as follows:

                           
                              (3)
                              
                                 
                                    
                                       
                                          
                                             
                                                C
                                                
                                                   l
                                                   t
                                                
                                                ′
                                             
                                             =
                                             
                                                ∑
                                                i
                                             
                                             
                                                p
                                                
                                                   i
                                                   l
                                                
                                             
                                             
                                                X
                                                
                                                   i
                                                   t
                                                
                                             
                                             ,
                                          
                                       
                                    
                                 
                              
                           
                        where, 
                           
                              C
                              
                                 l
                                 t
                              
                              ′
                           
                        denotes the number of teams in time slot t that have business plan type l. Then, given 
                           
                              
                                 N
                                 t
                              
                              =
                              
                                 ∑
                                 i
                              
                              
                                 X
                                 
                                    i
                                    t
                                 
                              
                              ,
                           
                        we measure the homogeniety of business plan types in a time slot by

                           
                              (4)
                              
                                 
                                    
                                       
                                          
                                             
                                                H
                                                t
                                             
                                             =
                                             
                                                ∑
                                                l
                                             
                                             
                                                (
                                                
                                                   N
                                                   t
                                                
                                                −
                                                
                                                   C
                                                   
                                                      l
                                                      t
                                                   
                                                   ′
                                                
                                                )
                                             
                                             
                                                P
                                                
                                                   l
                                                   t
                                                
                                             
                                             ,
                                          
                                       
                                    
                                 
                              
                           
                        where Plt
                         is a decision variable defined as:

                           
                              
                                 
                                    
                                       
                                          
                                             
                                                P
                                                
                                                   l
                                                   t
                                                
                                             
                                             =
                                             
                                                {
                                                
                                                   
                                                      
                                                         1
                                                      
                                                      
                                                         
                                                            if
                                                            
                                                            business
                                                            
                                                            plan
                                                            
                                                            type
                                                            
                                                            l
                                                            
                                                            is
                                                            
                                                            the
                                                            
                                                            primary
                                                            
                                                            (target)
                                                            
                                                            plan
                                                            
                                                            type
                                                         
                                                      
                                                   
                                                   
                                                      
                                                      
                                                         
                                                            for
                                                            
                                                            time
                                                            
                                                            slot
                                                            
                                                            t
                                                         
                                                      
                                                   
                                                   
                                                      
                                                         0
                                                      
                                                      
                                                         otherwise
                                                      
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           
                        
                     

Then, we linearize expression (4) as follows:

                           
                              (5)
                              
                                 
                                    
                                       
                                          
                                             
                                                C
                                                
                                                   l
                                                   t
                                                
                                                ′
                                             
                                             +
                                             
                                                R
                                                
                                                   l
                                                   t
                                                
                                             
                                          
                                       
                                       
                                          =
                                       
                                       
                                          
                                             
                                                N
                                                t
                                             
                                             
                                             ∀
                                             l
                                             ,
                                             t
                                          
                                       
                                    
                                 
                              
                           
                        
                        
                           
                              (6)
                              
                                 
                                    
                                       
                                          
                                             R
                                             
                                                l
                                                t
                                             
                                          
                                       
                                       
                                          ≤
                                       
                                       
                                          
                                             
                                                
                                                   R
                                                   ¯
                                                
                                                t
                                             
                                             +
                                             
                                                n
                                                
                                                   m
                                                   a
                                                   x
                                                
                                             
                                             
                                                (
                                                1
                                                −
                                                
                                                   P
                                                   
                                                      l
                                                      t
                                                   
                                                
                                                )
                                             
                                             
                                             ∀
                                             l
                                             ,
                                             t
                                          
                                       
                                    
                                 
                              
                           
                        
                        
                           
                              (7)
                              
                                 
                                    
                                       
                                          
                                             
                                                ∑
                                                l
                                             
                                             
                                                P
                                                
                                                   l
                                                   t
                                                
                                             
                                          
                                       
                                       
                                          =
                                       
                                       
                                          
                                             1
                                             
                                             ∀
                                             t
                                             .
                                          
                                       
                                    
                                 
                              
                           
                        
                     

By minimizing 
                           
                              
                                 ∑
                                 t
                              
                              
                                 
                                    R
                                    ¯
                                 
                                 t
                              
                              ,
                           
                        the model sets the plan type with the largest number of teams as the primary plan of that time slot, so that 
                           
                              
                                 R
                                 ¯
                              
                              t
                           
                        becomes the number of teams in that time slot whose plan type is different from the primary plan of the time slot.

Note that for some t, we can have 
                           
                              
                                 N
                                 t
                              
                              =
                              4
                              ,
                           
                        
                        
                           
                              
                                 C
                                 
                                    1
                                    ,
                                    t
                                 
                                 ′
                              
                              =
                              
                                 C
                                 
                                    3
                                    ,
                                    t
                                 
                                 ′
                              
                              =
                              2
                           
                        . In that case, both plan types 1 and 3 can be the primary plan type of t, even when every other decision variable takes the same values. In such cases, a tiebreaker constraint is required to avoid degenerate solutions. We refer to plan type kas tight, if 
                           
                              
                                 C
                                 
                                    k
                                    ,
                                    t
                                 
                                 ′
                              
                              =
                              
                                 max
                                 l
                              
                              
                                 C
                                 
                                    l
                                    ,
                                    t
                                 
                                 ′
                              
                           
                        . The following constraints ensure that if two or more business plan types are tight for a certain time slot tthen the lowest indexed plan type will be chosen as the primary plant type for t. To this end, two new decision variables are introduced, Tlt
                         and Slt
                        . If plan type l is tight at a used time slot t (i.e. 
                           
                              
                                 R
                                 
                                    l
                                    t
                                 
                              
                              =
                              
                                 
                                    R
                                    ¯
                                 
                                 t
                              
                           
                        and 
                           
                              
                                 Y
                                 t
                              
                              =
                              1
                           
                        ), then Tlt
                        must be 1 (otherwise 0). If plan type l is not tight (i.e. 
                           
                              
                                 R
                                 
                                    l
                                    t
                                 
                              
                              >
                              
                                 
                                    R
                                    ¯
                                 
                                 t
                              
                           
                        ), then Slt
                         has to be 1 (otherwise 0). We introduce these variables into the model with the following constraints:

                           
                              (8)
                              
                                 
                                    
                                       
                                          
                                             
                                                R
                                                
                                                   l
                                                   t
                                                
                                             
                                             −
                                             
                                                
                                                   R
                                                   ¯
                                                
                                                t
                                             
                                          
                                       
                                       
                                          ≥
                                       
                                       
                                          
                                             
                                                Y
                                                t
                                             
                                             −
                                             
                                                T
                                                
                                                   l
                                                   t
                                                
                                             
                                             
                                             ∀
                                             t
                                             ,
                                             l
                                          
                                       
                                    
                                 
                              
                           
                        
                        
                           
                              (9)
                              
                                 
                                    
                                       
                                          
                                             
                                                R
                                                
                                                   l
                                                   t
                                                
                                             
                                             −
                                             
                                                
                                                   R
                                                   ¯
                                                
                                                t
                                             
                                          
                                       
                                       
                                          ≤
                                       
                                       
                                          
                                             
                                                n
                                                
                                                   m
                                                   a
                                                   x
                                                
                                             
                                             
                                                S
                                                
                                                   l
                                                   t
                                                
                                             
                                             
                                             ∀
                                             t
                                             ,
                                             l
                                          
                                       
                                    
                                 
                              
                           
                        
                        
                           
                              (10)
                              
                                 
                                    
                                       
                                          
                                             
                                                S
                                                
                                                   l
                                                   t
                                                
                                             
                                             +
                                             
                                                T
                                                
                                                   l
                                                   t
                                                
                                             
                                          
                                       
                                       
                                          =
                                       
                                       
                                          
                                             
                                                Y
                                                t
                                             
                                             
                                             ∀
                                             t
                                             ,
                                             l
                                          
                                       
                                    
                                 
                              
                           
                        
                        
                           
                              (11)
                              
                                 
                                    
                                       
                                          
                                             
                                                T
                                                
                                                   l
                                                   t
                                                
                                             
                                             +
                                             
                                                T
                                                
                                                   k
                                                   t
                                                
                                             
                                             −
                                             1
                                          
                                       
                                       
                                          ≤
                                       
                                       
                                          
                                             
                                                P
                                                
                                                   l
                                                   t
                                                
                                             
                                             
                                             ∀
                                             t
                                             ,
                                             l
                                             ,
                                             k
                                             
                                             such
                                             
                                             that
                                             
                                             k
                                             >
                                             l
                                             .
                                          
                                       
                                    
                                 
                              
                           
                        
                     

Note that these constraints do not allow more than two plan types to be tight; for the actual instances solved (see Section 6), where 
                           
                              
                                 n
                                 
                                    m
                                    i
                                    n
                                 
                              
                              =
                              3
                           
                        and 
                           
                              
                                 n
                                 
                                    m
                                    a
                                    x
                                 
                              
                              =
                              4
                              ,
                           
                        this means a time slot with 3 teams cannot have each team with a different plan type.

Four tasks are required as part of the pre-processing of data before the MIP model can be solved.

First, for each time slot t, the number of teams that can be assigned to that time slot is calculated as 
                           
                              
                                 F
                                 t
                              
                              =
                              
                                 ∑
                                 i
                              
                              
                                 f
                                 
                                    i
                                    t
                                 
                              
                           
                        . Then, for each time slot tand plan type l, the number of teams of business plan type l that can be assigned to time slot t is calculated and denoted by L
                        
                           t,l
                        . The set of feasible time slots is then defined as 
                           
                              F
                              =
                              
                                 {
                                 t
                                 :
                                 
                                    F
                                    t
                                 
                                 ≥
                                 
                                    n
                                    
                                       m
                                       i
                                       n
                                    
                                 
                                 
                                 and
                                 
                                 ∃
                                 l
                                 
                                 s.t.
                                 
                                 
                                    L
                                    
                                       t
                                       ,
                                       l
                                    
                                 
                                 ≥
                                 2
                                 }
                              
                           
                        . Given 
                           
                              F
                              ,
                           
                        for each day 
                           
                              d
                              ∈
                              
                                 {
                                 1
                                 ,
                                 2
                                 ,
                                 …
                                 ,
                                 5
                                 }
                              
                              ,
                           
                        the number of feasible time slots is calculated and denoted by Sd
                        .

Second, the need to keep the span of the timetable short is incorporated into the model by introducing the start day as an input parameter to the model. For a given start day, s, the model is solved for days 
                           
                              s
                              ,
                              s
                              +
                              1
                              ,
                              …
                              s
                              +
                              
                                 w
                                 s
                              
                              −
                              1
                              ,
                           
                        beginning with 
                           
                              
                                 w
                                 s
                              
                              =
                              
                                 w
                                 s
                                 
                                    m
                                    i
                                    n
                                 
                              
                           
                        and then increasing 
                           
                              w
                              s
                           
                        by one until a feasible solution emerges. Let 
                           
                              w
                              s
                              *
                           
                        denote the 
                           
                              w
                              s
                           
                        for which that feasible solution is found (the minimum number of consecutive days, 
                           
                              
                                 w
                                 s
                                 
                                    m
                                    i
                                    n
                                 
                              
                              ,
                           
                        is determined as the minimum value of d such that 
                           
                              
                                 ∑
                                 
                                    g
                                    =
                                    s
                                 
                                 
                                    s
                                    +
                                    d
                                    −
                                    1
                                 
                              
                              
                                 S
                                 g
                              
                              ≥
                              b
                           
                        ). The set of feasible time slots in the days 
                           
                              {
                              s
                              ,
                              s
                              +
                              1
                              ,
                              …
                              ,
                              s
                              +
                              
                                 w
                                 s
                                 *
                              
                              −
                              1
                              }
                           
                        is denoted by 
                           
                              W
                              s
                           
                        . To find solutions with different values of s, the MIP model is solved initially with 
                           
                              s
                              =
                              1
                              ,
                           
                        and s is increased one by one until for a given s there is no feasible solution when 
                           
                              s
                              +
                              
                                 w
                                 s
                              
                              −
                              1
                              =
                              5
                           
                        (as we are constrained to using only weekdays).

Third, a dominance rule is applied among pairs of time slots, so that if time slot 
                           v
                        dominates time slot u, then no solution is allowed to use time slot u unless time slot 
                           v
                        is used (in other words, 
                           v
                        has priority over u). Recall that a robust timetable can be modified by re-assigning a team to a different time slot without degrading the solution quality significantly. By representing the set of teams for which a given time slot t is feasible by 
                           
                              T
                              t
                           
                        (i.e. 
                           
                              i
                              ∈
                              
                                 T
                                 t
                              
                              ⇔
                              
                                 f
                                 
                                    i
                                    t
                                 
                              
                              =
                              1
                           
                        ), we see that it is possible to have a problem instance in which for a pair of time slots 
                           
                              u
                              ,
                              v
                              ∈
                              
                                 W
                                 s
                              
                              ,
                           
                        we have 
                           
                              
                                 T
                                 u
                              
                              ⊂
                              
                                 T
                                 v
                              
                           
                        . For such a pair of time slots, we would prefer to use time slot 
                           v
                        since any solution that uses time slot u but not 
                           v
                        can be made more robust by using 
                           v
                        instead of u. For example, for the data of Semester 1 (see Section 6):

                           
                              
                                 
                                    
                                       
                                          
                                             T
                                             3
                                          
                                       
                                       
                                          =
                                       
                                       
                                          
                                             {
                                             15
                                             ,
                                             21
                                             ,
                                             41
                                             }
                                          
                                       
                                    
                                    
                                       
                                          
                                             T
                                             29
                                          
                                       
                                       
                                          =
                                       
                                       
                                          
                                             {
                                             9
                                             ,
                                             10
                                             ,
                                             13
                                             ,
                                             15
                                             ,
                                             16
                                             ,
                                             17
                                             ,
                                             18
                                             ,
                                             19
                                             ,
                                             21
                                             ,
                                             23
                                             ,
                                             25
                                             ,
                                             26
                                             ,
                                             27
                                             ,
                                             28
                                             ,
                                             31
                                             ,
                                             35
                                             ,
                                          
                                       
                                    
                                    
                                       
                                       
                                       
                                          
                                             36
                                             ,
                                             37
                                             ,
                                             38
                                             ,
                                             39
                                             ,
                                             40
                                             ,
                                             41
                                             ,
                                             42
                                             }
                                             .
                                          
                                       
                                    
                                 
                              
                           
                        
                     

In this case, using time slot 3 but not 29 clearly leads to a much less robust solution. Therefore, in pre-processing of the data, the set of dominance relationships between pairs of time slots is identified as follows:

                           
                              
                                 
                                    D
                                    =
                                    {
                                    
                                       (
                                       u
                                       ,
                                       v
                                       )
                                    
                                    :
                                    u
                                    ,
                                    v
                                    ∈
                                    
                                       W
                                       s
                                    
                                    ,
                                    
                                       T
                                       u
                                    
                                    ⊂
                                    
                                       T
                                       v
                                    
                                    }
                                    .
                                 
                              
                           
                        Then, the following set of constraints are added to the MIP model:

                           
                              (12)
                              
                                 
                                    
                                       
                                          
                                             
                                                Y
                                                u
                                             
                                             ≤
                                             
                                                Y
                                                v
                                             
                                             
                                             ∀
                                             
                                                (
                                                u
                                                ,
                                                v
                                                )
                                             
                                             ∈
                                             D
                                             .
                                          
                                       
                                    
                                 
                              
                           
                        
                     

These dominance relationships form a directed network, in which nodes represent time slots t ∈ Ws
                         and arc from u to 
                           v
                        exists if 
                           
                              (
                              u
                              ,
                              v
                              )
                              ∈
                              D
                           
                        . Let Πt
                        be the number of all predecessors (not just immediate) of the node representing time slot t in this network. If 
                           
                              
                                 Π
                                 t
                              
                              ≥
                              
                                 ∑
                                 
                                    d
                                    =
                                    s
                                 
                                 
                                    s
                                    +
                                    
                                       w
                                       s
                                       *
                                    
                                    −
                                    1
                                 
                              
                              
                                 S
                                 d
                              
                              −
                              b
                              ,
                           
                        not using time slot t would result in infeasibility; thus, we can identify the set of time slots that must be used as

                           
                              (13)
                              
                                 
                                    
                                       
                                          
                                             
                                                U
                                                s
                                             
                                             =
                                             
                                                {
                                                t
                                                :
                                                t
                                                ∈
                                                
                                                   W
                                                   s
                                                
                                                
                                                and
                                                
                                                
                                                   Π
                                                   t
                                                
                                                ≥
                                                
                                                   ∑
                                                   
                                                      d
                                                      =
                                                      s
                                                   
                                                   
                                                      s
                                                      +
                                                      
                                                         w
                                                         s
                                                         *
                                                      
                                                      −
                                                      1
                                                   
                                                
                                                
                                                   S
                                                   d
                                                
                                                −
                                                b
                                                }
                                             
                                          
                                       
                                    
                                 
                              
                           
                        
                        
                           Lemma 1
                           
                              A lower bound in academic diversity is given by
                              
                                 
                                    L
                                    B
                                    A
                                    D
                                    =
                                    
                                       ∑
                                       k
                                    
                                    L
                                    B
                                    A
                                    
                                       D
                                       k
                                    
                                    ,
                                 
                              
                              such that 
                              
                                 
                                    
                                       
                                          L
                                          B
                                          A
                                          
                                             D
                                             k
                                          
                                          =
                                          
                                             {
                                             
                                                
                                                   
                                                      0
                                                   
                                                   
                                                      
                                                         i
                                                         f
                                                         
                                                         
                                                            
                                                               q
                                                               k
                                                            
                                                            ∈
                                                            Z
                                                         
                                                         
                                                      
                                                   
                                                
                                                
                                                   
                                                      
                                                         
                                                            n
                                                            k
                                                            −
                                                         
                                                         
                                                            (
                                                            
                                                               q
                                                               k
                                                            
                                                            −
                                                            
                                                               ⌊
                                                               
                                                                  q
                                                                  k
                                                               
                                                               ⌋
                                                            
                                                            )
                                                         
                                                         +
                                                         
                                                            n
                                                            k
                                                            +
                                                         
                                                         
                                                            (
                                                            
                                                               ⌈
                                                               
                                                                  q
                                                                  k
                                                               
                                                               ⌉
                                                            
                                                            −
                                                            
                                                               q
                                                               k
                                                            
                                                            )
                                                         
                                                      
                                                   
                                                   
                                                      
                                                         otherwise
                                                         ,
                                                      
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                              
                              where
                              
                                 
                                    
                                       n
                                       k
                                       +
                                    
                                    =
                                    b
                                    
                                       (
                                       
                                          q
                                          k
                                       
                                       −
                                       
                                          q
                                          k
                                          −
                                       
                                       )
                                    
                                 
                              
                              and
                              
                                 
                                    
                                       n
                                       k
                                       −
                                    
                                    =
                                    b
                                    −
                                    
                                       n
                                       k
                                       +
                                    
                                 
                              
                              .
                           

If 
                                 
                                    
                                       q
                                       k
                                    
                                    ∈
                                    Z
                                    ,
                                 
                              then each used time slot (t such that 
                                 
                                    
                                       Y
                                       t
                                    
                                    =
                                    1
                                 
                              ) can have exactly qk
                              teams with attribute k; that is 
                                 
                                    
                                       C
                                       
                                          t
                                          k
                                       
                                    
                                    =
                                    
                                       q
                                       k
                                    
                                 
                              . Then, in Constraint 2we would have 
                                 
                                    
                                       S
                                       
                                          t
                                          k
                                       
                                       +
                                    
                                    =
                                    
                                       S
                                       
                                          t
                                          k
                                       
                                       −
                                    
                                    =
                                    0
                                 
                              . Conversely, when 
                                 
                                    
                                       q
                                       k
                                    
                                    ∉
                                    Z
                                    ,
                                 
                              the smallest deviation from qk
                               would arise if 
                                 
                                    n
                                    k
                                    +
                                 
                              time slots have ⌈qk
                              ⌉ teams with attribute k and 
                                 
                                    n
                                    k
                                    −
                                 
                              time slots have ⌊qk
                              ⌋ teams with attribute k. Because, by definition 
                                 
                                    
                                       n
                                       k
                                       −
                                    
                                    +
                                    
                                       n
                                       k
                                       +
                                    
                                    =
                                    b
                                 
                              and 
                                 
                                    
                                       1
                                       b
                                    
                                    
                                       (
                                       
                                          n
                                          k
                                          −
                                       
                                       
                                          ⌊
                                          
                                             q
                                             k
                                          
                                          ⌋
                                       
                                       +
                                       
                                          n
                                          k
                                          +
                                       
                                       
                                          ⌈
                                          
                                             q
                                             k
                                          
                                          ⌉
                                       
                                       )
                                    
                                    =
                                    
                                       q
                                       k
                                    
                                    ,
                                 
                              we would have 
                                 
                                    
                                       n
                                       k
                                       +
                                    
                                    =
                                    b
                                    
                                       (
                                       
                                          q
                                          k
                                       
                                       −
                                       
                                          q
                                          k
                                          −
                                       
                                       )
                                    
                                 
                              .□

Finally, a lower bound on the number of time slots with primary business plan type l, denoted by LBPHl
                        , is calculated as follows (after an initial upper bound, UB, is calculated by the heuristic discussed in Section 3.5):

                           Lemma 2
                           
                              A lower bound on the number of time slots with primary business plan type l, i.e. ∑
                                 t
                              
                              Plt, is given by 
                              
                                 
                                    
                                       
                                          L
                                          B
                                          P
                                          
                                             H
                                             l
                                          
                                          =
                                          
                                             ⌈
                                             
                                                
                                                   max
                                                   
                                                      {
                                                      0
                                                      ,
                                                      
                                                         ∑
                                                         i
                                                      
                                                      
                                                         p
                                                         
                                                            i
                                                            l
                                                         
                                                      
                                                      −
                                                      
                                                         (
                                                         U
                                                         B
                                                         −
                                                         L
                                                         B
                                                         A
                                                         D
                                                         )
                                                      
                                                      }
                                                   
                                                
                                                
                                                   n
                                                   
                                                      m
                                                      a
                                                      x
                                                   
                                                
                                             
                                             ⌉
                                          
                                       
                                    
                                 
                              
                           


                              
                                 
                                    (14)
                                    
                                       
                                          
                                             
                                                
                                                   
                                                      U
                                                      B
                                                      −
                                                      L
                                                      B
                                                      A
                                                      D
                                                      ≥
                                                      
                                                         ∑
                                                         t
                                                      
                                                      
                                                         
                                                            R
                                                            ¯
                                                         
                                                         t
                                                      
                                                      =
                                                      
                                                         ∑
                                                         t
                                                      
                                                      
                                                         ∑
                                                         l
                                                      
                                                      
                                                         ∑
                                                         
                                                            g
                                                            :
                                                            g
                                                            ≠
                                                            l
                                                         
                                                      
                                                      
                                                         C
                                                         
                                                            l
                                                            t
                                                         
                                                         ′
                                                      
                                                      
                                                         P
                                                         
                                                            g
                                                            t
                                                         
                                                      
                                                   
                                                   
                                                   ⇒
                                                
                                             
                                          
                                       
                                    
                                 
                              
                              
                                 
                                    (15)
                                    
                                       
                                          
                                             
                                                
                                                   U
                                                   B
                                                   −
                                                   L
                                                   B
                                                   A
                                                   D
                                                   ≥
                                                   
                                                      ∑
                                                      t
                                                   
                                                   
                                                      ∑
                                                      
                                                         g
                                                         :
                                                         g
                                                         ≠
                                                         l
                                                      
                                                   
                                                   
                                                      C
                                                      
                                                         l
                                                         t
                                                      
                                                      ′
                                                   
                                                   
                                                      P
                                                      
                                                         g
                                                         t
                                                      
                                                   
                                                   
                                                   ∃
                                                   l
                                                   .
                                                
                                             
                                          
                                       
                                    
                                 
                              Because the right-hand-side of inequality (15) gives the number of teams with plan type l that are assigned to a time slot with primary plan type that is not equal to l, the following would be equal to the number of teams with plan type l that are assigned to a time slot with primary plan type l:

                                 
                                    
                                       
                                          
                                             ∑
                                             i
                                          
                                          
                                             p
                                             
                                                i
                                                l
                                             
                                          
                                          −
                                          
                                             ∑
                                             t
                                          
                                          
                                             ∑
                                             
                                                g
                                                :
                                                g
                                                ≠
                                                l
                                             
                                          
                                          
                                             C
                                             
                                                l
                                                t
                                             
                                             ′
                                          
                                          
                                             P
                                             
                                                g
                                                t
                                             
                                          
                                          .
                                       
                                    
                                 
                              Thus,

                                 
                                    (16)
                                    
                                       
                                          
                                             
                                                
                                                   
                                                      ∑
                                                      i
                                                   
                                                   
                                                      p
                                                      
                                                         i
                                                         l
                                                      
                                                   
                                                   −
                                                   
                                                      ∑
                                                      t
                                                   
                                                   
                                                      ∑
                                                      
                                                         g
                                                         :
                                                         g
                                                         ≠
                                                         l
                                                      
                                                   
                                                   
                                                      C
                                                      
                                                         l
                                                         t
                                                      
                                                      ′
                                                   
                                                   
                                                      P
                                                      
                                                         g
                                                         t
                                                      
                                                   
                                                   ≥
                                                   
                                                      ∑
                                                      i
                                                   
                                                   
                                                      p
                                                      
                                                         i
                                                         l
                                                      
                                                   
                                                   −
                                                   
                                                      (
                                                      U
                                                      B
                                                      −
                                                      L
                                                      B
                                                      A
                                                      D
                                                      )
                                                   
                                                   ,
                                                
                                             
                                          
                                       
                                    
                                 
                              which implies that

                                 
                                    
                                       
                                          
                                             ∑
                                             t
                                          
                                          
                                             P
                                             
                                                l
                                                t
                                             
                                          
                                          ≥
                                          
                                             ⌈
                                             
                                                
                                                   
                                                      ∑
                                                      i
                                                   
                                                   
                                                      p
                                                      
                                                         i
                                                         l
                                                      
                                                   
                                                   −
                                                   
                                                      (
                                                      U
                                                      B
                                                      −
                                                      L
                                                      B
                                                      A
                                                      D
                                                      )
                                                   
                                                
                                                
                                                   n
                                                   
                                                      m
                                                      a
                                                      x
                                                   
                                                
                                             
                                             ⌉
                                          
                                          .
                                          
                                          □
                                       
                                    
                                 
                              
                           

The decision variables of the MIP model are denoted as follows:

                           
                              
                                 
                                    
                                       
                                          
                                             X
                                             
                                                i
                                                t
                                             
                                          
                                       
                                       
                                          =
                                       
                                       
                                          
                                             1
                                             
                                             if
                                             
                                             team
                                             
                                             i
                                             
                                             is
                                             
                                             assigned
                                             
                                             to
                                             
                                             time
                                             
                                             slot
                                             
                                             t
                                             ,
                                             
                                             0
                                             
                                             otherwise.
                                          
                                       
                                    
                                    
                                       
                                          
                                             Y
                                             t
                                          
                                       
                                       
                                          =
                                       
                                       
                                          
                                             1
                                             
                                             if
                                             
                                             time
                                             
                                             slot
                                             
                                             t
                                             
                                             is
                                             
                                             used,
                                             
                                             0
                                             
                                             otherwise.
                                          
                                       
                                    
                                    
                                       
                                          
                                             P
                                             
                                                l
                                                t
                                             
                                          
                                       
                                       
                                          =
                                       
                                       
                                          
                                             1
                                             
                                             if
                                             
                                             l
                                             
                                             is
                                             
                                             the
                                             
                                             primary
                                             
                                             plan
                                             
                                             type
                                             
                                             for
                                             
                                             time
                                             
                                             slot
                                             
                                             t
                                             ,
                                             
                                             0
                                             
                                             otherwise.
                                          
                                       
                                    
                                    
                                       
                                          
                                             T
                                             
                                                l
                                                t
                                             
                                          
                                       
                                       
                                          =
                                       
                                       
                                          
                                             1
                                             
                                             if
                                             
                                             plan
                                             
                                             type
                                             
                                             l
                                             
                                             at
                                             
                                             time
                                             
                                             slot
                                             
                                             t
                                             
                                             is
                                             
                                             tight,
                                             
                                             0
                                             
                                             otherwise.
                                          
                                       
                                    
                                    
                                       
                                          
                                             S
                                             
                                                l
                                                t
                                             
                                          
                                       
                                       
                                          =
                                       
                                       
                                          
                                             1
                                             
                                             if
                                             
                                             plan
                                             
                                             type
                                             
                                             l
                                             
                                             at
                                             
                                             time
                                             
                                             slot
                                             
                                             t
                                             
                                             is
                                             
                                             not
                                             
                                             tight,
                                             
                                             0
                                             
                                             otherwise.
                                          
                                       
                                    
                                    
                                       
                                          
                                             S
                                             
                                                t
                                                k
                                             
                                             −
                                          
                                       
                                       
                                          =
                                       
                                       
                                          
                                             slack
                                             
                                             of
                                             
                                             academic
                                             
                                             diversity
                                             
                                             at
                                             
                                             time
                                             
                                             slot
                                             
                                             t
                                             ,
                                             
                                             with
                                             
                                             respect
                                             
                                             to
                                             
                                             
                                                q
                                                k
                                             
                                             .
                                          
                                       
                                    
                                    
                                       
                                          
                                             S
                                             
                                                t
                                                k
                                             
                                             +
                                          
                                       
                                       
                                          =
                                       
                                       
                                          
                                             surplus
                                             
                                             of
                                             
                                             academic
                                             
                                             diversity
                                             
                                             at
                                             
                                             time
                                             
                                             slot
                                             
                                             t
                                             ,
                                             
                                             with
                                             
                                             respect
                                          
                                       
                                    
                                    
                                       
                                       
                                       
                                          
                                             to
                                             
                                             
                                                q
                                                k
                                             
                                             .
                                          
                                       
                                    
                                    
                                       
                                          
                                             
                                                R
                                                ¯
                                             
                                             t
                                          
                                       
                                       
                                          =
                                       
                                       
                                          
                                             slack
                                             
                                             of
                                             
                                             plan
                                             
                                             type
                                             
                                             homogeneity
                                             
                                             at
                                             
                                             time
                                             
                                             slot
                                             
                                             t
                                             ,
                                             
                                             with
                                             
                                             respect
                                          
                                       
                                    
                                    
                                       
                                       
                                       
                                          
                                             to
                                             
                                             primary
                                             
                                             plan
                                             
                                             type.
                                          
                                       
                                    
                                    
                                       
                                          
                                             R
                                             
                                                l
                                                t
                                             
                                          
                                       
                                       
                                          =
                                       
                                       
                                          
                                             slack
                                             
                                             of
                                             
                                             plan
                                             
                                             type
                                             
                                             homogeneity
                                             
                                             at
                                             
                                             time
                                             
                                             slot
                                             
                                             t
                                             ,
                                             
                                             with
                                             
                                             respect
                                          
                                       
                                    
                                    
                                       
                                       
                                       
                                          
                                             to
                                             
                                             plan
                                             
                                             type
                                             
                                             l
                                             .
                                          
                                       
                                    
                                 
                              
                           
                        
                     

The resultant MIP formulation for start day s is given as

                           
                              (17)
                              
                                 
                                    
                                       
                                       
                                       
                                          
                                             min
                                             
                                                ∑
                                                t
                                             
                                             
                                                ∑
                                                k
                                             
                                             
                                                (
                                                
                                                   S
                                                   
                                                      t
                                                      k
                                                   
                                                   −
                                                
                                                +
                                                
                                                   S
                                                   
                                                      t
                                                      k
                                                   
                                                   +
                                                
                                                )
                                             
                                             +
                                             
                                                
                                                   R
                                                   ¯
                                                
                                                t
                                             
                                          
                                       
                                    
                                    
                                       
                                       
                                       
                                          
                                             
                                                subject
                                                
                                                to
                                             
                                          
                                       
                                    
                                    
                                       
                                       
                                       
                                          
                                             
                                                
                                                   ∑
                                                   
                                                      t
                                                      ∈
                                                      
                                                         W
                                                         s
                                                      
                                                   
                                                
                                                
                                                   Y
                                                   t
                                                
                                             
                                             =
                                             b
                                          
                                       
                                    
                                 
                              
                           
                        
                        
                           
                              (18)
                              
                                 
                                    
                                       
                                          
                                             
                                                
                                                   ∑
                                                   
                                                      t
                                                      ∉
                                                      
                                                         W
                                                         s
                                                      
                                                   
                                                
                                                
                                                   Y
                                                   t
                                                
                                             
                                             =
                                             0
                                          
                                       
                                    
                                 
                              
                           
                        
                        
                           
                              (19)
                              
                                 
                                    
                                       
                                          
                                             
                                                
                                                   ∑
                                                   t
                                                
                                                
                                                   X
                                                   
                                                      i
                                                      t
                                                   
                                                
                                             
                                             =
                                             1
                                             
                                             
                                             ∀
                                             i
                                          
                                       
                                    
                                 
                              
                           
                        
                        
                           
                              (20)
                              
                                 
                                    
                                       
                                          
                                             
                                                X
                                                
                                                   i
                                                   t
                                                
                                             
                                             ≤
                                             
                                                f
                                                
                                                   i
                                                   t
                                                
                                             
                                             
                                             
                                             ∀
                                             i
                                             ,
                                             t
                                          
                                       
                                    
                                 
                              
                           
                        
                        
                           
                              (21)
                              
                                 
                                    
                                       
                                          
                                             
                                                
                                                   ∑
                                                   i
                                                
                                                
                                                   X
                                                   
                                                      i
                                                      t
                                                   
                                                
                                             
                                             ≤
                                             
                                                n
                                                
                                                   m
                                                   a
                                                   x
                                                
                                             
                                             
                                                Y
                                                t
                                             
                                             
                                             
                                             ∀
                                             t
                                          
                                       
                                    
                                 
                              
                           
                        
                        
                           
                              (22)
                              
                                 
                                    
                                       
                                          
                                             
                                                
                                                   ∑
                                                   i
                                                
                                                
                                                   X
                                                   
                                                      i
                                                      t
                                                   
                                                
                                             
                                             ≥
                                             
                                                n
                                                
                                                   m
                                                   i
                                                   n
                                                
                                             
                                             
                                                Y
                                                t
                                             
                                             
                                             
                                             ∀
                                             t
                                          
                                       
                                    
                                 
                              
                           
                        
                        
                           
                              (23)
                              
                                 
                                    
                                       
                                          
                                             
                                                
                                                   ∑
                                                   l
                                                
                                                
                                                   P
                                                   
                                                      l
                                                      t
                                                   
                                                
                                             
                                             =
                                             
                                                Y
                                                t
                                             
                                             
                                             
                                             ∀
                                             t
                                          
                                       
                                    
                                 
                              
                           
                        
                        
                           
                              (24)
                              
                                 
                                    
                                       
                                          
                                             
                                                
                                                   ∑
                                                   i
                                                
                                                
                                                   p
                                                   
                                                      i
                                                      l
                                                   
                                                
                                                
                                                   X
                                                   
                                                      i
                                                      t
                                                   
                                                
                                                +
                                                
                                                   R
                                                   
                                                      l
                                                      t
                                                   
                                                
                                             
                                             =
                                             
                                                ∑
                                                i
                                             
                                             
                                                X
                                                
                                                   i
                                                   t
                                                
                                             
                                             
                                             
                                             ∀
                                             l
                                             ,
                                             t
                                          
                                       
                                    
                                 
                              
                           
                        
                        
                           
                              (25)
                              
                                 
                                    
                                       
                                          
                                             
                                                R
                                                
                                                   l
                                                   t
                                                
                                             
                                             ≤
                                             
                                                
                                                   R
                                                   ¯
                                                
                                                t
                                             
                                             +
                                             
                                                n
                                                
                                                   m
                                                   a
                                                   x
                                                
                                             
                                             
                                                (
                                                1
                                                −
                                                
                                                   P
                                                   
                                                      l
                                                      t
                                                   
                                                
                                                )
                                             
                                             
                                             
                                             ∀
                                             l
                                             ,
                                             t
                                          
                                       
                                    
                                 
                              
                           
                        
                        
                           
                              (26)
                              
                                 
                                    
                                       
                                          
                                             
                                                
                                                   ∑
                                                   i
                                                
                                                
                                                   a
                                                   
                                                      i
                                                      k
                                                   
                                                
                                                
                                                   X
                                                   
                                                      i
                                                      t
                                                   
                                                
                                                +
                                                
                                                   S
                                                   
                                                      t
                                                      k
                                                   
                                                   −
                                                
                                                −
                                                
                                                   S
                                                   
                                                      t
                                                      k
                                                   
                                                   +
                                                
                                             
                                             =
                                             
                                                Y
                                                t
                                             
                                             
                                                q
                                                k
                                             
                                             
                                             
                                             ∀
                                             k
                                             ,
                                             t
                                          
                                       
                                    
                                 
                              
                           
                        
                        
                           
                              (27)
                              
                                 
                                    
                                       
                                          
                                             
                                                
                                                   R
                                                   
                                                      l
                                                      t
                                                   
                                                
                                                −
                                                
                                                   
                                                      R
                                                      ¯
                                                   
                                                   t
                                                
                                             
                                             ≥
                                             
                                                Y
                                                t
                                             
                                             −
                                             
                                                T
                                                
                                                   l
                                                   t
                                                
                                             
                                             
                                             
                                             ∀
                                             l
                                             ,
                                             t
                                          
                                       
                                    
                                 
                              
                           
                        
                        
                           
                              (28)
                              
                                 
                                    
                                       
                                          
                                             
                                                
                                                   R
                                                   
                                                      l
                                                      t
                                                   
                                                
                                                −
                                                
                                                   
                                                      R
                                                      ¯
                                                   
                                                   t
                                                
                                             
                                             ≤
                                             
                                                n
                                                
                                                   m
                                                   a
                                                   x
                                                
                                             
                                             
                                                S
                                                
                                                   l
                                                   t
                                                
                                             
                                             
                                             
                                             ∀
                                             l
                                             ,
                                             t
                                          
                                       
                                    
                                 
                              
                           
                        
                        
                           
                              (29)
                              
                                 
                                    
                                       
                                          
                                             
                                                
                                                   S
                                                   
                                                      l
                                                      t
                                                   
                                                
                                                +
                                                
                                                   T
                                                   
                                                      l
                                                      t
                                                   
                                                
                                             
                                             =
                                             
                                                Y
                                                t
                                             
                                          
                                       
                                    
                                 
                              
                           
                        
                        
                           
                              (30)
                              
                                 
                                    
                                       
                                          
                                             
                                                
                                                   T
                                                   
                                                      l
                                                      t
                                                   
                                                
                                                +
                                                
                                                   T
                                                   
                                                      k
                                                      t
                                                   
                                                
                                                −
                                                1
                                             
                                             ≤
                                             
                                                P
                                                
                                                   k
                                                   t
                                                
                                             
                                             
                                             
                                             ∀
                                             t
                                             ,
                                             ∀
                                             k
                                             <
                                             l
                                          
                                       
                                    
                                 
                              
                           
                        
                        
                           
                              (31)
                              
                                 
                                    
                                       
                                          
                                             
                                                Y
                                                u
                                             
                                             ≤
                                             
                                                Y
                                                v
                                             
                                             
                                             
                                             ∀
                                             
                                                (
                                                u
                                                ,
                                                v
                                                )
                                             
                                             ∈
                                             D
                                          
                                       
                                    
                                 
                              
                           
                        
                        
                           
                              (32)
                              
                                 
                                    
                                       
                                          
                                             
                                                Y
                                                t
                                             
                                             =
                                             1
                                             
                                             
                                             ∀
                                             t
                                             ∈
                                             
                                                U
                                                s
                                             
                                          
                                       
                                    
                                 
                              
                           
                        
                        
                           
                              (33)
                              
                                 
                                    
                                       
                                          
                                             
                                                
                                                   ∑
                                                   t
                                                
                                                
                                                   P
                                                   
                                                      l
                                                      t
                                                   
                                                
                                             
                                             ≥
                                             L
                                             B
                                             P
                                             
                                                H
                                                l
                                             
                                             
                                             
                                             ∀
                                             l
                                          
                                       
                                    
                                 
                              
                           
                        
                        
                           
                              
                                 
                                    
                                       
                                       
                                       
                                          
                                             
                                                
                                                   S
                                                   
                                                      t
                                                      k
                                                   
                                                   −
                                                
                                                ,
                                                
                                                   S
                                                   
                                                      t
                                                      k
                                                   
                                                   +
                                                
                                                ∈
                                                
                                                   
                                                      R
                                                   
                                                   +
                                                
                                                
                                                
                                                ∀
                                                t
                                                ,
                                                k
                                             
                                             
                                             
                                                P
                                                
                                                   l
                                                   t
                                                
                                             
                                             ,
                                             
                                                T
                                                
                                                   l
                                                   t
                                                
                                             
                                             ,
                                             
                                                S
                                                
                                                   l
                                                   t
                                                
                                             
                                             ∈
                                             
                                                {
                                                0
                                                ,
                                                1
                                                }
                                             
                                             
                                             
                                             ∀
                                             l
                                             ,
                                             t
                                          
                                       
                                    
                                    
                                       
                                       
                                       
                                          
                                             
                                                
                                                   R
                                                   
                                                      l
                                                      t
                                                   
                                                
                                                ∈
                                                
                                                   
                                                      R
                                                   
                                                   +
                                                
                                                
                                                
                                                ∀
                                                l
                                                ,
                                                t
                                             
                                             
                                             
                                             
                                                
                                                   R
                                                   ¯
                                                
                                                t
                                             
                                             ∈
                                             
                                                
                                                   R
                                                
                                                +
                                             
                                             
                                             
                                             ∀
                                             t
                                          
                                       
                                    
                                    
                                       
                                       
                                       
                                          
                                             
                                                
                                                   X
                                                   
                                                      i
                                                      t
                                                   
                                                
                                                ∈
                                                
                                                   {
                                                   0
                                                   ,
                                                   1
                                                   }
                                                
                                                
                                                
                                                ∀
                                                i
                                                ,
                                                t
                                             
                                             
                                             
                                                Y
                                                t
                                             
                                             ∈
                                             
                                                {
                                                0
                                                ,
                                                1
                                                }
                                             
                                             
                                             
                                             ∀
                                             t
                                          
                                       
                                    
                                 
                              
                           
                        
                     

Constraint (17) ensures that b of the available time slots in the window Ws
                         are used, whereas Constraint (18) forces all time slots outside Ws
                         to be left unused. Constraint (19) requires each team to be assigned to exactly one time slot. Constraint (20) ensures that a team can only be assigned to a time slot that is feasible. Constraints (21) and (22) enforce the maximum and minimum number of teams per time slot, respectively. Constraint (23) ensures one business plan type is chosen as the primary plan type for a time slot, if and only if that time slot is used. Constraints (24) and (25) are the linearization constraints for the plan homogeneity measure defined in Eq. (4). Constraint (26) is the linearization constraint for the academic diversity measure defined in Eq. (1). As a group, Constraints (27)–(30) are designed to avoid degenerate solutions when there is a tie for the primary business plan type of time slot t (as discussed in Section 3.2). Constraints (31) and (32) implement the information driven from the dominance network (as discussed in Section 3.3). Finally, Constraint (33) enforces the lower bound on the number of time slots with primary business plan type l.

To speed up the MIP solution of CPLEX, a fast heuristic is used to obtain an initial upper bound. Fig. 1
                         gives the pseudo-code of the heuristic. It is a parametrized algorithm, in which parameter PrioType determines how the time slots are prioritized in a list. The heuristic is run twice, once with 
                           
                              P
                              r
                              i
                              o
                              T
                              y
                              p
                              e
                              =
                              1
                           
                        and once with 
                           
                              P
                              r
                              i
                              o
                              T
                              y
                              p
                              e
                              =
                              2
                           
                        . Then, the best solution is taken as the upper bound for the MIP model. Although the heuristic may fail to find a feasible solution, tests on actual data showed that in most instances it significantly speeds up the solution by CPLEX.

In the pseudo-code, the PrioritizeTimes function works as follows: for each time slot t ∈ Ws, NumFeas[t] is calculated as the number of feasible teams for t and InDegree[t] is the in-degree of the node for time t in the dominance network. Then for 
                           
                              P
                              r
                              i
                              o
                              T
                              y
                              p
                              e
                              =
                              1
                              ,
                           
                        the priority list of time slots, ListTm, is formed in decreasing order of InDegree[t] with ties broken by decreasing NumFeas[t]. For 
                           
                              P
                              r
                              i
                              o
                              T
                              y
                              p
                              e
                              =
                              2
                              ,
                           
                        
                        ListTm is formed in decreasing order of NumFeas[t] with ties broken by decreasing InDegree[t]. The PrioritizeTeams function calculates the number of feasible time slots for each team i within Ws
                        , denoted by NumTime[i]. Then, it returns a priority list of teams, ListG, sorted in increasing NumTime[i], where tiebreaker is the team number. The AssignFirstTeams procedure takes each team, i, from ListG and searches for the highest priority time slot that is feasible for i and has no teams assigned yet. Upon finding such a time slot, it assigns team i to it. If it cannot find a time slot, it moves on to the next highest priority team. It stops after having assigned one team to b time slots. NextUsableTime(team, time) gives the time after time that is in the set SetUsedT and is feasible for team. StoreUsable(team, time) stores each time slot usable for each team in order to use this information in backtracking. MarginalCost(team, time, best) calculates the marginal cost (academic diversity and plan homogeneity) of assigning team to time and updates the best time best if the new marginal cost is better than the current best.

The backtracking function shown in Fig. 2
                         is called when no feasible time is found for team. In that case, the function moves the priority index pg back until a team is found that is assigned to a time that is usable for team. If no such team is found, then backtrack and the overall heuristic both fail.

Here, a robust solution is loosely defined as a solution that has neighboring solutions that are both good (quality robustness) and a “short distance” from the robust solution (solution robustness). From this perspective, a method developed to identify a robust solution needs to accomplish three tasks: (1) determine a reasonable number of good solutions, (2) have a definition for neighboring solutions, and (3) have a method for measuring the robustness of a given solution. We discuss each of these in turn subsequently (see Table 2
                      for the notation).

The CPLEX solution pool feature can be used to find a set of solutions with good objective function values. According to the online documentation of CPLEX IBM-ILOG (IBM-ILOG, 2014) “the solution pool feature allows you to generate and store multiple solutions to [an MIP] model. This feature uses an extension of the CPLEX branch-and-cut algorithm to generate multiple solutions in addition to the optimal solution.” We specify a maximum percentage deviation from the incumbent solution that would qualify a solution to enter the pool (by CPLEX’s solution pool relative gap parameter, solnpoolgap), and we require the pool to keep the best solutions by setting the solnpoolreplace parameter to 1.

Then, each solution in the solution pool is represented by a node of a network. The process of identifying neighboring solutions occurs in two stages. In the first stage, for each pair of solutions in the solution pool, A and B, the number of teams assigned to a different time slot is calculated and stored as the “distance”, D(A, B), of the edge between these two solutions. By letting Ti
                     (A) denote the time slot to which team i is assigned in solution A, we define 
                        
                           D
                           
                              (
                              A
                              ,
                              B
                              )
                           
                           =
                           
                              ∑
                              i
                           
                           
                              δ
                              i
                           
                           
                              (
                              A
                              ,
                              B
                              )
                           
                           ,
                        
                     where

                        
                           
                              
                                 
                                    δ
                                    i
                                 
                                 
                                    (
                                    A
                                    ,
                                    B
                                    )
                                 
                                 =
                                 
                                    {
                                    
                                       
                                          
                                             
                                                1
                                                ,
                                             
                                          
                                          
                                             
                                                if
                                                
                                                
                                                   T
                                                   i
                                                
                                                
                                                   (
                                                   A
                                                   )
                                                
                                                ≠
                                                
                                                   T
                                                   i
                                                
                                                
                                                   (
                                                   B
                                                   )
                                                
                                                .
                                             
                                          
                                       
                                       
                                          
                                             
                                                0
                                                ,
                                             
                                          
                                          
                                             
                                                otherwise
                                                .
                                             
                                          
                                       
                                    
                                 
                              
                           
                        
                     
                  

Thus, D(A, B) is the Hamming distance between the strings containing the time slots of all the teams. In the second stage, an edge is created between the nodes representing solutions A and B if D(A, B) ≤ C, where the cut-off value C is the number of teams we are willing to re-assign when moving from one solution to another. The resultant network is called the solution pool network with cut-off C, 
                        
                           
                              G
                              C
                           
                           =
                           
                              (
                              V
                              ,
                              E
                              )
                           
                           ,
                        
                     where V is the set of nodes and E is the set of edges.

To visualize the solution pool network for gaining better insight into the characteristics of the solutions obtained, the solutions that use the same time slots are identified, and this information along with the node and edge lists is input into Gephi (2014) (an open-source software for exploring and manipulating networks, 2014) such that:

                        
                           •
                           The lower the objective function value of the corresponding solution, the larger is the size of the node.

The smaller the distance between two solutions, the larger is the weight of the edge between the nodes of these solutions (depicted by a thicker line).

Solutions that use the same set of time slots have nodes with the same color.

Measuring the robustness of a given solution, A, is a scenario-based calculation in which scenario i corresponds to team i requesting a time slot change. For scenario i, robustness measure Qi
                     (A) is calculated as follows:

                        
                           1.
                           Let 
                                 
                                    
                                       C
                                       i
                                       *
                                    
                                    =
                                    
                                       {
                                       B
                                       ∈
                                       
                                          N
                                          C
                                       
                                       
                                          (
                                          A
                                          )
                                       
                                       ,
                                       
                                       
                                          T
                                          i
                                       
                                       
                                          (
                                          B
                                          )
                                       
                                       ≠
                                       
                                          T
                                          i
                                       
                                       
                                          (
                                          A
                                          )
                                       
                                       }
                                    
                                 
                              .

If 
                                 
                                    
                                       C
                                       i
                                       *
                                    
                                    ≠
                                    ∅
                                    ,
                                 
                              let 
                                 
                                    
                                       B
                                       i
                                       *
                                    
                                    =
                                    
                                       arg min
                                       B
                                    
                                    
                                       {
                                       D
                                       
                                          (
                                          A
                                          ,
                                          B
                                          )
                                       
                                       :
                                       B
                                       ∈
                                       
                                          
                                             C
                                          
                                          *
                                       
                                       }
                                    
                                 
                              . If there is a tie, let 
                                 
                                    B
                                    i
                                    *
                                 
                              be the one with the lowest objective function value. Then, denoting the objective function value of solution 
                                 
                                    B
                                    i
                                    *
                                 
                              by 
                                 
                                    
                                       Z
                                       i
                                       *
                                    
                                    ,
                                 
                              let 
                                 
                                    
                                       Q
                                       i
                                    
                                    =
                                    D
                                    
                                       (
                                       A
                                       ,
                                       
                                          B
                                          i
                                          *
                                       
                                       )
                                    
                                    ×
                                    
                                       (
                                       
                                          Z
                                          i
                                          *
                                       
                                       −
                                       
                                          Z
                                          *
                                       
                                       +
                                       1
                                       )
                                    
                                    ,
                                 
                              so that Qi
                               gives the distance-weighted increase in the objective function value above that of the optimum solution.

If 
                                 
                                    
                                       C
                                       i
                                       *
                                    
                                    =
                                    ∅
                                    ,
                                 
                              let Qi
                               take a large value (a “penalty”). We tested two versions of this penalty value:
                                 
                                    (a)
                                    
                                       
                                          
                                             
                                                M
                                                1
                                             
                                             =
                                             5
                                             ×
                                             C
                                             ×
                                             
                                                (
                                                
                                                   Z
                                                   
                                                      m
                                                      a
                                                      x
                                                   
                                                
                                                −
                                                
                                                   Z
                                                   *
                                                
                                                +
                                                1
                                                )
                                             
                                          
                                       .


                                       
                                          
                                             
                                                M
                                                2
                                             
                                             =
                                             
                                                (
                                                C
                                                +
                                                1
                                                )
                                             
                                             ×
                                             
                                                (
                                                
                                                   Z
                                                   
                                                      m
                                                      a
                                                      x
                                                   
                                                
                                                −
                                                
                                                   Z
                                                   *
                                                
                                                +
                                                1
                                                )
                                             
                                          
                                       .

Note that M
                              1 and M
                              2 are both larger than the maximum value Qi
                              (A) can take when 
                                 
                                    
                                       C
                                       i
                                       *
                                    
                                    ≠
                                    ∅
                                 
                              because 
                                 
                                    D
                                    (
                                    A
                                    ,
                                    
                                       B
                                       i
                                       *
                                    
                                    )
                                    ≤
                                    C
                                 
                              and 
                                 
                                    
                                       (
                                       
                                          Z
                                          i
                                          *
                                       
                                       −
                                       
                                          Z
                                          *
                                       
                                       +
                                       1
                                       )
                                    
                                    ≤
                                    
                                       (
                                       
                                          Z
                                          
                                             m
                                             a
                                             x
                                          
                                       
                                       −
                                       
                                          Z
                                          *
                                       
                                       +
                                       1
                                       )
                                    
                                 
                              . Thus, M
                              2is practically the smallest penalty that can be assigned. As discussed in Section 6, the purpose of testing these two penalty versions is to determine how the key findings change with a significant difference in the penalty used. Note that when 
                                 
                                    
                                       C
                                       i
                                       *
                                    
                                    =
                                    ∅
                                    ,
                                 
                              in practice team i would be the only team scheduled to a particular time slot.

A relevant and important question regarding the measurement of robustness is whether there is a heuristic robustness metric that is strongly correlated with Q(.). This is important because having such a metric would help develop fast search algorithms to generate solutions for the solution pool beyond those given by CPLEX.

To this end, a total of eight metrics (
                        
                           
                              R
                              1
                           
                           …
                           
                              R
                              8
                           
                        
                     ) are defined, so that larger values potentiallyimply more robustness. The eighth one is different from the others in that it compares the neighbors among themselves; thus it serves as a complementary metric to be used with the other metrics. We define these metrics as follows:

                        
                           1.
                           
                              
                                 
                                    
                                       R
                                       1
                                    
                                    
                                       (
                                       A
                                       )
                                    
                                    =
                                    
                                       |
                                       
                                          N
                                          C
                                       
                                       
                                          (
                                          A
                                          )
                                       
                                       |
                                    
                                    =
                                    
                                       d
                                       
                                          V
                                          (
                                          A
                                          )
                                       
                                    
                                 
                              ; degree of node V(A). For a network created with cut-off C, this is the number of neighbors of Awithin a maximum distance of C.


                              
                                 
                                    
                                       R
                                       2
                                    
                                    
                                       (
                                       A
                                       )
                                    
                                    =
                                    
                                       ∑
                                       
                                          B
                                          ∈
                                          
                                             N
                                             C
                                          
                                          
                                             (
                                             A
                                             )
                                          
                                       
                                    
                                    S
                                    
                                       (
                                       B
                                       )
                                    
                                 
                              ; total node size of the neighboring solutions (recall that a larger node size means a smaller objective function value).


                              
                                 
                                    
                                       R
                                       3
                                    
                                    
                                       (
                                       A
                                       )
                                    
                                    =
                                    
                                       ∑
                                       
                                          k
                                          =
                                          1
                                       
                                       C
                                    
                                    
                                       2
                                       
                                          (
                                          C
                                          −
                                          k
                                          )
                                       
                                    
                                    
                                       ∑
                                       
                                          B
                                          ∈
                                          
                                             N
                                             C
                                          
                                          
                                             (
                                             A
                                             )
                                          
                                       
                                    
                                    S
                                    
                                       (
                                       B
                                       )
                                    
                                 
                              ; the weighted version of R
                              2with weights increasing exponentially.


                              
                                 
                                    
                                       R
                                       4
                                    
                                    
                                       (
                                       A
                                       )
                                    
                                    =
                                    
                                       ∑
                                       
                                          k
                                          =
                                          1
                                       
                                       C
                                    
                                    
                                       (
                                       C
                                       −
                                       k
                                       +
                                       1
                                       )
                                    
                                    
                                       ∑
                                       
                                          B
                                          ∈
                                          
                                             N
                                             C
                                          
                                          
                                             (
                                             A
                                             )
                                          
                                       
                                    
                                    S
                                    
                                       (
                                       B
                                       )
                                    
                                 
                              ; the weighted version of R
                              2with weights increasing linearly.


                              
                                 
                                    
                                       R
                                       5
                                    
                                    
                                       (
                                       A
                                       )
                                    
                                    =
                                    
                                       ∑
                                       
                                          B
                                          ∈
                                          
                                             N
                                             C
                                          
                                          
                                             (
                                             A
                                             )
                                          
                                       
                                    
                                    W
                                    
                                       (
                                       A
                                       ,
                                       B
                                       )
                                    
                                 
                              ; weighted degree of the node (recall that the larger the weight, the smaller is the distance between Aand B).


                              
                                 
                                    
                                       R
                                       6
                                    
                                    
                                       (
                                       A
                                       )
                                    
                                    =
                                    
                                       ∑
                                       
                                          B
                                          ∈
                                          
                                             N
                                             C
                                          
                                          
                                             (
                                             A
                                             )
                                          
                                       
                                    
                                    W
                                    
                                       (
                                       A
                                       ,
                                       B
                                       )
                                    
                                    ×
                                    S
                                    
                                       (
                                       B
                                       )
                                    
                                 
                              .


                              
                                 
                                    
                                       R
                                       7
                                    
                                    
                                       (
                                       A
                                       )
                                    
                                    =
                                    
                                       ∑
                                       
                                          B
                                          ∈
                                          
                                             N
                                             C
                                          
                                          
                                             (
                                             A
                                             )
                                          
                                       
                                    
                                    S
                                    
                                       (
                                       B
                                       )
                                    
                                    /
                                    D
                                    
                                       (
                                       A
                                       ,
                                       B
                                       )
                                    
                                 
                              ; node-size weighted version of the closeness centrality measure, harmonic mean distance (e.g. see Newman, 2011, p. 184).


                              R
                              8(A) is defined, for A where d
                              
                                 V(A) ≥ 2, as follows:

                                 
                                    
                                       
                                          
                                             R
                                             8
                                          
                                          
                                             (
                                             A
                                             )
                                          
                                          =
                                          1
                                          −
                                          
                                             
                                                
                                                   1
                                                   2
                                                
                                                
                                                   ∑
                                                   
                                                      B
                                                      ∈
                                                      
                                                         N
                                                         C
                                                      
                                                      
                                                         (
                                                         A
                                                         )
                                                      
                                                   
                                                
                                                
                                                   ∑
                                                   
                                                      D
                                                      :
                                                      D
                                                      ∈
                                                      
                                                         N
                                                         C
                                                      
                                                      
                                                         (
                                                         B
                                                         )
                                                      
                                                      ∩
                                                      
                                                         N
                                                         C
                                                      
                                                      
                                                         (
                                                         A
                                                         )
                                                      
                                                   
                                                
                                                W
                                                
                                                   (
                                                   B
                                                   ,
                                                   D
                                                   )
                                                
                                             
                                             
                                                
                                                   1
                                                   2
                                                
                                                
                                                   d
                                                   
                                                      V
                                                      (
                                                      A
                                                      )
                                                   
                                                
                                                
                                                   (
                                                   
                                                      d
                                                      
                                                         V
                                                         (
                                                         A
                                                         )
                                                      
                                                   
                                                   −
                                                   1
                                                   )
                                                
                                                C
                                             
                                          
                                          .
                                       
                                    
                                 
                              If vertices of all solutions 
                                 
                                    B
                                    ∈
                                    
                                       N
                                       C
                                    
                                    
                                       (
                                       A
                                       )
                                    
                                 
                              form a complete graph with all edges having a weight of C (thus, by definition a distance of 1), this would represent the highest level of similarity among the neighbors of A. Thus, the denominator of this fraction is an upper bound on the numerator. By contrast, if none of these vertices has an edge to another node of solutions in 
                                 
                                    
                                       N
                                       C
                                    
                                    
                                       (
                                       A
                                       )
                                    
                                    ,
                                 
                              the numerator would be by definition 0, implying that they are all significantly different from each other. So, 0 ≤ R
                              8(A) ≤ 1, such that the larger R
                              8(A) is, the more diverse the neighbors of A are. If 
                                 
                                    
                                       d
                                       
                                          V
                                          (
                                          A
                                          )
                                       
                                    
                                    =
                                    1
                                    ,
                                 
                              we let R
                              8(A) ≔ 0.

To illustrate and clarify the modeling and solution approach, we provide an example (see Table 3
                     ). There are 
                        
                           I
                           =
                           14
                        
                     teams, 
                        
                           K
                           =
                           3
                        
                     academic attributes, 
                        
                           L
                           =
                           2
                        
                     business plan types and 
                        
                           F
                           =
                           
                              {
                              5
                              ,
                              6
                              ,
                              11
                              ,
                              12
                              ,
                              17
                              ,
                              18
                              ,
                              23
                              ,
                              24
                              }
                           
                        
                     (
                        
                           T
                           =
                           30
                        
                     ). 
                        
                           
                              n
                              
                                 m
                                 i
                                 n
                              
                           
                           =
                           3
                        
                     and 
                        
                           
                              n
                              
                                 m
                                 a
                                 x
                              
                           
                           =
                           4
                        
                     ; thus we set the number of time slots to be used, b, as 
                        
                           
                              ⌈
                              14
                              /
                              4
                              ⌉
                           
                           =
                           4
                        
                     .


                     Sd
                      equals 2, 2, 2, 2, and 0, for 
                        
                           d
                           =
                           1
                           ,
                           2
                           ,
                           3
                           ,
                           4
                           ,
                        
                     and 5, respectively. Because 
                        
                           b
                           =
                           4
                           ,
                        
                     for 
                        
                           s
                           =
                           1
                           ,
                        
                     initially CPLEX attempts to find a solution for 
                        
                           
                              w
                              1
                           
                           =
                           2
                        
                     but fails to find a feasible solution. Then, 
                        
                           w
                           1
                        
                     is found to be 3; that is, the most narrow time window for which a feasible schedule can be found when the first day is 1 spans days 1, 2, and 3. Therefore, 
                        
                           
                              W
                              1
                           
                           =
                           
                              {
                              5
                              ,
                              6
                              ,
                              11
                              ,
                              12
                              ,
                              17
                              ,
                              18
                              }
                           
                        
                     . The dominance network has only two edges: {(11, 12), (17, 18)}. Thus, the only non-zero values for Πt
                     are 
                        
                           
                              Π
                              12
                           
                           =
                           1
                        
                     and 
                        
                           
                              Π
                              18
                           
                           =
                           1
                        
                     . Because 
                        
                           
                              Π
                              12
                           
                           =
                           
                              Π
                              18
                           
                           <
                           
                              ∑
                              
                                 d
                                 =
                                 1
                              
                              3
                           
                           
                              S
                              d
                           
                           −
                           4
                           =
                           2
                           ,
                        
                     there is no time slot that must be used (i.e. 
                        
                           
                              U
                              s
                           
                           =
                           ∅
                        
                     ). Because the dominance network has only two edges, the two prioritization algorithms for time slots (type 1 and 2) give the same result and, therefore, the heuristic finds the same solution in both cases. Given 
                        
                           L
                           i
                           s
                           t
                           T
                           =
                           (
                           18
                           ,
                           12
                           ,
                           6
                           ,
                           5
                           ,
                           11
                           ,
                           17
                           )
                        
                     and 
                        
                           L
                           i
                           s
                           t
                           G
                           =
                           (
                           8
                           ,
                           9
                           ,
                           11
                           ,
                           4
                           ,
                           5
                           ,
                           10
                           ,
                           12
                           ,
                           1
                           ,
                           2
                           ,
                           7
                           ,
                           13
                           ,
                           3
                           ,
                           6
                           ,
                           14
                           )
                           ,
                        
                     
                     AssignFirstTeams assigns teams 8, 9, 11, and 4 to time slots 18, 6, 12, and 11, respectively (these are shown at the top of Table 4
                     ). In the remainder of the heuristic, only these four time slots are used. In the second phase of the algorithm, the remaining teams are assigned (in this instance, without any need to backtrack) as shown in Table 4. At each step, one team is assigned to the time slot giving the lowest marginal cost (values in parentheses give the primary plan type for the period). The resultant objective function value is 7 (6 for academic diversity and 1 for business plan homogeneity). The final phase is an attempt to improve the solution by performing pairwise interchange of teams, but in this example, no pairwise interchange results in an improvement.

The number of solutions in the solution pool are 57, 31 and 2 for 
                        
                           s
                           =
                           1
                           ,
                           2
                        
                     and 3, respectively. Table 5
                      gives the optimal solutions for each start day, s. For each s, CPLEX reports the optimal solution first and then the other solutions in the solution pool. Our script stores these solutions sequentially for each s, and the solutions are numbered (indexed) starting with 0. Therefore, solutions for 
                        
                           s
                           =
                           1
                        
                     are indexed 0, …, 56, where solution 0 is the optimal one. Then, solutions for 
                        
                           s
                           =
                           2
                        
                     are indexed 57, …, 87, where solution 57 is the optimal one. Finally, the solutions for 
                        
                           s
                           =
                           3
                        
                     are indexed 88 and 89, where solution 88 is the optimal one.


                     Fig. 3
                      illustrates the solution pool network for the example. Without our robust solution methodology, we would have picked either solution 0 or 57 as the optimal solution because both yield an objective function value of 6. Fig. 4
                      depicts these two solutions on the scatter plot of objective function value Z versus robustness measure Q. The two solutions shown with the black, diamond-shaped marker are non-dominated solutions; the one with 
                        
                           Z
                           =
                           6
                        
                     is solution 18 and the one with 
                        
                           Z
                           =
                           7
                        
                     is solution 11. Fig. 3 clearly shows why solution 18 is a more robust solution than solution 0. The former has a degree of 11, and the latter has a degree of just 4. Furthermore, the node of solution 18 has more thick edges (i.e. edges with larger weight, corresponding to smaller distances). The other optimal solution, solution 57, is clearly more robust than solution 0 (it appears in the cluster on the upper-left-hand corner of the network), but it is not easy to understand why solution 18 is more robust than solution 57 just by reviewing the network.

For solution 18, the scenario analysis for calculating the robustness measure Q is as follows. First, 
                        
                           
                              N
                              4
                           
                           
                              (
                              18
                              )
                           
                        
                     is determined as {7, 16, 17, 20, 23, 25, 32, 33, 34, 52, 87}. Then, the sets 
                        
                           C
                           i
                           *
                        
                     for all i are determined as shown in Table 6
                     , which also summarizes the rest of the calculations. These calculations yield a robustness measure of 
                        
                           Q
                           =
                           
                              ∑
                              i
                           
                           
                              Q
                              i
                           
                           =
                           339
                        
                     (note that for this instance 
                        
                           
                              M
                              1
                           
                           =
                           5
                           ×
                           4
                           ×
                           
                              (
                              10
                              −
                              6
                              +
                              1
                              )
                           
                           =
                           100
                           ,
                        
                     because the highest objective function value in the solution pool is 10).


                     Table 7
                      gives the metrics for solutions 0, 11, 18, and 57, in which rows are sorted in increasing Q (thus decreasing robustness). We observe that solution 11 is more robust than solution 18, despite having a significantly smaller R
                     1 value. In addition, 
                        
                           
                              R
                              2
                           
                           ,
                           …
                           ,
                           
                              R
                              7
                           
                           ,
                        
                     that is, all the metrics that use node size, edge weight/distance, or both have larger values for solution 18 than solution 11. The only explanation for why solution 11 could be more robust than solution 18 is R
                     8: solution 11 has more diverse neighbors than solution 18. As discussed in Section 6, analysis on the actual instances show that using R
                     8 with one other metric (R
                     1 when M
                     1 is used as the penalty and R
                     2 when M
                     2 is the penalty) results in a significantly improved prediction of robustness measure Q.

@&#RESULTS@&#

We collected seven semesters’ worth of actual data to test the performance of our approach. Table 8
                     
                      summarizes the key statistics on these instances.

We solved the MIP model within OPL Studio IDE (using OPL Script and CPLEX MIP solver). We set the solution pool intensity parameter (solnpoolintensity) equal to 4 (rather than the default value of 0) to have more solutions in the solution pool. We set the solution pool relative gap parameter (solnpoolgap) to 0.50 (note that because each instance is solved for multiple start days, the difference between the worst and the best solutions could be larger than 50 percent as shown in Table 11). We set solnpoolreplace equal to 1, so that the pool keeps the best solutions, and finally set solnpoolcapacity to 1000.


                     Table 9 gives the key statistics on the performance of the initial heuristic and CPLEX. As the table shows, there were two or three feasible start days (s) for each instance, yielding a diverse set of solutions within a reasonable CPU time. The initial upper-bound heuristic did not result in tight bounds, but this is preferable because the goal is to obtain a diverse set of solutions for which the analyst can trade off objective function value (Z) with robustness measure (Q). The main purpose of giving an initial upper bound was to have reasonable CPU times; the results show that this was achieved without sacrificing solution diversity.

Before developing the approach presented here the instructor of the course was using a simple Microsoft Excel-based decision support tool to schedule the teams (see Fig. 5 for a screen shot). This tool used Excel functions/tools such as OFFSET, INDEX, MATCH, array functions, drop down list menu using data validation, and conditional formatting to help the scheduler assign teams to time slots one by one, manually. The tool suggested which teams to schedule next (by a simple ranking rule giving priority to teams with the least number of feasible time slots in the time window), provided summary information on teams and time slots, determined the feasibility of each assignment, and calculated the objective function value. Due to the complexity of the problem, it takes the scheduler on the average one minute to schedule a team (occasionally backtracking is required). Since a typical problem has around 40 teams, the scheduler would typically stop after finding one schedule. During the manual scheduling process in addition to finding a feasible solution, the scheduler mainly focuses on improving the business plan type similarity objective rather than the academic diversity objective, since that is easier to deal with.
                     
                      The results in Tables 9 and 10 show that where the upper bound heuristic used to determine the initial upper bound for MIP failed (6 times) the expert scheduler was able to find a solution. On the other hand, the deviation in the objective function value of the solution found by the expert scheduler, ZES
                     , from that of the optimal MIP solution, Z
                     *, ranged from 11 percent to 201 percent with an average of 71 percent. The “Min. Distance” column of the table shows that for every semester and start day (s) the minimum distance to the solutions in the solution pool from the solution found by the expert scheduler is larger than the cut-off (
                        
                           C
                           =
                           4
                        
                     ) used in creating the solution pool network. In other words, the expert scheduler found solutions that are significantly different from those of CPLEX.

Characteristics of the networks most relevant for finding robust solutions are the number of nodes (solutions), the range of objective function values in these solutions, and how well these solutions are connected by edges. The summary statistics in Table 11 provide some insight into these characteristics. First, these statistics show that there is considerable difference among the networks. Second, they all have a high proportion of nodes with degree 0 (which is not useful for the purposes of robustness). Third, all networks have solutions with a significant difference in best and worst objective function values (ranging between 40 percent and 133 percent). Because of space limitations, Figs. 6
                      and 7 depict only the network diagrams of Semesters 2 and 7 for 
                        
                           C
                           =
                           4
                           ,
                        
                     respectively (nodes with degree of 0 are not shown in these networks because they are not relevant for robustness purposes). We selected these two networks because they are representative of the variety in all the networks.

The network for Semester 2 is an example of a relatively good network, because there are several large clusters within which a centrally located node would probably correspond to a robust solution. Conversely, the network for Semester 7 is not a good network simply because it has few nodes and no large clusters. As discussed in Section 7, this highlights an important future research topic – that is, developing algorithms that expand these networks so that more robust solutions can be identified.


                     Figs. 8
                     
                      and 9 give the Pareto frontiers for these two semesters’ networks, in which we calculated robustness measure Q using M
                     1. Tables 12
                      and13
                      present the results obtained by using the choice of M
                     1 versus M
                     2 as the penalty to show how much each affects the Pareto frontier for a network (a solution that appears on the efficiency frontier for both M
                     1 and M
                     2 appears in bold). These results show that the solutions that appear on the Pareto frontier are not highly sensitive to the penalty value. Specifically, both for 
                        
                           C
                           =
                           4
                        
                     and 
                        
                           C
                           =
                           8
                        
                     and for each instance, all the solutions on the Pareto frontier for M
                     2 are also on the Pareto frontier for M
                     1.

The purpose of the final analysis was to determine the relationship between the heuristic robustness metrics and the robustness measure Q. For each semester’s data, we calculated the Spearman rank correlation between the Q values and the values of each metric. We present the results in Tables 14–17 Because smaller Q values represent more robust solutions and R
                     1 through R
                     7 were defined so that larger values indicate possibly more robust solutions, these metrics all have negative rank correlations with Q. Conversely, because R
                     8 was defined as a complementary metric, we used it to define a new composite metric that also used the best-performing metric among the first seven. The last two columns of these tables show these composite metrics’ performances.


                     Tables 14 and 15 show that when M
                     1 is used for the penalty, for both 
                        
                           C
                           =
                           4
                        
                     and 
                        
                           C
                           =
                           8
                           ,
                        
                     among the first seven metrics, R
                     1 is the metric that generally has the highest rank correlation with Q across the instances. This makes sense intuitively: when the penalty is large, in the case of a failure to find a solution for a scenario, to have a low Q value, a solution needs to be connected with as many other solutions as possible, independent of the objective function value of these other solutions. When 
                        
                           C
                           =
                           8
                           ,
                        
                     we would expect the performance of the metrics that use edge weights (or equivalently distances) to improve because when 
                        
                           C
                           =
                           4
                        
                     there is little difference between the distances of neighboring solutions, so what matters is the number of neighbors (i.e. R
                     1). When 
                        
                           C
                           =
                           8
                           ,
                        
                     however, the distances to them become important, too. The results show that there is some improvement in other metrics but not enough to change the status of R
                     1 as the best performer.

Before calculating the rank correlation for the composite metric 
                        
                           
                              R
                              1
                           
                           +
                           m
                           
                              R
                              8
                           
                        
                     (where m is a constant), we ran the linear regression model of 
                        
                           Q
                           =
                           
                              β
                              0
                           
                           +
                           
                              β
                              1
                           
                           
                              R
                              1
                           
                           +
                           
                              β
                              2
                           
                           
                              R
                              8
                           
                        
                     for each semester and compared it with the model 
                        
                           Q
                           =
                           
                              β
                              0
                           
                           +
                           
                              β
                              1
                           
                           
                              R
                              1
                           
                        
                     . For all the semesters, adjusted-R
                     2improved with the introduction of R
                     8, and the p-Values for the the coefficient β
                     2 for all semesters for both 
                        
                           C
                           =
                           4
                        
                     and 
                        
                           C
                           =
                           8
                        
                     were practically 0, except for Semester 7, in which 
                        
                           C
                           =
                           4
                        
                     . With the finding that R
                     8provides a statistically significant contribution to the prediction of robustness measure Q, and using the estimated coefficients’ ratio (
                        
                           
                              
                                 β
                                 ^
                              
                              2
                           
                           /
                           
                              
                                 β
                                 ^
                              
                              1
                           
                        
                     ) as a guideline, we decided to experiment with 
                        
                           m
                           =
                           1
                        
                     and 
                        
                           m
                           =
                           2
                        
                     . As the results in Tables 14and 15 show, 
                        
                           
                              R
                              1
                           
                           +
                           2
                           
                              R
                              8
                           
                        
                     was clearly the best-performing metric of all.
                  

However, when we use M
                     2 as the penalty, the results in Tables 16 and17 show that R
                     2 becomes a better performer than R
                     1 for both 
                        
                           C
                           =
                           4
                        
                     and 
                        
                           C
                           =
                           8
                        
                     . Because M
                     2is significantly smaller than M
                     1, and only slightly larger than the maximum value that Qi
                      can take in the scenario analysis, just being connected with other solutions (as measured by R
                     1) ceases to be enough to have a small Q value; the objective function values of these neighbors (as measured by R
                     2) becomes important as well. By contrast, when 
                        
                           C
                           =
                           8
                           ,
                        
                     the results in Table 17 show that the performance of R
                     4 through R
                     7 improves, because the distance of the neighbors becomes important as well as the penalty increases. However, despite this improvement, R
                     2 clearly remains the best performer.
                     
                  

Thus, we ran the regression analysis with R
                     2 and R
                     8 by first using the model 
                        
                           Q
                           =
                           
                              β
                              0
                           
                           +
                           
                              β
                              1
                           
                           
                              R
                              2
                           
                        
                     and then 
                        
                           Q
                           =
                           
                              β
                              0
                           
                           +
                           
                              β
                              1
                           
                           
                              R
                              2
                           
                           +
                           
                              β
                              2
                           
                           
                              R
                              8
                           
                        
                     . For all of the semesters, adjusted-R
                     2improved with the introduction of R
                     8 and the p-Values for the coefficient β
                     2 for all semesters for both 
                        
                           C
                           =
                           4
                        
                     and 
                        
                           C
                           =
                           8
                        
                     were significantly less than 0.01. With the finding that R
                     8 provides a statistically significant contribution to the prediction of robustness measure Q, and using the estimated coefficients’ ratio (
                        
                           
                              
                                 β
                                 ^
                              
                              2
                           
                           /
                           
                              
                                 β
                                 ^
                              
                              1
                           
                        
                     ) as a guideline, we decided to experiment with 
                        
                           m
                           =
                           1
                        
                     and 
                        
                           m
                           =
                           10
                        
                     . As the results in Tables 14and15 show, 
                        
                           
                              R
                              1
                           
                           +
                           10
                           
                              R
                              8
                           
                        
                     was the best-performing metric.

@&#CONCLUSIONS@&#

In this research, we address a practical and novel timetabling problem, for which we developed an MIP formulation. We designed the model to achieve three goals: (i) to ensure that the students who listen to one anothers’ presentations worked on similar business plans, to facilitate exchange of ideas (“business plan homogeneity”); (ii) to ensure that teams of judges listen to presentations of teams with diverse academic characteristics (“academic diversity”); and (iii) to have as compact a timetable as possible.

A key concern was finding robust solution alternatives rather than a single optimal solution. To this end, we added several constraints to the MIP model that prioritize the use of some time slots (by time slot dominance network) and forbid the use of other time slots (those feasible for at most one team for all plan types). We also introduced additional constraints to avoid degenerate solutions (by tiebreaker constraints for primary plan type of each time slot). With these constraints, CPLEX was able to find a reasonably sized solution pool within acceptable CPU time for seven real instances.

Given the solution pool, we developed a network-based methodology to evaluate the robustness of these solutions. Visual depiction of the network, which we obtained by mapping Hamming distances between solutions to edge weights, mapping objective function values to node sizes, and assigning the same color to the nodes for which the corresponding solutions use the same set of time slots, resulted in a network that provides both quick and good insight into the quality of the solution pool (the open-source social network analysis tool Gephi clustered the nodes as well).
                     
                  

To place the solutions on a Pareto frontier (so that the analyst can trade off objective function against robustness), we developed a scenario-based measurement of robustness. We adopted this measure Q with the assumption that the need to update the timetable would be triggered by the necessity of moving one team from its initially assigned time slot.

One relevant question was whether we could find a heuristic robustness metric that was strongly correlated with the robustness measure Q. We tested a set of metrics by changing the distance cut-off parameter C used in creating the network (C was set to 4 and 8) and the penalty value used in the calculation of Q (two values were tested, M
                     1 and M
                     2), to determine how sensitive these metrics’ performances were to these parameters. The results showed that when M
                     1 was used, R
                     1 (the degree of the node) was the best-performing metric (with average rank correlation of 0.825). By contrast, when M
                     2 was used, R
                     2 (the sum adjacent nodes’ node sizes) was the best-performing metric (with average rank correlation of 0.855). Although these rank correlations are quite good, the fact that these two metrics measure the relationship between a solution and its neighbors without attempting to identify characteristics associated with the rest of the network structure, led us to use a complementary measure (denoted as R
                     8). R
                     8 measured the similarity among the neighboring solutions as a percentage of the theoretical maximum value. Creating a simple additive metric that uses R
                     8 led to consistently improved rank correlations. Specifically, 
                        
                           
                              R
                              1
                           
                           +
                           2
                           
                              R
                              8
                           
                           ,
                        
                     when M
                     1 was used, and 
                        
                           
                              R
                              2
                           
                           +
                           10
                           
                              R
                              8
                           
                           ,
                        
                     when M
                     2 was used, were the best metrics with average rank correlations of 0.86 and 0.89, respectively. The finding that R
                     8 improves the prediction of robustness is important since it is the only metric that measures the relationship among the neighbors of the given solution, and thus cannot be calculated without creating the solution network. On the other hand, it is important to note here that the question still remains whether other measures exist that might be even better than R
                     8.

Future research could aim to make solution network creation an integral part of the solution algorithm, whether it is an evolutionary algorithm or a hybrid MIP/evolutionary algorithm as Rothberg (2007) discusses. In this effort, the metrics identified here could have a critical role, because they could be used to direct the search to more fruitful solutions.

It would also be useful for research to test the use of this methodology with other timetabling and scheduling problems. The ability to identify a Pareto frontier by using CPLEX (without the need to develop a custom solution engine) should make this methodology quite attractive for practitioners.

@&#REFERENCES@&#

