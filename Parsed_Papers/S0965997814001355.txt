@&#MAIN-TITLE@&#System identification and control of robot manipulator based on fuzzy adaptive differential evolution algorithm

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           We applied FADE to estimate the barycentric parameters of the CRS A456 robot manipulator.


                        
                        
                           
                           We compare the results of FADE in terms of MSE and STD over other state-of-the-art methods.


                        
                        
                           
                           The estimated torque using FADE is more accurate and nearer to the measured torque.


                        
                        
                           
                           FADE could overcome the problem of noisy data.


                        
                        
                           
                           FADE has a fast convergence rate than the standard DE due to fuzzy system.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Robot manipulator

Adaptive differential evolution

Fuzzy logic

Parameter estimation

FADE algorithm

Parameter control

@&#ABSTRACT@&#


               
               
                  A requirement for new robotic manipulators is the ability to detect and manipulate objects in their environments. Robotic manipulators are highly nonlinear systems, and an accurate mathematical model is difficult to obtain using conventional techniques. Therefore, an efficient technique is required to deal with these types of complex and dynamic systems. Differential Evolution (DE) algorithm is a very powerful optimization technique and has become popular in many fields. Arguably, it is now one of the most predominant stochastic algorithms for real-parameter optimization. However, DE is very sensitive to its control parameters of the mutation operation (F) and crossover operation (CR) in such a way that their fine tuning greatly affect DE performance. Fuzzy Adaptive DE (FADE) algorithm is one of the well known adaptive DE variants that show superiority and reliability in solving different types of optimization problems. The objective of this article is to develop a new dynamic parameter identification framework to estimate the barycentric parameters of the CRS A456 robot manipulator based on FADE. The simulation results presented in this paper show the effectiveness of the FADE method over other conventional techniques, transcending the limits of the existing state-of-the-art algorithms in solving the problem of robot.
               
            

@&#INTRODUCTION@&#

There are many industrial applications where the robot manipulator is required to carry out precise task with high accuracy and repeatability. Recently, the application of robotic technology in clinical medicine has been a very active research area. For instance, in surgical operations the robot manipulator serves as an assistant to the doctor or as an extension of the doctor capabilities [1,2]. These kinds of advanced robot applications require an accurate model of the robotic system, which in turn, requires sufficiently accurate knowledge of the parameters of robot dynamics to be applied in advanced control system design, preoperative planning, process supervision, and simulation and training.

Dynamic models of robot arms used in model-based control schemes are designed in terms of various inertial and friction parameters that must be either measured directly or determined experimentally. However, direct measurements of such characteristics are rather impractical or even impossible in many cases. Inertial parameters of robot links cannot be measured without dismantling the robot arm, while highly nonlinear inherent phenomena at robot joints cannot be directly quantified. Therefore, models describing nonlinear effects such as friction should be addressed in conjunction with methods of determining parameters of the dynamic model of the arm based on experiments, in order to fully identify the dynamic model of the robot arm [3].

There are many traditional methods that have been used for dealing with dynamic robot parameter identification including Kalman filter [4] and least square method [5,6]. However, some model parameters such as link mass and link lengths cannot be easily measured using these methods especially with the effect of noise factor, or in other words their measurements relatively difficult [7]. Moreover, these traditional techniques are relatively effective for a class of specific issues. For example, the structural model is reliable but the data has limited accuracy. Furthermore, they depend on unrealistic assumptions that models must be unimodal, continuous and derivable. These methods sometimes converge slowly, and sometimes at local optimum, or even not at all.

Recently, there have been intelligent proposed methods for estimation based on the use of universal approximations such as fuzzy logic and neural network methodologies. These methods seem to be very attractive because in the ideal case they allow the modeling of the dynamic effects even ‘bad’-modeled, for example, friction. In recent years, Evolutionary algorithms such as Genetic Algorithm (GA), Differential Evolution (DE) and Particle Swarm Optimization (PSO) have been studied extensively. They have been used to improve the dexterity of robot manipulators in many fields such as control, parameter identification, robot design and planning [8–10]. They have been known to be better suited for noisy, discontinuous functions because they require no knowledge or gradient information about the response surface. This ability of Evolutionary algorithms has encouraged researchers to use these methods in order to moderate the difficulties of noise and nonlinearity that often arise in dynamic models. GAs is better suited for noisy, discontinuous functions because there is no requirement for a derivative in the fitness function. Moreover, GAs accumulate information about the system during the search process, which makes them more desirable than the traditional numerical methods [11] through the use of real-coded GA to estimate friction and torque sensor model parameters. The simulation approach demonstrates the effectiveness of the GA. By identifying the parameters, the position tracking error and the velocity tracking of the joint is enhanced. The performance of GA has been also analyzed and evaluated in optimizing the precision of kinematic parameters of the robot manipulator by developing a forward calibration algorithm which is based on GAs. The main problem for this approach is to find a good mathematical correction function and in [12] a suggestion has been made to enhance the accuracy of the robot manipulator by using some new techniques such as ANN and Fuzzy Logic technique.

Differential Evolution (DE) Algorithm is a new evolutionary approach proposed by Storn and Price in 1996 [13,14] to minimize nonlinear and non-differentiable continuous space functions. Price and Storn presented this algorithm to optimize a variety of problems. Similar to GA, it has been applied to various fields successfully. So far, there has been no attempt to optimize the design parameters of manipulator by which performance variations will be minimal. In [15] a modification in differential evolution optimization technique is proposed to incorporate the effect of noise in the optimization process and obtain the optimal design of manipulator, which is insensitive to noise. In this optimization process, the kinematic and dynamic models of the manipulators are used. The results indicate that the DE converges quickly with fewer generations and function evaluations than GA. Hence, fast performance of DE indicates that this approach can be a viable optimization technique. However, the performance of DE is still sensitive to its control parameters such as mutation factor (F) and crossover rate (CR).

Recently, the development of adaptive DE has shown more reliable performance than DE with manual settings [16–18]. Fuzzy Adaptive Differential Evolution algorithm (FADE) is one of the well-known adaptive DE variants. It is implemented by applying a mechanism in which the crossover and the mutation control parameters (F and CR) are both adaptive using fuzzy logic-based controllers; the input signal for the fuzzy system has been calculated from the population mean square diversity. In this algorithm, Fuzzy system plays a key role in updating the control parameters of DE as well as increasing the convergence rate.

In this paper, the application of FADE algorithm is proposed to estimate the barycentric parameters of the CRS A456 robot manipulator. This algorithm is used to off-line estimate the optimal parameters of the inverse dynamic model of the CRS A465 robot arm, which are expected to be insensitive to noise.

This paper is organized as follow. The detailed description of the CRS A465 robot arm and its barycentric parameters are presented in Section 2. The complete steps and structure of FADE algorithm is described in Section 3. Results and discussion of applying FADE algorithm as an estimator of the CRS A465 robot arm barycentric parameters is presented in Section 4. Section 5 concludes the paper.

The CRS A465 arm considered in this work is used as a slave robot in a research cell for orthopedic robot-assisted surgery (see Fig. 1
                     ).

In this application, the end effector of the arm carries the surgical tool – the “drilling/machining tool”. Due to the symmetry of the drilling tool, only five degrees of freedom is required. Therefore, only the first five joints of the arm are considered to be the subject for the modeling task in this work.

The equation of motion for the robot is developed using the L–E formulation. The L–E is non-recursive method that allows the development of the robot model using a set of equations derived from the energy model [19]. Based on this formulation the torque acting on any joint axis is:
                        
                           (1)
                           
                              
                                 
                                    τ
                                 
                                 
                                    i
                                 
                              
                              =
                              
                                 
                                    
                                       ∑
                                    
                                    
                                       j
                                       =
                                       1
                                    
                                    
                                       N
                                    
                                 
                              
                              
                                 
                                    D
                                 
                                 
                                    ij
                                 
                              
                              (
                              q
                              ,
                              χ
                              )
                              
                                 
                                    q
                                 
                                 
                                    ¨
                                 
                              
                              +
                              
                                 
                                    
                                       ∑
                                    
                                    
                                       j
                                       =
                                       1
                                    
                                    
                                       N
                                    
                                 
                              
                              
                                 
                                    
                                       ∑
                                    
                                    
                                       k
                                       =
                                       1
                                    
                                    
                                       N
                                    
                                 
                              
                              
                                 
                                    H
                                 
                                 
                                    ijk
                                 
                              
                              (
                              q
                              ,
                              χ
                              )
                              
                                 
                                    
                                       
                                          q
                                       
                                       
                                          j
                                       
                                    
                                 
                                 
                                    ̇
                                 
                              
                              
                                 
                                    
                                       
                                          q
                                       
                                       
                                          k
                                       
                                    
                                 
                                 
                                    ̇
                                 
                              
                              +
                              
                                 
                                    G
                                 
                                 
                                    i
                                 
                              
                              (
                              q
                              ,
                              χ
                              )
                              +
                              
                                 
                                    τ
                                 
                                 
                                    fi
                                 
                              
                           
                        
                     where τi
                      is the torque acting on joint i, i
                     =1,2…N, N is the number of degrees of freedom, 
                        
                           q
                           ,
                           
                              
                                 q
                              
                              
                                 ̇
                              
                           
                           ,
                           
                              
                                 q
                              
                              
                                 ¨
                              
                           
                        
                      are the position, velocity and acceleration of robot joints, respectively, χ is the model parameters, Dij
                      is the effective and coupling inertia, Hijk
                      is the centripetal and Coriolis effect, Gi
                      is the Gravity loading, and τfi
                      is the joint friction.

The details of the coefficients Dij
                      and Hijk
                      is given in [19] through examination of Eq. (1) shows that the equation of motion is linear in the robot physical parameters, that is the mass, center of gravity locations moments and products of inertia of each link see Fig. 2
                     .

The terms of the equation of motion given in Eq. (1) are linear in the model parameters χ that are the mass, center of gravity locations moments and products of inertia of each link. Therefore it can be written in:
                        
                           (2)
                           
                              τ
                              =
                              Φ
                              
                                 
                                    
                                       q
                                       ,
                                       
                                          
                                             q
                                          
                                          
                                             ̇
                                          
                                       
                                       ,
                                       
                                          
                                             q
                                          
                                          
                                             ¨
                                          
                                       
                                    
                                 
                              
                              χ
                           
                        
                     where 
                        τ
                      is the torque vector, 
                        
                           Φ
                           (
                           q
                           ,
                           
                              
                                 q
                              
                              
                                 ̇
                              
                           
                           ,
                           
                              
                                 q
                              
                              
                                 ¨
                              
                           
                           )
                        
                      represents an (N
                     ×
                     R) observation matrix, and the R- length vector χ, contains the effective inertial parameters of the manipulator grouped in the barycentric or base parameters. The identification “observation” matrix 
                        
                           Φ
                           (
                           q
                           ,
                           
                              
                                 q
                              
                              
                                 ̇
                              
                           
                           ,
                           
                              
                                 q
                              
                              
                                 ¨
                              
                           
                           )
                        
                      depends on the joint angles, velocities, and accelerations. The barycentric parameters of a link are combinations of its inertial parameters and its descendants in the kinematic chain [21]. The categorization and grouping of the barycentric parameters is done symbolically or by applying a set of rules. Normally, special computer programs are developed for automatic generation of the symbolic model and the associated barycentric parameters. For the CRS A465 the set of the barycentric parameters χ are given [20].

In this study, in order to make a clear comparison among the estimation methods, the problem is simplified to consider only a single joint arm of the CRS A465 to estimate its parameters. The CRS 465 single joint arm has four parameters ai
                     , i
                     =1,…, 4 to be identified; they are the inertia, the viscous friction coefficient, the positive side Coulomb friction, and the negative side Coulomb friction, respectively. The system equation becomes:
                        
                           (3)
                           
                              τ
                              =
                              a
                              χ
                           
                        
                     where τ is the torque, and χ is the barycentric parameters that have been reduced to four parameters, they are the angular acceleration x
                     1, the angular velocity x
                     2, the positive sign of the velocity x
                     3 (=1 if x
                     2 is positive, 0 otherwise) and the negative sign of the velocity x
                     4 (=1 if x
                     2 is negative, 0 otherwise).

In this algorithm [16], a fuzzy logic control (FLC) has been utilized for controlling the mutation factor F and the crossover rate CR of DE, whereby a fuzzy knowledge-based system is used to update the control parameters on-line, in a dynamic adaptive manner to the inconsistent situation. This algorithm had first been proposed to solve two major problems in DE: premature convergence and stagnation. These problems often arise when using DE or any other optimization method, because the control parameter values of these methods are sometimes not initially well tuned for the problem in hand and having no knowledge about the population’s information. The general steps of FADE are as follows:

The initial population is fed with candidate solutions using the standard equation:
                           
                              (4)
                              
                                 
                                    
                                       x
                                    
                                    
                                       i
                                       ,
                                       j
                                    
                                    
                                       t
                                       =
                                       0
                                    
                                 
                                 =
                                 
                                    
                                       X
                                    
                                    
                                       min
                                       ,
                                       j
                                    
                                 
                                 +
                                 
                                    
                                       α
                                    
                                    
                                       i
                                       ,
                                       j
                                    
                                 
                                 
                                    
                                       
                                          
                                             
                                                X
                                             
                                             
                                                max
                                                ,
                                                j
                                             
                                          
                                          -
                                          
                                             
                                                X
                                             
                                             
                                                min
                                                ,
                                                j
                                             
                                          
                                       
                                    
                                 
                              
                           
                        where Xmin
                         and Xmax
                         are the lower and upper bound of the parameter values which are specified to define the domain from which the values, 
                           
                              
                                 
                                    x
                                 
                                 
                                    i
                                    ,
                                    j
                                 
                                 
                                    t
                                 
                              
                              ;
                              j
                              ∈
                              
                                 
                                    
                                       1
                                       ,
                                       …
                                       ,
                                       D
                                    
                                 
                              
                           
                         of each Np vector in this initial population are chosen. αi
                        
                        ,
                        
                           j
                         is a random number generator that returns a uniformly distributed random number within the range [0,1).

The standard DE/rand/1 mechanism has been used to produce the mutant vector 
                           
                              
                                 
                                    V
                                 
                                 
                                    i
                                 
                              
                              
                                 
                                    
                                       t
                                    
                                 
                              
                              =
                              
                                 
                                    
                                       
                                          
                                             v
                                          
                                          
                                             i
                                             ,
                                             1
                                          
                                          
                                             t
                                          
                                       
                                       ,
                                       
                                          
                                             v
                                          
                                          
                                             i
                                             ,
                                             2
                                          
                                          
                                             t
                                          
                                       
                                       ,
                                       …
                                       ,
                                       
                                          
                                             v
                                          
                                          
                                             i
                                             ,
                                             D
                                          
                                          
                                             t
                                          
                                       
                                    
                                 
                              
                           
                        . This operation is applied by differentiating multiple randomly selected members, r
                        1 and 
                           
                              
                                 
                                    r
                                 
                                 
                                    2
                                 
                              
                              ∈
                              
                                 
                                    
                                       1
                                       ,
                                       2
                                       ,
                                       …
                                       ,
                                       Np
                                    
                                 
                              
                           
                        , of the current population. These indices should be mutually different and also different from the current index i. A parameter called scaling factor, F is then multiplied by the difference value 
                           
                              (
                              
                                 
                                    x
                                 
                                 
                                    
                                       
                                          r
                                       
                                       
                                          1
                                       
                                    
                                 
                                 
                                    t
                                 
                              
                              -
                              
                                 
                                    x
                                 
                                 
                                    
                                       
                                          r
                                       
                                       
                                          2
                                       
                                    
                                 
                                 
                                    t
                                 
                              
                              )
                           
                         to control the amplification of the differential variation. The standard mutation equation is as follows:
                           
                              (5)
                              
                                 
                                    
                                       v
                                    
                                    
                                       i
                                    
                                    
                                       t
                                       +
                                       1
                                    
                                 
                                 =
                                 
                                    
                                       x
                                    
                                    
                                       
                                          
                                             r
                                          
                                          
                                             1
                                          
                                       
                                    
                                    
                                       t
                                    
                                 
                                 +
                                 F
                                 ·
                                 (
                                 
                                    
                                       x
                                    
                                    
                                       
                                          
                                             r
                                          
                                          
                                             2
                                          
                                       
                                    
                                    
                                       t
                                    
                                 
                                 -
                                 
                                    
                                       x
                                    
                                    
                                       
                                          
                                             r
                                          
                                          
                                             3
                                          
                                       
                                    
                                    
                                       t
                                    
                                 
                                 )
                                 ,
                              
                           
                        
                        
                           
                              
                                 1
                                 ≤
                                 i
                                 
                                 ≠
                                 
                                 
                                    
                                       r
                                    
                                    
                                       1
                                    
                                 
                                 
                                 ≠
                                 
                                 
                                    
                                       r
                                    
                                    
                                       2
                                    
                                 
                                 
                                 ≠
                                 
                                 
                                    
                                       r
                                    
                                    
                                       3
                                    
                                 
                                 ≤
                                 Np
                              
                           
                        
                     

The perturbation operation known as the binomial crossover (bin) comes into play, as illustrated in Eq. (3), to deliver the so-called trial vector 
                           
                              
                                 
                                    U
                                 
                                 
                                    i
                                 
                              
                              
                                 
                                    
                                       t
                                    
                                 
                              
                              =
                              
                                 
                                    
                                       
                                          
                                             u
                                          
                                          
                                             i
                                             ,
                                             1
                                          
                                          
                                             t
                                          
                                       
                                       ,
                                       
                                          
                                             u
                                          
                                          
                                             i
                                             ,
                                             2
                                          
                                          
                                             t
                                          
                                       
                                       ,
                                       …
                                       ,
                                       
                                          
                                             u
                                          
                                          
                                             i
                                             ,
                                             D
                                          
                                          
                                             t
                                          
                                       
                                    
                                 
                              
                           
                        . In this interpretation a user-specified real parameter value known as crossover probability or crossover rate, CR is used to control the mixing process. Then, a component from the donor vector 
                           
                              
                                 
                                    v
                                 
                                 
                                    i
                                    ,
                                    j
                                 
                                 
                                    t
                                 
                              
                           
                         is transferred with probability CR to the offspring 
                           
                              
                                 
                                    u
                                 
                                 
                                    i
                                    ,
                                    j
                                 
                                 
                                    t
                                 
                              
                           
                        , and with probability 1−
                        CR from the target vector 
                           
                              
                                 
                                    x
                                 
                                 
                                    i
                                    ,
                                    j
                                 
                                 
                                    t
                                 
                              
                           
                        .
                           
                              (6)
                              
                                 DE
                                 /
                                 x
                                 /
                                 y
                                 /
                                 bin
                                 
                                 
                                    
                                       u
                                    
                                    
                                       i
                                       ,
                                       j
                                    
                                    
                                       t
                                    
                                 
                                 =
                                 
                                    
                                       
                                          
                                             
                                                
                                                   
                                                      
                                                         v
                                                      
                                                      
                                                         i
                                                         ,
                                                         j
                                                      
                                                      
                                                         t
                                                      
                                                   
                                                
                                                
                                                   (
                                                   
                                                      
                                                         β
                                                      
                                                      
                                                         i
                                                         ,
                                                         j
                                                      
                                                   
                                                   ≤
                                                   CR
                                                   )
                                                   
                                                   or
                                                   
                                                   (
                                                   j
                                                   =
                                                   
                                                      
                                                         j
                                                      
                                                      
                                                         rand
                                                      
                                                   
                                                   )
                                                
                                             
                                             
                                                
                                                   
                                                      
                                                         x
                                                      
                                                      
                                                         i
                                                         ,
                                                         j
                                                      
                                                      
                                                         t
                                                      
                                                   
                                                
                                                
                                                   otherwise
                                                   
                                                   j
                                                   =
                                                   1
                                                   ,
                                                   2
                                                   ,
                                                   …
                                                   ,
                                                   D
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           
                        where βi
                        
                        ,
                        
                           j
                         is a real number uniformly generated in the range [0,1]. jrand
                         is a randomly generated integer in the range [1, D] and ensures that the trial vector Ui
                        (t) will differ from its corresponding target vector Xi
                        (t) by at least one component.

Then, one-to-one greedy selection operation is used to decide whether the trial vector Ui
                        (t) would win the competition against its corresponding target vector Xi
                        (t). The winner becomes a member in the population Xi
                        (t
                        +1) of the next generation. This competition is normally based on the evaluation of the fitness function of both individuals.
                           
                              (7)
                              
                                 
                                    
                                       X
                                    
                                    
                                       i
                                    
                                    
                                       t
                                       +
                                       1
                                    
                                 
                                 =
                                 
                                    
                                       
                                          
                                             
                                                
                                                   
                                                      
                                                         U
                                                      
                                                      
                                                         i
                                                      
                                                      
                                                         t
                                                      
                                                   
                                                
                                                
                                                   if
                                                   
                                                   f
                                                   (
                                                   
                                                      
                                                         U
                                                      
                                                      
                                                         i
                                                      
                                                      
                                                         t
                                                      
                                                   
                                                   )
                                                   ≤
                                                   f
                                                   (
                                                   
                                                      
                                                         X
                                                      
                                                      
                                                         i
                                                      
                                                      
                                                         t
                                                      
                                                   
                                                   )
                                                
                                             
                                             
                                                
                                                   
                                                      
                                                         X
                                                      
                                                      
                                                         i
                                                      
                                                      
                                                         t
                                                      
                                                   
                                                
                                                
                                                   otherwise
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           
                        
                     

The control parameter values of FADE respond to the population’s information, i.e., function values or population diversity (FC), parameter vectors (PC), and their updates after tth generations. Two FLC systems are used as the basis a fuzzy control mechanism. The main adaptation steps of FADE algorithm can be encapsulated as follows:
                           
                              •
                              
                                 Step1 (Initialization): The values of FC and PC are calculated and then used as input to the FLCs as in Eqs. (8) and (9), and the values of the control parameters (i.e. F and CR) are the outputs.


                        
                           
                              •
                              
                                 Step2 (Fuzzification): The values of F and CR are assigned to the fuzzy sets membership functions. These membership functions have been stated by Liu and Lampinen [16], based on their empirical study. Fig. 3
                                 (a–d) represents four fuzzy membership functions for input variables D
                                 1, D
                                 2, D
                                 3, and D
                                 4. Fig. 3(e and f) shows fuzzy membership functions for output variables F and CR.


                                 Step3 (Rule Base): IF-THEN fuzzy rules statements, the most useful method in modeling complex systems, are used to formulate the conditional statements that comprise fuzzy logic. There are 9×2 rules as shown in Table 2
                                  that comprise the fuzzy logic. Each of the variables (D
                                 1, D
                                 2, D
                                 3, D
                                 4, F, CR) has a corresponding fuzzy membership function with 3 fuzzy subsets, where S is “small”, M is “middle” and B is “big” as illustrated in Table 2. Fig. 4
                                  shows the fuzzy decision surfaces for all combinations of the inputs and outputs. These surfaces are nonlinear and monolithic surfaces and represent fuzzy decision surfaces for given inputs.


                                 Step4 (Fuzzy Inference Engine): Madmani’s fuzzy inference method [22] is used as the fuzzy control strategy. It is the most commonly used fuzzy simulation methodology. In this method the fuzzy control strategy is used to map from the given inputs through the rules to an output (fuzzy sets). These fuzzy sets are then collected into one fuzzy set.


                                 Step5 (Defuzzification): The defuzzification process is held to map from a space of fuzzy output into a space of real output. The input is the collected fuzzy set and the output is a single value. There are many types of defuzzification strategies. In FADE the centroid defuzzification technique was selected (CDT), i.e., the center of gravity of the fuzzy control.

@&#RESULTS AND DISCUSSION@&#

The kinematic and dynamic models of manipulators are nonlinear and coupled. Thus, explicit modeling of noises will make dynamic modal complex. To overcome this problem the fuzzy adaptive Differential Evolution (FADE) has been utilized for improving the parameter estimation of the robot manipulator and to deliver minimum performance variation. As a case study, the single joint arm model of the CRS A465 is considered. The CRS 465 single joint arm has A
                     =4 parameters to be estimated, as discussed in Section 2. In the simulation, a
                     1 is the inertia, a
                     2 is the viscous friction coefficient, a
                     3 is the positive side Coulomb friction, and a
                     4 is the negative side Coulomb friction.

To develop the new dynamic parameter identification framework based on FADE, attention has to be paid to the following setting points that characterize the FADE algorithm as well as the standard DE algorithm to the robot application:
                        
                           •
                           
                              Individual (solution encoding) and Population representation: A population with popsize
                               (NP
                              =30) of individuals, refers to the number of individuals at each generation. First, we have to encode the necessary information required for the parameter estimation in the individual structure. Each individual should represent a complete solution to the problem at hand. In our application the individual is a vector of 4 real-coded parameters known as solution parameters.


                              Parameter control: The control parameters that are going to be considered are the mutation factor, F and the crossover rate, CR. In the standard DE/rand/1/bin, these parameters have been set to 0.5 and 0.9, respectively. In FADE these parameters undergo evolution via the fuzzy adaptation system, FLC, in such a way that better values of these parameters would lead to better individuals which in turn are more likely to survive and produce offspring and hence propagate these better parameter values to the next generation.


                              Individual evaluation (solution validation): The definition of the fitness function is crucially important for a successful application. In this work, we have to evaluate the fitness of each individual based on the mean square error (MSE) of the estimated model, as in Eq. (10). 
                                 
                                    (10)
                                    
                                       MSE
                                       =
                                       
                                          
                                             
                                                ∑
                                             
                                             
                                                i
                                                =
                                                1
                                             
                                             
                                                n
                                             
                                          
                                       
                                       
                                          
                                             
                                                
                                                   
                                                      
                                                         τ
                                                      
                                                      
                                                         i
                                                      
                                                   
                                                   -
                                                   
                                                      
                                                         
                                                            
                                                               τ
                                                            
                                                            
                                                               ˆ
                                                            
                                                         
                                                      
                                                      
                                                         i
                                                      
                                                   
                                                
                                             
                                          
                                          
                                             2
                                          
                                       
                                    
                                 
                               where τ represents the measured torque in our application and 
                                 
                                    
                                       
                                          τ
                                       
                                       
                                          ˆ
                                       
                                    
                                 
                               is the estimated torque using the DE and FADE algorithms. n is the dimension of τ vector.


                              Stopping criteria: The most common stopping condition used in literature is to allow the algorithm to run to a maximum number of iterations. A small number of iterations may not give the algorithm enough time to reach an optimum especially when the size of the search space is large. On the other hand, a very large number of iterations may be unnecessary because there can no further gain once the optimum solution is reached; so, the number of iterations for the standard DE and FADE is set at 100.

In this comparison the ordinary least square (OLS) identification method (see Eq. (11)) has also been included to estimate the unknown parameters XOLS
                      by minimizing the sum of the squared error between the actual torque τ and the predicted torque 
                        
                           
                              
                                 Φ
                              
                              
                                 
                                    
                                       X
                                    
                                    
                                       OLS
                                    
                                 
                              
                           
                        
                     , as follows:
                        
                           (11)
                           
                              
                                 
                                    X
                                 
                                 
                                    OLS
                                 
                              
                              =
                              
                                 
                                    (
                                    
                                       
                                          ϕ
                                       
                                       
                                          T
                                       
                                    
                                    ϕ
                                    )
                                 
                                 
                                    -
                                    1
                                 
                              
                              
                                 
                                    ϕ
                                 
                                 
                                    T
                                 
                              
                              τ
                           
                        
                     
                  

Using the aforementioned methods and their corresponding settings the barycentric parameters of the CRS 465 single joint arm are estimated. The results of the three estimation techniques are presented in Table 3
                     . These results have been averaged over 30-independent runs.

A clear comparison among these methods is presented in Table 4
                      which illustrates the mean square error and the standard deviation of the prediction error. From the same table it can be observed that the FADE could outperform the OLS and the standard DE for both values. This is so because FADE updates the values of the control parameters each generation and this change can deal with difficult problems such as noise.


                     Fig. 5
                      depicts the different behavior of F and CR values during the 100 generations due to the population information. The plot of the figure shows a significant high fluctuation at the early stages of the run then begins to stabilize due to stability in the population. This change in F and CR values helps FADE to escape from the local optimums generated by the noisy components in the dataset.

The distinct performance of the FADE in comparison with the standard DE and the OLS is further proved in the torque prediction, as depicted in Fig. 6
                     .

From this figure, and based on the barycentric parameters, it is worth noting that the standard DE and FADE are both nearer to the measured torque than the OLS. The difference is clearer in the accuracy of the model as already presented in Table 4. However, the difference between the standard DE and FADE performance plot will be more significant as the number of the estimated parameters is increased.

@&#CONCLUSION@&#

In this paper, the fuzzy adaptive differential evolution algorithm (FADE) is utilized to estimate the barycentric parameters of single joint CRS A465 robot arm dynamics. In this method the values of the control parameters F and CR are adapted using fuzzy logic control. The main advantages of the fuzzy scheme in this approach are: computationally efficient, and well-adaptable with optimization techniques. FADE is not only a simple approach in comparison with other adaptive DE variants, but is also reliable and easy to be implemented in real time applications such as robot system identification.

The barycentric parameters of a single joint CRS A465 robot are also estimated using OLS and the standard DE, and the experimental results suggest that fuzzy adaptive DE provides better overall performance than the ordinary least square method and the standard DE with fixed parameters. However, in order to further investigate the performance of the FADE as an estimator technique and any possible shortcomings, further work is considered to increase the number of joints of the robot arm which in turn will increase the number of parameters of the predicted model.

@&#ACKNOWLEDGMENTS@&#

The authors would like to thank University of Malaya for providing financial support under the UMRG Research Grants Project No. RP006E-13ICT.

@&#REFERENCES@&#

