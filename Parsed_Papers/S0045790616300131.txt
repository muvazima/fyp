@&#MAIN-TITLE@&#Semi-fragile self-recoverable watermarking scheme for face image protection

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           PCA coefficients are used to generate information watermarks, and the authentication watermarks are generated using SVD coefficients.


                        
                        
                           
                           The embedding position is generated by a chaotic map, and it improves the security of the proposed method.


                        
                        
                           
                           Watermarks are embedded into the mid-frequency bands by using our proposed SDPQ method.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Semi-fragile

Self-recoverable

Tamper detection

Face image protection

PCA

@&#ABSTRACT@&#


               
               
                  Digital watermarking based biometric images protecting has been an active research focus. In this paper, we propose a face image protection scheme based on semi-fragile self-recoverable watermarking. Authentication watermark is generated from the singular value decomposition (SVD) coefficients for each image block, and information watermark is generated from the principal component analysis (PCA) coefficients. Both of them are embedded into wavelet medium frequency coefficients by using the proposed group-based wavelet quantization method. On the authentication side, after identifying the tampered regions, the proposed method can recover the tampered face images by using the hidden information watermark. Experimental results demonstrate that the proposed watermark scheme has high localization accuracy and robustness comparing with the existing techniques, and the recovered PCA coefficients can be used to reconstruct the Eigen-face image or be directly used for recognition system.
               
            

@&#INTRODUCTION@&#

Nowadays, with the wide use of biometric recognition system, biometric security is gaining increasing attention. The digital signature can be used to protect the biometric images. However, it has the following limitations: (1) digital signatures can verify whether the biometric images have been tampered but the modifications cannot be indicated; (2) data recovery capability is limited. Although error correction coding could be applied to address these limitations, this method cannot deal with severe modification.

Digital watermarking, compared with its pure cryptographic counterpart, can solve the aforementioned limitations to some extent. Protecting biometric images based on digital watermarking has been an active research focus. In [1], Jain–Uludag extended the amplitude modulation watermarking method for biometrics hiding. Majumder et al. proposed a method for embedding two watermarks into fingerprint images based on Discrete Cosine Transform(DCT) [2]. Joshi al. proposed a multilevel semi-fragile watermarking technique for improving fingerprint system security [3]. Al-Ani and Al-Baset [4] extracted the biometric features from the fingerprint images based on discrete wavelet transform(DWT), and embedded it into face images to guarantee the security of the biometric images. In Joshi et al. [5], the authors proposed a multiple reversible watermarking technique for fingerprint authentication in which two reversible watermarks are used to protect fingerprint images from the malicious manipulations. Recently, we proposed a method for tampering detection and self-recovery of face images based on the fragile self-recovery watermarking [6,7]. However, face images maybe suffer from incidental manipulation during transmission and storage, e.g., compression, noise, filtering, smoothing, etc. These manipulations which preserve image contents are thought to be permissible and acceptable. Semi-fragile watermarking scheme tolerates incidental manipulation, but is sensitive to malicious attacks. Besides tamper proofing for authentication of the image, recovering the tamper image is more attractive. Therefore, face image protection using semi-fragile self-recoverable watermarking scheme is a promising research focus.

There is a trade-off between the amount of embedded watermarks and robustness for semi-fragile self-recoverable watermarking. If more watermark bits are embedded into host image, the localization accuracy and the quality of recover image are relatively high; otherwise, the robustness of the algorithm will be degraded. If we reduce the amount of embedding watermark bits, the localization accuracy and the quality of the recovered image cannot be guaranteed. The proposed semi-fragile self-recoverable watermarking methods can be found in [8–18], and they generate watermark from the thumbnail or the low frequency wavelet coefficients of the host image, which can reduce watermark embedding amount. For biometric images, there are a lot of redundant information, and can be further compressed. In this paper, we propose a novel semi-fragile self-recoverable watermarking scheme, and apply it for face image protection. The authentication watermarking is generated from SVD coefficients, and the information watermark is generated from PCA coefficients. Both of them are embedded into wavelet medium frequency coefficients by using the proposed group-based wavelet quantization method.

The remainder of the paper is organized as follows: Section 2 demonstrates the flowchart of the proposed method; Section 3 describes the proposed semi-fragile self-recoverable watermarking scheme; Section 4 presents the experimental results and analysis; finally, Section 5 concludes.

The general framework of the proposed method is illustrated in Fig. 1
                     , and it consists of two parts: one is watermark generation and watermark embedding, the other is tamper detection and recovery. The proposed method generates two watermarks: authentication watermark and information watermark. Information watermark is generated from PCA coefficients. We segment the face region by face detection method [19], and extract its PCA coefficients, then generate the information watermark. In order to improve the robustness, we adopt the group-based wavelet quantization method to embed watermarks. And this process is shown in Fig. 2
                     (a). During the tamper detection and recovery process, the generated watermark from an image block is compared with the extracted watermark from its corresponding image block. If they are not equal, the test image block is denoted as an invalid block. According to the tamper detection results, image blocks are classified into two classes: tampered and un-tampered blocks. We extract the information watermark bits from un-tampered image blocks and convert them into PCA coefficients, and then reconstruct the face image. The tamper detection and recovery process is shown in Fig. 2(b).

The proposed watermarking scheme consists of three parts: watermark generation and embedding, tamper detection, and tamper recovery.

In order to detect tamper and recover the damaged data, authentication watermark and information watermark are generated, and embedded into the host image. The details are presented as follows:


                           
                              
                                 •
                                 Information watermark generation

For an input face image, we segment the face region using face detection method and scale it to a given size, then calculate its Eigen-face coefficients 
                              
                                 
                                    B
                                    m
                                 
                                 
                                    (
                                    m
                                    =
                                    1
                                    ,
                                    2
                                    ,
                                    …
                                    ,
                                    T
                                    )
                                 
                              
                            by PCA, where T is the number of Eigen-face coefficients. An Eigen-face coefficient is converted to a binary stream with size of 16 bits, thus a face image with T PCA coefficients can be represented by a binary stream with size of 16 × T bits,used as information watermark. During the embedding process, two information bits are embedded into an image block. An input image with Nb
                            image blocks can be embedded into 2 × Nb
                            bits. Therefore, we can embed 
                              
                                 P
                                 =
                                 ⌊
                                 
                                    (
                                    2
                                    ×
                                    
                                       N
                                       b
                                    
                                    )
                                 
                                 /
                                 
                                    (
                                    16
                                    ×
                                    T
                                    )
                                 
                                 ⌋
                              
                            Eigen-face coefficients copies of a face image into (p × T × 16)/2 image blocks, and the rest 
                              
                                 
                                    N
                                    b
                                 
                                 −
                                 
                                    (
                                    P
                                    ×
                                    T
                                    ×
                                    16
                                    )
                                 
                                 /
                                 2
                              
                            image blocks are embedded using ‘0’. The information watermark IW can be described as 
                              
                                 I
                                 W
                                 =
                                 
                                    
                                       b
                                       j
                                       1
                                    
                                    ,
                                    
                                       b
                                       j
                                       2
                                    
                                    ,
                                    …
                                    ,
                                    
                                       b
                                       j
                                       P
                                    
                                    ,
                                    0
                                    ,
                                    0
                                    ,
                                    …
                                    ,
                                    0
                                 
                                 ,
                                 j
                                 =
                                 1
                                 ,
                                 2
                                 ,
                                 …
                                 ,
                                 16
                                 ×
                                 T
                              
                           . If one or more copies tampered, we can recover the Eigen-face from the other copies.

                              
                                 •
                                 Authentication watermark generation

In this paper, the authentication watermark is generated from the SVD coefficients of each image block, and it can be described as follows:

                              
                                 Step 1.
                                 Image blocks division. The input image X with size M × N is divided into Nb
                                     non-overlapping blocks Xi
                                     of 16 × 16 pixels.

Singular value decomposition (SVD). Sixteen Eigenvalues λ can be generated by SVD for each image block.

Eigenvalue sorting. We can get λ
                                    1 ≥ λ
                                    2 ≥ ⋅⋅⋅λ
                                    16, and select the first m eigenvalue to generate authentication watermark, in this paper, m is selected as 9.

Eigenvalue quantization. To further reduce minor variations due to corrupting noise, the eigenvalue, 
                                       
                                          
                                             λ
                                             k
                                          
                                          ,
                                          k
                                          =
                                          1
                                          ,
                                          2
                                          ,
                                          …
                                          ,
                                          m
                                       
                                     , is quantized according to formula (1):

                                       
                                          (1)
                                          
                                             
                                                
                                                   
                                                      λ
                                                      ¯
                                                   
                                                   k
                                                
                                                =
                                                
                                                   ⌊
                                                   
                                                      λ
                                                      k
                                                   
                                                   /
                                                   Q
                                                   ⌋
                                                
                                             
                                          
                                       
                                    where the positive integer Q denotes the number of quantization bins. 
                                       
                                          
                                             
                                                λ
                                                ¯
                                             
                                             i
                                          
                                          
                                             (
                                             k
                                             )
                                          
                                       
                                     stands for the 
                                       
                                          k
                                          th
                                       
                                     coefficient of the 
                                       
                                          i
                                          th
                                       
                                     image block.

Binary random matrix generation. To improve the security of the generation watermark, we generate random matrix 
                                       
                                          
                                             A
                                             
                                                l
                                                k
                                             
                                          
                                          ,
                                          l
                                          =
                                          1
                                          ,
                                          2
                                          ,
                                          3
                                          ,
                                          k
                                          =
                                          1
                                          ,
                                          2
                                          ,
                                          …
                                          ,
                                          m
                                       
                                     using secret key k
                                    1.

For any image block Xi
                                    , we generate the 3-bits authentication watermark 
                                       
                                          
                                             w
                                             
                                                i
                                                l
                                             
                                          
                                          ,
                                          i
                                          =
                                          1
                                          ,
                                          2
                                          ,
                                          …
                                          ,
                                          
                                             N
                                             b
                                          
                                          ,
                                          l
                                          =
                                          1
                                          ,
                                          2
                                          ,
                                          3
                                       
                                     from the m coefficients according to formula (2):

                                       
                                          (2)
                                          
                                             
                                                
                                                   w
                                                   
                                                      i
                                                      l
                                                   
                                                
                                                =
                                                P
                                                a
                                                r
                                                i
                                                t
                                                y
                                                
                                                   (
                                                   
                                                      ∑
                                                      
                                                         n
                                                         ∈
                                                         [
                                                         0
                                                         ,
                                                         m
                                                         −
                                                         1
                                                         ]
                                                      
                                                   
                                                   
                                                      (
                                                      
                                                         A
                                                         l
                                                      
                                                      
                                                         (
                                                         n
                                                         )
                                                      
                                                      ⊕
                                                      
                                                         A
                                                         l
                                                      
                                                      
                                                         (
                                                         m
                                                         −
                                                         1
                                                         )
                                                      
                                                      )
                                                   
                                                   )
                                                
                                                ·
                                                
                                                   λ
                                                   ¯
                                                
                                                
                                                   (
                                                   n
                                                   )
                                                
                                                
                                                   )
                                                   )
                                                
                                             
                                          
                                       
                                    The bit wil
                                     is a 3-bits authentication watermark bit of the ith image block.

Watermark encryption

For an image block Xi
                           , we generate 3-bits authentication watermark, and combine 2-bits information watermark to get a 5-bits watermark. In order to improve the security of the proposed method, the generated watermark is encrypted using secret key k
                           2. A random sequence S ∈ {0, 1} is generated by utilizing the logistic chaotic map to encrypt the generated watermarks [20].We split the binary string into the sub-string 
                              
                                 
                                    S
                                    i
                                 
                                 ∈
                                 
                                    {
                                    
                                       s
                                       
                                          i
                                          1
                                       
                                    
                                    ,
                                    
                                       s
                                       
                                          i
                                          2
                                          ,
                                          …
                                          ,
                                       
                                    
                                    
                                       s
                                       
                                          i
                                          5
                                       
                                    
                                    }
                                 
                                 ,
                                 i
                                 =
                                 1
                                 ,
                                 2
                                 ,
                                 …
                                 ,
                                 
                                    N
                                    b
                                 
                              
                           . Exclusive-OR operation is used to encrypt information bits by using Eq. (3), and encrypted information bits are used as watermark bits 
                              
                                 W
                                 =
                                 {
                                 
                                    W
                                    1
                                 
                                 ,
                                 
                                    W
                                    2
                                 
                                 ,
                                 …
                                 ,
                                 
                                    W
                                    
                                       N
                                       b
                                    
                                 
                                 }
                              
                           .

                              
                                 (3)
                                 
                                    
                                       
                                          w
                                          
                                             i
                                             ,
                                             j
                                          
                                       
                                       =
                                       
                                          B
                                          
                                             i
                                             j
                                          
                                       
                                       ⊕
                                       
                                          S
                                          
                                             i
                                             j
                                          
                                       
                                    
                                 
                              
                           where 1 ≤ i ≤ Nb
                           , 1 ≤ j ≤ 5.

In order to resist vector quantization (VQ) codebook attack [21] and collage attack [22], we embed the watermark based on a block-chain structure. An index 
                              
                                 
                                    I
                                    1
                                 
                                 ,
                                 
                                    I
                                    2
                                 
                                 ,
                                 …
                                 ,
                                 
                                    I
                                    
                                       N
                                       b
                                    
                                 
                              
                            is generated as a random position sequence using secret key k
                           3 as described in [23], which is used to select the image block to be embedded. The watermark W
                           
                              I(i) generated from X
                           
                              I(i) is embedded into its next block 
                              
                                 
                                    X
                                    
                                       I
                                       (
                                       i
                                       +
                                       1
                                       )
                                    
                                 
                                 ,
                              
                            the watermark 
                              
                                 W
                                 
                                    I
                                    (
                                    i
                                    +
                                    1
                                    )
                                 
                              
                            generated from 
                              
                                 X
                                 
                                    I
                                    (
                                    i
                                    +
                                    1
                                    )
                                 
                              
                            is embedded into its next block 
                              
                                 
                                    X
                                    
                                       I
                                       (
                                       i
                                       +
                                       2
                                       )
                                    
                                 
                                 ,
                              
                            and so on.

In order to improve the robustness of the proposed method, the 5-bits watermark is embedded into the peak value of medium frequency in DWT by our proposed group-based wavelet quantization embedding method in [10]. The embedding method is shown in Fig. 2, and can be described as follows:

                              
                                 Step 1.
                                 We calculate the two-level wavelet coefficients of an image block Xi
                                     with size 16 × 16.

                                       
                                          (4)
                                          
                                             
                                                D
                                                W
                                                T
                                                
                                                   {
                                                   
                                                      X
                                                      i
                                                   
                                                   }
                                                
                                                =
                                                
                                                   {
                                                   L
                                                   L
                                                   
                                                      2
                                                      i
                                                   
                                                   ,
                                                   H
                                                   L
                                                   
                                                      2
                                                      i
                                                   
                                                   ,
                                                   L
                                                   H
                                                   
                                                      2
                                                      i
                                                   
                                                   ,
                                                   H
                                                   H
                                                   
                                                      2
                                                      i
                                                   
                                                   ,
                                                   H
                                                   L
                                                   
                                                      1
                                                      i
                                                   
                                                   ,
                                                   L
                                                   H
                                                   
                                                      1
                                                      i
                                                   
                                                   ,
                                                   H
                                                   H
                                                   
                                                      1
                                                      i
                                                   
                                                   }
                                                
                                             
                                          
                                       
                                    
                                 

Each image block has three groups of mid-frequency coefficients, including LH
                                    2, HL
                                    2, and HH
                                    2, in which the size of each group is 4 × 4. Three groups of 4 × 4 mid-frequency coefficients are converted into 16-dimension sequences. Thereafter, we concatenate the sequences into a single sequence IS with 48 coefficients.

To enhance the security of the system against local attacks, the sequence IS is permuted as PS by using the secret key k
                                    4.

The permuted sequence PS is divided into five sub-groups denoted as 
                                       
                                          P
                                          S
                                          =
                                          {
                                          P
                                          
                                             S
                                             k
                                          
                                          ,
                                          k
                                          =
                                          1
                                          ,
                                          2
                                          ,
                                          …
                                          ,
                                          5
                                          }
                                       
                                    . We adopt our proposed embedding method in [10], namely, the significant difference parity quantization (SDPQ) to embed one bit for each group.

For each group k ∈ [1, 5], the significant difference, which refers to the difference of the largest and second largest value 
                              
                                 
                                    max
                                    k
                                 
                                 −
                                 
                                    sec
                                    k
                                 
                              
                            is modulated according to the watermark bit to be embedded. To embed a “0” or “1” bit watermark, the significant difference is modulated to an even or odd multiple of a quantization step Q . Δk
                            denotes the original significant difference value of group k, and wk
                            is the corresponding watermark bit. Thus, the embedding procedure can be achieved by the following equations:

                              
                                 (5)
                                 
                                    
                                       
                                          Δ
                                          k
                                          ′
                                       
                                       =
                                       2
                                       Q
                                       ·
                                       
                                          [
                                          
                                             
                                                
                                                   Δ
                                                   k
                                                
                                                +
                                                
                                                   w
                                                   k
                                                
                                                Q
                                             
                                             
                                                2
                                                Q
                                             
                                          
                                          ]
                                       
                                       −
                                       
                                          w
                                          k
                                       
                                       Q
                                    
                                 
                              
                           
                           
                              
                                 (6)
                                 
                                    
                                       
                                          max
                                          k
                                          ′
                                       
                                       =
                                       
                                          max
                                          k
                                       
                                       +
                                       
                                          (
                                          
                                             Δ
                                             k
                                             ′
                                          
                                          −
                                          
                                             Δ
                                             k
                                          
                                          )
                                       
                                    
                                 
                              
                           where [ · ] is the round operator, and 
                              
                                 Δ
                                 k
                                 ′
                              
                            denotes the quantized significant difference. 
                              
                                 max
                                 k
                                 ′
                              
                            is the modulated maximum. Evidently, the upper bound of the modification on the local maximum is Q. The trade-off between fidelity and robustness can be controlled by changing the value of Q .

The verification process contains the following steps:

                           
                              Step 1.
                              The test image Y is split into image blocks 
                                    
                                       
                                          Y
                                          i
                                       
                                       ,
                                       i
                                       =
                                       1
                                       ,
                                       2
                                       ,
                                       …
                                       ,
                                       
                                          N
                                          b
                                       
                                       ,
                                    
                                  and watermarks are generated as described in the watermark generation process. 
                                    
                                       A
                                       
                                          W
                                          
                                             I
                                             (
                                             i
                                             )
                                          
                                          *
                                       
                                    
                                  is generated from Y
                                 
                                    I(i); 
                                    
                                       A
                                       
                                          W
                                          
                                             I
                                             (
                                             i
                                             +
                                             1
                                             )
                                          
                                          *
                                       
                                    
                                  is generated from 
                                    
                                       
                                          Y
                                          
                                             I
                                             (
                                             i
                                             +
                                             1
                                             )
                                          
                                       
                                       ,
                                    
                                  and so on.

Two-level wavelet transform is performed for the test image blocks. The middle-frequency coefficients are used to extract watermarks. Each image block has three groups of 4 × 4 mid-frequency coefficients, including LH2, HL2, and HH2. These coefficients are converted into a 48-dimension vector. The sub-band coefficients are shuffled by using the secret key k
                                 4, and non-overlapped coefficients are regrouped into five sub-groups.

For each coefficient sub-group k ∈ [1, 5], the significant difference 
                                    
                                       Δ
                                       k
                                       ′
                                    
                                  is computed, and the watermark bit 
                                    
                                       w
                                       k
                                       ′
                                    
                                  is decoded as the following:

                                    
                                       (7)
                                       
                                          
                                             
                                                w
                                                k
                                                ′
                                             
                                             =
                                             
                                             mod
                                             
                                             
                                                {
                                                
                                                   
                                                      [
                                                      
                                                         
                                                            Δ
                                                            k
                                                            ′
                                                         
                                                         Q
                                                      
                                                      ]
                                                   
                                                   ,
                                                   2
                                                
                                                }
                                             
                                          
                                       
                                    
                                 Therefore, for image block 
                                    
                                       Y
                                       
                                          I
                                          (
                                          i
                                          +
                                          1
                                          )
                                       
                                    
                                  , a 3-bits authentication watermark 
                                    
                                       E
                                       
                                          W
                                          
                                             I
                                             (
                                             i
                                             )
                                          
                                          ′
                                       
                                    
                                  and a 2-bits information watermark 
                                    
                                       I
                                       
                                          W
                                          
                                             I
                                             (
                                             i
                                             +
                                             1
                                             )
                                          
                                          ′
                                       
                                    
                                  are extracted. The extracted watermark is decrypted using secret key k
                                 2.

After the aforementioned watermark generation and extraction, a detection indicator for each test image block is calculated as follows:

                                    
                                       (8)
                                       
                                          
                                             
                                                d
                                                
                                                   I
                                                   (
                                                   i
                                                   )
                                                
                                             
                                             =
                                             
                                                {
                                                
                                                   
                                                      
                                                         
                                                            1
                                                            ,
                                                         
                                                      
                                                      
                                                         
                                                            i
                                                            f
                                                            
                                                               W
                                                               
                                                                  I
                                                                  (
                                                                  i
                                                                  −
                                                                  1
                                                                  )
                                                               
                                                               *
                                                            
                                                            ≠
                                                            
                                                               W
                                                               
                                                                  I
                                                                  (
                                                                  i
                                                                  )
                                                               
                                                               ′
                                                            
                                                         
                                                      
                                                   
                                                   
                                                      
                                                         
                                                            0
                                                            ,
                                                         
                                                      
                                                      
                                                         otherwise
                                                      
                                                   
                                                
                                             
                                          
                                       
                                    
                                 A tamper detection masks, 
                                    
                                       D
                                       =
                                       {
                                       
                                          d
                                          i
                                          1
                                       
                                       ,
                                       i
                                       =
                                       1
                                       ,
                                       2
                                       ,
                                       …
                                       ,
                                       
                                          N
                                          b
                                       
                                       }
                                    
                                  can then be generated.

Optimize D using 8-neighborhood characterization. The optimization equation is written as follows.

                                    
                                       (9)
                                       
                                          
                                             
                                                t
                                                
                                                   I
                                                   (
                                                   i
                                                   )
                                                
                                             
                                             =
                                             
                                                {
                                                
                                                   
                                                      
                                                         
                                                            1
                                                            ,
                                                         
                                                      
                                                      
                                                         
                                                            i
                                                            f
                                                            
                                                               (
                                                               
                                                                  D
                                                                  
                                                                     I
                                                                     (
                                                                     i
                                                                     )
                                                                  
                                                                  1
                                                               
                                                               =
                                                               1
                                                               )
                                                            
                                                            &
                                                            
                                                               (
                                                               
                                                                  m
                                                                  
                                                                     I
                                                                     (
                                                                     i
                                                                     )
                                                                  
                                                                  8
                                                               
                                                               ≥
                                                               
                                                                  m
                                                                  
                                                                     I
                                                                     
                                                                        
                                                                           (
                                                                           i
                                                                           +
                                                                           1
                                                                           )
                                                                        
                                                                        8
                                                                     
                                                                  
                                                               
                                                               )
                                                            
                                                            
                                                               )
                                                            
                                                         
                                                      
                                                   
                                                   
                                                      
                                                         
                                                            0
                                                            ,
                                                         
                                                      
                                                      
                                                         otherwise
                                                      
                                                   
                                                
                                             
                                          
                                       
                                    
                                 where 
                                    
                                       m
                                       
                                          I
                                          (
                                          i
                                          )
                                       
                                       8
                                    
                                  is the number “1” in the 8-neighborhood of D
                                 
                                    I(i). As shown in Eq. (9), the inconsistent block is marked as tampered if the block-neighborhood characterization is more than or equal to that of its mapping block. Otherwise, the inconsistent block is genuine.


                                 
                                    
                                       T
                                       D
                                       =
                                       {
                                       t
                                       
                                          d
                                          i
                                       
                                       ,
                                       i
                                       =
                                       1
                                       ,
                                       2
                                       ,
                                       …
                                       ,
                                       
                                          N
                                          b
                                       
                                       }
                                    
                                  is iteratively optimized by using eight-neighborhood characterization twice. The optimization equation can be written as follows:

                                    
                                       (10)
                                       
                                          
                                             t
                                             
                                                d
                                                i
                                             
                                             =
                                             
                                                {
                                                
                                                   
                                                      
                                                         
                                                            1
                                                            ,
                                                         
                                                      
                                                      
                                                         
                                                            i
                                                            f
                                                            (
                                                            
                                                               t
                                                               i
                                                            
                                                            =
                                                            1
                                                            &
                                                            
                                                               m
                                                               i
                                                               8
                                                            
                                                            ≥
                                                            3
                                                            ∥
                                                            
                                                               (
                                                               
                                                                  t
                                                                  i
                                                               
                                                               =
                                                               0
                                                               &
                                                               
                                                                  m
                                                                  i
                                                                  8
                                                               
                                                               ≥
                                                               5
                                                               )
                                                            
                                                            )
                                                         
                                                      
                                                   
                                                   
                                                      
                                                         
                                                            0
                                                            ,
                                                         
                                                      
                                                      
                                                         otherwise
                                                      
                                                   
                                                
                                             
                                          
                                       
                                    
                                 where 
                                    
                                       m
                                       i
                                       8
                                    
                                  is the number of “1” in the eight-neighborhood of ti
                                 . The final detection result TD consists of all tdi
                                  is obtained.

After tamper detection, all image blocks are marked as valid or invalid. The information watermarks are extracted from valid or invalid image block. If the watermarks are extracted from invalid image block, we set the extracted bits to ‘
                           −
                        1’, otherwise, keep unaltered. When all the information watermarks are extracted, the extracted watermarks are rearranged using random position sequence generated by using secret key k
                        3. Then a binary sequence 
                           
                              I
                              
                                 W
                                 ′
                              
                              =
                              
                                 {
                                 
                                    b
                                    j
                                    1
                                 
                                 ,
                                 
                                    b
                                    j
                                    2
                                 
                                 ,
                                 …
                                 ,
                                 
                                    b
                                    j
                                    P
                                 
                                 ,
                                 0
                                 ,
                                 0
                                 ,
                                 …
                                 ,
                                 0
                                 }
                              
                              ,
                              j
                              =
                              1
                              ,
                              2
                              ,
                              …
                              ,
                              16
                              ×
                              T
                           
                         is obtained. For each bit of PCA coefficient, we count the number of element which equals “1” among 
                           
                              
                                 b
                                 j
                                 1
                              
                              ,
                              
                                 b
                                 j
                                 2
                              
                              ,
                              …
                              ,
                              
                                 b
                                 j
                                 P
                              
                              ,
                              j
                              =
                              1
                              ,
                              2
                              ,
                              …
                              ,
                              16
                              ×
                              T
                              ,
                           
                         represents as 
                           
                              c
                              j
                              1
                           
                        . And we count the number of elements which equal ’0’, in the same way, and represents as 
                           
                              c
                              j
                              0
                           
                        . And the bit-stream of eigen-face can be represented according to Eq. (11):

                           
                              (11)
                              
                                 
                                    
                                       e
                                       j
                                    
                                    =
                                    
                                       {
                                       
                                          
                                             
                                                
                                                   0
                                                   ,
                                                
                                             
                                             
                                                
                                                   i
                                                   f
                                                   
                                                   
                                                      c
                                                      j
                                                      0
                                                   
                                                   ≥
                                                   
                                                      c
                                                      j
                                                      1
                                                   
                                                
                                             
                                          
                                          
                                             
                                                
                                                   1
                                                   ,
                                                
                                             
                                             
                                                otherwise
                                             
                                          
                                       
                                    
                                 
                              
                           
                        
                     

Then, the binary sequence 
                           
                              
                                 b
                                 1
                              
                              ,
                              
                                 b
                                 2
                              
                              ,
                              …
                              ,
                              
                                 b
                                 
                                    16
                                    ×
                                    T
                                 
                              
                           
                         is divided into T sub-groups with length 16, and each of them can be converted into a PCA coefficient. Finally, the recovered PCA coefficients 
                           
                              
                                 B
                                 1
                                 ′
                              
                              ,
                              
                                 B
                                 2
                                 ′
                              
                              ,
                              …
                              ,
                              
                                 B
                                 T
                                 ′
                              
                           
                         are obtained.

@&#EXPERIMENTAL RESULTS@&#

The proposed algorithm in this paper is implemented in MATLAB 2010. The FERET face database in which the face images with shoulder are chosen in the simulations [24], and the size of face image is 768 × 512, some selected face image is shown in Fig. 3
                     . We present the effect of watermarks, tamper localization, image recovery, and incidental manipulation (such as JPEG compression and Gaussian noise) as follows.

In our experiments, we discuss the computing scenario of the proposed method by using the parameter quantization step. Table 1
                         shows the average quality metric based on the peak signal-to-noise ratio (PSNR) and structural similarity index (SSIM) for different quantization steps during watermark embedding. By increasing the quantization step, imperceptibility is decreased. If the quanta is above 60, the average PSNR and SSIM are below 36 and 0.8, respectively. In this paper, we set the quantization step to 60.

To quantitatively evaluate the accuracy of tamper detection, two measures are adopted, namely, false detection probabilities (Pfd
                        ) and false alarm probabilities (Pfa
                        ):

                           
                              (12)
                              
                                 
                                    
                                       P
                                       
                                          f
                                          d
                                       
                                    
                                    =
                                    
                                       (
                                       1
                                       −
                                       
                                          N
                                          
                                             t
                                             d
                                          
                                       
                                       /
                                       
                                          N
                                          t
                                       
                                       )
                                    
                                    ×
                                    100
                                    %
                                 
                              
                           
                        
                        
                           
                              (13)
                              
                                 
                                    
                                       P
                                       
                                          f
                                          a
                                       
                                    
                                    =
                                    
                                       N
                                       
                                          f
                                          d
                                       
                                    
                                    /
                                    
                                       (
                                       
                                          N
                                          b
                                       
                                       −
                                       
                                          N
                                          t
                                       
                                       )
                                    
                                    ×
                                    100
                                    %
                                 
                              
                           
                        where Nb
                         is the total number of image blocks, Nt
                         is the number of tampered blocks, Ntd
                         is the number of invalid blocks that are correctly detected, and Nfd
                         is the number of valid blocks that are falsely detected. Ideally, the values of both Pfd
                         and Pfa
                         should be zeros with different tamper ratios [23].

We select 50 face images from FERET face image, and tamper these images by replacing a patch with a patch of the other face images. Suppose the proportion of tampered region α is in [0.01, 0.6] with the interval of 0.01. For each α, we carry on random region tampering for 20 times. And the average value for Pfd
                         and Pfa
                         is obtained by using Chamlawi et al. [14], Phadikar et al. [12], Li et al. [18] and our method. The simulation results are shown in Fig. 4
                        . From Fig. 4, we can conclude that Chamlawi et al. [14] has the higher false detection probabilities when the tamper ratio is below 10%, and it has higher false alarm probabilities when the tamper ratio is above 10%, So this method has poor performance on tamper detection. Phadikar et al. [12] and Li et al. [18] has the lower false detection probabilities and false alarm probabilities, however, the two methods are block-independent; thus, they are vulnerable to VQ and collage attacks. Our method embed less authentication watermarks, it has relatively high false alarm probabilities when the tamper ratio is small, with the increase of tamper ratio, the false detection probabilities is close to Phadikar et al. [12]. Meantime, our method has lower false alarm probabilities. Moreover, our method is block-dependent, and can efficiently resist VQ and collage attacks.

The normalized cross-correlation (NC) function is adopted here as the criteria for robustness comparison [11]. In order to demonstrate the effectiveness of our proposed method, we compare the performance of our method with Chamlawi et al. [14], Phadikar et al. [12] and Li et al. [18]. In the experiments, the watermarked images are set at the same PSNR value, about 36.5 dB.


                        Fig. 5
                         illustrates the robustness of the authentication watermarks under JPEG compression and Gaussian noise, respectively. The two figures demonstrate that our proposed method outperforms the other three methods under the two incidental manipulations (Fig. 5). Fig. 5a presents the NC under JPEG quantization factors from 50 to 100. Chamlawi et al. [14] and Li et al. [18] rapidly decrease, even if the quantization factor is 80, the NC of M1 and M2 is 0.52 and 0.75, respectively. Phadikar et al. [12] and our method have high robustness under JPEG compression. Even if the quantization factor is 50, the NC of our method is 0.98. Fig. 5b demonstrate the NC against different standard deviations of Gaussian noise from 2 to 10. We can see that our method and Phadikar et al. [12] have the highest robustness. The NC of other two methods rapidly decrease because they are sensitive to Gaussian noise.


                        Fig. 6
                         illustrates the robustness of recovery bits under JPEG compression and Gaussian noise, respectively. The authentication bits are also used as recovery bits for our method. The NC of our method is also similar to that of Fig. 5; our method is robust under JPEG compression. The other three methods embed recovery bits into the high frequency. Thus, they are very sensitive to JPEG compression and Gaussian noise.

In this section, we do research on the tamper detection under incidental manipulation. We tamper the original image by replacing a patch with other image with 5% tamper ratio is . Fig. 7
                         presents the tamper detection result under incidental manipulation. The first row is the detection result under JPEG compression (quantization factor is 90), and the second row is the detection result under Gaussian noise (standard deviation is 5). Fig. 7(a) is the watermarked image under JPEG compression and Gaussian noise, respectively; Fig. 7(b) is the tampered image; Fig. 7(c) is the detection result by Chamlawi et al. [14]; Fig. 7(d) is the detection result by Phadikar et al. [12]; Fig. 7(e) is the detection result by Li et al. [18]; and Fig. 7(f) is the detection result by our method. From Fig. 7, we can conclude that our method can localize the tamper region under incidental manipulation. The method in Chamlawi et al. [14] cannot work under incidental manipulation. The method in Phadikar et al. [12] can also achieve better localize performance. The method in Li et al. [18] almost localize the tamper region under JPEG compression (quantization factor is 90), but it cannot work under Gaussian noise.

Moreover, in order to further verify the effectiveness of our method, we demonstrate the performance under JPEG compression with low quality factor and Gaussian noise with large deviation in Fig. 8
                        . In the first row, when the image is compressed with JPEG factor of 40, and the PSNR of the compressive image is 34.9 dB. Our method can work well. When the standard deviation is up to 15 and the PSNR of the noised image is 30.1.9 dB, our method cannot efficiently detect the tamper region.

We segment the face region from face image with size 768 × 512, and scale it to 152 × 128. Then extract 64 Eigen-face coefficients by principal component analysis. The 64 Eigen-face coefficients can be converted into 1024 bits information watermark. The face image can be divided into 1536 image blocks with size 16 × 16, and each of them can be embedded into 2 bits information watermark. Thus we can embed three copies of the PCA coefficients. When one or two copies suffer from destroying, we can recover it using the unaltered information watermark. In the following, we will verify the performance of recovery. Fig. 9
                         presents the simulation results. Fig. 9(a) is the original face image; Fig. 9(b) is the segmented face region; Fig. 9(c) is the Eigen-face image reconstructed using 64 coefficients, we can embed three copies of Eigen-face coefficients into the face image. Fig. 9(d) is the tampered watermarked face image, the tamper ratio is 5%; Fig. 9(e) is the detection result by our proposed method, we can conclude that our proposed method can localize the tampered region with high accuracy; Fig. 9(f) is the recovered Eigen-face image, we can see that our method can completely recover the Eigen-face image even if the original face image suffers from tampering.

In order to demonstrate the recovery effectiveness of our proposed method under incidental manipulation, we present the recovered Eigen-face image under JPEG (quantization factor is 60) and Gaussian noise (standard deviation is 15) as shown in Fig. 10
                        . Fig. 10(a) is the tamper detection result under JPEG compression, and Fig. 10(b) is the recovered Eigen-face image; Fig. 10(c) is the tamper detection result under Gaussian noise, and Fig. 10(d) is the recovered Eigen-face image. From this figure, we can conclude that our proposed method is robust to JPEG compression which can correctly recover the Eigen-face image. When the watermarked image suffers from Gaussian noise with large deviation, the embedded information watermarks are damaged, thus the recovered Eigen-face image is distorted. We present the recognition rate of the recovered PCA coefficients. We select 1192 people from the FERET database (with shoulder), with two face images (FA/FB) for each person. The FA set is used as the refer set, and FB set is selected as the test set. We keep FA unchanged, and randomly tamper the FB by replacing a patch with a patch of the other face images. Suppose the proportion of tampered region a is in [0.01, 0.7] with the interval of 0.01. For each a, we carry on random region tampering for 20 times. Then we present the recognition rate for tampered face image and recovered PCA coefficients, respectively, as shown in Fig. 11
                        . From this figure, we can conclude that the recognition rate for recovered PCA coefficients is apparently over the tampered face image, which demonstrates the effectiveness of our proposed method.

@&#CONCLUSIONS@&#

In this paper, we proposed a semi-fragile self-recoverable fragile watermarking scheme for face image protection. The main features of our method are summarized as follows: 1) PCA coefficients are used to generate information watermarks, thus it can reduce the amount of the embedding watermarks; 2) The embedding position is generated by a chaotic map. Thus, obtaining the information of the block-mapping sequence is difficult. This feature improves the security of the proposed method. Moreover, security is enhanced by randomly permuting coefficients among a group; 3) Watermarks are embedded into the mid-frequency bands by using our proposed SDPQ method. Therefore, robustness is enhanced by embedding the watermarks in the largest coefficient inside a group.We present the performance comparison of the proposed approach with semi-fragile self-recoverable watermarking scheme in [12,14,18] with respect to tamper detection, robustness to incidental manipulation, etc. Experimental comparisons with existing approaches validate the usefulness of the proposed self-recoverable semi-fragile watermarking approach.

@&#ACKNOWLEDGMENTS@&#

This work was supported by the National Natural Science Foundation of China (Nos. 61202499, 61379113 and 61440031), Foundational Frontier Technology Research Project of Henan Province (Grant no. 142300410042) Zhengzhou Science and Technology Leader Project (131PLJRC643).

@&#REFERENCES@&#

