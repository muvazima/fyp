@&#MAIN-TITLE@&#Blood platelet inventory management with protection levels

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           We introduce a critical-level policy for an age-differentiated perishable product.


                        
                        
                           
                           Blood platelets are very valuable and perishable (3-days of shelf life).


                        
                        
                           
                           We model our problem as MDP and computationally compare it with other heuristics.


                        
                        
                           
                           There are different demand streams for different ages of blood platelets.


                        
                        
                           
                           Our heuristic outperforms when supplies are tight and substitution is expensive.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

OR in health services

Inventory management

Perishable goods

Heuristics

Critical level policy

@&#ABSTRACT@&#


               
               
                  We consider a discrete-time inventory system for a perishable product where demand exists for product of different ages; an example of such a product is blood platelets. In addition to the classical costs for inventory holding, outdating, and shortage, our model includes substitution (mismatch) costs incurred when a demand for a certain-aged item is satisfied by a different-aged item. We propose a simple inventory replenishment and allocation heuristic to minimize the expected total cost over an infinite time horizon. In our heuristic, inventory of the newest items is replenished in fixed quantities and the newest items are protected for future use by limiting some substitutions when making allocation decisions according to a critical-level policy. We model our problem as a Markov Decision Process (MDP), derive the costs of our heuristic policy, and computationally compare this policy to extant “near optimal” policies in the literature. Our extensive computational study shows that our policy leads to superior performance compared to existing heuristics in the literature, particularly when supplies are limited.
               
            

@&#INTRODUCTION@&#

According to the American Red Cross, “every two seconds an American needs blood.” Cognizant of this, every day tens of thousands of Americans donate blood. But this is only half of the story: Witnessing an influx of donors one week after the 9/11 terrorist attacks, Altman (2001) stated “Few people realize that blood is perishable and cannot be stored indefinitely. Blood centers function more as pipelines than banks, and there is a steady need for donors.” Altman’s words highlight the perishability of blood, and also point to the importance of maximizing the utilization of blood resources. Although more than 1.5 million components of blood platelets are transfused each year in the US (Sullivan and Wallace, 2005), 17 percent of platelet units collected in the US were outdated in 2004 (AABB, 2005). Exacerbating these problems, Landro (2009) reported a decrease in overall blood collection in 27 percent of the US blood centers because of the swine-flu pandemic, and she emphasized blood centers’ plans to allocate blood to the sickest patients. Similarly, during Hurricane Sandy the demand for platelets increased significantly due to critical surgeries and cancelation of over 300 blood drives in 14 states (Aleccia, 2012). Although blood centers and hospitals had sufficient red blood inventories, there was a critical shortage of platelets due to their very short shelf life (3 days) and the unavailability of donors (Aleccia, 2012). Williamson and Devine (2013) also discuss the need for efficient management of platelet inventories due to their high perishability and increasing demand due to an aging population and more aggressive cancer treatments, which involve regular platelet transfusions.

Although meeting demand is of paramount importance, the cost of handling blood products cannot be ignored: Statistics from the Canadian Institute for Health Information reveal that the total expenditures of the Canadian Blood Services increased 51 percent in 2001–2002 compared to an increase in health care costs of 25 percent on average (Wilson and Hebert, 2003). An increase in testing and safety measures, new donor recruitment programs, a surge in demand for blood products, and inefficient usage of resources were all cited as the possible reasons for this cost increase (Wilson and Hebert, 2003). Thus it is crucial that society find ways to reduce costs and improve utilization within blood supply chains, so as to make the best use of limited blood resources.

Blood inventory management has been extensively studied in the operations research and management science literature. We refer the readers to the survey papers by Nahmias (1982); 2011), Prastacos (1982), Pierskalla (2004), Karaesmen, Scheller-Wolf, and Deniz (2011), Beliën and Forcé (2012), and Bakker, Riezebos, and Teunter (2012). Blood products are prototypical examples of age-based perishable products for which consumers (patients) or hospitals (major consumption points) have specific preferences, differentiated by product age: Even though patients do not necessarily know the age of platelets they are receiving, there are medical and/or logistical reasons, which we discuss below, that cause demand for blood products to be age-differentiated. However, research that considers this particular issue is rather limited.

In this paper, we study a problem in which demand is differentiated by the age of product, as in the case of blood platelets. The central question is how age-differentiated inventory should be replenished and managed to satisfy this age-differentiated demand. Note that, for perishable items, the age composition of stock on hand is determined both by how goods are replenished and how goods are issued (i.e., inventory is allocated): When fresher products are substitutes for aged ones, an inventory manager has the option of satisfying demand for older items from the on-hand inventory of fresher items. But using inventory on hand to satisfy the demand for the current period may not be cost-optimal when there are costs associated with substitutes – as in Deniz, Karaesmen, and Scheller-Wolf (2010) – and/or when excess demand can be satisfied using alternate sources (for example via expediting). One may be better off rationing (protecting) the inventory of fresh items in the current period and incurring relevant costs (lost sales, backorder, or expediting); this may lead to savings in future periods when inventory can be used to satisfy the demand for more important (fresher) products. For example, this may be an attractive option for a blood center that has contracts with hospitals which specify service levels based on the age of the product – as in Fontaine et al. (2009).

This paper is organized as follows: We define the decision problem in Section 2, discuss the challenges associated with it, and provide an overview of our approach and others in the literature. Our heuristic policy is introduced in Section 3. Results of computational experiments are presented in Section 4. Further computations are done in Sections 5 and 6 to test the sensitivity of our heuristic policy and system performance to cost parameters and availability of supply, respectively. The paper ends with a discussion of future research directions in Section 7.

We consider a periodic-review inventory management problem for a product that has a finite lifetime (more than 1 day, N > 1). The product ages in a deterministic fashion; for a discussion of random degradation, see Goyal and Giri (2001), and Nahmias (2011). Any product that is not sold within N days outdates and needs to be discarded. The decision maker replenishes only the youngest (freshest) items with zero lead time. These are common assumptions in the research literature; see Nahmias (1982); 2011). The demand per day is a vector of random variables with requests for product of different ages.

As in the classical models in perishable inventory management, there are several cost components: (i) variable cost of replenishment per unit, (ii) holding cost for every item carried from one period to the next, (iii) expiration cost for items that outdate, and (iv) shortage/expediting cost for any demand that is not satisfied from on-hand inventory in any period. In addition we have (positive or negative) substitution costs for satisfying the demand of a certain age using the inventory of fresher (younger) or older items. We analyze the problem in a stationary environment.

In practice, the shelf life of blood platelets is technically 4–5 days; however, the effective shelf life is only 3 days in the U.S. (Fontaine et al., 2009). This is due to a “lead time” between donation and their being ready for transfusion, due to testing and processing. In other words, the blood center has to spend 48 hours of testing in order to comply with AABB’s bacterial testing guidelines. Before this bacterial test, which was not implemented in the U.S. until 2004, the shelf life of platelets was 4 days (Fontaine et al., 2009). Therefore, we focus on N = 3 days here due to this case’s practical relevance and manageable complexity. In recent research papers on perishable inventory management, the lifetime of the product is typically restricted to two periods, e.g., Deniz et al. (2010), Chung and Erhun (2013), Li, Lim, and Rodrigues (2009), Chen and Sapra (2008). Zhou, Leung, and Pierskalla (2011) do consider a shelf life of 3 days for platelets, and show existence of an optimal inventory policy incorporating dual modes of replenishment. We use the terms Young, Mature, and Old to differentiate among products that expire in 3, 2, and 1 period(s), respectively, and use the terms younger/youngest and fresher/freshest interchangeably. The products age at the end of each period, transitioning from Young to Mature, Mature to Old, and Old to outdated unless used to satisfy demand. We discuss the general managerial problem in Section 2.1 and our specific approach in Section 2.2.

A significant majority of research on perishable goods assumes that demand is satisfied in order of arrival, and inventory is issued first-in-first-out (FIFO), i.e., oldest inventory is sold first, or last-in-first-out (LIFO), i.e., youngest inventory is sold first (Karaesmen et al., 2011; Nahmias, 2011). In these classical models, since demand is not age-differentiated, there is no benefit or penalty for satisfying a demand with younger or older goods. However, in the case of blood products, satisfying demand for a particular age of product with blood of a different age may affect patients. Furthermore, in many cases unsatisfied demand for platelets is “lost;” for example it may be satisfied by expediting from a third party due to the urgent need for the product. In this environment, there are three questions for the inventory manager: (i) The replenishment decision: “What should the order quantity for the youngest goods be?” (ii) The allocation decision: “Which demand should be satisfied?” (iii) The issuance decision: “Given the answer to question (ii), which units of inventory should be used to satisfy the demand?”

Finding an optimal policy is challenging for this general problem. Even within a restricted class of policies (e.g., an order-up-to policy in which demand is satisfied in order of arrival, under FIFO issuance) the optimal policy is state dependent: The order quantity varies in each period depending on the amount and age composition of on-hand inventory. Thus it is highly likely that one will have to account for the exact inventory of each age to determine an optimal policy; this remains an open problem when demand is age-dependent and substitution is possible. The problem becomes tractable if one restricts (i) the type of replenishment policies considered, (ii) the type of inventory allocation and issuance rules to implement, and/or (iii) the lifetime of the product (Deniz et al., 2010). In this paper, we study a replenishment policy that is used in blood inventory management, specify an allocation rule and an issuance rule based on current practice that is similar to the research literature on substitutable goods, and limit the lifetime of the product. In doing so we are able to develop an effective heuristic policy and generate insights for the general problem.

Replenishing perishable inventories has been an important problem in the literature (Karaesmen et al., 2011). In our problem, a hospital blood bank manager needs to decide how many blood platelets to order every day while considering the 3 day shelf life of this expensive and critical product. In the literature it is common to restrict the replenishment decision to practical, easy-to-implement policies such as order-up-to policies or fixed-order-quantity policies (Nahmias, 2011). Such policies are also used in practice (Stanger, Yates, Wilding, and Cotton, 2012).

In this section, we discuss allocation decisions in platelet inventory management: In models with differentiated demand streams – age is the differentiating factor in our model – the decision-maker often has a choice as to which demand he or she may satisfy. We assume inventory is allocated to demand of its respective age first. This mimics what is done in practice, avoiding an age mismatching if possible. In other words, substitution is a recourse action.

This assumption is also common in research that involves multiple, substitutable products or multiple inventory locations where the age of a product is not a concern. In this research stream, substitution as a recourse action is referred to as “stock-out-based substitution” where each product (or location) satisfies its own demand and then can be used as a substitute for others; see, for example, Netessine and Rudi (2003), Kök and Fisher (2007), Acimovic and Graves (2012).

In this section we discuss the inventory issuance decisions in blood platelet inventory management and compare these decisions with similar papers about perishable inventory in the literature. The inventory issuance decisions in our problem are different than those in classical models which typically assume FIFO and LIFO (Nahmias, 2011 and Karaesmen et al., 2011) due to the age-differentiated demand structure of blood platelets (Fontaine et al., 2009). Specifically, there are risks associated with satisfying critical patients with older platelets (Haijema, van der Wal, and van Dijk, 2007) and in general substituting younger/older demand with older/younger inventory has a cost.

In order to understand inventory issuance decisions in our problem, it is crucial to emphasize the complicated demand structure of blood platelets in transfusion practice. Platelet transfusion was first shown to reduce death from bleeding in patients with acute leukaemia in the 1950s (Hersh, Bodey, Nies, and Freireich, 1965). Since then, transfusion of platelets has grown to be a significant component of the treatment of conditions such as cancer, organ transplantation, haematopoietic stem cell transplantation, marrow failure, AIDS, hepatitis, cardiovascular surgery and traumatology (Stroncek and Rebulla, 2007). In their studies of a Dutch regional blood bank, Haijema et al. (2007) and Haijema, van der Wal, and van Dijk (2009) mention that oncology patients request the youngest platelets, and traumatology patients have no preference with respect to the age of the blood platelet. Additionally, Fontaine et al. (2009) report that platelet demand from organ transplant patients is realized a couple of hours before the transfusion is needed, and is treated as an emergency, receiving the youngest possible blood platelets. In summary, certain patients request the youngest available platelets to minimize complications during the course of treatment, whereas the risk of complication for other patients is believed to be minimal.

For red blood cells, Kopach, Balcioglu, and Carter (2008) discuss the increased risk of postoperative complications for cardiac patients and show that the transfusion of blood that had been stored more than 14 days has an impact on short- and long-term survival rates of patients. Whether transfusion of “older” blood is as beneficial as transfusion of “fresher” blood, in general, is a topic of ongoing debate; see Glynn (2010), the references therein, Fontaine et al. (2009) and Atkinson, Fontaine, Goodnough, and Wein (2012). In this paper, we model demand as a function of the age of the product, which reflects findings in the literature and the current practice in blood platelet management.

Concerning the distribution of blood products, Fontaine et al. (2009) discuss how contracts between blood centers and hospitals, and the attributes of the hospitals themselves, influence how blood centers distribute inventory. The outdate and shortage rates of supplied blood products are the primary concerns. For instance, hospitals that have the ability to replenish inventory frequently and have high consumption rates can get older blood products but still maintain acceptable outdate levels while minimizing shortages. In contrast, hospitals with lower consumption rates or the inability to make frequent replenishments would prefer the youngest available products to minimize their shortage and outdate rates. These differences may give rise to heterogeneous service level agreements, leading a blood center to fulfill the demand of one hospital from the youngest inventory while shipping older products to another hospital. These are among the reasons why a blood center may not fulfill demand by strict rules such as FIFO or LIFO; by modeling age-differentiated demand, we are able to evaluate blood center allocation rules that are more general than FIFO or LIFO.

There are a few research papers that model inventory issuance decisions for age-differentiated perishable products. Pierskella and Roach (1972) were the first to model multiple demand streams which can be satisfied from the stocks of the same age or younger. They prove FIFO issuance minimizes total backlog/lost sales and outdates. Nahmias and Pierskalla (1976) examine a system consisting of two products: one with a finite lifetime (fresh blood), and one with an infinite lifetime (frozen blood). The demand for the product that has finite lifetime can be satisfied from the on-hand inventory of the other. Parlar (1985) considers a perishable product that has a two-period lifetime, where a fixed proportion of unmet demand for new items is fulfilled by unsold Old items and vice-versa. His analysis is limited to single period. Goh, Greenberg, and Matsuo (1993) derive the performance measures for a stochastic inventory model to study the benefit of substitution for perishable goods. Critical to their analysis is the separation of products into two age groups of young and old; this effectively reduces their model to N = 2. There are no replenishment decisions in Goh et al. (1993); new items join the system according to a Poisson process. Ishii (1993) and Ishii and Nose (1996) focus on optimal policies with two types of customers (high and low priority), items of N different ages with different prices, and only a single-period decision horizon.


                           Tekin, Gürler, and Berk (2001) propose a (Q, r, T) policy which allows ordering-up-to Q of the freshest products either when the inventory level drops to r or when products in stock age T periods after receiving a shipment. This study assumes a single product in a continuous review perishable inventory system, in which products start aging after being unpacked. Similar to the (Q, r, T) policy introduced by Tekin et al. (2001), Duan and Liao (2013) propose a replenishment policy, OIR, based on the old inventory ratio for blood platelet inventory management to minimize the expected system outdate cost. In this simulation optimization study, Duan and Liao (2013) conclude that adoption of centralized platelet inventory management would decrease the overall outdating rate. Ferguson and Koenigsberg (2007) study a problem in a two-period setting with pricing and internal competition between Young and Old items. Closer to our work are two papers by Haijema et al. (2007); 2009) who use a Markov Decision Process approach to derive heuristics for replenishment of blood platelets with two demand streams. Finally, Deniz et al. (2010) set the product lifetime to only 2 days (N = 2), consider two demand streams for Young and Old items with substitution, and analyze different replenishment policies.

In this section we describe the replenishment and issuance/allocation policies proposed in this paper. This includes the use of a critical level (or protection level) policy that limits the amount of substitution that takes place in any period. Under a critical level policy, we limit the amount of Young that is used to satisfy excessive demand of Old, possibly leaving some Old demand unsatisfied (leading to expediting). Our numerical study will show that our heuristic may outperform other policies in the literature, especially when substitution is expensive and there are limits on order quantities.

We focus on a fixed-order-quantity replenishment policy in this paper: We assume that S Young units enter the system at the beginning of every period. This is the NIS (New-Inventory-to-S) of Deniz et al. (2010). The simplicity of NIS is one reason it is used in practice, see, for example, Prastacos (1982), and Stanger et al. (2012). Specifically, Stanger et al. (2012) mention the following among hospital best practices: “... hospitals make use of a so-called standing order. This is a fixed order that will be fulfilled by the blood service automatically.” As Stanger et al. (2012) mention, a standing order delivery in the morning reduces complexity and workload while ensuring blood supply; a second delivery later in the day gives a hospital enough flexibility to react to changes in demand. The standing order is exactly what our fixed order quantity is, and a second delivery option represents the expediting option in our model.

A fixed-order-quantity model for perishable goods was first studied by Brodheim, Derman, and Prastacos (1975). When used in models with FIFO issuance and demand that is not age differentiated, NIS was shown to have inferior performance by Nahmias (1982) compared to a “total order-up-to policy,” an order-up-to policy that chooses a base-stock level based on the total amount of on-hand inventory at the beginning of each period. In addition, Nahmias (2011) states that NIS cannot respond to fluctuations in demand. However, when demand is age-differentiated a total order-up-to policy cannot respond to fluctuations in age-differentiated demand (e.g., no demand for Young, followed by high demand for Young): Deniz et al. (2010) show that the performance of a total order-up-to policy may suffer when demand is age differentiated and substitution is possible. One way to ensure that there are enough goods of any age in each period is to replenish new goods in each period and allow them to age in order to satisfy demand for older products in future periods; i.e., use an NIS policy. Deniz (2007) and Deniz, Karaesmen, and Scheller-Wolf (2007) use computational experiments to show that NIS is an effective policy for a product with two periods of shelf life and age-differentiated demand. We extend their work and analyze the effectiveness of NIS, in conjunction with a protection level policy, for a product with longer shelf life.

While we assume zero lead time in replenishment, the fixed order quantity policy is simple and robust enough to be used in systems with positive replenishment lead times: The age composition of inventory on hand is not affected by the replenishment lead time as long as S Young units enter the system in each period. In addition, we focus on a single perishable product at a single location. With respect to blood platelets, there is no cross-matching of blood types unless the blood platelets contain a significant amount of red blood cells (Stroncek and Rebulla, 2007). Currently in transfusion medicine, plateletpheresis, which is an automated method to separate platelets from other whole blood components, allows the collection of blood platelets, while returning plasma and red blood cells to the donor. Therefore, it is reasonable to assume we have a single product.

There is research on managing perishable goods at multiple locations, with possible transshipment options; see a review of research on this problem in Karaesmen et al. (2011). Fontaine et al. (2009) report that there is no trading of blood platelets in practice between different blood banks – due to the platelets’ high perishability – but hospitals are able to get the youngest platelets from other blood centers or hospitals in times of shortage. Similarly, Chung and Erhun (2013), motivated by the practice of blood banks and hospitals, assume that excess demand in any period is satisfied by expediting. We make the same assumption in this paper. Note that the assumption of satisfying excess demand by expediting at additional cost is, technically, no different than assuming “lost sales” in inventory management; the excess demand does not impact either the inventory composition or the usage in future periods but a penalty is incurred for each unit of demand that cannot be satisfied immediately from inventory on hand.

We assume that the demand is classified based on the age of the product: Dn
                            is the number of requests for a product that has n periods of remaining lifetime; i.e., D
                           3, D
                           2, and D
                           1 are the demands for Young, Mature, and Old products, respectively. The demand for each age in each period is a discrete, nonnegative random variable. Demands may have joint distributions allowing dependencies among requests for different ages of products, but our analysis is carried out assuming independent and identically distributed (iid) demand distributions. Demand processes that are not iid still fit our modeling framework, but they would make the derivation of transition probabilities and one-period cost expressions more complicated.

Our basic inventory allocation policy is to satisfy demand that has inventory of its correct age first. For example, suppose the state of inventory before demand is (3, 2, 1), in which there are 3 New, 2 Mature and 1 Old in stock, and the demand stream is (4, 1, 2), which consists of demand for 4 New, demand for 1 Mature and demand for 2 Old. Before any substitution happens, 3 New inventory will be used for New demand (3 out of 4), 1 Mature inventory will be used for 1 Mature demand and leave 1 for substitution; and 1 Old inventory will be used for 1 Old demand (1 out of 2). However, one question remains: what happens at times of shortage? We define a set of rules and a simple heuristic to aid decision making in this context. Haijema et al. (2009) suggest that an appropriate mix of FIFO and LIFO or other rules should be considered to balance shortages, outdating, and age of platelets used. This is what we investigate.

We allocate items according to the following rule: After inventory on hand of a specific age is used to satisfy demand for product of that age, if there is any excess (unfulfilled) demand and excess inventory, then excess demand of Young gets priority over excess demand of Mature which has priority over excess demand for Old. With respect to issuance decisions, after inventory is used to satisfy demand of its own age, any excess demand is fulfilled from the excess on-hand inventory of the “closest older blood first,” while maintaining the allocation priorities. Discussion of how our model generalizes LIFO, FIFO, and the model of Haijema et al. (2007) is presented in Appendix A.

The goal of our substitution and priority rules is to satisfy demand with minimum mismatches. While the resulting allocation may not be cost-optimal in each period, it has two advantages: (i) it is simple enough to be used without having to solve optimization problems, and (ii) it reduces to the classical LIFO and FIFO issuance rules for demand that is not age-differentiated. In contrast, Karaesmen and van Ryzin (2004) solve an optimization problem to determine the optimal allocation of substitutable inventory to demand classes. This type of optimization could likewise be done in our setting, but at the cost of significantly complicating the model and its analysis because the products age in our problem, unlike those of Karaesmen and van Ryzin (2004).

One could also formulate our problem as a cost-minimization subject to a constraint on the percentage of substitution allowed, for example that the substitution ratio of young demand is no greater than 5 percent. Solving MDPs of this type, with explicit constraints, may be done through the use of disjunctive programming – see Nadar, Akan, and Scheller-Wolf (2014) and Bhandari, Scheller-Wolf, and Harchol-Balter (2008) for example. The cost minimization obviously yields the lowest possible cost, but the constrained model might be more applicable in situations where such limits on substitution need to be explicitly enforced.

In this section we modify the allocation policy described above through the use of a critical level policy. In this heuristic, we use c to denote the protection level: Satisfaction of Old demand will only occur (i) using Old items, or (ii) after all New and Mature demand is satisfied using Mature items; or then (iii) using New items only if there are more than c items. Note that we place no limit on any other substitution.

In their age-differentiated demand models, Deniz et al. (2010) and Goh et al. (1993) consider both restricted and unrestricted forms of substitution: For instance, the unrestricted model of Deniz et al. (2010) uses substitution as a recourse action and all excess supply of Old (Young) can fulfill the excess demand of Young (Old). Their restricted forms use only one-way substitution, using Old goods to fulfill the demand for Young or vice versa. Unrestricted substitution corresponds to a critical level policy with c = 0; not allowing any Young to Old substitution corresponds to a critical level policy with c = S. For N = 2, numerical experiments in Deniz et al. (2007) show that restricted substitution, or rationing, can be more economical than unrestricted substitution. In comparison to Deniz et al. (2007) and Deniz et al. (2010), we determine the optimal critical level for the youngest products, for N = 3. Note that the OIR policy introduced by Duan and Liao (2013) and our protection level policy are similar in their effect on inventory age, but differ in their abilities to treat age-differentiated demand.

Since our problem has a shelf life of three periods (N = 3), there is only one protection level (c) in our model. This is because the “aging” of inventory in our problem introduces a different dynamic from rationing problems studied in the literature for non-perishable products. Specifically, we only protect Young inventory from excess Old demand. This is because, for example, if we had protection for Mature against excess Old demand then the protected Mature inventory would become Old in the following period anyway. In this case it is better to substitute leftover Mature for excess Old today than to just let it become Old tomorrow. Thus having a critical level for Mature is not necessary in a stationary environment. (The same reasoning holds for why it does not make sense to protect New inventory from excess Mature demand.)

Rationing is common in classical airline revenue management, see, for example, Talluri and van Ryzin (2004), where inventory is rationed to protect it from customers who book cheap tickets in advance, reserving it for customers who may book higher-priced tickets later. Note that the inventory that is rationed is, in fact, the seat capacity on a flight; there is no aging of products. Use of a critical level policy to limit the amount of substitution is also common in the spare parts literature, see, for example, Veinott (1965), Topkis (1968), Deshpande, Cohen, and Donohue (2003), Arslan, Graves, and Roemer (2007), Dekker, Hill, Kleijn, and Teunter (2002), Kranenburg and van Houtum (2007), Zhao, Ryan, and Deshpande (2008). In this research stream there are multiple prioritized demand streams, a single non-perishable product in inventory, and the goal is to set a reorder level along with a critical number; when the inventory falls below this critical number the lower priority demand will not be served. For the first time, we introduce a critical level inventory policy to a multi-period, single-location, single-product, perishable inventory model with three periods of shelf life.

In their review of hospital best practices, Stanger et al. (2012) emphasize that the drivers of good inventory performance are not the use of complex inventory models and algorithms but the quality of transfusion laboratory staff, transparency of the inventory, and simple management procedures. Our goal is to design such transparent and simple, yet effective, procedures. Our contributions to the perishable inventory management literature are two-fold: (i) We extend the analysis of the fixed-order quantity replenishment policy to three periods, from two; and (ii) We introduce a critical level rationing policy to the blood platelet inventory management literature. Using extensive computational experiments, we test the performance, effectiveness, and sensitivity of the fixed-order quantity replenishment and critical level rationing policies to problem parameters. This enables us to establish the conditions under which inventory management of blood platelets, an expensive but vital resource, would benefit from using such a policy.

Our sequence of events is as follows: (i) The state is observed, i.e., the amount of on-hand inventory of each age prior to replenishment. (ii) The order is placed: Young items are replenished, incurring unit replenishment costs. (iii) Demand is realized. (iv) Inventory is allocated and issued, incurring substitution and expediting costs. (v) Any remaining on-hand inventory is aged: Young becomes Mature, Mature becomes Old, and Old outdates, incurring inventory and outdating costs.

We assume an infinite supply of platelets initially; we analyze the case of a system with limited supply in Section 6. The (non-negative) unit shortage and inventory holding costs of a product that has remaining lifetime of n periods are denoted by pn
                      and hn
                     , respectively, for n = 1, 2, 3. The (positive) unit outdating cost is m, which, in Haijema et al. (2007); 2009), only includes the production cost of blood platelets. They refer to using older products to satisfy demand for younger goods as mismatch; according to the industry example in Haijema et al. (2007); 2009) from a Dutch blood bank, such substitution is very common in practice. We denote (positive or negative) substitution/mismatch costs as αAB
                      when substituting inventory of remaining lifetime A for demand of B. These costs are, in general, difficult to estimate.

In Haijema et al. (2007), these substitution/mismatch costs are considered to be no more than shortage costs and no less than outdating costs. In the case of blood centers that have age-based service commitments in their contracts with hospitals, the substitution costs can be determined/approximated from the contract parameters. In addition, once the ongoing medical studies to determine the effect of age of blood products on patients’ short- and long-term well being are completed, more information about the costs associated with mismatch will be available. An extensive sensitivity analysis in Section 5 shows the effect of these mismatch costs on system performance. The resulting set of substitution options is AB = {YO, YM, MY, MO, OY, OM} where Y, M, and O stand for Young, Mature, and Old, respectively. Note that the amount of inventory issued, 
                        
                           
                              x
                              
                                 A
                                 B
                              
                              t
                           
                           ,
                        
                      for A, B = Y, M, O, in period t can be computed easily for any pair of inventory and demand vectors, given the allocation and issuance rules.

We use two different heuristics to manage inventory. We call the first heuristic NIS: the NIS policy replenishes S Young units in every period and uses the issuance and allocation rule (without rationing) that was described in Section 2.2. We denote the second heuristic as (S,c); this policy replenishes S Young units in every period and uses a critical level of c to ration Young inventory. Deniz et al. (2010) introduced NIS, which is equivalent to (S,0).

When the order quantity is S and N = 3, the state vector is composed of the amount of Mature and Old items in stock at the start of a period. We express this as (i, j), where i and j are the inventory levels of Mature and Old blood platelets, respectively. With discrete demand and a fixed order quantity of S, both NIS and (S,c) heuristics follow discrete-time Markov Chains (MC) with (S + 1)2 states. Since these discrete-time MCs are positive recurrent, we can determine the limiting probabilities, πij
                      for all i, j = 0, 1, ..., S for both heuristics. (The πij
                     ’s are well defined as demand is iid.) Then, we can represent the expected cost of a heuristic as

                        
                           (1)
                           
                              
                                 
                                    ∑
                                    
                                       i
                                       =
                                       0
                                    
                                    S
                                 
                                 
                                    ∑
                                    
                                       j
                                       =
                                       0
                                    
                                    S
                                 
                                 
                                    π
                                    
                                       i
                                       j
                                    
                                 
                                 
                                    C
                                    
                                       i
                                       j
                                    
                                 
                              
                           
                        
                     where Cij
                      is the expected one-period cost of state (i, j) for that heuristic. We derive expressions for the limiting probabilities and Cij
                      for each state (i, j) in Appendices Appendix B–Appendix E.

In our extensive computational study, we compare the NIS and (S,c) heuristics to two others: 1D and 2D. The 1D policy, which is the traditional policy in the perishable inventory literature, uses one order-up-to level for total inventory (Karaesmen et al., 2011; Nahmias, 2011; Pierskalla, 2004). The 2D policy takes both total inventory and youngest platelet inventory into account (Haijema et al., 2007). We denote the order-up-to level of 1D by 
                        
                           S
                           
                              1D
                           
                           T
                        
                     . The 2D policy is characterized by two order-up-to levels: one for the total inventory, denoted 
                        
                           
                              S
                              
                                 2
                                 D
                              
                              T
                           
                           ,
                        
                      and one for the Young inventory, denoted 
                        
                           S
                           
                              2
                              D
                           
                           Y
                        
                     . The order quantities of 1D and 2D in each period are 
                        
                           max
                           (
                           0
                           ,
                           
                              S
                              
                                 1
                                 D
                              
                              T
                           
                           −
                           i
                           −
                           j
                           )
                        
                      and 
                        
                           max
                           (
                           
                              S
                              
                                 2
                                 D
                              
                              Y
                           
                           ,
                           
                              S
                              
                                 2
                                 D
                              
                              T
                           
                           −
                           i
                           −
                           j
                           )
                           ,
                        
                      respectively, in state (i, j). The 2D policy in which 
                        
                           
                              S
                              
                                 2
                                 D
                              
                              Y
                           
                           =
                           
                              S
                              NIS
                           
                        
                      and 
                        
                           
                              S
                              
                                 2
                                 D
                              
                              T
                           
                           =
                           0
                           ,
                        
                      is the same as NIS with S
                     NIS. Therefore, NIS can never outperform the 2D policy.

In order to illustrate the differences among NIS, (S,c), 1D and 2D, we present a small example for three periods with a deterministic demand stream: Let (I
                     3, I
                     2, I
                     1) be the state of the inventory system after replenishment; In
                      denotes units of the product with n periods of lifetime remaining. Similarly, the demand stream is denoted as (D
                     3, D
                     2, D
                     1). In this example, our initial inventory state is (5,3,1). The demand stream is (3,2,1) for the first day, (1,4,3) for the second day and (0,0,0) for the third day. In NIS, S = 5; in (S,c), S = 5 and c = 2; in 1D, 
                        
                           
                              S
                              
                                 1
                                 D
                              
                              T
                           
                           =
                           9
                        
                     ; and in 2D 
                        
                           
                              S
                              
                                 2
                                 D
                              
                              T
                           
                           =
                           9
                        
                      and 
                        
                           
                              S
                              
                                 2
                                 D
                              
                              Y
                           
                           =
                           5
                        
                     . Table 1
                      shows how the inventory levels for each policy change over 3 days. On the second day, (S,c) prevents substitution of two leftover Young items from satisfying excess Old demand; those two protected units age and become Mature at the beginning of day 3. As for 1D and 2D, 2D orders five Young units at the beginning of the third day because max[5,9 − 9] = 5. On the other hand, 1D does not order any Young units at the beginning of the third day because 
                        
                           
                              S
                              
                                 1
                                 D
                              
                              T
                           
                           =
                           9
                           −
                           0
                           −
                           0
                           =
                           9
                        
                     .

In this section we evaluate the effectiveness of the heuristics introduced in the previous section. The fundamental questions we seek to answer are how the different heuristics manage the different cost components (as well as the total cost). We also seek to understand how the relative performance of the heuristic policies change as demand composition by age and demand priorities change.

We first discuss how the optimal parameters for NIS and (S,c) policies are computed: We use a simple line search for NIS to determine the optimal replenishment quantity for Young units. For (S,c), we were not able to prove or disprove any structural properties of the expected cost function, such as convexity or monotonicity. However, our extensive computational experiments showed that the optimal value of S for (S,c) is always smaller than or equal to the optimal value of S for NIS. Hence we use the optimal S for NIS as an upper bound for the optimal S for (S,c). This observation significantly reduced the complexity compared to exhaustive search for S of (S,c). As for c, we use exhaustive search. Similarly we determine optimal 
                        
                           S
                           
                              1D
                           
                           T
                        
                      for 1D and 
                        
                           (
                           
                              S
                              
                                 2
                                 D
                              
                              T
                           
                           ,
                           
                              S
                              
                                 2
                                 D
                              
                              Y
                           
                           )
                        
                      for 2D by exhaustive search.


                     Table 2
                      summarizes the unit cost values given in Haijema et al. (2007). Recall that we modify their model to fit our framework: We assume that there are three age-differentiated demand streams instead of two. Nevertheless we initially adopt their costs. Their “mismatching cost” represents substitution costs in our model; αAB
                      = 200 for all A, B = {Y, M, O}. Moreover, all shortage costs are the same for all ages (p
                     3 = p
                     2 = p
                     1 = 750). The average cost of producing a unit of platelets by plateletpheresis was $538.72 in 2007 (AABB, 2007), which is below this shortage cost. Additionally, m represents the outdating cost if Old platelets are not used and become medical waste. Haijema et al. (2007) use 150 Euros for the outdating cost. However, the production cost of platelets differs in the US and is $538.72 on average (AABB, 2007). We set m = 150 as a benchmark, and analyze the role of m in Section 5. For the demand process, we choose a Poisson process for all demand streams with mean 7, 2 and 1 for Young, Mature and Old demands, respectively: Haijema et al. (2007) report 70 percent of demand the blood bank in their study is for “Young” and 30 percent is for “Any” blood platelets. Since our modeling framework separates “Any” demand into Mature and Old platelets, we initially choose 20 percent for Mature and 10 percent for Old platelets. Later we will change our demand parameters to get insights about the impact of demand structure on the protection level policy.

The first three rows of Table 3
                      represent the optimal policy parameters and the minimum expected cost for each heuristic. From the numerical study, we can see that (S,c) is not beneficial; it performs worse than 2D and is no better than NIS. The optimal c under the (S,c) policy is equal to 0, because the shortage costs, p
                     1, p
                     2 and p
                     3, are all equal. This result is not surprising because there is no difference between the three age-differentiated demand streams (p
                     3 = p
                     2 = p
                     1 = 750) in terms of priority to fulfill the demand and thus there is no benefit in reserving Young platelets to satisfy future excess demand of Mature.

The major cost differences between the NIS and 1D are outdating and substitution costs. We report the cost of substitution based on the type of mismatch: “younger units used” means demand for an older product was fulfilled by on-hand inventory of a younger ones, “older units used” means the reverse. Since both 1D and 2D policies take the total inventory level into account, unlike NIS, they tend to lead to lower levels of inventory but higher amounts of substitution (as opposed to having the right age available). Therefore, we observe higher substitution costs and lower outdating and inventory holding costs in the 1D and 2D policies. Note that 2D has less substitution than 1D because of the extra order-up-to level for the youngest platelets, which increases inventory and reduces substitution.

In order for a “critical level” type policy to be effective, there must be different priorities across different demand streams. Furthermore, as the demands from organ transplants and oncology patients are typically more critical than those from traumatology or elective surgery patients, it is reasonable to assume p
                     3 > p
                     2 > p
                     1. (In practice, if shortages occur, hospitals need to follow a contingency plan that includes only serving the most critical patients, contacting registered platelet donors, and expediting production of blood platelets; Health (2006).) Therefore, in our second simulation experiment, we choose p
                     3 = 1000, p
                     2 = 750 and p
                     1 = 300; the associated results are presented in Table 4
                     . In this case the (S,c) policy outperforms all other policies.

The protection level policy has the highest holding and outdating costs because protected leftover Young inventory is held rather than used. However, it has lower substitution and shortage costs, and lower total costs as well. The fact that it incurs lower substitution costs is intuitive, since reserving the youngest platelets limits substitution. However, the fact that it generates lower shortage costs is not obvious, since rejecting excess Old demand incurs shortage costs. In fact, (S, c) with c = 2 has a higher shortage cost stemming from Old items than does NIS. But the protection level policy leads to lower shortage costs for both Young and Mature items. (Shortage costs for Young decrease because the protected items remain in the system as Mature and may be used, as substitutes, to satisfy Young demand in the following period.) Since the cost of not serving organ transplant and cancer patients is higher than not serving traumatology and elective surgery patients, the protection level policy decreases overall shortage costs.

We next investigate the robustness of our results to differences in the age composition of demand; for example, some hospitals in the US serve primarily oncology patients. Tables 5 and 6
                     
                      show comparisons of the costs of the four heuristics in five different demand settings under two different shortage cost settings. Results for p
                     3 = p
                     2 = p
                     1 = 750 appear in Table 5. As there is no incentive to protect if the age-differentiated demand streams are not prioritized, the protection level is zero. Results for p
                     3 = 1000, p
                     2 = 750 and p
                     1 = 300 are presented in Table 6. In this case, for all demand structures, (S,c) with a positive protection level outperforms other policies because of prioritized demand. The cost gap between (S, c) and other policies increases as the proportion of demand for fresher platelets increases. This result is intuitive because the penalty for losing high-risk patients who demand the youngest items is high. In addition to the age composition of demand, we also varied the total demand (from 10 to 100) and the ratio of demand for New to demand for Old (from 10 to 0.1), keeping our age-differentiated penalty costs (p
                     3 = 1000, p
                     2 = 750, p
                     1 = 300). Over all these cases the difference between the cost of the (S, c) policy and the 2D policy varied between 0.83 percent and 3.91 percent, with computation times that were all within several minutes (using a 2.3 GHz Intel Core i5 MacBook Pro).

These experiments show that a protection level policy may be beneficial for a blood bank manager if the cost for losing demand from high-risk patients is high; a protection level policy can decrease the substitution and shortage costs significantly but tends to increase the outdating and holding costs. However, the manager has no incentive to protect if there is no prioritization of high-risk patients over elective surgeries or traumatology patients. In this case, the 1D and 2D policies will perform better than NIS.

In the previous section we observed that the protection level policy tends to be superior to the other three heuristics when there are prioritized shortage costs, i.e., p
                     3 > p
                     2 > p
                     1. To explore the relative importance of these and other cost parameters, we perform sensitivity analysis.

In our base scenario, we use the modified shortage cost data shown in Table 2 with p
                     3 = 1000, p
                     2 = 500 and p
                     1 = 300. The demand process is the same as in our original experiment, Poisson with mean 7 for Young, 2 for Mature and 1 for Old. We ran our experiments with higher demand cases but the main observations remained unchanged. The substitution costs vary from 0 to 750, the holding costs from 0 to 1000, the shortage costs from 0 to 1500, and the outdating cost from 0 to 750. In this section, we focus on providing insights on the effect of cost parameters. We extend our analysis to limitations on the ordering quantity, S, in Section 6. In both cases we seek to answer the question: When might protecting leftover Young against excess demand for Old be beneficial for the blood bank manager?


                     Tables 7 and 8
                     
                      show the effect of shortage cost parameters (p
                     3 and p
                     1). In Table 7, (S,c) outperforms other policies in each scenario even if p
                     3 = 0, because p
                     2 is still significantly higher than p
                     1. In other words, it is more economical for leftover Young to be protected in a period to satisfy excess demand of Mature in the next period. Moreover, the cost gap between (S,c) and other three heuristics increases (decreases) as p
                     3 increases (decreases). This result is intuitive. The very slight increase in total cost of the (S, c) policy as p
                     3 grows from 300 to 1500 shows that even at p
                     3 = 300 the (S, c) policy is capturing nearly all of the Young demand. Sensitivity analysis for p
                     2 shows similar results that the (S, c) heuristic outperforms the other policies. In sensitivity analysis of both p
                     3 and p
                     1, 1D has the worst performance among the four policies.


                     Table 8 shows sensitivity with respect to p
                     1. For these experiments, (S, c) has still the best performance, except for the scenario with p
                     1 = 1500. In that case, 2D outperforms the other policies, since the shortage cost of Old items is now highest. However, the cost gap between 2D and (S, c) is very small. We looked into higher values of p
                     1 in our sensitivity analysis, and found that this cost gap between 2D and (S, c) increases significantly and c declines to zero as D
                     1 increases. This result is expected because if shortages of Old are significantly more expensive than those of Young or Mature, there is no reason to protect leftover Young for future use.


                     Table 9
                      shows the effect of the outdating cost (m). When the outdating cost is zero, the 1D policy has the worst performance. There is also no need to protect leftover Young because one orders enough to minimize the shortage costs. On the other hand, 2D outperforms other policies when the unit outdating cost is high, and (S, c) and NIS are even significantly outperformed by 1D when the unit outdating cost is very high. However, (S, c) outperforms other policies in three cases (m = 50, 100 and 150). This result is intuitive since the outdating cost is a major disincentive for the manager to protect leftover Young for future use, as these protected items may eventually outdate. If the outdating cost is too high, then the optimal choice is c* = 0 for the (S, c) policy.


                     Table 10
                      shows the effect of substitution cost from leftover Young to excess Old. We only report the effect of αYO
                     , because all substitution cost parameters have similar impact on the relative performance of the heuristics: the cost gap between (S, c) and the other three policies increases (decreases) as the substitution cost increases (decreases); (S, c) outperforms the other policies when the substitution cost is large enough.

The effect of the inventory holding cost parameter (h
                     3) is shown in Table 11
                     . The behavior of the other holding cost, h
                     2, is the same as the sensitivity analysis of h
                     3. (S, c) outperforms other policies if h
                     3 (h
                     2) is low; but 2D outperforms the other policies if h
                     3 (h
                     2) is relatively high compared to other cost parameters. Particularly, c* = 0 for (S, c) when h
                     3 = 100 or 1000 in Table 11. These results are intuitive since (S, c) carries more inventory by protecting leftover Young for future use. However, holding cost is not a major factor in blood platelet inventory management (Haijema et al., 2007); hence lower values of h
                     3 and h
                     2 are more realistic in practice.

Summarizing our sensitivity analysis on the cost parameters, (S, c) performs better with (i) low values of m, p
                     1, h
                     3 and h
                     2, and (ii) high values of p
                     3, p
                     2 and (iii) high values of substitution costs. The performance differences between (S, c) and NIS are associated with the differences in the expected costs of inventory holding, outdating, and substitution. By design, (S, c) incurs more outdates because it carries more inventory compared to NIS. On the other hand, the NIS policy incurs higher shortage and substitution costs than (S, c). As for the performance comparison between (S,c) and the 1D and 2D policies: the 1D and 2D policies typically incur higher substitution costs and lower outdating costs than (S,c). Overall, the heuristic that has the lowest expected cost is determined based on the magnitude of these costs.

Our extensive computational experiments show that the optimal value of S for (S,c) is always smaller than or equal to the optimal S for NIS. This result is robust under higher demand streams and different settings of cost parameters. Thus we conjecture that the optimal S of NIS is an upper bound for the optimal S of (S,c). Use of this observation dramatically reduces our search for the optimal (S,c), as we can use the optimal S of NIS as an initial value of the order-up-to level in (S,c). Possible intuition for this result is that for the same S, (S,c) carries more inventory on average due to rationing. In addition NIS may order more than (S,c) because more inventory of Young is used as insurance against the risk of excessive demand from organ transplants or cancer patients in the next period.

As for the protection level, c, there is no clear structure. Even though the protection level seems constant in many sensitivity analysis experiments, we did observe different c values in cases with higher demands. When we analyze the role of substitution cost from Young to Old, αYO
                     , analogous to Table 10, (S,c) still outperforms other heuristics in higher demand cases (i.e., total demand has a Poisson distribution with mean 30). In that case, c = 4, 1, 2, 2, 2, 2 for αYO
                      = 0, 50, 100, 200, 500, 750. Thus the behavior of c is neither decreasing nor increasing with respect to any parameter in the model: The protection level, c, depends on all the factors, including demand distributions, outdating, ordering, and substitution costs. That is the reason the optimal (S,c) pair is determined by exhaustive search.

So far we have assumed there is no limit on the replenishment quantity of blood, S. However, blood platelet supply can be limited in practice. Landro (2009) reports a decrease in overall blood collection of 27 percent of US blood centers because of the swine-flu pandemic, and emphasizes blood centers’ plans to allocate blood to the sickest patients due to this reduction. More recently, Aleccia (2012) reports a strong demand for platelets during Hurricane Sandy and Williamson and Devine (2013) point out the need for better management of platelet inventories due to significant increase in demand. Therefore, we analyze the performance of the protection level policy when there is a limit on the order quantity. Specifically, we seek to find out whether protection is more or less valuable when supply is constrained.


                     Fig. 1
                      shows the regions in which (S,c) outperforms all of NIS, 1D and 2D as the capacity (supply) varies from tight to loose and substitution costs vary from low to high. The optimal S for NIS and (S,c) is subject to the constraint S ≤ capacity. In this experiment, we used the same demand stream as in Section 5: Poisson with mean 7 for Young, mean 2 for Mature and mean 1 for Old. (Our results are robust to demand scenario.) We used the following cost parameters: p
                     3 = 1000, p
                     2 = 750, p
                     1 = 300, m = 150, h
                     3 = 1 and h
                     2 = 1; we assume fixed shortage costs to focus on the substitution and capacity. On the horizontal axis in Fig. 1, the substitution cost ranges from ‘Low’ (0) to ‘Medium’ (375) to ‘High’ (750) and on the vertical axis, the capacity (S for NIS and (S,c); 
                        
                           S
                           
                              1D
                           
                           T
                        
                      for 1D; 
                        
                           S
                           
                              2D
                           
                           T
                        
                      and 
                        
                           S
                           
                              2D
                           
                           Y
                        
                      for 2D) ranges from ‘Loose’ (30) to ‘Medium’ (10) to ‘Tight’ (1). On both axises, we analyzed a continuum of capacity levels and substitution costs. In Fig. 1, the area in which (S, c) outperforms all of the other three policies is shown as the “Protection” area (in white).

The cost and supply parameters for different perishable goods and/or blood centers or hospitals at different geographic locations may differ. Centers with limited supply may typically lie in the Protection region, as the opportunity cost of using younger platelets is high. Furthermore, even if centers with a low substitution cost are generally in the No Protection region, (S,c) may become the preferred policy in case of a supply shortage (e.g., when supply is reduced due to epidemics, disasters or weather conditions). In this case protecting the youngest platelets for future use is beneficial: A hospital blood bank manager would choose to serve tomorrow’s cancer patients over today’s elective surgeries because of the high shortage cost for oncology. This, in fact, is similar to what happens when blood supply is constrained: elective surgeries are postponed. Moreover, recall that availability of the blood platelets is a major issue currently facing blood platelet supply chains (Landro, 2009). Therefore, our protection policy may be a helpful managerial tool for a hospital blood bank manager in times when she has limited supply from regional blood banks.

@&#CONCLUSION@&#

We study a discrete-time inventory system for a perishable product (i.e., blood platelets) that has distinct demand streams for product of different ages. In addition to inventory holding, outdating and shortage costs, our modeling framework includes substitution costs when a demand for a certain-aged item is satisfied with a different-aged item. We introduce the critical level policy to the perishable inventory literature. The policy enables protecting the newest items against excessive substitution to satisfy demand for older products. We model the problem as an MDP and evaluate the costs of a common heuristic replenishment policy, NIS, (with and without a protection level) against “near optimal” policies from the literature (1D and 2D). We investigate which policy yields the lowest expected cost in an extensive set of computational experiments. The main contribution of our computational study is to show that a protection level policy can improve the performance of blood platelet inventory management system under various conditions. In summary, we find that (S, c) outperforms the rest of the policies when

                        
                           •
                           outdating, holding, and shortage costs for Old items, i.e., m, h
                              2, h
                              3, p
                              1, are low;

costs of shortage and substitution for Young and Mature items, i.e., p
                              3, p
                              2, αYM, αYO, αMO, αMY, αOY, αOM
                              , are high; and/or

supply is tight.

For example, the (S, c) policy may outperform the other heuristics when the hospital blood bank manager has different shortage costs for different aged blood platelets. This is because blood platelets have 3 days of actual shelf life in practice, so protecting some of the youngest platelets for one period increases Mature inventory in the next period. This helps the blood bank manager to satisfy demand of Mature in the next period, and possibly excessive demand for Young via substitution in the next period as well. Since the protection level policy carries more inventory for the same S if c > 0, and thus has a higher outdate rate than NIS, the performance difference between the NIS and (S, c) depends mostly on the relative costs of outdating and substitution. The protection level policy’s performance against the 1D and 2D depends primarily on the substitution and shortage costs. Because both the 1D and 2D policies are more adaptive (i.e., order based on the total inventory in system), they incur higher substitution costs than the protection level policy while paying lower outdating cost. In other words, the “price of adaptiveness” of the 1D and 2D determines the value of the protection level policy to the hospital blood bank manager.

In addition to the efficient utilization of blood platelet inventories, Moroff (2008) from the American Red Cross explains another crucial issue in platelet management. He points out the substantial increase in usage of blood platelets over the last 15–20 years in the US, because of the enhanced supportive care required by cancer patients, the use of stem cell transplants, the aging population, and “aggressive medical practices.” Demand for blood platelets is likewise increasing in Europe: Condon (2006) reports an over 50 percent increase in demand between 2001 and 2006 in Ireland. Another similar demand increase for platelets recently caused critical shortages for cancer patients in Scotland (Moss, 2009). Williamson and Devine (2013) also point out worrisome projections of increasing demand for platelets in the next decade. Such shortages may also happen due to exogenous factors, in fact there was a huge shortage of platelets in East Coast during Hurricane Sandy (Aleccia, 2012), that reduced the overall platelet supply dramatically. Therefore, hospital blood bank managers may increasingly face limitations on platelet shipments from blood centers.

In such situations our protection level policy may be particularly beneficial: Protecting the youngest blood platelets for future demand needing fresher items is especially beneficial if there is a limit on order levels from regional blood banks. Additionally, hospital blood bank managers could change their allocation rules (i.e., Old inventory is first used for substitution for excess Young and Mature demand before satisfying demand for Old) due to lack of platelet supply. The current practice in hospitals is to delay elective surgeries when blood platelet supply is limited (Health, 2006).

We developed our framework by assuming demand is stationary. It is important to extend our heuristic to account for non-stationary demand: Analysis of blood center and hospital operations by Fontaine et al. (2009) shows that the average daily transfusion rate is higher during the week than during the weekend, while variations from day to day during the midweek and weekend periods are minimal. Therefore, if one is interested in developing simple and effective heuristic policies for an environment that consists of “consecutive cycles” of two distinct non-stationary periods (i.e., midweek, followed by weekend, followed by midweek), one could start with heuristics that work well for each stationary period, and then extend these heuristics to create policies that work well on cycles of these non-identical, stationary time periods. Such a modeling framework is often used in the call center literature, to deal with the switching between different “stationary” regimes, e.g., see Green, Kolesar, and Soares (2001). We view our work as an essential first step in analyzing this more complex problem.

Our focus in this paper was on heuristic policies, motivated by the fact that simple, one- or two-parameter policies are easy to implement. Replenishing the inventory using a fixed-order quantity is clearly suboptimal, but in our interactions with blood-supply professionals we found that fixed-order policies are used effectively in practice (Deniz et al., 2007). There are many practical concerns that make the use of simplified replenishment policies in blood inventory management attractive; both earlier work by Prastacos (1982) and more recent work by Fontaine et al. (2009) and Chung and Erhun (2013) discuss the complexities associated with this environment and discuss the benefits of using suboptimal yet effective heuristics. Finally, as can be seen from our computational results, the fixed-order policies we consider are competitive with the best (and more complicated) heuristics we could find in the literature, those from Haijema et al. (2007); 2009). How the fixed-ordering policy compares to other, more sophisticated replenishment rules in this environment is, unarguably, an interesting future research question.

Our study can be extended to handle other demand distributions, correlated demands, finite horizons or decentralized supply chains. Demand streams that are not iid still fit our modeling framework, but they would make the formulation of transition probabilities and one-period cost expressions more complicated. Our problem can also be extended to finite periods by dynamic programming and utilizing a state-dependent policy, which relies on the age and number of leftover inventory, as well as the time until the end of the horizon. As for extending our problem to the supply chain level, there are numerous issues regarding the design of such efficient system between blood centers and hospitals: contracts (Chung and Erhun, 2013), high perishability, criticality of patients and contingency plans in case of emergency.

Last but not least, we restricted our analysis to products with three periods of lifetime, motivated by the practical shelf lives of platelets in the US. The shelf life of blood platelets may be longer in Europe and Canada because of different testing and distribution policies. The framework and the heuristic policies introduced here can be extended to manage systems with products having N > 3 despite the increasing complexity in the derivation of the transition probabilities and the cost functions. In this case there might be more than one protection level depending on the priorities of different age groups. It is also possible to define a single critical level for an age group (e.g., to protect the youngest from all others or to protect the younger ones from the oldest). Thus an increase in shelf life leads to a proliferation of policies even within the class of critical level policies. A unified analysis of the general life-time problem and investigation of the effectiveness of critical level policies for such a problem are, undoubtedly, important future research questions.

Suppose demand of D
                     3, D
                     2, and D
                     1 for Young, Old, and Mature products, respectively, is observed in a period. Let the on-hand inventory levels of Young, Mature, and Old products be I
                     3, I
                     2, and I
                     1, respectively, at the beginning of the period. Let demand be fulfilled using the prioritization introduced in Section 2.2. The resulting allocation is described in Table C.1
                     . For instance, in Scenario 1, demand for each age exceeds the on-hand inventory of each age of product. Hence, on-hand inventory of Young, Mature, and Old are used to satisfy their own demands to the extent possible and all remaining demand is satisfied by expediting. In Scenario 2, on-hand inventory of Mature and Old exceed their respective demand levels and demand for Young exceeds the on-hand inventory of Young available. In this case, excess demand of Young is satisfied from the excess supply of Mature first and then any remaining excess demand of Young is satisfied from the excess supply of Old. In Scenario 3, Mature and Old stock out and have excess demand while Young has excess supply after satisfying its own demand. In this case, the surplus of Young is used to fulfill Mature demand and any leftover Young units are then used to satisfy excess demand of Old. There is no substitution in Scenario 4 as all ages have surplus inventory after satisfying their respective demand. In Scenario 5, excess demand of Mature is first satisfied by excess supply of Old. Any remaining excess demand is satisfied by Young. In Scenario 6, both Young and Mature have surplus after satisfying their respective demands and can be used to fulfill excess demand of Old. Based on our priority and allocation rules, the closest older age is used for substitution: Surplus of Mature is used first to satisfy excess demand of Old and, then, if there is still unfulfilled requests for Old, surplus of Young is used in this scenario. In Scenario 7, both Young and Mature stock out after satisfying their respective demand while Old has a surplus. Young has the highest priority: Surplus of Old is used for excess demand of Young first. Any leftover Old inventory is then used to satisfy excess demand of Mature. Finally, in Scenario 8, the demand for Young and Old exceed their respective on-hand inventories. In this case, the excess supply of Mature is used to satisfy the excess demand of Young first and excess demand of Old next, if possible.

The limiting probabilities, πij
                     , are formulated for a fixed order level, S, in four different subsets of the state space: (0, 0), (0, k), (k, 0) and (i, j) for 1 ≤ k ≤ S and 1 ≤ i, j ≤ S. First, π
                     00 is

                        
                           
                              
                                 
                                    
                                       
                                          π
                                          00
                                       
                                    
                                    
                                       =
                                    
                                    
                                       
                                          
                                             ∑
                                             
                                                i
                                                =
                                                0
                                             
                                             S
                                          
                                          
                                             ∑
                                             
                                                j
                                                =
                                                0
                                             
                                             S
                                          
                                          
                                             π
                                             
                                                i
                                                j
                                             
                                          
                                          
                                             
                                             [
                                             Pr
                                          
                                          
                                             (
                                             
                                                D
                                                3
                                             
                                             +
                                             
                                                D
                                                2
                                             
                                             +
                                             
                                                D
                                                1
                                             
                                             ≥
                                             S
                                             +
                                             i
                                             +
                                             j
                                             )
                                          
                                       
                                    
                                 
                                 
                                    
                                    
                                    
                                       
                                          +
                                          Pr
                                          (
                                          
                                             D
                                             3
                                          
                                          ≥
                                          S
                                          ,
                                          
                                             D
                                             3
                                          
                                          +
                                          
                                             D
                                             2
                                          
                                          ≥
                                          S
                                          +
                                          i
                                          ,
                                          
                                             D
                                             3
                                          
                                          +
                                          
                                             D
                                             2
                                          
                                          +
                                          
                                             D
                                             1
                                          
                                          <
                                          S
                                          +
                                          i
                                          +
                                          j
                                          )
                                          ]
                                          .
                                       
                                    
                                 
                              
                           
                        
                     There are two possible ways to transition from state (i, j) to state (0, 0) depending on the total demand. The first probability term in π
                     00 captures cases in which the total demand is greater than or equal to the total available inventory. The second probability term captures cases in which the total demand is less than the total available inventory. When D
                     3 ≥ S and D
                     3 + D
                     2 ≥ S + i (the first two conditions), Young and Mature inventory are sold out. Therefore, state (i, j) transitions to state (0, 0) even if there are unsold Old platelets at the end of the period because unsold Old platelet inventory outdates.

For 1 ≤ k ≤ S, the limiting probability, π
                     0k
                     , is

                        
                           
                              
                                 
                                    
                                       
                                          π
                                          
                                             0
                                             k
                                          
                                       
                                    
                                    
                                       =
                                    
                                    
                                       
                                          
                                             ∑
                                             
                                                i
                                                =
                                                k
                                             
                                             S
                                          
                                          
                                             ∑
                                             
                                                j
                                                =
                                                0
                                             
                                             S
                                          
                                          
                                             π
                                             
                                                i
                                                j
                                             
                                          
                                          
                                             
                                             [
                                             Pr
                                          
                                          
                                             (
                                             
                                                D
                                                3
                                             
                                             ≥
                                             S
                                             ,
                                             
                                                D
                                                3
                                             
                                             +
                                             
                                                D
                                                2
                                             
                                             =
                                             S
                                             +
                                             i
                                             −
                                             k
                                             ,
                                             
                                                D
                                                1
                                             
                                             ≤
                                             j
                                             )
                                          
                                       
                                    
                                 
                                 
                                    
                                    
                                    
                                       
                                          +
                                          Pr
                                          (
                                          
                                             D
                                             3
                                          
                                          ≥
                                          S
                                          ,
                                          
                                             D
                                             3
                                          
                                          +
                                          
                                             D
                                             2
                                          
                                          +
                                          
                                             D
                                             1
                                          
                                          =
                                          S
                                          +
                                          i
                                          −
                                          j
                                          −
                                          k
                                          ,
                                          
                                             D
                                             1
                                          
                                          >
                                          j
                                          )
                                          ]
                                          .
                                       
                                    
                                 
                              
                           
                        
                     There are two possible ways to transition from (k, j) to (0, k) for 1 ≤ k ≤ S and 0 ≤ j ≤ S depending on whether there is substitution for Old platelets. The two probability expressions in π
                     0k
                      capture these two types of transitions. Note that there is no transition from state (i, j) to (0, k) for 0 ≤ i < k and 1 ≤ k ≤ S because transition to state (0, k) requires at least k units of Mature at the beginning of a period.

For 1 ≤ k ≤ S, the limiting probability, π
                     
                        k0, is

                        
                           
                              
                                 
                                    
                                       
                                          π
                                          
                                             k
                                             0
                                          
                                       
                                    
                                    
                                       =
                                    
                                    
                                       
                                          
                                             ∑
                                             
                                                i
                                                =
                                                0
                                             
                                             S
                                          
                                          
                                             ∑
                                             
                                                j
                                                =
                                                0
                                             
                                             S
                                          
                                          
                                             π
                                             
                                                i
                                                j
                                             
                                          
                                          
                                             
                                             [
                                             Pr
                                          
                                          
                                             (
                                             
                                                D
                                                3
                                             
                                             =
                                             S
                                             −
                                             k
                                             ,
                                             
                                                D
                                                2
                                             
                                             +
                                             
                                                D
                                                1
                                             
                                             ≤
                                             i
                                             +
                                             j
                                             ,
                                             
                                                D
                                                2
                                             
                                             ≥
                                             i
                                             )
                                          
                                       
                                    
                                 
                                 
                                    
                                    
                                    
                                       
                                          +
                                          Pr
                                          (
                                          
                                             D
                                             3
                                          
                                          =
                                          S
                                          −
                                          k
                                          ,
                                          
                                             D
                                             2
                                          
                                          +
                                          
                                             D
                                             1
                                          
                                          =
                                          i
                                          +
                                          j
                                          ,
                                          
                                             D
                                             2
                                          
                                          <
                                          i
                                          )
                                       
                                    
                                 
                                 
                                    
                                    
                                    
                                       
                                          +
                                          Pr
                                          (
                                          
                                             D
                                             3
                                          
                                          +
                                          
                                             D
                                             2
                                          
                                          +
                                          
                                             D
                                             1
                                          
                                          =
                                          S
                                          +
                                          i
                                          −
                                          j
                                          −
                                          k
                                          ,
                                          
                                             D
                                             3
                                          
                                          <
                                          S
                                          −
                                          k
                                          )
                                          ]
                                       
                                    
                                 
                              
                           
                        
                     representing three possible ways to transition from state (i, j) to state (k, 0) for 1 ≤ k ≤ S and 0 ≤ i, j ≤ S. The demand for Young items can be exactly S − k and no Young items are used as substitutes, while Mature units are all sold out to satisfy the demand for Mature and/or Old units. If D
                     3 < S − k, then S − k − D
                     3 Young items must be sold as substitutes.

The remainder of the limiting probabilities, πij
                      for 1 ≤ i, j ≤ S, are calculated as

                        
                           
                              
                                 
                                    
                                       
                                          π
                                          
                                             i
                                             j
                                          
                                       
                                    
                                    
                                       =
                                    
                                    
                                       
                                          
                                             ∑
                                             
                                                k
                                                =
                                                j
                                             
                                             S
                                          
                                          
                                             ∑
                                             
                                                l
                                                =
                                                0
                                             
                                             S
                                          
                                          
                                             π
                                             
                                                k
                                                l
                                             
                                          
                                          
                                             
                                             [
                                             Pr
                                          
                                          
                                             (
                                             
                                                D
                                                3
                                             
                                             =
                                             S
                                             −
                                             i
                                             ,
                                             
                                                D
                                                2
                                             
                                             =
                                             k
                                             −
                                             j
                                             ,
                                             
                                                D
                                                1
                                             
                                             ≤
                                             l
                                             )
                                          
                                       
                                    
                                 
                                 
                                    
                                    
                                    
                                       
                                          +
                                          Pr
                                          (
                                          
                                             D
                                             3
                                          
                                          =
                                          S
                                          −
                                          i
                                          ,
                                          
                                             D
                                             1
                                          
                                          +
                                          
                                             D
                                             2
                                          
                                          =
                                          k
                                          +
                                          l
                                          −
                                          j
                                          ,
                                          
                                             D
                                             1
                                          
                                          >
                                          l
                                          )
                                          ]
                                          .
                                       
                                    
                                 
                              
                           
                        
                     Note that there is no transition from state (k, l) to (i, j) for 0 ≤ k < j and 0 ≤ l ≤ S because at least j units of Mature platelet inventory are needed at the beginning of the current period for the state to be (i, j) at the beginning of the next period. This leaves only two possible ways to transition from state (k, l) to state (i, j) and transition probabilities depend on the value of Old platelet demand, D
                     1, and the resulting amount of substitution.

We derive each component of the expected cost Cij
                      given state (i, j) separately. Table C.2
                      presents the expressions for shortage (expediting), inventory holding, and outdating costs. The expected substitution costs are displayed in Table C.3
                     . Note that each cost component is a result of the starting inventory state (i, j) and our allocation rules which were summarized in Table C.1.

We next discuss how our three-period model and allocation rules generalize FIFO and LIFO. Suppose the demand is not age differentiated and LIFO is preferred for issuing inventory. Then, in each period, we can aggregate all the demand and record it as the demand for Young, leaving D
                     2 = 0 and D
                     1 = 0. In that case, only Scenarios 2 and 4 in Table C.1 are feasible. The allocations for these two scenarios show that the inventory is issued starting from the youngest units first in our model; this is exactly LIFO issuance. Similarly, if the demand is not age-differentiated and FIFO is preferred, then we aggregate the demand in each period and record it as the demand for Old. This leaves Scenarios 4 and 5 as the only relevant ones and shows that our allocation issues inventory starting from the oldest units first, as desired by FIFO.

The age-differentiated demand model of Haijema et al. (2009) involves demand for Young and Any age. In our model, demand for Any can be represented by recording this type of demand as the demand for Mature or Old, leaving D
                     1 = 0 or D
                     2 = 0, respectively. When the demand for Any is recorded as the demand for Mature, then Scenarios 2,4,5, and 7 of Table C.1 are feasible. In this case, the demand for Any is satisfied by LIFO (with inventory of Mature used first, followed by Old next) while excess demand of Young gets priority over the demand for Any in receiving any excess inventory of Old. When the demand for Any is recorded as the demand for Old, then Scenarios 2,4,6, and 8 of Table C.1 are feasible. In this case, the demand for Any is fulfilled by FIFO.

Comparing c = 0 and c > 0, the limiting probabilities of all the states are the same except for (i, 0) with 0 ≤ i ≤ c because in other states protecting Young units against excess demand of Old has no effect on the composition of inventory in future periods. When c > 0, the limiting probability of state (0, 0) is

                        
                           
                              
                                 
                                    
                                       
                                          π
                                          00
                                       
                                    
                                    
                                       =
                                    
                                    
                                       
                                          
                                             ∑
                                             
                                                i
                                                =
                                                0
                                             
                                             S
                                          
                                          
                                             ∑
                                             
                                                j
                                                =
                                                0
                                             
                                             S
                                          
                                          
                                             π
                                             
                                                i
                                                j
                                             
                                          
                                          
                                             
                                             [
                                             Pr
                                          
                                          
                                             (
                                             
                                                D
                                                3
                                             
                                             ≥
                                             S
                                             ,
                                             
                                                D
                                                2
                                             
                                             +
                                             
                                                D
                                                1
                                             
                                             ≥
                                             i
                                             +
                                             j
                                             )
                                          
                                       
                                    
                                 
                                 
                                    
                                    
                                    
                                       
                                          +
                                          Pr
                                          (
                                          
                                             D
                                             3
                                          
                                          <
                                          S
                                          ,
                                          
                                             D
                                             3
                                          
                                          +
                                          
                                             D
                                             2
                                          
                                          ≥
                                          S
                                          +
                                          i
                                          )
                                       
                                    
                                 
                                 
                                    
                                    
                                    
                                       
                                          +
                                          Pr
                                          (
                                          
                                             D
                                             3
                                          
                                          ≥
                                          S
                                          ,
                                          
                                             D
                                             2
                                          
                                          ≥
                                          i
                                          ,
                                          
                                             D
                                             2
                                          
                                          +
                                          
                                             D
                                             1
                                          
                                          <
                                          i
                                          +
                                          j
                                          )
                                          ]
                                          .
                                       
                                    
                                 
                              
                           
                        
                     Note that the transition from state (i, j) to (0, 0) simply depends on the total demand of Young and Old platelets when D
                     3 ≥ S. Since there is a positive protection level in the model, transition to state (0, 0) is affected when D
                     3 ≤ S. Therefore, D
                     3 + D
                     2 ≥ S + i ensures that there is no leftover Young platelet inventory even with a positive protection level.

Considering the transition to state (k, 0) for 1 ≤ k < c, no Young units are used to satisfy excess demand of Old because the number of Young units remaining – after satisfying its own demand of D
                     3 and the excess demand of Mature – is less than c. Then π
                     
                        k0, for 1 ≤ k < c, is

                        
                           
                              
                                 
                                    
                                       
                                          π
                                          
                                             k
                                             0
                                          
                                       
                                    
                                    
                                       =
                                    
                                    
                                       
                                          
                                             ∑
                                             
                                                i
                                                =
                                                0
                                             
                                             S
                                          
                                          
                                             ∑
                                             
                                                j
                                                =
                                                0
                                             
                                             S
                                          
                                          
                                             π
                                             
                                                i
                                                j
                                             
                                          
                                          
                                             
                                             [
                                             Pr
                                          
                                          
                                             (
                                             
                                                D
                                                3
                                             
                                             =
                                             S
                                             −
                                             k
                                             ,
                                             
                                                D
                                                2
                                             
                                             <
                                             i
                                             ,
                                             
                                                D
                                                2
                                             
                                             +
                                             
                                                D
                                                1
                                             
                                             =
                                             i
                                             +
                                             j
                                             )
                                          
                                       
                                    
                                 
                                 
                                    
                                    
                                    
                                       
                                          +
                                          Pr
                                          (
                                          
                                             D
                                             3
                                          
                                          =
                                          S
                                          −
                                          k
                                          ,
                                          
                                             D
                                             2
                                          
                                          +
                                          
                                             D
                                             1
                                          
                                          ≤
                                          i
                                          +
                                          j
                                          ,
                                          
                                             D
                                             2
                                          
                                          ≥
                                          i
                                          )
                                       
                                    
                                 
                                 
                                    
                                    
                                    
                                       
                                          +
                                          Pr
                                          (
                                          
                                             D
                                             3
                                          
                                          +
                                          
                                             D
                                             2
                                          
                                          +
                                          
                                             D
                                             1
                                          
                                          =
                                          S
                                          +
                                          i
                                          −
                                          j
                                          −
                                          k
                                          ,
                                          
                                             D
                                             3
                                          
                                          <
                                          S
                                          −
                                          k
                                          ,
                                          
                                             D
                                             2
                                          
                                          >
                                          i
                                          )
                                       
                                    
                                 
                                 
                                    
                                    
                                    
                                       
                                          +
                                          Pr
                                          (
                                          
                                             D
                                             2
                                          
                                          >
                                          i
                                          ,
                                          
                                             D
                                             1
                                          
                                          >
                                          j
                                          ,
                                          
                                             D
                                             3
                                          
                                          +
                                          
                                             D
                                             2
                                          
                                          =
                                          S
                                          +
                                          i
                                          −
                                          k
                                          )
                                          ]
                                          .
                                       
                                    
                                 
                              
                           
                        
                     In this equation, the first term captures demand outcomes in which there is only substitution from surplus of Mature to excess demand of Old, with i − D
                     2 units of Mature platelet inventory being used for substitution. In contrast to the first term, the surplus of Old is used by excess demand of Mature in the second term of the equation. As for the third term, the surplus of Young beyond k is used to satisfy excess demand of Mature because there is no protection of Young against Mature. Finally, the last term is almost the same as the third term except for excess demand of Old; no Young units are substituted for Old because k < c.

The transition to state (c, 0) is very similar to the transition to state (k, 0) for 1 ≤ k < c:

                        
                           
                              
                                 
                                    
                                       
                                          π
                                          
                                             c
                                             0
                                          
                                       
                                    
                                    
                                       =
                                    
                                    
                                       
                                          
                                             ∑
                                             
                                                i
                                                =
                                                0
                                             
                                             S
                                          
                                          
                                             ∑
                                             
                                                j
                                                =
                                                0
                                             
                                             S
                                          
                                          
                                             π
                                             
                                                i
                                                j
                                             
                                          
                                          
                                             
                                             [
                                             Pr
                                          
                                          
                                             (
                                             
                                                D
                                                3
                                             
                                             =
                                             S
                                             −
                                             c
                                             ,
                                             
                                                D
                                                2
                                             
                                             <
                                             i
                                             ,
                                             
                                                D
                                                2
                                             
                                             +
                                             
                                                D
                                                1
                                             
                                             =
                                             i
                                             +
                                             j
                                             )
                                          
                                       
                                    
                                 
                                 
                                    
                                    
                                    
                                       
                                          +
                                          Pr
                                          (
                                          
                                             D
                                             3
                                          
                                          =
                                          S
                                          −
                                          c
                                          ,
                                          
                                             D
                                             2
                                          
                                          +
                                          
                                             D
                                             1
                                          
                                          ≤
                                          i
                                          +
                                          j
                                          ,
                                          
                                             D
                                             2
                                          
                                          ≥
                                          i
                                          )
                                       
                                    
                                 
                                 
                                    
                                    
                                    
                                       
                                          +
                                          Pr
                                          (
                                          
                                             D
                                             3
                                          
                                          +
                                          
                                             D
                                             2
                                          
                                          +
                                          
                                             D
                                             1
                                          
                                          =
                                          S
                                          +
                                          i
                                          −
                                          j
                                          −
                                          c
                                          ,
                                          
                                             D
                                             3
                                          
                                          <
                                          S
                                          −
                                          c
                                          ,
                                          
                                             D
                                             2
                                          
                                          >
                                          i
                                          )
                                       
                                    
                                 
                                 
                                    
                                    
                                    
                                       
                                          +
                                          Pr
                                          (
                                          
                                             D
                                             2
                                          
                                          >
                                          i
                                          ,
                                          
                                             D
                                             1
                                          
                                          >
                                          j
                                          ,
                                          
                                             D
                                             3
                                          
                                          +
                                          
                                             D
                                             2
                                          
                                          =
                                          S
                                          +
                                          i
                                          −
                                          c
                                          )
                                       
                                    
                                 
                                 
                                    
                                    
                                    
                                       
                                          +
                                          Pr
                                          (
                                          
                                             D
                                             3
                                          
                                          +
                                          
                                             D
                                             2
                                          
                                          +
                                          
                                             D
                                             1
                                          
                                          ≥
                                          S
                                          +
                                          i
                                          −
                                          j
                                          −
                                          c
                                          ,
                                          
                                             D
                                             3
                                          
                                          <
                                          S
                                          −
                                          c
                                          ,
                                          
                                             D
                                             2
                                          
                                          ≤
                                          i
                                          )
                                          ]
                                          .
                                       
                                    
                                 
                              
                           
                        
                     Note that the first four terms of the transition probability from state (i, j) to (c, 0) are the same as the previous case, π
                     
                        k0, when k = c. The fifth term of the transition probability captures cases in which c units of leftover Young platelet inventory are protected against excess demand of Old.

Considering the expected cost expressions introduced in Appendix C, only the shortage cost of Old items, the inventory holding cost of Young items and the cost of substituting Young for Old are computed differently when c > 0. The expected one-period shortage cost for Old platelets becomes

                        
                           
                              
                                 
                                    
                                       
                                          
                                             p
                                             1
                                          
                                          E
                                          
                                             [
                                             
                                                
                                                   (
                                                   
                                                      
                                                         (
                                                         
                                                            D
                                                            1
                                                         
                                                         −
                                                         j
                                                         )
                                                      
                                                      +
                                                   
                                                   −
                                                   
                                                      
                                                         (
                                                         
                                                            
                                                               (
                                                               i
                                                               −
                                                               
                                                                  D
                                                                  2
                                                               
                                                               )
                                                            
                                                            +
                                                         
                                                         −
                                                         
                                                            
                                                               (
                                                               
                                                                  D
                                                                  3
                                                               
                                                               −
                                                               S
                                                               )
                                                            
                                                            +
                                                         
                                                         )
                                                      
                                                      +
                                                   
                                                   −
                                                   
                                                      Φ
                                                      +
                                                   
                                                   )
                                                
                                                +
                                             
                                             ]
                                          
                                          ,
                                       
                                    
                                 
                              
                           
                        
                     where Φ = ((S − D
                     3)+ − (D
                     2 − i)+ − c).

Note that ((i − D
                     2)+ − (D
                     3 − S)+)+ is the amount of Mature used to satisfy the excess demand of Young. Then, Φ
                     + ensures that a restricted amount, not exceeding c, of Young items are used as a substitute to satisfy excess demand of Old. Positive protection level leads to carrying more Young units from one period to the next. Hence, the expected one-period inventory holding cost of Young platelets increases to

                        
                           
                              
                                 
                                    
                                       
                                          
                                             h
                                             3
                                          
                                          E
                                          
                                             [
                                             
                                                
                                                   (
                                                   
                                                      
                                                         (
                                                         S
                                                         −
                                                         
                                                            D
                                                            3
                                                         
                                                         )
                                                      
                                                      +
                                                   
                                                   −
                                                   
                                                      
                                                         (
                                                         
                                                            D
                                                            2
                                                         
                                                         −
                                                         i
                                                         )
                                                      
                                                      +
                                                   
                                                   −
                                                   γ
                                                   )
                                                
                                                +
                                             
                                             ]
                                          
                                          ,
                                       
                                    
                                 
                              
                           
                        
                     where γ = min {((S − D
                     3)+ − (D
                     2 − i)+ − c)+, ((D
                     1 − j)+ − (i − D
                     2)+)+}.

With a positive protection level, the number of Young units that are not used in a period and become Mature in the next period is

                        
                           
                              
                                 
                                    
                                       
                                          
                                             
                                                (
                                                
                                                   
                                                      (
                                                      S
                                                      −
                                                      
                                                         D
                                                         3
                                                      
                                                      )
                                                   
                                                   +
                                                
                                                −
                                                
                                                   
                                                      (
                                                      
                                                         D
                                                         2
                                                      
                                                      −
                                                      i
                                                      )
                                                   
                                                   +
                                                
                                                −
                                                c
                                                )
                                             
                                             +
                                          
                                          .
                                       
                                    
                                 
                              
                           
                        
                     Finally, the cost of substituting Young units to satisfy excess demand of Old becomes

                        
                           
                              
                                 
                                    
                                       
                                          
                                             α
                                             
                                                Y
                                                O
                                             
                                          
                                          E
                                          
                                             [
                                             min
                                             
                                                {
                                                
                                                   
                                                      (
                                                      
                                                         
                                                            (
                                                            S
                                                            −
                                                            
                                                               D
                                                               3
                                                            
                                                            )
                                                         
                                                         +
                                                      
                                                      −
                                                      
                                                         
                                                            (
                                                            
                                                               
                                                                  (
                                                                  
                                                                     D
                                                                     1
                                                                  
                                                                  −
                                                                  j
                                                                  )
                                                               
                                                               +
                                                            
                                                            −
                                                            
                                                               
                                                                  (
                                                                  i
                                                                  −
                                                                  
                                                                     D
                                                                     2
                                                                  
                                                                  )
                                                               
                                                               +
                                                            
                                                            )
                                                         
                                                         +
                                                      
                                                      )
                                                   
                                                   +
                                                
                                                ,
                                                c
                                                }
                                             
                                             ]
                                          
                                          .
                                       
                                    
                                 
                              
                           
                        
                     
                  

@&#REFERENCES@&#

