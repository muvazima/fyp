@&#MAIN-TITLE@&#A new robust lossless data hiding scheme and its application to color medical images

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           A new robust lossless data hiding scheme in the transform domain is proposed.


                        
                        
                           
                           The Slantlet transform (SLT) has been calculated using matrix multiplication.


                        
                        
                           
                           The method provides complete reversibility after watermark extraction.


                        
                        
                           
                           Robustness against different attacks has been obtained.


                        
                        
                           
                           The proposed scheme has been successfully applied to color medical images.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Robust lossless data hiding

Robust reversible watermarking

Slantlet Transform (SLT) Matrix

Reversibility

Robustness

@&#ABSTRACT@&#


               Graphical abstract
               
                  
               
               
                  
               
            

@&#INTRODUCTION@&#

For information security purposes, the research society directed a special interest to the data hiding techniques [1]. The data hiding scheme called lossless (i.e., reversible) when it has the ability to recover the original image after the process of extracting the hidden data (e.g., logo, text, medical record, etc.). In some fields, such as medical imaging systems, military imaging systems, and remote sensing applications, any change in the original image may affect the final decision making process therefore recovering the original image after extracting the watermark is desirable and this can be achieved by using reversible data hiding [1]. This kind of data hiding concentrates on ensuring the reversibility and improving the visual quality of the watermarked images [2,3]; however, most of the reversible data hiding techniques need lossless environment to transfer the watermarked media because a slight change in the watermarked image (such as channel noise or JPEG compression) can destroy the hidden watermark [4]. In practical applications the channel noise and lossy compression should be treated as an unintentional attacks and the reversible watermarking scheme must have the ability to recover the watermark even if the watermarked image has undergone these attacks.

The requirement to obtain a reversible watermarking scheme for medical images that has the ability to withstand lossy compression (e.g., JPEG compression) has been first mentioned in [5,6] for an application scenario in which the same medical image is transmitted to the specialist (the lossless processing is required) and to the family doctor (the lossy compression is tolerated). Thereafter, the research in the reversible watermarking field pointed out the need of the robustness in the reversible watermarking scheme for practical applications in order to overcome the unintentional attacks (e.g., lossy compression) [7–15] and the noise generated in the carrier channel [10–15]. The reversible watermarking schemes that can convey the embedded information through lossy environment are called robust (or semi-fragile) reversible watermarking (RRW) schemes [5–15]. The robust reversible watermarking schemes can be classified into two main groups that are the spatial domain RRW schemes [5–12], and the transform domain RRW schemes [13–15].

De Vleeschouwer et al. proposed a robust lossless watermarking scheme based on rotating the histogram of sets of pixels in the cover image [5,6]. This scheme has robustness against Joint Photographic Experts Group (JPEG) compression but it suffers from the salt-and-pepper noise (which is a form of noise presented as black and white pixels that are spread on the image) [5,6].

Later, some schemes have been proposed to solve the problem of the salt-and-pepper noise; in [7,8], Ni et al. proposed a data hiding algorithm that does not generate the salt-and-pepper noise. The algorithm depends on dividing the original image into non-overlapping blocks and dividing the pixel values in each block into two sets, then the arithmetic average differences of grayscale values of pixel pairs is calculated and used for the watermark embedding process. To prevent the underflow/overflow of the pixel values, the blocks have been classified into four types and different embedding schemes have been used. The scheme has robustness against JPEG/JPEG2000 compression but it suffers from the incomplete reversibility. In [9], Gao et al. improved the previous algorithm to solve the problem of the incomplete reversibility by using the block skipping scheme, which chooses the suitable blocks for embedding and skips the unsuitable blocks. This scheme solved the problem of the incomplete reversibility but it was at the cost of reducing the capacity.

Some robust reversible watermarking methods based on transform domain have been presented in [13–15]. Zou et al. [13,14] proposed a RRW scheme based on the properties of the integer wavelet transform (IWT) coefficients in the high frequency subbands. One of the high frequency subbands is divided into non-overlapping blocks and the embedding process depends on shifting the mean value of the block. After shifting the mean values of the blocks in the transform domain, the pixel values in the spatial domain may suffer from underflow/overflow; to solve this problem, spatial domain blocks' classification has been used; but in some cases, a watermark bit changed from ‘1’ to ‘0’ and thus the use of the error correction coding (ECC) became necessary. This scheme obtained robustness against JPEG2000 compression and AGN but it suffers from the incomplete reversibility and low data hiding capacity. In [15], An et al. proposed a RRW algorithm depends on transforming the original image using IWT and dividing one of the high frequency subbands into non-overlapping blocks. Then histogram shifting and clustering for watermark embedding and extraction processes have been used. To avoid the underflow/overflow of the pixel values, property inspired pixel adjustment has been applied to prepare the pixel values before embedding the watermark. This method needed saving some side information about the pixel values that were adjusted, and the side information was sent with the watermarked image to ensure the reversibility. This scheme is completely reversible and it obtained robustness against JPEG/JPEG2000 compression, and AGN, however, the capacity and the visual quality still need more improvement.

Most of the previous reversible watermarking methods have been developed for grayscale images and among the previous RRW in [5–15], only two schemes [8,9] have been applied to general color images. Medical imaging has been subjugated by monochrome imaging techniques. As a result, color information has been ignored in the medical image analysis applications. Recently, different medical imaging aspects that include color information have been introduced (e.g., gastrointestinal endoscopy, microscopy, skin scanning, and wound photography) [16]. The nature of the color image brings in new challenges for the researchers, as the different schemes developed for monochrome images are not directly applicable to multichannel images [16]. Since the use of the color medical images is growing, this requires a suitable watermarking method to protect this type of images. Therefore, introducing a robust reversible watermarking scheme for color medical images can be considered as a new and interesting application.

To overcome the limitations of the previous RRW methods (i.e., the limited capacity, low visual quality, incomplete reversibility, and limited robustness), this paper presents a new robust lossless data hiding method in the transform domain. This method uses the Slantlet transform (SLT) matrix to transform image blocks and a digital data bit has been embedded by controlling the mean values of the SLT high frequency coefficients in each block. To solve the problem of underflow/overflow of the pixel values, a pixel adjustment method has been proposed to keep the pixel values in the acceptable range. The purpose of the proposed method is to obtain a completely reversible watermarking method with an improved invisibility, robustness, and capacity. After successfully implementing the proposed RRW scheme, it has been adjusted in order to be applied to color medical images. The scheme has been applied to color medical images for two reasons: (a) to investigate and prove the ability of applying the proposed scheme to multichannel images, and (b) to highlight the requirements of the watermarking scheme for color medical images (as we predict it will be an interesting research topic in the near future).

The rest of the paper is organized as follows: in Section 2, the SLT is introduced and its filters and matrices are outlined. Section 3 contains the details of the proposed method. The experimental results and discussion are in Section 4. Section 5 contains the conclusions of the proposed method.

Discrete wavelet transform (DWT) has been applied in different applications because of its effective description to the piecewise smooth signals. The performance of the DWT can be improved by developing two criteria, which are the time-localization and the smoothness characteristics [17]. To obtain a good trade-off between these two criteria, Ivan W. Selesnick [17,18], introduced an equivalent form of the DWT called Slantlet transform (SLT). The SLT obtained good time-localization and better smoothness properties by controlling the lengths of the discrete-time basis functions and their moments. The SLT depends on the equivalent form of the filter bank representation of the DWT to give a solution for the filter coefficients; Fig. 1
                      shows the 2-scale filter banks.

As shown in Fig. 1, the SLT filter bank is implemented using a parallel structure and different filters have been used instead of filters multiplication. Since the filters that have been used in the SLT filter bank are not products, the length of these filters is shorter than the filters of the DWT. The SLT filters, their corresponding parameters, and SLT matrix are explained in Appendix A.

The aim of implementing the SLT matrix in [18] was to prove the orthogonality of this transform. In this paper, depending on the method of image transformation that was explained by C. Mulcahy [19], we used this matrix to calculate the SLT of the image blocks instead of using the conventional SLT. Since the image can be transformed by applying rows transformation and columns transformation [19], the SLT of the image blocks has been calculated using matrix multiplication. The matrix multiplication process is faster than the conventional calculations of the SLT and thus the computational cost can be reduced.

Assuming a 2-D signal (s):
                        
                           
                              s
                              =
                              
                                 [
                                 
                                    
                                       
                                          
                                             
                                                s
                                             
                                             
                                                0
                                                ,
                                                0
                                             
                                          
                                       
                                       
                                          
                                             
                                                s
                                             
                                             
                                                0
                                                ,
                                                1
                                             
                                          
                                       
                                       
                                          …
                                       
                                       
                                          
                                             
                                                s
                                             
                                             
                                                0
                                                ,
                                                N
                                                −
                                                1
                                             
                                          
                                       
                                    
                                    
                                       
                                          
                                             
                                                s
                                             
                                             
                                                1
                                                ,
                                                0
                                             
                                          
                                       
                                       
                                          
                                             
                                                s
                                             
                                             
                                                1
                                                ,
                                                1
                                             
                                          
                                       
                                       
                                          …
                                       
                                       
                                          
                                             
                                                s
                                             
                                             
                                                1
                                                ,
                                                N
                                                −
                                                1
                                             
                                          
                                       
                                    
                                    
                                       
                                          ⋮
                                       
                                       
                                          ⋮
                                       
                                       
                                          ⋱
                                       
                                       
                                          ⋮
                                       
                                    
                                    
                                       
                                          
                                             
                                                s
                                             
                                             
                                                N
                                                −
                                                1
                                                ,
                                                0
                                             
                                          
                                       
                                       
                                          
                                             
                                                s
                                             
                                             
                                                N
                                                −
                                                1
                                                ,
                                                1
                                             
                                          
                                       
                                       
                                          …
                                       
                                       
                                          
                                             
                                                s
                                             
                                             
                                                N
                                                −
                                                1
                                                ,
                                                N
                                                −
                                                1
                                             
                                          
                                       
                                    
                                 
                                 ]
                              
                              .
                           
                        
                     
                  

The complete Slantlet transform can be represented in matrix format by:
                        
                           (1)
                           
                              S
                              =
                              
                                 
                                    SLT
                                 
                                 
                                    N
                                 
                              
                              
                              s
                              
                              
                                 
                                    SLT
                                 
                                 
                                    N
                                 
                                 
                                    T
                                 
                              
                              .
                           
                        
                     
                  

Where s is the original two-dimensional signal, S is the Slantlet transform of the original signal, and SLT
                     
                        N
                      is an 
                        N
                        ×
                        N
                      Slantlet matrix. Note that s, S, and 
                        
                           
                              SLT
                           
                           
                              N
                           
                        
                      have the same size.

Thus, the matrix of the coefficients after applying the SLT can be represented as follows:
                        
                           
                              S
                              =
                              
                                 [
                                 
                                    
                                       
                                          
                                             
                                                S
                                             
                                             
                                                0
                                                ,
                                                0
                                             
                                          
                                       
                                       
                                          
                                             
                                                S
                                             
                                             
                                                0
                                                ,
                                                1
                                             
                                          
                                       
                                       
                                          …
                                       
                                       
                                          
                                             
                                                S
                                             
                                             
                                                0
                                                ,
                                                N
                                                −
                                                1
                                             
                                          
                                       
                                    
                                    
                                       
                                          
                                             
                                                S
                                             
                                             
                                                1
                                                ,
                                                0
                                             
                                          
                                       
                                       
                                          
                                             
                                                S
                                             
                                             
                                                1
                                                ,
                                                1
                                             
                                          
                                       
                                       
                                          …
                                       
                                       
                                          
                                             
                                                S
                                             
                                             
                                                1
                                                ,
                                                N
                                                −
                                                1
                                             
                                          
                                       
                                    
                                    
                                       
                                          ⋮
                                       
                                       
                                          ⋮
                                       
                                       
                                          ⋱
                                       
                                       
                                          ⋮
                                       
                                    
                                    
                                       
                                          
                                             
                                                S
                                             
                                             
                                                N
                                                −
                                                1
                                                ,
                                                0
                                             
                                          
                                       
                                       
                                          
                                             
                                                S
                                             
                                             
                                                N
                                                −
                                                1
                                                ,
                                                1
                                             
                                          
                                       
                                       
                                          …
                                       
                                       
                                          
                                             
                                                S
                                             
                                             
                                                N
                                                −
                                                1
                                                ,
                                                N
                                                −
                                                1
                                             
                                          
                                       
                                    
                                 
                                 ]
                              
                              .
                           
                        
                      The SLT coefficients in matrix (S) will be divided into 4-subbands (LL, HL, LH, and HH) as shown in Fig. 2
                     . We will use this method of transformation to obtain the SLT coefficients for each image block.

The inverse SLT transform can be obtained by:
                        
                           (2)
                           
                              s
                              =
                              
                                 
                                    SLT
                                 
                                 
                                    N
                                 
                                 
                                    T
                                 
                              
                              
                              S
                              
                              
                                 
                                    SLT
                                 
                                 
                                    N
                                 
                              
                              .
                           
                        
                     
                  

The SLT has been used in different applications and the performance of the SLT schemes was better as compared with the previous methods in each specific application. For instance, in [17,18] the SLT has been used instead of the DWT to remove the noise from the signal and it has been proven that the SLT performs better than the DWT. In [20], the SLT obtained better performance in signal compression as compared to the discrete cosine transform (DCT) and DWT methods. It has been observed that the SLT based algorithm can keep higher percentage of the energy after compression compared to the DWT approach. In [21], the SLT has been applied in Steganography scheme and it was better than the DWT in terms of the stego-image visual quality and the execution time of the algorithm. In [22,23], the SLT has been used to extract the features of the signals in order to be used in signal classification systems and the results proved that the SLT based schemes were better than the DWT based schemes. In [24,25], the SLT has been applied in image watermarking schemes and its performance was better than the DWT based schemes in terms of visual quality [24,25] and robustness [25]. Our previous work in [25] illustrates a preliminary study of the SLT in which a robust irreversible image watermarking has been presented. The scheme proves that the SLT based scheme performs better in comparison with the DWT based scheme; in addition, the change of the embedding method while keeping the same transform can also affect the performance of the watermarking scheme.

The reversible watermarking methods in the transform domain are based on the integer wavelet transform [13–15,26–29]. We suggested the use of the SLT to implement a robust reversible watermarking scheme in [30], which proves the possibility of implementing a reversible data hiding method based on non-integer transform. The algorithm in [30] starts by dividing the image into non-overlapping blocks and transform the blocks using SLT matrix; then one high frequency subband (either HL or LH) is chosen to carry the watermark bits. The algorithm scans all the blocks to find the maximum mean value of the carrier subband in order to set the threshold value. Using this threshold value, a pre-processing step has been applied to prepare the original image blocks before applying the watermark embedding process. Thereafter, the prepared blocks are transformed using SLT matrix and if the watermark bit is ‘1’, the mean value of the carrier subband is shifted by the same shift value that has been used in the pre-processing step. At the receiver side, the mean value of the carrier subband is compared with the threshold value to extract the watermark bits. The scheme in [30] performs better in comparison with the previous methods, however, the capacity and the visual quality still need more improvement. The use of the pre-processing method to prepare the image blocks degrades the visual quality of the watermarked image especially for medical images and the watermark embedding method that depends on the maximum mean value limits the capacity of scheme. In this paper, we propose a different watermark embedding strategy while keeping the same transform (i.e., the SLT). In the proposed method, a new embedding strategy has been applied, which depends on modifying two high frequency subbands (HL and LH) using specific rules; in addition, a new pixel adjustment process has been applied as a post-processing step instead of the pre-processing step. The details of the proposed algorithm are explained as follows:

The watermark-embedding scheme shown in Fig. 3
                         can be summarized in the following steps:
                           
                              •
                              Step 1: Original image division

The original image is divided into non-overlapping blocks called “spatial domain blocks” of size (
                           L
                           ×
                           L
                         pixels). The number of the non-overlapping blocks (NB) depends on the size of the original image and the size of the spatial domain block. If the original image is of size 
                           H
                           ×
                           W
                         and the spatial domain block is of size 
                           L
                           ×
                           L
                        , then NB can be calculated as follows:
                           
                              (3)
                              
                                 
                                    NB
                                 
                                 =
                                 
                                    ⌊
                                    
                                       
                                          H
                                          ×
                                          W
                                       
                                       
                                          
                                             L
                                          
                                          
                                             2
                                          
                                       
                                    
                                    ⌋
                                 
                                 .
                              
                           
                         As an example, the image of Lena (with size 
                           512
                           ×
                           512
                        ) is divided into non-overlapping blocks of size (
                           32
                           ×
                           32
                        ), which results in 256 spatial domain blocks as shown in Fig. 4
                        .
                           
                              •
                              Step 2: Applying the Slantlet transform

Each spatial domain block is transformed using the SLT matrix by applying Eq. (1). The spatial domain block and the SLT matrix have the same size; Fig. 5
                         shows the block's transformation process and the SLT subbands. The high frequency subbands (HL and LH) are used for the watermark embedding process. To avoid confusion about the term (block size), the relationship between the block size in the spatial domain 
                           (
                           
                              
                                 b
                              
                              
                                 size
                              
                           
                           )
                         and the block size in the transform domain 
                           (
                           
                              
                                 B
                              
                              
                                 size
                              
                           
                           )
                         is explained in Table 1
                        . The block size in the transform domain 
                           (
                           
                              
                                 B
                              
                              
                                 size
                              
                           
                           )
                         means the size of one subband of the SLT coefficients.


                        
                           
                              •
                              Step 3: Calculating the mean values

For the watermark embedding process, we need the mean values of the SLT coefficients of the high frequency subbands (HL and LH). The mean value for each subband can be calculated using the following equation:
                           
                              (4)
                              
                                 
                                    
                                       m
                                    
                                    
                                       t
                                    
                                 
                                 =
                                 
                                    1
                                    
                                       
                                          B
                                       
                                       
                                          s
                                       
                                       
                                          2
                                       
                                    
                                 
                                 
                                    ∑
                                    
                                       i
                                       =
                                       1
                                    
                                    
                                       
                                          B
                                       
                                       
                                          s
                                       
                                    
                                 
                                 
                                    ∑
                                    
                                       j
                                       =
                                       1
                                    
                                    
                                       
                                          B
                                       
                                       
                                          s
                                       
                                    
                                 
                                 
                                    
                                       C
                                    
                                    
                                       i
                                       ,
                                       j
                                    
                                    
                                       t
                                    
                                 
                                 ,
                              
                           
                         where the superscript (t) indicates the name of the subband, 
                           
                              
                                 B
                              
                              
                                 s
                              
                           
                         is the side length of the subband (i.e., the side length of the transform domain block), and 
                           
                              
                                 C
                              
                              
                                 i
                                 ,
                                 j
                              
                              
                                 t
                              
                           
                         is the SLT coefficients in the specified subband (block).

According to Eq. (4), the mean values of the high frequency subbands (HL and LH) can be calculated as follows:
                           
                              (5)
                              
                                 
                                    
                                       m
                                    
                                    
                                       HL
                                    
                                 
                                 =
                                 
                                    1
                                    
                                       
                                          B
                                       
                                       
                                          s
                                       
                                       
                                          2
                                       
                                    
                                 
                                 
                                    ∑
                                    
                                       i
                                       =
                                       1
                                    
                                    
                                       
                                          B
                                       
                                       
                                          s
                                       
                                    
                                 
                                 
                                    ∑
                                    
                                       j
                                       =
                                       1
                                    
                                    
                                       
                                          B
                                       
                                       
                                          s
                                       
                                    
                                 
                                 
                                    
                                       C
                                    
                                    
                                       i
                                       ,
                                       j
                                    
                                    
                                       HL
                                    
                                 
                                 ,
                              
                           
                        
                        
                           
                              (6)
                              
                                 
                                    
                                       m
                                    
                                    
                                       LH
                                    
                                 
                                 =
                                 
                                    1
                                    
                                       
                                          B
                                       
                                       
                                          s
                                       
                                       
                                          2
                                       
                                    
                                 
                                 
                                    ∑
                                    
                                       i
                                       =
                                       1
                                    
                                    
                                       
                                          B
                                       
                                       
                                          s
                                       
                                    
                                 
                                 
                                    ∑
                                    
                                       j
                                       =
                                       1
                                    
                                    
                                       
                                          B
                                       
                                       
                                          s
                                       
                                    
                                 
                                 
                                    
                                       C
                                    
                                    
                                       i
                                       ,
                                       j
                                    
                                    
                                       LH
                                    
                                 
                                 .
                              
                           
                        
                        
                           
                              •
                              Step 4: Digital watermark embedding

The adjustment process of the SLT coefficients in the proposed scheme is inspired by the basic idea that has been employed in the robust watermarking techniques in [31–33]. In [31,32], the invariant region of the original image has been extracted as a circle and the discrete cosine transform (DCT) has been used to transform this region; the watermark has been resized to be suitable to the selected circle. Two adjacent DCT coefficients have been modified to carry a watermark bit. The aim of the modification is to make the first selected coefficient larger than the second coefficient to carry a watermark bit ‘1’ and vice versa when the watermark bit is ‘0’. In [33], the invariant region of the original image has been extracted also as a circle and the DWT of this region has been found; a watermark bit can be embedded by modifying a pair of the DWT coefficients using the same method that has been applied in [31].

In the proposed method, to embed a watermark bit in each block we modify the difference between the mean values of the SLT coefficients in the high frequency subbands (i.e., HL and LH) of that block. Our aim of this modification is to make the mean value of the SLT coefficients in the HL subband more than the mean value of the SLT coefficients in the LH subband when the watermark bit is ‘1’. When the watermark bit is ‘0’, the modification will be applied to make the mean value of the LH subband more than the mean value of the HL subband. It is worth noting that although the proposed embedding method in this part is inspired by previous methods, there are some main differences that can be summarized as shown in Table 2
                        . The reasons behind these differences have been explained with each point in Table 2.

To explain the embedding process, consider a watermark sequence (w) as a vector of bits 
                           w
                           =
                           {
                           
                              
                                 w
                              
                              
                                 1
                              
                           
                           ,
                           …
                           ,
                           
                              
                                 w
                              
                              
                                 j
                              
                           
                           ,
                           …
                           ,
                           
                              
                                 w
                              
                              
                                 l
                                 e
                                 n
                              
                           
                           }
                        , where 
                           j
                           =
                           1
                           ,
                           2
                           ,
                           …
                           ,
                           
                              len
                           
                         and 
                           
                              len
                           
                           =
                           
                              length
                           
                           (
                           w
                           )
                        ; to embed a watermark bit (
                           
                              
                                 w
                              
                              
                                 j
                              
                           
                        ) in a block, a pre-defined integer threshold (T) has been used and a modification factors have been calculated as follows:
                           
                              (7)
                              
                                 
                                    
                                       
                                          Modification factor
                                       
                                    
                                    
                                       1
                                    
                                 
                                 (
                                 
                                    
                                       MF
                                    
                                    
                                       1
                                    
                                 
                                 )
                                 =
                                 
                                    
                                       T
                                       −
                                       (
                                       
                                          
                                             m
                                          
                                          
                                             HL
                                          
                                       
                                       −
                                       
                                          
                                             m
                                          
                                          
                                             LH
                                          
                                       
                                       )
                                    
                                    2
                                 
                              
                           
                        
                        
                           
                              (8)
                              
                                 
                                    
                                       
                                          Modification factor
                                       
                                    
                                    
                                       2
                                    
                                 
                                 (
                                 
                                    
                                       MF
                                    
                                    
                                       2
                                    
                                 
                                 )
                                 =
                                 
                                    
                                       T
                                       −
                                       (
                                       
                                          
                                             m
                                          
                                          
                                             LH
                                          
                                       
                                       −
                                       
                                          
                                             m
                                          
                                          
                                             HL
                                          
                                       
                                       )
                                    
                                    2
                                 
                              
                           
                         Now each watermark bit (
                           
                              
                                 w
                              
                              
                                 j
                              
                           
                        ) can be embedded according to the following rules:
                           
                              1.
                              If 
                                    
                                       
                                          w
                                       
                                       
                                          j
                                       
                                    
                                    =
                                    1
                                  and 
                                    (
                                    
                                       
                                          m
                                       
                                       
                                          HL
                                       
                                    
                                    −
                                    
                                       
                                          m
                                       
                                       
                                          LH
                                       
                                    
                                    )
                                    ≥
                                    T
                                 , then the block remains without change.

If 
                                    
                                       
                                          w
                                       
                                       
                                          j
                                       
                                    
                                    =
                                    1
                                  and 
                                    (
                                    
                                       
                                          m
                                       
                                       
                                          HL
                                       
                                    
                                    −
                                    
                                       
                                          m
                                       
                                       
                                          LH
                                       
                                    
                                    )
                                    <
                                    T
                                 , then 
                                    
                                       
                                          MF
                                       
                                       
                                          1
                                       
                                    
                                  is added to 
                                    
                                       
                                          m
                                       
                                       
                                          HL
                                       
                                    
                                  and subtracted from 
                                    
                                       
                                          m
                                       
                                       
                                          LH
                                       
                                    
                                  (i.e., 
                                    
                                       
                                          m
                                       
                                       
                                          n
                                          e
                                          w
                                       
                                       
                                          HL
                                       
                                    
                                    =
                                    
                                       
                                          m
                                       
                                       
                                          HL
                                       
                                    
                                    +
                                    
                                       
                                          MF
                                       
                                       
                                          1
                                       
                                    
                                  and 
                                    
                                       
                                          m
                                       
                                       
                                          n
                                          e
                                          w
                                       
                                       
                                          LH
                                       
                                    
                                    =
                                    
                                       
                                          m
                                       
                                       
                                          LH
                                       
                                    
                                    −
                                    
                                       
                                          MF
                                       
                                       
                                          1
                                       
                                    
                                 ).

If 
                                    
                                       
                                          w
                                       
                                       
                                          j
                                       
                                    
                                    =
                                    0
                                  and 
                                    (
                                    
                                       
                                          m
                                       
                                       
                                          LH
                                       
                                    
                                    −
                                    
                                       
                                          m
                                       
                                       
                                          HL
                                       
                                    
                                    )
                                    ≥
                                    T
                                 , then the block remains without change.

If 
                                    
                                       
                                          w
                                       
                                       
                                          j
                                       
                                    
                                    =
                                    0
                                  and 
                                    (
                                    
                                       
                                          m
                                       
                                       
                                          LH
                                       
                                    
                                    −
                                    
                                       
                                          m
                                       
                                       
                                          HL
                                       
                                    
                                    )
                                    <
                                    T
                                 , then 
                                    
                                       
                                          MF
                                       
                                       
                                          2
                                       
                                    
                                  is subtracted from 
                                    
                                       
                                          m
                                       
                                       
                                          HL
                                       
                                    
                                  and added to 
                                    
                                       
                                          m
                                       
                                       
                                          LH
                                       
                                    
                                  (i.e., 
                                    
                                       
                                          m
                                       
                                       
                                          n
                                          e
                                          w
                                       
                                       
                                          HL
                                       
                                    
                                    =
                                    
                                       
                                          m
                                       
                                       
                                          HL
                                       
                                    
                                    −
                                    
                                       
                                          MF
                                       
                                       
                                          2
                                       
                                    
                                  and 
                                    
                                       
                                          m
                                       
                                       
                                          n
                                          e
                                          w
                                       
                                       
                                          LH
                                       
                                    
                                    =
                                    
                                       
                                          m
                                       
                                       
                                          LH
                                       
                                    
                                    +
                                    
                                       
                                          MF
                                       
                                       
                                          2
                                       
                                    
                                 ).

Step 5: Replacing subbands and applying inverse SLT

The watermark embedding process is repeated for all the watermark bits and the original subbands in the SLT matrix must be replaced by the modified subbands. Then the inverse SLT must be applied (using matrix multiplication process as explained in Eq. (2)). Thereafter, to ensure the reversibility, the result must be rounded to integer numbers. Thus, the original image and the embedded watermark can be recovered correctly at the receiver side.
                           
                              •
                              Step 6: Obtaining the watermarked image

The watermarked image can be obtained from the watermarked blocks. After applying the rules of watermark embedding, some of the pixel values will suffer from underflow/overflow. Previously, different methods have been used to avoid this problem; some of those methods rely on the histogram modification process as a pre-processing step; in [27] and [28], the histogram of the image has been narrowed from both sides before embedding the data, this process has been applied at the beginning although sometimes it is not necessary. In [29] an improved histogram modification process has been proposed, instead of always using histogram modification as a pre-processing step, the histogram will be modified only when it is necessary. In [27–29], the pixel values that are modified must be saved as bookkeeping information and must be sent to the receiver side. In [15], an investigation about the effect of changing the wavelet coefficients on the pixel values has been made to find the maximum scale of pixels change. Then the pixel adjustment method has been applied, the pixel values that will suffer from overflow/underflow are modified before the watermark embedding, in this method the locations of the pixel values and the adjustment scale must be saved as part of side information that needs to be transmitted to the receiver side. Although this method solved the problem of overflow/underflow but it degrades the visual quality of the watermarked image because of shifting some of the pixel values in the host image more than required as a pre-processing step. In our method, we suggested the use of pixel adjustment as a post-processing step instead of using it as a pre-processing step. In the proposed method, each individual pixel will be modified by the shift value that is required, and thus the visual quality of the watermarked image can be improved. The pixel values that are suffering from overflow/underflow and their locations will be saved as part of the side information, and then these pixel values will be adjusted as follows:
                           
                              (9)
                              
                                 
                                    
                                       I
                                    
                                    
                                       w
                                    
                                    
                                       ′
                                    
                                 
                                 (
                                 i
                                 ,
                                 j
                                 )
                                 =
                                 
                                    {
                                    
                                       
                                          
                                             255
                                             ,
                                          
                                          
                                             if
                                             
                                             
                                                
                                                   I
                                                
                                                
                                                   w
                                                
                                             
                                             (
                                             i
                                             ,
                                             j
                                             )
                                             >
                                             255
                                             ,
                                          
                                       
                                       
                                          
                                             0
                                             ,
                                          
                                          
                                             if
                                             
                                             
                                                
                                                   I
                                                
                                                
                                                   w
                                                
                                             
                                             (
                                             i
                                             ,
                                             j
                                             )
                                             <
                                             0
                                             ,
                                          
                                       
                                    
                                 
                              
                           
                         where 
                           
                              
                                 I
                              
                              
                                 w
                              
                           
                         is the watermarked image before pixel adjustment, (
                           i
                           ,
                           j
                        ) are the coordinates of the value in the image, and 
                           
                              
                                 I
                              
                              
                                 w
                              
                              
                                 ′
                              
                           
                           (
                           i
                           ,
                           j
                           )
                         is the modified pixel value.

Now, the watermarked image can be saved as a grayscale image, and later the original image can be recovered without losing any information. The side information together with the block size and the threshold value must be sent with the watermarked image to the receiver side.


                        
                           
                              •
                              Step 1: Preparing and dividing image

At the receiver, after reading the watermarked image and the side information, the pixel values that were adjusted must be returned back to their locations in the watermarked image. Then the image will be divided into non-overlapping blocks.
                           
                              •
                              Step 2: Applying the Slantlet transform

Transform each block using SLT matrix multiplication (Eq. (1)), then the SLT-coefficients' matrix must be divided into subbands as shown in Fig. 2.
                           
                              •
                              Step 3: Extracting the embedded watermark

For each block, the mean values of the coefficients in the high frequency subbands (HL and LH) must be calculated and the watermark bits will be extracted according to the following:
                           
                              (10)
                              
                                 
                                    
                                       w
                                    
                                    
                                       j
                                    
                                    
                                       ⁎
                                    
                                 
                                 =
                                 
                                    {
                                    
                                       
                                          
                                             1
                                             ,
                                          
                                          
                                             if
                                             
                                             
                                                
                                                   m
                                                
                                                
                                                   
                                                      
                                                         HL
                                                      
                                                      
                                                         ⁎
                                                      
                                                   
                                                
                                             
                                             ≥
                                             
                                                
                                                   m
                                                
                                                
                                                   
                                                      
                                                         LH
                                                      
                                                      
                                                         ⁎
                                                      
                                                   
                                                
                                             
                                             ,
                                          
                                       
                                       
                                          
                                             0
                                             ,
                                          
                                          
                                             if
                                             
                                             
                                                
                                                   m
                                                
                                                
                                                   
                                                      
                                                         HL
                                                      
                                                      
                                                         ⁎
                                                      
                                                   
                                                
                                             
                                             <
                                             
                                                
                                                   m
                                                
                                                
                                                   
                                                      
                                                         LH
                                                      
                                                      
                                                         ⁎
                                                      
                                                   
                                                
                                             
                                             ,
                                          
                                       
                                    
                                 
                              
                           
                         where 
                           
                              
                                 w
                              
                              
                                 j
                              
                              
                                 ⁎
                              
                           
                         is the extracted bit, 
                           
                              
                                 m
                              
                              
                                 
                                    
                                       HL
                                    
                                    
                                       ⁎
                                    
                                 
                              
                           
                         is the mean value of the SLT coefficients in HL subband and 
                           
                              
                                 m
                              
                              
                                 
                                    
                                       LH
                                    
                                    
                                       ⁎
                                    
                                 
                              
                           
                         is the mean value of the SLT coefficients in LH subband.
                           
                              •
                              Step 4: Recovering the original image

According to the extracted watermark value and the difference value that was already saved in the side information, the original mean values in each block can be recovered by applying the inverse of the process that was applied in the watermark embedding side. Each block will be recovered by shifting back the mean values and thus the original image is recovered by re-arranging the blocks.

To apply the proposed method in RGB (i.e., Red, Green, Blue) color images, each single channel can be extracted and treated as a grayscale image as shown in Fig. 6
                        . The embedding procedures in Section 3.1 (from step 1 to step 6) can be applied to obtain the watermarked channel. Then the original channel in the RGB image is replaced by the watermarked channel to obtain the watermarked RGB color image.

At the receiver side, the watermarked channel is extracted and the watermark extraction procedures in Section 3.2 (from step 1 to step 4) are applied to extract the embedded data and to recover the original channel. The watermarked channel is replaced by the recovered channel to recover the original RGB color image.

The experiments have been conducted to evaluate the four basic requirements of the watermarking schemes, which are the invisibility, robustness, capacity, and reversibility. The invisibility refers to the ability of hiding the watermark so that it does not degrade the visual quality of an image. The peak signal-to-noise ratio (PSNR) is the common parameter that has been used to evaluate the invisibility. The robustness refers to the ability of the watermark to withstand image distortions. The capacity of the watermarking scheme is the ultimate limit of the watermark bits that can be inserted into a single host image at a specific size. The reversibility refers to the ability of recovering the original cover image after the watermark extraction process.

To test the performance of the proposed method, we used 300 different images, 100 general images [34], 100 medical images [35,36], and 100 synthetic aperture radar (SAR) images collected from different websites. To make the comparison easier, all the images are converted to grayscale and resized to (
                           512
                           ×
                           512
                         pixels). The parameters that have been calculated for performance evaluation can be explained as follows:

To evaluate the watermarked-image quality (i.e., the invisibility) of the watermarked grayscale images, the PSNR between the original image and the watermarked image has been calculated according to the following:
                              
                                 (11)
                                 
                                    
                                       PSNR
                                    
                                    =
                                    10
                                    
                                       
                                          log
                                       
                                       
                                          10
                                       
                                    
                                    ⁡
                                    
                                       (
                                       
                                          
                                             
                                                
                                                   255
                                                
                                                
                                                   2
                                                
                                             
                                             ×
                                             H
                                             ×
                                             W
                                          
                                          
                                             
                                                
                                                   ∑
                                                
                                                
                                                   i
                                                   =
                                                   1
                                                
                                                
                                                   H
                                                
                                             
                                             
                                                
                                                   ∑
                                                
                                                
                                                   j
                                                   =
                                                   1
                                                
                                                
                                                   W
                                                
                                             
                                             
                                                
                                                   (
                                                   
                                                      
                                                         I
                                                      
                                                      
                                                         m
                                                      
                                                   
                                                   (
                                                   i
                                                   ,
                                                   j
                                                   )
                                                   −
                                                   
                                                      
                                                         I
                                                      
                                                      
                                                         m
                                                      
                                                      
                                                         W
                                                      
                                                   
                                                   (
                                                   i
                                                   ,
                                                   j
                                                   )
                                                   )
                                                
                                                
                                                   2
                                                
                                             
                                          
                                       
                                       )
                                    
                                    ,
                                 
                              
                            where 
                              
                                 
                                    I
                                 
                                 
                                    m
                                 
                              
                            is the original image, H and W are the dimensions of the image, and 
                              
                                 
                                    I
                                 
                                 
                                    m
                                 
                                 
                                    W
                                 
                              
                            is the watermarked image. 
                              
                                 
                                    I
                                 
                                 
                                    m
                                 
                              
                              (
                              i
                              ,
                              j
                              )
                            is the grayscale value of the pixel at (
                              i
                              ,
                              j
                           ) coordinates in the original image.

The visual quality of the watermarked color images has been evaluated using 
                              
                                 
                                    PSNR
                                 
                                 
                                    c
                                 
                              
                            according to the following:
                              
                                 (12)
                                 
                                    
                                       
                                          PSNR
                                       
                                       
                                          c
                                       
                                    
                                    =
                                    
                                       
                                          
                                             
                                                ∑
                                             
                                             
                                                i
                                                =
                                                1
                                             
                                             
                                                3
                                             
                                          
                                          
                                             
                                                PSNR
                                             
                                             
                                                i
                                             
                                          
                                       
                                       3
                                    
                                    ,
                                 
                              
                            where 
                              i
                              =
                              1
                            for R channel, 
                              i
                              =
                              2
                            for the G channel, and 
                              i
                              =
                              3
                            for the B channel. The 
                              
                                 
                                    PSNR
                                 
                                 
                                    i
                                 
                              
                            denotes the peak signal to noise ratio of the ith channel, which is calculated as follows:
                              
                                 (13)
                                 
                                    
                                       
                                          PSNR
                                       
                                       
                                          i
                                       
                                    
                                    =
                                    10
                                    log
                                    ⁡
                                    
                                       
                                          M
                                          ×
                                          N
                                          ×
                                          max
                                          ⁡
                                          {
                                          
                                             
                                                [
                                                H
                                                (
                                                x
                                                ,
                                                y
                                                ,
                                                i
                                                )
                                                ]
                                             
                                             
                                                2
                                             
                                          
                                          }
                                       
                                       
                                          
                                             
                                                ∑
                                             
                                             
                                                x
                                                =
                                                1
                                             
                                             
                                                M
                                             
                                          
                                          
                                             
                                                ∑
                                             
                                             
                                                y
                                                =
                                                1
                                             
                                             
                                                N
                                             
                                          
                                          
                                             
                                                [
                                                H
                                                (
                                                x
                                                ,
                                                y
                                                ,
                                                i
                                                )
                                                −
                                                
                                                   
                                                      H
                                                   
                                                   
                                                      ′
                                                   
                                                
                                                (
                                                x
                                                ,
                                                y
                                                ,
                                                i
                                                )
                                                ]
                                             
                                             
                                                2
                                             
                                          
                                       
                                    
                                    ,
                                 
                              
                            where 
                              H
                              (
                              x
                              ,
                              y
                              ,
                              i
                              )
                            and 
                              
                                 
                                    H
                                 
                                 
                                    ′
                                 
                              
                              (
                              x
                              ,
                              y
                              ,
                              i
                              )
                            are the pixel values of the original image and the watermarked image in the location (
                              x
                              ,
                              y
                           ) of the specified i channel.

For robustness evaluation, as done in the experiments in [15], we tested the robustness of the watermarked images against three types of unintentional attacks. The first attack is the JPEG compression with the quality factor equals to (20, 30, …, 100). The second attack is the JPEG2000 compression with the rate equals to (0.2, 0.4, …, 2). The third attack is the additive Gaussian noise (AGN) with zero-mean and a variance equals to (0.001, 0.002, …, 0.01). For the comparisons, the robustness against the three types of attacks has been evaluated using the unified parameter (Φ) that was already proposed in [15], which has been defined as follows:
                              
                                 (14)
                                 
                                    Φ
                                    =
                                    α
                                    ×
                                    
                                       
                                          
                                             abs
                                          
                                          (
                                          μ
                                          −
                                          κ
                                          )
                                       
                                       μ
                                    
                                    ,
                                 
                              
                            where 
                              0
                              ≤
                              Φ
                              <
                              1
                           , α is a normalization factor, μ is the benchmark of the unintentional attack strength, and κ is the tolerated unintentional attack strength. The embedded watermarks can be recovered correctly when the unintentional attack strength is less than κ 
                           [15]. The robustness is better with the larger values of Φ and vice versa. Table 3
                            contains the values of Φ parameters (i.e., the values of α and μ).

During our experimental work, we found that the proposed method can withstand AGN with variance value more than 0.01, therefore, we applied another experiment to evaluate the robustness against AGN. Also the robustness against other types of attacks (i.e., histogram equalization, wiener filtering, median filtering, gamma correction, blurring, and sharpening) has been evaluated.

The pure capacity depends on the size of the original image and the size of the block. One watermark bit can be embedded in each spatial domain block. For an image 
                              
                                 
                                    I
                                 
                                 
                                    m
                                 
                              
                            with size 
                              H
                              ×
                              W
                            and a spatial domain block with size 
                              
                                 
                                    b
                                 
                                 
                                    size
                                 
                              
                              =
                              h
                              ×
                              w
                           , the pure capacity can be calculated by
                              
                                 (15)
                                 
                                    C
                                    =
                                    
                                       ⌊
                                       
                                          H
                                          h
                                       
                                       ⌋
                                    
                                    ×
                                    
                                       ⌊
                                       
                                          W
                                          w
                                       
                                       ⌋
                                    
                                    .
                                 
                              
                            If the block size in the transform domain 
                              (
                              
                                 
                                    B
                                 
                                 
                                    size
                                 
                              
                              )
                            is 
                              m
                              ×
                              n
                           , where 
                              m
                              =
                              h
                              /
                              2
                           , and 
                              n
                              =
                              w
                              /
                              2
                           , then the relationship between the capacity and the block size 
                              (
                              
                                 
                                    B
                                 
                                 
                                    size
                                 
                              
                              )
                            can be calculated as follows:
                              
                                 (16)
                                 
                                    C
                                    =
                                    
                                       ⌊
                                       
                                          H
                                          
                                             2
                                             ×
                                             m
                                          
                                       
                                       ⌋
                                    
                                    ×
                                    
                                       ⌊
                                       
                                          W
                                          
                                             2
                                             ×
                                             n
                                          
                                       
                                       ⌋
                                    
                                    .
                                 
                              
                            The parameter C calculates the total number of bits that can be embedded in the image at a specific block size. To calculate the capacity in terms of bits-per-pixel (bpp), then C is divided by the total number of pixels in the image.

To evaluate the reversibility, the image error rate (IER), (i.e., the ratio of the number of the images recovered with errors to the total number of each kind of the test images) [15] has been calculated.

The following subsections contain the experimental results of the proposed method. In the first subsection, we study the effect of two parameters (the block size 
                              (
                              
                                 
                                    B
                                 
                                 
                                    size
                                 
                              
                              )
                            and threshold value (T)) on the performance of the proposed algorithm. In the second subsection, comparisons with the previous methods have been conducted. The third subsection includes comparison with our previous work that has been presented in [30]. The forth subsection shows the experimental results of the color images.

In this section, we study the effect of changing two parameters. The first parameter is the block size 
                           (
                           
                              
                                 B
                              
                              
                                 size
                              
                           
                           )
                         (i.e., the size of the SLT coefficients subband); the changes in the block size 
                           (
                           
                              
                                 B
                              
                              
                                 size
                              
                           
                           )
                         influence the capacity, the invisibility, the robustness, and the run-time of the software. The second parameter is the threshold value (T) (i.e., the watermark strength); the change in the threshold value has an effect on the invisibility and robustness. The proposed scheme has been tested for different threshold values 
                           (
                           T
                           =
                           1
                           ,
                           2
                           ,
                           …
                           )
                         and different block sizes 
                           (
                           
                              
                                 B
                              
                              
                                 size
                              
                           
                           =
                           2
                           ×
                           2
                           ,
                           4
                           ×
                           4
                           ,
                           …
                           )
                        . The following subsections show samples of the experimental results (i.e., the results at 
                           T
                           =
                           1
                         and 
                           T
                           =
                           3
                         have been shown in the experiments of the block size effect and the results at 
                           
                              
                                 B
                              
                              
                                 size
                              
                           
                           =
                           4
                           ×
                           4
                         and 
                           
                              
                                 B
                              
                              
                                 size
                              
                           
                           =
                           8
                           ×
                           8
                         have been shown in the experiments of the threshold value effect as examples).

We must mention here, in the reversibility tests, the number of the irreversible images was zero in all the experiments that have been conducted, which proves that the proposed method is completely reversible.

The capacity has been calculated using (Eq. (16)) for different block sizes when the original image size is (
                              512
                              ×
                              512
                           ) as shown in Table 4
                           ; the capacity decreases with the increase of the block size.

To examine the effect of the block size on the invisibility, the PSNR between the original image and the watermarked image was calculated at a specific threshold value and the block size from 
                              2
                              ×
                              2
                            to 
                              32
                              ×
                              32
                           . As an example, Fig. 7
                            shows the results of the average PSNR in response to block size changes at threshold value 
                              (
                              T
                              =
                              1
                              )
                           . Samples of the watermarked images that have been obtained in this experiment and their corresponding PSNR values are shown in Fig. 8
                           .

For robustness evaluation, a randomly generated watermark, (where a secret key is used as a seed to generate the sequence), is embedded in the image and the bit error rate (BER) in the extracted watermark after attacks is calculated. As an example, Figs. 9–11
                           
                           
                            show the average BER against three kinds of unintentional attacks at different block sizes and 
                              T
                              =
                              3
                           . Each figure contains the results of each kind of images (i.e., general images results, medical images results and SAR images results). As shown in Figs. 9–11, the BER decreases (i.e., the robustness is improved) with the increase of the block size. The grayscale values in the medical images are less diverse, which makes the effect of attacks on the mean values in this type of images less than that in the other types of images; therefore, the robustness of the watermarked medical images is better than that of the other types.

We study the run-time of the programs that have been used for the watermark embedding/extraction process at different block sizes. The experiments have been applied in a computer with the following properties: 2.40 GHz Intel® CoreTM i5 CPU and 4 GB memory. In order to record the programs run-time in seconds the tic and toc commands in MATLAB (R2009b) have been used. The average run-time for each type of the 300 test images has been calculated and the results are shown in Table 5
                           ; which illustrates that the smaller the block size, the longer the run time (due to the higher number of bits that are embedded in the image which needs more embedding processes to be carried out).

The change in the threshold value will affect the invisibility and robustness whereas it has no effect on the capacity. The effect of changing the threshold value on the PSNR is shown in Fig. 12
                           , where the threshold value is 1 to 6 with a step of 1, and the block sizes (
                              4
                              ×
                              4
                           , and 
                              8
                              ×
                              8
                           ). As shown in Fig. 12, the PSNR decreases with the increase of the threshold value. Samples of the watermarked images that have been obtained from this experiment and their corresponding PSNR values are shown in Fig. 13
                           .

To evaluate the robustness against the three kinds of attacks that were mentioned before, the bit error rate (BER) in the extracted watermark after attacks is calculated. As an example, Figs. 14–16
                           
                           
                            show the average BER against attacks, where the block size 
                              
                                 
                                    B
                                 
                                 
                                    size
                                 
                              
                            is 
                              8
                              ×
                              8
                           , and different threshold values have been used. As shown in Figs. 14–16, the BER decreases (i.e., the robustness is improved) with the increase of the threshold value. The performance of the watermarked medical images is better than that of the other types of images.

In another experiment for robustness evaluation, a specific binary watermark (of size 
                              32
                              ×
                              32
                           ) has been embedded instead of a randomly generated watermark in Lena image. The robustness against different attacks has been evaluated at the block size 
                              
                                 
                                    B
                                 
                                 
                                    size
                                 
                              
                              =
                              8
                              ×
                              8
                           , and at different threshold values. The extracted watermarks after attacks are as shown in Table 6
                           , where the BER was calculated. The results prove that the scheme has robustness against different attacks (i.e., histogram equalization, wiener filtering, median filtering, gamma correction, blurring, and sharpening). In addition, the results illustrates that the higher the threshold value, the better the robustness results.

In this section, the performance of the proposed scheme is tested in comparison with four previous robust reversible data hiding schemes. In this comparison, we will depend on the results that are shown in the latest work in [15]. The previous methods are named as follows: HR for the histogram rotation scheme in [6], HDC(1) and HDC(2) for the histogram distribution constrained methods in [8] and [14], respectively, and WSQH-SC for wavelet-domain statistical quantity histogram shifting and clustering scheme in [15]. The comparison has been conducted for the invisibility, robustness, capacity, and reversibility.

The comparison between the five mentioned methods is made at the same values of parameters that were used in [15]; when the block size is (
                              8
                              ×
                              8
                           ) and the watermark strength is 16, i.e., (a) the embedding level is 8 in HR; (b) 
                              K
                              =
                              8
                            in HDC(1); (c) 
                              λ
                              =
                              16
                            in WSQH-SC; and (d) 
                              T
                              =
                              16
                            in the proposed method. The watermark strength in HDC(2) depends on the threshold value. Refer to [8,15] and [14] for the definition of K, λ, and the threshold value. The major voting on robustness has been used and watermarks with 100 bits have been repeatedly embedded in the host images for spatial-domain methods, i.e., HR and HDC(1), and watermarks with 10 bits have been repeatedly embedded in the host images for the wavelet-domain methods, i.e., HDC(2) and WSQH-SC [15]. Since the proposed method is in the transform domain, the watermarks of 10 bits have been repeatedly embedded in the host images. The parameter Φ has been calculated using Eq. (14) and Table 7
                            contains the results of the robustness comparison. From the results, we can conclude that the proposed method has better robustness results in comparison with the previous methods.

In the experiments that have been conducted in [15] the maximum variance value of the AGN was ‘0.01’. Further testing of the proposed method proved that it is able to withstand AGN with variance value more than ‘0.01’. Because of that we tested the robustness against AGN with zero mean and variance from (0.001 to 0.05, with step 0.001) to find out what is the maximum variance (υ) that the watermark can resist (i.e., the watermark can be extracted without error when the variance is ≤υ). The average υ values are (0.027 for the general images, 0.044 for the medical images, and 0.024 for the SAR images).

The sample images that were used in [15] to compare the visual quality of the watermarked images will be watermarked using the proposed method at the same parameters (i.e., the block size is 
                              4
                              ×
                              4
                           , and the watermark strength is 8 for HR, HDC(1), WSQH-SC, and the proposed method). Table 8
                            contains the comparison of the PSNR values. The PSNR in HR method is very low because of the salt-and-pepper noise. The reader can refer to [15] to see the watermarked images using the previous methods. As shown in Table 8, the PSNR of the proposed method is better than the PSNR of the previous methods, except for the watermarked medical image using HDC(2). The HDC(2) obtained higher visual quality in the medical image because many blocks in the image have been kept unchanged and the watermark bits have been considered as zeros regardless the original bits values, which results in the irreversibility of the scheme.

In [15], the previous methods have been classified into two categories: spatial-domain methods (HR and HDC(1)), and wavelet-domain methods (HDC(2) and WSQH-SC). The capacity of the spatial-domain methods is higher than the capacity of the wavelet-domain methods, because in the spatial domain methods the whole image is used to embed the watermarks while in wavelet-domain methods only one subband is used to carry the watermark [15]. Since the proposed method is in the transform domain, we will make the comparison between the transform-domain methods (i.e., HDC(2), WSQH-SC, and the proposed method). The capacity of these three methods has been compared at different block sizes. The minimum block size in the wavelet-domain methods is 
                              4
                              ×
                              4
                           , while the minimum block size in the proposed method is 
                              2
                              ×
                              2
                           , thus our method improved the capacity. Table 9
                           , contains the comparison of the capacity of the transform-domain methods (note: for WSQH-SC the capacity depends on the threshold value, in Table 9, we calculated the maximum capacity that can be obtained for each block size).

As we mentioned before, the proposed method is completely reversible in all the experiments. Table 10
                            shows the IER results when the block size is 
                              8
                              ×
                              8
                            at threshold values 4 and 8. The reversibility results of our scheme and WSQH-SC scheme are the same, and these are better than the results of HR, HDC(1), and HDC(2) schemes.

The use of the different watermark embedding strategy and the post-processing method improves the performance of the proposed scheme in comparison with the scheme in [30]. Table 11
                         contains a general comparison between the proposed method in this paper and the method in [30], which illustrates that the proposed method improved the capacity because the minimum block size that can be used is 
                           2
                           ×
                           2
                         while the minimum block size in [30] is 
                           4
                           ×
                           4
                        . The proposed method performs better than the method in [30] in terms of invisibility. Both methods are completely reversible and the proposed method has better robustness results in comparison with [30] at the same visual quality and the same watermark size.

In this section, the proposed method has been applied to color images. The following subsections contain the details of the these experiments:

To evaluate the invisibility, four standard color images have been used (Lena, F16, Baboon, and Pepper); the images are of size (
                              512
                              ×
                              512
                              ×
                              24
                            bit).

To examine the effect of the block size on the invisibility, the (
                              
                                 
                                    PSNR
                                 
                                 
                                    c
                                 
                              
                           ) at a block size from 
                              2
                              ×
                              2
                            to 
                              32
                              ×
                              32
                            has been calculated. The payload equals the maximum capacity available at the specified block size (i.e., at a block size 
                              2
                              ×
                              2
                            the payload equals 16384 bits for a single channel and 49152 bits for the three channels (RGB)). Fig. 17
                            shows the original standard color images and samples of the watermarked images of this experiment. Fig. 18
                            shows the results of invisibility for the four standard images in response to block size changes at threshold value 
                              (
                              T
                              =
                              1
                              )
                           . As shown in the results, the visual quality increases with the increase of the block size.

In this experiment, different medical images of size (
                              512
                              ×
                              512
                              ×
                              24
                            bit) have been watermarked by embedding a binary watermark of size (
                              64
                              ×
                              64
                           ) in a single channel (i.e., R channel, G channel, or B channel) of the image. Then three copies of the watermark have been embedded in the three channels (i.e., RGB) of the image. Fig. 19
                            shows the original color medical images and Fig. 20
                            shows samples of the watermarked medical images when the watermark has been embedded in the three channels of the image. The 
                              
                                 
                                    PSNR
                                 
                                 
                                    c
                                 
                              
                           , the normalized correlation (NC) between the original watermark and the extracted watermark, and image reversibility have been tested. Table 12
                            contains the results of this experiment.

To test the performance of the proposed method when the maximum available capacity is used, three different watermarks are embedded in the color medical images. The three watermarks are shown in Fig. 21
                            and the watermarked images and their corresponding PSNRc values are shown in Fig. 22
                           .

In this experiment, a text file that contains the medical report has been converted to a binary sequence. Then the binary sequence has been embedded in the image. Fig. 23
                            shows a sample of the text files. The text reversibility and the image reversibility have been tested. Table 13
                            contains the results of this experiment.

The robust (or semi-fragile) lossless data hiding schemes that have been applied to general color images are in [8] and [9]; where the red channel has been used to carry the watermark bits. This section contains a comparison between the visual quality of the watermarked images of the proposed method and the methods in [8] and [9]. Three images have been used in the previous methods; the images are of size (
                              1536
                              ×
                              1920
                              ×
                              24
                            bit) as shown in Fig. 24
                           . Table 14
                            contains the comparison results at different threshold values. As shown in the results, the visual quality of the watermarked images of the proposed method is better in comparison with the previous methods.

@&#CONCLUSIONS@&#

The main contribution of this paper is presenting a new robust reversible watermarking scheme based on Slantlet transform, which proves the possibility of implementing a completely reversible watermarking scheme using non-integer transform. In the proposed scheme, the SLT matrix has been used to transform the image blocks, which is helpful for controlling the image quality because each block is treated separately. In addition, the use of the SLT is helpful for robustness because of the properties of the SLT coefficients. The embedding process depends on the mean values of the SLT coefficients in the high frequency subbands and this improves the robustness of the watermark. The pixel adjustment process is applied as a post-processing step, which contributes in improving the image quality and obtaining a completely reversible watermarking scheme. The proposed scheme has the following advantages: 1) it outperforms the previous RRW schemes in terms of invisibility, capacity, and robustness, 2) it is widely applicable to different kinds of images (i.e., general images, SAR images, medical images, and color images), 3) it offers robustness not only against unintentional attacks (i.e., noise and lossy compression) but also against some intentional attacks (i.e., histogram equalization, wiener filtering, median filtering, gamma correction, blurring, and sharpening), 4) the binary data can be embedded in the three channels of the RGB color image and thus the capacity has been improved to three times its value in the grayscale images.

The SLT filters have been named as 
                        
                           
                              g
                           
                           
                              i
                           
                        
                        (
                        n
                        )
                     , 
                        
                           
                              f
                           
                           
                              i
                           
                        
                        (
                        n
                        )
                     , and 
                        
                           
                              h
                           
                           
                              i
                           
                        
                        (
                        n
                        )
                     . The number of channels in the SLT filter bank is double the scale value (i.e., in L-scale SLT filter bank there are 2L channels). The first two channels are filtered by the low-pass filter and its adjacent filter (
                        
                           
                              h
                           
                           
                              L
                           
                        
                        (
                        n
                        )
                      and 
                        
                           
                              f
                           
                           
                              L
                           
                        
                        (
                        n
                        )
                     , respectively) and each filter followed by downsampling by 
                        
                           
                              2
                           
                           
                              L
                           
                        
                     . The remaining 2L-2 channels are filtered by 
                        
                           
                              g
                           
                           
                              i
                           
                        
                        (
                        n
                        )
                      and its shifted time-reverse for 
                        i
                        =
                        1
                        ,
                        …
                        ,
                        L
                        −
                        1
                     , after each of them, 
                        
                           
                              2
                           
                           
                              i
                              +
                              1
                           
                        
                      downsampling has been used [18]. The SLT filters are explained as follows:

The filter 
                        
                           
                              g
                           
                           
                              i
                           
                        
                        (
                        n
                        )
                      is described by four parameters (
                        
                           
                              a
                           
                           
                              0
                              ,
                              0
                           
                        
                     , 
                        
                           
                              a
                           
                           
                              0
                              ,
                              1
                           
                        
                     , 
                        
                           
                              a
                           
                           
                              1
                              ,
                              0
                           
                        
                     , and 
                        
                           
                              a
                           
                           
                              1
                              ,
                              1
                           
                        
                     ) and can be defined as:
                        
                           
                              
                                 
                                    g
                                 
                                 
                                    i
                                 
                              
                              (
                              n
                              )
                              =
                              
                                 {
                                 
                                    
                                       
                                          
                                             
                                                a
                                             
                                             
                                                0
                                                ,
                                                0
                                             
                                          
                                          +
                                          
                                             
                                                a
                                             
                                             
                                                0
                                                ,
                                                1
                                             
                                          
                                          n
                                       
                                       
                                          for
                                          
                                          n
                                          =
                                          0
                                          ,
                                          …
                                          ,
                                          
                                             
                                                2
                                             
                                             
                                                i
                                             
                                          
                                          −
                                          1
                                          ,
                                       
                                    
                                    
                                       
                                          
                                             
                                                a
                                             
                                             
                                                1
                                                ,
                                                0
                                             
                                          
                                          +
                                          
                                             
                                                a
                                             
                                             
                                                1
                                                ,
                                                1
                                             
                                          
                                          (
                                          n
                                          −
                                          
                                             
                                                2
                                             
                                             
                                                i
                                             
                                          
                                          )
                                       
                                       
                                          for
                                          
                                          n
                                          =
                                          
                                             
                                                2
                                             
                                             
                                                i
                                             
                                          
                                          ,
                                          …
                                          ,
                                          
                                             
                                                2
                                             
                                             
                                                i
                                                +
                                                1
                                             
                                          
                                          −
                                          1
                                          .
                                       
                                    
                                 
                              
                           
                        
                     
                  

The required parameters (
                        
                           
                              a
                           
                           
                              0
                              ,
                              0
                           
                        
                     , 
                        
                           
                              a
                           
                           
                              0
                              ,
                              1
                           
                        
                     , 
                        
                           
                              a
                           
                           
                              1
                              ,
                              0
                           
                        
                      and 
                        
                           
                              a
                           
                           
                              1
                              ,
                              1
                           
                        
                     ) are obtained as follows:
                        
                           
                              m
                              =
                              
                                 
                                    2
                                 
                                 
                                    i
                                 
                              
                           
                        
                     
                     
                        
                           
                              
                                 
                                    s
                                 
                                 
                                    1
                                 
                              
                              =
                              6
                              
                                 
                                    m
                                    /
                                    
                                       (
                                       
                                          (
                                          
                                             
                                                m
                                             
                                             
                                                2
                                             
                                          
                                          −
                                          1
                                          )
                                       
                                       
                                          (
                                          4
                                          
                                             
                                                m
                                             
                                             
                                                2
                                             
                                          
                                          −
                                          1
                                          )
                                       
                                       )
                                    
                                 
                              
                           
                        
                     
                     
                        
                           
                              
                                 
                                    t
                                 
                                 
                                    1
                                 
                              
                              =
                              2
                              
                                 
                                    3
                                    /
                                    
                                       (
                                       m
                                       
                                          (
                                          
                                             
                                                m
                                             
                                             
                                                2
                                             
                                          
                                          −
                                          1
                                          )
                                       
                                       )
                                    
                                 
                              
                           
                        
                     
                     
                        
                           
                              
                                 
                                    s
                                 
                                 
                                    0
                                 
                              
                              =
                              −
                              
                                 
                                    s
                                 
                                 
                                    1
                                 
                              
                              .
                              (
                              m
                              −
                              1
                              )
                              /
                              2
                           
                        
                     
                     
                        
                           
                              
                                 
                                    t
                                 
                                 
                                    0
                                 
                              
                              =
                              
                                 (
                                 (
                                 m
                                 +
                                 1
                                 )
                                 
                                    
                                       s
                                    
                                    
                                       1
                                    
                                 
                                 /
                                 3
                                 −
                                 m
                                 
                                    
                                       t
                                    
                                    
                                       1
                                    
                                 
                                 )
                              
                              (
                              m
                              −
                              1
                              )
                              /
                              (
                              2
                              m
                              )
                           
                        
                     
                     
                        
                           
                              
                                 
                                    a
                                 
                                 
                                    0
                                    ,
                                    0
                                 
                              
                              =
                              (
                              
                                 
                                    s
                                 
                                 
                                    0
                                 
                              
                              +
                              
                                 
                                    t
                                 
                                 
                                    0
                                 
                              
                              )
                              /
                              2
                           
                        
                     
                     
                        
                           
                              
                                 
                                    a
                                 
                                 
                                    1
                                    ,
                                    0
                                 
                              
                              =
                              (
                              
                                 
                                    s
                                 
                                 
                                    0
                                 
                              
                              −
                              
                                 
                                    t
                                 
                                 
                                    0
                                 
                              
                              )
                              /
                              2
                           
                        
                     
                     
                        
                           
                              
                                 
                                    a
                                 
                                 
                                    0
                                    ,
                                    1
                                 
                              
                              =
                              (
                              
                                 
                                    s
                                 
                                 
                                    1
                                 
                              
                              +
                              
                                 
                                    t
                                 
                                 
                                    1
                                 
                              
                              )
                              /
                              2
                           
                        
                     
                     
                        
                           
                              
                                 
                                    a
                                 
                                 
                                    1
                                    ,
                                    1
                                 
                              
                              =
                              (
                              
                                 
                                    s
                                 
                                 
                                    1
                                 
                              
                              −
                              
                                 
                                    t
                                 
                                 
                                    1
                                 
                              
                              )
                              /
                              2
                              .
                           
                        
                     
                  

The filters 
                        
                           
                              f
                           
                           
                              i
                           
                        
                        (
                        n
                        )
                      and 
                        
                           
                              h
                           
                           
                              i
                           
                        
                        (
                        n
                        )
                      are described by eight parameters (
                        
                           
                              b
                           
                           
                              0
                              ,
                              0
                           
                        
                     , 
                        
                           
                              b
                           
                           
                              0
                              ,
                              1
                           
                        
                     , 
                        
                           
                              b
                           
                           
                              1
                              ,
                              0
                           
                        
                     , 
                        
                           
                              b
                           
                           
                              1
                              ,
                              1
                           
                        
                     , 
                        
                           
                              c
                           
                           
                              0
                              ,
                              0
                           
                        
                     , 
                        
                           
                              c
                           
                           
                              0
                              ,
                              1
                           
                        
                     , 
                        
                           
                              c
                           
                           
                              1
                              ,
                              0
                           
                        
                     , and 
                        
                           
                              c
                           
                           
                              1
                              ,
                              1
                           
                        
                     ) and can be defined as:
                        
                           
                              
                                 
                                    h
                                 
                                 
                                    i
                                 
                              
                              (
                              n
                              )
                              =
                              
                                 {
                                 
                                    
                                       
                                          
                                             
                                                b
                                             
                                             
                                                0
                                                ,
                                                0
                                             
                                          
                                          +
                                          
                                             
                                                b
                                             
                                             
                                                0
                                                ,
                                                1
                                             
                                          
                                          n
                                       
                                       
                                          for
                                          
                                          n
                                          =
                                          0
                                          ,
                                          …
                                          ,
                                          
                                             
                                                2
                                             
                                             
                                                i
                                             
                                          
                                          −
                                          1
                                          ,
                                       
                                    
                                    
                                       
                                          
                                             
                                                b
                                             
                                             
                                                1
                                                ,
                                                0
                                             
                                          
                                          +
                                          
                                             
                                                b
                                             
                                             
                                                1
                                                ,
                                                1
                                             
                                          
                                          (
                                          n
                                          −
                                          
                                             
                                                2
                                             
                                             
                                                i
                                             
                                          
                                          )
                                       
                                       
                                          for
                                          
                                          n
                                          =
                                          
                                             
                                                2
                                             
                                             
                                                i
                                             
                                          
                                          ,
                                          …
                                          ,
                                          
                                             
                                                2
                                             
                                             
                                                i
                                                +
                                                1
                                             
                                          
                                          −
                                          1
                                          ,
                                       
                                    
                                 
                              
                           
                        
                     
                     
                        
                           
                              
                                 
                                    f
                                 
                                 
                                    i
                                 
                              
                              (
                              n
                              )
                              =
                              
                                 {
                                 
                                    
                                       
                                          
                                             
                                                c
                                             
                                             
                                                0
                                                ,
                                                0
                                             
                                          
                                          +
                                          
                                             
                                                c
                                             
                                             
                                                0
                                                ,
                                                1
                                             
                                          
                                          n
                                       
                                       
                                          for
                                          
                                          n
                                          =
                                          0
                                          ,
                                          …
                                          ,
                                          
                                             
                                                2
                                             
                                             
                                                i
                                             
                                          
                                          −
                                          1
                                          ,
                                       
                                    
                                    
                                       
                                          
                                             
                                                c
                                             
                                             
                                                1
                                                ,
                                                0
                                             
                                          
                                          +
                                          
                                             
                                                c
                                             
                                             
                                                1
                                                ,
                                                1
                                             
                                          
                                          (
                                          n
                                          −
                                          
                                             
                                                2
                                             
                                             
                                                i
                                             
                                          
                                          )
                                       
                                       
                                          for
                                          
                                          n
                                          =
                                          
                                             
                                                2
                                             
                                             
                                                i
                                             
                                          
                                          ,
                                          …
                                          ,
                                          
                                             
                                                2
                                             
                                             
                                                i
                                                +
                                                1
                                             
                                          
                                          −
                                          1
                                          .
                                       
                                    
                                 
                              
                           
                        
                     
                  

The required parameters (
                        
                           
                              b
                           
                           
                              0
                              ,
                              0
                           
                        
                     , 
                        
                           
                              b
                           
                           
                              0
                              ,
                              1
                           
                        
                     , 
                        
                           
                              b
                           
                           
                              1
                              ,
                              0
                           
                        
                     , 
                        
                           
                              b
                           
                           
                              1
                              ,
                              1
                           
                        
                     , 
                        
                           
                              c
                           
                           
                              0
                              ,
                              0
                           
                        
                     , 
                        
                           
                              c
                           
                           
                              0
                              ,
                              1
                           
                        
                     , 
                        
                           
                              c
                           
                           
                              1
                              ,
                              0
                           
                        
                     , and 
                        
                           
                              c
                           
                           
                              1
                              ,
                              1
                           
                        
                     ) are obtained as follows:
                        
                           
                              m
                              =
                              
                                 
                                    2
                                 
                                 
                                    i
                                 
                              
                           
                        
                     
                     
                        
                           
                              u
                              =
                              1
                              /
                              
                                 m
                              
                           
                        
                     
                     
                        
                           
                              v
                              =
                              
                                 
                                    
                                       (
                                       2
                                       .
                                       
                                          
                                             m
                                          
                                          
                                             2
                                          
                                       
                                       +
                                       1
                                       )
                                    
                                    /
                                    3
                                 
                              
                           
                        
                     
                     
                        
                           
                              
                                 
                                    b
                                 
                                 
                                    0
                                    ,
                                    0
                                 
                              
                              =
                              u
                              .
                              (
                              v
                              +
                              1
                              )
                              /
                              (
                              2
                              m
                              )
                           
                        
                     
                     
                        
                           
                              
                                 
                                    b
                                 
                                 
                                    1
                                    ,
                                    0
                                 
                              
                              =
                              u
                              −
                              
                                 
                                    b
                                 
                                 
                                    0
                                    ,
                                    0
                                 
                              
                           
                        
                     
                     
                        
                           
                              
                                 
                                    b
                                 
                                 
                                    0
                                    ,
                                    1
                                 
                              
                              =
                              u
                              /
                              m
                           
                        
                     
                     
                        
                           
                              
                                 
                                    b
                                 
                                 
                                    1
                                    ,
                                    1
                                 
                              
                              =
                              −
                              
                                 
                                    b
                                 
                                 
                                    0
                                    ,
                                    1
                                 
                              
                           
                        
                     
                     
                        
                           
                              q
                              =
                              
                                 
                                    3
                                    /
                                    
                                       (
                                       m
                                       .
                                       
                                          (
                                          
                                             
                                                m
                                             
                                             
                                                2
                                             
                                          
                                          −
                                          1
                                          )
                                       
                                       )
                                    
                                 
                              
                              /
                              m
                           
                        
                     
                     
                        
                           
                              
                                 
                                    c
                                 
                                 
                                    0
                                    ,
                                    1
                                 
                              
                              =
                              q
                              .
                              (
                              v
                              −
                              m
                              )
                           
                        
                     
                     
                        
                           
                              
                                 
                                    c
                                 
                                 
                                    1
                                    ,
                                    1
                                 
                              
                              =
                              −
                              q
                              .
                              (
                              v
                              +
                              m
                              )
                           
                        
                     
                     
                        
                           
                              
                                 
                                    c
                                 
                                 
                                    1
                                    ,
                                    0
                                 
                              
                              =
                              
                                 
                                    c
                                 
                                 
                                    1
                                    ,
                                    1
                                 
                              
                              .
                              (
                              v
                              +
                              1
                              −
                              2
                              m
                              )
                              /
                              2
                           
                        
                     
                     
                        
                           
                              
                                 
                                    c
                                 
                                 
                                    0
                                    ,
                                    0
                                 
                              
                              =
                              
                                 
                                    c
                                 
                                 
                                    0
                                    ,
                                    1
                                 
                              
                              .
                              (
                              v
                              +
                              1
                              )
                              /
                              2
                              .
                           
                        
                     
                  

For L-scale filter bank the orthogonal matrix dimension is 
                        
                           
                              2
                           
                           
                              L
                           
                        
                     . As an example, to implement the orthogonal SLT matrix for the scale 
                        L
                        =
                        4
                     , the dimensions of the matrix will be (
                        16
                        ×
                        16
                     ). The first row of the matrix will be corresponded to 
                        
                           
                              h
                           
                           
                              L
                           
                        
                        (
                        n
                        )
                     , which is a constant; by taking the overlapping effect for the filter 
                        
                           
                              h
                           
                           
                              L
                           
                        
                        (
                        n
                        )
                     , the first row elements can be calculated as follows [18]:
                        
                           
                              
                                 
                                    h
                                 
                                 
                                    L
                                 
                              
                              (
                              n
                              )
                              +
                              
                                 
                                    h
                                 
                                 
                                    L
                                 
                              
                              
                                 (
                                 n
                                 +
                                 
                                    
                                       2
                                    
                                    
                                       L
                                    
                                 
                                 )
                              
                              =
                              
                                 
                                    b
                                 
                                 
                                    0
                                    ,
                                    0
                                 
                              
                              +
                              
                                 
                                    b
                                 
                                 
                                    1
                                    ,
                                    0
                                 
                              
                              +
                              (
                              
                                 
                                    b
                                 
                                 
                                    0
                                    ,
                                    1
                                 
                              
                              +
                              
                                 
                                    b
                                 
                                 
                                    1
                                    ,
                                    1
                                 
                              
                              )
                              n
                              =
                              
                                 1
                                 
                                    m
                                 
                              
                              .
                           
                        
                     
                  

For 
                        n
                        =
                        0
                        ,
                        …
                     , 
                        
                           
                              2
                           
                           
                              L
                           
                        
                        −
                        1
                     , and 
                        m
                        =
                        
                           
                              2
                           
                           
                              L
                           
                        
                     .

The second row will be corresponded to 
                        
                           
                              f
                           
                           
                              L
                           
                        
                        (
                        n
                        )
                     , which is a linear function; by taking the overlapping effect for the filter 
                        
                           
                              f
                           
                           
                              L
                           
                        
                        (
                        n
                        )
                     , the second row elements can be calculated as follows [18]:
                        
                           
                              
                                 
                                    f
                                 
                                 
                                    L
                                 
                              
                              (
                              n
                              )
                              +
                              
                                 
                                    f
                                 
                                 
                                    L
                                 
                              
                              
                                 (
                                 n
                                 +
                                 
                                    
                                       2
                                    
                                    
                                       L
                                    
                                 
                                 )
                              
                              =
                              
                                 
                                    c
                                 
                                 
                                    0
                                    ,
                                    0
                                 
                              
                              +
                              
                                 
                                    c
                                 
                                 
                                    1
                                    ,
                                    0
                                 
                              
                              +
                              (
                              
                                 
                                    c
                                 
                                 
                                    0
                                    ,
                                    1
                                 
                              
                              +
                              
                                 
                                    c
                                 
                                 
                                    1
                                    ,
                                    1
                                 
                              
                              )
                              n
                              =
                              
                                 
                                    
                                       3
                                       (
                                       m
                                       −
                                       1
                                       )
                                    
                                    
                                       m
                                       (
                                       m
                                       +
                                       1
                                       )
                                    
                                 
                              
                              −
                              2
                              
                                 
                                    
                                       m
                                       
                                          m
                                          (
                                          
                                             
                                                m
                                             
                                             
                                                2
                                             
                                          
                                          −
                                          1
                                          )
                                       
                                    
                                    n
                                 
                              
                              .
                           
                        
                     
                  

For 
                        n
                        =
                        0
                        ,
                        …
                        ,
                        
                           
                              2
                           
                           
                              L
                           
                        
                        −
                        1
                     , and 
                        m
                        =
                        
                           
                              2
                           
                           
                              L
                           
                        
                     .

The remaining rows will be constructed by the sequences 
                        
                           
                              g
                           
                           
                              i
                           
                        
                        (
                        n
                        )
                     , its time reverse and their shifts by 
                        
                           
                              2
                           
                           
                              i
                              +
                              1
                           
                        
                     , for 
                        i
                        =
                        1
                        ,
                        …
                        ,
                        L
                        −
                        1
                     . Except for the first and second rows, there is no overlapping effect at the boundaries of the matrix [18].

@&#REFERENCES@&#

