@&#MAIN-TITLE@&#Two-phase branch-and-cut for the mixed capacitated general routing problem

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           We deal with the Mixed Capacitated General Routing Problem (MCGRP).


                        
                        
                           
                           We propose an exact two-phase branch-and-cut algorithm to solve the problem.


                        
                        
                           
                           The algorithm is based on a new formulation using two-index variables.


                        
                        
                           
                           Extensive computational experiments prove the effectiveness of our approach.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

General routing problem

Mixed graph

Integer programming

Branch-and-cut algorithm

@&#ABSTRACT@&#


               
               
                  The Mixed Capacitated General Routing Problem (MCGRP) is defined over a mixed graph, for which some vertices must be visited and some links must be traversed at least once. The problem consists of determining a set of least-cost vehicle routes that satisfy this requirement and respect the vehicle capacity. Few papers have been devoted to the MCGRP, in spite of interesting real-world applications, prevalent in school bus routing, mail delivery, and waste collection. This paper presents a new mathematical model for the MCGRP based on two-index variables. The approach proposed for the solution is a two-phase branch-and-cut algorithm, which uses an aggregate formulation to develop an effective lower bounding procedure. This procedure also provides strong valid inequalities for the two-index model. Extensive computational experiments over benchmark instances are presented.
               
            

@&#INTRODUCTION@&#

This paper presents a new exact algorithm for the Mixed Capacitated General Routing Problem (MCGRP) based on branch-and-cut (B&C). The MCGRP generalizes the single-vehicle and multiple-vehicle General Routing Problems (GRPs) and the Capacitated Arc Routing Problem (CARP).

GRPs constitute a class of vehicle-routing problems, in which a single vehicle or a fleet of vehicles must serve both a subset of links and a subset of vertices of a given graph. GRPs have interesting practical applications, prevalent in waste collection, postal delivery and school bus routing. For instance, in an urban waste collection plan, the collection along a street may be modeled by means of links that must be traversed, whereas the collection occurring in specific points (e.g., hospitals or multi-storey apartment blocks) may be modeled by means of vertices that must be visited. Similarly, in the postal delivery services, depending on their demand and dispersion, customers may be modeled as individual vertices or groups of customers as street segments (edges or arcs). Finally, in school bus routing, several children living on the same street may be picked up either by stopping close to each ones home, implying a service on the respective street segments, or groups of them may walk from their home to a specific bus stop imposing just one stop.

The GRP was introduced by Orloff (1974) and shown to be 
                        NP
                      -hard by Lenstra and Rinnooy Kan (1976). Most works refer to the uncapacitated case. Specifically, Letchford (1996, 1999) and Corberán and Sanchis (1998) proposed valid inequalities for the GRP polyhedron. For the same problem, Corberán, Letchford, and Sanchis (2001) described a cutting-plane algorithm based on several classes of facet-inducing inequalities. Reinelt and Theis (2008) studied the 0/1-polytope associated with the uncapacitated GRP defined over a connected and undirected graph. The contribution of Corberán, Romero, and Sanchis (2003) for the GRP defined on a mixed graph was a new integer programming formulation and a partial description of the related polyhedron. They reported remarkable computational results obtained by a cutting-plane algorithm. Corberán, Mejía, and Sanchis (2005) considerably improved this algorithm by defining a new family of facet-defining inequalities and new separation procedures. Blais and Laporte (2003) proposed a transformation in order to solve the uncapacitated GRP defined over directed, undirected and mixed graphs. The GRP is transformed into an equivalent traveling salesman problem or rural postman problem and solved by means of available exact algorithms. The approach does not work equally well in all cases; it works best on directed problems and on mixed problems, in which the number of edges is relatively small. The uncapacitated GRP was also modeled by resorting to windy graphs. Corberán, Plana, and Sanchis (2007, 2008) presented a strong windy general routing polyhedron description and designed a powerful B&C algorithm able to solve a large number of benchmark instances.

The basic multiple-vehicle routing problem is the Capacitated Vehicle Routing Problem (CVRP, see Toth and Vigo, 2002; 2014), in which the demand occurs only at vertices. On the contrary, arc routing problems (ARPs, see Dror, 2000; Corberán and Laporte, 2014) are GRPs in which no vertices have to be serviced. While CVRPs are defined on complete graphs, ARPs share with GRPs that they are defined on incomplete (often sparse) graphs, which are either undirected, directed, mixed, or windy.

Important contributions for the mixed CARP have been given by Belenguer, Benavent, Lacomme, and Prins (2006). They presented a linear formulation, developed a lower bounding procedure based on valid inequalities, and described some upper bounds obtained through three constructive heuristics and a memetic algorithm. Gouveia, Mourão, and Pinto (2010) described a compact flow-based model for the mixed CARP and derived an aggregate lower bounding model. Moreover, they introduced a set of valid inequalities for the linear programming relaxation of the integer model and presented promising computational results.

Note that GRPs can be transformed into CARPs by adding loops, i.e., edges {i, i} or arcs (i, i) to the underlying graph whenever in the GRP instance a vertex i has to be serviced. The edge or arc receives the same demand as the vertex that it substitutes. In this sense, then the mixed CARP and the MCGRP can be considered identical, at least if the mathematical formulation and solution approach is capable of handling loops. To the best of our knowledge, this equivalence has not yet been utilized.

The problem studied and solved in the paper at hand is the MCGRP. It may cause confusion that sometimes the MCGRP is referred to as Capacitated General Routing Problem on mixed graphs (CGRP or CGRP-m) and Node, Edge and Arc Routing Problem (NEARP). There exist lower bounding procedures and tailored exact algorithms for its solution (Bach, 2014; Bach, Hasle, and Wøhlk, 2013; Bosco, Laganà, Musmanno, and Vocaturo, 2013; Gaze, 2013; Gaze, Hasle, and Mannino, 2013). Other studies present non-exact approaches tackling the problem. Particularly, Pandit and Muralidharan (1995) described a heuristic procedure which starts with a sub-graph obtained from the original one by considering only the links that must be traversed and the vertices that must be visited. Since the sub-graph is generally disconnected, the connection is reached by adding to it the shortest paths linking two vertices of disjoint connected components. The sub-graph is then converted into a Eulerian graph which admits a giant tour. A feasible solution is obtained by cutting the giant tour into smaller tours satisfying the capacity constraints. Gutiérrez, Soler, and Hervás (2002) introduced an alternative procedure, based on the partition-first-route-next paradigm, improving previous results. Prins and Bouchenoua (2005) described a memetic algorithm for the MCGRP. Bosco, Laganà, Musmanno, and Vocaturo (in press) introduced a matheuristic algorithm for the MCGRP where the exact algorithm of Bosco et al. (2013) is incorporated in some steps of a neighborhood search. Hasle, Kloster, Smedsrud, and Gaze (2012) carried out a computational study on three large scale MCGRP datasets. Finally, an extension of the MCGRP was tackled by Bräysy, Martínez, Nagata, and Soler (2011).

We propose an alternative exact approach to solve the MCGRP which combines beneficial ingredients from existing procedures in an effective way. The novelty of the approach substantially comprises two aspects. First, it is based on a new MCGRP formulation which uses two-index variables also to model the link flow. Second, it takes advantage from all results of a lower bounding procedure. This procedure produces, besides excellent lower bounds, valid inequalities that are used to initialize a B&C scheme.

The remainder of the paper is organized as follows. In Section 2, a formal definition and the new two-index formulation of the MCGRP are given. In Section 3.1, we present the lower bounding formulation used in the exact approach illustrated in Section 3 in order to determine lower bounds and general cuts. Section 4 presents computational results. Final conclusions are drawn in Section 5.

A formal definition of the MCGRP relies on a mixed graph G = (V, E, A) with vertices set V, edges set E and arcs set A. Vertex 1 ∈ V represents the depot, at which a set K of homogeneous vehicles with capacity Q is based. The remaining vertices form the set C = V\{1}. Every element b ∈ V∪E∪A has a demand qb
                      ≥ 0, those elements with strictly positive demand are required, meaning that they must be serviced exactly once. Required vertices are in VR
                      = {v ∈ C: qv
                      > 0}, required edges are in ER
                      = {e ∈ E: qe
                      > 0}, and required arcs are in AR
                      = {a ∈ A: qa
                      > 0}. In order to ensure feasibility, we assume that the demand qr
                      of each required element r does not exceed Q.

For notational ease, we speak of links when we want to refer to both edges and arcs in E∪A. Any link can be deadheaded, i.e., traversed without being serviced, any number of times. The traversal of a link ℓ ∈ E∪A results in a non-negative traversal cost c
                     ℓ. In the following, required elements are referred to as r ∈ VR
                     ∪ER
                     ∪AR
                      when distinction is not essential.

The MCGRP is the problem of finding minimum-cost vehicle tours, each starting and ending at the depot, that together serve all required elements exactly once, and respect the vehicle capacity.

In order to state the MCGRP models, we introduce further notation used throughout the paper: Let S be a non-empty subset of vertices. We denote by δ
                     +(S) the set of arcs leaving S, by δ
                     −(S) the set of arcs entering S, by 
                        
                           
                              δ
                              R
                              +
                           
                           
                              (
                              S
                              )
                           
                        
                      the set of required arcs leaving S, by 
                        
                           
                              δ
                              R
                              −
                           
                           
                              (
                              S
                              )
                           
                        
                      the set of required arcs entering S, by δ(S) the set of edges with exactly one endpoint in S, and by δR
                     (S) the set of required edges with exactly one endpoint in S. The associated link sets are δ*(S) = δ(S)∪δ
                     +(S)∪δ
                     −(S) and 
                        
                           
                              δ
                              R
                              *
                           
                           
                              (
                              S
                              )
                           
                           =
                           
                              δ
                              R
                           
                           
                              (
                              S
                              )
                           
                           ∪
                           
                              δ
                              R
                              +
                           
                           
                              (
                              S
                              )
                           
                           ∪
                           
                              δ
                              R
                              −
                           
                           
                              (
                              S
                              )
                           
                        
                     . For the sake of brevity, singleton sets S = {i} in the previous notation can be replaced by i so that, e.g., δ(i) stands for δ({i}). Finally, we denote by VR
                     (S) the set of required vertices belonging to S, by AR
                     (S) the set of required arcs with both endpoints in S, and by ER
                     (S) the set of required edges with both endpoints in S.

We propose a new mathematical model based on variables with two indices, one for the respective vehicles k ∈ K and the other for referring to an element of V∪E∪A. Let 
                        
                           x
                           r
                           k
                        
                      be a binary variable equal to 1 if and only if the required element r ∈ VR
                     ∪ER
                     ∪AR
                      is serviced by vehicle k. For a link ℓ ∈ E∪A and a vehicle k ∈ K, let 
                        
                           y
                           ℓ
                           k
                        
                      be a non-negative variable representing the number of deadheadings through ℓ by vehicle k. For a subset of required links L⊆AR
                     ∪ER
                     , we define 
                        
                           
                              x
                              k
                           
                           
                              (
                              L
                              )
                           
                           =
                           
                              ∑
                              
                                 ℓ
                                 ∈
                                 L
                              
                           
                           
                              x
                              ℓ
                              k
                           
                           ,
                        
                      and for a subset of links L⊆A∪E, we define 
                        
                           
                              y
                              k
                           
                           
                              (
                              L
                              )
                           
                           =
                           
                              ∑
                              
                                 ℓ
                                 ∈
                                 L
                              
                           
                           
                              y
                              ℓ
                              k
                           
                        
                     . The two-index formulation for the MCGRP reads as follows:

                        
                           (1a)
                           
                              
                                 
                                    
                                       
                                          
                                             λ
                                             *
                                          
                                          =
                                          min
                                          
                                          
                                             ∑
                                             
                                                k
                                                ∈
                                                K
                                             
                                          
                                          
                                             ∑
                                             
                                                ℓ
                                                ∈
                                                E
                                                ∪
                                                A
                                             
                                          
                                          
                                             c
                                             ℓ
                                          
                                          
                                             y
                                             ℓ
                                             k
                                          
                                          
                                          
                                             (
                                             +
                                             
                                                ∑
                                                
                                                   ℓ
                                                   ∈
                                                   
                                                      E
                                                      R
                                                   
                                                   ∪
                                                   
                                                      A
                                                      R
                                                   
                                                
                                             
                                             
                                                c
                                                ℓ
                                             
                                             )
                                          
                                       
                                    
                                 
                              
                           
                        
                     
                     
                        
                           (1b)
                           
                              
                                 
                                    
                                       
                                          
                                             ∑
                                             
                                                k
                                                ∈
                                                K
                                             
                                          
                                          
                                             x
                                             r
                                             k
                                          
                                          =
                                          1
                                          ,
                                          
                                          ∀
                                          
                                          r
                                          ∈
                                          
                                             V
                                             R
                                          
                                          ∪
                                          
                                             E
                                             R
                                          
                                          ∪
                                          
                                             A
                                             R
                                          
                                       
                                    
                                 
                              
                           
                        
                     
                     
                        
                           (1c)
                           
                              
                                 
                                    
                                       
                                          
                                             ∑
                                             
                                                r
                                                ∈
                                                
                                                   V
                                                   R
                                                
                                                ∪
                                                
                                                   E
                                                   R
                                                
                                                ∪
                                                
                                                   A
                                                   R
                                                
                                             
                                          
                                          
                                             q
                                             r
                                          
                                          
                                             x
                                             r
                                             k
                                          
                                          ≤
                                          Q
                                          ,
                                          
                                          ∀
                                          
                                          k
                                          ∈
                                          K
                                       
                                    
                                 
                              
                           
                        
                     
                     
                        
                           (1d)
                           
                              
                                 
                                    
                                       
                                          
                                             x
                                             k
                                          
                                          
                                             (
                                             
                                                δ
                                                R
                                                *
                                             
                                             
                                                (
                                                i
                                                )
                                             
                                             )
                                          
                                          +
                                          
                                             y
                                             k
                                          
                                          
                                             (
                                             
                                                δ
                                                *
                                             
                                             
                                                (
                                                i
                                                )
                                             
                                             )
                                          
                                          ≡
                                          e
                                          v
                                          e
                                          n
                                          ,
                                          
                                          ∀
                                          
                                          i
                                          ∈
                                          V
                                          ,
                                          
                                          k
                                          ∈
                                          K
                                       
                                    
                                 
                              
                           
                        
                     
                     
                        
                           (1e)
                           
                              
                                 
                                    
                                    
                                    
                                       
                                          
                                             x
                                             k
                                          
                                          
                                             (
                                             
                                                δ
                                                R
                                                −
                                             
                                             
                                                (
                                                S
                                                )
                                             
                                             )
                                          
                                          +
                                          
                                             y
                                             k
                                          
                                          
                                             (
                                             
                                                δ
                                                −
                                             
                                             
                                                (
                                                S
                                                )
                                             
                                             )
                                          
                                          −
                                          
                                             x
                                             k
                                          
                                          
                                             (
                                             
                                                δ
                                                R
                                                +
                                             
                                             
                                                (
                                                S
                                                )
                                             
                                             )
                                          
                                          −
                                          
                                             y
                                             k
                                          
                                          
                                             (
                                             
                                                δ
                                                +
                                             
                                             
                                                (
                                                S
                                                )
                                             
                                             )
                                          
                                          −
                                          
                                             x
                                             k
                                          
                                          
                                             (
                                             
                                                δ
                                                R
                                             
                                             
                                                (
                                                S
                                                )
                                             
                                             )
                                          
                                       
                                    
                                 
                                 
                                    
                                    
                                    
                                       
                                          
                                          −
                                          
                                             y
                                             k
                                          
                                          
                                             (
                                             δ
                                             
                                                (
                                                S
                                                )
                                             
                                             )
                                          
                                          ≤
                                          0
                                          ,
                                          
                                          ∀
                                          
                                          S
                                          ⊂
                                          V
                                          ,
                                          
                                          k
                                          ∈
                                          K
                                       
                                    
                                 
                              
                           
                        
                     
                     
                        
                           (1f)
                           
                              
                                 
                                    
                                       
                                          
                                             x
                                             k
                                          
                                          
                                             (
                                             
                                                δ
                                                R
                                                *
                                             
                                             
                                                (
                                                S
                                                )
                                             
                                             )
                                          
                                          +
                                          
                                             y
                                             k
                                          
                                          
                                             (
                                             
                                                δ
                                                *
                                             
                                             
                                                (
                                                S
                                                )
                                             
                                             )
                                          
                                          ≥
                                          2
                                          
                                             x
                                             r
                                             k
                                          
                                          ,
                                       
                                    
                                    
                                    
                                       
                                          
                                          ∀
                                          
                                          r
                                          ∈
                                          
                                             V
                                             R
                                          
                                          
                                             (
                                             S
                                             )
                                          
                                          ∪
                                          
                                             E
                                             R
                                          
                                          
                                             (
                                             S
                                             )
                                          
                                          ∪
                                          
                                             A
                                             R
                                          
                                          
                                             (
                                             S
                                             )
                                          
                                          ,
                                       
                                    
                                 
                                 
                                    
                                    
                                    
                                       
                                          
                                          S
                                          ⊆
                                          C
                                          ,
                                          
                                          k
                                          ∈
                                          K
                                       
                                    
                                 
                              
                           
                        
                     
                     
                        
                           (1g)
                           
                              
                                 
                                    
                                       
                                          
                                             x
                                             r
                                             k
                                          
                                          ∈
                                          
                                             {
                                             0
                                             ,
                                             1
                                             }
                                          
                                          ,
                                          
                                          ∀
                                          
                                          r
                                          ∈
                                          
                                             V
                                             R
                                          
                                          ∪
                                          
                                             E
                                             R
                                          
                                          ∪
                                          
                                             A
                                             R
                                          
                                          ,
                                          
                                          k
                                          ∈
                                          K
                                       
                                    
                                 
                              
                           
                        
                     
                     
                        
                           (1h)
                           
                              
                                 
                                    
                                       
                                          
                                             y
                                             
                                                ℓ
                                             
                                             k
                                          
                                          ∈
                                          
                                             Z
                                             +
                                          
                                          ,
                                          
                                          ∀
                                          
                                          ℓ
                                          ∈
                                          E
                                          ∪
                                          A
                                          ,
                                          
                                          k
                                          ∈
                                          K
                                          .
                                       
                                    
                                 
                              
                           
                        
                     
                  

Objective (1a) minimizes the total traversal cost. Note that the service costs (in parenthesis) are constant and therefore not relevant for the routing decisions. Constraints (1b) state that each required element must be serviced. Constraints (1c) guarantee the vehicle capacity is never exceeded. Parity constraints (1d) and balanced set conditions (1e) stipulate that each route induces a Eulerian graph. The characterization of a Eulerian mixed graph is given by Ford and Fulkerson (1962): The degree of each vertex (number of links incident with it) is even and for every proper subset of vertices S, the difference between the number of arcs entering and leaving S does not exceed the number of edges with exactly one endpoint in S. Constraints (1f) ensure that each route is connected and connected to the depot. In particular, they impose that for each subset of vertices (excluding the depot) containing a link or vertex serviced by a vehicle, at least two links incident to the subset must be traversed; they also eliminate subtours that do not include the depot. Finally, constraints (1g) and (1h) define the domains of the service and deadheading variables.

Parity constraints (1d) are non-linear, and the only known way to completely replace them by linear constraints is the introduction of additional integer variables 
                           
                              
                                 d
                                 i
                              
                              ∈
                              
                                 Z
                                 +
                              
                              ,
                           
                         one for each vertex i ∈ V. Setting the right-hand side in (1d) to = 2di
                         established the task.

However, there exist linear inequalities that partially cover this requirement:

                           
                              (2)
                              
                                 
                                    
                                       
                                       
                                       
                                          
                                             
                                                x
                                                k
                                             
                                             
                                                (
                                                
                                                   δ
                                                   R
                                                   *
                                                
                                                
                                                   (
                                                   S
                                                   )
                                                
                                                ∖
                                                H
                                                )
                                             
                                             +
                                             
                                                y
                                                k
                                             
                                             
                                                (
                                                
                                                   δ
                                                   *
                                                
                                                
                                                   (
                                                   S
                                                   )
                                                
                                                )
                                             
                                             ≥
                                             
                                                x
                                                k
                                             
                                             
                                                (
                                                H
                                                )
                                             
                                             −
                                             
                                                |
                                                H
                                                |
                                             
                                             +
                                             1
                                             ,
                                          
                                       
                                    
                                    
                                       
                                       
                                       
                                          
                                             
                                             ∀
                                             
                                             k
                                             ∈
                                             K
                                             ,
                                             
                                             S
                                             ⊆
                                             C
                                             ,
                                             
                                             H
                                             ⊆
                                             
                                                δ
                                                R
                                                *
                                             
                                             
                                                (
                                                S
                                                )
                                             
                                             ,
                                             
                                             
                                                |
                                                H
                                                |
                                             
                                             
                                             odd
                                             .
                                          
                                       
                                    
                                 
                              
                           
                        These so-called blossom inequalities are an extension of constraints proposed by Belenguer and Benavent (1998) for the CARP. Their validity can be shown as follows: If all required links in H are serviced by the kth vehicle, i.e., xk
                        (H) = |H|, then, given that |H| is odd, the kth vehicle must cross δ*(S) at least once more. Hence, 
                           
                              
                                 x
                                 k
                              
                              
                                 (
                                 
                                    δ
                                    R
                                    *
                                 
                                 
                                    (
                                    S
                                    )
                                 
                                 ∖
                                 H
                                 )
                              
                              +
                              
                                 y
                                 k
                              
                              
                                 (
                                 
                                    δ
                                    *
                                 
                                 
                                    (
                                    S
                                    )
                                 
                                 )
                              
                           
                         must be at least 1. Otherwise, if xk
                        (H) < |H|, the inequality is trivial.

The formulation just described yields a large number of equivalent solutions. In fact, since all vehicles have the same capacity, for a given solution any permutation of the vehicle indices induces another equivalent solution. In order to avoid equivalent solutions, we introduce additional constraints similar to the ones proposed by Fischetti, Salazar González, and Toth (1995) and Ghiani, Laganà, Laporte and Musmanno (2007). Let η be the number of required elements, i.e., η = |VR
                        ∪ER
                        ∪AR
                        |, and let K = {1, 2, …, m}. Moreover, let rt
                         be the tth required element (t = 1, …, η). Generally speaking, any rule can be used to order the required elements. Let s(k) be the smallest index of the required elements serviced by vehicle k ∈ K. In order to impose the condition s(1) ≤ s(2) ≤ s(3) ≤ ⋅⋅⋅ ≤ s(m), the following set of symmetry breaking constraints are valid:

                           
                              (3a)
                              
                                 
                                    
                                       
                                          
                                             
                                                x
                                                
                                                   
                                                      r
                                                      1
                                                   
                                                
                                                1
                                             
                                             =
                                             1
                                          
                                       
                                    
                                 
                              
                           
                        
                        
                           
                              (3b)
                              
                                 
                                    
                                       
                                          
                                             
                                                x
                                                
                                                   
                                                      r
                                                      t
                                                   
                                                
                                                k
                                             
                                             ≤
                                             
                                                ∑
                                                
                                                   j
                                                   =
                                                   1
                                                   ,
                                                   …
                                                   ,
                                                   t
                                                   −
                                                   1
                                                
                                             
                                             
                                                x
                                                
                                                   
                                                      r
                                                      j
                                                   
                                                
                                                
                                                   k
                                                   −
                                                   1
                                                
                                             
                                             ,
                                             
                                             ∀
                                             
                                             t
                                             =
                                             2
                                             ,
                                             …
                                             ,
                                             η
                                             ,
                                             
                                             k
                                             =
                                             3
                                             ,
                                             …
                                             ,
                                             m
                                          
                                       
                                    
                                 
                              
                           
                        
                        
                           
                              (3c)
                              
                                 
                                    
                                       
                                          
                                             
                                                x
                                                
                                                   
                                                      r
                                                      t
                                                   
                                                
                                                k
                                             
                                             =
                                             0
                                             ,
                                             
                                             ∀
                                             t
                                             =
                                             2
                                             ,
                                             …
                                             ,
                                             m
                                             −
                                             1
                                             ,
                                             
                                             k
                                             =
                                             t
                                             +
                                             1
                                             ,
                                             …
                                             ,
                                             m
                                             .
                                          
                                       
                                    
                                 
                              
                           
                        
                     

Constraint (3a) states that the first vehicle must serve the first required element. Constraints (3b) stipulate that if the tth element rt
                         is serviced by the kth vehicle (k ≥ 3), then at least one required element associated with an index preceding t must be serviced by the vehicle k − 1; for k = 2 the inequalities are trivial. Finally, constraints (3c) state that element rt
                         (t ≤ m − 1) cannot be serviced by any of the vehicles k = t + 1, …, m.

These symmetry breaking constraints seem effective for the MCGRP. Other inequalities can be adapted to the problem from the literature (e.g., see Adulyasak, Cordeau, and Jans, 2014).

We propose a B&C algorithm that works in two phases. In the first phase, an aggregate so-called one-index formulation that comprises a relaxation of formulation (1) is solved. The linear relaxation of the one-index formulation contains an exponential number of constraints, which have to be identified and added dynamically in a cutting-plane fashion. It typically provides an excellent lower bound that can be further strengthened by adding valid inequalities. Compared to formulation (1), solving the one-index formulation needs only a little fraction of computation time.

In the second phase, the two-index formulation is initialized with the inequalities from the one-index formulation. Since also some of the constraints of formulation (1) are exponential families of inequalities, the B&C algorithm (see Wolsey, 1998, for an introduction) then adds violated of these and other inequalities. If the solution of the linear problem is not integer or, alternatively, there exists at least one vertex with an odd degree, then the branching decision splits the problem into two complementary subproblems, and the same procedure is applied to each of them recursively. If a subproblem is infeasible or proven to be unprofitable for the search of optimal solutions, it is discarded. Our B&C algorithm also uses an external heuristic procedure to obtain an initial upper bound.

We will start with a more detailed description of the first phase for lower bounding, outline the heuristic that provides upper bounds and feasible solutions, and describe and summarize the major components of the B&C algorithm.

Since the computational effort for solving the MCGRP with model (1) exactly is huge (sometimes prohibitive) it is fundamental to produce tight bounds very fast. In order to obtain good lower bounds, we solve a one-index formulation very similar to the model presented in Belenguer et al. (2006). It solely uses a vector of aggregated deadheading variables

                           
                              (4)
                              
                                 
                                    
                                       y
                                       ℓ
                                    
                                    =
                                    
                                       ∑
                                       
                                          k
                                          ∈
                                          K
                                       
                                    
                                    
                                       y
                                       ℓ
                                       k
                                    
                                    ∈
                                    
                                       Z
                                       +
                                    
                                    ,
                                 
                              
                           
                        one for each link ℓ ∈ E∪A.

The major difference to the formulation of Belenguer et al. (2006) is that for the MCGRP the coefficients need to be defined differently: Recall that in the definition of q(S), the demand on vertices is taken into account. Specifically, let q(S) be the total demand of the required elements in 
                           
                              
                                 E
                                 R
                              
                              
                                 (
                                 S
                                 )
                              
                              ∪
                              
                                 A
                                 R
                              
                              
                                 (
                                 S
                                 )
                              
                              ∪
                              
                                 δ
                                 R
                                 *
                              
                              
                                 (
                                 S
                                 )
                              
                              ∪
                              
                                 V
                                 R
                              
                              
                                 (
                                 S
                                 )
                              
                           
                        . Thus, for any subset S of vertices, at least K(S) = ⌈q(S)/Q⌉ vehicles are needed to serve 
                           
                              
                                 E
                                 R
                              
                              
                                 (
                                 S
                                 )
                              
                              ∪
                              
                                 A
                                 R
                              
                              
                                 (
                                 S
                                 )
                              
                              ∪
                              
                                 δ
                                 R
                                 *
                              
                              
                                 (
                                 S
                                 )
                              
                              ∪
                              
                                 V
                                 R
                              
                              
                                 (
                                 S
                                 )
                              
                           
                        . Moreover, let 
                           
                              
                                 b
                                 
                                    (
                                    S
                                    )
                                 
                                 =
                                 |
                              
                              
                                 δ
                                 R
                                 −
                              
                              
                                 
                                    (
                                    S
                                    )
                                 
                                 |
                                 −
                                 |
                              
                              
                                 δ
                                 R
                                 +
                              
                              
                                 
                                    (
                                    S
                                    )
                                 
                                 |
                                 −
                                 |
                              
                              
                                 δ
                                 R
                              
                              
                                 
                                    (
                                    S
                                    )
                                 
                                 |
                              
                           
                         be the unbalance of S. For any link subset L⊆E∪A, we define y(L) = ∑ℓ ∈ L
                        
                        y
                        ℓ. The linear relaxation of one-index formulation reads as follows:

                           
                              (5a)
                              
                                 
                                    
                                       
                                          
                                             
                                                λ
                                                ̲
                                             
                                             =
                                             min
                                             
                                             
                                                ∑
                                                
                                                   ℓ
                                                   ∈
                                                   E
                                                   ∪
                                                   A
                                                
                                             
                                             
                                                c
                                                ℓ
                                             
                                             
                                                y
                                                ℓ
                                             
                                             
                                                (
                                                +
                                                
                                                   ∑
                                                   
                                                      ℓ
                                                      ∈
                                                      
                                                         E
                                                         R
                                                      
                                                      ∪
                                                      
                                                         A
                                                         R
                                                      
                                                   
                                                
                                                
                                                   c
                                                   ℓ
                                                
                                                )
                                             
                                          
                                       
                                    
                                 
                              
                           
                        
                        
                           
                              (5b)
                              
                                 
                                    
                                       
                                          
                                             y
                                             
                                                (
                                                
                                                   δ
                                                   *
                                                
                                                
                                                   (
                                                   S
                                                   )
                                                
                                                )
                                             
                                             ≥
                                             1
                                             ,
                                             
                                             
                                                
                                                   ∀
                                                   S
                                                   ⊆
                                                   C
                                                   ,
                                                   |
                                                
                                                
                                                   δ
                                                   R
                                                   *
                                                
                                                
                                                   
                                                      (
                                                      S
                                                      )
                                                   
                                                   |
                                                   
                                                   odd
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           
                        
                        
                           
                              (5c)
                              
                                 
                                    
                                       
                                          
                                             y
                                             
                                                (
                                                
                                                   δ
                                                   *
                                                
                                                
                                                   (
                                                   S
                                                   )
                                                
                                                )
                                             
                                             ≥
                                             2
                                             K
                                             
                                                (
                                                S
                                                )
                                             
                                             −
                                             
                                                |
                                                
                                                   δ
                                                   R
                                                   *
                                                
                                                
                                                   (
                                                   S
                                                   )
                                                
                                                |
                                             
                                             ,
                                             
                                             
                                                ∀
                                                S
                                                ⊆
                                                C
                                             
                                          
                                       
                                    
                                 
                              
                           
                        
                        
                           
                              (5d)
                              
                                 
                                    
                                       
                                          
                                             y
                                             
                                                (
                                                δ
                                                
                                                   (
                                                   S
                                                   )
                                                
                                                )
                                             
                                             +
                                             y
                                             
                                                (
                                                
                                                   δ
                                                   +
                                                
                                                
                                                   (
                                                   S
                                                   )
                                                
                                                )
                                             
                                             −
                                             y
                                             
                                                (
                                                
                                                   δ
                                                   −
                                                
                                                
                                                   (
                                                   S
                                                   )
                                                
                                                )
                                             
                                             ≥
                                             b
                                             
                                                (
                                                S
                                                )
                                             
                                             ,
                                             
                                             
                                                ∀
                                                S
                                                ⊂
                                                V
                                             
                                          
                                       
                                    
                                 
                              
                           
                        
                        
                           
                              (5e)
                              
                                 
                                    
                                       
                                          
                                             
                                                y
                                                ℓ
                                             
                                             ≥
                                             0
                                             ,
                                             
                                             
                                                ∀
                                                ℓ
                                                ∈
                                                E
                                                ∪
                                                A
                                             
                                             .
                                          
                                       
                                    
                                 
                              
                           
                        
                     

Objective (5a) provides a lower bound  
                           λ
                         for λ*. Odd-cut inequalities (5b) require that at least one link is deadheaded whenever an odd number of required links in δ*(S) occurs. Capacity inequalities (5c) require at least 2K(S) traversals (services and deadheadings) along some links of δ*(S). Balance inequalities (5d) require at least 
                           
                              
                                 |
                              
                              
                                 δ
                                 R
                                 −
                              
                              
                                 
                                    (
                                    S
                                    )
                                 
                                 |
                                 −
                                 |
                              
                              
                                 δ
                                 R
                                 +
                              
                              
                                 
                                    (
                                    S
                                    )
                                 
                                 |
                                 −
                                 |
                              
                              
                                 δ
                                 R
                              
                              
                                 
                                    (
                                    S
                                    )
                                 
                                 |
                              
                           
                         deadheadings if the difference between incoming and outgoing arcs cannot be compensated by edges in the cutset.

Note that we might solve (5) as an integer program by replacing y
                        ℓ ≥ 0 with 
                           
                              
                                 y
                                 ℓ
                              
                              ∈
                              
                                 Z
                                 +
                              
                           
                        . However, these integer “solutions” are solutions to a relaxation only. It can happen that there exists no feasible integer solution to the disaggregated model (1) compatible with (4).

At each iteration of a cutting-plane algorithm, we solve a linear program which contains the non-negativity constraints, a subset of (5b)–(5d) constraints, and disjoint-path inequalities (see Belenguer and Benavent, 2003). Separation routines are identical to those described in next Section 3.3 and seek for a set of valid inequalities violated by the current solution.

An initial feasible solution for the MCGRP is built on the basis of a partition-first-route-next heuristic. Herein, a feasible partition of the required elements is found by solving a Capacitated Concentrator Location-based Problem (CCLP), in which m required elements are selected as concentrator location, and the remaining required elements are grouped around the concentrators. Several location-based heuristics have been proposed in the literature (e.g., Bramel and Simchi-Levi, 1995). Recent discretized formulations for different versions of the CCLP have been provided by Gouveia and Saldanha-da-Gama (2006) and Correia, Gouveia, and Saldanha-da-Gama (2010).

The following constraints must be fulfilled: (i) a required element is assigned to itself if it is a concentrator; (ii) each required element is assigned to only one concentrator; (iii) each required element may be assigned to another required element if and only if the latter is a concentrator; (iv) the overall demand of the required elements assigned to a concentrator cannot exceed its capacity, that is the vehicle capacity; (v) the number of required elements selected as concentrators is equal to the number of vehicles. The goal is the minimization of the total assignment cost that intended to approximate the routing costs. The cost for assigning a required element to a concentrator is equal to the shortest-path distance between the potential concentrator and the required element. Since the cost matrix associated with G is generally not symmetric, all feasible shortest paths starting from a required element and ending to any potential concentrator, and vice versa, must be evaluated in order to select the one having the minimum distance. The solution of the CCLP gives a feasible partition of the required elements. An optimal routing associated with each partition is defined by solving an uncapacitated GRP on a mixed graph. We use the same B&C algorithm developed in this paper (second phase) to exactly solve the problem associated with each partition: We have to adjust the definition of the required elements and set m = 1.

The weakness of the partition-first-route-next approach lies in the fact that the objective function of the CCLP only approximates the routing costs. To mitigate this effect, an iterative scheme is designed: At each iteration, a set of diversification constraints is added dynamically to the mathematical program used to solve the CCLP stipulating the selection of a different concentrator set. More precisely, let 
                           C
                         be the set of concentrators. Then, a feasible MCGRP solution, whose cost is denoted by 
                           
                              λ
                              (
                              C
                              )
                              ,
                           
                         remains associated with 
                           C
                        . The gap of 
                           
                              λ
                              (
                              C
                              )
                           
                         with respect to 
                           λ
                         is computed as 
                           
                              
                                 λ
                                 
                                    (
                                    C
                                    )
                                 
                                 −
                                 
                                    λ
                                    ̲
                                 
                              
                              
                                 λ
                                 ̲
                              
                           
                        . Such a gap, named 
                           
                              GAP
                              (
                              C
                           
                        ), is used to evaluate set 
                           C
                        . If 
                           
                              GAP
                              (
                              C
                           
                        ) is more than a fixed φ, then a tabu constraint is added to the mathematical program. The tabu constraint is implemented by imposing that all binary variables, set to 1 only for the required elements belonging to 
                           
                              C
                              ,
                           
                         flip their value from 1 to 0. If 
                           
                              G
                              A
                              P
                              (
                              C
                           
                        ) is less than or equal to φ, then a diversification constraint is added to the mathematical program. The diversification constraint ensures that at least one of the binary variables previously defined flips its value from 1 to 0 or from 0 to 1. The iterative diversification process ends whenever the model becomes infeasible due to the added tabu and diversification constraints, or a given number of iterations is reached. We set φ = 0.05 in our computational experiments. Finally, a last attempt to obtain a feasible MCGRP solution of minimum cost is made by solving a set partitioning model, in which the involved routes are all different routes associated with the feasible MCGRP solutions found during the iterative algorithm.

Separation routines are used in both the B&C algorithm for solving the MCGRP and the one-index formulation (5).

Specifically, connectivity constraints (1f) can be separated by adapting the exact and heuristic procedures used in Bosco et al. (2013). The separation of odd-cut inequalities (5b) is straightforward and is already described in Padberg and Rao (1982). Arcs are handled as edges and the polynomial odd minimum cut algorithm is applied. To separate capacity inequalities (5c) two methods are known from the literature. A heuristic method was presented by Belenguer and Benavent (2003) and an exact method by Ahr (2004). Both methods are used for one-index formulation (5), while in the second phase capacity inequalities (5c) are identified solely using the heuristic method. Belenguer and Benavent (2003) also presented disjoint-path inequalities as additional valid inequalities. Separation routines for these inequalities are adapted from their paper.

The separation of balance inequalities is also known from the literature (e.g., Benavent, Corberán, and Sanchis, 2000), but more intricate to implement for the MCGRP. We will give a short description of the procedure. Balanced set conditions (1e) can be rewritten as

                           
                              
                                 
                                    
                                       
                                          
                                             
                                                y
                                                k
                                             
                                             
                                                (
                                                δ
                                                
                                                   (
                                                   S
                                                   )
                                                
                                                )
                                             
                                             +
                                             
                                                x
                                                k
                                             
                                             
                                                (
                                                
                                                   δ
                                                   R
                                                
                                                
                                                   (
                                                   S
                                                   )
                                                
                                                )
                                             
                                             
                                             
                                          
                                       
                                       
                                          +
                                       
                                       
                                          
                                             
                                                y
                                                k
                                             
                                             
                                                (
                                                
                                                   δ
                                                   +
                                                
                                                
                                                   (
                                                   S
                                                   )
                                                
                                                )
                                             
                                             +
                                             
                                                x
                                                k
                                             
                                             
                                                (
                                                
                                                   δ
                                                   R
                                                   +
                                                
                                                
                                                   (
                                                   S
                                                   )
                                                
                                                )
                                             
                                          
                                       
                                    
                                    
                                       
                                       
                                          −
                                       
                                       
                                          
                                             
                                                y
                                                k
                                             
                                             
                                                (
                                                
                                                   δ
                                                   −
                                                
                                                
                                                   (
                                                   S
                                                   )
                                                
                                                )
                                             
                                             −
                                             
                                                x
                                                k
                                             
                                             
                                                (
                                                
                                                   δ
                                                   R
                                                   −
                                                
                                                
                                                   (
                                                   S
                                                   )
                                                
                                                )
                                             
                                             ≥
                                             0
                                             ,
                                             
                                             
                                             ∀
                                             
                                             S
                                             ⊂
                                             V
                                             ,
                                             
                                             k
                                             ∈
                                             K
                                          
                                       
                                    
                                 
                              
                           
                        and in (5) as

                           
                              
                                 
                                    
                                       
                                          
                                             
                                                y
                                                
                                                   (
                                                   δ
                                                   
                                                      (
                                                      S
                                                      )
                                                   
                                                   )
                                                
                                                +
                                                |
                                             
                                             
                                                δ
                                                R
                                             
                                             
                                                
                                                   (
                                                   S
                                                   )
                                                
                                                |
                                                
                                             
                                          
                                       
                                       
                                          +
                                       
                                       
                                          
                                             y
                                             
                                                (
                                                
                                                   δ
                                                   +
                                                
                                                
                                                   (
                                                   S
                                                   )
                                                
                                                )
                                             
                                             +
                                             
                                                |
                                                
                                                   δ
                                                   R
                                                   +
                                                
                                                
                                                   (
                                                   S
                                                   )
                                                
                                                |
                                             
                                          
                                       
                                    
                                    
                                       
                                       
                                          −
                                       
                                       
                                          
                                             y
                                             
                                                (
                                                
                                                   δ
                                                   −
                                                
                                                
                                                   (
                                                   S
                                                   )
                                                
                                                )
                                             
                                             −
                                             
                                                |
                                                
                                                   δ
                                                   R
                                                   −
                                                
                                                
                                                   (
                                                   S
                                                   )
                                                
                                                |
                                             
                                             ≥
                                             0
                                             ,
                                             
                                             ∀
                                             
                                             S
                                             ⊂
                                             V
                                             .
                                          
                                       
                                    
                                 
                              
                           
                        In order to separate violated inequalities, the algorithm of Nobert and Picard (1996) can be adapted. Such a procedure is also described by Benavent et al. (2000) for an uncapacitated problem, in which all links are required. We define, for a solution 
                           
                              (
                              
                                 
                                    x
                                    ^
                                 
                                 ℓ
                                 k
                              
                              ,
                              
                                 
                                    y
                                    ^
                                 
                                 ℓ
                                 k
                              
                              )
                           
                         to (1) concerning the kth vehicle, or a solution 
                           
                              (
                              
                                 
                                    y
                                    ^
                                 
                                 ℓ
                              
                              )
                           
                         to (5)
                        
                           
                              
                                 
                                    
                                       
                                          
                                             w
                                             ℓ
                                             k
                                          
                                       
                                       
                                          =
                                       
                                       
                                          
                                             {
                                             
                                                
                                                   
                                                      
                                                         
                                                            
                                                               y
                                                               ^
                                                            
                                                            ℓ
                                                            k
                                                         
                                                         +
                                                         
                                                            
                                                               x
                                                               ^
                                                            
                                                            ℓ
                                                            k
                                                         
                                                         ,
                                                      
                                                   
                                                   
                                                      
                                                         ℓ
                                                         ∈
                                                         
                                                            E
                                                            R
                                                         
                                                         ∪
                                                         
                                                            A
                                                            R
                                                         
                                                      
                                                   
                                                
                                                
                                                   
                                                      
                                                         
                                                            
                                                               y
                                                               ^
                                                            
                                                            ℓ
                                                            k
                                                         
                                                         ,
                                                      
                                                   
                                                   
                                                      
                                                         ℓ
                                                         ∈
                                                         
                                                            (
                                                            E
                                                            ∪
                                                            A
                                                            )
                                                         
                                                         ∖
                                                         
                                                            (
                                                            
                                                               E
                                                               R
                                                            
                                                            ∪
                                                            
                                                               A
                                                               R
                                                            
                                                            )
                                                         
                                                      
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           
                        and

                           
                              
                                 
                                    
                                       
                                          
                                             w
                                             ℓ
                                          
                                       
                                       
                                          =
                                       
                                       
                                          
                                             {
                                             
                                                
                                                   
                                                      
                                                         
                                                            
                                                               y
                                                               ^
                                                            
                                                            ℓ
                                                         
                                                         +
                                                         1
                                                         ,
                                                      
                                                   
                                                   
                                                      
                                                         ℓ
                                                         ∈
                                                         
                                                            E
                                                            R
                                                         
                                                         ∪
                                                         
                                                            A
                                                            R
                                                         
                                                      
                                                   
                                                
                                                
                                                   
                                                      
                                                         
                                                            
                                                               y
                                                               ^
                                                            
                                                            ℓ
                                                         
                                                         ,
                                                      
                                                   
                                                   
                                                      
                                                         ℓ
                                                         ∈
                                                         
                                                            (
                                                            E
                                                            ∪
                                                            A
                                                            )
                                                         
                                                         ∖
                                                         
                                                            (
                                                            
                                                               E
                                                               R
                                                            
                                                            ∪
                                                            
                                                               A
                                                               R
                                                            
                                                            )
                                                         
                                                         ,
                                                      
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           
                        respectively. For any link subset L, we define 
                           
                              w
                              
                                 (
                                 L
                                 )
                              
                              =
                              
                                 ∑
                                 
                                    ℓ
                                    ∈
                                    L
                                 
                              
                              
                                 w
                                 ℓ
                                 k
                              
                           
                         (alternatively, w(L) = ∑ℓ ∈ L
                        
                        w
                        ℓ). Then, for any vertex subset S, we can determine f(S) = w(δ(S)) + w(δ
                        +(S)) − w(δ
                        −(S)). A set S for which f(S) is minimum is the most unbalanced set, and f(S) < 0 identifies a violated balanced set condition. The point is that the algorithm of Nobert and Picard (1996) finds such a set S by solving a maximum-flow problem over another auxiliary graph with only positive arc weights.

The initial relaxation of the MCGRP, at the root node of the B&C tree, is a linear program which includes the following components: Objective function (1a), all constraints (1b) and (1c), balanced set conditions (1e) associated with the unbalanced vertices i, for which |δ(i)| < |δ
                        −(i)| − |δ
                        +(i)| holds. Moreover, it includes connectivity constraints (1f) associated with the R-sets, i.e., the connected components of the graph induced by all required elements.

The initial relaxation also contains inequalities (2) associated with each vertex i for which 
                           
                              
                                 |
                              
                              
                                 δ
                                 R
                                 *
                              
                              
                                 
                                    (
                                    i
                                    )
                                 
                                 |
                              
                           
                         is odd fixing 
                           
                              H
                              =
                              
                                 δ
                                 R
                                 *
                              
                              
                                 (
                                 i
                                 )
                              
                              ,
                           
                         symmetry breaking constraints (3a)–(3c), and the valid inequalities generated by the lower bounding procedure. Note that the required elements are ordered so that the initial solution does not violate the symmetry breaking constraints.

An iteration of the B&C algorithm involves the selection of a subproblem from the list of active subproblems and the addition of violated constraints and valid inequalities to this subproblem. The set containing violated constraints and valid inequalities is called cut pool. In our implementation, the cut pool is cleaned every 50 iterations by eliminating non-binding inequalities, i.e., those with slack greater than ɛ or dual variables less than ɛ, where ɛ = 10−6 is the tolerance. Note that the cuts generated in the first phase are eliminated in the second phase whenever they become non-binding inequalities.

Consider a solution which does not contain fractional variables, where 
                           
                              (
                              
                                 
                                    x
                                    ^
                                 
                                 ℓ
                                 k
                              
                              ,
                              
                                 
                                    y
                                    ^
                                 
                                 ℓ
                                 k
                              
                              )
                           
                         refers to the kth vehicle. In this case, the standard branching on fractional variables is not activated. If, however, the solution is not feasible for the MCGRP, then there exists at least a vertex with odd degree. Let 
                           
                              
                                 d
                                 i
                                 k
                              
                              =
                              
                                 
                                    x
                                    ^
                                 
                                 k
                              
                              
                                 (
                                 
                                    δ
                                    R
                                    *
                                 
                                 
                                    (
                                    i
                                    )
                                 
                                 )
                              
                              +
                              
                                 
                                    y
                                    ^
                                 
                                 k
                              
                              
                                 (
                                 
                                    δ
                                    *
                                 
                                 
                                    (
                                    i
                                    )
                                 
                                 )
                              
                           
                         be the degree of the odd vertex i with respect to the kth route. Two branches 
                           
                              
                                 x
                                 k
                              
                              
                                 (
                                 
                                    δ
                                    R
                                    *
                                 
                                 
                                    (
                                    i
                                    )
                                 
                                 )
                              
                              +
                              
                                 y
                                 k
                              
                              
                                 (
                                 
                                    δ
                                    *
                                 
                                 
                                    (
                                    i
                                    )
                                 
                                 )
                              
                              ≤
                              2
                              p
                           
                         and 
                           
                              
                                 x
                                 k
                              
                              
                                 (
                                 
                                    δ
                                    R
                                    *
                                 
                                 
                                    (
                                    i
                                    )
                                 
                                 )
                              
                              +
                              
                                 y
                                 k
                              
                              
                                 (
                                 
                                    δ
                                    *
                                 
                                 
                                    (
                                    i
                                    )
                                 
                                 )
                              
                              ≥
                              2
                              p
                              +
                              2
                           
                         are created with 
                           
                              p
                              ∈
                              
                                 Z
                                 +
                              
                           
                         defined by 
                           
                              2
                              p
                              <
                              
                                 d
                                 i
                                 k
                              
                              <
                              2
                              p
                              +
                              2
                           
                        .

The specific variable to branch on is determined by using a first-accept strategy. Specifically, we select the first vertex i which is marked as odd during the check.

An outline of our solution approach is provided in the following. The management of the cut pool is omitted in order to simplify the scheme:

                           
                              
                                 Step 1.
                              
                              Call the lower bounding procedure to compute 
                                    λ
                                  and cuts used in (5).

Call the heuristic to compute an upper bound 
                                    
                                       λ
                                       ¯
                                    
                                  and an initial solution.

If 
                                    
                                       
                                          λ
                                          ¯
                                       
                                       =
                                       
                                          λ
                                          ̲
                                       
                                       ,
                                    
                                  STOP.

Define a relaxed MCGRP formulation as described in Section 3.4 and insert the resulting subproblem into the list Θ.

If Θ is empty or 
                                    
                                       
                                          λ
                                          ¯
                                       
                                       =
                                       
                                          λ
                                          ̲
                                       
                                       ,
                                    
                                  STOP. Otherwise extract a subproblem P from Θ.

Solve the subproblem P. Let λP
                                  be the solution value. If 
                                    
                                       
                                          λ
                                          P
                                       
                                       ≥
                                       
                                          λ
                                          ¯
                                       
                                       ,
                                    
                                  go back to Step 5.

Separate violated constraints (1f). If the heuristic algorithm fails, apply the exact separation algorithm.

Separate violated inequalities (1e).

Separate violated inequalities (5b).

Separate violated inequalities (5c).

If some violated inequalities have been identified in Steps 7–10, add these inequalities to the cut pool and go back to Step 6.

Otherwise, if the current solution is feasible, set 
                                    
                                       
                                          λ
                                          ¯
                                       
                                       =
                                       
                                          λ
                                          P
                                       
                                    
                                  and go back to Step 5.

If the current solution is not integer, generate two subproblems by branching on a fractional variable. Otherwise, generate two subproblems by branching on vertex degrees as described in Section 3.5.

Insert the subproblems into Θ and go back to Step 5.

The instances used in the computational experiments stem from the paper by Bosco et al. (2013). These instances were derived from the gdb instances introduced by Golden, Dearmon, and Baker (1983) for the undirected CARP and from the mval instances provided by Belenguer et al. (2006) for the mixed CARP. For each original instance, six new instances were generated using an additional parameter β in the set {0.25, 0.30, 0.35, 0.40, 0.45, 0.50}, where β controls the number of required links whose demand is shifted to adjacent vertices. The new instances were named mggdb and mgval and additional details about their characteristics are discussed in Bosco et al. (2013). For the sake of brevity, we limited the investigation to instances with β ∈ {0.25, 0.30, 0.35}. For the other mggdb and mgval datasets the performance should remain rather similar (see Bosco et al., 2013). On the contrary, we consider all mggdb and mgval instances including those for which the number of vehicles m exceeds 7.

In Tables 1–7
                     
                     
                     
                     
                     
                     
                     , the columns named “CG” report the results obtained by a column generation (CG) method (Gaze, 2013; Gaze et al., 2013); the columns named “B&C&P” report the results obtained by the branch-and-cut-and-price (B&C&P) algorithm of Bach (2014); the columns named “B&C” report the results obtained by the B&C algorithm of Bosco et al. (2013); the columns named “New.B&C” report the results obtained by our B&C algorithm. In Tables 1–6, the column headers mean the following:

                        FILE
                        
                           Instance name

Number of vehicles

Number |VR
                              ∪ER
                              ∪AR
                              | of required elements

Lower bound (first phase for New.B&C)

Initial upper bound provided by the location-based heuristic

Best solution value reached within a time limit (an optimal value certified by the algorithm is marked with an asterisk)

Percentage gap

Number of connectivity, capacity, odd-cut, balanced set inequalities (inequalities generated in the second phase)

Number of nodes from the search tree

Computation time in seconds for the first phase

Computation time in seconds for the location-based heuristic

Total computation time in seconds (the time limit corresponding to 6 hours is marked with TL).

For B&C results, we just report times, objective function values and percentage gaps; the lower bounds are not reported because they were generally poor (outcomes at the root node of the search tree). For CG and B&C&P results, we just report lower bounds, objective function values and percentage gaps; the times are not explicitly reported but all results were obtained within a time limit of 1 hour (2 hours for mgval instances) for CG results and 3 hours for B&C&P results. Note that, for the B&C&P algorithm, the percentage gaps were calculated as 
                        
                           100
                           
                              
                                 (
                                 
                                    λ
                                    ¯
                                 
                                 −
                                 
                                    λ
                                    ̲
                                 
                                 )
                              
                              
                                 (
                                 
                                    λ
                                    ¯
                                 
                                 +
                                 
                                    λ
                                    ̲
                                 
                                 )
                                 /
                                 2
                              
                           
                        
                     . With regard to the results of the B&C algorithm of Bosco et al. (2013), the CG method, and the B&C&P algorithm, we use “–” to indicate that no value is available in the literature. With regard to our algorithm, we use “–” in the column 
                        
                           
                              λ
                              ¯
                           
                           H
                        
                      when the upper bounding procedure failed.


                     Tables 1 –6 show that the possibility of finding the optimal solution for our B&C algorithm generally decreases with the increase of the number of vehicles m. Frequently the value provided by our lower bounding procedure is excellent. In total, 62 out of 69 instances of the mggdb benchmark set are solved to optimality by our algorithm (21 for β = 0.25, 21 for β = 0.30, and 20 for β = 0.35). In particular, all mggdb instances studied in Bosco et al. (2013), i.e., those with up to 7 vehicles, with β in {0.25, 0.30, 0.35}, are solved to optimality by our algorithm. Moreover, we solve to optimality all mggdb instances with 8 vehicles. For the group of instances with 10 vehicles, we can compare our results with the CG method and the B&C&P algorithm. Sometimes the lower bound value or the final upper bound value provided by CG method are better than the values provided by our algorithm. Anyway, for mggdb instances with 10 vehicles, the maximum percentage gap of our algorithm is approx. 14% against the value of approx. 24% provided by the CG method. For the same instances, the best performance is obtained by the B&C&P algorithm. Nevertheless, our algorithm solves to optimality more mggdb instances than the B&C&P algorithm.

The number of mgval instances solved to optimality by our algorithm is equal to 62 out of 102 (24 with β = 0.25, 19 with β = 0.30, and 19 with β = 0.35). These results confirm that the mgval instances are harder to solve due to the structure of their graphs. In this case, some instances reported in Bosco et al. (2013), with β in {0.25, 0.30, 0.35}, are not solved to optimality by our algorithm. Anyway, upper bound 
                        
                           λ
                           ¯
                        
                      reported in Bosco et al. (2013) is never better than upper bound 
                        
                           λ
                           ¯
                        
                      provided by our algorithm. Moreover, for our algorithm the maximum percentage gap is equal to 2.61% against the value of 12.08% provided by the algorithm of Bosco et al. (2013). The CG method ran just on six instances of mgval dataset considered in this paper. For m ≤ 7, its maximum percentage gap is 25.24%. No comparison is possible for m > 7. No instance of mgval dataset with β in {0.25, 0.30, 0.35} has been tackled by the B&C&P algorithm. This algorithm solely ran on the instances of mgval dataset with β = 0.50. Nevertheless, for most instances of this dataset, the B&C&P algorithm obtained no upper bound 
                        
                           λ
                           ¯
                        
                      within a time limit of 6 hours.


                     Table 7 resumes the results of the comparison. The meaning of the column headers is as follows:

                        DATASET
                        
                           Dataset name

Average percentage gap for the instances with up to 7 vehicles (the number of instances is 19 for every mggdb dataset, and 25 for every mgval dataset)

Average percentage gap for all instances (the number of instances is 23 for every mggdb dataset, and 34 for every mgval dataset)

Number of optima.

@&#CONCLUSIONS@&#

In this paper, we proposed a new formulation for the MCGRP and a two-phase B&C algorithm to exactly solve it. The approach benefits from the typically very tight lower bounds computed fast in the first phase, in which an aggregated one-index formulation is solved. In particular, our algorithm, referred to as New.B&C, inherits the basic characteristics from the algorithm of Bosco et al. (2013), referred to as B&C. Nevertheless, the approaches differ in numerous aspects, summarized as follows: In order to solve the MCGRP, B&C is based on an integer linear programming formulation with three-index link variables and two-index vertex variables, whereas New.B&C is based on a formulation with two-index link and vertex variables. Consequently, some components are totally different. For instance, B&C does not use routines to separate balance constraints. Moreover, B&C only activates standard branching on fractional variables. On the contrary, branching on vertex degrees is activated by New.B&C in order to deal with the (relaxed) non-linear constraints. Other important differences concern lower and upper bounding procedures. Specifically, New.B&C applies a first phase to rapidly obtain lower bounds by solving an aggregated one-index formulation, whereas B&C obtains lower bounds in a standard way. In addition, New.B&C constructs an initial solution through an effective location-based heuristic. Instead, five heuristics are used by B&C to reach an initial feasible solution: Three partition-first-route-next heuristics, a path scanning procedure and a feasibility pump-based procedure (the latter outperforms the other heuristics).

The performance of the algorithm proposed in this paper has been evaluated by carrying out computational experiments on two benchmark sets: As a result, for all mggdb instances of Bosco et al. (2013), with β in {0.25, 0.30, 0.35} and m ≤ 7, we know optimal solutions now. Optimality was proved and lower bounds were improved for many other instances of this and the second mgval benchmark set. We also studied for the first time a group of larger instances: Although we never proved optimality in these cases, the remaining gaps provided by our algorithm remain below a threshold of 20%. We suspect that our bounds unevenly contribute to these gaps and that lower bounds are tighter than upper bounds.

@&#ACKNOWLEDGMENTS@&#

The authors are grateful to two anonymous referees whose comments helped to improve the quality of the paper.

An earlier version of this paper was made available as technical report (Bode, Irnich, Laganà, and Vocaturo, 2014). Note that the first author Claudia Bode is the same person as the third author of the paper at hand, i.e., Claudia Schlebusch née Bode.

@&#REFERENCES@&#

