@&#MAIN-TITLE@&#A simulation optimization approach for a two-echelon inventory system with service level constraints

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           We present an algorithm for the constrained multi-echelon inventory problem.


                        
                        
                           
                           We provide an argument in favor of using simulation instead of analytical methods.


                        
                        
                           
                           We discuss a reasonable sequence of parameter settings in R&S part of our algorithm.


                        
                        
                           
                           Our algorithm needs less simulation effort to guarantee finding a feasible solution.


                        
                        
                           
                           Sometimes the chosen solution is closer to optimal than other existing algorithms.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Inventory

Multi-echelon system

Service-level constraints

Feasibility check

Stochastic optimization

Simulation

@&#ABSTRACT@&#


               
               
                  In this paper, we present a simulation optimization algorithm for solving the two-echelon constrained inventory problem. The goal is to determine the optimal setting of stocking levels to minimize the total inventory investment costs while satisfying the expected response time targets for each field depot. The proposed algorithm is more adaptive than ordinary optimization algorithms, and can be applied to any multi-item multi-echelon inventory system, where the cost structure and service level function resemble what we assume. Empirical studies are performed to compare the efficiency of the proposed algorithms with other existing simulation algorithms.
               
            

@&#INTRODUCTION@&#

After-sales customer service is of special importance for industries like information systems, automobile, computer and aircraft manufacturing. The downtime of critical machines may incur high costs, and thus it is essential to respond quickly to the need for service parts replacement when a failure occurs. To reduce the response time, the service parts are usually supplied via a multi-echelon distribution network. In this paper, we study a two-echelon repairable inventory system, which consists of a central warehouse in the higher echelon and multiple field depots in the lower echelon. The manufacturer prefers to keep the expected response time to each customer below a threshold level. Further, as the service parts are very expensive and highly reliable, it is necessary that the manufacturer keeps the inventory level as low as possible at the central warehouse and field depots. Therefore, our goal is to find the best setting of stocking levels in the central warehouse and field depots to minimize the system-wide inventory investment cost, while maintaining an acceptable level of the expected response time across multiple field depots.

There has been extensive work on multi-echelon inventory system problems in the literature. Most studies handle these problems in the presence of service level constraints by using the results of queueing theory (e.g., Caglar et al., 2004; Kutanoglu and Mahajan, 2009), and the assumption of independent replenishment leadtimes for depots is required for the approximated analytical model. However, these leadtimes are obviously not independent, since they depend on the same inventory situation at the warehouse (Wang et al., 2000). Graves (1985) showed that if the correlation between successive leadtimes is high, the errors in the approximation may lead to an incorrect stocking level decision. To avoid the implausible assumption of independence between depots, we use a simulation approach. Another advantage of using simulation is its ability to allow complex systems that capture reality far better than simplified analytical methods. Complicated features, such as allowing transhipment between depots, more general distributions (other than the exponential distribution), and time-varying or uncertain arrival rates can also easily be considered in the simulated system.

In this paper, we present a simulation optimization framework that is an application of the Sample Average Approximation (SAA) technique combined with a cutting plane method and Ranking and Selection (R&S) procedures to solve the multi-echelon constrained inventory problem. Typical SAA methods generally use sample averages to determine the feasibility of any potentially good solution, where the sample size is arbitrarily chosen. However, if the service level estimates are very noisy and the sample size is not large enough, then it is very likely that highly suboptimal or infeasible solutions will be obtained (Cezik and L’Ecuyer, 2008). We take a different perspective to solving this problem, where a statistical guarantee of feasibility is desired. This is achieved by modifying a newly developed R&S procedure and embedding it into our algorithm. It is also important to notice that R&S procedures are recommended only when the number of solution designs is small, usually within the range of 2–500 (Kim and Nelson, 2006). This implies that they are very inefficient when applied to the whole solution space of the multi-echelon inventory problem. Therefore we propose applying an integer linear programming technique to the sample average version of the optimization problem to help identify a promising candidate solution, and then employing R&S to detect the feasibility of the single solution. The proposed algorithm can be viewed as one type of SAA technique which can handle stochastic constraints, where the sample size used in each iteration is random and determined by R&S procedures. One advantage of a variable-sample scheme is that the sample sizes can be increased as the algorithm proceeds, so that sampling effort is not wasted on the initial iterations of the algorithm (Homem-de-Mello, 2003).

The proposed simulation approach can be applied to solve any optimization problem with a deterministic objective function and multiple stochastic constraints. It requires that the output response is normally distributed or is approximately so, and the constraint function appears to be convex, and the inventory problem considered in this work exactly fits this framework. Although our main concern in this paper is a service parts inventory system, the proposed algorithm can be extended to any multi-item multi-echelon inventory system, where the cost structure and the service level function resemble what we assume. The numerical results show that the proposed algorithm requires less simulation effort, but in the meanwhile increases the possibility of choosing a feasible solution (i.e., it can consistently achieve the service targets) at modest increase in inventory holding cost. In some cases, the selected solution is closer to the optimal one than those obtained via other existing algorithms. Although neither of the evaluated algorithms is always dominant in terms of all performance measures, the new combined approach is a useful addition to the toolbox for solving this class of problems. The paper is organized as follows. In Section 2 we provide a brief overview of multi-echelon inventory problem, the R&S procedure, and the SAA technique. Section 3 presents a formulation of the two-echelon spare parts inventory problem in the presence of service level constraints along with its SAA version. In Section 3, we also propose a simulation optimization approach combining SAA and R&S, which can return a solution that is close to optimal and is feasible with some guarantee. In Section 3.5, we discuss an appropriate sequence of parameter settings in the R&S part of our algorithm to ensure that the sample size does not grow too fast as iteration goes on. An empirical evaluation is provided in Section 4, while the paper ends with some concluding remarks in Section 5.

@&#LITERATURE REVIEW@&#

In Section 2.1, we briefly review existing works considering multi-echelon spare parts inventory problem and discuss their weaknesses. The other sections introduce the two major algorithms that constitute our simulation optimization approach to solve the inventory problem. In Section 2.2, we present a brief review of R&S, and introduce the Feasibility Check Procedure (FCP) specifically developed for constrained optimization problems. In Section 2.3, we introduce the Sample Average Approximation (SAA) method, which can be used in solving stochastic discrete optimization problems. At the end of Section 2 we provide an argument for combining SAA and FCP in our algorithm.

In practice, when products are distributed over a large geographical region, the manufacturers tend to set several local stocking locations that are close to the customers. In addition to the resulting improvement in delivery efficiency, it has been shown that multi-echelon methods may reduce the total cost compared with single-echelon techniques (Muckstadt and Thomas, 1980). Multi-echelon spare parts inventory systems have been studied extensively in the literature. One of the earliest and most important articles in this area is Sherbrooke (1968). He developed one mathematical model, called METRIC (Multi-Echelon Technique for Recoverable Item Control), for determining stocking levels of recoverable or repairable items in a two-echelon inventory system to minimize the total expected backorders while satisfying a budget constraint. The METRIC model is an approximation technique, and its key idea is based on queueing theory, i.e., Palm’s theorem (Palm, 1938) and Little’s law (Little, 1961). Due to its success, many subsequent publications extended the METRIC approach. Muckstadt (1973) developed MOD-METRIC to be able to consider hierarchical parts structures, while Graves (1985) presented a negative binomial approximation of the distribution of backorders as an alternative to the original model. Sherbrooke (1986) then improved Muckstadt’s MOD-METRIC model by using Grave’s approximation. Successful applications of METRIC include the automotive industry (Cohen et al., 2000), computers and other electronic equipment (Cohen et al., 1999), and military problems (Rustenburg et al., 2001).

Another research stream in this area has focused on solving optimization problems with time-based service constraints, which is more relevant to the problem that we are solving. Hopp et al. (1999) provided a heuristic to minimize the total inventory holding cost while maintaining the average total delay at each facility below a pre-specified level. Their heuristic decomposed the problem level by level, and they applied some simplifying approximations for steady-state inventory and backorder expressions. They then solved each depot problem by using these approximations and a Lagrangian relaxation of the depot problem. Caglar et al. (2004) developed a near-optimal heuristic to minimize the system-wide inventory holding cost subject to a response time constraint, and this approach is different from other previous works because it explicitly considers the response time constraints. They used a METRIC-like model to derive the approximations for the expected inventory levels and backorder levels, and then developed a heuristic algorithm to solve the problem. More recently, Caggiano et al. (2007) considered a problem that minimizes the total system inventory investment cost while achieving the service level requirements, i.e., channel fill rates. As the exact expression of the fill rate is not available, they used negative binomial approximation to compute this. To further improve the computation efficiency of the algorithm, Caggiano et al. (2009) proposed both direct and indirect approximation methods to compute time-based channel fill rates, which were validated via simulation. The literature on traditional methods for solving multi-echelon inventory system problems has three common properties: (i) the use of the Poisson demand process assumption, (ii) the use of single-echelon approximation, and (iii) the use of an arborescent network to distribute the service parts. However, Cattani et al. (2011) argued that these properties may not be useful in practice, and through the use of Monte Carlo simulation found that the common assumptions in traditional inventory models restrict its effectiveness in real world problems, and the resulting heuristics that ignore the actual supply chain structure may not be able to utilize safety stock effectively. To avoid these implausible approximations or assumptions, we utilize a simulation optimization approach.
                     

R&S procedures have been applied to identify a solution with the best (or near the best) expected performance among a finite number of simulated solutions (see Kim and Nelson (2006) for a survey of R&S). We are particularly interested in fully sequential procedures taking the indifference-zone approach of Bechhofer (1954), where decision makers want to choose a solution whose expected performance measure is at least a user-specified amount (called the indifference-zone parameter) better than all the other alternative solutions. A fully sequential procedure is defined as one that obtains a single observation at a time from each solution still in contention and then eliminates solutions from continued sampling when there is evidence that they are statistically inferior. Let X
                        
                           ip
                         denote the simulation output from the pth replication of solution i. The procedure approximates the partial sum of differences between different solutions’ observations, 
                           
                              
                                 
                                    ∑
                                 
                                 
                                    p
                                    =
                                    1
                                 
                                 
                                    r
                                 
                              
                              (
                              
                                 
                                    X
                                 
                                 
                                    ip
                                 
                              
                              -
                              
                                 
                                    X
                                 
                                 
                                    jp
                                 
                              
                              )
                           
                        , as a Brownian motion process with drift. It needs a first stage to estimate variances and to determine a triangular continuation region for each pair of solutions, which is used to decide the stopping time of the selection process. Fig. 1
                         shows the continuation region for procedure KN (Kim and Nelson, 2001) for solutions i and j. The horizontal axis represents the sampling stage number and the vertical axis represents the partial sum value at each stage. The slope λ and the intercept a
                        
                           ij
                         are specified in the procedure. When the cumulative sum goes above or below the boundary, one solution is eliminated depending on which direction the exit is made. To establish the statistical validity of the fully sequential procedure, Kim and Nelson (2001) used Fabian’s (1974) result to bound the chance that we incorrectly eliminate the best solution when only two solutions are included in the competition. It is natural to let an incorrect selection correspond to the process exiting the region in the wrong direction (going down when the drift is positive). Finally, in conjunction with a decomposition into pairwise comparisons, the bound can be used to ensure that the probability of correct selection is not less than a pre-specified confidence level (Kim and Nelson, 2006).

In reality, decision makers often need to consider multiple performance measures rather than a single one due to physical or managerial requirements. Andradóttir and Kim (2010) presented R&S procedures that consider one primary and one secondary performance measure. This method checks the feasibility of each solution among a finite set with respect to a secondary performance measure (i.e., a stochastic constraint), and then applies a finding-the-best procedure to select the best feasible solution with respect to a primary performance measure. However, for stochastic problems it is not always possible to identify correctly whether each candidate solution satisfies all the stochastic constraints with a finite number of simulated observations. Andradóttir and Kim (2010) thus introduced a tolerance level, which is analogous to the idea of the indifference-zone parameters of Bechhofer (1954). Simply stated, this does not require finding solutions that meet the target value exactly with respect to the stochastic constraint. Instead, this approach allows choosing the solutions whose expected performance corresponding to the stochastic constraint is within a so-called acceptable region, which is looser than the defined feasible region (see Andradóttir and Kim (2010) for a detailed description). Batur and Kim (2010) further extended the aforementioned R&S procedures to the case of multiple stochastic constraints. They provided the so-called Feasibility Check Procedure (FCP) for identifying a set of feasible or near-feasible solutions among a finite number of simulated solutions subject to multiple stochastic constraints. However, these R&S procedures for constrained problems are only recommended when the size of the number of secondary performance measures times the number of solution designs is not too large (say, no more than 500; see Batur and Kim (2010)). This implies that they will become inefficient (i.e., requiring very excessive sampling cost) when applied to the whole solution space of the multi-echelon inventory problem. Therefore we propose applying an integer linear programming technique to the sample average version of the optimization problem to help identify a promising candidate solution, and then employing FCP to detect the feasibility of the solution.

SAA is a popular method for solving stochastic optimization problems by using simulation (see Shapiro (2004) for an overview). In SAA, the expected value function is replaced by a sample average function obtained from some random samples. The sample average approximation problem is then tackled via standard deterministic mathematical programming techniques. Several iterations of the optimization process are implemented until a stopping condition is satisfied. Due to its simplicity, and the ability to incorporate mature optimization techniques, SAA has been extensively used in practice. Examples of SAA application include call center staffing (Atlason et al., 2004, 2008), transshipment problems, and health care and risk management problems (Pagnoncelli and Vanduffel (2012)).

The generic SAA technique uses a fixed and large enough sample size from the beginning, and then minimizes the resulting deterministic function using a chosen numerical procedure. The solution of the approximating problem can be shown to converge to an optimal solution of the original problem under some general assumptions. A recent variation of the SAA techniques considers using different sample sizes along each iteration of the algorithm (also called variable-sample method, see, e.g., Homem-de-Mello (2003) and Pasupathy (2010)). Works examining the variable-sample method often identify a schedule of sample sizes that ensures consistency of the estimators or guarantees convergence of the algorithm. All works described above are developed for solving stochastic problems involving an expected value objective (also called a stochastic objective). A number of researchers have considered expected value constrained stochastic problems (also known as problems with stochastic constraints), which are more closely related to what we discuss in this paper. For instance, Atlason et al. (2004) formulated a call center staffing problem as an optimization problem with expected value constraints, and used SAA together with a cutting plane method to solve it. They assumed that the service level functions are concave in the number of servers, and can take advantage of this property in the algorithm. Wang and Ahmed (2008) proposed an SAA method for solving constrained stochastic programming problems, and specialized it for a portfolio selection problem with constraints on conditional value-at-risk. Different from Atlason et al. (2004), their approach is more general in the sense that the assumption of concavity or discreteness is not required. These approaches can be regarded as fixed-sample versions of SAA techniques solving expected value constrained problems. They also established a convergence result regarding the solutions of the SAA problem as the sample size increases (especially when the sample size goes to infinity). However, in practice a finite sample size is used, and thus we cannot ensure that the optimal solution to the sample problem is optimal or even feasible for the original problem (if the sample size is not chosen appropriately). By contrast, our simulation optimization approach has the advantage of providing a statistical guarantee of feasibility through the use of R&S procedures. Another beneficial feature is that the samples obtained in FCP can be exploited to perform SAA optimization in the next iteration without generating any additional data. Our approach can be considered as a variable-sample SAA method for solving problems with stochastic constraints, where the required number of samples in each iteration is determined by FCP.
                     

@&#METHODOLOGY@&#

In this section we formulate a two-echelon spare parts inventory problem for minimizing inventory investment cost while ensuring an acceptable service level with respect to the expected response time. We then formulate the sample average approximation of the original problem, and describe the simulation optimization approach used to return a solution that may not be optimal, but is certainly feasible with some specified confidence level.

The following description is based on a two-echelon spare parts inventory system, but notice that our simulation optimization algorithm can be applied to an inventory problem with more than two echelons. We consider a spare parts inventory system consisting of a central warehouse in the top echelon and multiple field depots (i.e., inventory stocking centers) in the lower echelon, as depicted in Fig. 2
                        . The field depots provide service to customers, each of whom owns a machine, e.g., electronic equipment in a semiconductor manufacturer. As the spare parts are very expensive and highly reliable, the field depots follow a continuous review base stock (S
                        −1,
                        S) policy in order to reduce the system-wide inventory holding cost. In some cases this one-for-one replenishment rule may not be optimal, but notice that the validity and efficiency of our simulation optimization approach do not depend on the inventory review policy. The equipment consists of a set I of u parts (i.e., I
                        ={1,2,…,
                        u}) that fail infrequently and independently. When a machine is down, the customer knows exactly which part has failed. We assume that the interfailure times for part i at depot ℓ(ℓ=1,2,…,
                        v) are independently and identically distributed (i.i.d.) random variables with mean λ
                        
                           iℓ. When a part failure is reported to the depot, a technician with a spare part will be assigned to replace the failed one for the customer if the depot has the part on-hand. Otherwise, the part is backordered and the customer has to wait until it is available at the depot. The field depot then ships the failed part to the central warehouse, where all the failed parts are repaired. We assume that the repair times for part i are i.i.d. random variables with mean R
                        
                           i
                        . Meanwhile, if the central warehouse has parts on-hand, it delivers a spare part to the field depot from its inventory. Otherwise, the order requested from the field depot is backordered until a part is repaired and becomes available at the warehouse.

The response time for customers is defined as the time it takes to receive spare part i after a failure is reported, which varies with the inventory situations of the responsible field depot ℓ and the warehouse. When the depot has part i on-hand, the customer is immediately served and thus the response time is negligible. Otherwise, the customer has to wait until depot ℓ receives part i from the warehouse. In this case, the response time equals the transportation time between the warehouse and depot ℓ when the warehouse has part i in stock. We assume that the transportation times are i.i.d. random variables with mean T
                        ℓ. If part i is out of stock at the warehouse, the response time will include the repair time of part i as well as the transportation time. Delays in part replacement can be critical to customers, and therefore suppliers prefer to keep the response time to each customer short in order to provide high quality service.

Our goal is to determine the optimal setting for the vector of stocking levels across the inventory system, where the term “optimal” is defined by the smallest total system inventory investment cost while achieving the given threshold with respect to the expected response time at each depot. The problem objective is very similar to that considered in Caggiano et al. (2007), while the constraints are the same as those in Caglar et al. (2004). We first introduce the following notations that we use in this optimization model:
                           
                              
                                 Sets
                              
                              
                                 
                                    
                                       
                                          I
                                          ={1,2,…,
                                          u}=set of spare parts;


                                          L
                                          ={1,2,…,
                                          v}=set of field depots; the index 0 denotes the central warehouse.


                                 
                                    
                                       
                                          
                                             
                                                S
                                                =
                                                {
                                                
                                                   
                                                      S
                                                   
                                                   
                                                      i
                                                      ℓ
                                                   
                                                
                                                ,
                                                i
                                                =
                                                1
                                                ,
                                                2
                                                ,
                                                …
                                                ,
                                                u
                                                ;
                                                ℓ
                                                =
                                                0
                                                ,
                                                1
                                                ,
                                                …
                                                ,
                                                v
                                                }
                                                =
                                             
                                           vector of stocking levels, where S
                                          
                                             iℓ denotes the base stocking level for part i at depot ℓ, and the index 0 represents the central warehouse.


                                 
                                    
                                       
                                          c
                                          
                                             i
                                          
                                          =unit inventory investment cost for part i;


                                          τ
                                          ℓ
                                          =expected response time threshold specified by the manager for depot ℓ;


                                          
                                             
                                                
                                                   
                                                      
                                                         
                                                            S
                                                         
                                                         
                                                            ^
                                                         
                                                      
                                                   
                                                   
                                                      i
                                                      0
                                                   
                                                
                                             
                                          
                                          =upper limit on S
                                          
                                             i0;


                                          
                                             
                                                
                                                   
                                                      
                                                         
                                                            S
                                                         
                                                         
                                                            ^
                                                         
                                                      
                                                   
                                                   
                                                      i
                                                      ℓ
                                                   
                                                
                                             
                                          
                                          =upper limit on S
                                          
                                             iℓ.


                                 
                                    
                                       
                                          
                                             
                                                
                                                   
                                                      W
                                                   
                                                   
                                                      ℓ
                                                   
                                                
                                                (
                                                S
                                                )
                                             
                                          
                                          =expected response time to a customer at depot ℓ when the base stocking levels across the inventory system are set at 
                                             
                                                S
                                             
                                          .

Given the above notations, we can formulate the problem of minimizing the total inventory investment cost subject to multiple constraints with respect to the expected response time at each depot as follows (denoted as P1):
                           
                              (1)
                              
                                 
                                    
                                       
                                          
                                             (
                                             P
                                             1
                                             )
                                             
                                             Min
                                          
                                       
                                       
                                          
                                             
                                                
                                                   
                                                      ∑
                                                   
                                                   
                                                      i
                                                      ∈
                                                      I
                                                   
                                                
                                             
                                             
                                                
                                                   c
                                                
                                                
                                                   i
                                                
                                             
                                             
                                                
                                                   S
                                                
                                                
                                                   i
                                                   0
                                                
                                             
                                             +
                                             
                                                
                                                   
                                                      ∑
                                                   
                                                   
                                                      i
                                                      ∈
                                                      I
                                                   
                                                
                                             
                                             
                                                
                                                   
                                                      ∑
                                                   
                                                   
                                                      ℓ
                                                      ∈
                                                      L
                                                   
                                                
                                             
                                             
                                                
                                                   c
                                                
                                                
                                                   i
                                                
                                             
                                             
                                                
                                                   S
                                                
                                                
                                                   i
                                                   ℓ
                                                
                                             
                                          
                                       
                                    
                                    
                                       
                                          
                                             s
                                             .
                                             t
                                             .
                                             
                                          
                                       
                                       
                                          
                                             
                                                
                                                   W
                                                
                                                
                                                   ℓ
                                                
                                             
                                             (
                                             S
                                             )
                                             ⩽
                                             
                                                
                                                   τ
                                                
                                                
                                                   ℓ
                                                
                                             
                                             
                                             (
                                             ℓ
                                             ∈
                                             L
                                             )
                                          
                                       
                                    
                                 
                              
                           
                        
                        
                           
                              (2)
                              
                                 0
                                 ⩽
                                 
                                    
                                       S
                                    
                                    
                                       i
                                       0
                                    
                                 
                                 ⩽
                                 
                                    
                                       
                                          
                                             S
                                          
                                          
                                             ^
                                          
                                       
                                    
                                    
                                       i
                                       0
                                    
                                 
                                 ,
                                 
                                 
                                    
                                       S
                                    
                                    
                                       i
                                       0
                                    
                                 
                                 
                                 integer
                                 
                                 (
                                 i
                                 ∈
                                 I
                                 )
                              
                           
                        
                        
                           
                              (3)
                              
                                 0
                                 ⩽
                                 
                                    
                                       S
                                    
                                    
                                       i
                                       ℓ
                                    
                                 
                                 ⩽
                                 
                                    
                                       
                                          
                                             S
                                          
                                          
                                             ^
                                          
                                       
                                    
                                    
                                       i
                                       ℓ
                                    
                                 
                                 ,
                                 
                                 
                                    
                                       S
                                    
                                    
                                       i
                                       ℓ
                                    
                                 
                                 
                                 integer
                                 
                                 (
                                 i
                                 ∈
                                 I
                                 ;
                                 ℓ
                                 ∈
                                 L
                                 )
                              
                           
                        
                     

The objective function is composed of the inventory investment cost at the central warehouse and the field depots. Constraint (1) ensures that the expected response time at each depot will be within the specified threshold. Constraints (2) and (3) specify the range of the base stocking level for each spare part at the warehouse and at each field depot, respectively. The response time of a customer is the duration that the customer has to wait to receive a service part. The corresponding service constraint depends on the expected amount of time it takes a customer to receive a spare part after a failure is reported, which can be defined formally as follows:
                           
                              
                                 
                                    
                                       W
                                    
                                    
                                       ℓ
                                    
                                 
                                 (
                                 S
                                 )
                                 =
                                 
                                    
                                       E
                                       [
                                       total response time customers spend at depot
                                       
                                       ℓ
                                       
                                       in time
                                       (
                                       0
                                       ,
                                       T
                                       ]
                                       ]
                                    
                                    
                                       E
                                       [
                                       total number of failures reported at depot
                                       
                                       ℓ
                                       
                                       in time
                                       (
                                       0
                                       ,
                                       T
                                       ]
                                       ]
                                    
                                 
                              
                           
                        for any field depot ℓ, where T represents the specified period length of the inventory system. Since the inventories of all the depots are resupplied from the warehouse, the expected response times at each depot are not independent. In other words, the expected response time at each depot generally depends on the situation of inventory levels across all the field depots and the warehouse. Thus, W
                        ℓ is represented as a function of the vector of stocking levels 
                           
                              S
                           
                        , instead of just S
                        
                           iℓ. It is important to note that the expected response time function 
                           
                              
                                 
                                    W
                                 
                                 
                                    ℓ
                                 
                              
                              (
                              S
                              )
                           
                         is generally unknown, and too difficult to be evaluated analytically. It can be either approximated by using simplified queueing models (e.g., as in Caglar et al. (2004)) or estimated by simulation methods. In this paper, we employ the simulation-based SAA technique, as described in the following subsections.

We assume that an exact evaluation of the expected response time function 
                           
                              
                                 
                                    W
                                 
                                 
                                    ℓ
                                 
                              
                              (
                              S
                              )
                           
                         is either impossible or prohibitively expensive, and that its value is estimated via simulation. Let ξ denote the source of randomness, that is, the sequence of all independent U(0,1) random numbers that initiate the successive simulation runs. Suppose that ξ is divided into long discrete streams, then the nth simulation run always starts using random numbers at the beginning of the nth stream, regardless of the settings of the model parameters and the stocking level vectors. Suppose that we implement N simulation runs to estimate 
                           
                              
                                 
                                    W
                                 
                                 
                                    ℓ
                                 
                              
                              (
                              S
                              )
                           
                         and let ξ
                        1, ξ
                        2, …, ξ
                        
                           N
                         denote the independent realizations from the distribution of ξ. Let Q
                        
                           iℓ(ξ) denote the number of failures of part i reported to depot ℓ in the simulation within time (0,
                        T] under a realization of ξ. We also let 
                           
                              
                                 
                                    W
                                 
                                 
                                    i
                                    ℓ
                                 
                              
                              (
                              S
                              ,
                              ξ
                              )
                           
                         denote the total response times for customers to receive part i at depot ℓ in time (0,
                        T] given the vector of stocking levels 
                           
                              S
                           
                         and under a realization of ξ. The average response time at depot ℓ in the long run is as follows:
                           
                              (4)
                              
                                 
                                    
                                       
                                          lim
                                       
                                       
                                          N
                                          →
                                          ∞
                                       
                                    
                                 
                                 
                                    
                                       
                                          
                                             ∑
                                          
                                          
                                             n
                                             =
                                             1
                                          
                                          
                                             N
                                          
                                       
                                       
                                          
                                             ∑
                                          
                                          
                                             i
                                             ∈
                                             I
                                          
                                       
                                       
                                          
                                             W
                                          
                                          
                                             i
                                             ℓ
                                          
                                       
                                       (
                                       S
                                       ,
                                       
                                          
                                             ξ
                                          
                                          
                                             n
                                          
                                       
                                       )
                                    
                                    
                                       
                                          
                                             ∑
                                          
                                          
                                             n
                                             =
                                             1
                                          
                                          
                                             N
                                          
                                       
                                       
                                          
                                             ∑
                                          
                                          
                                             i
                                             ∈
                                             I
                                          
                                       
                                       
                                          
                                             Q
                                          
                                          
                                             i
                                             ℓ
                                          
                                       
                                       (
                                       
                                          
                                             ξ
                                          
                                          
                                             n
                                          
                                       
                                       )
                                    
                                 
                                 =
                                 
                                    
                                       
                                          
                                             lim
                                          
                                          
                                             N
                                             →
                                             ∞
                                          
                                       
                                       
                                       
                                          
                                             N
                                          
                                          
                                             -
                                             1
                                          
                                       
                                       
                                          
                                             ∑
                                          
                                          
                                             n
                                             =
                                             1
                                          
                                          
                                             N
                                          
                                       
                                       
                                          
                                             ∑
                                          
                                          
                                             i
                                             ∈
                                             I
                                          
                                       
                                       
                                          
                                             W
                                          
                                          
                                             i
                                             ℓ
                                          
                                       
                                       (
                                       S
                                       ,
                                       
                                          
                                             ξ
                                          
                                          
                                             n
                                          
                                       
                                       )
                                    
                                    
                                       
                                          
                                             lim
                                          
                                          
                                             N
                                             →
                                             ∞
                                          
                                       
                                       
                                       
                                          
                                             N
                                          
                                          
                                             -
                                             1
                                          
                                       
                                       
                                          
                                             ∑
                                          
                                          
                                             n
                                             =
                                             1
                                          
                                          
                                             N
                                          
                                       
                                       
                                          
                                             ∑
                                          
                                          
                                             i
                                             ∈
                                             I
                                          
                                       
                                       
                                          
                                             Q
                                          
                                          
                                             i
                                             ℓ
                                          
                                       
                                       (
                                       
                                          
                                             ξ
                                          
                                          
                                             n
                                          
                                       
                                       )
                                    
                                 
                                 .
                              
                           
                        
                     

If 
                           
                              E
                              
                                 
                                    
                                       
                                          
                                             ∑
                                          
                                          
                                             i
                                             ∈
                                             I
                                          
                                       
                                       
                                          
                                             Q
                                          
                                          
                                             i
                                             ℓ
                                          
                                       
                                       (
                                       
                                          
                                             ξ
                                          
                                          
                                             n
                                          
                                       
                                       )
                                    
                                 
                              
                              <
                              ∞
                           
                        , then the strong law of large numbers (SLLN) can be employed separately to both the numerator and denominator of this expression. This implies that the right-hand side of Eq. (4) is equal to (with probability one) the desired expected response time function 
                           
                              
                                 
                                    W
                                 
                                 
                                    ℓ
                                 
                              
                              (
                              S
                              )
                           
                        . Further, let us define
                           
                              
                                 
                                    
                                       
                                          
                                             W
                                          
                                          
                                             ¯
                                          
                                       
                                    
                                    
                                       ℓ
                                    
                                 
                                 (
                                 S
                                 ;
                                 N
                                 )
                                 =
                                 
                                    
                                       
                                          
                                             N
                                          
                                          
                                             -
                                             1
                                          
                                       
                                       
                                          
                                             ∑
                                          
                                          
                                             n
                                             =
                                             1
                                          
                                          
                                             N
                                          
                                       
                                       
                                          
                                             ∑
                                          
                                          
                                             i
                                             ∈
                                             I
                                          
                                       
                                       
                                       
                                          
                                             W
                                          
                                          
                                             i
                                             ℓ
                                          
                                       
                                       (
                                       S
                                       ,
                                       
                                          
                                             ξ
                                          
                                          
                                             n
                                          
                                       
                                       )
                                    
                                    
                                       
                                          
                                             N
                                          
                                          
                                             -
                                             1
                                          
                                       
                                       
                                          
                                             ∑
                                          
                                          
                                             n
                                             =
                                             1
                                          
                                          
                                             N
                                          
                                       
                                       
                                          
                                             ∑
                                          
                                          
                                             i
                                             ∈
                                             I
                                          
                                       
                                       
                                       
                                          
                                             Q
                                          
                                          
                                             i
                                             ℓ
                                          
                                       
                                       (
                                       
                                          
                                             ξ
                                          
                                          
                                             n
                                          
                                       
                                       )
                                    
                                 
                              
                           
                        as the sample average approximation of the expected response time over N simulation runs. This approximation is a function of the vector of stocking levels 
                           
                              S
                           
                         and ξ, and is a consistent and useful estimator of 
                           
                              
                                 
                                    W
                                 
                                 
                                    ℓ
                                 
                              
                              (
                              S
                              )
                           
                        , especially when N is large.

We replace the constraint 
                           
                              
                                 
                                    W
                                 
                                 
                                    ℓ
                                 
                              
                              (
                              S
                              )
                           
                         in the optimization problem P1 by its sample-average counterpart 
                           
                              
                                 
                                    
                                       
                                          W
                                       
                                       
                                          ¯
                                       
                                    
                                 
                                 
                                    ℓ
                                 
                              
                              (
                              S
                              ;
                              N
                              )
                           
                        , and then obtain the following sample average version of the original problem (denoted as P2):
                           
                              
                                 
                                    
                                       
                                          
                                             (
                                             P
                                             2
                                             )
                                             
                                             Min
                                          
                                       
                                       
                                          
                                             
                                                
                                                   
                                                      ∑
                                                   
                                                   
                                                      i
                                                      ∈
                                                      I
                                                   
                                                
                                             
                                             
                                                
                                                   c
                                                
                                                
                                                   i
                                                
                                             
                                             
                                                
                                                   S
                                                
                                                
                                                   i
                                                   0
                                                
                                             
                                             +
                                             
                                                
                                                   
                                                      ∑
                                                   
                                                   
                                                      i
                                                      ∈
                                                      I
                                                   
                                                
                                             
                                             
                                                
                                                   
                                                      ∑
                                                   
                                                   
                                                      ℓ
                                                      ∈
                                                      L
                                                   
                                                
                                             
                                             
                                                
                                                   c
                                                
                                                
                                                   i
                                                
                                             
                                             
                                                
                                                   S
                                                
                                                
                                                   i
                                                   ℓ
                                                
                                             
                                          
                                       
                                    
                                    
                                       
                                          
                                             s
                                             .
                                             t
                                             .
                                             
                                          
                                       
                                       
                                          
                                             
                                                
                                                   
                                                      
                                                         W
                                                      
                                                      
                                                         ¯
                                                      
                                                   
                                                
                                                
                                                   ℓ
                                                
                                             
                                             (
                                             S
                                             ;
                                             N
                                             )
                                             ⩽
                                             
                                                
                                                   τ
                                                
                                                
                                                   ℓ
                                                
                                             
                                             ,
                                             
                                             (
                                             ℓ
                                             ∈
                                             L
                                             )
                                          
                                       
                                    
                                    
                                       
                                       
                                          
                                             0
                                             ⩽
                                             
                                                
                                                   S
                                                
                                                
                                                   i
                                                   0
                                                
                                             
                                             ⩽
                                             
                                                
                                                   
                                                      
                                                         S
                                                      
                                                      
                                                         ^
                                                      
                                                   
                                                
                                                
                                                   i
                                                   0
                                                
                                             
                                             ,
                                             
                                             
                                                
                                                   S
                                                
                                                
                                                   i
                                                   0
                                                
                                             
                                             
                                             integer
                                             (
                                             i
                                             ∈
                                             I
                                             )
                                          
                                       
                                    
                                    
                                       
                                       
                                          
                                             0
                                             ⩽
                                             
                                                
                                                   S
                                                
                                                
                                                   i
                                                   ℓ
                                                
                                             
                                             ⩽
                                             
                                                
                                                   
                                                      
                                                         S
                                                      
                                                      
                                                         ^
                                                      
                                                   
                                                
                                                
                                                   i
                                                   ℓ
                                                
                                             
                                             ,
                                             
                                             
                                                
                                                   S
                                                
                                                
                                                   i
                                                   ℓ
                                                
                                             
                                             
                                             integer
                                             (
                                             i
                                             ∈
                                             I
                                             ;
                                             ℓ
                                             ∈
                                             L
                                             )
                                          
                                       
                                    
                                 
                              
                           
                        
                     

We assume that the expected response time 
                           
                              
                                 
                                    W
                                 
                                 
                                    ℓ
                                 
                              
                              (
                              S
                              )
                           
                         and the sample-average counterpart 
                           
                              
                                 
                                    
                                       
                                          W
                                       
                                       
                                          ¯
                                       
                                    
                                 
                                 
                                    ℓ
                                 
                              
                              (
                              S
                              ;
                              N
                              )
                           
                         are convex in each component of the vector 
                           
                              S
                           
                         for all ℓ, so that we can approximate them with piecewise linear convex functions and solve the sample problem P2 by using the cutting plane method, in a manner similar to Atlason et al. (2004). We then define 
                           
                              
                                 
                                    S
                                 
                                 
                                    k
                                 
                              
                           
                         as the current optimal solution obtained at iteration k. If the convexity assumption holds, then we can find a subgradient vector 
                           
                              
                                 
                                    
                                       
                                          q
                                       
                                       
                                          ¯
                                       
                                    
                                 
                                 
                                    ℓ
                                 
                              
                           
                         of 
                           
                              
                                 
                                    
                                       
                                          W
                                       
                                       
                                          ¯
                                       
                                    
                                 
                                 
                                    ℓ
                                 
                              
                           
                         at 
                           
                              
                                 
                                    S
                                 
                                 
                                    k
                                 
                              
                           
                         that satisfies
                           
                              
                                 
                                    
                                       
                                          
                                             W
                                          
                                          
                                             ¯
                                          
                                       
                                    
                                    
                                       ℓ
                                    
                                 
                                 (
                                 S
                                 ;
                                 N
                                 )
                                 ⩾
                                 
                                    
                                       
                                          
                                             W
                                          
                                          
                                             ¯
                                          
                                       
                                    
                                    
                                       ℓ
                                    
                                 
                                 (
                                 
                                    
                                       S
                                    
                                    
                                       k
                                    
                                 
                                 ;
                                 N
                                 )
                                 +
                                 
                                    
                                       
                                          
                                             q
                                          
                                          
                                             ¯
                                          
                                       
                                    
                                    
                                       ℓ
                                    
                                 
                                 (
                                 
                                    
                                       S
                                    
                                    
                                       k
                                    
                                 
                                 ;
                                 N
                                 
                                    
                                       )
                                    
                                    
                                       T
                                    
                                 
                                 (
                                 S
                                 -
                                 
                                    
                                       S
                                    
                                    
                                       k
                                    
                                 
                                 )
                              
                           
                        for all 
                           
                              S
                           
                         (where a
                        
                           T
                         denotes the transpose of the vector a). In the proposed algorithm, we use FCP to identify if the current solution is feasible. More specifically, we want 
                           
                              S
                           
                         to satisfy 
                           
                              
                                 
                                    
                                       
                                          W
                                       
                                       
                                          ¯
                                       
                                    
                                 
                                 
                                    ℓ
                                 
                              
                              (
                              S
                              ;
                              N
                              )
                              ⩽
                              
                                 
                                    τ
                                 
                                 
                                    ℓ
                                 
                              
                              -
                              R
                           
                         (where R represents a nonnegative value; see Section 3.4 for its definition), so we must have
                           
                              
                                 
                                    
                                       
                                          
                                             W
                                          
                                          
                                             ¯
                                          
                                       
                                    
                                    
                                       ℓ
                                    
                                 
                                 (
                                 
                                    
                                       S
                                    
                                    
                                       k
                                    
                                 
                                 ;
                                 N
                                 )
                                 +
                                 
                                    
                                       
                                          
                                             q
                                          
                                          
                                             ¯
                                          
                                       
                                    
                                    
                                       ℓ
                                    
                                 
                                 (
                                 
                                    
                                       S
                                    
                                    
                                       k
                                    
                                 
                                 ;
                                 N
                                 
                                    
                                       )
                                    
                                    
                                       T
                                    
                                 
                                 (
                                 S
                                 -
                                 
                                    
                                       S
                                    
                                    
                                       k
                                    
                                 
                                 )
                                 ⩽
                                 
                                    
                                       
                                          
                                             W
                                          
                                          
                                             ¯
                                          
                                       
                                    
                                    
                                       ℓ
                                    
                                 
                                 (
                                 S
                                 ;
                                 N
                                 )
                                 ⩽
                                 
                                    
                                       τ
                                    
                                    
                                       ℓ
                                    
                                 
                                 .
                              
                           
                        
                     

Therefore the following inequality will hold
                           
                              (5)
                              
                                 
                                    
                                       
                                          
                                             q
                                          
                                          
                                             ¯
                                          
                                       
                                    
                                    
                                       ℓ
                                    
                                 
                                 (
                                 
                                    
                                       S
                                    
                                    
                                       k
                                    
                                 
                                 ;
                                 N
                                 
                                    
                                       )
                                    
                                    
                                       T
                                    
                                 
                                 S
                                 ⩽
                                 
                                    
                                       
                                          
                                             q
                                          
                                          
                                             ¯
                                          
                                       
                                    
                                    
                                       ℓ
                                    
                                 
                                 (
                                 
                                    
                                       S
                                    
                                    
                                       k
                                    
                                 
                                 ;
                                 N
                                 
                                    
                                       )
                                    
                                    
                                       T
                                    
                                 
                                 
                                    
                                       S
                                    
                                    
                                       k
                                    
                                 
                                 +
                                 
                                    
                                       τ
                                    
                                    
                                       ℓ
                                    
                                 
                                 -
                                 
                                    
                                       
                                          
                                             W
                                          
                                          
                                             ¯
                                          
                                       
                                    
                                    
                                       ℓ
                                    
                                 
                                 (
                                 
                                    
                                       S
                                    
                                    
                                       k
                                    
                                 
                                 ;
                                 N
                                 )
                                 .
                              
                           
                        
                     

The convexity assumption is important, because this property makes sure that adding the linear cut (5) to the constraints will eliminate the current infeasible solution without removing any one that is feasible for the original problem (see Atlason et al. (2004) for a detailed justification). However, while 
                           
                              
                                 
                                    
                                       
                                          W
                                       
                                       
                                          ¯
                                       
                                    
                                 
                                 
                                    ℓ
                                 
                              
                              (
                              S
                              )
                           
                         is not always convex for the problem to be solved, it is plausible to assume at least that 
                           
                              
                                 
                                    
                                       
                                          W
                                       
                                       
                                          ¯
                                       
                                    
                                 
                                 
                                    ℓ
                                 
                              
                              (
                              S
                              )
                           
                         is nonincreasing, because we intuitively expect that the expected response time decreases if we increase the stocking level at the warehouse or any depot.

The major difficulty in the cutting plane algorithm is to obtain the subgradient vector 
                           
                              
                                 
                                    
                                       
                                          q
                                       
                                       
                                          ¯
                                       
                                    
                                 
                                 
                                    ℓ
                                 
                              
                              (
                              
                                 
                                    S
                                 
                                 
                                    k
                                 
                              
                              ;
                              N
                              )
                              =
                              
                                 
                                    
                                       
                                          
                                             
                                                
                                                   q
                                                
                                                
                                                   ¯
                                                
                                             
                                          
                                          
                                             ℓ
                                          
                                          
                                             0
                                          
                                       
                                       ,
                                       
                                          
                                             
                                                
                                                   q
                                                
                                                
                                                   ¯
                                                
                                             
                                          
                                          
                                             ℓ
                                          
                                          
                                             1
                                          
                                       
                                       ,
                                       …
                                       ,
                                       
                                          
                                             
                                                
                                                   q
                                                
                                                
                                                   ¯
                                                
                                             
                                          
                                          
                                             ℓ
                                          
                                          
                                             v
                                          
                                       
                                    
                                 
                              
                           
                        . One of the simplest methods for obtaining the subgradients is known as finite differences method. For discrete functions, we let
                           
                              
                                 
                                    
                                       
                                          
                                             q
                                          
                                          
                                             ¯
                                          
                                       
                                    
                                    
                                       ℓ
                                    
                                    
                                       j
                                    
                                 
                                 =
                                 
                                    
                                       
                                          
                                             W
                                          
                                          
                                             ¯
                                          
                                       
                                    
                                    
                                       ℓ
                                    
                                 
                                 (
                                 
                                    
                                       S
                                    
                                    
                                       k
                                    
                                 
                                 +
                                 
                                    
                                       e
                                    
                                    
                                       j
                                    
                                 
                                 ;
                                 N
                                 )
                                 -
                                 
                                    
                                       
                                          
                                             W
                                          
                                          
                                             ¯
                                          
                                       
                                    
                                    
                                       ℓ
                                    
                                 
                                 (
                                 
                                    
                                       S
                                    
                                    
                                       k
                                    
                                 
                                 ;
                                 N
                                 )
                                 
                                 ∀
                                 j
                                 =
                                 0
                                 ,
                                 1
                                 ,
                                 …
                                 ,
                                 v
                                 ,
                              
                           
                        where e
                        
                           j
                         is the jth unit vector (with a one in position j and zeroes elsewhere), be the estimate of the subgradient of 
                           
                              
                                 
                                    
                                       
                                          W
                                       
                                       
                                          ¯
                                       
                                    
                                 
                                 
                                    ℓ
                                 
                              
                              (
                              
                                 
                                    S
                                 
                                 
                                    k
                                 
                              
                              ;
                              N
                              )
                           
                         at the stocking level 
                           
                              
                                 
                                    S
                                 
                                 
                                    k
                                 
                              
                           
                        . The estimates of the subgradients of the expected response time functions across all field depots can be computed from the same v
                        +1 simulations. For a more detailed discussion about getting the subgradient and cut generation, please refer to Cezik and L’Ecuyer (2008). In the following subsection, we propose a simulation optimization algorithm that combines the cutting plane method and FCP to solve the sample average problem P2.

Our simulation optimization algorithm consists of multiple iterations, each of which consists of two phases. In Phase I, we first replace the nonlinear response time constraints of the problem P2 by a set of linear constraints (employing the linear cut (5)). We then solve the relaxed sample average problem by applying integer linear programming. Recall that the subscript k denotes the iteration number in the simulation optimization algorithm, and 
                           
                              
                                 
                                    S
                                 
                                 
                                    k
                                 
                              
                           
                         represents the optimal solution returned in Phase I of iteration k. In Phase II, we determine the feasibility of 
                           
                              
                                 
                                    S
                                 
                                 
                                    k
                                 
                              
                           
                         by using FCP. If the current solution 
                           
                              
                                 
                                    S
                                 
                                 
                                    k
                                 
                              
                           
                         satisfies all expected response time constraints, then the algorithm stops and returns the solution as the optimal feasible solution for our problem. Otherwise, if one of the expected response time constraints is violated, then we add a linear cut to the relaxed problem (corresponding to that violated constraint). The sampling process continues until the feasibility with respect to each constraint of the current solution is determined. We then increase the iteration counter by one and go to the next iteration (i.e., let k
                        =
                        k
                        +1). The samples we obtained in Phase II are stored and reused to perform the optimization technique in Phase I of the next iteration. Notice that the sample size used in each iteration is determined by FCP and therefore it is random.

The relaxed problem that we solve in Phase I of each iteration is as follows:
                           
                              
                                 
                                    
                                       
                                          
                                             (
                                             P
                                             3
                                             )
                                             
                                             Min
                                          
                                       
                                       
                                          
                                             
                                                
                                                   
                                                      ∑
                                                   
                                                   
                                                      i
                                                      ∈
                                                      I
                                                   
                                                
                                             
                                             
                                                
                                                   c
                                                
                                                
                                                   i
                                                
                                             
                                             
                                                
                                                   S
                                                
                                                
                                                   i
                                                   0
                                                
                                             
                                             +
                                             
                                                
                                                   
                                                      ∑
                                                   
                                                   
                                                      i
                                                      ∈
                                                      I
                                                   
                                                
                                             
                                             
                                                
                                                   
                                                      ∑
                                                   
                                                   
                                                      ℓ
                                                      ∈
                                                      L
                                                   
                                                
                                             
                                             
                                                
                                                   c
                                                
                                                
                                                   i
                                                
                                             
                                             
                                                
                                                   S
                                                
                                                
                                                   i
                                                   ℓ
                                                
                                             
                                          
                                       
                                    
                                    
                                       
                                          
                                             s
                                             .
                                             t
                                             .
                                             
                                          
                                       
                                       
                                          
                                             
                                                
                                                   D
                                                
                                                
                                                   k
                                                
                                             
                                             S
                                             ⩽
                                             
                                                
                                                   d
                                                
                                                
                                                   k
                                                
                                             
                                          
                                       
                                    
                                    
                                       
                                       
                                          
                                             0
                                             ⩽
                                             
                                                
                                                   S
                                                
                                                
                                                   i
                                                   0
                                                
                                             
                                             ⩽
                                             
                                                
                                                   
                                                      
                                                         S
                                                      
                                                      
                                                         ^
                                                      
                                                   
                                                
                                                
                                                   i
                                                   0
                                                
                                             
                                             ,
                                             
                                             
                                                
                                                   S
                                                
                                                
                                                   i
                                                   0
                                                
                                             
                                             
                                             integer
                                             (
                                             i
                                             ∈
                                             I
                                             )
                                          
                                       
                                    
                                    
                                       
                                       
                                          
                                             0
                                             ⩽
                                             
                                                
                                                   S
                                                
                                                
                                                   i
                                                   ℓ
                                                
                                             
                                             ⩽
                                             
                                                
                                                   
                                                      
                                                         S
                                                      
                                                      
                                                         ^
                                                      
                                                   
                                                
                                                
                                                   i
                                                   ℓ
                                                
                                             
                                             ,
                                             
                                             
                                                
                                                   S
                                                
                                                
                                                   i
                                                   ℓ
                                                
                                             
                                             
                                             integer
                                             (
                                             i
                                             ∈
                                             I
                                             ;
                                             ℓ
                                             ∈
                                             L
                                             )
                                          
                                       
                                    
                                 
                              
                           
                        
                     

The constraint 
                           
                              
                                 
                                    
                                       
                                          W
                                       
                                       
                                          ¯
                                       
                                    
                                 
                                 
                                    ℓ
                                 
                              
                              (
                              S
                              ;
                              N
                              )
                              ⩽
                              
                                 
                                    τ
                                 
                                 
                                    ℓ
                                 
                              
                           
                         of problem P2 is replaced with linear constraint 
                           
                              
                                 
                                    D
                                 
                                 
                                    k
                                 
                              
                              S
                              ⩽
                              
                                 
                                    d
                                 
                                 
                                    k
                                 
                              
                           
                        . The constraint set 
                           
                              
                                 
                                    D
                                 
                                 
                                    k
                                 
                              
                              S
                              ⩽
                              
                                 
                                    d
                                 
                                 
                                    k
                                 
                              
                           
                         is initially empty, but we add more constraints to it as the algorithm evolves. If any one of the expected response time constraints for 
                           
                              
                                 
                                    S
                                 
                                 
                                    k
                                 
                              
                           
                         is violated (based on the result of FCP), we add the linear cut (5) to the set 
                           
                              
                                 
                                    D
                                 
                                 
                                    k
                                 
                              
                              S
                              ⩽
                              
                                 
                                    d
                                 
                                 
                                    k
                                 
                              
                           
                        . This means that we add 
                           
                              
                                 
                                    
                                       
                                          q
                                       
                                       
                                          ¯
                                       
                                    
                                 
                                 
                                    ℓ
                                 
                              
                              (
                              
                                 
                                    S
                                 
                                 
                                    k
                                 
                              
                              ;
                              N
                              
                                 
                                    )
                                 
                                 
                                    T
                                 
                              
                              
                                 
                                    S
                                 
                                 
                                    k
                                 
                              
                              +
                              
                                 
                                    τ
                                 
                                 
                                    ℓ
                                 
                              
                              -
                              
                                 
                                    
                                       
                                          W
                                       
                                       
                                          ¯
                                       
                                    
                                 
                                 
                                    ℓ
                                 
                              
                              (
                              
                                 
                                    S
                                 
                                 
                                    k
                                 
                              
                              ;
                              N
                              )
                           
                         to d
                        
                           k
                         and add the row vector 
                           
                              
                                 
                                    
                                       
                                          q
                                       
                                       
                                          ¯
                                       
                                    
                                 
                                 
                                    ℓ
                                 
                              
                              (
                              
                                 
                                    S
                                 
                                 
                                    k
                                 
                              
                              ;
                              N
                              
                                 
                                    )
                                 
                                 
                                    T
                                 
                              
                           
                         to D
                        
                           k
                        . Notice that two important parameters we need to specify in FCP are the nominal confidence level α and tolerance levels ∊
                        ℓ, for ℓ=1, 2, …, v. The purpose of using ∊
                        ℓ is to define a so-called acceptable region. FCP allows choosing the solutions whose expected performance corresponding to the stochastic constraint is within the acceptable region, which is looser than the defined feasible region (see Andradóttir and Kim (2010) for a detailed description). More specifically, if FCP claims that 
                           
                              
                                 
                                    S
                                 
                                 
                                    k
                                 
                              
                           
                         is feasible for the ℓth constraint, we then have the following probability statement:
                           
                              (6)
                              
                                 Pr
                                 {
                                 
                                    
                                       W
                                    
                                    
                                       ℓ
                                    
                                 
                                 (
                                 
                                    
                                       S
                                    
                                    
                                       k
                                    
                                 
                                 )
                                 ⩽
                                 
                                    
                                       τ
                                    
                                    
                                       ℓ
                                    
                                 
                                 +
                                 
                                    
                                       ∊
                                    
                                    
                                       ℓ
                                    
                                 
                                 }
                                 ⩾
                                 1
                                 -
                                 α
                                 .
                              
                           
                        
                     

The generic simulation optimization algorithm combining SAA and FCP is described as follows:


                           Initialization: Let k
                           ←1, and let D
                           1 and d
                           1 be empty. Choose the desired confidence level 1−
                           α.


                           Phase I: Optimization
                           
                              
                                 •
                                 
                                    Step 1. Solve the problem P3 and let 
                                       
                                          
                                             
                                                S
                                             
                                             
                                                k
                                             
                                          
                                       
                                     be an optimal solution.


                                    Step 1a. Stop with an error if the problem P3 was infeasible.


                           Phase II: Feasibility check procedure
                           
                              
                                 •
                                 
                                    Setup. Choose the vector of tolerance levels 
                                       ∊
                                    
                                    =(∊
                                    1,…,
                                    ∊
                                    
                                       v
                                    )
                                       T
                                     and first-stage sample size n
                                    0
                                    ⩾2. Let L
                                    ={1,2,…,
                                    v} and F
                                    =∅ be the set of constraint indices that are determined to be feasible by FCP. Set 
                                       
                                          η
                                          =
                                          1
                                          /
                                          2
                                          [
                                          (
                                          2
                                          α
                                          /
                                          v
                                          
                                             
                                                )
                                             
                                             
                                                -
                                                2
                                                /
                                                (
                                                
                                                   
                                                      n
                                                   
                                                   
                                                      0
                                                   
                                                
                                                -
                                                1
                                                )
                                             
                                          
                                          -
                                          1
                                          ]
                                       
                                    . Obtain observations 
                                       
                                          
                                             
                                                Y
                                             
                                             
                                                ℓ
                                             
                                          
                                          (
                                          n
                                          )
                                          =
                                          
                                             
                                                
                                                   
                                                      ∑
                                                   
                                                   
                                                      i
                                                      ∈
                                                      I
                                                   
                                                
                                                
                                                   
                                                      W
                                                   
                                                   
                                                      i
                                                      ℓ
                                                   
                                                
                                                (
                                                
                                                   
                                                      S
                                                   
                                                   
                                                      k
                                                   
                                                
                                                ,
                                                
                                                   
                                                      ξ
                                                   
                                                   
                                                      n
                                                   
                                                
                                                )
                                             
                                             
                                                
                                                   
                                                      ∑
                                                   
                                                   
                                                      i
                                                      ∈
                                                      I
                                                   
                                                
                                                
                                                   
                                                      Q
                                                   
                                                   
                                                      i
                                                      ℓ
                                                   
                                                
                                                (
                                                
                                                   
                                                      ξ
                                                   
                                                   
                                                      n
                                                   
                                                
                                                )
                                             
                                          
                                       
                                    , for ℓ=1, 2, …, v, and n
                                    =1, 2, …, n
                                    0, where the definitions of 
                                       
                                          
                                             
                                                W
                                             
                                             
                                                i
                                                ℓ
                                             
                                          
                                          (
                                          
                                             
                                                S
                                             
                                             
                                                k
                                             
                                          
                                          ,
                                          
                                             
                                                ξ
                                             
                                             
                                                n
                                             
                                          
                                          )
                                       
                                     and Q
                                    
                                       iℓ(ξ
                                    
                                       n
                                    ) are given in Section 3.2.

For each constraint ℓ∈
                                    L, compute the sample variance
                                       
                                          
                                             
                                                
                                                   S
                                                
                                                
                                                   ℓ
                                                
                                                
                                                   2
                                                
                                             
                                             (
                                             
                                                
                                                   n
                                                
                                                
                                                   0
                                                
                                             
                                             )
                                             =
                                             
                                                
                                                   1
                                                
                                                
                                                   
                                                      
                                                         n
                                                      
                                                      
                                                         0
                                                      
                                                   
                                                   -
                                                   1
                                                
                                             
                                             
                                                
                                                   
                                                      ∑
                                                   
                                                   
                                                      n
                                                      =
                                                      1
                                                   
                                                   
                                                      
                                                         
                                                            n
                                                         
                                                         
                                                            0
                                                         
                                                      
                                                   
                                                
                                             
                                             (
                                             
                                                
                                                   Y
                                                
                                                
                                                   ℓ
                                                
                                             
                                             (
                                             n
                                             )
                                             -
                                             
                                                
                                                   
                                                      
                                                         Y
                                                      
                                                      
                                                         ¯
                                                      
                                                   
                                                
                                                
                                                   ℓ
                                                
                                             
                                             (
                                             
                                                
                                                   n
                                                
                                                
                                                   0
                                                
                                             
                                             )
                                             
                                                
                                                   )
                                                
                                                
                                                   2
                                                
                                             
                                             ,
                                          
                                       
                                    where 
                                       
                                          
                                             
                                                
                                                   
                                                      Y
                                                   
                                                   
                                                      ¯
                                                   
                                                
                                             
                                             
                                                ℓ
                                             
                                          
                                          (
                                          
                                             
                                                n
                                             
                                             
                                                0
                                             
                                          
                                          )
                                          =
                                          
                                             
                                                n
                                             
                                             
                                                0
                                             
                                             
                                                -
                                                1
                                             
                                          
                                          
                                             
                                                ∑
                                             
                                             
                                                n
                                                =
                                                1
                                             
                                             
                                                
                                                   
                                                      n
                                                   
                                                   
                                                      0
                                                   
                                                
                                             
                                          
                                          
                                             
                                                Y
                                             
                                             
                                                ℓ
                                             
                                          
                                          (
                                          n
                                          )
                                       
                                    . Set the observation counter r
                                    =
                                    n
                                    0 and go to Feasibility Check.


                                    Feasibility Check. For all ℓ∈
                                    L,
                                       
                                          –
                                          If 
                                                
                                                   
                                                      
                                                         ∑
                                                      
                                                      
                                                         n
                                                         =
                                                         1
                                                      
                                                      
                                                         r
                                                      
                                                   
                                                   (
                                                   
                                                      
                                                         Y
                                                      
                                                      
                                                         ℓ
                                                      
                                                   
                                                   (
                                                   n
                                                   )
                                                   -
                                                   
                                                      
                                                         τ
                                                      
                                                      
                                                         ℓ
                                                      
                                                   
                                                   )
                                                   ⩽
                                                   -
                                                   max
                                                   
                                                      
                                                         
                                                            0
                                                            ,
                                                            
                                                               
                                                                  η
                                                                  (
                                                                  
                                                                     
                                                                        n
                                                                     
                                                                     
                                                                        0
                                                                     
                                                                  
                                                                  -
                                                                  1
                                                                  )
                                                                  
                                                                     
                                                                        S
                                                                     
                                                                     
                                                                        ℓ
                                                                     
                                                                     
                                                                        2
                                                                     
                                                                  
                                                                  (
                                                                  
                                                                     
                                                                        n
                                                                     
                                                                     
                                                                        0
                                                                     
                                                                  
                                                                  )
                                                               
                                                               
                                                                  
                                                                     
                                                                        ∊
                                                                     
                                                                     
                                                                        ℓ
                                                                     
                                                                  
                                                               
                                                            
                                                            -
                                                            
                                                               
                                                                  
                                                                     
                                                                        ∊
                                                                     
                                                                     
                                                                        ℓ
                                                                     
                                                                  
                                                               
                                                               
                                                                  2
                                                               
                                                            
                                                            r
                                                         
                                                      
                                                   
                                                
                                             , then move ℓfrom L to F.

Else if 
                                                
                                                   
                                                      
                                                         ∑
                                                      
                                                      
                                                         n
                                                         =
                                                         1
                                                      
                                                      
                                                         r
                                                      
                                                   
                                                   (
                                                   
                                                      
                                                         Y
                                                      
                                                      
                                                         ℓ
                                                      
                                                   
                                                   (
                                                   n
                                                   )
                                                   -
                                                   
                                                      
                                                         τ
                                                      
                                                      
                                                         ℓ
                                                      
                                                   
                                                   )
                                                   ⩾
                                                   max
                                                   
                                                      
                                                         
                                                            0
                                                            ,
                                                            
                                                               
                                                                  η
                                                                  (
                                                                  
                                                                     
                                                                        n
                                                                     
                                                                     
                                                                        0
                                                                     
                                                                  
                                                                  -
                                                                  1
                                                                  )
                                                                  
                                                                     
                                                                        S
                                                                     
                                                                     
                                                                        ℓ
                                                                     
                                                                     
                                                                        2
                                                                     
                                                                  
                                                                  (
                                                                  
                                                                     
                                                                        n
                                                                     
                                                                     
                                                                        0
                                                                     
                                                                  
                                                                  )
                                                               
                                                               
                                                                  
                                                                     
                                                                        ∊
                                                                     
                                                                     
                                                                        ℓ
                                                                     
                                                                  
                                                               
                                                            
                                                            -
                                                            
                                                               
                                                                  
                                                                     
                                                                        ∊
                                                                     
                                                                     
                                                                        ℓ
                                                                     
                                                                  
                                                               
                                                               
                                                                  2
                                                               
                                                            
                                                            r
                                                         
                                                      
                                                   
                                                
                                             , then eliminate ℓ from L.

Else, take one additional observation Y
                                             ℓ(r
                                             +1). Set r
                                             =
                                             r
                                             +1 and return to Feasibility Check.


                                    Stopping Rule. If ∣L∣=0, then we stop Phase II (FCP) and check the cardinality of the set F.
                                       
                                          –
                                          If ∣F∣=
                                             v, then we terminate the algorithm and return 
                                                
                                                   
                                                      
                                                         S
                                                      
                                                      
                                                         k
                                                      
                                                   
                                                
                                              as the final optimal solution.

Otherwise, compute 
                                                
                                                   
                                                      
                                                         
                                                            
                                                               q
                                                            
                                                            
                                                               ¯
                                                            
                                                         
                                                      
                                                      
                                                         ℓ
                                                      
                                                   
                                                   (
                                                   
                                                      
                                                         S
                                                      
                                                      
                                                         k
                                                      
                                                   
                                                   ;
                                                   r
                                                   )
                                                
                                              for infeasible constraint ℓ∉
                                             F, add 
                                                
                                                   
                                                      
                                                         
                                                            
                                                               q
                                                            
                                                            
                                                               ¯
                                                            
                                                         
                                                      
                                                      
                                                         ℓ
                                                      
                                                   
                                                   (
                                                   
                                                      
                                                         S
                                                      
                                                      
                                                         k
                                                      
                                                   
                                                   ;
                                                   r
                                                   
                                                      
                                                         )
                                                      
                                                      
                                                         T
                                                      
                                                   
                                                   
                                                      
                                                         S
                                                      
                                                      
                                                         k
                                                      
                                                   
                                                   +
                                                   
                                                      
                                                         τ
                                                      
                                                      
                                                         ℓ
                                                      
                                                   
                                                   -
                                                   
                                                      
                                                         
                                                            
                                                               W
                                                            
                                                            
                                                               ¯
                                                            
                                                         
                                                      
                                                      
                                                         ℓ
                                                      
                                                   
                                                   (
                                                   
                                                      
                                                         S
                                                      
                                                      
                                                         k
                                                      
                                                   
                                                   ;
                                                   r
                                                   )
                                                
                                              to d
                                             
                                                k
                                              and add the row vector 
                                                
                                                   
                                                      
                                                         
                                                            
                                                               q
                                                            
                                                            
                                                               ¯
                                                            
                                                         
                                                      
                                                      
                                                         ℓ
                                                      
                                                   
                                                   (
                                                   
                                                      
                                                         S
                                                      
                                                      
                                                         k
                                                      
                                                   
                                                   ;
                                                   r
                                                   
                                                      
                                                         )
                                                      
                                                      
                                                         T
                                                      
                                                   
                                                
                                              to D
                                             
                                                k
                                             . Let d
                                             
                                                k+1
                                             ←
                                             d
                                             
                                                k
                                             , D
                                             
                                                k+1
                                             ←
                                             D
                                             
                                                k
                                             , k
                                             ←
                                             k
                                             +1 and go to Phase I.


                                 Batur and Kim (2010) proposed a generic procedure to detect the feasibility of two or more systems and constraints. We carefully modify the procedure and embed it into Phase II of the algorithm, which can handle one system with v stochastic constraints. The shape of the continuation region is characterized by an integer parameter that is called c by Kim and Nelson (2001). We have only presented the screening threshold obtained when c
                                 =1 in Phase II, which Kim and Nelson showed to be a good choice. It should be noticed that the variance estimator 
                                    
                                       
                                          
                                             S
                                          
                                          
                                             ℓ
                                          
                                          
                                             2
                                          
                                       
                                    
                                  depends only on the first-stage data. If we update the variance estimators as more data are obtained, the procedure cannot provide a statistical guarantee of feasibility for finite samples (Malone et al., 2005).

To obtain the statistical validity of FCP in Phase II (i.e., the probability statement (6)) we need to assume that the vector [Y
                           1(n), Y
                           2(n), …, Y
                           
                              v
                           (n)] follows a v-variate normal distribution for n
                           =1, 2, … (see Batur and Kim (2010)). This assumption is plausible in the inventory problem, because Y
                           ℓ(n) represents the average waiting time of depot ℓ at the nth simulation run, which is a within-replication average of random variables (therefore this normal assumption can be justified by multivariate central limit theorem). Further, the average waiting times for different field depots are likely to be correlated, because they all depend on the inventory level at the single warehouse to some extent. The major advantage of using FCP is that we can guarantee to return a feasible solution with some specified confidence level. By contrast, a pure SAA approach, which employs conventional sample means to check the feasibility, cannot guarantee this. The other necessary assumption for our algorithm is that the expected response time at each depot is nonincreasing componentwise, and jointly convex in the stocking level vector 
                              
                                 S
                              
                           , for all ℓ. We need this assumption to ensure that adding the linear cut to the constraints (to form the problem P3 in Phase I) will shrink the feasible region without eliminating any feasible solution for the original problem (see Atlason et al. (2004) for a discussion of this). However, experience with time-based service constraints is that they are often not jointly convex in the base stocking levels (Caggiano et al., 2009). We believe that the refinement of our simulation optimization algorithm to handle the issue of nonconvexity is an important open research problem.

In this section we construct a reasonable sequence of tolerance levels to enhance the efficiency of the proposed approach. A fundamental question in a typical SAA algorithm is the choice of sample size. A sample size that is too small could lead to non-convergence of the algorithm and result in inferior and infeasible solutions, while a sample size that is too large may lead to excessive and unnecessary sampling cost. In the proposed algorithm, we use FCP to detect the feasibility of candidate solutions and also choose the sample size. In addition, the choice of sample size may be adjusted dynamically to some extent, depending on the sequence of confidence levels α or tolerance levels ∊. Notice that a larger α or ∊ would result in a smaller sample size, and vice versa. Ideally we want to use small sample sizes in early iterations, which helps reduce the computational effort required in generating sample-path problems. In later iterations, because the current solution is probably closer to the true one, we use a larger sample size to identify its feasibility with more confidence, an idea that is similar to retrospective approximation (RA) (see, e.g., Shapiro (2004)). The aforementioned sample-size structure can be achieved via progressively decreasing the confidence and tolerance levels for each iteration. Pasupathy (2010) provided guidance on choosing the sequence of sample sizes and error tolerances in RA algorithms. However, in our algorithm, which can be considered as a combination of SAA and R&S, a more important issue is how to determine an appropriate relationship between confidence level α and tolerance level ∊. Our goal is to minimize the growth rate of the expected value of the largest possible sample size (as α goes to zero). The derivation here is somewhat analogous to that of Hong and Nelson (2007). To simplify the analysis, we assume that the tolerance levels and sample variances for each constraint are equal, and that the tolerance level is a function of α. That is, we assume ∊
                        ℓ
                        =
                        ∊(α) and 
                           
                              
                                 
                                    S
                                 
                                 
                                    ℓ
                                 
                                 
                                    2
                                 
                              
                              (
                              
                                 
                                    n
                                 
                                 
                                    0
                                 
                              
                              )
                              =
                              
                                 
                                    S
                                 
                                 
                                    2
                                 
                              
                           
                        , for ℓ=1, 2, …, v. We then look at the end point of the triangular continuation region (denoted as 
                           
                              N
                           
                        , see Fig. 2 of Batur and Kim (2010)):
                           
                              
                                 E
                                 [
                                 N
                                 ]
                                 =
                                 
                                    
                                       2
                                       η
                                       (
                                       
                                          
                                             n
                                          
                                          
                                             0
                                          
                                       
                                       -
                                       1
                                       )
                                       
                                          
                                             σ
                                          
                                          
                                             2
                                          
                                       
                                    
                                    
                                       ∊
                                       (
                                       α
                                       
                                          
                                             )
                                          
                                          
                                             2
                                          
                                       
                                    
                                 
                                 ⩽
                                 
                                    
                                       M
                                       (
                                       
                                          
                                             n
                                          
                                          
                                             0
                                          
                                       
                                       -
                                       1
                                       )
                                    
                                    
                                       ∊
                                       (
                                       α
                                       
                                          
                                             )
                                          
                                          
                                             2
                                          
                                       
                                    
                                 
                                 
                                    
                                       
                                          
                                             
                                                
                                                   
                                                      
                                                         
                                                            2
                                                            α
                                                         
                                                         
                                                            v
                                                         
                                                      
                                                   
                                                
                                             
                                             
                                                -
                                                2
                                                /
                                                (
                                                
                                                   
                                                      n
                                                   
                                                   
                                                      0
                                                   
                                                
                                                -
                                                1
                                                )
                                             
                                          
                                          -
                                          1
                                       
                                    
                                 
                                 ,
                              
                           
                        where the definition of η is given in Section 3.4, and M is a finite positive number satisfying σ
                        2
                        ⩽
                        M. To avoid oversampling we require ∊(α) to satisfy 
                           
                              
                                 
                                    lim
                                 
                                 
                                    α
                                    →
                                    0
                                 
                              
                              
                                 
                                    n
                                 
                                 
                                    0
                                 
                              
                              /
                              E
                              [
                              N
                              ]
                              <
                              ∞
                           
                        , which implies that the first-stage sample size does not dominate the expected maximum sample size in the growth rate (see Hong and Nelson (2007)). A possible choice of ∊(α) that meets this requirement is
                           
                              (7)
                              
                                 ∊
                                 (
                                 α
                                 )
                                 =
                                 
                                    
                                       ∊
                                    
                                    
                                       0
                                    
                                 
                                 
                                    
                                       
                                          
                                             
                                                
                                                   
                                                      
                                                         
                                                            
                                                               2
                                                               α
                                                            
                                                            
                                                               v
                                                            
                                                         
                                                      
                                                   
                                                
                                                
                                                   -
                                                   2
                                                   /
                                                   (
                                                   
                                                      
                                                         n
                                                      
                                                      
                                                         0
                                                      
                                                   
                                                   -
                                                   1
                                                   )
                                                
                                             
                                          
                                       
                                    
                                    
                                       1
                                       /
                                       2
                                    
                                 
                                 ,
                              
                           
                        where ∊
                        0 is a constant. In the subsequent empirical study of our algorithm, we use the setting of ∊(α) presented in Eq. (7).

In this section, an extensive empirical evaluation is performed to compare the following algorithms for solving the constrained inventory optimization problem:
                        
                           1.
                           We apply the Sample Average Approximation (SAA) approach proposed in Atlason et al. (2004). Note that in this algorithm the number of observations obtained in each iteration is arbitrarily chosen, and therefore it is likely to obtain infeasible solutions.

We employ the Feasibility Check Procedure (FCP) proposed in Batur and Kim (2010) to identify a set of feasible or near-feasible solutions subject to multiple stochastic constraints. We then choose the best solution among the surviving ones with respect to the deterministic objective value (i.e., the lowest inventory investment cost). Notice that FCP assumes that the set of solutions is available at the beginning of the experiment.

The simulation optimization algorithm proposed in Section 3.4 is performed, which can be considered as a careful combination of SAA and FCP. We also apply the sequence of tolerance levels recommended in Section 3.5.

The goal is to compare the performances of simulation-based algorithms when applied to solve the constrained inventory optimization problem. We do not consider comparing METRIC-like methods in the empirical study, because Wong et al. (2007) already showed that the simplified analytical models may lead to infeasible solutions in relevant cases. The simulation model development is based on the following assumptions:
                        
                           •
                           The transportation time between the warehouse and a field depot ℓ is an i.i.d. random variable uniformly distributed with a specified range (with mean T
                              ℓ), and we assume the distance between the field depot to a customer site is negligible, and the travel time between them is zero.

Because of the low demand nature of the spare parts inventory problem, we assume that the field depots employ a continuous review, one-for-one (or base-stock, also called (S
                              −1,
                              S)) replenishment policy.

The warehouse and the field depots stock inventory, but customers keep no inventory.

Every part is important for operating the equipment, and thus the equipment is down if one of its parts fails.

The interfailure time for part i at depot ℓ is an i.i.d. exponential random variable with mean λ
                              
                                 iℓ.

The repair time for part i is an i.i.d. exponential random variable with mean R
                              
                                 i
                              .

The warehouse and the field depots satisfy demand in a first-come first-served order. There is also no transhipment between the field depots, and thus the inventory at the field depots is replenished only from the warehouse.

Although this example system is quite simple, it cannot be analyzed exactly due to the multi-layer structure. However, for the simulator it does not matter if we have a more complicated layout or features embedded in the system to be simulated, such as allowing transhipment between depots, any assumed distribution, time-varying arrival rates and other inventory policies (not only the base-stock policy). The only consequence is that there would be more events (ordering, transhipments, and service of items) taking place during the simulation, resulting in more computational time being needed.

We select the experimental parameters carefully according to the related literature. In the SAA algorithm proposed in Atlason et al. (2008), the number of observations sampled in each iteration is set as M
                        =100. To examine the effect of using different sample sizes in the current empirical study, the value of M is varied with M
                        =20, 50, and 100 for the pure SAA approach. For the pure FCP approach we set the nominal confidence level 1−
                        α
                        =0.95. However, for the SAA+FCP approach we use a decreasing sequence of allowable errors α to ensure that the sample size is variable and increasing with respect to the iteration counter k. In other words, we set α
                        =0.025(4/5)
                           k
                         and 
                           
                              
                                 
                                    ∊
                                 
                                 
                                    0
                                 
                              
                              =
                              1
                              /
                              
                                 
                                    
                                       
                                          n
                                       
                                       
                                          0
                                       
                                    
                                 
                              
                           
                        . The choice of initial tolerance level ∊
                        0 is the same as that used in Batur and Kim (2010). We also use the setting of ∊(α) in Eq. (7) (see Section 3.5). For both the pure FCP and SAA+FCP approaches, we set the first-stage sample size n
                        0
                        =20, which is also the same as the setting used in Batur and Kim (2010). In the literature on R&S procedures we often require n
                        0
                        ⩾10 to ensure that the degrees of freedom of a sample variance are not too small. The SAA and SAA+FCP approaches are applied to the whole solution space of the optimization problem. As for the pure FCP approach, in each trial we first randomly select 200 solutions within the solution space without replacement, and then select the solution with the lowest objective value among the feasible solutions that are returned by FCP. The candidate solutions are generated by selecting a random integer within the range of corresponding decision variables, namely, 
                           
                              [
                              0
                              ,
                              
                                 
                                    
                                       
                                          S
                                       
                                       
                                          ^
                                       
                                    
                                 
                                 
                                    i
                                    0
                                 
                              
                              ]
                           
                         and 
                           
                              [
                              0
                              ,
                              
                                 
                                    
                                       
                                          S
                                       
                                       
                                          ^
                                       
                                    
                                 
                                 
                                    i
                                    ℓ
                                 
                              
                              ]
                           
                        .

For the two-echelon inventory model, Wong et al. (2007) provided instances of five test beds, including symmetric and asymmetric cases. In our tested problems, we consider two scenarios with symmetric and asymmetric interfailure time distributions, which are similar to the settings in Wong et al. (2007). We perform 500 macro-replications (complete repetitions) of the aforementioned three algorithms under both scenarios. To compare the performance of the algorithms we record the estimated Probability of finding Feasible Solutions (PFSs), the Average Number of Samples (ANSs) required by each algorithm (without dividing by the number of visited solutions), and the Average Performance (i.e., the deterministic objective value) of the final selected solution (AP). To obtain the PFS of each algorithm in different scenarios, we simulate 1000 observations using the final solutions (found in 500 trials), and compare the average performance (corresponding to the constraints) with the specified service level threshold τ
                        ℓ. The solution procedures and the multi-echelon inventory simulation model are coded in Visual Basic for Applications, and the integer-programming problem P3 is solved by the CPLEX solver. The code is run on an ASUS desktop computer, with a 2.4GHz Pentium 4 processor and 1.97GB RAM.

We consider an inventory system with one type of part (i.e., u
                        =1), two different numbers of field depots (i.e., v
                        =5 or 10), in which the repair times for each spare part are exponentially distributed with mean R
                        =10 (days). With regard to the transportation time between the central warehouse and field depots, we use random values generated from uniform distributions U(1,5) and U(1,7). That is, we set T
                        ℓ
                        =3 and T
                        ℓ
                        =4 (days), respectively. All the field depots have an identical target expected response time to be satisfied, and we test three different values (i.e., τ
                        =0.5, 1.5 or 5.5). The unit inventory investment cost is set at 30 (i.e., c
                        =30), and the upper limits of the base stocking levels of the central warehouse and the field depots are 20 (i.e., 
                           
                              
                                 
                                    
                                       
                                          S
                                       
                                       
                                          ^
                                       
                                    
                                 
                                 
                                    i
                                    0
                                 
                              
                              =
                              
                                 
                                    
                                       
                                          S
                                       
                                       
                                          ^
                                       
                                    
                                 
                                 
                                    i
                                    ℓ
                                 
                              
                              =
                              20
                           
                        ). There are two different scenarios with respect to the configurations of the interfailure times. In Scenario 1, we consider the symmetric instances in which the interfailure time distributions are exponential and their means are equal across all field depots. We set the mean λ
                        =3 (days). Table 1
                         lists the settings for 12 cases corresponding to Scenario 1. In Scenario 2, we consider cases, where the mean interfailure times for each depot are not equal. The interfailure times are exponentially distributed with means of 5, 4, 3, 2, and 1days for five field depots, and 5, 5, 4, 4, 3, 3, 2, 2, 1, and 1days for 10 depots. The settings of other parameters in Scenario 2 are the same as those in Scenario 1. For each replication, the inventory simulation model is run in length of 120days.

@&#EXPERIMENTAL RESULTS@&#

The experimental results for the two scenarios are summarized in Tables 2 and 3
                        
                        . In each table, we list the results corresponding to the five and ten depots configurations, comparing our algorithm with other existing algorithms in terms of ANS, AP and PFS. Moreover, in both tables, we arrange the order of experimental cases according to their complexity, from low to high. Before we proceed to the detailed numerical results, we will discuss the varied complexity levels of the example problems. First, the cases with T
                        ℓ
                        =4 are more complex than those with T
                        ℓ
                        =3. This is because the wider range of the transportation time increases the randomness level of the response time, leading to more required sample sizes, especially when using FCP (since the sample variance used in the screening threshold inflates). Second, the smaller expected response time threshold results in more difficult problems, which implies that the cases with τ
                        ℓ
                        =0.5 will be more difficult than those with τ
                        ℓ
                        =5.5 in our problems. When the target expected response time is smaller, the number of feasible solutions in the solution space diminishes, which decreases the possibility of finding feasible solutions (i.e., there is a lower PFS). Therefore, we need more iterations to find the best feasible solution, and thus more samples are probably required. Finally, the cases in Scenario 2 are more complex than those in Scenario 1. When the interfailure time distributions are asymmetric, the variance of the response times of each depot increases, and thus more sample sizes are needed to solve the problem and the PFS decreases. The main observations from Tables 2 and 3 are as follows:

(i) The pure FCP approach performs the worst among the three algorithms that are compared. It requires more than five times the sample size compared with SAA+FCP in most cases. However, the total investment cost (i.e., objective value) of the solution selected by FCP is far worse than that of SAA+FCP. Furthermore, when the complexity of the problem increases (e.g., the case with T
                        ℓ
                        =4, τ
                        ℓ
                        =0.5, and v
                        =10), the sample size required for FCP increases significantly in order to check the feasibility of the randomly chosen solutions, and sometimes all of the solutions are infeasible (therefore we do not list the PFS). The main reason that the pure FCP approach has poor performance is because it chooses the candidate solutions randomly within the solution space, rather than searches for the promising solutions in an effective and systematic way. When the solution space is larger, there is less chance of finding the best solution or even feasible ones. In our tested problems with five field depots, we have a six-dimensional vector of decision variables (ranging from 1 to 20 in each dimension), and thus there are 206
                        =64,000,000 solutions in the solution space. In the experiments with the pure FCP approach, only 200 solutions are randomly selected, so that the probability of finding the best solution is very small. We could increase the number of visited solutions to obtain an acceptable probability value, but this would be at the price of generating excessively high number of samples. In other words, with the pure FCP approach the sampling cost required as a function of the number of evaluated solutions rises very fast.

(ii) For the pure SAA approach we can observe that the performance measures AP and PFS improve in most cases when we increase the value of M (therefore ANS is increased accordingly). One of the important limitations of the pure SAA approach is that the final returned solution may be infeasible for the original problem. From the experimental results we find that the PFS of the pure SAA approach is less than 0.90 in many cases. When the complexity level of the tested problem increases, its PFS could even be less than 0.8 (especially when the target response time is tight, e.g., τ
                        ℓ
                        =0.5). By contrast, the PFS of the SAA+FCP approach is over 0.98 in nearly all tested cases. Another disadvantage of the pure SAA approach is the lack of ability to choose an appropriate value of M. In Atlason et al. (2008) the sample size obtained in each iteration is fixed at M
                        =100. From the current experimental results of SAA we find that there is no significant improvement for the performance of AP corresponding to M
                        =20, 50, and 100 cases, while the ANS increases significantly. In general, the harder the inventory problem is, the larger the value of M should be set. However, in the pure SAA approach it is very difficult for the analyst to specify a good value of M at the beginning of the simulation experiment. If the value of M is too large, we may prescribe more samples than needed to determine the feasibility of the solution returned by Phase I. On the other hand, if the value of M is too small, the obtained solution may be highly suboptimal or infeasible because the resulting optimization problem P2 is not a good SAA version of the original one.

(iii) The SAA+FCP approach employs FCP in Phase II to examine whether the solution returned by Phase I is feasible or not. The sample size used in each iteration is random and determined according to the complexity level of the inventory problem. For instance, if the problem is very complicated or the chosen solution is very close to the feasibility margin, then the FCP in Phase II will be terminated with a large sample size. From the experimental results in Tables 2 and 3, we can see that in nearly all cases the performance of SAA+FCP in terms of AP and PFS is better than that of SAA with M
                        =20. This implies that the inventory problem is not very easy to solve, therefore the setting of M
                        =20 is not sufficient. When the value of M is set as 50, in some cases the performance of SAA+FCP is still better than that of SAA in terms of all estimated measures (e.g., the case with T
                        ℓ
                        =4, τ
                        ℓ
                        =1.5, and v
                        =10 in Table 2). Furthermore, when compared with SAA using M
                        =100, the SAA+FCP algorithm needs less simulation effort to select a feasible solution (i.e., ANS and PFS are improved). However, in some cases the objective values (i.e., AP) of SAA+FCP are not as good as those of SAA with M
                        =100, although the difference is quite modest. We also compare the performances of SAA+FCP with and without applying the sequence of tolerance levels recommended in Section 3.5, and find that the incorporation of the sequence makes an improvement in most cases (although this is not tabulated in detail here). If we use an increasing sequence of sample size by adjusting the tolerance levels (as iteration goes on), the obtained solution is likely to be closer to the true optimal one. In summary, the numerical results show that the proposed algorithm can reduce sampling cost of simulation and eliminate the problem of infeasibility (i.e., can consistently achieve the service targets), at a modest increase in inventory holding cost.

@&#CONCLUSIONS@&#

In the paper we have presented a simulation optimization algorithm to solve the multi-echelon inventory problem subject to service level constraints. We also provide an argument in favor of using simulation instead of simplified analytical methods. The proposed approach can be considered as a careful combination of SAA and FCP, in which a reasonable sequence of tolerance levels is used. The experimental results show that our algorithm requires less simulation effort to guarantee choosing a feasible solution, and sometimes it is closer to choosing the optimal one than other existing algorithms. There are several possible directions of future research along this line of work. Since the simulation approach has the advantage of being flexible for use with real world problems, we could consider the transhipment of spare parts between field depots or extend this method to inventory problems with more than two echelons, which are difficult to handle with analytical methods (see, for instance, Dong et al. (2012)). Additional improvements in efficiency are also possible by employing variance reduction techniques (see, for instance, Tsai and Kuo (2012)). Another possible extension is to develop more efficient R&S procedures to determine the feasibility of candidate solutions (e.g., the multistage procedures; see Tsai and Chu (2012)), and therefore the sampling cost of our simulation optimization algorithm could be further reduced. The other possible extension is to develop a better stopping rule to consider the tradeoff between the optimality of the obtained solution and the required sample size.

@&#REFERENCES@&#

