@&#MAIN-TITLE@&#Fuzzy C-means++: Fuzzy C-means with effective seeding initialization

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           Paper proposes the Fuzzy C-means++ method for improving the effectiveness and speed of the Fuzzy C-means algorithm.


                        
                        
                           
                           This method works by spreading the initial cluster representatives in the data space at initialization.


                        
                        
                           
                           The proposed algorithm achieves superior results on both artificially generated and real world data sets.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Cluster analysis

Fuzzy C-means clustering

Initialization

@&#ABSTRACT@&#


               
               
                  Fuzzy C-means has been utilized successfully in a wide range of applications, extending the clustering capability of the K-means to datasets that are uncertain, vague and otherwise hard to cluster. This paper introduces the Fuzzy C-means++ algorithm which, by utilizing the seeding mechanism of the K-means++ algorithm, improves the effectiveness and speed of Fuzzy C-means. By careful seeding that disperses the initial cluster centers through the data space, the resulting Fuzzy C-means++ approach samples starting cluster representatives during the initialization phase. The cluster representatives are well spread in the input space, resulting in both faster convergence times and higher quality solutions. Implementations in R of standard Fuzzy C-means and Fuzzy C-means++ are evaluated on various data sets. We investigate the cluster quality and iteration count as we vary the spreading factor on a series of synthetic data sets. We run the algorithm on real world data sets and to account for the non-determinism inherent in these algorithms we record multiple runs while choosing different k parameter values. The results show that the proposed method gives significant improvement in convergence times (the number of iterations) of up to 40 (2.1 on average) times the standard on synthetic datasets and, in general, an associated lower cost function value and Xie–Beni value. A proof sketch of the logarithmically bounded expected cost function value is given.
               
            

@&#INTRODUCTION@&#

Partitional cluster analysis is defined as the problem of partitioning a group of objects into clusters that share similar characteristics. The most well-known and widely used partitional clustering algorithms are K-means and Fuzzy C-means (Peizhuang, 1983). When compared across clusters, members of a cluster will be different from members of all other clusters. In order to quantify the similarity/dissimilarity relationship between objects, metric functions, defined on both numeric (Euclidean, Manhattan, Cosine, etc.) or non-numeric (Hamming, Jaro-Winkler, Levenshtein, etc.) data have been used.

K-means is one of the oldest clustering algorithms (MacQueen, 1967) and refers both to the clustering task and a specific algorithm to solve it. Given a set 
                        
                           X
                        
                      of input data and a parameter 
                        
                           k
                        
                     , the task is to choose 
                        
                           k
                        
                      representatives of 
                        
                           X
                        
                      such that the distances between any points in 
                        
                           X
                        
                      and their representative is minimized. The set of representatives discovered after running the K-means algorithm is enough to define a clustering of the points in the data space (the 
                        
                           i
                        
                     th cluster being the set of all points in 
                        
                           X
                        
                      that are closer to 
                        
                           
                              
                                 r
                              
                              
                                 i
                              
                           
                        
                      than any other representative).

In contrast to the of K-means where each point belongs to one cluster, in Fuzzy C-means each point 
                        
                           
                              
                                 x
                              
                              
                                 i
                              
                           
                        
                      in the space belongs to 
                        
                           
                              
                                 r
                              
                              
                                 j
                              
                           
                        
                     , 
                        
                           ∀
                           j
                           ∈
                           R
                        
                      with 
                        
                           
                              
                                 μ
                              
                              
                                 ij
                              
                           
                           ∈
                           [
                           0
                           ,
                           1
                           ]
                        
                      defined in the membership matrix (of size 
                        
                           n
                           ×
                           k
                        
                      where 
                        
                           n
                        
                      is the number of points in the data space and 
                        
                           k
                        
                      is the number of representatives). The use of a membership matrix increases the expressiveness of the clustering analysis, arguably presenting a more comprehensive view of relationships present in the data. Further, the hard assignment of the data points by K-means is inadequate when the points are equally distanced between representatives, in which case they will be randomly assigned to one cluster or another (Doring, Lesot, & Kruse, 2006). Fuzzy C-means mitigates this problem by assigning equal degrees of belonging through the use of the membership matrix. This method computes membership degrees at each iteration, a costly operation that gives a membership degree to a point proportional to its proximity to the cluster representatives. Moreover, the size of this matrix grows as a product of the number of points and clusters, making the algorithm computationally expensive for high values. To reduce the computational burden of the algorithm and at the same time increase its accuracy, an integration of the K-means careful seeding algorithm (Arthur, Arthur, Vassilvitskii, & Vassilvitskii, 2007) into the standard version of Fuzzy C-means is proposed, analyzed and verified in this paper.

The reminder of the paper is structured as follows: Section 2 presents work improving the performance of Fuzzy C-means; both the standard and the proposed algorithm are introduced in Section 3, together with a proof that shows the theoretical bounds of the expected cost function; Section 4 presents the datasets and the evaluation procedure used, and compares the proposed scheme with the standard algorithm; Section 5 summarizes findings and considers future work.

@&#BACKGROUND@&#

Although noted both for its simplicity of implementation and its output validity, Fuzzy C-means suffers from high computational cost. For each iteration the computational complexity of the algorithm is quadratic in the number of clusters 
                        
                           O
                           (
                           
                              
                                 NC
                              
                              
                                 ∧
                              
                           
                           2
                           P
                           )
                        
                      where 
                        
                           N
                        
                      is the number of data points, 
                        
                           C
                        
                      is the number of clusters and 
                        
                           P
                        
                      is the dimension of the data points. A linear complexity approach 
                        
                           O
                           (
                           NCP
                           )
                        
                      that removes the need to store a large matrix during the iterations was proposed in Kolen and Hutcheson (2002). In Wang, Wang, and Wang (2004) a method to obtain qualitatively better clusters (as measured using a series of validity indexes) is proposed. This approach uses a weighted Euclidean distance which incorporates feature weights. While this method showed promising results on several UCI databases, it requires a feature weight learning step of complexity 
                        
                           O
                           (
                           
                              
                                 N
                              
                              
                                 2
                                 CP
                              
                           
                           )
                        
                     .

Work by Zou, Wang, and Hu (2008) addresses the problem of initializing the cluster representatives by partitioning the space into grid blocks (finite disjoint rectangle-like units) and performing a search for condensation points. A grid block is considered dense if the number of data points present in it are bigger than a given input threshold parameter. Condensation points are geometric centers of dense grid blocks and serve as good initialization points to be chosen as cluster center before commencing the Fuzzy C-means algorithm. Although this method works well on two-dimensional datasets, the question remains how well it would work for non-spherical cluster types, and what should the block sizes and density threshold values be.


                     Yang, Zhang, and Tian (2010) propose a methodology for picking centres based on subtractive clustering. The potential of each point to become an initial centre is a function of its neighboring points: the more neighbors the higher the chance of being picked. Although promising, being able to select the number of k parameter as well as initializing the algorithm, this method lacks enough empirical tests on real world datasets. Moreover it has four additional parameters that need tuning.


                     Celebi, Kingravi, and Vela (2013) conducted a comparative study on eight linear-time initialization techniques for K-means algorithm on a large variety of data sets. The study has looked at the quality (taking into consideration cost function values, external validity index) and speed number of iterations and CPU time) of the approaches. While most of these methods were non-deterministic (generating different initial points), two of them were deterministic, picking the same starting points every time when executed on the same data set. On real data sets, the non-deterministic methods (such as K-means++ (Arthur et al., 2007)) performed better than deterministic ones (with respect to minimum statistic), a fact that can be attributed to multiple local minima of the datasets and the fact that they were executed multiple times. However, the authors’ argue that deterministic methods need only one run, thus total computational complexity could be lower in their case.

The K-means++ method (Arthur et al., 2007), the basis of this work, initializes the cluster centers of the K-means algorithm by selecting points in the dataset that are further away from each other in a probabilistic manner. This method both avoids the problems of the standard method and improves speed of convergence, being theoretically guaranteed to be O (log k), and hence competitive with the optimal solution. While Celebi et al. (2013) used the standard K-means++ initialization method in their study, we focus on the more general case and apply it to Fuzzy C-means, using a parameter to control the spreading. This method improves the way in which Fuzzy C-means initializes its clusters and has several advantages over the methods discussed. The method achieves superior clustering (in terms of validity indexes) compared to using a random initialization as in the standard and fewer iterations. The proposed method is also easier to understand and implement and compared to other methods it needs just one parameter that controls the spreading factor.

The R programming language (R Development Core Team, 2013) is used here with the e1071 package (Meyer, Dimitriadou, Hornik, Weingessel, & Leisch, 2014) which, as well as containing standard clustering algorithms, contains useful cluster validity functions to test the quality of the discovered structures.

The standard version of the Fuzzy C-means algorithm (Peizhuang, 1983) – Algorithm 1) – minimizes the function:
                           
                              (1)
                              
                                 
                                    
                                       J
                                    
                                    
                                       m
                                    
                                 
                                 (
                                 U
                                 ,
                                 R
                                 )
                                 =
                                 
                                    
                                       
                                          ∑
                                       
                                       
                                          i
                                          =
                                          1
                                       
                                       
                                          N
                                       
                                    
                                 
                                 
                                    
                                       
                                          ∑
                                       
                                       
                                          j
                                          =
                                          1
                                       
                                       
                                          K
                                       
                                    
                                 
                                 
                                    
                                       μ
                                    
                                    
                                       ij
                                    
                                    
                                       m
                                    
                                 
                                 |
                                 
                                    
                                       x
                                    
                                    
                                       i
                                    
                                 
                                 -
                                 
                                    
                                       r
                                    
                                    
                                       j
                                    
                                 
                                 
                                    
                                       |
                                    
                                    
                                       2
                                    
                                 
                              
                           
                        subject to
                           
                              
                                 
                                    
                                       μ
                                    
                                    
                                       ij
                                    
                                 
                                 ∈
                                 [
                                 0
                                 ,
                                 1
                                 ]
                                 ;
                                 
                                 
                                    
                                       
                                          ∑
                                       
                                       
                                          j
                                          =
                                          1
                                       
                                       
                                          k
                                       
                                    
                                 
                                 
                                    
                                       μ
                                    
                                    
                                       ij
                                    
                                 
                                 =
                                 1
                                 ∀
                                 i
                                 ;
                                 
                                 0
                                 <
                                 
                                    
                                       
                                          ∑
                                       
                                       
                                          i
                                          =
                                          1
                                       
                                       
                                          n
                                       
                                    
                                 
                                 
                                    
                                       μ
                                    
                                    
                                       ij
                                    
                                 
                                 <
                                 N
                                 ,
                                 
                                 ∀
                                 N
                              
                           
                        
                        
                           
                              
                                 
                                 
                                    
                                       
                                          Algorithm 1: Fuzzy C-means (FCM)
                                       
                                    
                                    
                                       
                                          Given X= 
                                          
                                             
                                                
                                                   
                                                      {
                                                      
                                                         
                                                            x
                                                         
                                                         
                                                            i
                                                         
                                                      
                                                      }
                                                   
                                                   
                                                      i
                                                      =
                                                      1
                                                   
                                                   
                                                      N
                                                   
                                                
                                             
                                           
                                          and 
                                          
                                             
                                                k
                                             
                                          , return U and R
                                       
                                    
                                    
                                       
                                          1: procedure FCM (Data set X, Clusters k)
                                       
                                    
                                    
                                       
                                          
                                          2: 
                                          
                                             
                                                
                                                   
                                                      U
                                                   
                                                   
                                                      0
                                                   
                                                
                                             
                                           is randomly initialized
                                    
                                    
                                       
                                          
                                          3: repeat
                                       
                                    
                                    
                                       
                                          
                                          
                                          4: 
                                          
                                             
                                                
                                                   
                                                      r
                                                   
                                                   
                                                      j
                                                   
                                                
                                                =
                                                
                                                   
                                                      
                                                         
                                                            1
                                                         
                                                         
                                                            ∑
                                                         
                                                      
                                                   
                                                   
                                                      i
                                                      =
                                                      1
                                                   
                                                   
                                                      n
                                                   
                                                
                                                
                                                   
                                                      μ
                                                   
                                                   
                                                      ij
                                                   
                                                   
                                                      m
                                                   
                                                
                                                
                                                   
                                                      ∑
                                                   
                                                   
                                                      i
                                                      =
                                                      1
                                                   
                                                   
                                                      n
                                                   
                                                
                                                
                                                   
                                                      μ
                                                   
                                                   
                                                      ij
                                                   
                                                   
                                                      m
                                                   
                                                
                                                
                                                   
                                                      x
                                                   
                                                   
                                                      i
                                                   
                                                
                                                ,
                                                
                                                j
                                                =
                                                1
                                                …
                                                k
                                             
                                          
                                       
                                    
                                    
                                       
                                          
                                          
                                          
                                          5: 
                                          
                                             
                                                
                                                   
                                                      u
                                                   
                                                   
                                                      ij
                                                   
                                                
                                                =
                                                
                                                   
                                                      1
                                                   
                                                   
                                                      
                                                         
                                                            ∑
                                                         
                                                         
                                                            k
                                                            =
                                                            1
                                                         
                                                         
                                                            C
                                                         
                                                      
                                                      
                                                         
                                                            
                                                               
                                                                  
                                                                     
                                                                        |
                                                                        
                                                                           
                                                                              x
                                                                           
                                                                           
                                                                              i
                                                                           
                                                                        
                                                                        -
                                                                        
                                                                           
                                                                              r
                                                                           
                                                                           
                                                                              j
                                                                           
                                                                        
                                                                        |
                                                                     
                                                                     
                                                                        |
                                                                        
                                                                           
                                                                              x
                                                                           
                                                                           
                                                                              i
                                                                           
                                                                        
                                                                        -
                                                                        
                                                                           
                                                                              r
                                                                           
                                                                           
                                                                              k
                                                                           
                                                                        
                                                                        |
                                                                     
                                                                  
                                                               
                                                            
                                                         
                                                         
                                                            
                                                               
                                                                  2
                                                               
                                                               
                                                                  m
                                                                  -
                                                                  1
                                                               
                                                            
                                                         
                                                      
                                                   
                                                
                                             
                                           (3)
                                    
                                    
                                       
                                          
                                          6: until 
                                          
                                             
                                                |
                                                
                                                   
                                                      U
                                                   
                                                   
                                                      k
                                                      +
                                                      1
                                                   
                                                
                                                -
                                                
                                                   
                                                      U
                                                   
                                                   
                                                      k
                                                   
                                                
                                                |
                                                <
                                                e
                                             
                                          
                                       
                                    
                                    
                                       
                                          7: end procedure
                                       
                                    
                                 
                              
                           
                        where X
                        =
                        
                           
                              
                                 
                                    {
                                    
                                       
                                          x
                                       
                                       
                                          i
                                       
                                    
                                    }
                                 
                                 
                                    i
                                    =
                                    1
                                 
                                 
                                    N
                                 
                              
                           
                         the set of data points, U
                        =
                        
                           
                              
                                 
                                    {
                                    
                                       
                                          μ
                                       
                                       
                                          ij
                                       
                                    
                                    }
                                 
                                 
                                    i
                                    ,
                                    j
                                    =
                                    1
                                 
                                 
                                    NK
                                 
                              
                           
                         the matrix of membership degrees, 
                           
                              k
                              ∈
                              N
                           
                         the number of clusters and R
                        =
                        
                           
                              
                                 
                                    {
                                    
                                       
                                          r
                                       
                                       
                                          i
                                       
                                    
                                    }
                                 
                                 
                                    i
                                    =
                                    1
                                 
                                 
                                    k
                                 
                              
                           
                         the set of representatives, 
                           
                              m
                           
                         is the fuzzifier parameter which determines the fuzziness of the cluster. At the limit 
                           
                              m
                              →
                              1
                           
                        , the method becomes standard K-means, here we use a default value of 
                           
                              e
                              =
                              1
                              e
                              -
                              5
                           
                         and the | | operation denotes the Frobenius norm of the difference between the matrices. The difference is default and just one of the many ways in which we can assess convergence. We use the optimized implementation of Fuzzy C-means which uses the difference between subsequent cost function values to establish convergence (Meyer et al., 2014).

Initializing representatives by selecting random points from the input dataset results in a sub-optimal starting strategy for the standard version of the algorithm: consider Figs. 1, 3, 5 and 7
                           
                           
                           
                           
                           
                           
                           . The idea behind the proposed Fuzzy C-means++ scheme (Algorithm 2) is to choose points that are spread out in the data set as representatives and update the membership matrix accordingly before commencing Steps 2–4. The representative sampled with our proposed method (plotted with yellow and (especially) green triangles in Figs. 1, 3, 5 and 7) start in a much better position, closer to the real center of the clusters (marked in magenta) and thus requiring a much lower number of steps to converge. Note that the more well behaved (non-overlapping) the data set is, the more predictable (less volatile) is the initialization outcome of the Fuzzy C-means++ scheme.
                              
                                 
                                    
                                    
                                       
                                          
                                             Algorithm 2: Fuzzy C-means (FCM++) Initialization.
                                          
                                       
                                       
                                          
                                             Given a set of N data points X
                                             =
                                             
                                                
                                                   
                                                      
                                                         {
                                                         
                                                            
                                                               x
                                                            
                                                            
                                                               i
                                                            
                                                         
                                                         }
                                                      
                                                      
                                                         i
                                                         =
                                                         1
                                                      
                                                      
                                                         N
                                                      
                                                   
                                                
                                              
                                             and 
                                             
                                                
                                                   k
                                                
                                              
                                             representing the clusters number and p representing the spreading factor, return a set 
                                             
                                                
                                                   R
                                                
                                              
                                             of initial centers.
                                          
                                       
                                       
                                          
                                             8: procedure FCM++ (Dataset X, Clusters k)
                                          
                                       
                                       
                                          
                                             
                                                
                                                   9
                                                   :
                                                   R
                                                   :
                                                   =
                                                   R
                                                   ∪
                                                
                                              random point from dataset
                                       
                                       
                                          
                                             10: while size of R
                                             <
                                             k do:
                                       
                                       
                                          
                                             11: sample 
                                                
                                                   x
                                                   ∈
                                                   X
                                                
                                              with probability 
                                                
                                                   
                                                      
                                                         
                                                            
                                                               d
                                                            
                                                            
                                                               p
                                                            
                                                         
                                                         (
                                                         x
                                                         ,
                                                         R
                                                         )
                                                      
                                                      
                                                         sum
                                                         (
                                                         
                                                            
                                                               d
                                                            
                                                            
                                                               p
                                                            
                                                         
                                                         )
                                                      
                                                   
                                                
                                             
                                          
                                       
                                       
                                          
                                             12: 
                                             
                                                
                                                   R
                                                   :
                                                   =
                                                   R
                                                   ∪
                                                   x
                                                
                                             
                                          
                                       
                                       
                                          
                                             13: end while
                                          
                                       
                                       
                                          
                                             14: end procedure
                                          
                                       
                                    
                                 
                              
                           The proposed method, shown above, picks the first representative at random from the dataset and adds it to the set of representatives R. This point 
                              
                                 
                                    
                                       r
                                    
                                    
                                       1
                                    
                                 
                              
                            determines a probability distribution for each other point 
                              
                                 
                                    
                                       r
                                    
                                    
                                       i
                                    
                                 
                              
                            in the dataset: the bigger the distance from 
                              
                                 
                                    
                                       r
                                    
                                    
                                       1
                                    
                                 
                              
                            to 
                              
                                 
                                    
                                       r
                                    
                                    
                                       i
                                    
                                 
                              
                            the higher the chance of 
                              
                                 
                                    
                                       r
                                    
                                    
                                       i
                                    
                                 
                              
                            being picked as the next representative. Using the distance 
                              
                                 
                                    
                                       d
                                    
                                    
                                       p
                                    
                                 
                              
                            (where 
                              
                                 
                                    
                                       d
                                    
                                    
                                       p
                                    
                                 
                                 (
                                 x
                                 ,
                                 R
                                 )
                              
                            denotes the distance (raised to power p) from a point 
                              
                                 x
                                 ∈
                                 X
                              
                            to its closest representative in 
                              
                                 R
                              
                           ) allows for controlling the spreading factor of the algorithm through the parameter p. A small value for p will pick points closer together while a larger p will pick points that are further away as initial points. In the extreme case of p
                           =0, each point will have a random chance of being picked next and the method is similar to random initialization. Conversely, if we choose a p that is very large, we would likely pick outliers as starting points. A tradeoff has to be made and the next section considers ways to choose p depending on the data. The set R is updated in this way until k representatives are chosen.

On the assumption that a good clustering is well spread out in the data space, Arthur et al. (2007) have shown theoretically that the method for K-means and p
                           =2, not only achieves 
                              
                                 O
                                 (
                                 log
                                 
                                 k
                                 )
                              
                            approximation of the optimal cost but, by placing the representatives further away from each other at the beginning, the algorithm converges in fewer iterations. After initialization with either of the two investigated algorithms, the cost function can only decrease monotonically as Steps 4–5 are repeatedly recomputed until convergence, thus the proof focuses on showing that the performance after initialization is O (log k) competitive:
                              
                                 
                                    E
                                    [
                                    θ
                                    (
                                    C
                                    )
                                    ]
                                    ⩽
                                    8
                                    (
                                    ln
                                    k
                                    +
                                    2
                                    )
                                    
                                       
                                          θ
                                       
                                       
                                          OPT
                                       
                                    
                                 
                              
                           Here we present a brief sketch of the their proof which shows that the expected cost when using this scheme is logarithmically bounded (for more details see Arthur et al. (2007)). Firstly, picking point 
                              
                                 
                                    
                                       a
                                    
                                    
                                       0
                                    
                                 
                              
                            at random (Step 9) from the first cluster A, A 
                           ∈
                           COPT
                            (where 
                              
                                 
                                    
                                       C
                                    
                                    
                                       OPT
                                    
                                 
                              
                            denotes the optimal clustering) incurs an expected cost of:
                              
                                 
                                    E
                                    [
                                    θ
                                    (
                                    A
                                    )
                                    ]
                                    =
                                    
                                       
                                          
                                             ∑
                                          
                                          
                                             
                                                
                                                   a
                                                
                                                
                                                   0
                                                   ∈
                                                   A
                                                
                                             
                                          
                                       
                                    
                                    
                                       
                                          1
                                       
                                       
                                          |
                                          A
                                          |
                                       
                                    
                                    
                                       
                                          
                                             ∑
                                          
                                          
                                             a
                                             ∈
                                             A
                                          
                                       
                                    
                                    ‖
                                    a
                                    -
                                    
                                       
                                          a
                                       
                                       
                                          0
                                       
                                    
                                    
                                       
                                          ‖
                                       
                                       
                                          2
                                       
                                    
                                    =
                                    2
                                    
                                       
                                          
                                             ∑
                                          
                                          
                                             a
                                             ∈
                                             A
                                          
                                       
                                    
                                    ‖
                                    a
                                    -
                                    mean
                                    (
                                    A
                                    )
                                    
                                       
                                          ‖
                                       
                                       
                                          2
                                       
                                    
                                    =
                                    2
                                    
                                       
                                          θ
                                       
                                       
                                          OPT
                                       
                                    
                                    (
                                    A
                                    )
                                 
                              
                           where (
                              
                                 |
                                 A
                                 |
                              
                            is the cardinality of set A, mean(A) is the mean of the data points in A, 
                              
                                 θ
                              
                            is the cost incurred by picking a random point 
                              
                                 a
                              
                            as the center of A). Moving to other clusters and selecting 
                              
                                 
                                    
                                       b
                                    
                                    
                                       0
                                    
                                 
                              
                            from B using the proposed scheme, we have:
                              
                                 (2)
                                 
                                    E
                                    [
                                    θ
                                    (
                                    B
                                    )
                                    ]
                                    =
                                    
                                       
                                          ∑
                                       
                                       
                                          
                                             
                                                b
                                             
                                             
                                                0
                                                ∈
                                                B
                                             
                                          
                                       
                                    
                                    
                                       
                                          
                                             
                                                D
                                             
                                             
                                                2
                                             
                                          
                                          (
                                          
                                             
                                                b
                                             
                                             
                                                0
                                             
                                          
                                          )
                                       
                                       
                                          
                                             
                                                ∑
                                             
                                             
                                                b
                                                ∈
                                                B
                                             
                                          
                                          
                                             
                                                D
                                             
                                             
                                                2
                                             
                                          
                                          (
                                          b
                                          )
                                       
                                    
                                    
                                       
                                          ∑
                                       
                                       
                                          b
                                          ∈
                                          B
                                       
                                    
                                    min
                                    
                                       
                                          (
                                          D
                                          (
                                          b
                                          )
                                          ,
                                          
                                          |
                                          |
                                          b
                                          -
                                          
                                             
                                                b
                                             
                                             
                                                0
                                             
                                          
                                          |
                                          |
                                          )
                                       
                                       
                                          2
                                       
                                    
                                 
                              
                           and by triangle inequality:
                              
                                 
                                    D
                                    (
                                    
                                       
                                          b
                                       
                                       
                                          0
                                       
                                    
                                    )
                                    ⩽
                                    D
                                    (
                                    b
                                    )
                                    +
                                    |
                                    |
                                    b
                                    -
                                    
                                       
                                          b
                                       
                                       
                                          0
                                       
                                    
                                    |
                                    |
                                 
                              
                           which by using the power mean inequality for 
                              
                                 ∀
                              
                            
                           b becomes:
                              
                                 
                                    
                                       
                                          D
                                       
                                       
                                          2
                                       
                                    
                                    (
                                    
                                       
                                          b
                                       
                                       
                                          0
                                       
                                    
                                    )
                                    ⩽
                                    2
                                    
                                       
                                          D
                                       
                                       
                                          2
                                       
                                    
                                    (
                                    b
                                    )
                                    +
                                    2
                                    |
                                    |
                                    b
                                    -
                                    
                                       
                                          b
                                       
                                       
                                          0
                                       
                                    
                                    |
                                    
                                       
                                          |
                                       
                                       
                                          2
                                       
                                    
                                 
                              
                           averaging 
                              
                                 ∀
                                 b
                                 ∈
                                 B
                              
                            we get:


                           
                              
                                 (3)
                                 
                                    
                                       
                                          D
                                       
                                       
                                          2
                                       
                                    
                                    (
                                    
                                       
                                          b
                                       
                                       
                                          0
                                       
                                    
                                    )
                                    ⩽
                                    
                                       
                                          2
                                       
                                       
                                          |
                                          B
                                          |
                                       
                                    
                                    
                                       
                                          ∑
                                       
                                       
                                          b
                                          ∈
                                          B
                                       
                                    
                                    
                                       
                                          D
                                       
                                       
                                          2
                                       
                                    
                                    (
                                    b
                                    )
                                    +
                                    
                                       
                                          2
                                       
                                       
                                          |
                                          B
                                          |
                                       
                                    
                                    
                                       
                                          ∑
                                       
                                       
                                          b
                                          ∈
                                          B
                                       
                                    
                                    
                                       
                                          |
                                          |
                                          b
                                          -
                                          
                                             
                                                b
                                             
                                             
                                                0
                                             
                                          
                                          |
                                          |
                                       
                                       
                                          2
                                       
                                    
                                 
                              
                           Using induction it can be shown that, in general, the expected cost of the clustering discovered by the proposed method is logarithmically bounded:
                              
                                 (4)
                                 
                                    E
                                    [
                                    θ
                                    (
                                    C
                                    )
                                    ]
                                    ⩽
                                    8
                                    (
                                    ln
                                    k
                                    +
                                    2
                                    )
                                    
                                       
                                          θ
                                       
                                       
                                          OPT
                                       
                                    
                                    (
                                    C
                                    )
                                 
                              
                           
                        

@&#EVALUATION@&#

This section considers ways in which clusters can be distributed and evaluates the performance of both the proposed scheme and the standard version of Fuzzy C-means in terms of speed (the number of iterations to convergence), final cost function value and appropriateness of data partitions using the Xie–Beni validity index on real datasets. Because of the stochastic nature of Fuzzy C-means (which randomly initializes the membership partition and centers) and the Fuzzy C-means++ method (which picks the first point at random from the data set and the others further away in a probabilistic manner), each test has been run ten times and the averages computed for the number of iterations, Xie–Beni function value and final cost function value. Although several validity indexes have been proposed in the literature (such as Gath and Geva (1989), Fukuyama and Sugeno (1989), etc.) the Xie–Beni (Xie & Beni, 1991) is used here as it has been shown to be superior and reliable (Pal & Bezdek, 1995) being defined as:
                        
                           (5)
                           
                              XB
                              =
                              
                                 
                                    
                                       
                                          ∑
                                       
                                       
                                          i
                                          =
                                          1
                                       
                                       
                                          N
                                       
                                    
                                    
                                       
                                          ∑
                                       
                                       
                                          j
                                          =
                                          1
                                       
                                       
                                          K
                                       
                                    
                                    
                                       
                                          μ
                                       
                                       
                                          ij
                                       
                                       
                                          m
                                       
                                    
                                    |
                                    
                                       
                                          x
                                       
                                       
                                          i
                                       
                                    
                                    -
                                    
                                       
                                          r
                                       
                                       
                                          j
                                       
                                    
                                    
                                       
                                          |
                                       
                                       
                                          2
                                       
                                    
                                 
                                 
                                    N
                                    
                                       
                                          
                                             min
                                          
                                          
                                             i
                                             ≠
                                             j
                                          
                                       
                                    
                                    |
                                    
                                       
                                          r
                                       
                                       
                                          i
                                       
                                    
                                    -
                                    
                                       
                                          r
                                       
                                       
                                          j
                                       
                                    
                                    
                                       
                                          |
                                       
                                       
                                          2
                                       
                                    
                                 
                              
                           
                        
                     In (4) the numerator is the Fuzzy C-means cost function 
                        
                           
                              
                                 J
                              
                              
                                 m
                              
                           
                        
                      and represents the tightness of the discovered clusters (the higher the value, the more cohesive are the clusters). The denominator captures the spread in the clusters by computing the minimum distance between two neighboring clusters (the higher the value, the better).

The performance of Fuzzy C-means++ has been investigated on four artificially generated and three real world datasets. The artificial datasets consists of five globular clusters (in two dimensions) that fall into four possible categories: clusters of equal size with no overlap, clusters of different sizes with no overlap, clusters of equal size and overlap and clusters of different sizes with overlap (Figs. 1, 3, 5 and 7) below.

In Fig. 1 we observe the outcomes of initializing the centers using the standard method. This method is allowed to choose freely k centers at random from the dataset supplied as input. These centers, marked in red, are often picked from the same clusters and hence have to travel many steps to their final position (magenta). For this type of data, a power p
                     =0.5 for Fuzzy C-means++ generates initial cluster centers (yellow triangles) similar to the default method. In fact, looking at Fig. 2 above we notice that in the range p
                     ∈[0.1, to 1.3], the Fuzzy C-means++ method produces very volatile results in terms of iterations with little improvement over the standard.

Progressing toward higher powers (p
                     ⩾1.3) more importance is placed on picking further away centers and the algorithm achieves convergence in 3 steps as opposed to 9 required by the standard approach. For equal clusters with some overlap (Fig. 3) we observe that the standard method needs 41.7 iterations to converge (Fig 4), fewer (with some exceptions) than Fuzzy C-means++ with powers in p
                     ∈[0.1,1]. Fuzzy C-means++ with powers p
                     ⩾1 achieve less volatile results and perform much better than the standard approach (19.6 iterations on average).

As clusters become different in size, the performance of Fuzzy C-means over the whole range begins to degrade (Figs. 5 and 6), yet still performs better than the standard approach (it needs on average 44.8 iteration as compared to the standard which needs 65.8).

Fuzzy C-means++, on average, performs better than the standard approach on unequal and overlapping clusters, needing on average 86.8 iterations on the whole range of powers although the volatility is present over the whole range with some powers p performing worse than the standard which needs on average 111 iterations.

Three real world datasets from the UCI Machine Learning Repository (Asuncion & Newman, 2007) are considered: IRIS, SPAM and WINE. For the Fuzzy C-means++ algorithm we pick a power p
                     =1.8, a value proved to achieve best performance on all the artificial cases considered above: it does not spread the centers too far (which could result in outliers being selected) and it does not chose them too close (which would result in performance similar to the standard approach) (see Fig. 8
                     ).

The Iris dataset consists of 150 instances belonging to one of three classes each referring to a particular type of Iris plant: setosa, versicolor or virginica. The data, being multidimensional, cannot be viewed directly. By projecting it to the first two principal components (Fig. 9
                     ) we notice the existence of two overlapped clouds of points. These two types of clouds belonging to iris versicolor and virginica are harder to distinguish. More information can be obtained by looking at the variable correlations in Fig. 10
                     .

With the exceptions of k
                     =8 and k
                     =10, Fuzzy C-means++ outperforms the standard. Moreover, in general, Fuzzy C-means++ achieves both a lower cost function value and a lower Xie Beni index, indicating better clusters (Table 1
                     ). For the real case k
                     =3, FCM++ needs on average 7.3 iterations less than the standard approach. For this case, the two algorithms converge at the same points, having the same cost function value and Xie Beni (see Table 1).

The SPAM dataset (4601 instances) contains attributes describing the characteristics of two categories of emails (solicited and unsolicited) where the features (56 continuous real-valued) describe frequencies of certain words, capital letters run length, etc.

The PCA projection of the SPAM dataset (Fig. 11
                     ) on the first two principal components reveals an overlapping cloud of points. Analysis reveals that most of the variables are either positively correlated with the first or the second component (Fig. 12
                     ). Across the range of ks, the Fuzzy C-means++ algorithm with a power p
                     =1.8 outperforms the standard approach in some cases by a large factor (needing on average only 84.5 iterations compared with Fuzzy C-means which needs 217.9 for k
                     =10) (Table 2
                     ). With the exception of k
                     =3, Fuzzy C-means++ achieves lower cost functions values at convergence. The Xie Beni index indicating cluster quality is lower (better) for Fuzzy C-means++ across the whole range of ks.

The WINE dataset consists of 178 instances and 13 attributes (integer and real) resulting from chemical analysis of wines derived from three types of cultivars. PCA analysis shows three clouds of points with small degree of overlap. The attributes have small correlations between themselves (Fig. 14
                     
                     ) and two of the clusters have an overlap (Fig. 13). Table 3
                      shows a significant reduction in the number of iterations until Fuzzy C-means++ converges on this dataset. In general we also see smaller Xie–Beni index and cost function values for the Fuzzy C-means++.

@&#CONCLUSION@&#

This paper has investigated empirically the effectiveness of introducing the K-means++ initialization scheme into the context of Fuzzy C-means. We have presented case studies on artificial data sets that cover a wide range of possibilities and discussed how the performance is affected by data size, overlap and the choice of spreading factor parameter p of the proposed algorithm.

On real world data sets, the algorithm produced encouraging results in terms of both the number of iterations needed to reach convergence and the final cluster quality. On each dataset tested, the Fuzzy C-means++ algorithm achieved fewer iterations (particularly where k
                     =the real number of clusters) with similar if not significantly better Xie–Beni values suggesting overall higher quality clusters.

The most impressive results were obtained on the artificially generated medium overlap and equal sized clusters, where Fuzzy C-means++ was on average 2.1 times faster than the standard (40 times the standard for some particular p parameter values). On real world datasets we have seen improvements over the standard ranging from dataset 1.12 on the SPAM dataset up to 1.44 on IRIS, when the k parameter equals true number of clusters in the dataset. We also observe improvements in terms of iterations count on the whole range of k values.

A limitation of the proposed method is the choice of p parameter representing the spreading factor. A choice of p
                     =1.8 was a good candidate based on the algorithm results on a range of overlapping/non-overlapping, equal/non-equal synthetic datasets. Automatic parameter tuning based on data set properties may allow for even better clustering results and will be the subject of future work. Other future work will parallelize the initialization phase proposed here in combination with the standard part of the algorithm. The parallelized method should enable faster clustering of volatile high dimensional datasets with thousands of instances. We also plan to investigate the problem of finding specialized similarity measures for fuzzy clustering of data in high dimensional spaces.

@&#ACKNOWLEDGMENT@&#

Stetco acknowledges the support of an EPSRC doctoral training grant; Keane acknowledges an IBM Faculty Award.

@&#REFERENCES@&#

