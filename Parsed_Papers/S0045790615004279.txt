@&#MAIN-TITLE@&#Hybrid local prediction error-based difference expansion reversible watermarking for medical images

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           A hybrid local prediction-error based difference expansion reversible watermarking algorithm for hiding data into medical images is presented.


                        
                        
                           
                           The performance of hybrid local algorithm with median, median edge, gradient adjusted and local prediction algorithms is compared.


                        
                        
                           
                           The hybrid local prediction algorithm has the highest frequency of zero prediction error.


                        
                        
                           
                           The PSNR and embedding capacity are improved in the hybrid local algorithm.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Reversible watermarking

Prediction error expansion

Median edge detection

Gradient adjusted prediction

Least square prediction

@&#ABSTRACT@&#


               Graphical abstract
               
                  
                     
                        
                           Image, graphical abstract
                           
                        
                     
                  
               
            

@&#INTRODUCTION@&#

In sensitive applications, such as military and health care information management systems, the reversible watermarking (RW) technique is responsible for protecting the image and the content. The watermark should be overlaid in the cover media in such a way that it cannot be destroyed [1]. The RW extracts both the embedded data and the cover media without any distortion. The RW provides both authentication and tamper proofing. High embedding capacity and low distortion are the basic requirements of RW. Generally used RW algorithms are lossless compression, histogram shifting, integer transform, and difference expansion [2]. Celik et al. [3] presented a lossless data-embedding technique, where the least significant bits (LSBs) are modified to avoid artifacts. As a result, additional operating points are introduced in the capacity–distortion curve. The compressed portions of the cover media that are influenced by embedding distortion are transmitted as a part of the embedded payload to restore the original image. Low bits per pixel (bpp) and poor stego image quality limits the efficiency of the lossless compression RW approach. Histogram shifting-based RW is more efficient; however, it requires a location map for retrieving the cover media. The pixels that cannot be embedded are identified by the location map. Histogram bins are created, and data are embedded either left or right into the bin. Li et al. [4] proposed a histogram shifting-based RW by modifying the shifting and embedding functions. The cover image is split into non-overlapping blocks containing ‘n’ pixels and a histogram is computed for each block by counting the frequency of the ‘n’ pixels in each block. Data are embedded by modifying the ‘n’-dimensional histogram. To yield the optimal data hiding result, recursive looking-ahead estimation of the maximum data hiding capacity at the lowest level of the block-division tree structure is used [5]. Alatter [6] introduced a reversible integer transform-based RW with low image distortion. The spatial quad-based data embedding exhibits better performance than Celik's algorithm.

Tian [7] introduced RW using difference expansion (DE) by expanding two times the difference between adjacent pairs of pixels. If no overflow or underflow occurs, then one bit of data is added to the expanded difference. The location map is used to identify the embedded pixels with one bit for each pair of pixels. The location map is lossless compressed and embedded into the image. Upon detection, the embedded bits are immediately recovered from the LSBs of the pixel differences. The redundancy in the digital images is utilized to achieve higher embedding capacity and low distortion. Continuous efforts are made to improve the quality of DE algorithms. The location map is replaced by a histogram shifting procedure to identify the embedded pixels. This method outperforms DE with a location map by reducing the distortion and increasing the embedding capacity. The embedding distortion is reduced by replacing the pixel difference with prediction error [8]. In the prediction error-based DE method, the secret data are embedded into the pixel using the prediction error. The original pixels are predicted using any predictor with any context, and prediction error is calculated between the original and predicted pixels.

Fallahpour [9] proposed RW using prediction error-based on gradient adjusted prediction (GAP). The prediction errors are computed and slightly modified by shifting the prediction errors for embedding the data. Sachnev et al. [10] presented a lossless watermarking algorithm using a rhombus prediction scheme to embed data into an image. The prediction errors are sorted based on the magnitude of local variance to reduce the size of the location map. Hence, the embedding capacity is increased with low distortion. Li et al. [11] augmented the global prediction error DE-based RW with adaptive embedding and pixel selection. The rough and smooth regions are identified, and one and two bits, respectively are embedded into the regions. This method prevents the expansion of pixels where the prediction error is large and provides a high embedding rate. From the image analysis, it can be seen that image statistics change from region to region. Hence, local prediction will be better when compared to global prediction. Dragoi et al. [12] investigated the local prediction-based RW. Here, the image is divided into BxB blocks and prediction is performed for each block. The prediction is better with smaller blocks. Each pixel of every block is computed using a distinct least square linear predictor with the help of a square block centered on the pixel. The prediction error is expanded to hide the data into the pixel. The same predictor that is embedded in the marked image restores the pixel at detection without any additional information. Thus, the embedding capacity is reduced with the number of predictors. This local predictor shows good results regardless of the predictor order or the prediction context. Khan et al. [13] analyzed the performance of several RW techniques through capacity, imperceptibility, and computational cost. The prediction error DE-based RW techniques are effective, and easy to implement compared to other RW schemes.

In this paper, the hybrid local prediction method based on both the local least square prediction and median edge prediction is used for predicting the pixels. Next, the secret data are embedded using DE embedding. The embedding capacity and stego image quality are calculated for various medical images, and the performances are compared with those of the general MED, Median and GAP prediction methods. The hybrid local prediction method achieves good stego image quality with good embedding capacity compared with the other prediction methods. The block diagram for the basic RW scheme is shown in Fig. 1
                     . This paper is organized as follows. In Section 2, the prediction error-based DE RW is discussed. The hybrid local prediction error-based DE RW is discussed in Section 3. Experimental results and analysis with other prediction schemes are presented in Section 4. Finally, the conclusion is presented in Section 5.

The general procedure in RW is to identify an embedding location in a cover image to embed the data and to recover the cover image without any distortion. Thus, the data to be embedded are smaller than the embedding area. Most watermarking techniques use lossless compression to compress the original value and save space for embedding the payload. The DE technique eliminates the need for lossless compression on the original values. The DE methods are based on local similarity between the pixels in the images. This method exploits the redundancy in the image and improves the hiding capacity, thereby increasing the storage space. The distortion introduced is low when compared to other RW techniques.

In Lee's method [14], two columns of pixel values are grouped to form a pixel pair that is used to create a difference image for data hiding. Data embedding and extraction and restoring the cover image occur in a single direction. The stego image is created based on the pixel values of the difference image. The embedded data are extracted from the pixel values of the marked image and the original cover image is restored from the marked values of the difference image. A two-dimensional difference histogram-based RW was proposed by Li et al. [15]. In pixel pair mapping (PPM), two columns of pixel values are grouped along both the forward and backward directions to create redundant space for embedding the data. The difference image and data embedding occur along both the forward and backward directions. In prediction-based RW, the cover image pixels are predicted using a prediction technique from the neighboring pixels [16–20]. Those neighboring pixels that are used for prediction are referred to as the prediction context. Next, the prediction error is calculated between the cover image pixels and the predicted pixels. The watermark bit is embedded into the cover image pixels based on the prediction error and DE method. The embedding and extraction block diagram for prediction-based DE-RW is shown in Fig. 2.
                     
                  

Let x
                     
                        i, j
                      be the pixel of the cover image, and let its predicted values be 
                        
                           
                              x
                              ^
                           
                           
                              i
                              ,
                              j
                           
                        
                     . The prediction error is calculated using Eq. (1).

                        
                           (1)
                           
                              
                                 
                                    e
                                    
                                       i
                                       ,
                                       j
                                    
                                 
                                 =
                                 
                                    x
                                    
                                       i
                                       ,
                                       j
                                    
                                 
                                 −
                                 
                                    
                                       x
                                       ^
                                    
                                    
                                       i
                                       ,
                                       j
                                    
                                 
                              
                           
                        
                     
                  

Choose the threshold (T > 0) to control the distortion introduced by the watermark. The threshold can be varied from 1 to 255, depending on the required embedding rate. The threshold is directly proportional to the distortion introduced and inversely proportional to the watermarked image quality. To satisfy the requirement of RW of low distortion, the threshold is limited to 10. If the prediction error is less than the threshold (no overflow or underflow occurs), then the bit of a data b is embedded using Eq. (2) and the pixel is transformed.

                        
                           (2)
                           
                              
                                 
                                    
                                       x
                                       ¯
                                    
                                    
                                       i
                                       ,
                                       j
                                    
                                 
                                 =
                                 
                                    x
                                    
                                       i
                                       ,
                                       j
                                    
                                 
                                 +
                                 
                                    e
                                    
                                       i
                                       ,
                                       j
                                    
                                 
                                 +
                                 b
                                 ,
                                 
                                 if
                                 
                                 
                                    e
                                    
                                       i
                                       ,
                                       j
                                    
                                 
                                 <
                                 
                                 T
                              
                           
                        
                     
                  

If |e
                     
                        i, j
                     | ≥ T, then the pixels cannot be embedded; however, these pixels are shifted using Eq. (3) to provide a greater prediction error than the embedded one at the detection side.

                        
                           (3)
                           
                              
                                 
                                    
                                       x
                                       ¯
                                    
                                    
                                       i
                                       ,
                                       j
                                    
                                 
                                 =
                                 
                                    {
                                    
                                       
                                          
                                             
                                                
                                                   x
                                                   
                                                      i
                                                      ,
                                                      j
                                                   
                                                
                                                +
                                                T
                                             
                                          
                                          
                                             if
                                          
                                          
                                             
                                                
                                                   e
                                                   
                                                      i
                                                      ,
                                                      j
                                                   
                                                
                                                ≥
                                                T
                                             
                                          
                                       
                                       
                                          
                                             
                                                
                                                   x
                                                   
                                                      i
                                                      ,
                                                      j
                                                   
                                                
                                                −
                                                
                                                   (
                                                   T
                                                   −
                                                   1
                                                   )
                                                
                                             
                                          
                                          
                                             if
                                          
                                          
                                             
                                                
                                                   e
                                                   
                                                      i
                                                      ,
                                                      j
                                                   
                                                
                                                <
                                                −
                                                T
                                             
                                          
                                       
                                    
                                 
                              
                           
                        
                     
                  

The predicted image and the threshold are carried as side information to the receiver along with the watermarked image. The overflow and underflow problems are solved by using flag bits. At the detection stage, if the same predicted value for the pixel x
                     
                        i, j
                      is available, then the prediction error is calculated using Eq. (4).

                        
                           (4)
                           
                              
                                 
                                    
                                       e
                                       ¯
                                    
                                    
                                       i
                                       ,
                                       j
                                    
                                 
                                 =
                                 
                                    
                                       x
                                       ¯
                                    
                                    
                                       i
                                       ,
                                       j
                                    
                                 
                                 −
                                 
                                    
                                       x
                                       ^
                                    
                                    
                                       i
                                       ,
                                       j
                                    
                                 
                              
                           
                        
                     
                  

The embedded and transformed pixels are differentiated using the prediction error. If 
                        
                           −
                           2
                           T
                           ≤
                           
                              
                                 e
                                 ¯
                              
                              
                                 i
                                 ,
                                 j
                              
                           
                           ≤
                           
                              (
                              2
                              T
                              +
                              1
                              )
                           
                        
                     , then it is an embedded pixel, and the receiver side prediction error is calculated using Eq. (5).

                        
                           (5)
                           
                              
                                 
                                    
                                       e
                                       ¯
                                    
                                    
                                       i
                                       ,
                                       j
                                    
                                 
                                 =
                                 2
                                 
                                    e
                                    
                                       i
                                       ,
                                       j
                                    
                                 
                                 +
                                 b
                              
                           
                        
                     where b is the LSB of 
                        
                           
                              e
                              ¯
                           
                           
                              i
                              ,
                              j
                           
                        
                     .

The original pixel is recovered from the embedded and the predicted pixels using Eq. (6).

                        
                           (6)
                           
                              
                                 x
                                 =
                                 
                                    
                                       
                                          
                                             x
                                             ¯
                                          
                                          
                                             i
                                             ,
                                             j
                                          
                                       
                                       +
                                       
                                          
                                             x
                                             ^
                                          
                                          
                                             i
                                             ,
                                             j
                                          
                                       
                                       −
                                       b
                                    
                                    2
                                 
                              
                           
                        
                     
                  

For the transformed pixels, the original pixel is recovered using Eq. (7).

                        
                           (7)
                           
                              
                                 
                                    x
                                    
                                       i
                                       ,
                                       j
                                    
                                 
                                 =
                                 
                                    {
                                    
                                       
                                          
                                             
                                                
                                                   
                                                      x
                                                      ¯
                                                   
                                                   
                                                      i
                                                      ,
                                                      j
                                                   
                                                
                                                −
                                                T
                                             
                                          
                                          
                                             if
                                          
                                          
                                             
                                                
                                                   
                                                      e
                                                      ¯
                                                   
                                                   
                                                      i
                                                      ,
                                                      j
                                                   
                                                
                                                >
                                                2
                                                T
                                                +
                                                1
                                             
                                          
                                       
                                       
                                          
                                             
                                                
                                                   
                                                      x
                                                      ¯
                                                   
                                                   
                                                      i
                                                      ,
                                                      j
                                                   
                                                
                                                +
                                                
                                                   (
                                                   T
                                                   −
                                                   1
                                                   )
                                                
                                             
                                          
                                          
                                             if
                                          
                                          
                                             
                                                
                                                   
                                                      e
                                                      ¯
                                                   
                                                   
                                                      i
                                                      ,
                                                      j
                                                   
                                                
                                                <
                                                −
                                                2
                                                T
                                             
                                          
                                       
                                    
                                 
                              
                           
                        
                     
                  

Because the same predicted value is used at detection, the reversibility of the watermarking scheme is ensured.

Every pixel in an image can be predicted using its neighboring pixels. The two main terms involved in the prediction are the prediction context and the order of the predictor. The prediction context refers to the neighboring pixels used to predict the pixels. The different prediction methods are MED, median, GAP and local least square prediction.

The median-based prediction uses four neighbors to predict a pixel and is given in Eq. (8). The prediction context is given in Fig. 3(
                        a).

                           
                              (8)
                              
                                 
                                    
                                       x
                                       ^
                                    
                                    
                                    =
                                    
                                    median
                                    
                                    
                                       (
                                       
                                          x
                                          
                                             i
                                             −
                                             1
                                             ,
                                             j
                                          
                                       
                                       ,
                                       
                                       
                                          x
                                          
                                             i
                                             ,
                                             j
                                             −
                                             1
                                          
                                       
                                       ,
                                       
                                       
                                          x
                                          
                                             i
                                             ,
                                             j
                                             +
                                             1
                                          
                                       
                                       ,
                                       
                                       
                                          x
                                          
                                             i
                                             +
                                             1
                                             ,
                                             j
                                          
                                       
                                       
                                       )
                                    
                                 
                              
                           
                        
                     

MED applies the edge rule to predict the current pixel by using raster scan order [12]. The prediction context is given in Fig. 3(b), where x
                        
                           i, j
                        is the pixel to be predicted and 
                           
                              
                                 x
                                 
                                    i
                                    ,
                                    j
                                    −
                                    1
                                 
                              
                              
                              ,
                              
                                 x
                                 
                                    i
                                    −
                                    1
                                    ,
                                    j
                                 
                              
                              
                              ,
                              
                                 x
                                 
                                    i
                                    −
                                    1
                                    ,
                                    j
                                    −
                                    1
                                 
                              
                           
                        are three causal pixels used for prediction. The predictor tends to select the lower vertical neighbor in cases where a vertical edge exists right to the current location, the right neighbor in cases of a horizontal edge is below it, or a linear combination of the context pixels if no edge is detected. The predictor selects the pixels according to the following condition:

                           
                              1.
                              
                                 
                                    
                                       x
                                       
                                          i
                                          −
                                          1
                                          ,
                                          j
                                       
                                    
                                  in cases where a vertical edge exists to the left of the x
                                 
                                    i, j
                                 
                              


                                 
                                    
                                       x
                                       
                                          i
                                          ,
                                          j
                                          −
                                          1
                                       
                                    
                                  in cases of an horizontal edge above x
                                 
                                    i, j
                                 
                              


                                 
                                    
                                       
                                          x
                                          
                                             i
                                             ,
                                             j
                                             −
                                             1
                                          
                                       
                                       
                                       +
                                       
                                          x
                                          
                                             i
                                             −
                                             1
                                             ,
                                             j
                                          
                                       
                                       
                                       −
                                       
                                          x
                                          
                                             i
                                             −
                                             1
                                             ,
                                             j
                                             −
                                             1
                                          
                                       
                                    
                                  if no edge is detected.
                                    
                                       (9)
                                       
                                          
                                             
                                                
                                                   x
                                                   ^
                                                
                                                
                                                   i
                                                   ,
                                                   j
                                                
                                             
                                             
                                             =
                                             
                                             
                                                {
                                                
                                                   
                                                      
                                                         
                                                            min
                                                            
                                                            (
                                                            
                                                               x
                                                               
                                                                  i
                                                                  ,
                                                                  j
                                                                  −
                                                                  1
                                                               
                                                            
                                                            ,
                                                            
                                                            
                                                               x
                                                               
                                                                  i
                                                                  −
                                                                  1
                                                                  ,
                                                                  j
                                                               
                                                            
                                                            )
                                                         
                                                      
                                                      
                                                         if
                                                      
                                                      
                                                         
                                                            
                                                               x
                                                               
                                                                  i
                                                                  −
                                                                  1
                                                                  ,
                                                                  j
                                                                  −
                                                                  1
                                                               
                                                            
                                                            
                                                            ≥
                                                            
                                                            max
                                                            
                                                               (
                                                               
                                                                  x
                                                                  
                                                                     i
                                                                     ,
                                                                     j
                                                                     −
                                                                     1
                                                                  
                                                               
                                                               ,
                                                               
                                                               
                                                                  x
                                                                  
                                                                     i
                                                                     −
                                                                     1
                                                                     ,
                                                                     j
                                                                  
                                                               
                                                               )
                                                            
                                                         
                                                      
                                                   
                                                   
                                                      
                                                         
                                                            max
                                                            
                                                            (
                                                            
                                                               x
                                                               
                                                                  i
                                                                  ,
                                                                  j
                                                                  −
                                                                  1
                                                               
                                                            
                                                            ,
                                                            
                                                            
                                                               x
                                                               
                                                                  i
                                                                  −
                                                                  1
                                                                  ,
                                                                  j
                                                               
                                                            
                                                            )
                                                         
                                                      
                                                      
                                                         if
                                                      
                                                      
                                                         
                                                            
                                                               x
                                                               
                                                                  i
                                                                  −
                                                                  1
                                                                  ,
                                                                  j
                                                                  −
                                                                  1
                                                               
                                                            
                                                            
                                                            ≥
                                                            
                                                            min
                                                            
                                                               (
                                                               
                                                                  x
                                                                  
                                                                     i
                                                                     ,
                                                                     j
                                                                     −
                                                                     1
                                                                  
                                                               
                                                               ,
                                                               
                                                               
                                                                  x
                                                                  
                                                                     i
                                                                     −
                                                                     1
                                                                     ,
                                                                     j
                                                                  
                                                               
                                                               )
                                                            
                                                         
                                                      
                                                   
                                                   
                                                      
                                                         
                                                            
                                                               x
                                                               
                                                                  i
                                                                  ,
                                                                  j
                                                                  −
                                                                  1
                                                               
                                                            
                                                            
                                                            +
                                                            
                                                               x
                                                               
                                                                  i
                                                                  −
                                                                  1
                                                                  ,
                                                                  j
                                                               
                                                            
                                                            
                                                            −
                                                            
                                                               x
                                                               
                                                                  i
                                                                  −
                                                                  1
                                                                  ,
                                                                  j
                                                                  −
                                                                  1
                                                               
                                                            
                                                         
                                                      
                                                      
                                                         if
                                                      
                                                      
                                                         otherwise
                                                      
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                              

The GAP estimator takes seven causal pixels as a context for prediction and weights them based on the estimated local gradients of the cover image [12]. Hence, GAP is more robust than other linear prediction methods, especially in strong edge areas. The coefficients of GAP are adjusted adaptively with respect to the local gradient of the predicted pixel. To compute the prediction value of 
                           
                              x
                              
                                 i
                                 ,
                                 j
                                 +
                                 1
                              
                           
                        , GAP is used for an accurate estimation in the adaptive embedding technique. The context for GAP is given in Fig. 3(c). For each pixel
                           
                              x
                              
                                 i
                                 ,
                                 j
                                 +
                                 1
                              
                           
                        , the value is computed using the GAP predictor [10], as given in Eq. (10).

                           
                              (10)
                              
                                 
                                    
                                       
                                          x
                                          ^
                                       
                                       
                                          i
                                          ,
                                          j
                                       
                                    
                                    =
                                    
                                       {
                                       
                                          
                                             
                                                
                                                   x
                                                   
                                                      i
                                                      ,
                                                      j
                                                      +
                                                      1
                                                   
                                                
                                             
                                             
                                                if
                                             
                                             
                                                
                                                   80
                                                   <
                                                   d
                                                   v
                                                   −
                                                   d
                                                   h
                                                
                                             
                                          
                                          
                                             
                                                
                                                   (
                                                   
                                                      x
                                                      
                                                         i
                                                         ,
                                                         j
                                                         +
                                                         1
                                                      
                                                   
                                                   +
                                                   u
                                                   )
                                                   /
                                                   2
                                                
                                             
                                             
                                                if
                                             
                                             
                                                
                                                   32
                                                   <
                                                   d
                                                   v
                                                   −
                                                   d
                                                   h
                                                   ≤
                                                   80
                                                
                                             
                                          
                                          
                                             
                                                
                                                   (
                                                   
                                                      x
                                                      
                                                         i
                                                         ,
                                                         j
                                                         +
                                                         1
                                                      
                                                   
                                                   +
                                                   3
                                                   u
                                                   )
                                                   /
                                                   4
                                                
                                             
                                             
                                                if
                                             
                                             
                                                
                                                   8
                                                   <
                                                   d
                                                   v
                                                   −
                                                   d
                                                   h
                                                   ≤
                                                   32
                                                
                                             
                                          
                                          
                                             
                                                u
                                             
                                             
                                                if
                                             
                                             
                                                
                                                   −
                                                   8
                                                   ≤
                                                   d
                                                   v
                                                   −
                                                   d
                                                   h
                                                   ≤
                                                   8
                                                
                                             
                                          
                                          
                                             
                                                
                                                   (
                                                   
                                                      x
                                                      
                                                         i
                                                         +
                                                         1
                                                         ,
                                                         j
                                                         +
                                                         1
                                                      
                                                   
                                                   +
                                                   3
                                                   u
                                                   )
                                                   /
                                                   4
                                                
                                             
                                             
                                                if
                                             
                                             
                                                
                                                   −
                                                   32
                                                   ≤
                                                   d
                                                   v
                                                   −
                                                   d
                                                   h
                                                   <
                                                   −
                                                   8
                                                
                                             
                                          
                                          
                                             
                                                
                                                   (
                                                   
                                                      x
                                                      
                                                         i
                                                         +
                                                         1
                                                         ,
                                                         j
                                                         +
                                                         1
                                                      
                                                   
                                                   +
                                                   u
                                                   )
                                                   /
                                                   2
                                                
                                             
                                             
                                                if
                                             
                                             
                                                
                                                   −
                                                   80
                                                   ≤
                                                   d
                                                   v
                                                   −
                                                   d
                                                   h
                                                   <
                                                   −
                                                   32
                                                
                                             
                                          
                                          
                                             
                                                
                                                   x
                                                   
                                                      i
                                                      +
                                                      1
                                                      ,
                                                      j
                                                      +
                                                      1
                                                   
                                                
                                             
                                             
                                                if
                                             
                                             
                                                
                                                   d
                                                   v
                                                   −
                                                   d
                                                   h
                                                   <
                                                   −
                                                   80
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           
                        where 
                           
                              {
                              
                                 
                                    x
                                    
                                       i
                                       ,
                                       j
                                       +
                                       2
                                    
                                 
                                 ,
                                 …
                                 …
                                 …
                                 …
                                 
                                    x
                                    
                                       i
                                       +
                                       2
                                       ,
                                       j
                                    
                                 
                                 ,
                                 
                                    x
                                    
                                       i
                                       +
                                       2
                                       ,
                                       j
                                       +
                                       1
                                    
                                 
                              
                              }
                           
                         are neighboring pixels of 
                           
                              {
                              
                                 
                                    x
                                    
                                       i
                                       ,
                                       j
                                    
                                 
                                 ,
                                 
                                    x
                                    
                                       i
                                       ,
                                       j
                                       +
                                       1
                                    
                                 
                              
                              }
                           
                        
                     

The vertical gradient is	
                           
                              
                                 d
                                 v
                                 =
                                 |
                              
                              
                                 
                                    x
                                    
                                       i
                                       ,
                                       j
                                       +
                                       2
                                    
                                 
                                 −
                                 
                                    x
                                    
                                       i
                                       +
                                       1
                                       ,
                                       j
                                       +
                                       2
                                    
                                 
                              
                              
                                 |
                                 +
                                 |
                              
                              
                                 
                                    x
                                    
                                       i
                                       +
                                       1
                                       ,
                                       j
                                    
                                 
                                 −
                                 
                                    x
                                    
                                       i
                                       +
                                       2
                                       ,
                                       j
                                    
                                 
                              
                              
                                 |
                                 +
                                 |
                              
                              
                                 
                                    x
                                    
                                       i
                                       +
                                       1
                                       ,
                                       j
                                       +
                                       1
                                    
                                 
                                 −
                                 
                                    x
                                    
                                       i
                                       +
                                       2
                                       ,
                                       j
                                       +
                                       1
                                    
                                 
                              
                              
                                 |
                              
                           
                        
                     

The horizontal gradient is	
                           
                              
                                 d
                                 h
                                 =
                                 |
                              
                              
                                 
                                    x
                                    
                                       i
                                       ,
                                       j
                                       +
                                       2
                                    
                                 
                                 −
                                 
                                    x
                                    
                                       i
                                       ,
                                       j
                                       +
                                       3
                                    
                                 
                              
                              
                                 |
                                 +
                                 |
                              
                              
                                 
                                    x
                                    
                                       i
                                       +
                                       1
                                       ,
                                       j
                                    
                                 
                                 −
                                 
                                    x
                                    
                                       i
                                       +
                                       1
                                       ,
                                       j
                                       +
                                       1
                                    
                                 
                              
                              
                                 |
                                 +
                                 |
                              
                              
                                 
                                    x
                                    
                                       i
                                       +
                                       1
                                       ,
                                       j
                                       +
                                       1
                                    
                                 
                                 −
                                 
                                    x
                                    
                                       i
                                       +
                                       1
                                       ,
                                       j
                                       +
                                       2
                                    
                                 
                              
                              
                                 |
                              
                           
                        
                     

and

                           
                              
                                 
                                    u
                                    =
                                    
                                       
                                          
                                             x
                                             
                                                i
                                                ,
                                                j
                                                +
                                                2
                                             
                                          
                                          +
                                          
                                             x
                                             
                                                i
                                                +
                                                1
                                                ,
                                                j
                                                +
                                                1
                                             
                                          
                                       
                                       2
                                    
                                    +
                                    
                                       
                                          
                                             x
                                             
                                                i
                                                +
                                                1
                                                ,
                                                j
                                             
                                          
                                          −
                                          
                                             x
                                             
                                                i
                                                +
                                                1
                                                ,
                                                j
                                                +
                                                2
                                             
                                          
                                       
                                       4
                                    
                                 
                              
                           
                        
                     

The global prediction technique is applied to the whole image. However, in general, the image characteristics change from region to region. Thus, the global prediction strategy cannot be applied to an image with high variation. The predictor may not have good performances in all regions. As a result, the image is split into blocks and the predictor is applied for each block. The local prediction provides better results compared to the global prediction. The important issue in the local prediction is the size of block. If the size of the block is very small, then the prediction will be better. The limitation of this method is that it requires a distinct predictor for each pixel. During the embedding process, the pixels are modified, and hence, the exact predictor cannot be recovered from the embedded image at the detection. However, these prediction coefficients are required at the detection. This factor limits the size of the block (usually block sizes of 8 × 8, 12 × 12 or 16 × 16 are used). The context for least square is given in Fig. 3(d).

In linear prediction, the pixel xi,j
                         is estimated by the weighted sum of the neighboring pixels. The indexes of the neighborhood pixels are 
                           
                              
                                 x
                                 
                                    i
                                    ,
                                    j
                                 
                                 1
                              
                              ,
                              
                                 x
                                 
                                    i
                                    ,
                                    j
                                 
                                 2
                              
                              ,
                              …
                              ,
                              
                                 x
                                 
                                    i
                                    ,
                                    j
                                 
                                 k
                              
                           
                        , where k is the order of the predictor. Let wbe the column vector with prediction coefficients, and let the prediction context be 
                           
                              p
                              =
                              1
                              ,
                              2
                              ,
                              …
                              ,
                              k
                           
                        .

                           
                              (11)
                              
                                 
                                    w
                                    =
                                    [
                                    
                                       w
                                       1
                                    
                                    ,
                                    
                                       w
                                       2
                                    
                                    ,
                                    …
                                    ,
                                    
                                       w
                                       k
                                    
                                    ]
                                 
                              
                           
                        
                     

Let x be the row vector obtained by ordering the context of x
                        
                           i, j
                         according to indexing from the original cover image, and let X be the matrix whose rows are the corresponding context vectors. The predicted pixel, 
                           
                              
                                 
                                    x
                                    ^
                                 
                                 
                                    i
                                    ,
                                    j
                                 
                              
                              =
                              
                                 ∑
                                 
                                    p
                                    =
                                    1
                                 
                                 k
                              
                              
                                 
                                    w
                                    p
                                 
                                 
                                    x
                                    
                                       i
                                       ,
                                       j
                                    
                                    p
                                 
                              
                           
                        , can be written in the closed form using Eq. (12).

                           
                              (12)
                              
                                 
                                    
                                       x
                                       ^
                                    
                                    =
                                    wX
                                 
                              
                           
                        
                     

The prediction error can be calculated using Eq. (13):

                           
                              (13)
                              
                                 
                                    
                                       e
                                       
                                          i
                                          ,
                                          j
                                       
                                    
                                    =
                                    
                                       x
                                       
                                          i
                                          ,
                                          j
                                       
                                    
                                    −
                                    
                                       
                                          x
                                          ^
                                       
                                       
                                          i
                                          ,
                                          j
                                       
                                    
                                 
                              
                           
                        
                     

The linear predictor coefficients are calculated using the least square method. The least square approach considers the weight that minimizes the sum of the square of the prediction error, i.e.,

                           
                              (14)
                              
                                 
                                    
                                       min
                                       w
                                    
                                    
                                       ∑
                                       i
                                    
                                    
                                       
                                          ∑
                                          j
                                       
                                       
                                          
                                             e
                                             
                                                i
                                                ,
                                                j
                                             
                                             2
                                          
                                          
                                             (
                                             w
                                             )
                                          
                                       
                                    
                                 
                              
                           
                        
                     

Let y be the column vector obtained by scanning the cover image along the rows. The prediction context of the predictor refers to the neighboring pixels used to predict the particular pixel. Depending on the order of the predictor, the context is chosen for estimating the pixel values. The context is given in Fig. 3(d). The prediction error vector is 
                           
                              y
                              −
                              Xw
                           
                        . The solution (15) is obtained by taking the partial derivative of the square of the prediction error with respect to the predictor coefficients and equating it to zero.

                           
                              (15)
                              
                                 
                                    
                                       
                                          XX
                                          ′
                                       
                                       w
                                    
                                    =
                                    
                                       
                                          X
                                          ′
                                       
                                       y
                                    
                                 
                              
                           
                        
                     

The prediction coefficient can be obtained using Eq. (16):

                           
                              (16)
                              
                                 
                                    w
                                    =
                                    
                                       
                                          
                                             (
                                             
                                                XX
                                                ′
                                             
                                             )
                                          
                                       
                                       
                                          −
                                          1
                                       
                                    
                                    
                                       
                                          X
                                          ′
                                       
                                       y
                                    
                                 
                              
                           
                        
                     

The input cover image is split into 8 × 8 non-overlapping blocks, and least square linear prediction is applied for each block to predict the pixel values. Finally, these blocks are rejoined to form the watermarked image.

In the hybrid local prediction-based algorithm, the image is split into B × B non-overlapping blocks, including the border pixels. For each block, the border pixels are predicted using MED prediction, and the other pixels are predicted using the local least square prediction with rhombus context. Two different predictions are used for predicting the pixels in each block. Hence, this method may be termed as hybrid local prediction. The image is split into non-overlapping blocks. The border pixels (gray colored) are predicted using MED prediction, and the other pixels (white) are predicted using the local least square prediction using the rhombus averaging context, as shown in Fig. 4.
                     
                  

Algorithm:

                        
                           1.
                           The image is split into non-overlapping blocks of size B × B.

For each block, the border pixels are predicted using MED prediction (9).

The other pixels are predicted using least square prediction (12).

The prediction error is calculated using (1).

The secret data are embedded in the cover medical image (2) when the prediction error is greater than the threshold (T); otherwise, the pixels are shifted (3).

The prediction error is calculated at the receiver side between the watermarked and predicted image using (4).

The secret data are extracted from the LSB of the prediction error and the original cover image is restored using (6) and (7).

The simulation results of the prediction error-based RW with different prediction schemes are presented in this section. Six medical images of size 256 × 256 with 8-bit resolution are used as cover images for the simulation (Fig. 5
                     ).

The cover medical image pixels are predicted using the MED, median, GAP, local and hybrid local prediction methods. The prediction error is calculated between the cover medical image and the predicted image for different prediction schemes, and the prediction error histogram is plotted as shown in Fig. 6
                     . If the predicted image is similar to the cover medical image, then most of the error values will be low and close to zero. For the cover medical images, hybrid local prediction has the highest frequency of zero prediction error, followed by the other prediction methods. The secret data are embedded into the original image pixel based on the prediction error. Hence, the prediction error has an effect on embedding capacity and distortion. The highest frequency for prediction error at zero will increase the embedding capacity and also increases the distortion.

The message data (patient information) are embedded into the cover media using a prediction error-based DE method. The data are embedded if the prediction error is larger than the threshold; otherwise, the cover image pixel will be shifted. The embedding capacity and PSNR are calculated for different prediction schemes. The important requirement of RW is high embedding capacity with low distortion (higher PSNR). The threshold (T) is varied from 1 to 10, and the corresponding embedding capacity obtained by various prediction scheme are tabulated in Table 1
                     . The plot between threshold and bpp is depicted in Fig. 7.
                     
                  

The GAP scheme has higher embedding capacity for a celulas image (Fig. 7(f)) at low threshold values. When the threshold is increased, the hybrid local scheme produces increased embedding capacity. The hybrid local scheme has better embedding capacity (above 0.8 bpp) when compared to other prediction schemes for other cover images.

Due to the higher embedding, more distortion is introduced in the cover image, thus resulting in a decrease in PSNR. The PSNR of the watermarked images for different prediction schemes is given in Table 2
                     . The plot between the threshold and the PSNR for different prediction schemes is shown in Fig. 8
                     . From Table 2, it can be seen that the PSNR ranges from 52 dB to 31 dB for different prediction schemes. The hybrid local prediction scheme has increased PSNR compared to the other schemes. The local prediction scheme has better PSNR at low threshold value for the MRI image (Fig. 8(a)). The hybrid local scheme results in higher PSNR as the threshold is increased. For the Celulas image (Fig. 8(f)), the PSNR is higher for the GAP prediction scheme at a low threshold value. When the threshold is increased, the hybrid local scheme outperforms the GAP algorithm. The hybrid local scheme has better PSNR for other cover images for various threshold values.

Imperceptibility is an important requirement in RW. Imperceptibility refers to the invisibility of the watermark hidden in the cover media; the watermarked image should be similar to the cover image. To analyze the imperceptibility, the correlation coefficient is calculated between the cover image and the watermarked image. The correlation coefficient is computed between the cover image and the watermarked image by varying the bits embedded per pixel. The values are tabulated in Table 3
                      and a plot of the embedding capacity (bpp) versus the correlation coefficient is shown in Fig. 9
                     . The hybrid local scheme has good imperceptibility when compared to other prediction schemes for various embedding capacities (bpp). For the MRI image (Fig. 9(a)), the MED prediction has a better correlation coefficient between 0.5 bpp to 0.7 bpp, and for other values, the hybrid local scheme outperforms the other methods.

@&#CONCLUSION@&#

This paper presented the performance of hybrid local prediction schemes for DE-RW. In the prediction schemes, the cover image is divided into non-overlapping blocks of size 8 × 8. The block image pixels are predicted using hybrid local prediction scheme. Based on prediction error, the message data are embedded into the cover image using the DE-RW algorithm. The performance of the hybrid local scheme for various cover medical images was compared with the established schemes, of MED, median, GAP and Local. The prediction error at zero was found to be the highest for the proposed scheme, resulting in increased embedding capacity. By varying the threshold, the embedding capacity and PSNR are computed. The results indicated that the embedding capacity increases and the PSNR decreases with an increase in the threshold. The simulation results showed that the proposed method achieves better watermarked image quality with high embedding capacity when compared with the other classical schemes. The hybrid local scheme can be further analyzed with different prediction contexts.

@&#REFERENCES@&#

