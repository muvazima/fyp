@&#MAIN-TITLE@&#Layout optimization of looped networks by constrained ant colony optimisation algorithm

@&#HIGHLIGHTS@&#


               
                  
                   A constrained version of ACOA is proposed for layout optimization of WDN. • Three different constraining procedures are proposed. • Three examples from the literature are used to test the proposed algorithms. • The results are presented and compared to the results of the conventional ACOA. • The results show the efficiency and effectiveness of the proposed method.
               
            

@&#KEYPHRASES@&#

Pipe networks

Max–min ant colony algorithm

Optimization

Layout

Reliability

Looped networks

@&#ABSTRACT@&#


               
               
                  A constrained version of ant colony optimisation algorithm (ACOA) is proposed in this paper for layout optimization of looped water distribution networks. A novel formulation is used to represent the layout optimization problem of pipe networks in the proper form required for the application of the ant algorithm. The proposed formulation is based on the engineering concept of reliability in which the number of independent paths from the source node to each of the network nodes is considered as a measure of reliability. In the proposed formulation, the ants are constrained to choose from the options provided by a constraining procedure so that only looped layouts are constructed by the ant leading to huge reduction of search space size compared to the original search space. Three different constraining procedures are used leading to three different algorithms. The proposed methods are used to find the optimal layout of three benchmark examples from the literature and the results are presented and compared to the results of the conventional ant colony optimization algorithm. The results show the efficiency and effectiveness of the proposed method for optimal layout determination of looped networks.
               
            

@&#INTRODUCTION@&#

Reliability is commonly considered as a necessary characteristic for most distribution networks such as water, gas, electricity networks. This is normally achieved by constructing the networks such that each consumption node is supported by more than one path from the source/sources. While this feature is currently considered only for main electricity and gas networks due to the costs involved, the water distribution networks are all designed to enjoy this characteristic irrespective of the size of the network. The reliability of the networks and in particular the water distribution network is often observed by engineers via considering a looped layout for the networks.

Due to high costs associated with the construction of these networks, much research over the recent years has been dedicated to the development of techniques to minimize the capital costs of such infrastructures. As the joint consideration of network layout and component design is extremely complex, especially in large scale networks, optimization problem of these networks and in particular the water distribution networks is often split into two distinct problems of optimal layout and optimal component design of these networks. The solution of the layout problem defines the way the network components, such as pipe in the water and gas distribution networks, are connected together to form the network while the component size design determines the size of these components defined by their diameters. While saving caused by layout geometry optimization of networks is usually more than that obtained via component size optimal design, much researches has been developed around optimizing sizing assuming a predetermined geographical layout of the systems [1,5,8,10,11,15–17,19,28]. The volume of the work carried out on the problem of optimizing the layout of these networks and more importantly on the joint layout and component size determination is rather limited. Therefore, engineers have to develop the layout through experience and sheer intuition.

Some limited works have addressed the problem of layout geometry optimization of branched networks using different methods of optimization. Walters and Lohbeck [26] proposed two genetic algorithms (GAs) using binary and integer coding for layout determination of tree-like networks and compared their storage and computation time requirements with that of Dynamic Programming (DP). Davidson and Goulter [13] proposed an evolution programming method for layout optimization of rectilinear branched networks. They replaced crossover and mutation of the GA with two operators, labeled recombination and perturbation, to guaranty the feasibility of the children produced. Walters and Smith [27] combined graph theory with the conventional crossover and mutation operators of the GA to ensure that infeasible solutions are avoided in the reproduction stage. Geem et al. [20] proposed a heuristic algorithm, namely, harmony search, mimicking the improvisation of music players for the optimal design of branched networks. Afshar and Marino [2] hybridized ant algorithm with a Tree Growing Algorithm (TGA) for layout optimization of tree networks in which the TGA was used to restrict the search space to feasible tree layouts during the search process.

The problem of layout optimization for looped water distribution networks has received even less attention mostly because of its complexity [23] while the component sizing of the looped networks are much more dependent on the layout aspect of the problem. In other words, the potential saving by the layout optimization of looped pipe networks is much more than that which can be achieved by optimal component sizing.

This paper proposes a constrained version of ant colony optimization algorithm (CACOA) for layout optimization of looped pipe networks. The proposed formulation is based on the engineering concept of reliability in which the number of independent paths from the source node to each of the network nodes is considered as a measure of reliability. In the proposed formulation, the ants are constrained to choose from a Tabu list provided to the ants at each decision point of the problem so that only looped layout is constructed by the ants. The Tabu list is formed using a constraining procedure leading to huge reduction of search space size compared to the original search space. Three different constraining procedures are used leading to three different algorithms. Performance of the proposed formulations are tested against three benchmark examples from the literature for different level of reliabilities and the results are presented and compared with those of conventional ant colony optimization algorithm (ACOA). It is shown that for the examples considered, the proposed constrained ant colony optimization algorithm shows superior performance compared to the conventional ACOA.

The reliability of the pipe networks is often enforced by considering fixed looped or tree layout for the networks to be designed [1,8,28]. It is well known that optimal component sizing of a pipe network under single loading with any optimization algorithm would lead to a branched network if no reliability constraint is enforced on the problem [12,25]. No global definition of reliability exists in the literature. The researchers have used different definitions for reliability of a network and used various methods for its computation. Some definitions, however, in particular mathematical and engineering-based definitions, seem to be widely accepted in the community. Bazovoski [7] proposed the mathematical definition for the reliability of a pipe network, as the probability that a network can deliver the desired flow at all consumption nodes under required head in normal or abnormal conditions. This definition has been used by several researchers and used to determine the reliability of pipe network [6,9,18,22,24]. Calculation of the mathematical reliability, however, is extremely time consuming. Moreover, the mathematical concept of reliability is not simply understood by practicing engineers in the industry who are supposed to be the actual users of such algorithms.

The minimum number of the independent paths from each consumption node to source node or nodes in a pipe network is used for measuring the engineering concept of reliability. Therefore tree networks have reliability level 1 and looped networks have reliability greater than or equal 2. This definition of the reliability is well-understood by engineers and may be easily integrated into existing pipe network optimization algorithms for layout optimization. In pipe network optimization problems, the reliability constraint can be easily implemented by assuming a looped layout for the network while defining a lower bound different from zero for the pipe diameters. In layout optimization, however, the lower bound of the pipe diameters should be equal to zero enabling the optimization algorithm to remove the pipes from the network if required. Setting the lower diameter to zero without any proper measure to enforce the reliability may result in a branched network as mentioned before. This is the basic difference between a component sizing and a layout optimization problem from a computational point of view. Otherwise, identical procedures and algorithms currently available for optimal component sizing can be used for layout optimization if this computational issue is somehow removed.

Ant colony optimization (ACO), developed by Dorigo et al. [14], is a discrete combinatorial optimization algorithm based on the collective behavior of ants in their search for food. Over a period of time, a colony of ants is able to find the shortest route from their nest to a food source. The swarm intelligence of the ant colony is achieved via an indirect form of communication that involves the ants depositing and following a chemical substance, called a pheromone, on the paths as they travel. Over time, shorter and, therefore, more favorable paths are strengthened with higher amount of pheromone, as they need less time to be traversed, hence becoming the dominant path for the colony.

To apply ACO to a combinatorial optimization problem, it is required that the underlying problem is represented as a graph. For this, assume a graph consisting of n decision points (d
                     i; i
                     =1, 2,...,
                     n) where each decision point is connected to its adjacent decision point via set of edges. Assume that lij
                     ; j
                     =1, 2,...,
                     NEi
                      represent the set of edges available at decision point I where NEi
                      represents the total number of edges available at the decision point. A solution termed a path in ACO is represented by a set of edges constructed by the selection of an edge at each decision point of the problem. The ACO algorithm operates by iteratively generating a population of solutions where each solution is representative of the path that a single ant has traveled.

In conventional ACOA for the solution of the layout problem, each link of the base graph is considered as the decision point of the problem. The number of decision points n are, therefore, equal to the number of links in the base graph. The available options or edges lij
                     ; j
                     =1, 2,...,
                     NEi
                      at each decision point i of the problem would, therefore, be the same as zero or one, where the zero option corresponds to the ‘no link’ option. In this formulation, a typical layout optimization problem shown in Fig. 1
                     (a) can be represented by the graph shown in Fig. 1(b). In this formulation, as seen from Fig. 1(b), the two available options at each decision point, denoted by numbers, are independent from the decisions made at the previous decision point and, therefore, the decisions can be made independently at all decision points of the problem. The order in which the decisions are made is immaterial in this representation of the layout optimization problem. The basic steps of the conventional ACOA for the problem under consideration may be defined as follows [4]:
                        
                           1.
                           The total number of ants, m, is chosen and the amounts of pheromone trail on all edges lij
                               are initialized to some proper value.

Starting from an arbitrary or pre-selected decision point i, ant k is required to build a solution by selecting an edge from available edges using the following transition rule:


                     
                        
                           3.
                           Once the edge at the current decision point is selected, the ant k moves to the next decision point and a solution is incrementally created by the ant k as it moves from one decision point to the next one. This procedure is repeated for all decision points of the problem leading to a complete trial solution is created by the ant k.

Steps 2–3 are repeated for all ants leading to the generation of m trial solutions referred to as an iteration.

The cost, 
                                 
                                    f
                                    
                                       
                                          (
                                          ϕ
                                          )
                                       
                                       
                                          k
                                       
                                    
                                 
                              , of the m trial solution at the current iteration is calculated.

At the end of each iteration, the amount of pheromone on each of the edges are updated using the solutions created at the current iteration. In the max–min ant colony optimization system (MMAS) used in this work, only the pheromone on the edges corresponding to the best solution of the iteration is updated as follows [4]:


                     
                        
                           7.
                           The process defined by steps 2–6 is continued until the convergence criterion is met.

Premature convergence may occur due to the use of ‘elitist’ strategy of pheromone updating in MMAS. As a remedy, the pheromone intensities are bounded within the maximum and minimum values as follows [4]:
                        
                           (4)
                           
                              
                                 
                                    τ
                                 
                                 
                                    max
                                 
                              
                              =
                              
                                 
                                    1
                                 
                                 
                                    1
                                    -
                                    ρ
                                 
                              
                              
                                 
                                    R
                                 
                                 
                                    f
                                    
                                       
                                          (
                                          s
                                          )
                                       
                                       
                                          best
                                       
                                    
                                 
                              
                           
                        
                     
                     
                        
                           (5)
                           
                              
                                 
                                    τ
                                 
                                 
                                    min
                                 
                              
                              =
                              
                                 
                                    
                                       
                                          τ
                                       
                                       
                                          max
                                       
                                    
                                    .
                                    (
                                    1
                                    -
                                    
                                       
                                          (
                                          
                                             
                                                p
                                             
                                             
                                                best
                                             
                                          
                                          )
                                       
                                       
                                          1
                                          /
                                          n
                                       
                                    
                                    )
                                 
                                 
                                    
                                       
                                          NE
                                       
                                       
                                          avg
                                       
                                    
                                    .
                                    
                                       
                                          (
                                          
                                             
                                                p
                                             
                                             
                                                best
                                             
                                          
                                          )
                                       
                                       
                                          1
                                          /
                                          n
                                       
                                    
                                 
                              
                           
                        
                     where 
                        
                           
                              
                                 τ
                              
                              
                                 min
                              
                           
                        
                     , 
                        
                           
                              
                                 τ
                              
                              
                                 max
                              
                           
                        
                      represent the lower and upper limit on the pheromone trail strength, respectively; 
                        
                           
                              
                                 p
                              
                              
                                 best
                              
                           
                        
                      is the probability that the best solution is constructed again; NEavg
                      is the average number of edges available at decision points of the problem; and n is the number of decision points as defined earlier.

In conventional ACOA for the solution of problem, as described, the problem is formulated in such a way that the algorithm has to search for the optimum layout in the search space defined by the total possible combinations of the links. This approach has already been tested on some benchmark examples indicating poor performance of the method in particular for large scale networks [2]. This method is reproduced here only for comparison purposes.

A note should be added regarding the calculation of solution cost f(s) and local heuristic value 
                        
                           
                              
                                 η
                              
                              
                                 ij
                              
                           
                        
                      at decision points of the problem. For Feasible solutions, layouts with desired reliability, the solution cost can be calculated as the sum of the cost of the links present in the network. Here, the link cost is assumed of the form:
                        
                           (6)
                           
                              cos
                              
                                 
                                    t
                                 
                                 
                                    l
                                 
                              
                              =
                              length
                              ∗
                              
                                 
                                    (
                                    flow
                                    )
                                 
                                 
                                    0.5
                                 
                              
                           
                        
                     This equation models the real situation in which cost per unit capacity for a pipe decreases as the capacity increases, that is, cost is shown as a nonlinear, non-convex function of capacity.

The solutions created in the conventional application of ACOA, however, could be infeasible, layouts with reliability lower than desired reliability, as the search is conducted among the feasible and infeasible solutions. In fact, conventional ACOA could create infeasible tree and/or disjoint networks. To force the ants to choose options leading to feasible solutions, a greater cost is associated to the infeasible solutions using the penalty method as follows:
                        
                           (7)
                           
                              f
                              (
                              s
                              )
                              =
                              
                                 
                                    
                                       ∑
                                    
                                    
                                       l
                                       =
                                       1
                                    
                                    
                                       nlink
                                    
                                 
                              
                              cos
                              
                                 
                                    t
                                 
                                 
                                    l
                                 
                              
                              +
                              penal
                              
                                 
                                    
                                       ∑
                                    
                                    
                                       k
                                       =
                                       1
                                    
                                    
                                       NN
                                    
                                 
                              
                              
                                 
                                    CSV
                                 
                                 
                                    k
                                 
                              
                           
                        
                     where 
                        
                           cos
                           
                              
                                 t
                              
                              
                                 l
                              
                           
                        
                      presents the cost of the link l calculated using Eq. (6), NN is the number of the nodes of the base layout, 
                        
                           
                              
                                 R
                              
                              
                                 k
                              
                           
                        
                      is the reliability of the node k of the trial network calculated as the number of independent path from the node to the source, RL is the required reliability level, 
                        
                           
                              
                                 CSV
                              
                              
                                 k
                              
                           
                           =
                           min
                           [
                           (
                           RL
                           -
                           
                              
                                 R
                              
                              
                                 k
                              
                           
                           )
                           ,
                           0
                           ]
                        
                      is a measure of violation from reliability constraint for node k, and penal is the penalty parameter taken large enough so that any infeasible solution would have a total cost greater than any feasible solution. Here the penalty parameter is taken equal to 
                        
                           10
                           
                              
                                 C
                              
                              
                                 max
                              
                           
                        
                      where 
                        
                           
                              
                                 C
                              
                              
                                 max
                              
                           
                        
                      is the cost of the most expensive network.

The local heuristic 
                        
                           
                              
                                 η
                              
                              
                                 ij
                              
                           
                        
                     , as defined earlier, is meant to represent the desirability of the jth available options at decision point i. Available options at each decision point are represented by some of the edges of the base graph. Since the link capacities are not known until the full solution is constructed, the local heuristic 
                        
                           
                              
                                 η
                              
                              
                                 ij
                              
                           
                        
                     , is, therefore, taken as the inverse of the cost per unit length of the link. Direct implementation of this definition runs into difficulty when using conventional ACOA where a zero option (no pipe option) is made available to the ants, leading to a value of infinity for desirability of the ‘no pipe’ option which will in turn lead to the selection of the ‘no pipe’ option at all the decision points of the problem. This problem is easily overcome by assuming that the desirability of the ‘no pipe’ option is equal to half of the desirability of the other option at each decision point.

The problem of layout optimization is considered to be a difficult problem mainly due to the large search space involved. The size of the search space quickly expands with increasing network size. The total number of possible combinations of the options, to be or not to be for each link, for a base layout with 12 links is 
                        
                           
                              
                                 2
                              
                              
                                 12
                              
                           
                           =
                           4096
                        
                      while it increases to 
                        
                           
                              
                                 2
                              
                              
                                 112
                              
                           
                           =
                           5.19
                           ×
                           
                              
                                 10
                              
                              
                                 33
                              
                           
                        
                      for a base graph with 112 links. In a conventional application of ACOA, the algorithm has to search for the optimum layout in the search space defined by the total possible combinations of the links. Large number of the total possible combinations are, of course, infeasible solutions including networks with disjointed nodes and/or tree networks which can be identified before or during the search process using proper algorithms. The size of the search space could, therefore, be reduced by identifying and removing the infeasible solutions and, thereby, limiting the search to the totally or partially feasible solutions of the problem, where the totally feasible solutions refer to the layouts with desired reliability and partially feasible solution refer to the networks with disjointed nodes and/or tree networks.

ACO algorithms enjoy a unique feature, namely incremental solution building capability, which is not observed in other evolutionary search methods such as GAs, currently used for the optimization of engineering problems. This capability is reflected in the process of solution building by ants in which each ant is required to choose an option out of the available options at each decision point of the problem in turn. This idea has originally been used in the context of Traveling Salesman Problem (TSP), the problem for which the ACO algorithm is originally proposed. The only constraints in the TSP problem are that each ant has to visit a city once and that the finishing point must be the same as the starting point. These constraints are easily taken into account by providing a Tabu list for each ant which is updated every time the ant moves from one city to another city. Therefore, the ants are forced to move in the feasible search space and the use of penalty method for constraint satisfaction is not required. The advantages of this process are twofold. The search space size of the problem could be greatly reduced depending on the characteristics of the problem and its constraints. This may in turn lead to better solutions and more importantly to improved convergence characteristics of the algorithm. This concept has also been used by some researchers for layout optimization of tree networks [2], simultaneous layout and size optimization of tree networks [3], and reservoir operation problems [4].

In this paper, the incremental solution building capability of the ACOA is fully exploited for the efficient optimal determination of network layouts with desired level of reliability. For this, a Tabu list is provided to the ants at each decision point of the problem containing only the options that constitute a feasible or partially feasible solution of the problem. The search space of the ants would, therefore, be much smaller than the original search space leading to more effective and efficient approach. Three different methods are used to construct the Tabu list leading to three different algorithms with corresponding merits and shortcomings.

Three vectors C, A and AA of different definitions are used to implement the constraining algorithms to be defined in the following sections. In what follows, a layout is considered to enjoy the reliability level of RL provided that each node of the layout has a reliability of level RL with nodal reliability of level RL defined as the condition that there exist at least RL independent path from the node to the source or sources.

In this formulation, the nodal reliability is replaced by the nodal connectivity leading to the requirement that each node of the network is connected to at least RL link in the layout, where RL is the desired reliability level. This algorithm, however, could lead to disjoint networks and, therefore, the search space provided by this algorithm is larger than the feasible search space of the problem. For this, each link of the base graph is considered as the decision point of the problem leading to the number of the decision points equal to the number of links in the base layout. At each iteration of the ACOA, the pipes are examined for their connectivity defined as the minimum connectivity of the two end nodes. For the pipes with connectivity greater than the desired reliability level RL, two choices of zero and one is provided to the ants meaning, that the ants can decide to remove or include the corresponding pipe in the trial layout under construction. In this method, the constructed layout will include all the links with connectivity level equal to RL plus some of the remaining links decided upon by ants. Two vectors of C and A are used to implement the method as follows:

Initialize:
                           
                              
                                 
                                    C
                                 
                                 =[connectivity of the base layout nodes].


                                 
                                    A
                                 
                                 =[connectivity of base layout pipes defined as the minimum connectivity of two end nodes].

Starting from the link number l with the end nodes i and j:
                           
                              1.
                              
                                 icount
                                 =1.


                                 
                                    T
                                 
                                 =[1].


                                 
                                    T
                                 
                                 =[0,1] if Al
                                 
                                 >
                                 RL.

Let the ant to choose from 
                                    T
                                 .

If ant chooses zero from 
                                    T
                                 , Set Ci
                                 
                                 =
                                 Ci
                                 
                                 −1 and Cj
                                 
                                 =
                                 Cj
                                 
                                 −1. Otherwise go to 8.

Insert Ci
                                  and Cj
                                  into 
                                    C
                                 .

Update all components of 
                                    A
                                  connected to pipe l.

Set l
                                 =
                                 l
                                 +1 if l
                                 ⩽
                                 nlink, and l
                                 =
                                 1 otherwise.

Set icount
                                 =
                                 icount
                                 +1.

Repeat from(2) until icount
                                 =
                                 nlink.

In the second method, the engineering concept of reliability defined as the number of independence paths from the source to the nod under consideration is used as the measure of reliability. In this method, the problem is formulated such that ants have to search for the optimal layout in the feasible region of the problem. For this, each link of the base graph is considered as the decision point of the problem. Starting from an arbitrary decision point, link, of the base graph, the reliability of the two end nodes are calculated and the minimum of these is considered as the reliability of the link under consideration. Two choices of zero and one is provided to the ants for the pipes with reliability greater than RL while only a single option of one is considered for the pipes with reliability equal to RL. Once the ant makes a decision, it moves to the next decision point and the process is continued until all pipes of the base graph are covered. This formulation is only applicable for the base graphs in which the number of links connected to the source/sources is greater than the desired reliability level RL. For the base graphs with the number of source links equal to RL, the base layout would be created as the trial solution since no link could be a candidate for removal.

In this method, the search space of the problem is limited to layouts containing the least number of links while having desired reliability. The Tree Growing Algorithm (TGA) of Afshar and Marino [2] is modified for construction of looped layouts of desired reliability. The method is based on the assumption that any looped layout extracted from a base layout with exact nodal connectivity of RL would enjoy a reliability of RL. For this, the nodes of the base graph are considered as decision points of the problem. At each iteration of the ACOA, the process of trial layout construction starts from the root node of the base graph. Each ant is required to choose an option from a Tabu list provided to the ant before moving to the next decision point. The Tabu list is updated each time the ant moves from one decision point to the next. This process is continued until all decision points of the base graph are covered. Three vectors of 
                           C
                        , 
                           A
                        , and 
                           AA
                         are used to provide the Tabu list as follows:
                           
                              
                                 
                                    C
                                 
                                 =[nodal connectivity of the layout under construction].


                                 
                                    A
                                 
                                 =[link connectivity of the layout under construction defined as the minimum connectivity of two end nodes].


                                 
                                    AA
                                 
                                 =[links adjacent to the layout under construction].

Starting from the Root node:
                           
                              1.
                              Initialize 
                                    C
                                 
                                 =[0], 
                                    A
                                 
                                 =[0], 
                                    AA
                                 
                                 =[arcs in the base graph connected to the root node].

Let the ant to choose a link, a, from 
                                    AA
                                 .

Identify the two end node (i,
                                 j) of a and Set Ci
                                 
                                 =
                                 Ci
                                 
                                 +1 and Cj
                                 
                                 =
                                 Cj
                                 
                                 +1.

Update 
                                    A
                                 .

Identify the newly connected node Ni
                                 .

Update 
                                    AA
                                  by adding any of the arcs of the base graph connected to Ni
                                 , removing arc a, and any arc for which 
                                    Al
                                    
                                 
                                 >
                                 RL.
                              

Repeat from (2) until 
                                    AA
                                  is empty.

Calculation of solution cost f(s) and local heuristic value 
                           
                              
                                 
                                    η
                                 
                                 
                                    ij
                                 
                              
                           
                         in the proposed Constrained ACOA is somehow different depending on the constraining procedures. In the first formulation, the solution cost is calculated using Eq. (7) as the solutions created by the ants may be infeasible regarding the reliability constraint. While conventional ACOA could create infeasible tree and/or disjoint networks, the first formulation could only create disjoint networks while having required connectivity as defined before. Two examples of this situation are shown in Fig. 2
                        (b) and (c) for the base layout of Fig. 2(a).

In the second and third formulation, however, where all the solutions created by ants are feasible, the solution cost can be calculated as the sum of the cost of the links present in the network represented by the first term of Eq. (7) since the second term is identically zero.

The local heuristic 
                           
                              
                                 
                                    η
                                 
                                 
                                    ij
                                 
                              
                           
                        , is calculated in the same manner as that described for the conventional ACOA when using first and second formulations, since zero option (no pipe option) is available to the ants. This, however, presents no problem in the third formulation described earlier since the available options at each decision point are represented by the existing links of the network for which the value of the local heuristic 
                           
                              
                                 
                                    η
                                 
                                 
                                    ij
                                 
                              
                           
                        , can be easily calculated.

The applicability and efficiency of the formulations described in the previous section are tested in this section against three benchmark examples in the literature. The first example to be considered is that of a simple network shown in Fig. 3
                     . The network consists of 9 nodes, 12 links and a source located at node number 9. This example has been considered as a test example by Geem et al. [20] to test the performance of the harmony search (HS) method [21] for layout geometry optimization. The water demand at network nodes is shown in Table 1
                     . The total number of combinations of the links is 
                        
                           
                              
                                 2
                              
                              
                                 12
                              
                           
                           =
                           4096
                        
                     , representing the search space of the conventional ACOA. The number of possible trees of this problem is 196, while the number of possible loop networks is 11 which are found via complete enumeration and are shown in Table 2
                      along with the solutions located by conventional ACOA and proposed CACOA algorithms for RL
                     =2. It should be remarked that while conventional ACOA located the global optimum in 25 iterations, CACOA1 and CACOA3 were able to find the global optimum in just 1 iteration. That is 5 network evaluations. Poor performance of the CACOA2 is due to the fact that the number of source links is equal to the reliability level required as explained earlier. The top four solutions obtained using CACOA3 are shown in Fig. 4
                     . These solutions were obtained with following values for the max–min ant colony system (MMAS) parameters 
                        
                           m
                           =
                           5
                           ,
                           
                              
                                 p
                              
                              
                                 best
                              
                           
                           =
                           0.1
                           ,
                           ρ
                           =
                           0.8
                           ,
                           α
                           =
                           1
                           ,
                           β
                           =
                           0.1
                        
                     , and the maximum number of iterations equal to100.

The second example considers the minimum cost network from the 8
                     *
                     8 node base graph shown in Fig. 5
                     . The nodal demands of the network are 10 and 20
                     lps for odd and even numbered nodes, respectively. This problem was proposed by Walters and Lohbeck [26] to test the performance of GAs for layout optimization of tree networks. This problem was later used by Walters and Smith [27], Geem et al. [20], and Afshar and Marino [2] to test different heuristic search methods for layout optimization of tree networks. This problem was solved here for a looped network with reliability level 2 using conventional ACOA and proposed CACOAs. While conventional ACOA failed to produce any feasible solution apparently due to the scale of the problem, CACOA1 and CACOA3 methods produced solutions of 60047.3 and 58735.4 units, respectively, emphasizing on the superior performance of the third formulation. These solutions, shown in Fig. 6
                     , required 60 and 61min of CPU time on a 1.86GHz Pentium 4. Fig. 7
                      shows the convergence characteristics of these algorithms used for the solution of the second benchmark example. The lower solution costs produced by the CACOA3 at the early stage of the evolution process indicates that all the solutions produced by the proposed method are feasible solutions satisfying the required reliability level as explained before. The second formulation could not be used for the solution of the second problem due to reason noted earlier. These solutions were obtained with following values for the max–min ant colony system (MMAS) parameters 
                        
                           m
                           =
                           15
                           ,
                           
                              
                                 p
                              
                              
                                 best
                              
                           
                           =
                           0.1
                           ,
                           ρ
                           =
                           0.95
                           ,
                           α
                           =
                           1
                           ,
                           β
                           =
                           0.1
                        
                     , and the maximum number of iterations equal to 1000.

The third and final problem is the optimal network from a two-source base graph of 231 links and 100 nodes, shown in Fig. 8
                     , proposed by Walters and Smith [27] to test the performance of GA model for layout optimization of tree networks. This problem was also used by Afshar and Marino [2] to test two ACOA methods for layout Geometry optimization of tree networks. The total number of possible combinations of the links for this problem is, 
                        
                           3.654
                           ×
                           
                              
                                 10
                              
                              
                                 54
                              
                           
                        
                     , making it impossible to find the optimum solution via enumeration. The problem is solved here for looped networks with reliability level 2 and 3 with the results shown in Table 3
                      along with the CPU time required to get the solutions. Once again, the third formulation is seen to outperform the other methods with the conventional ACOA failing again to produce any feasible solution.

The optimal layouts obtained using proposed methods are shown in Figs. 9 and 10
                     
                      for reliability level of 2 and 3, respectively. The convergence characteristics of the proposed methods are also shown in Figs. 11 and 12
                     
                      for different reliabilities. The fact that the proposed second and the third formulations lead to construction of feasible solutions is evident from Figs. 11 and 12 where the early iteration solution costs are close to the final optimal costs due to the fact that they are not penalized. These solutions were obtained with following values for the MMAS parameters 
                        
                           m
                           =
                           5
                           ,
                           
                              
                                 p
                              
                              
                                 best
                              
                           
                           =
                           0.1
                           ,
                           ρ
                           =
                           0.95
                           ,
                           α
                           =
                           1
                           ,
                           β
                           =
                           0.1
                        
                     , and the maximum number of iterations equal to 1000 for all three algorithms.

A constrained version of ACOA was proposed in this paper for the efficient and effective optimal design of lopped network layouts using an engineering concept of reliability defined as the number of independent paths from each node to the source/sources. Three constraining procedure was proposed to be used with the ACOA leading to considerable improvement in the performance of the ACOA. In the proposed method, a Tabu list is provided at each decision point of the problem so that the ant can chose from options leading to feasible solutions. In the first method, the nodal reliability is replaced with the nodal connectivity leading to a partially feasible search space for the ants. In the second method, the engineering concept of reliability is used to limit the ant options leading to feasible search space of the problem. In the third method, the TGA is generalized for the construction of looped layouts of desired reliability and used to guide the ants in trial layout construction. The proposed constraining procedures were used along with a ACOA method to solve three benchmark examples in the literature for different reliability levels and the results are presented and compared with those of conventional ACOA. The results showed the applicability of the proposed method and in particular the third method for effective optimal design of lopped network layouts.

@&#REFERENCES@&#

