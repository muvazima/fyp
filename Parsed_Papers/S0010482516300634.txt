@&#MAIN-TITLE@&#Automatic segmentation of vertebral contours from CT images using fuzzy corners

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           CT images of whole body spine is segmented using active contour method.


                        
                        
                           
                           Fully automated initialization method for active contour method is proposed.


                        
                        
                           
                           A novel fuzzy corner metric for identifying region of interest is employed.


                        
                        
                           
                           Automatic contour initialization using alpha hull constructed over detected fuzzy corners.


                        
                        
                           
                           Validation was done using the Dice coefficient and Hausdorff distance as compared to ground truth segmentation


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Medical image segmentation

CT image

Spine

Active contour method

Fuzzy logic

Alpha hull

@&#ABSTRACT@&#


               Graphical abstract
               
                  
                     
                        
                           fx1
                           
                        
                     
                  
               
            

@&#INTRODUCTION@&#

Devising an automatic method for detection and segmentation in medical images poses varied challenges [1]. Formulating an effective delineation technique for extracting the region of interest(ROI), in complex structures like the spine, is an arduous process. In order to assist in this process, various semi-automatic techniques are prevalent for segmenting the object of interest, including methods based on a global threshold [2]; however, a global threshold selection is not straightforward. Use of a single hard threshold is considered a source of segmentation errors [3]. Additionally, the pixels assigned to a single class need not necessarily form a coherent region since spatial locations are ignored. Histograms are drawn, and the valleys are identified as potential candidates for the global threshold. Multiple thresholds would be necessary if there were more peaks.

Active contour methods (ACM) are employed widely on medical images for segmentation [4–6]. In these methods, an initial contour, which evolves based on image gradients, is specified for extracting the desired objects [7]. The placement of contour sometimes becomes extremely important, because the contour might start deviating from its intended track if the image forces are not very strong. Convergence is faster if the contour is placed closer to the ROI so that it does not get attracted to the false edges that are likely to emerge from spurious noise and artifacts. The sensitivity of convergence to contour initialization was analyzed in [8] and the authors proposed an alternate means to achieve accurate segmentation based on neighborhood information. The size and number of medical images has increased at an alarming rate, necessitating the development of robust automatic segmentation methods. ACMs are a viable option for the automatic segmentation of medical images if robust computational methods for contour initialization are made available.

A brief literature review of the reported works in the fully automatic segmentation of spinal CT images is presented here. For the spine [9], presents an algorithm which utilizes an edge detection function and region detection function to extract lumbar vertebrae for identifying disc herniation. This method is initialized with an Otsu threshold. The level set is formulated in terms of intensities by adding a weighted kernel to each pixel, as opposed to [10], where the edge stopping function is defined in terms of Euler Lagrange coefficients. Wu and Lin were able to identify dominant features in cervical vertebrae with a similar threshold-based initialization approach [11]. To overcome the inherent drawbacks of thresholding, an adaptive 3D region growing method is devised in [12]. A fully automated method of segmentation for delineating the thoracic and lumbar vertebrae is given in [13]. While it calls for seed placement in the canal, a level-set is allowed to evolve followed by a voxel-based delineation. Certain morphological operations are allowed to enhance the process. The use of atlas for aiding segmentation is an alternate method [14–16]. A three step algorithm is developed in [17] adopting Statistical Shape Models (SSM), that includes a seed placement, initial labeling and final optimization. This method is designed to handle complex geometry of all processes and variability between the individuals.

Shape prior models based segmentation of CT data for effective partitioning is presented in several articles. Gao and Chae employ the shape and intensity priors for segmenting tooth obtained from CT images [18]. The level sets are tracked based on initialization over a single slice while a boundary over each tooth has to be manually identified. Zhang et al. [10] proposed a new pressure force that isolates ROI for selective local or global segmentation. Nonetheless, the initial contour as an input from the user is essential. Local region characteristics have also been exploited in [19]. A distance driven active contour for CT segmentation is proposed by Truc et al. [20] which mainly focuses on segmenting the inhomogeneous structures. A convex combination of homogeneity and density steers the contour propagation. The authors report better results when compared to Chan-Vese (CV) model.

To segment the abdominal CT [21], Golodetz et al., use image partition forests to locate the contour with minimal or no intervention. It is imperative to furnish an initial partition, since each image sequence has a unique structure that requires the use of watershed and waterfall algorithms. Anatomical knowledge from the image aids to refine the forest and leads to a highly image specific segmentation method. Choi and Kim discuss the problem of extracting chest wall from chest CT data [22]. The method first learns from a given set of data and the parameters are tuned using Gradient Vector Field (GVF) algorithm. These input parameters are uniformly fixed for images that are subsequently segmented. An initialization-free active contour method is proposed in [23] for generic images that use radial basis function at its core level set. Its response on images with noise and artifacts are yet to be explored. The deterministic computational methods used in order to segment an image, deteriorate in the presence of noise. However, employing soft computing techniques like fuzzy logic can improve the performance [24–26]. Fuzzy rule based systems are built upon multiple combinations of thresholding.

Based on the membership associated with each cluster, segmentation results are achieved. For a known cluster sequence, the level set method is intertwined with the fuzzy concept. The fuzzy clustering is regarded as adaptive thresholding since the centroid of each class adjusts to the cost function [27]. Banerjee and Kundu propose a new technique to extract features in gray level images [28] keeping the basic assumption, that corner points are high curvature entities which lie on edges. Desired features are therefore obtained by identifying the intersection of ridges and valleys that constitute the corners. Also a fuzzy based membership is assigned to the dominant edges. The result benchmarked with those of deterministic methods like Harris and SUSAN is reported. A segmentation approach using fuzzy threshold for multi-region is formulated in [3] which uses a mapping between centroid of clustered pixels with a membership function. Madasu et al., developed a fuzzy edge and corner detector in case of color images using SUSAN corner detector as a base [29]. A fuzzified region based ACM method is presented in [27,30]. While a plethora of methods were developed for segmentation using ACM, limited attempts are accounted towards automatic initialization owing to its application constraint. For an efficient automatic method, it is crucial to detect feature points and edges even in the presence of noise and artifacts.

The present work is a novel technique that focuses on development of automatic contour initialization with fuzzy feature points while using the conventional ACM. Originality of the work manifests in the germination of initial contour which is directly associated with image features rather than a template or manual labor. A fuzzified corner metric based on image intensity is proposed to identify the feature markers which are enclosed by the contour. A concave shape approximating the boundary of these fuzzy corner points is obtained using α hull to provide initial contour for the ACM. Most of the existing methods are manual and face discrepancies in segmenting a stack of slices, while the proposed method will exploit the dearth in automation of such processes. The proposed method which is evaluated against conventional feature detectors and other generic initialization techniques, is found to perform robustly even in the presence of noise.

@&#METHODOLOGY@&#

This paper proposes automatic contour initialization for ACM based medical image segmentation. A set of feature markers from the image is extracted to construct an initial contour for the ACM. A fuzzified corner metric based on image intensity is proposed to identify the feature markers that are enclosed by the contour. A concave hull based on α shape, is constructed using these fuzzy corners yielding the initial contour which evolves due to the image forces. The segmented output is validated using similarity metrics computed from the ground truth segmentation performed by experienced radiologist. Functional block diagram of the proposed methodology is shown in 
                     Fig. 1. Novelty of the method rests in fuzzy-logic based feature point detection and contour initialization using α hull for ACM evolution. The subsections describe various methods involved in the scheme.

ACM is a class of method that begins with an initial contour and evolves over a given time interval based on the internal and external characteristics pertaining to an image. The goal of geodesic active contour (GAC) or snake is to minimize the following energy,
                           
                              (1)
                              
                                 
                                    E
                                 
                                 
                                    =
                                 
                                 
                                    
                                       ∫
                                    
                                    
                                       0
                                    
                                    
                                       1
                                    
                                 
                                 
                                    
                                       
                                          E
                                       
                                       
                                          int
                                       
                                    
                                    
                                       (
                                       
                                          
                                             v
                                          
                                          
                                             (
                                             
                                                s
                                             
                                             )
                                          
                                       
                                       )
                                    
                                    
                                       +
                                    
                                    
                                       
                                          E
                                       
                                       
                                          img
                                       
                                    
                                    
                                       (
                                       
                                          
                                             v
                                          
                                          
                                             (
                                             
                                                s
                                             
                                             )
                                          
                                       
                                       )
                                    
                                 
                                 
                                    +
                                 
                                 
                                    
                                       E
                                    
                                    
                                       ext
                                    
                                 
                                 
                                    (
                                    
                                       
                                          v
                                       
                                       
                                          (
                                          
                                             s
                                          
                                          )
                                       
                                    
                                    )
                                 
                                 
                                    ds
                                 
                              
                           
                        where


                        
                           
                              v
                           
                           
                              (
                              
                                 s
                              
                              )
                           
                           
                              =
                              (
                              x
                           
                           
                              (
                              
                                 s
                              
                              )
                           
                           
                              ,
                              y
                           
                           
                              (
                              
                                 s
                              
                              )
                           
                           
                              )
                           
                         represents the parameters of snake, 
                           
                              
                                 
                                    E
                                 
                                 
                                    int
                                 
                              
                              
                                 =
                              
                              
                                 
                                    
                                       (
                                       α
                                    
                                    
                                       (
                                       
                                          s
                                       
                                       )
                                    
                                    
                                       
                                          |
                                          
                                             
                                                
                                                   v
                                                
                                                ̇
                                             
                                             
                                                (
                                                
                                                   s
                                                
                                                )
                                             
                                          
                                          |
                                       
                                       
                                          2
                                       
                                    
                                    
                                       +
                                       β
                                    
                                    
                                       (
                                       
                                          s
                                       
                                       )
                                    
                                    
                                       
                                          |
                                          
                                             
                                                
                                                   v
                                                
                                                ¨
                                             
                                             
                                                (
                                                
                                                   s
                                                
                                                )
                                             
                                          
                                          |
                                       
                                       
                                          2
                                       
                                    
                                    
                                       )
                                    
                                 
                                 /
                                 
                                    
                                       2
                                    
                                 
                              
                           
                         with 
                           
                              α
                           
                         and 
                           
                              β
                           
                         contributing for elasticity and rigidity components of internal energy, 
                           
                              
                                 E
                              
                              
                                 img
                              
                           
                         accounts for image force and 
                           
                              
                                 E
                              
                              
                                 ext
                              
                           
                         provides external constraint force that is modeled depending on the application. External energy drives the contour using image data while the internal energy stabilizes its shape based on general smoothness constraints.

Level sets are special classes of these contours in which one traces the evolution of curve at the zero level. The method embeds an interface in a higher dimensional function ϕ (signed distance function) as a level set ϕ=0. The equation that governs evolution of level set function ϕ(t), is, 
                           
                              
                                 
                                    
                                       ∂
                                    
                                    
                                       ϕ
                                    
                                 
                                 
                                    ∂
                                    t
                                 
                              
                              
                                 +
                                 F
                              
                              
                                 |
                                 
                                    ∇
                                    
                                       ϕ
                                    
                                 
                                 |
                              
                              
                                 =
                                 0
                              
                           
                         where 
                           
                              F
                           
                         represents speed function. The CV model which controls evolution without edges, was given by Chan et al. [31] and it is described in the energy functional given in Eq. (2). By incorporating the external image forces and minimizing it, the corresponding variational level set formulation can be obtained solving the Euler Lagrange equation.
                           
                              (2)
                              
                                 
                                    
                                       
                                          E
                                       
                                       
                                          C
                                          V
                                       
                                    
                                    =
                                    
                                       
                                          λ
                                       
                                       
                                          1
                                       
                                    
                                    
                                       
                                          ∫
                                       
                                       
                                          i
                                          n
                                          s
                                          i
                                          d
                                          e
                                          
                                             (
                                             C
                                             )
                                          
                                       
                                    
                                    
                                       
                                          
                                             |
                                             
                                                I
                                                
                                                   (
                                                   x
                                                   )
                                                
                                                −
                                                
                                                   
                                                      c
                                                   
                                                   
                                                      1
                                                   
                                                
                                             
                                             |
                                          
                                          2
                                       
                                       d
                                       x
                                       +
                                       
                                          
                                             λ
                                          
                                          
                                             2
                                          
                                       
                                    
                                    
                                       ∫
                                       
                                          o
                                          u
                                          t
                                          s
                                          i
                                          d
                                          e
                                          
                                             (
                                             C
                                             )
                                          
                                       
                                    
                                    
                                       
                                          
                                             |
                                             
                                                I
                                                
                                                   (
                                                   x
                                                   )
                                                
                                                −
                                                
                                                   
                                                      c
                                                   
                                                   
                                                      2
                                                   
                                                
                                             
                                             |
                                          
                                          2
                                       
                                       d
                                       x
                                       ,
                                       x
                                       ϵ
                                       Ω
                                    
                                 
                              
                           
                        
                     

The ACM methodology described by Zhang et al. [10] is adapted for this work owing to its added advantages. It enhances the level set framework bypassing the calculation of signed distance function. In this method, a special region based function forces the level sets to be binary and a Gaussian function is used for further regularization. A signed pressure force is formulated as a region based function that effectively stops at blurred edges given by:
                           
                              (3)
                              
                                 
                                    
                                       spf
                                    
                                    
                                       (
                                       
                                          
                                             I
                                          
                                          
                                             (
                                             
                                                x
                                             
                                             )
                                          
                                       
                                       )
                                    
                                    
                                       =
                                    
                                    
                                       
                                          
                                             I
                                          
                                          
                                             (
                                             
                                                x
                                             
                                             )
                                          
                                          
                                             −
                                          
                                          
                                             
                                                
                                                   
                                                      c
                                                   
                                                   
                                                      1
                                                   
                                                
                                                
                                                   +
                                                
                                                
                                                   
                                                      c
                                                   
                                                   
                                                      2
                                                   
                                                
                                             
                                             
                                                2
                                             
                                          
                                       
                                       
                                          
                                             max
                                          
                                          
                                             (
                                             |
                                             
                                                
                                                   I
                                                
                                                
                                                   (
                                                   
                                                      x
                                                   
                                                   )
                                                
                                                
                                                   −
                                                
                                                
                                                   
                                                      
                                                         
                                                            c
                                                         
                                                         
                                                            1
                                                         
                                                      
                                                      
                                                         +
                                                      
                                                      
                                                         
                                                            c
                                                         
                                                         
                                                            2
                                                         
                                                      
                                                   
                                                   
                                                      2
                                                   
                                                
                                             
                                             |
                                          
                                          )
                                       
                                    
                                    
                                       ,
                                    
                                 
                              
                           
                        where


                        
                           
                              
                                 c
                              
                              
                                 1
                              
                           
                         and 
                           
                              
                                 c
                              
                              
                                 2
                              
                           
                         are computed using the regular Heaviside function.

The final level set formulation is given as,
                           
                              (4)
                              
                                 
                                    
                                       
                                          ∂
                                          φ
                                       
                                       
                                          ∂
                                          t
                                       
                                    
                                    =
                                    s
                                    p
                                    f
                                    
                                       (
                                       
                                          I
                                          
                                             (
                                             x
                                             )
                                          
                                       
                                       )
                                    
                                    
                                       (
                                       
                                          d
                                          i
                                          v
                                          
                                             (
                                             
                                                
                                                   
                                                      ∇
                                                      φ
                                                   
                                                   
                                                      |
                                                      
                                                         ∇
                                                         φ
                                                      
                                                      |
                                                   
                                                
                                             
                                             )
                                          
                                          +
                                          α
                                       
                                       )
                                    
                                    +
                                    
                                    ∇
                                    s
                                    p
                                    f
                                    
                                       (
                                       
                                          I
                                          
                                             (
                                             x
                                             )
                                          
                                       
                                       )
                                    
                                    .
                                    ∇
                                    φ
                                 
                              
                           
                        where 
                           
                              α
                           
                         is a constant velocity term added to increase the speed of propagation of contour.

Combining the merits of traditional approaches namely the CV [31] and GAC [6] models, this method stops at weak boundaries and edges. It provides selective local or global segmentation upon determining a suitable binary function. However, the user has to initialize and provide a tuning parameter for each input image. Taking these aspects into account, this paper proposes a technique for automatic initialization of contours based on fuzzy corners and α hull.

Corners are feature points in an image that are identified by presence of large variation in intensity around a pixel in all directions. One of the well known corner detectors is Harris corner and edge detection method [32]. The corners are detected using the Eigen value distribution obtained from a corner response metric. The corner metric 
                           R
                        (x) for each pixel with intensity x(u,v) is defined by the Eq. (5).
                           
                              (5)
                              
                                 
                                    R
                                 
                                 
                                    (
                                 
                                 
                                    x
                                 
                                 
                                    )
                                    =
                                 
                                 
                                    
                                       I
                                    
                                    
                                       u
                                    
                                    
                                       2
                                    
                                 
                                 
                                    *
                                 
                                 
                                    
                                       I
                                    
                                    
                                       v
                                    
                                    
                                       2
                                    
                                 
                                 
                                    −
                                 
                                 
                                    
                                       (
                                       
                                          
                                             
                                                I
                                             
                                             
                                                u
                                             
                                          
                                          
                                             
                                                I
                                             
                                             
                                                v
                                             
                                          
                                       
                                       )
                                    
                                    
                                       2
                                    
                                 
                                 
                                    −
                                 
                                 
                                    k
                                 
                                 
                                    
                                       
                                          (
                                       
                                       
                                          
                                             I
                                          
                                          
                                             u
                                          
                                          
                                             2
                                          
                                       
                                       
                                          +
                                       
                                       
                                          
                                             I
                                          
                                          
                                             v
                                          
                                          
                                             2
                                          
                                       
                                       
                                          )
                                       
                                    
                                    
                                       2
                                    
                                 
                              
                           
                        where:


                        
                           
                              
                                 I
                              
                              
                                 u
                                 /
                                 v
                              
                           
                         – intensity gradient along u / v; k-sensitivity factor

In order to identify local maxima of this cornerness, a pixel neighborhood of 8 pixels is taken and a non maxima suppression is exerted to yield the suppressed cornerness 
                           C
                        
                        
                           
                              r
                           
                        (x). This involves extraction of a singular point among the connected components that is likely to have the same intensity and belong to the same local maxima. By shrinking the pixels linked to each other in the absence of a hole or by placing them in the mid stance between a hole and a boundary, multiple copies of maxima are removed. This results in pixels with maximum corner strength from its neighboring counterparts. These pixels are sorted in ascending order of their cornerness strength and a certain threshold in their numbers is used to extract the corners in the Harris scheme. In case of medical images, like CT, apart from bone regions that have high intensity, the surrounding muscle regions are also captured with varied intensity scale. An example for an axial CT slice of spine is shown in 
                        Fig. 2. The conventional Harris corner detects corners in the ROI along with stray corners in other regions. If the Harris corners are used to construct the contour for ACM, the efficiency of contour evolution will be compromised and in some cases, the contour may deviate from the intended boundary of ROI. The corner detection is further effected in the presence of noise as shown in Fig. 2b.

To identify the potential corners lying in the ROI, it is imperative to check if the feature is a true candidate, for which, classification techniques can be adopted. In order to identify feature points of interest robustly even in the presence of noise, we propose a fuzzy corner metric that uses a fuzzified intensity mask on the corner metric obtained from conventional Harris scheme.Fuzzy logic theory helps in capturing uncertainties in an image and provides a formal way of exploring it as perceived by humans [24]. An image can be considered a as a fuzzy set whose gray level constitutes the subset. Let X be the fuzzy set consisting of image intensities x and is characterized by a continuum grade membership function 
                           
                              μ
                           
                           
                              (
                              
                                 x
                              
                              )
                           
                         whose value ranges between 0 to 1 [28]. Specifically, an S type membership function is employed for fuzzifying the intensities of input images in this work. This type of membership function is opted to give higher weightage to pixels with higher intensities and thus segment bony structures from CT images. The functional definition of fuzzy membership function is given in Eq. (6).
                           
                              (6)
                              
                                 
                                    S
                                    
                                       (
                                       
                                          x
                                          ;
                                          a
                                          ,
                                          b
                                       
                                       )
                                    
                                    =
                                    
                                       {
                                       
                                          
                                             
                                                
                                                   
                                                      0
                                                      ,
                                                   
                                                
                                                
                                                   
                                                      x
                                                      ≤
                                                      a
                                                   
                                                
                                             
                                             
                                                
                                                   
                                                      2
                                                      
                                                         
                                                            (
                                                            
                                                               
                                                                  
                                                                     x
                                                                     −
                                                                     a
                                                                  
                                                                  
                                                                     b
                                                                     −
                                                                     a
                                                                  
                                                               
                                                            
                                                            )
                                                         
                                                         2
                                                      
                                                      ,
                                                   
                                                
                                                
                                                   
                                                      
                                                      a
                                                      ≤
                                                      x
                                                      ≤
                                                      
                                                         
                                                            a
                                                            +
                                                            b
                                                         
                                                         2
                                                      
                                                   
                                                
                                             
                                             
                                                
                                                   
                                                      1
                                                      −
                                                      2
                                                      
                                                         
                                                            (
                                                            
                                                               
                                                                  
                                                                     x
                                                                     −
                                                                     a
                                                                  
                                                                  
                                                                     b
                                                                     −
                                                                     a
                                                                  
                                                               
                                                            
                                                            )
                                                         
                                                         2
                                                      
                                                      ,
                                                   
                                                
                                                
                                                   
                                                      
                                                      
                                                         
                                                            a
                                                            +
                                                            b
                                                         
                                                         2
                                                      
                                                      ≤
                                                      x
                                                      ≤
                                                      b
                                                   
                                                
                                             
                                             
                                                
                                                   
                                                      1
                                                      ,
                                                   
                                                
                                                
                                                   
                                                      x
                                                      ≥
                                                      b
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           
                        where


                        x=input image intensity, a=foot point, b=peak point and 
                           S
                        (x)=fuzzified intensity. Upon fuzzifying the image domain, a threshold is set for extracting the pixels that are likely to contain corner features. The fuzzified threshold intensity 
                           t
                        (x) is given by Eq. (7).
                           
                              (7)
                              
                                 
                                    t
                                 
                                 
                                    (
                                    
                                       x
                                    
                                    )
                                 
                                 
                                    =
                                 
                                 
                                    {
                                    
                                       
                                          
                                             
                                                
                                                   S
                                                
                                                
                                                   (
                                                
                                                
                                                   x
                                                
                                                
                                                   )
                                                   ,
                                                   &
                                                
                                                
                                                   S
                                                
                                                
                                                   (
                                                
                                                
                                                   x
                                                
                                                
                                                   )
                                                   >
                                                
                                                
                                                   th
                                                
                                             
                                          
                                          
                                             
                                                
                                                   0
                                                   ,
                                                
                                                
                                                   S
                                                
                                                
                                                   (
                                                   &
                                                
                                                
                                                   x
                                                
                                                
                                                   )
                                                   ≤
                                                
                                                
                                                   th
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           
                        where


                        
                           t(x)=fuzzy thresholded intensity; th=threshold whose value is set to extract top 90% of image features. This function is used as a mask for identifying significant corner points from the derived corner strength matrix. The weighted combination of suppressed corner strength with the fuzzy thresholded input image (as given by Eq. (8)) gives fuzzy corners for the image.
                           
                              (8)
                              
                                 
                                    C
                                 
                                 
                                    (
                                 
                                 
                                    x
                                 
                                 
                                    )
                                    =
                                 
                                 
                                    t
                                 
                                 
                                    (
                                    
                                       x
                                    
                                    )
                                 
                                 
                                    *
                                 
                                 
                                    
                                       C
                                    
                                    
                                       r
                                    
                                 
                                 
                                    (
                                    
                                       x
                                    
                                    )
                                 
                              
                           
                        
                     

The fuzzified corners eliminate corners that are formed as a result of cavity (darker spots inside a predominant high intensity region), spurious edges, noise and artifacts. For the axial image displayed in Fig. 2(a), the fuzzified corner metric is evaluated which is used to detect fuzzy corners as shown in 
                        Fig. 3. It is observed that the fuzzy corner points estimate the ROI closer than the corners detected using Harris scheme.

Once the feature points are identified, the next step is to wrap them up in a close – knit curve which gives the initial contour for the ACM evolution. Since these feature points are located on edges and corners, they can attribute to shape the initial contour. One of the simplest choices would be to form a convex hull as given by Kovacs et al. [33]. A set S in Euclidean space is said to be convex if every straight-line segment having its two end points in S lies entirely in S. The smallest convex set that contains the entire point set is its convex hull which is described by the convex combination of finite subset of points in C, as given in Eq. (9).
                           
                              (9)
                              
                                 
                                    
                                       H
                                    
                                    
                                       (
                                       
                                          C
                                       
                                       )
                                    
                                    
                                       =
                                    
                                    
                                       
                                          ∑
                                       
                                       
                                          
                                             i
                                          
                                          
                                             =
                                             1
                                          
                                       
                                       
                                          n
                                       
                                    
                                    
                                       
                                          
                                             θ
                                          
                                          
                                             i
                                          
                                       
                                       
                                          
                                             c
                                          
                                          
                                             i
                                          
                                       
                                       
                                          ,
                                       
                                       
                                          
                                             c
                                          
                                          
                                             i
                                          
                                       
                                       
                                          ∈
                                       
                                       
                                          C
                                       
                                       
                                          
                                          and
                                       
                                       
                                          
                                          ∑
                                       
                                       
                                          
                                             
                                                θ
                                             
                                             
                                                i
                                             
                                          
                                          
                                             =
                                             1
                                          
                                       
                                    
                                    
                                       
                                       for
                                    
                                    
                                    
                                       i
                                    
                                    
                                       =
                                       1
                                       ,
                                       2
                                       ,
                                       …
                                       .
                                    
                                    
                                       n
                                    
                                 
                              
                           
                        
                     

These hulls can also be used as a metric for evaluation of boundaries in medical images [34]. While a convex hull is good for bounding a region of points, it does not describe the shape of an object. Concave hulls perform much better for describing the region occupied by a point set. The mathematical background of a commonly used algorithm that uses concave hull based on α shapes is found in [35]. An α shape is generated by point pairs with a parameter α, controlling the desired level of details. It is a sub graph of Delaunay triangulation [36] of points considering that two points are connected if there is an empty ball of radius alpha touching them. When α tends to infinity, the α hull approaches the convex hull of a given point set. The point set enclosure for various levels of α for a sample point set is shown in 
                        Fig. 4. 
                        Fig. 5(a) and (b) shows the convex and α hull for the fuzzy corners, detected in an axial spine image.

A stepwise description of the complete method is given below,
                           
                              1.
                              Corner detection

Detect the traditional Harris corners in parent image using cornerness measure 
                                    
                                       R
                                    
                                    
                                       (
                                       x
                                       )
                                    
                                 
                              

Modify the corner metric using the fuzzy approach

Output the fuzzy corners 
                                    C(x)
                              

Construction of concave hull

Construct the Voronoi diagram and Delaunay triangulation of 
                                    C(x)
                              

Decide the α parameter

Determine the α-extremes of 
                                    C(x)
                              

Determine the α-neighbors of 
                                    C(x)
                              

Output the α-shape of the provided saliency points

Contour evolution

Initialize the level set function
                                    
                                       
                                          
                                             φ
                                          
                                          
                                             (
                                             
                                                
                                                   x
                                                
                                                
                                                   ,
                                                
                                                
                                                   t
                                                
                                                
                                                   =
                                                   0
                                                
                                             
                                             )
                                          
                                          
                                             =
                                          
                                          
                                             {
                                             
                                                
                                                   
                                                      
                                                         
                                                            −
                                                            1
                                                         
                                                         
                                                            x
                                                         
                                                         
                                                            ∈
                                                         
                                                         
                                                            interior
                                                         
                                                         
                                                            of
                                                         
                                                         
                                                            α
                                                         
                                                         
                                                            hull
                                                         
                                                      
                                                   
                                                   
                                                      
                                                         
                                                            0
                                                         
                                                         
                                                            x
                                                         
                                                         
                                                            ∈
                                                         
                                                         
                                                            boundary
                                                         
                                                         
                                                            of
                                                         
                                                         
                                                            α
                                                         
                                                         
                                                            hull
                                                         
                                                      
                                                   
                                                   
                                                      
                                                         
                                                            1
                                                         
                                                         
                                                            x
                                                         
                                                         
                                                            ∈
                                                         
                                                         
                                                            exterior
                                                         
                                                         
                                                            of
                                                         
                                                         
                                                            α
                                                         
                                                         
                                                            hull
                                                         
                                                      
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                              

Compute 
                                    
                                       
                                          c
                                       
                                       
                                          1
                                       
                                    
                                  and 
                                    
                                       
                                          c
                                       
                                       
                                          2
                                       
                                    
                                 
                              

Evolve the level set equation given in Eq. (4)
                              

Add regularization parameter with a Gaussian kernel if necessary

Check for convergence else Repeat

The dataset used for demonstration and comparison of the prosed method with existing methods of segmentation, consists of whole spine routine CT scans of 25 anonymized patients, collected from Apollo specialty hospitals, Chennai, India. The images were procured after going through formal clearing from the hospital ethical committee. The hardware and software details of the instrument are given in 
                        Table 1.

Around 55 axial, 20 sagittal and 20 coronal slices were segmented using the proposed method. The images were selected from the above dataset in random order. Amongst the subjects, the majority were healthy group reporting lower back pain while a few cases of end plate degeneration and vertebral fractures were also collected to validate the method for degenerative conditions. Also, a few images have been taken from the online repositories
                           1
                        
                        
                           1
                           
                              http://www.osirix-viewer.com/datasets/
                           
                        
                        ,
                        
                           2
                        
                        
                           2
                           
                              http://research.microsoft.com/en-us/projects/spine/
                           
                         for testing and demonstrating the method.

@&#RESULTS AND DISCUSSION@&#

The proposed methodology is implemented in Matlab® and is tested for its performance using several CT images. The performance of proposed method based on fuzzy corners is compared with the conventional Harris corner and that of the contour initialization scheme based on α hull with generic initialization schemes. The rendition of the method on images with various level of noise is also studied in detail. In order to validate and assess the performance, two most commonly used metrics, Dice similarity coefficient (DC) and Hausdorff distance (HD) are used. The quantitative analysis metric is widely used for testing the accuracy of segmentation [37,38]. The dice similarity coefficient is computed as,
                        
                           (10)
                           
                              
                                 D
                                 
                                    (
                                    
                                       a
                                       ,
                                       b
                                    
                                    )
                                 
                                 =
                                 
                                    
                                       2
                                       
                                       
                                          |
                                          
                                             a
                                             
                                             
                                                
                                                   ∩
                                                
                                                
                                             
                                             b
                                          
                                          |
                                       
                                    
                                    
                                       
                                          |
                                          a
                                          |
                                       
                                       +
                                       
                                       
                                          |
                                          b
                                          |
                                       
                                    
                                 
                              
                           
                        
                     where


                     a-Ground truth image; b-Segmented image. It represents the similarity between two image sets. A value of 0 indicates no overlap and a value of 1 indicates perfect agreement. The Hausdorff distance measures resemblance between two given segmented images by measuring the maximum distance of separation amidst points on the respective boundary contours, yet can be considered close.
                        
                           (11)
                           
                              D
                              
                                 (
                                 
                                    A
                                    ,
                                    B
                                 
                                 )
                              
                              =
                              
                                 
                                    
                                       
                                          M
                                          a
                                          x
                                       
                                       
                                          ︸
                                       
                                    
                                 
                                 
                                    a
                                    ∈
                                    A
                                 
                              
                              
                                 {
                                 
                                    
                                       
                                          
                                             
                                                M
                                                i
                                                n
                                             
                                             
                                                ︸
                                             
                                          
                                       
                                       
                                          b
                                          ∈
                                          B
                                       
                                    
                                    
                                       {
                                       
                                          d
                                          
                                             (
                                             
                                                a
                                                ,
                                                b
                                             
                                             )
                                          
                                       
                                       }
                                    
                                 
                                 }
                              
                              
                           
                        
                     
                  

where


                     a and b are points belonging to contours A and B respectively


                     
                        
                           d
                        
                        
                           (
                           
                              a
                              ,
                              b
                           
                           )
                        
                     =Euclidean distance between the points a and b.

The proposed methodology for automatic initialization of active contour is illustrated with an axial, sagittal and coronal image of spine. Sagittal plane of spine is mostly used for identifying fracture and herniation. The axial slice helps in maneuvering through the boundary of vertebrae. The coronal slice gives the cut section by dividing the spine into anterior and posterior segments. 
                        Fig. 6a shows an axial spine image (also referred to as Case 1) along with the identified fuzzy corners. The concave hull is formed with the fuzzy corners as input and the same is shown in the figure using yellow colored contour. The α hull closely binds the ROI enabling the ACM to evolve efficiently. The final converged contour from ACM is shown in Fig. 6b. The results of automatic segmentation process using fuzzy corners and α hull on sagittal and coronal spine image are shown in 
                        Fig. 7. Some of the axial images of spine segmented using the proposed method is provided in Appendix A.1 for illustration.

The average number of iterations taken for the axial dataset is 20 (approximately 8s for each slice) when executed on a 64-bit system with 8GB RAM and Intel(R) Xeon(R) processing unit with 3.2GHz processor.

The contour initialization with the conventional Harris corner, SUSAN corner detector and the proposed fuzzy corners is analyzed for its closeness to the final ground truth segmentation. The CT image along with the identified corners from the above said detectors and the initial contour based on α hull is shown in 
                        Fig. 8a, b and c respectively. Corners are marked in green crosses and contours are marked yellow.

On several medical images used for the current study, it is observed that the Harris and SUSAN corner method detected corners beyond the ROI while fuzzy corners are located intact within the ROI. This is due to associated muscles from the abdominal region surrounding a vertebra and void spaces attracting corner points. But the fuzzification strategy proposed in this work effectively prevents the corners from deviating. Efficiency of corner detection is evaluated using proximity of the region in which corners are detected to the ground truth segmentation. A percentage measure of the true positive cases is plotted against the image slice number for all the images considered in this study as shown in 
                        Fig. 9. A true positive is defined as the number of corners occupying the ROI. It is observed that fuzzy corners concede around 80% of true corners for the slices considered, thus performing better than other corner detectors.

A statistical analysis of ACM evolution based on the initial contour created using various corner detectors is performed and the results are presented in the form of box plot in 
                        Fig. 10. The evaluation metrics (DC, HD) of the finally evolved ACM contour are used for analysis. In essence, fuzzy corners are more adept to the image characteristics and hence give relatively better initial guess allowing the ACM to converge. In majority of the slices, Harris or SUSAN corners fail to achieve desired segmentation despite using a high iteration count.

In order to compare the efficiency of corner detectors to construct the initialization for ACM, elapsed time (or number of ACM iteration) taken to achieve a preset values of DC and HD is analyzed. 
                        Fig. 11 plots the number of slices reaching a preset value of DC (=0.8) and HD (=6) as iterations proceed in ACM initialized by different corner detectors. It is observed in fuzzy corner based initialization that maximum number of slices attain the preset DC or HD values for any iteration. Further it is noticed that preset value of HD and DC are not achieved for all the slices even after 30 iterations using Harris or SUSAN corner. The initial contours based on the fuzzy corners provide consistently higher values of DC and lower values of HD throughout all cases indicating a closer estimation to the final intended contour.

The performance of ACM with contour initialization using the proposed method of fuzzy corners and α hull is compared with various other initialization schemes. The initialization schemes considered for comparison are manual initialization using bounding box of ROI and an elliptical enclosure. The proposed initialization is also compared with convex hull initialization of fuzzy corners. CT image along with the various initialization schemes for Case IV is shown in 
                        Fig. 12. The initial contours are shown in red color. The ACM is allowed to evolve for fifty iterations in the initial contours. The evolved final contours in the respective images are shown in blue color. Other initialization for ACM results in poor segmentation of intended ROI as it encloses muscular regions. 
                        Fig. 13 shows the DC and HD for the evolving contours in the initialization methods considered. The ACM runs corresponding to the proposed initialization, converges to the final intended contour within ten iterations. It could be consistently observed that the number of iterations required for segmenting the image is considerably less for the proposed method as compared to existing initializations which even failed to converge to the intended segmentation for several images. Additionally, ACM with other initialization schemes failed to converge to the intended segmentation for several images.

Computational time taken for the segmentation process using the proposed method is analyzed by dividing the time taken into 4 intervals namely; time elapsed during the computation of (1) cornerness metric (2) Fuzzy corner (3) Alpha hull (4) Active contour evolution. 
                        Fig. 14 shows the statistical analysis of the time expended for all the datasets considered in the study.

It is observed that the mean time taken for computing the cornerness metric (Harris corner scheme) falls under 1s while fuzzification process takes around 0.09s. The mean time for hull formation is 0.93s followed by the evolution of contour (ACM) which takes another 8s. Hence, it is appreciated that, the fuzzy corner based initialization incurs only 10% of ACM׳s evolution cost and this additional cost guarantees good segmentation as demonstrated in previous sections.

Medical images like CT images are prone to noise, outliers and artifacts that affect the performance of any segmentation method. Performance of the proposed method using fuzzy corners and contour initialization with α hull is analyzed for images with noise. The image noise in CT can be modeled using a Gaussian noise with zero mean and a varying set of variances [39]. A set of experiments is carried out to study the effect of noise on the functioning of ACM with the proposed contour initialization. Gaussian noise with zero mean and variance up to 0.15 are added to the CT image corresponding to Case I. The CT image of the axial spine with Gaussian noise level of 0.09 variance is shown in 
                        Fig. 15a. Results of segmentation of the noisy image using global thresholding, ACM with initial contour created using α hull based on Harris corners and fuzzy corners are shown in Fig. 15 d–f. It is noted from Fig. 15d that, thresholding process becomes highly unstable when the image is corrupted by noise. These effects are likely to worsen with increase in noise level because the pixels do not possess their respective intensity levels. While thresholding methods are intended to play with the intensity values irrespective of the spatial characteristics, occasionally, it results in losing the pixels located within the ROI. Also under varying illumination conditions, thresholding is inept to provide viable results. The ability to detect corners is not compromised with the proposed fuzzy corner detection method (Fig. 15c) as the ACM converges to the final intended segmentation (Fig. 15f), whereas the corner detection ability of Harris scheme is severely affected in the presence of noise (Fig. 15b)which highly influences the Harris corner metric. In the present study it is found that a Gaussian noise level with variance above 0.02 distorts this metric intensely and the ACM initialized with contours based on the detected corners hardly converge to ground truth segmentation (Fig. 15e).

Convergence of ACM with the proposed contour initialization method for various Gaussian noise levels (with zero mean) is shown in 
                        Table 2. DC for the initial contour and the final converged contour at various noise levels are tabulated. With increase in noise level, DC of the initial contour decreases which is an indication to additional spurious corners. It is understood that though there is a compromise in the corner detection ability, proposed method based on fuzzification of corner metric performs better than Harris scheme.

Number of iterations taken for convergence of ACM also increases with the increase in noise level. However, beyond Gaussian noise variance level of 0.15, convergence fails and the absolute error increases as shown in 
                        Fig. 16. Besides this, the figure provides absolute error calculated for convex and manual method of segmentation. It is observed that the fuzzy corner based α hull initialization enables ACM to converge even in the presence of noise. Despite using the statistical information for curve evolution, Zhang et al. [10] model fails to segment ROI from spine images. However, with the proposed method, the ACM is able to produce satisfactory results over a wide range of noise.

@&#CONCLUSION@&#

Segmenting regions from medical images is an involved process for various reasons. Deformable contours provide an almost accurate dissection of ROI from background owing to their ability to constrict or expand upon external constraints. The reliability of such segmentation can only be guaranteed if the initial contour is close enough to the interest segment. To ensure good results, manual setting has so far been the only viable option which increases the fatigue of clinical users. To facilitate a smooth and less intensive segmentation, a novel method of automatic contour initialization for ACM is presented in this study.

The proposed method uses a fuzzified corner metric based on image intensity to identify the feature markers enclosed by the contour. A concave shape approximating the boundary of these fuzzy corner points is obtained using α hull to give the initial contour for the ACM. The proposed method is evaluated against conventional feature detectors namely the Harris corner and SUSAN corner detection using the similarity indices (DC and HD). It can be inferred from the mean and SD values of DC(0.92116, 0.06323) and HD(5.7619, 2.3606) that the proposed method outperforms other schemes in terms of segmentation accuracy. The additional computational cost is one order less than the cost of ACM evolution. The proposed technique is proven to perform robustly even in the presence of noise.

The future work foresees in extension of the method to various other medical imaging modalities. It might be challenging in case of soft tissue imaging methods where the feature extraction can pose a daunting task. The adaptability to all ACM techniques needs to be explored. We intend to investigate further on the functionality of the model for a spine MRI.

None declared.

Case studies involving axial spine images considered for segmentation are presented here. A comparison between the contour initialization for ACM with the proposed fuzzy corner method (figure A(a)) and Harris corner (figure A(b)) is illustrated. The color coding scheme are is as following; Green - Corner points; Red: Initial contour based on Alpha hull; Blue: Final contour after ACM evolution. (
                     Fig. A1)

@&#REFERENCES@&#

