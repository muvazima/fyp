@&#MAIN-TITLE@&#Texture descriptors by a fractal analysis of three-dimensional local coarseness

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           We propose a new method to extract features from texture images.


                        
                        
                           
                           The method combines a local with a global fractal-based analysis.


                        
                        
                           
                           It was assessed in the classification of well-known benchmark databases.


                        
                        
                           
                           The proposal outperformed other state-of-the-art and classical approaches.


                        
                        
                           
                           This local/global analysis is robust and useful for general purpose applications.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Pattern recognition

Fractal descriptors

Local connectivity

Image analysis

@&#ABSTRACT@&#


               
               
                  This work proposes a new method of extracting texture descriptors from digital images based on local scaling properties of the greyscale function using constraints to define connected local sets. The texture is first mapped onto a three-dimensional cloud of points and the local coarseness under different scales is assigned to each point p. This measure is obtained from the size of the largest “connected” set of points within a cube centred at p. Here, the “connected set” is defined as the set of points such that for each point in the local domain there is at least one other point at a distance smaller than a threshold t. Finally, the Bouligand–Minkowski fractal descriptors of the local coarseness of each pixel are computed. The classificatory power of the descriptors on the Brodatz, Vistex, UIUC and UMD databases showed an improvement over the results obtained with other well-known texture descriptors reported in the literature. The performance achieved also suggests possible applications to real-world problems where the images are best analysed as textures.
               
            

@&#INTRODUCTION@&#

There have been several fractal-based methods proposed for the analysis of complexity in images, including the analysis of image textures [1–7]. Fractal geometry in image analysis has also found practical applications in a number of areas [8–10,44,11–14].

In a “texture image”, the analysis is typically focused on the statistical and geometrical relations amongst pixel intensity patterns in different regions and scales. In this context, fractal analysis becomes a powerful tool to address the problem of measuring the complexity or the homogeneity of the texture across scales. A pattern can be expressed by certain type of homogeneity at a particular resolution and here is where fractal geometry provides a straightforward procedure to detect and relate such properties. Moreover, real world objects commonly have some degrees of intrinsic self-similarity and therefore they might be more suitably represented as approximations to fractal objects rather than to regular Euclidean ones. Some of the successful fractal-based approaches tested in this field include “multiscale fractal dimension” [15], multifractals [16] and “fractal descriptors” [17]. Particularly, the latter has demonstrated to be highly efficient for the discrimination of general textures [18–20,13,14,21].

Here, we propose an alternative way of extracting texture descriptors based on fractal geometry. The texture descriptors are computed using the Bouligand–Minkowski fractal descriptors [20] based on the local coarseness of each pixel [22,23] rather than on the image intensity values [20,17,19]. The proposed procedure performs a two-level complexity analysis. In the local domain, the coarseness describes the clustering (or homogeneity) of the pixel neighbourhood, while globally, the fractal descriptors represent the distribution of connectivities across the image. These two complementary types of information appear to be fundamental in describing and discriminating texture patterns at varying scales in a more straightforward way than other statistical or geometrical solutions proposed. Some advantages of the suggested approach are:
                        
                           •
                           A large number of real-world scenes (like those described by the textures analysed here) have fractal-like characteristics;

The “fractal properties” of textures are most often not homogeneous across scales as expected with ideal fractal objects but the fractal descriptors enable the quantification of such variability across the image;

The local coarseness provides information about pixel neighbourhoods, which is rather richer than pixel intensity alone.

The method performance was assessed on four well-known image databases (Brodatz [24], Vistex [25], UIUC [33] and UMD [16]) and the results were compared to other texture descriptors reported in the literature (Gabor [26], Fourier [27], Grey-Level Cooccurrence Matrix (GLCM) [28], Multifractal [16], Local Binary Patterns (LBP) [29], Soft-LBP [35], Fuzzy-LBP [36] and textons (VZ) [34]).

@&#RELATED WORKS@&#

Since the seminal work of Mandelbrot [42], several fractal-based methods have been proposed in the literature to analyse texture images, and particularly for the problem of texture classification. The most state-of-the-art and successful approaches can be essentially divided into three categories: texton-based, multifractals and fractal descriptors.

Texton (also called bag-of-words) methods follow the general scheme presented in [34]. The basic idea in this approach is to associate a vector of measures (texton or “word”) to each pixel or region of interest in the image and cluster them into a number of groups (dictionary). Therefore, for each image in the training and testing database, a model is built by using the histogram of pixels whose corresponding textons are closer to a particular group in the dictionary.

An example of texton-based fractal method is illustrated in [37], where the image is submitted to a filter bank as in [34] and the textons are estimated by the local fractal dimension of each filter response, computed by using the exponential relation between the sum of pixel intensities within a neighbourhood of the reference pixel and the radius of such neighbourhood. The remaining procedures are classical in texton-based methods [34], involving K-means clustering of textons and classification by nearest neighbours with 
                        
                           
                              χ
                           
                           
                              2
                           
                        
                      distance.

The second group of fractal-based methods includes the multifractal spectrum, which quantifies the distribution of a regularity parameter (the Holder exponent) within local neighbourhoods of each image pixel. In [40] and [16] the neighbourhood regularity is quantified by using a similar procedure to that employed in [37], that is, the power-law relation between the sum of the pixel intensities after Gaussian filtering within a neighbourhood and the radius of the neighbourhood. The image is therefore partitioned into subsets, based on the values of the local Holder exponents, and the texture features are given by the box-counting dimension of each subset.

A more elaborated method to compute the local regularity is described in [41], using wavelet leaders. A wavelet leader is the maximum response of a wavelet decomposition inside a scale-space neighbourhood, that is, the neighbourhood in this case is three-dimensional, including not only all the adjacent points in the decomposition level as usual, but also those correspondent points in neighbour scales in the wavelet pyramid. The use of wavelet leaders attenuates one of the main problems with wavelet transforms, which is the large number of small coefficients obtained for natural images. Another novelty in this method, compared to [16], is the use of a multi-orientation approach to the image, to overcome the orientation sensitivity of the wavelet transform. A more complete version, including an adaptation to dynamic textures can be found in [38].

Multifractal methods can be further divided into dense and sparse approaches. In dense methods, the Holder exponent is computed at each pixel in the image. This is the case of the above methods. Another strategy is the sparse approach, where the dimension is computed only over particular regions rather than over all the pixels as proposed in [39]. In that case, the orientation histograms of the scale-invariant gradient of the image is used to partition the image for the posterior computation of the multifractal spectrum.

Finally, the third category of fractal methods in texture classification is composed of the fractal descriptors, originally proposed in [17]. They employ the values of the power-law curve associated to the fractal modelling to provide the image features in a straightforward manner. One of the most investigated approaches in this category are the Bouligand–Minkowski descriptors [20], where the texture is mapped onto a three-dimensional cloud of points and all the points are simultaneously dilated by spheres with radius r. The descriptors are obtained from the total volumes of the dilated cloud with various values of r. More details are given in Section 4.2.2. These features have been used either directly [20] or after some post-processing procedure [19]. Another variant is described in [18], where the entropy of the fractal descriptors are computed under different scales to accomplish the classification task.

The proposed method can be considered as part of the third group, although the local connectivity can also be associated to the concept of local regularity as employed in the multifractal spectrum. In a sense, it is similar to the multifractal approach, as both rely on a two-layer analysis: first, a local quantification of regularity (here expressed by the connectivity dimension), and second, a global distribution of such property. However, our proposal replaces the box-counting dimension of partition sets by the Bouligand–Minkowski descriptors. Such descriptors provide a more descriptive representation as, more than estimating the local dimension in the spatial domain of the image, they also reveal how the local regularity behaves across multiple scales. Moreover, the connectivity is also locally scale-invariant, which makes it a type of density function and allows the generation of descriptors robust to invariances in illumination changes, as discussed in [16].

A fractal is a mathematical object with self-similarity (i.e. parts are similar to the whole) and typically high complexity (i.e. persistence of distinguishable details at various scales).

Same as Euclidean geometry defines fundamental measures such as area and perimeter, fractal geometry defines its own measures, one of the most important being the “fractal dimension”. This measures how the complexity (or space occupation) of the object changes with changes of observational scale. Its value can be obtained from the general expression:
                        
                           (1)
                           
                              D
                              =
                              
                                 lim
                                 
                                    ϵ
                                    →
                                    0
                                 
                              
                              ⁡
                              
                                 
                                    log
                                    ⁡
                                    (
                                    M
                                    (
                                    ϵ
                                    )
                                    )
                                 
                                 
                                    log
                                    ⁡
                                    (
                                    ϵ
                                    )
                                 
                              
                              ,
                           
                        
                      where 
                        M
                        (
                        ϵ
                        )
                      is a self-similarity measure which grows with the scale ϵ following a power law.

Despite mathematical fractals being ideal constructs, many seemingly self-similar and complex objects are easily found in the real world. In this context, there is vast literature on modelling real-world problems through fractal geometry and quantifying important properties using fractal dimensions. Applying fractal theory to digitised images requires to redefine the fractal dimension in a discrete and finite space, and several methods have been developed for this purpose [30,31]. Two of these will be discussed below, the Bouligand–Minkowski and local connected dimension.

This method estimates the dimension of binary objects, but it can be straightforwardly extended to grey-level textures [20].

The grey-level image is considered as a cloud of points in the three-dimensional Euclidean space, such that a pixel in the coordinate 
                           (
                           x
                           ,
                           y
                           )
                         and with intensity z is mapped onto a point with coordinates 
                           (
                           x
                           ,
                           y
                           ,
                           z
                           )
                        . Then, each point in the cloud is morphologically dilated by spheres with radius r and the volume 
                           V
                           (
                           r
                           )
                         of the dilated cloud is computed. The dimension is given by:
                           
                              (2)
                              
                                 D
                                 =
                                 3
                                 −
                                 α
                                 ,
                              
                           
                         where α is the slope of the linear regression of 
                           log
                           ⁡
                           (
                           V
                           (
                           r
                           )
                           )
                         on 
                           log
                           ⁡
                           (
                           r
                           )
                        .

The Local Connected Dimension [22] has been applied to binary images. As shown in Section 4 we use an adapted version for grey-scale images. This consist of computing a local dimensional value relative to each possible position of the analysis, i.e. for each image pixel. Given a pixel p, within a local neighbourhood of size 
                           
                              
                                 r
                              
                              
                                 m
                                 a
                                 x
                              
                           
                        , its local dimension 
                           
                              
                                 D
                              
                              
                                 C
                              
                           
                           (
                           p
                           )
                         can be obtained by counting the number N of pixels connected (using, for example, 8-neighbour pixel connectivity in the plane) to p within a square window with side-length r always centred at p. When r is varied, the dimension is given by:
                           
                              (3)
                              
                                 
                                    
                                       D
                                    
                                    
                                       C
                                    
                                 
                                 (
                                 p
                                 )
                                 =
                                 
                                    
                                       α
                                    
                                    
                                       C
                                    
                                 
                                 ,
                              
                           
                         where 
                           
                              
                                 α
                              
                              
                                 C
                              
                           
                         is the slope of the linear regression of 
                           log
                           ⁡
                           (
                           N
                           (
                           r
                           )
                           )
                         on 
                           log
                           ⁡
                           (
                           r
                           )
                        .

While the fractal dimension has been shown to be useful in a variety of applications, it still is a single number, and this might be insufficient to model complex or heterogeneous objects. To take advantage of fractal geometry without being bound to a single number, the authors in [17] proposed using “fractal descriptors”, i.e. to use all the values from 
                           log
                           ⁡
                           (
                           M
                           (
                           ϵ
                           )
                           )
                         rather than their scaling relation. More specifically, they used the 
                           log
                           ⁡
                           (
                           V
                           (
                           r
                           )
                           )
                         curve from Bouligand–Minkowski dimension to provide powerful features for texture image. These features can be used directly, after transformation, or combined (for instance, using different colour channels [21] or image windows [18]) and have been successfully used in texture analysis [18–20,13,14,21].

@&#PROPOSED METHOD@&#

We propose a new method to compute fractal descriptors based on adapting the local connectivity concept to grey-level images to describe local patterns in images. Such adaptation essentially consists of mapping the image onto a three-dimensional cloud (considering the grey-level of the pixel as the third dimension) and replacing the concept of “adjacency” by that of “an Euclidean distance smaller than a threshold”.

The local fractal dimension has been used before to estimate the structure of binary sets. This is based on the local scaling of mass (binary pixels) using the mass-radius dimension and repeating the analysis to small regions, relative to a centre point position which can be repeated for many (or all) possible positions in an image. This method can be constrained to “local connected set” rather than just local sets by considering only the mass that is “locally connected” to the origin of the analysis. Such an approach was successfully applied in [22] to characterise the structure of retinal vessel patterns and to cancer and pre-cancer invasive patterns [9]. That approach, however, can be modified to accommodate non-binary sets (i.e. other image types). Here we consider the scaling of pixel intensities in grey-scale images as if they were embedded in a three-dimensional Euclidean space defined by the image coordinates and the intensity scale.

Based on this approach, the connectivity concept can be redefined by replacing the adjacency contact relation with a new connectedness property based on a three-dimensional Euclidean distance satisfying a predefined threshold.

To achieve this, the grey-level image 
                           I
                           :
                           [
                           1
                           ,
                           M
                           ]
                           ×
                           [
                           1
                           ,
                           N
                           ]
                           →
                           ℜ
                         is mapped into a cloud of points S in a three-dimensional Euclidean space, such that each x and y coordinate pairs are the coordinates of each pixel and the z coordinate is the respective pixel intensity.
                           
                              (4)
                              
                                 S
                                 =
                                 {
                                 (
                                 x
                                 ,
                                 y
                                 ,
                                 z
                                 )
                                 |
                                 I
                                 (
                                 x
                                 ,
                                 y
                                 )
                                 =
                                 z
                                 }
                              
                           
                        
                     

Following the mapping, a connectivity measure is computed for each point p in the cloud by considering a cube 
                           
                              
                                 C
                              
                              
                                 p
                              
                              
                                 r
                              
                           
                         with side-length r centred at the point:
                           
                              (5)
                              
                                 
                                    
                                       C
                                    
                                    
                                       p
                                    
                                    
                                       r
                                    
                                 
                                 =
                                 {
                                 (
                                 x
                                 ,
                                 y
                                 ,
                                 z
                                 )
                                 |
                                 x
                                 ∈
                                 [
                                 
                                    
                                       x
                                    
                                    
                                       p
                                    
                                 
                                 −
                                 r
                                 ,
                                 
                                    
                                       x
                                    
                                    
                                       p
                                    
                                 
                                 +
                                 r
                                 ]
                                 ,
                                 y
                                 ∈
                                 [
                                 
                                    
                                       y
                                    
                                    
                                       p
                                    
                                 
                                 −
                                 r
                                 ,
                                 
                                    
                                       y
                                    
                                    
                                       p
                                    
                                 
                                 +
                                 r
                                 ]
                                 ,
                                 ∈
                                 [
                                 
                                    
                                       z
                                    
                                    
                                       p
                                    
                                 
                                 −
                                 r
                                 ,
                                 
                                    
                                       z
                                    
                                    
                                       p
                                    
                                 
                                 +
                                 r
                                 ]
                                 }
                              
                           
                        
                     

The connectivity measure 
                           
                              
                                 M
                              
                              
                                 p
                              
                              
                                 r
                                 ,
                                 t
                              
                           
                         is given by the number of points inside 
                           
                              
                                 C
                              
                              
                                 p
                              
                              
                                 r
                              
                           
                         and connected to p. Given that the concept of connectivity in three dimensions is not so straightforward as in two, here a connectivity based on Euclidean distances is employed. In this context, the set 
                           
                              
                                 C
                              
                              
                                 p
                              
                              
                                 r
                                 ,
                                 t
                              
                           
                         of points connected to p is a subset of points within 
                           
                              
                                 C
                              
                              
                                 p
                              
                              
                                 r
                              
                           
                         such that each element has at least one other point at a distance smaller than t within the cube.
                           
                              (6)
                              
                                 
                                    
                                       C
                                    
                                    
                                       p
                                    
                                    
                                       r
                                       ,
                                       t
                                    
                                 
                                 =
                                 {
                                 p
                                 }
                                 ∪
                                 {
                                 
                                    
                                       p
                                    
                                    
                                       i
                                    
                                 
                                 |
                                 
                                    
                                       p
                                    
                                    
                                       i
                                    
                                 
                                 ∈
                                 
                                    
                                       C
                                    
                                    
                                       p
                                    
                                    
                                       r
                                    
                                 
                                  and 
                                 ∃
                                 
                                    
                                       p
                                    
                                    
                                       j
                                    
                                 
                                 ∈
                                 
                                    
                                       C
                                    
                                    
                                       p
                                    
                                    
                                       r
                                    
                                 
                                 |
                                 D
                                 (
                                 
                                    
                                       p
                                    
                                    
                                       i
                                    
                                 
                                 ,
                                 
                                    
                                       p
                                    
                                    
                                       j
                                    
                                 
                                 )
                                 <
                                 t
                                 }
                                 ,
                              
                           
                         where D is the three-dimensional Euclidean distance.

An optimised algorithm to find the connected components maps the points in the cube into a non-weighted graph 
                           G
                           (
                           V
                           ,
                           E
                           )
                         such that:
                           
                              (7)
                              
                                 v
                                 ∈
                                 V
                                  iff 
                                 
                                    
                                       p
                                    
                                    
                                       v
                                    
                                 
                                 ∈
                                 
                                    
                                       C
                                    
                                    
                                       p
                                    
                                    
                                       r
                                    
                                 
                                 ,
                              
                           
                        
                        
                           
                              (8)
                              
                                 
                                    
                                       e
                                    
                                    
                                       i
                                       ,
                                       j
                                    
                                 
                                 ∈
                                 E
                                  iff 
                                 {
                                 
                                    
                                       p
                                    
                                    
                                       i
                                    
                                 
                                 ,
                                 
                                    
                                       p
                                    
                                    
                                       j
                                    
                                 
                                 }
                                 ⊆
                                 
                                    
                                       C
                                    
                                    
                                       p
                                    
                                    
                                       r
                                    
                                 
                                  and 
                                 D
                                 (
                                 
                                    
                                       p
                                    
                                    
                                       i
                                    
                                 
                                 ,
                                 
                                    
                                       p
                                    
                                    
                                       j
                                    
                                 
                                 )
                                 <
                                 t
                                 ,
                              
                           
                         and then searches for the connected component of 
                           G
                           (
                           V
                           ,
                           E
                           )
                         that includes p.

The connectivity measure 
                           
                              
                                 M
                              
                              
                                 p
                              
                              
                                 r
                                 ,
                                 t
                              
                           
                         is given by the size (number of vertices) of the connected component 
                           
                              
                                 C
                              
                              
                                 p
                              
                              
                                 r
                                 ,
                                 t
                              
                           
                        . Fig. 1
                         illustrates the connected components in two dimensions to facilitate visualisation. Fig. 1(a), (b), (c) and (d) show the steps for a window (two-dimensional version of the cube) with growing length r. In each iteration the border of the current window is highlighted in black. Inside the current window all the points at a distance smaller than t are connected by an edge. Such process generates a graph with multiple connected components. The points taking part into the connected component that contains the centre pixel p are painted red. The connectivity of p (for each r) is given by the number of red points inside the respective window.

In a similar way to the analysis of binary images, to characterise the scaling of local connectivity in grey-scales, a local Holder exponent can be computed by:
                           
                              (9)
                              
                                 α
                                 (
                                 p
                                 )
                                 =
                                 
                                    lim
                                    
                                       r
                                       →
                                       0
                                    
                                 
                                 ⁡
                                 
                                    
                                       log
                                       ⁡
                                       (
                                       
                                          
                                             M
                                          
                                          
                                             p
                                          
                                          
                                             r
                                             ,
                                             t
                                          
                                       
                                       )
                                    
                                    
                                       
                                          log
                                       
                                       (
                                       r
                                       )
                                    
                                 
                                 .
                              
                           
                         Given that the range of r cannot be made large enough to estimate the relation with confidence, the limit loses part of its significance and the coarse (or coarse-grained) Holder exponent [23] arises as a more interesting measure. This is given by:
                           
                              (10)
                              
                                 
                                    
                                       α
                                    
                                    
                                       r
                                    
                                 
                                 (
                                 p
                                 )
                                 =
                                 
                                    
                                       log
                                       ⁡
                                       (
                                       
                                          
                                             M
                                          
                                          
                                             p
                                          
                                          
                                             r
                                             ,
                                             t
                                          
                                       
                                       )
                                    
                                    
                                       
                                          log
                                       
                                       (
                                       r
                                       )
                                    
                                 
                                 .
                              
                           
                        
                     

The threshold t is an empirically pre-defined value. After computing 
                           
                              
                                 α
                              
                              
                                 r
                              
                           
                         for each pixel, the procedure ends up with a matrix of values 
                           
                              
                                 M
                              
                              
                                 
                                    
                                       α
                                    
                                    
                                       r
                                    
                                 
                              
                           
                         for each r. Here, the values of r were varied between 1 and 6, with t ranging between 1 and 10.

Finally, the Bouligand–Minkowski fractal descriptors are computed over each one of the six matrices 
                           
                              
                                 M
                              
                              
                                 
                                    
                                       α
                                    
                                    
                                       r
                                    
                                 
                              
                           
                         (one for each value of r) and concatenated to provide the final texture descriptors.

The procedure to compute the Bouligand–Minkowski descriptors of each matrix consists of two steps. First, each point in the matrix is mapped onto a three-dimensional cloud of points. Second, all the points in the cloud are simultaneously dilated by a sphere with radius r and the total volume 
                           V
                           (
                           r
                           )
                         of the dilated cloud is computed. The descriptors correspond to the values of 
                           V
                           (
                           r
                           )
                         when r ranges within a pre-defined range. More details are given in the following.

At first, the real-valued matrix 
                           
                              
                                 M
                              
                              
                                 
                                    
                                       α
                                    
                                    
                                       r
                                    
                                 
                              
                           
                           :
                           [
                           1
                           ,
                           W
                           ]
                           ×
                           [
                           1
                           ,
                           H
                           ]
                           →
                           ℜ
                        , where W is the width and H the height of the matrix, is mapped onto a three-dimensional cloud of points C. Such mapping is obtained by associating each point in 
                           
                              
                                 M
                              
                              
                                 
                                    
                                       α
                                    
                                    
                                       r
                                    
                                 
                              
                           
                         with coordinate 
                           (
                           x
                           ,
                           y
                           )
                           ∈
                           (
                           [
                           1
                           ,
                           W
                           ]
                           ×
                           [
                           1
                           ,
                           H
                           ]
                           )
                         and such that 
                           M
                           (
                           x
                           ,
                           y
                           )
                           =
                           z
                        , 
                           z
                           ∈
                           ℜ
                        , with a point with coordinates 
                           (
                           x
                           ,
                           y
                           ,
                           z
                           )
                           ∈
                           C
                        .

In the following, each point in C is dilated by a radius r, and the total volume 
                           V
                           (
                           r
                           )
                         of the dilated cloud is computed. In practice, all the points are replaced by a sphere with radius r and, depending on the value of r and the distance among the points in the cloud, such spheres can touch and merge. Therefore, the total dilated volume is not just the sum of the volumes of the individual spheres, but it encloses relevant information about the distribution of points in the cloud and, as a consequence, the distribution of 
                           
                              
                                 α
                              
                              
                                 r
                              
                           
                         in M.

Particularly, when 
                           V
                           (
                           r
                           )
                         is analysed within a range of values of r, it provides a useful insight about the homogeneity of 
                           
                              
                                 α
                              
                              
                                 r
                              
                           
                        . If such distribution is homogeneous, the cloud C is regular and the curve 
                           log
                           ⁡
                           r
                           ×
                           log
                           ⁡
                           V
                           (
                           r
                           )
                         is similar to a straight line. If, on the other hand, such coefficients are distributed in an irregular way on M, there is a larger number of values of r for which new collisions arise and thus the log–log curve is more irregular as well. Such behaviour of 
                           V
                           (
                           r
                           )
                         is what makes it appealing to summarise the information expressed by the local coarseness.

The total volume 
                           V
                           (
                           r
                           )
                         of the dilated cloud corresponds to the number of points pertaining to the union of spheres 
                           B
                           (
                           p
                           ,
                           r
                           )
                         centred at each point 
                           p
                           ∈
                           C
                         with radius r:
                           
                              (11)
                              
                                 V
                                 (
                                 r
                                 )
                                 =
                                 
                                    ∑
                                    
                                       
                                          p
                                       
                                       
                                          ′
                                       
                                    
                                 
                                 
                                    
                                       1
                                    
                                    
                                       U
                                    
                                 
                                 (
                                 
                                    
                                       p
                                    
                                    
                                       ′
                                    
                                 
                                 )
                                 ,
                              
                           
                         being 1 the indicator function (
                           
                              
                                 1
                              
                              
                                 U
                              
                           
                           (
                           
                              
                                 p
                              
                              
                                 ′
                              
                           
                           )
                           =
                           1
                         if 
                           
                              
                                 p
                              
                              
                                 ′
                              
                           
                           ∈
                           U
                         and 0, otherwise) and
                           
                              (12)
                              
                                 U
                                 =
                                 
                                    ⋃
                                    
                                       p
                                       ∈
                                       C
                                    
                                 
                                 B
                                 (
                                 p
                                 ,
                                 r
                                 )
                                 .
                              
                           
                        
                     

In practice, an efficient way to compute 
                           V
                           (
                           r
                           )
                         is by using the Euclidean Distance Transform (EDT), given that the set 
                           B
                           (
                           p
                           ,
                           r
                           )
                         in the above expression contains the points at a distance at most r from p. In a three-dimensional space, the EDT of a point 
                           
                              
                                 p
                              
                              
                                 ′
                              
                           
                         is provided by:
                           
                              (13)
                              
                                 
                                    EDT
                                 
                                 (
                                 
                                    
                                       p
                                    
                                    
                                       ′
                                    
                                 
                                 )
                                 =
                                 
                                    min
                                    
                                       p
                                       ∈
                                       C
                                    
                                 
                                 ⁡
                                 (
                                 
                                    dist
                                 
                                 (
                                 p
                                 ,
                                 
                                    
                                       p
                                    
                                    
                                       ′
                                    
                                 
                                 )
                                 )
                                 ,
                              
                           
                         where 
                           
                              dist
                           
                           (
                           p
                           ,
                           
                              
                                 p
                              
                              
                                 ′
                              
                           
                           )
                         is the Euclidean distance between the points. More details on methods to compute the EDT efficiently can be found in [43].

The Bouligand–Minkowski descriptors 
                           D
                           (
                           u
                           )
                         are obtained by computing the EDT over all points within a region of interest around C. Those EDT values are thus increasingly sorted into a vector o and the descriptors correspond to the logarithm of the cumulated number of points 
                           
                              
                                 p
                              
                              
                                 ′
                              
                           
                         such that 
                           
                              EDT
                           
                           (
                           
                              
                                 p
                              
                              
                                 ′
                              
                           
                           )
                           ≤
                           o
                           (
                           u
                           )
                        :
                           
                              (14)
                              
                                 D
                                 (
                                 u
                                 )
                                 =
                                 log
                                 ⁡
                                 
                                    [
                                    
                                       ∑
                                       
                                          i
                                          =
                                          1
                                       
                                       u
                                    
                                    δ
                                    (
                                    
                                       EDT
                                    
                                    (
                                    
                                       
                                          p
                                       
                                       
                                          ′
                                       
                                    
                                    )
                                    −
                                    o
                                    (
                                    u
                                    )
                                    )
                                    ]
                                 
                                 ,
                              
                           
                         where δ is the unit response function (
                           δ
                           (
                           x
                           )
                           =
                           1
                        , if 
                           x
                           =
                           0
                        , and 
                           δ
                           (
                           x
                           )
                           =
                           0
                        , otherwise). The index u corresponds to the non-negative values of the EDT within the region of interest. For example, for 
                           r
                           ≤
                           2
                         there are 4 possible values for u (
                           1
                           ,
                           
                              2
                           
                           ,
                           
                              3
                           
                            and 
                           2
                        ), and thus 4 descriptors are computed. Here we use 
                           r
                           ≤
                           10
                        , providing 85 descriptors.

As the number of descriptors can become very large in most cases, a Principal Component Analysis is performed after the concatenation. The following algorithm express each step in a pseudo-code language, while Fig. 2
                         synthesises these steps on a diagram. That diagram shows the steps involved in the proposed method, sequentially from top to bottom. First of all, a grey level image is depicted, following by the matrices 
                           
                              
                                 M
                              
                              
                                 
                                    
                                       α
                                    
                                    
                                       r
                                    
                                 
                              
                           
                        , represented as intensity images for r between 1 and 6. After that, the Bouligand–Minkowski descriptors are computed for each previous matrix, providing the exhibited log–log curves. Finally, at the bottom, the Bouligand–Minkowski descriptors are concatenated and submitted to a Principal Component Analysis with the aim of reducing the dimensionality. It is worth noting that 
                           
                              
                                 M
                              
                              
                                 
                                    
                                       α
                                    
                                    
                                       r
                                    
                                 
                              
                           
                         behaves like a multiscale transform over the texture where increasing values of r gradually “smooth” details, since points falling inside a same cube are expected to have similar Holder coarseness.
                           
                              
                           
                        
                     


                        Fig. 3
                         shows how the proposed descriptors can precisely classify some textures from Brodatz database. Even with only a few PCA scores the classes can be distinguished. It is still worth stressing that although using more components causes the curves approximate each other, as they less contribute to the variability, those components when put together allow higher precision when managed by efficient classifiers. Such promising results are consequence of combining the measure of complexity under different perspectives: the first (Holder coarseness) more local and focused on the pixel neighbourhood, the second (Bouligand–Minkowski) more global, expressing how the topology of the texture is defined. The complementary information given by both provides a richer method to well characterise even the most complex and irregular textures.

@&#EXPERIMENTS@&#

The performance of our approach was tested against other well-known texture descriptors to classify four benchmark databases (Brodatz [24], Vistex [25], UIUC [33] and UMD [16]).

The Brodatz database is a collection of grey-scale images from photos of an architectural textures book [24]. One hundred and eleven images were used, with each one being split into 16 non-overlapping windows, resulting in 111 classes with 16 samples each.

The Vistex database is a classical texture image collection [25] composed by colour images with different resolutions. Images of size 
                        512
                        ×
                        512
                      pixels were converted to grey-level textures and split into 16 non-overlapping windows, resulting in 54 classes with 16 samples each.

For the UIUC database we use a more recent version employed in [33], composed by 25 classes with 40 grey-level samples per class and each sample has a resolution of 
                        256
                        ×
                        256
                      pixels.

The forth database is UMD [16], composed by 25 classes with 40 grey-level images in each one and each image has a high resolution of 
                        1280
                        ×
                        960
                     . To speed up the computation, here a downsampled version was employed and each image has a 
                        256
                        ×
                        192
                      resolution.

The total number of descriptors depends on the maximum radius of the Bouligand–Minkowski dilation. Table 1
                      shows this relation, although in most cases, a reduced number of descriptors were enough to obtain the success rates reported here. The numbers used in practice are discussed in Section 6.

The descriptors were computed for each image and the results were compared (in terms of precision over a cross-validation classification of each database) with other classical and state-of-the-art approaches, to know, (Gabor [26], Fourier [27], Grey-Level Cooccurrence Matrix (GLCM) [28], Multifractal [16], Local Binary Patterns (LBP) [29], Soft-LBP [35], Fuzzy-LBP [36] and textons (VZ) [34]).

The classification was carried out through a Linear Discriminant Analysis using a 10-fold scheme for cross-validation [32]. The precision (named “Success Rate” in Results section), in this case, corresponds to the average percentage of images correctly classified in each round of the cross-validation procedure, according to the ground-truth provided by each database.

@&#RESULTS AND DISCUSSIONS@&#

The cube side-lengths considered to compute the connected components and therefore the Holder exponent were fixed between 1 and 6, as greater values became computationally unfeasible on standard hardware. For the threshold t, larger values were thought to provide more information as they produced larger components, however, distances greater than 10 were, again, computationally costly. Moreover, the use of larger values of t tends to make the coarseness measures quite similar along the neighbourhood and such local homogeneity would impair the ability of fractal descriptors to detect small-scale patterns in the texture.

The remaining variable to establish was the dilation radius in the Bouligand–Minkowski analysis. Table 2
                         shows the success rates of classification (as a percentage) for a number of dilation radii and the number of fractal descriptors generated for Brodatz data set. This was done to identify radii values providing best performance with a minimum number of descriptors (and avoid over-training issues such as dimensionality curses).

The same test and results on the Vistex database are shown in Table 3
                        , for UIUC in Table 4
                         and for UMD in Table 5
                        .

From the results above, we concluded that 6 was a reasonable value for the dilation radius as it produces a number of descriptors similar to those used in other established methods while outperforming them in the rates of classification obtained.

The graphs and tables below show the results obtained by the proposed method as well as the performance of other approaches. Fig. 4
                         shows the success rates on the Brodatz database according to the number of descriptors used. Most methods show a rapid increase in the correct classification rates as the number of descriptors increase, then reaching a stability level. While our method does not produce the best performance with few descriptors it shows the best performance when these are 25. Furthermore the performance increase appears to be smoother than for the other methods, too.


                        Table 6
                         shows the best classification results achieved for each method in the previous graph, the number of descriptors necessary to reach such rate and the associated cross-validation error. Except for the classical Fourier approach, the other methods have similar performances (around 86%), while however our proposed method achieved nearly 92% (a notable improvement, given the size and complexity of the textures database).


                        Fig. 5
                         shows another very useful and helpful way of evaluating the performance of a classifier, i.e., the confusion matrix. This diagram aims to show the number of elements from the class A (expected) that were assigned to the class B (predicted). The elements that are correctly classified are represented in the diagonal, while the number of misclassified samples can be inferred from the outside. Here the values on the diagonal are expressed by grey-levels (the darker the point, the higher the number of samples), whilst those outside are depicted in red levels only to facilitate the visualisation. In this type of representation, an ideal classifier is expected to have the maximum possible of dark points on the diagonal and the minimum in the outside. In Fig. 5, as supposed, the best methods in this visual sense are LBP and the proposed descriptors. However, although they behave in a similar way in some cases like the confused samples around the class 40, the proposed fractal descriptors exhibits less dark red points confirming the higher correctness rate and identifying the classes where more or less samples can be distinguished.


                        Fig. 6
                         shows the classification rates for the Vistex database. The relative results are similar to those for Brodatz, although the curves here are more irregular; this is likely due to a more pronounced variation in patterns amongst the images.


                        Table 7
                         shows the percentage of images correctly classified in Vistex database. The reduced number of classes appears to benefit the performance of the methods, as the rates are greater than for the Brodatz database results. Again, the proposed method demonstrates its potential in the analysis of complex textures; the Vistex images contain a high level of heterogeneity caused by shadows, orientation, scale, etc. However, the combination of local and global multiscale analysis in the proposed method achieved about 94.5% correct classification.


                        Fig. 7
                         shows the confusion matrices for Vistex in the same scheme used for Brodatz. Despite the difference in appearance with the matrices for the analysis of the Brodatz textures (which have fewer classes, Fig. 5), the proposed descriptors correctly identifies more classes. Apart from the reduced number of red points, this also can be observed by a diagonal more continuous, with less grey gaps. Moreover, the classification errors are not concentrated at any specific classes, ensuring higher reliability to the method for a practical application.


                        Fig. 8
                        , Table 8
                         and Fig. 9
                         show the results for the classification of UIUC database, following the same scheme adopted for the previous databases, that is, success rate against number of descriptors, highest success rates and confusion matrices. An interesting point to be observed in this case is that methods like LBP and variants, which provided good results in the classification of Vistez and Brodatz, now present results below the average. The main cause of such discrepancy are the significant changes in viewpoint, scale and illumination conditions on UIUC samples. Approaches like classical LBP (and its variants) and GLCM focus their analysis on grey-levels and local neighbourhood, whereas their global descriptors are not complex and precise enough to identify a global change in albedo for example. On the other hand, multifractals and textons, using, respectively, local measures invariant to illumination and multiple types of filters, were capable of identify samples even when they are presented under different perspectives and distances from the observer. Finally, the proposed method again achieved the highest percentage of images correctly classified. Such performance is a consequence, as stated before, of the efficiency of combining two complementary local and global fractal analysis, addressing the respective variations amongst samples from the same class by means of descriptors that quantify the local regularity as well as the texture patterns at each scale instead of using only the pixel intensities or ambiguous global measures like histograms or fractal dimension.

Finally, Fig. 10
                        , Table 9
                         and Fig. 11
                         exhibit the results for the classification of UMD by the compared descriptors. A similar discussion to that for UIUC database is also valid here. In fact, UMD shares similarities with UIUC, mainly in their high variance of viewpoints and scales, in addition to the uncontrolled illumination conditions. The good results for multifractals was also expected since the database was proposed and employed in the corresponding paper [16]. Another observation is that in Fig. 10 multifractal descriptors outperformed the proposed method for a number of descriptors smaller than 50. This can also be explained by characteristics of the database and, particularly, by the complexity of the samples, containing, for instance, dozens of packets of wall anchors or tins of joint compound, each unit with complex labels attached. Even in this case, however, the proposed method provided the highest success rate when more than 80 descriptors were employed.

Based on these results, we conclude that the combination of fractal descriptors and local coarseness Holder exponent allows a rich and precise description of complex and heterogeneous textures. One advantage of our method is that it analyses two domains. The first one is local and provides measures of the clustering of pixel neighbourhoods while the second, deals with the distribution of the clustering across the image, giving a measure of its homogeneity. Moreover, computing the coarseness at different cube sizes makes this procedure a multiscale analysis. Furthermore, the fractal descriptors provide a detailed analysis in terms of the spatial distribution of such clustering measure.

We empirically identified that with regards to the local fractal measure of natural images, the connectivity itself can also be characterised as self-similar (as shown in [22]) while the Bouligand–Minkowski descriptors summarise how the variation of such self-similarity occurs at the different scales analysed [20,17].

The result of this double-level multiscale and fractal analysis (through fractal descriptors and the local coarseness, respectively) leads to a set of quantifiers that are perhaps more robust to abrupt texture variations. Such robustness is a consequence of two main points: firstly, the local dimension is taken over a neighbourhood, which attenuates the effect of a punctual irregularity (noise, for example) in the pixel and, secondly, the fractal descriptors capture relevant information at different scales and, hence, localised variations would not compromise the global performance of the descriptor to a large extent. The inherent multiscale procedure also retains information about different levels of details in the images, making possible a more precise and reliable classification.

@&#CONCLUSIONS@&#

We proposed a new method to extract texture descriptors from grey-level images by computing the Bouligand–Minkowski fractal descriptors from a matrix containing the coarseness Holder exponent (logarithm of the number of points connected to each pixel in the original image).

The method was applied to classify well-known databases and the performance compared to other classical and state-of-the-art texture analyses published in the literature. Our method outperformed all other analyses for the compared databases.

The results suggest that fractal descriptors and local coarseness exponent provide complementary information about the textures. While the coarseness index measures pixel clustering and consequently the neighbourhood homogeneity, the fractal descriptors provide a measure of the regularity of the distribution of Holder exponents, and consequently the distribution of patterns along scales. After removal of redundancies through PCA, the descriptors become a powerful tool to represent and describe complex textures.

@&#ACKNOWLEDGEMENTS@&#

Odemir Martinez Bruno gratefully acknowledges the financial support of CNPq (National Council for Scientific and Technological Development, Brazil) (Grant Nos. 307797/2014-7 and 484312/2013-8) and FAPESP (Grant No. 2011/01523-1). Joao Batista Florindo acknowledges support from FAPESP (The State of São Paulo Research Foundation) (Grant No. 2013/22205-3).

@&#REFERENCES@&#

