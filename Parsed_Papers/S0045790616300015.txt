@&#MAIN-TITLE@&#A combined image processing and Nearest Neighbor Algorithm tool for classification of incipient faults in induction motor drives

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           Incipient faults in Inverter of Induction motor drive are detected and classified.


                        
                        
                           
                           Concordia pattern is obtained from 3-phase output current of faulty inverter.


                        
                        
                           
                           Concordia pattern is converted to binary image.


                        
                        
                           
                           Shape context based Nearest Neighbor algorithm is used to classify the Concordia image.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

PWM induction motor drive

IGBT

Concordia pattern

Shape context

Incipient fault

Nearest Neighbor Algorithm

@&#ABSTRACT@&#


               Graphical abstract
               
                  
                     
                        
                           Image, graphical abstract
                           
                        
                     
                  
               
            

@&#INTRODUCTION@&#

Induction motors those are being extensively used in various industries have to often operate under harsh conditions, and thus can develop faults in different internal parts which include stator, rotor and bearings. These faults greatly hamper the performance of the machine and operation of the whole process. Early detection of these faults is of great concern to industries and they are thus abundantly investigated in different literatures [1–3]. In addition to such studies over internal motor faults, studies over the years have shown that in voltage-fed PWM inverter induction motor drives, the probability of fault in the drive itself is around 63% over the first 12 months of operation. It has been further observed that 70% of such drive faults are related to power electronics component failures such as IGBTs [4]. Three faults, namely open circuit faults [4,5], short circuit faults [6] and intermittent misfiring faults [7,8] are the most common types of faulty phenomenon in IGBTs. Monitoring any inverter fault involves measurement of electrical parameters at certain key points such as inverter pole voltage [9], collector-emitter voltage in lower switch [5], Gate voltage [10] and stator current trajectories [11]. Among all of them, however, analysis of stator current trajectory is found to be accurate, effective yet economically prudent technique. These stator current data are processed by different fault detection and diagnostic methods such as, current vector instantaneous frequency [12], Concordia stator mean current vector [7], Switching Function model [5], Modified normalized DC component method [13], Observer Based schemes [4], waveform and harmonic analysis [14] and Wavelet Transform [15]. In both Wavelet Transform with multi-resolution analysis [6] and Discrete Wavelet Transform [15], the fault information in the transformations are found and correlated with time of fault, thus discriminating faulty states. Among all these monitoring processes, it has been cited that analysis of Concordia pattern is quite successful in providing fault indicators for all the three most common motor drive related faults mentioned above. Further processing of the drive fault indicators have been done in the past with different artificial intelligent methods such as Model based schemes [4], Fuzzy logic [7] and Artificial Neural Network (ANN) [16].

Another type of inverter failure can be caused by partial break down of leads, improper soldering joints or connection problems which result in development of spurious resistance in series with the terminals of IGBTs. These parasitic developments can be attributed to various reasons that include:

                        
                           •
                           High frequency operation of switches creates temperature cycling in the soldering joints. This along with environmental stress and chemical pollution in industrial sites cause the joints to become resistive [17].

Differences in coefficients of expansion between the soldering materials, the connecting leads of IGBTs and the copper wires generate thermal stresses at different levels of loading, finally leading to deformation and deterioration of the joints.

Differences between di/dt in all switches of an inverter lead to different switching energies for different switches; causing thermal dissymmetry and ultimately affecting soldering joints of the power switches [18].

Unfortunately, such incipient faults have either been overlooked by previous researchers, or not given due importance because they were always considered to be of ‘minor’ in nature. However, early detection of such minor faults is of equal importance as they do not normally trip the protective devices. If remain undetected, they will cause overstressing of other IGBTs terminals causing catastrophic failure of the inverter. Again, severe torque ripples [19] also appear in motor operation leading to possible mechanical damage. Whereas, previous researchers have presented methods to identify major faults such as open circuit (OC), short circuit (SC), and misfiring of drive elements, main aim of the present contribution is to address the fourth type of fault in inverter, i.e. the one due to spurious resistance arising at IGBT terminals. Key features of the current research work are:

                        
                           •
                           Detection and classification of incipient faults in induction motor PWM drives.

Detection and classification of such faults when they occur simultaneously in more than one switch and at varying load levels.

Use of suitable data and image processing techniques for effective data reduction without sacrificing relevant fault information.

In the present work, three-phase line current profiles are recorded for a PWM inverter driving an induction motor under different faulty situations due to appearance of spurious resistances at IGBT drain terminals. The three-phase line currents are first converted to Concordia patterns as the first stage of data reduction. These Concordia patterns are then converted to binary images, discretized and relevant shape descriptors are derived there from. These shape descriptors are further processed by an artificial intelligent algorithm to identify and classify different faults. In the present diagnosis, Nearest Neighbor Algorithm is used as the classifier since it has been found to be very well suited for image classification [20,21] problems. The performance of the algorithm is also compared with two other related algorithms in the present work. It is pertinent to highlight here that objective of this work is however, not to emphasize performance of the classifier algorithm. Theoretically speaking any proven classifier including Artificial Neural Network (ANN), Fuzzy, Support Vector Machine (SVM), Nearest Neighbor Algorithm (NNA) could be used to perform the fault classification with comparable performance. The major challenge faced in this work has been to identify suitable features that could characterize a variety of minor incipient faults in drives and making those features immune to load variations. Encouraging results are obtained that demonstrate efficacy of the proposed scheme.

The remainder of this paper is organized as follows: Different faults in inverter are simulated in Section 2. Section 3 describes how data processing is done with the faulty inverter output current profiles. Sections 4 and
5 describe the fault classification algorithm used and the corresponding results. Finally, Section 6 summarizes contributions of the present study.

The simulation model used for this study has been developed in PSIM software that includes an open loop sinusoidal–PWM Voltage fed Induction motor drive as shown in Fig. 1
                     . Faults in the inverter have been simulated by adding spurious resistances to different IGBT terminals, as shown by R1 and R3 with T1 and T3 respectively in Fig. 1.
                  

The main aim of this work is to study incipient fault conditions of power switches rather than studying the drive performance. So the open loop configuration has been chosen over a closed loop one to avoid unnecessary circuit complications. Comparing with a practical induction motor of 1.5kW, 440V rating, parameters are set in the simulated scheme as detailed in Table 1.
                     
                  

To identify these faults, current sensors (A1, A2 and A3) are installed at the output lines of the three phase inverter to capture three-phase line current profiles. Fig. 2
                      shows the current profiles Ia, Ib and Ic in phase a, phase b, and phase c captured respectively by A1, A2 and A3. Though, apparently each current profile appears to be a continuous curve, it actually is a series of closely placed discrete points sampled at 40 micro-second intervals.

While creating faults, resistors values are so chosen, that the peak values of the faulty current profiles remain within the maximum value of the current rating of the motor. If this is not implemented, the unbalanced fault currents create excessive thermal stress within the machine winding causing insulation failure and in the long run the machine suffers from short circuit faults in its winding. The aim of the present work is to restrict the fault in the inverter switch junction area as spurious resistance only and further progression of faults in different zones is undesirable. In the present study, rms value of the current rating of motor is 2.6A as given in Table 1. So maximum value is √2×2.6 = 3.7A. Fig. 2 shows one such faulty case where R1 and R3 values are so chosen, that the peak values of fault currents are well within 3.7A. In a similar way, other faults are also created by choosing appropriate resistance values keeping this criterion into consideration. Detail discussion on spurious resistance values are given in [18].

Similar to Fig. 1, other classes of spurious resistances faults arising in different IGBT terminals are described in Table 2
                     . When spurious resistances are present in terminals of two IGBTs at a time, different severity levels are also considered. The ‘c’ and ‘v’ terms in the name of classes of faults indicate which of the two resistances involved in fault is kept constant, and which one is varied while performing a specific case study. For example, the fault class R1_c;R5_v, as shown in Table 2, indicates a study case where the resistance R1 has been kept constant while the resistance R5 has been varied. Both the two symbols ‘c’ and ‘v’ however, have also been used to describe severity levels of the spurious resistance. Three categories for both ‘c’ and ‘v’ have been defined which are [L, m, h] where L stands for low value (≥0Ω and ≤70Ω), m stands for medium value (≥50Ω and ≤200Ω), and h stands for high value (≥180Ω) resistances. In total, there are nine possible sub-classes of faults considering different levels of severity for the R1_c;R5_v class as shown in Fig. 3
                     . Note that with R1 kept at the constant ‘L’ level, R5 assumes three different severity values, L, m, and h. Then once again keeping R1 fixed at ‘m’ level, R5 assumes the three severity values, L, m, and h; and so on. Thus when a fault is represented as R1_m;R5_m, it means that the two spurious resistances are associated with the terminals of IGBTs T1 and T5 and their severity levels lie in the medium range. Therefore, with faulty terminals involving any two IGBTs, a total number of 15 (6C2) different fault classes are possible each having nine different severity levels, thus summing up to a total number of 135 (15 × 9) different faulty sub-classes.

For arousal of spurious resistances in terminals of three or more affected IGBTs simultaneously, only low severity levels are considered. Then there are 20 (6C3) faulty classes for three IGBTs, 15 (6C4) for four, 6 (6C5) for five and 1 for all the six IGBTs having their terminals affected simultaneously. In total, there are 135+20+15+6 + 1 = 177 classes of faults. For each of these classes of faults, 30 numbers of exemplars are artificially created by varying resistance values within the ranges mentioned above. Current patterns obtained from these exemplars are processed and are used to train an intelligent algorithm to identify and classify different unknown faults.

The proposed scheme is expected to identify fault progression at an early stage and prevent further spreading of the damage. When there are two IGBTs with affected terminals, the scheme also identifies different severity levels of the spurious resistances. It is because; according to the present study the overall faulty state of the inverter drive is considered to be still in the early stage. But in the case of simultaneous introduction of spurious resistances at terminals of more than two IGBTs, the method has been employed to identify the faults for low range resistances only. Higher spurious resistance values occurring at terminals of more than two IGBTs are considered advanced state faults and allowing the drive to reach such states can cause catastrophic failure of the whole system.

After the three line current signals Ia, Ib and Ic have been recorded, it is necessary to adopt certain effective data processing techniques that can substantially reduce the computational burden without losing any relevant information.

In three-phase induction motors, normally neutral wire connection is not present. Therefore, the line currents fed to the motor have no homo-polar component. A suitable two-vector representation, known as Current Concordia Transformation can then be used to describe three-phase input current to induction motor. The transformation reduces three-phase stator currents (Ia, Ib, Ic) shown in Fig. 2 to a set of two vector components (Iα, Iβ) given in Fig. 4
                        a applying (1) and (2):

                           
                              (1)
                              
                                 
                                    I
                                    α
                                    =
                                    
                                       
                                          2
                                          3
                                       
                                    
                                    I
                                    a
                                    −
                                    
                                       
                                          1
                                          6
                                       
                                    
                                    I
                                    b
                                    −
                                    
                                       
                                          1
                                          6
                                       
                                    
                                    I
                                    c
                                 
                              
                           
                        
                        
                           
                              (2)
                              
                                 
                                    I
                                    β
                                    =
                                    
                                       
                                          1
                                          2
                                       
                                    
                                    I
                                    b
                                    −
                                    
                                       
                                          1
                                          2
                                       
                                    
                                    I
                                    c
                                 
                              
                           
                        
                     

The two vector components (Iα, Iβ) are supposed to contain all information that was present in the original three-phase current signals. This is the first step of data reduction without losing any information.

The Iα versus Iβ currents are then plotted in a 2-d reference frame called the αβ-reference frame and the plot is called Concordia Pattern (Fig. 4b). This approach has been successfully applied in the steady-state diagnosis of induction motor faults [3], inverter open switch faults [7], and control circuit misfiring faults [7]. Detailed theoretical formulations of Concordia pattern can be found in [3]. This process converts three phase current profiles to two phase equivalent profiles and finally to a closed pattern. Thus it aids in further reduction of data.

The Concordia plot (plot between Iα and Iβ) obtained from the currents of a healthy system after the current reaches the steady state, is a circular pattern centered at the origin of the co-ordinates. It is pertinent to mention here that most of the time; the utility end supply voltage profiles are not exactly sinusoidal and balanced. So, current Concordia pattern corresponding to a healthy machine, fed directly from the utility supply mains looks slightly like a hexagon in shape rather than a perfect circle. But, three-phase sinusoidal PWM inverter output voltages obtained from a well filtered rectified DC voltage and kept in an ideal undisturbed condition, are much better sinusoidal balanced waveforms. This makes the slightly hexagonal Concordia to be more circular in shape. The simulation model studied here is matched with such a system where balanced three phase supply produces circular Concordia pattern in un-faulted state. When faults as described in Fig. 1 are being artificially created inside such a system, currents get unbalanced (Fig. 2) bringing distortion in Concordia plot (Fig. 4b). As each of the current profile in Fig. 2 is a series of closely placed points, the distorted Concordia pattern shown in Fig. 4b also comprises of points which are closely placed. But these points in the Concordia pattern are not placed uniformly in the plotting space. This can be easily shown if the sampling interval of the current profile is increased as illustrated in Fig. 5.
                        
                     


                        Fig. 1 also outlines the fault detection blocks where the distorted Concordia pattern of a faulty inverter is converted to image and shape descriptors are extracted from this image. These shape descriptors when applied to the Nearest Neighbor Algorithm can classify the type and severity level of the faulty case.

In the present research, the Concordia pattern in the αβ-plane as shown in Fig. 4b is processed further in search for meaningful fault features. For the feature extraction tool proposed in this work, it is necessary to represent the shape of a two dimensional figure by a set of few discrete points sampled from the boundary of the concerned figure. In order that the proposed feature extraction tool performs satisfactorily, it is required that the discrete points on αβ-plane are distributed uniformly. However, even with uniform time sampling of the three-phase current signals as done in Fig. 5a, the Concordia plot on αβ-plane has non-uniformly distributed discrete points as shown in Fig. 5b; especially when the three-phase currents are unbalanced or distorted.

Therefore, in order to sample the Concordia pattern in preferably equally spaced sample points on the plotting space, it is beneficial to convert the whole pattern of Fig. 4b into a binary image.

The Concordia patterns obtained from different faulty situations are converted into binary images with plotting space in black background and the white curve as object of interest as shown in Fig. 6
                        a.

Each of these images is of 900 × 900 pixels in size. When the image size is kept constant for all cases; a Concordia pattern whose size is less compared to another example, its corresponding white curve after image conversion will also have a proportional lesser size (in pixels) than the white curve in image of the other. Outer boundary of the white curve is then extracted and a second white curve is obtained as shown in Fig. 6b which is of one pixel thickness [22]. In order to extract meaningful features from this image, further sub-sampling of Fig. 6b is necessary which judiciously reduces the number of data points in the image without losing significant information embedded in the white curve.

Sub-sampling the boundary into equally spaced points is done by segmenting the entire image of Fig. 6b into grids [23] as shown in Fig. 7
                        a. Each intersection point between grids is identified with different names as marked by the nodes A and B in Fig. 7a. For the sub-sampling process, section of the white curve boundary lying within each grid box is considered one at a time. For example, the segment of boundary between P and Q in Fig. 7a is to be considered. Each pixel point contained in the segment between P and Q is assigned to the grid node to which it is nearest. Thus all pixel points between P and Q will either be replaced by node A or node B. In this manner, all pixel points present on the white curve boundary will be assigned to the grid nodes that are closest to these individual pixel points. Obviously, more than one pixel points on the boundary can be assigned to the same grid node. Using this sub-sampling process, and by suitably spacing the grids, the total number of sample points can be reduced to even less than 10% of the original number of pixel points present on the white curve boundary. Using a grid separation shown in Fig. 7b, a sub-sampled image such as the one shown in Fig. 7c can be obtained. It has been reported in the literature [25] and also is experienced by authors that any further reduction in grid line separation that results in more number of sub-sampled points, does not contribute to significant improvement in the classification accuracy. Though it may appear that the sub-sampled image is not a true replica of the original white curve boundary, it has been reported in [24] that the proposed image processing tool and classification technique can be made robust to presence of slight outlier points in the sub-sampled image.

Sub-sampling a Concordia shape boundary gives another advantage to the analysis. Previously, it has been discussed that the Concordia plot has a slight tendency of being influenced to a hexagonal orientation due to inherent unbalances in supply voltage. But when a shape is not continuous but discrete as in a sub-sampled image, these slight hexagonal changes get mostly nullified.

The pattern in Fig. 4b apparently looks like a continuous curve but it is actually a series of closely placed discrete points obtained from the three-phase current waveforms shown in Fig. 2. These points are not equally placed in the plotting space if the three-phase currents are not balanced as explained in Section 3.2. When a pattern which has unequally distributed points is sub-sampled by grid method as explained above, certain difficulties have been observed. It is sometimes found that none of the points in the pattern of Fig. 4b falls inside a single segmented box of the grid even though the curve actually may have passed through that segmented box. So, to avoid this difficulty, the Concordia pattern of Fig. 4b has been converted to binary image. This technique converts the curve as a whole into binary image rather than converting the closely and unequally placed discrete points into binary pixel points. From the obtained binary image, a boundary of one pixel thickness is extracted. This boundary gives uniform distribution of pixel points in the plotting space. Sub-sampling of this boundary image becomes easier and more accurate.

In order to match (or compare) the Concordia shapes under two different operating conditions, for each point pi
                            on the first shape (Fig. 8
                           a), it is necessary to find the “best” matching point in the second shape (Fig. 8b). The concept of shape context in [25] provides a good descriptor which can play a major role in shape matching of Concordia patterns and classifying different fault cases. From a single sampled point in a shape, a set of vectors or relative positions is estimated for all the other sampled points. Thus for n numbers of points, each point will have (n
                           −1) numbers of vectors. These relative positional distributions of all the (n
                           −1) points from each point pi
                            (reference point) are arranged in the form of a coarse histogram hi
                           . This histogram is the shape context for point pi. Shape context analyses have also been reported by other researchers in biomedical application [26], handwriting identification [25] and underwater vision recognition [27] purposes.

As suggested in Ref. [25], the histogram in the present work also has twelve bins for theta marked along horizontal axis and five bins for log r along vertical axis (Fig. 8d, e and f) where r and theta are normalized radial distance and polar angle of vector between a reference point and another sampled point respectively. All the (n
                           −1) sampled points, having their log-polar coordinates on the basis of reference point as the origin, are distributed along the vertical and horizontal axes of the histogram (shape context). For constructing the histogram i.e. shape context for any given point pi
                           , the log-polar coordinate system as shown in Fig. 8c is used. There are a total of 60 (12 × 5) bins in the circular log-polar coordinate diagram of Fig. 8c and also in the histograms of Fig. 8d, e and f. All the (n
                           −1) vectors originating from the point pi
                            are positioned in any of the 60 bins of the circular log-polar coordinate system. Accordingly, the histograms are constructed by counting the number of elements present in each of the 60 bins. The darker the bin in the shape context (Fig. 8d, e and f), the greater is the number of sampled points having their coordinates lying in the range embraced by that binate points marked by О on the two almost similar shapes of Fig. 8a and b are having relatively similar positions. Hence, their shape contexts are also nearly similar.

The radial distance between any two points in the discretized image, is normalized by the mean distance between the total numbers of point pairs in the shape. This makes shape context scale invariant [25], which means that it is independent of the size changes of a Concordia pattern with different load levels or different motor ratings. This load immunity feature of shape context is further emphasized in Fig. 9.
                           
                        

In Fig. 9a, the Concordia pattern ‘a’ is obtained from output currents of the faulty inverter when machine is under no-load and Concordia pattern ‘b’ is for the same faulty inverter when machine is under loaded condition. Both the shapes are similar but their sizes are different. In Fig. 9b and c, the corresponding discretized Concordia images for ‘a’ and ‘b’ respectively, are shown. Both the images have same number of discrete points. After normalizing the radial distances between each pair of points in each image of Fig. 9b and c, the shape contexts are computed. It is found that the shape contexts of all points in one image (Fig. 9b) almost match with shape contexts of same respective points in the other image (Fig. 9c). For example, two shape contexts are shown from each image. The upper shape contexts in each of Fig. 9b and c correspond to identical points marked by ○ on the image in that figure. In both the figures, these upper shape contexts are found to be nearly identical. The lower shape contexts in each of Fig. 9b and c are for identical points marked by ◊ on the image in that figure and it is found that both these lower shape contexts are also nearly similar. Thus, size of the Concordia shape does not have much influence on the shape context pattern. Therefore, it can be said that difference in loading conditions of the motor or size of the motor does not create any impact on the present study of fault analysis using shape context.

Let point pi be a point in first shape and point qj
                            be a point in second shape. Then cost function or the cost of matching between those two points is denoted by Cij
                            
                           [25], where

                              
                                 (3)
                                 
                                    
                                       
                                          C
                                          
                                             i
                                             j
                                          
                                       
                                       =
                                       C
                                       
                                          (
                                          
                                             p
                                             i
                                          
                                          ,
                                          
                                             q
                                             j
                                          
                                          )
                                       
                                       =
                                       
                                          1
                                          2
                                       
                                       
                                          ∑
                                          
                                             k
                                             =
                                             1
                                          
                                          K
                                       
                                       
                                          
                                             
                                                [
                                                
                                                   h
                                                   i
                                                
                                                
                                                   (
                                                   k
                                                   )
                                                
                                                −
                                                
                                                   h
                                                   j
                                                
                                                
                                                   (
                                                   k
                                                   )
                                                
                                                ]
                                             
                                             2
                                          
                                          
                                             
                                                h
                                                i
                                             
                                             
                                                (
                                                k
                                                )
                                             
                                             +
                                             
                                                h
                                                j
                                             
                                             
                                                (
                                                k
                                                )
                                             
                                          
                                       
                                    
                                 
                              
                           and hi
                            (k), hj
                           (k) are the shape contexts for points pi and qj respectively with K as number of bins. For each of the points pi
                            on first shape, a corresponding point qj
                            is taken from the second shape whose cost of matching is the minimum. This means that qj
                            is nearest to that particular pi
                            .Then, the minimized total cost of matching (denoted as H(π)) between two shapes according to [25] is :

                              
                                 (4)
                                 
                                    
                                       H
                                       
                                          (
                                          π
                                          )
                                       
                                       =
                                       
                                          ∑
                                          i
                                       
                                       
                                          C
                                          (
                                          
                                             p
                                             i
                                          
                                          ,
                                       
                                       
                                          q
                                          
                                             π
                                             (
                                             i
                                             )
                                          
                                       
                                       
                                          )
                                       
                                    
                                 
                              
                           where qπ(i)
                            is that permutation of points in second shape which are nearest to respective points in first shape.

In order to classify different types of faults based on Concordia, the method of prototype-based recognition [28] has been adopted in this study. Each class of faults is represented with an ideal example of Concordia shape which is called prototype. When sampled shape of an unknown fault matches the prototype of a particular class, the faulty condition of the system falls into the class defined by that prototype. As one shape moves further away from one prototype, it shows a tendency to match with another prototype. Prototype based matching can be computed easily by Nearest Neighbor Algorithm [28] using concepts of shape context.

Implementation of the above mentioned algorithm requires the concept of shape context distance. For two Concordia shapes P and Q, having n numbers of sampled points p, and m numbers of sampled points q, respectively; shape context distance, D(P,Q), is measured between them by the expression [25]:

                           
                              (5)
                              
                                 
                                    D
                                    
                                       (
                                       P
                                       ,
                                       Q
                                       )
                                    
                                    =
                                    
                                       1
                                       n
                                    
                                    
                                       ∑
                                       
                                          p
                                          ∈
                                          P
                                       
                                    
                                    arg
                                    
                                       min
                                       
                                          q
                                          ∈
                                          Q
                                       
                                    
                                    C
                                    
                                       (
                                       p
                                       ,
                                       q
                                       )
                                    
                                    +
                                    
                                       1
                                       m
                                    
                                    
                                       ∑
                                       
                                          q
                                          ∈
                                          Q
                                       
                                    
                                    
                                       arg
                                       
                                          min
                                          
                                             p
                                             ∈
                                             P
                                          
                                       
                                       C
                                       
                                          (
                                          p
                                          ,
                                          q
                                          )
                                       
                                    
                                 
                              
                           
                        
                     

According to the above expression, cost functions are computed for each point p in shape P with all the points q in shape Q and the minimum value is selected. In this manner, minimum values are found for all n numbers of points in P and the average is computed. Similarly, average minimum cost function is calculated for m numbers of points in Q with respect to all points in P. The two average values are then summed up. Thus shape context distance is the measure of dissimilarity between two shapes P and Q.

In the Nearest Neighbor Algorithm, sufficient numbers of exemplars of sampled Concordia shapes are obtained from experimental data for each class of faults. In this study, exemplar number is about 5310 for 177 classes of faults. From a given set of exemplars of sampled Concordia images falling in the same class, a new prototype is chosen for that class on the basis of minimum summation value of shape context distances for the prototype with all exemplars in that class. Thus, the prototype Concordia image of a class is that exemplar image which has the least aggregate dissimilarity with all the other exemplars of that class. Suppose, a class has exemplars of discretized Concordia shapes P forming the set S
                        1. Again in the same class, the same set of exemplars is arranged in a second set S
                        2, as prototypes Q. Then ideally S
                        1
                        =
                        S
                        2. To find the unique prototype for that class, shape context distances are found for each Q in S
                        2 with each P in S
                        1. The shape Q in set S
                        2, whose summation of shape context distances is the minimum with all shapes P in S
                        1, is selected as the desired prototype for that class of faults. This minimum value [28] is expressed as:

                           
                              (6)
                              
                                 
                                    H
                                    =
                                    arg
                                    
                                       min
                                       
                                          Q
                                          ∈
                                          
                                             S
                                             2
                                          
                                       
                                    
                                    
                                       ∑
                                       
                                          P
                                          ∈
                                          
                                             S
                                             1
                                          
                                       
                                    
                                    
                                       D
                                       (
                                       P
                                       ,
                                       Q
                                       )
                                    
                                 
                              
                           
                        
                     

From this value of H, for each of the K numbers of classes (in this study, K
                        =177), prototype of Concordia shapes are selected from the set of exemplars in that class and designated as Q(k). Now for a new unknown Concordia shape R, arising from an unknown fault; it is converted into sampled image and tested for the nearest prototype from the value of C using the equation:

                           
                              (7)
                              
                                 
                                    C
                                    =
                                    arg
                                    
                                       min
                                       k
                                    
                                    D
                                    
                                       (
                                       R
                                       ,
                                       Q
                                       
                                          (
                                          k
                                          )
                                       
                                       )
                                    
                                 
                              
                           
                        
                     

The prototype for which C is obtained; the shape R under investigation is the least dissimilar to that prototype. So R is assigned in that class of faults represented by that prototype.

A flow chart is shown in Fig. 10
                      which summarises the fault classification technique described in previous sections.

The above method of classification has given prototypes for all 177 numbers of classes. Figs. 11
                         and 12
                         are used to show few of the sample prototypes with two affected IGBTs and Fig. 14 gives few samples from faulty classes involving more than two IGBTs. It is found that for faulty classes: R1_m;R3_m, R2_m;R4_m, R3_m;R5_m, and R4_m;R6_m (Fig. 11), orientation of the prototype shape rotates clockwise though their shapes remain almost similar. In each of these classes, the faulty IGBTs’ identity numbers (1&3, 2&4, 3&5, 4&6 as in Fig. 1) are having a difference of 2 in cyclic order sequence. Also, the severity levels of spurious resistances in all classes are in the medium range. Thus, it can be observed that if two pairs of faulty IGBTs have same identity number difference between IGBTs in each pair, and also have same severity levels, then they will always give identical Concordia shape but with different orientations.


                        Fig. 12 gives a comparative study of the change in prototypes’ shapes for different severity levels of faults for same set of affected IGBT pairs (T1 and T5). The orientation is found to move in anticlockwise direction as the severity of R1 (spurious resistance at terminal of T1) increases from L, m to h with R5 (spurious resistance at terminal of T5) at constant value. At the same time, the shape is also becoming thinner. This observation is valid when the sample figures are followed along any row in the figure matrix of Fig. 12 from left to right. Again, when R5 increases while R1 is kept constant, the shape contracts though its orientation remains same. This observation is obtained from the columns of figure matrix of Fig. 12 while moving from top to bottom. Thus, with increase in severity levels, shape contraction is a common phenomenon for faulty terminals of IGBT pair.

To explain the nature of shape of the prototype when spurious resistances appear in terminals of more than two IGBTs at a time; plotting space of the shape is marked with six axes (A1, A2, A3, A4, A5 and A6) as shown in Fig. 13.
                        
                     

In Fig. 14
                        , the left hand column of the figure matrix constitutes examples from faults with three affected IGBTs. It is seen that for both of the two classes, R1;R2;R4 and R1;R4;R5, the spurious resistances R1 and R4 corresponding to terminals of affected IGBTs T1 and T4 respectively are lying at upper and lower leg in the same branch of inverter. This governs the direction of orientation of the prototype shape along axis pair A1–A4 (Fig. 13).

Next, it is necessary to find changes in shape of the prototype when spurious resistances appear at terminals of IGBTs for three separate branches of inverter. For the faulty class R1;R2;R3 (Fig. 14), the three spurious resistances are lying in terminals of affected IGBTs T1,T2 and T3 in three different branches of inverter. But R1 and R3 are lying in upper legs and R2 is lying in the lower leg in three different branches. Then the prototype shape tries to develop three vertices (V1, V3 and V5) along A1, A3 and A5 axes as shown in Fig. 14. It is further observed that when two out of the three affected IGBTs or all three affected IGBTs lie in upper legs of inverter, the vertices of the shape develop along axes A1, A3 and A5. Similarly, if two out of three or all the three affected IGBTs are in lower legs of inverter, the vertices are found to lie along A2, A4 and A6 axes.

Two examples of faulty classes with four affected IGBTs are shown in Fig. 14 as R2;R3;R4;R5 and R2;R3;R5;R6. It should be noted that in these types of faults, at least two affected IGBTs should be present both at upper and lower legs of the same branch. Thus in the class R2;R3;R4;R5, the two spurious resistances R2 and R5 are lying in the same branch of inverter where affected IGBTs T2 and T5 exist. This influences the prototype shape to get oriented along A2–A5 axis. For the other faulty class R2;R3;R5;R6, the resistances R3 and R6 are present in the same branch of inverter associated with faulty terminals of T3 and T6 respectively. This influences shape orientation along A3–A6 axis. R2 and R5 are also there in the same branch of inverter and that tries to orient the shape along A2–A5 axis. Thus the resultant orientation of prototype is midway between A2–A5 and A3–A6 axes. The last figure in the figure matrix of Fig. 14 shows prototype shape for the fault class R2;R3;R4;R5;R6 that corresponds to simultaneous faults in terminals of five IGBTs in the inverter. In these types of fault classes both IGBTs present in the upper and lower legs of two different inverter branches get affected. In the example given, R2 and R5 correspond to lower and upper legs of one branch, whereas R6 and R3 correspond to lower and upper legs of another branch of the inverter. The fifth spurious resistance is R4 that is with affected IGBT T4. The resultant prototype shape has a joint influence of getting oriented along A2–A5 and A3–A6 axes. In Figs. 11–12 and 14, two shape contexts are shown for prototypes of each of the faulty classes that is given as example. The upper shape context shown in each fault classes corresponds to the point marked with ‘○’ on the prototype shape for that faulty case. The lower shape context is for the point marked with ‘◊’.

Using these prototypes and implementing the knowledge of shape context distance as described in previous sections, 3540 numbers of Concordia patterns obtained from unknown faults are tested using Nearest Neighbor Algorithm. Each of these unknown faulty cases is compared with all the prototypes by computing the shape context distance with respect to each prototype. Every fault case is found to carry a minimum shape context distance value with respect to a particular prototype. Then that fault is identified to be belonging to the class of faults represented by that prototype.

Confusion matrices given in Tables 3–4
                        
                         report results of classification (or misclassification) in the two example cases. Table 3 gives the result for severity level classification for R1_c;R5_v classes. Each row represents actual faulty cases, while each column indicates results (prediction) of the classifier. For example, the 2nd row of Table 3 suggests that 20 faulty situations from class R1_L;R5_m, have been tested and out of them, 18 cases have been predicted correctly and 2 cases are wrongly detected to be in R1_m;R5_m class. The other faulty classes are not included in columns of Table 3 as there are no misclassifications for R1_c;R5_v classes into other classes. Table 4 gives the confusion matrix for few of the faulty classes involving two or more than two affected IGBTs where T1 and T4 are involved. The faulty classes described in the rows of Table 4 do not have any misclassification other than those described in the columns of that Table. So other fault classes are not included in the columns of Table 4. In this table also, 20 faulty situations are taken from each class of faults and the corresponding misclassifications are shown.

In a similar manner, 20 faulty situations are taken from each of these 177 classes of faults with a total of 3540 situations. Similar confusion matrices are constructed for all these different fault classes and the overall efficacy of the classifier is 94.5% predicting 3345 cases correctly out of the 3540 different situations.

To inspect the degree of accuracy of the proposed method under variable loading conditions of the motor, above mentioned method has also been tested to identify spurious resistance faulty cases under different load levels. Five faulty situations are taken from each of 12 numbers of randomly selected faulty classes under three different load levels. Thus, a sum total of sixty faulty cases are tested for each of the three loads. Table 5
                         shows that out of sixty faulty cases; 51, 54 and 54 numbers of cases are predicted correctly under the three different load conditions respectively. Thus the concept which has earlier been explained in Fig. 9 about independency of fault analysis on different loading conditions is reasonably well supported by the results shown in Table 5.
                     

It has been mentioned in Section 3.3, that sampling of the boundary image is done by dividing the whole image into grids. It has been also stated that even when the total number of sample points is reduced to around 10% of the original number of pixel points present on boundary, performance of the proposed method, however, still remains satisfactory. Fig. 15
                            shows the accuracy of the mentioned fault classification technique under different levels of sampling percentage of boundary images.

Most of the boundary images of the Concordia pattern in the present study consist of 700pixel points. One hundred boundary images are selected at random and each of them is sampled at all different percentage levels between 2% and 14%. Subsequent fault analysis is done with those sampled images and it is found that accuracy level does not vary appreciably beyond sampling of 10% as shown in Fig. 15.
                        

To judge performance of the proposed shape context based Nearest Neighbor Algorithm for determination of incipient faults in three phase inverter, the sub-sampled Concordia images are tested with two more related algorithms and the corresponding results are compared. One of them is TPS-RPM algorithm [29] which is a shape matching algorithm and the second algorithm is a classifier, Support Vector Machine (SVM) [30].

The TPS-RPM algorithm described in [29] is an iterative optimization algorithm which determines point-to-point correspondences between two Concordia shapes in the present study. The algorithm incorporates a thin-plate spline (TPS) which parameterizes non-rigid mapping between two sets of points of two Concordia images with soft-assigned correspondences. The robust point matching (RPM) essentially involves a dual update process embedded within an annealing scheme. The basic idea of the algorithm is to allow the correspondences to improve gradually and continuously during the optimization.

The SVM classifier [30] applied here to classify different Concordia images uses the one-against- all (OAA) strategy. In the OAA strategy, each classifier is trained to find Optimum Separating Hyper-plane (OSH). This hyper-plane is detected by the principle of margin maximization between feature vectors of a particular class of sub-sampled Concordia images and feature vectors of all other classes. Features are often transformed into a higher dimensional kernel space with the help of a kernel function, which must satisfy the conditions stated in Mercer's theorem [30]. In the present study, radial basis function (RBF) is selected as kernel function.

Twenty faulty situations are taken from each of the randomly selected 12 numbers faulty classes and they are inspected by three different algorithms for identification of fault classes. Thus, in total there are 240 faulty situations which are tested by the mentioned algorithms. Fig. 16
                            shows that in most of the cases, the performance of the shape context based Nearest Neighbor Algorithm gives the best possible result. The plot also shows that performance of all three algorithms deteriorates when the number of faulty IGBTs increases. But still the proposed algorithm shows better performance than the other two.

A comparative study of the proposed method with respect to previous work on related topics is presented in Table 6.
                           
                        

@&#CONCLUSION@&#

The proposed method is able to identify 177 different types of incipient faults related to degradation of connections at IGBT terminals in the inverter of an induction motor drive. To identify and classify that many different minor fault conditions, it is necessary that every point of the fault current waveforms be analyzed with due importance rather than considering only few significant stages or zones of three phase current waveforms or few significant harmonics. Such a proposition, however, makes the data size very large and increases computational burden. The present method has used current Concordia transform followed by proper image processing tool which helps in reduction of data size to about 10% of the original size without losing any valiant information. Another major contribution of this research work is the application of the concept of shape context which has demonstrated its capability to extract fault features that are reasonably immune to load variations. The present research has proposed Nearest Neighbor Algorithm as classifier which is found to work better in detecting incipient faults occurring simultaneously in more than one location inside the drive system when it is compared with two other related algorithms namely the TPS_RPM algorithm and the SVM classifier. Different fault conditions are classified with all three algorithms and it is found that Nearest Neighbor Algorithm is giving highest success rate of more than 90%. As highlighted earlier, novelty of the present contribution lies in identifying incipient faults in the PWM drive at a very early stage, thus preventing such faults to propagate or escalate. Future directions of the research will include validation of the proposed methodology in industrial grade motor drives and possible scope of enhancement of fault identification accuracy using other types of image and data classification tools.

@&#ACKNOWLEDGMENT@&#

This work has been sponsored by DST, Govt. of West Bengal project grant [783(Sanc.)/ST/P/S&T/6G-1/2009].

