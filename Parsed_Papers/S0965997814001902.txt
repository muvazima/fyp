@&#MAIN-TITLE@&#Retrofitting of pedestrian overpass by Truss-Z modular systems using graph-theory approach

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           Graph-theoretical method of retrofitting of Truss-Z ramp in constrained environment.


                        
                        
                           
                           This exhaustive search method produces better (ideal) solution than meta-heuristics.


                        
                        
                           
                           Large case study in an extremely constrained environment with 124 TZ units.


                        
                        
                           
                           TZ modules with 1:12 (8.3%) slope are used – allowable for self-powered wheelchairs.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Truss-Z

Modular lightweight system

Organic design

Discrete structural optimization

Retrofitting

Pedestrian ramp

Breadth-first search

Wavefront algorithm

Unknown graph exploration

@&#ABSTRACT@&#


               
               
                  Installing pedestrian ramps is a common improvement towards a barrier-free environment. This paper introduces a graph-theoretical method of retrofitting of a single-branch Truss-Z (TZ) ramp in a constrained environment. The results produced by this exhaustive search method are usually ideal and better than those produced previously with meta-heuristic methods.
                  A large case study of linking two sections of the Hongo Campus of Tokyo University using an overpass in an extremely constrained environment is presented. TZ modules with 1:12 (8.3%) slope are used, which is allowable in most countries for ramps for self-powered wheelchairs.
                  The results presented here are highly satisfactory both in terms of structural optimization and aesthetics.
                  Visualizations of the TZ ramp system, composed of 124 units, are presented.
               
            

@&#INTRODUCTION@&#

The stairway is the most common means of pedestrian vertical transportation used in the built environment. Elevators and escalators are relatively expensive to install and maintain, and their traffic flow capacity is much lower than that of stairs. Moreover, it is not always possible to install an elevator or escalator due to limited space. However, most people occasionally or temporarily cannot use stairs, as when riding a bicycle, pushing a baby stroller or carrying heavy luggage. For elders and people in wheelchairs, stairs form a permanent and impassable barrier. This is an important social issue, especially since the proportion of elderly people in society is higher than in the past, and some predict that this tendency will continue [1].

With aging, individuals suffer from thinning of bones, muscle disorders, exhaustion, balance and strength problems, and sight and hearing disorders [2,3]. All of these put elderly people at risk in city environments because of their decreased movement capabilities, space perception and mental capacity [4]. For a comprehensive review of the literature on the elderly pedestrians, see [5]. Awareness about these problems is growing among designers and planners. Building code upgrades tend to reflect this fact, such that new constructions usually better fit the needs of seniors. However, it is also a common perception that an average existing built environment is not “barrier-free”. Making the environment more suitable for elders and people with disabilities improves the quality of life not only of the aforementioned groups, but, in most cases, that of everyone in society. The realization of such upgrading is, however, often challenging technologically and economically. Modularity and prefabrication are common ways of economizing on construction costs, which inspired the creation of TZ: the universal and inexpensive reconfigurable ramp system.

This is an updated and revised version of the conference paper [6], which introduced the concept of an automated retrofitting of TZ structures to a given environment. The methodology presented in [6] was based on evolutionary algorithms, and the results were rather satisfactory. This paper presents a new, graph-theoretical method, which is capable of producing better, in fact, ideal solutions. The TZ ramp presented in [6] was based on modules with a 1:8 slope, which is not suitable for wheelchairs. A new, much larger and more realistic case study, where the slope of the TZ ramp is allowable for wheelchairs (1:12), is presented.

Truss-Z (TZ) is a modular skeletal system for creating free-form ramps and ramp networks among any number of terminals in space [7,8]. The underlying idea of this system is to create structurally sound provisional or permanent structures using the minimal number of types of modular elements. The TZ structures are composed of four variations of a single basic unit (R), as shown in Fig. 1
                        .

Unit L is a mirror reflection of unit R. By rotation, they form two additional variations (R2 – rotated R and L2 – rotated L). Most conventional constructions have symmetries, which can be used to substantially reduce the computational effort of structural computations. In the context of this paper, particularly relevant are the graph-theoretical methods described in [9,10]. According to [11], the symmetry of a body is described by introducing the set of all those transformations which preserve the distance between all pairs of points of the body and maps the body into coincidence with itself. It is possible to create TZ configurations of all types of symmetries, as shown in Fig. 2
                        .

Nevertheless, in the general case, which is considered here, only identical symmetry is applicable.

Recommendations for the slope of pedestrian ramps depend on the intended use and local regulations. For example, the Americans with Disabilities Act (ADA) requires a 1:12 (8%) slope for wheelchairs and scooters on ramps for business and public use [12] British guidelines, as recommended by the Disability Discrimination Act (DDA) and Disability Rights Commission (DRC), are 1:6 (16%) for temporary ramps for assisted wheelchairs, 1:12 for temporary ramps for self-powered wheelchairs, and 1:15 (7%) for permanent and semi-permanent ramps [13]. In this paper, the slope of the TZ module (TZM) is set to 1:12 (8.3%).

TZ structures can be optimized for various criteria: the minimal number of TZMs, the minimal number of changes in direction, and, in a case of multiple branches, the minimal network distance. Because the system is modular, the corresponding problems are discrete optimizations. Various deterministic and meta-heuristic methods have been successfully implemented. Namely: backtracking [14], evolution strategy [15], and evolutionary algorithm [16,17]. These methods produced usually rather good, but not ideal, results. This paper presents a graph-theoretical exhaustive search [18] method, which is substantially more computationally expensive than aforementioned meta-heuristics, but produces the best allowable, ideal solution(s).

Graph theory (GT) has been applied to various problems in the built environment, including modeling 3D objects [19], representing architectural functional layouts [20], floor plan analysis and recognition (for architects to find similar projects) [21], retrieval of engineering drawings by their shape appearances [22], building information modeling (BIM) at early stages of design [23], 2D geometric constraint solving [24], analysis of fundamental properties of skeletal structures, such as connectivity [25] and rigidity [26], 3D finite element analysis [27], modeling of cable-membrane structures [28], reliability analysis of structural systems [29], generation and selection of manufacturing processes [30,31], path finding in crowd simulations based on the Dijkstra algorithm [32], or its extension – A
                        ∗ 
                        [33], search algorithm [34], and reliability analysis [35], to name a few.

GT has already been used to analyze certain topological properties of TZM [7]. Backtracking [36], a classic depth-first search strategy, has been implemented for finding quickly allowable solutions, which however, are usually far from the best ones. In the following section, for clarity, the problem is reduced to the projection on the 2D plane.

A single trapezoid, called 1, which corresponds to units R and L2, and its rotation, called 0, which corresponds to L and R2, together allow the creation of a path of any planar trajectory, as shown in Figs. 3 and 4
                     
                     . For a corresponding interactive demonstration, see [37].

A single-path Truss-Z (TZP) can be encoded in a binary sequence. Such a sequence can be conveniently compressed by using numbers of a higher base. Base-36 is the most compact case-insensitive alphanumeric numeral system that uses ASCII characters. In base-36, the digits are represented by the Arabic numerals 0–9 and the Latin letters A–Z. Since there are sometimes 0s in the beginning of the unit list, which would be truncated while converting to base-36, a 1 is appended in the beginning of every list. Such a compact enumeration is particularly useful for comparing various TZ configurations. First, the binary sequence is converted to a decimal number. Next, it is encoded into a base-36 number. For example:
                        
                           
                              {
                              1
                              ,
                              0
                              ,
                              0
                              ,
                              0
                              ,
                              1
                              ,
                              1
                              }
                              →
                              
                                 
                                    100011
                                 
                                 
                                    2
                                 
                              
                              →
                              
                                 
                                    35
                                 
                                 
                                    10
                                 
                              
                              →
                              
                                 
                                    z
                                 
                                 
                                    36
                                 
                              
                              →
                              z.
                           
                        
                     
                  

The conditions for the creation of a TZP in a constrained environment are defined below and explained in Fig. 4.

The environment where a TZP is to be installed is defined as follows:
                        
                           1.
                           There are two fixed terminals: start (ST) and end (ET).

There are obstacles, which must not be violated.

The initial direction (ID) of the path is set arbitrarily.

The number of TZ units is to be minimal.

Additionally, in order to reduce the search space, a so-called allowable zone (AZ) is introduced. AZ limits the space to that in which the best solutions are expected. Thus:

TZP must not leave AZ.

In order to compare the results and evaluate the methodology, the environment is the same as in [12,13], as shown in Fig. 4. The TZP is to start from ST and to reach the proximity of ET, defined by radius r. The TZP must not leave AZ and must not collide with the obstacles. For simplicity, the determination of the constraint’s violation is based on the summation of the internal angles. Therefore the shapes of the obstacles and AZ must be convex. However, the number of obstacles and AZs is not limited. Therefore, it is possible to compose concave shapes from convex primitives.

TZP can be considered as a framework of a path graph, also called a degenerate tree, S(V, E) in m-space, where V and E are the vertex and edge sets, respectively. A path graph is a particularly simple example of a tree graph. S is rooted in ST. The only leaf that is a vertex of degree 1, which is equivalent to the second terminal vertex, corresponds to the TZ unit lying within r from ET. Framework F is defined by a triple (V, E, p), where p is an embedding (injection) of V into real m-space [26].

For calculations, the trapezoidal units are represented by segments connecting the midpoints of their “rear” and “front” sides according to the direction of TZP, as shown in Fig. 4. The obstacles are offset by half of the unit width, called the offset zone (OZ), as shown in Fig. 4. This approximation assumes that if those points do not violate OZs, the vertices of the corresponding trapezoids do not violate the obstacles. V is the set of the end nodes of those segments.

The search space of allowable, and therefore optimal, TZPs can be represented by a search space tree (SST) graph. In the planar case, as in this example, a consecutive unit can be added in two possible ways. In such a case, SST becomes a binary tree, as shown in Fig. 5
                     .

The algorithm of creating the shortest TZP from ST to ET is based on breadth-first search and building consecutive levels of SST, as follows:
                        
                           1.
                           Place units 1 and 0 according to the given ID.

Prune the leaves that violate the constraints (obstacles and AZ).

Check whether the leaves are within range r from ET.
                                 
                                    3.1. If yes, collect all the paths of SST that start from the root (ST) and end in these leaves.

3.2. If not, build next level of SST. In other words, produce two branches from each leaf and go to 2.

The number of unconstrained paths of SST grows as 2
                           k
                        , where k is the number of levels, which is equivalent to the number of units in the TZP.

The best previously documented TZP was composed of 33 units [12,13]. This SST had 33 levels, and over 8 billion leaves at the bottom level. However, an SST can be limited to a manageable size by applying the constraints. In fact, such designing problems are usually highly constrained, which helps effectively reduce the search space. It is difficult to give a universal formula estimating the computation time as a function of AZ and obstacles. However, the empirical data indicate that the size of AZ profoundly influences the search space. According to previous results (see Table 2), it was assumed that the best TZPs would be expected in a relatively limited area represented by the narrow allowable zone (AZN) (see Fig. 7). Fig. 6
                         shows computational times at each SSL level for unconstrained search space (AZ∞), relatively broad AZR (see Fig. 4) and AZN (see Fig. 7
                        ) compared to backtracking. For backtracking, the computational time is practically constant at each SST level. This is a great advantage of this method. However, although the solutions are allowable, they are usually not very competitive.


                        Table 1
                         shows how SST “explores” the given space within AZN.

As Table 1 indicates, the dynamics of SST resemble what is commonly known as frontwidth [38]. This issue has been studied in the past – particularly frontwidth reduction. Graph-theoretical heuristics for this problem have been proposed in [10,39–42].

Despite the visual resemblance to the frontwidth known in structural engineering, since neither the topology nor geometry of SST can be assumed beforehand, the generation of SST corresponds more closely to so-called robot exploration (RE). Ref. [43] defines RE as follows: a robot has to construct a complete map of an unknown environment using a path that is as short as possible. This problem has been studied in the past [44–47]. There are two basic algorithms in RE: wavefront and ray, which implement breadth-first and depth-first strategies, respectively.

Since regular grid systems are not applicable for TZP, RE for SST has to be modeled by general graphs.

The TZP space is explored sequentially at consecutive steps, similarly to the strips of arbitrary undirected graphs explored with a breadth-first strategy described in [48]. However, unlike [48], the exploration neglects the notion of “piecemeal,” an additional constraint relevant to robots but not to TZ, which was introduced in [49]. The piecemeal constraint forces a robot to return to the start terminal (ST) every so often, which can be interpreted as necessity to refuel or drop collected samples, etc.

As Table 1 indicates, the geometrical constraints help restrain the tree-width [50]. At each step, all TZMs in the strip are evaluated against the constraints and the violating ones are pruned. As a result, although the method is exhaustive, the search space is not discouragingly astronomical, and the actual computational times are acceptable, as described in the next section.

In this stage, backtracking is implemented for determination of the maximal depth of SST, not as an actual search strategy. Backtracking returns only one traversal through SST, which is obviously allowable, but most likely not ideal. The wavefront method most likely produces more than one ideal solution, as presented below.

The execution of the algorithm took less than 18min on an Intel core7 PC and produced six different ideal TZPs reaching ET with only 32 units. This is one unit fewer than the best previously documented results produced manually (TZPM) [15] and by genetic algorithm with one-point crossover (TZPGA-OPX) [16]. Fig. 7 shows all of them together with the path produced by backtracking (TZPBT).

In the GA-OPX setup, there was an additional condition that the initial unit be 1 (“right”). However, one of the six ideal solutions, namely 32csu0a, shown in Table 2.1, also meets this condition, but uses one unit fewer. This proves that TZPGA-OPX was not ideal for those design conditions, but 32csu0a is.

The ideal solutions can be further evaluated against additional criteria. Because it is more comfortable to walk in straight lines and to make fewer but longer and continuous turns, two additional parameters have been introduced: “geometrical simplicity” (GS) and “number of turns” (NT). GS and NT measure how many units do not follow a straight line, and how many continuous turns there are in the path, respectively. Table 2
                         sorts the ideal solutions according to GS and NT.

The results presented in the previous section are ideal for the given ID. However, what is absolutely the shortest allowable TZP linking a given ST and ET? An intuitive approach is to experiment with directions that seem the most rational, as shown in Table 3
                        .

Indeed, the solution shown in Table 3.1 is almost certainly the shortest TZP for this environment. Moreover, GS and NT are also substantially lower.

The best results produced by GT method are collected and compared with the previously published ones in Table 4
                        .

As Table 4 indicates, the best result was produced by introduced here GT method with the initial direction (ID) rotated by 31°. Although the number of units produced by the new method did not decrease dramatically, the secondary parameters of the new path (GS and NT) have improved substantially.

In the following section, the GT method is implemented for a real-life project of retrofitting the TZ structure to a specific location for improvement of pedestrian comfort and safety.

The Hongo Campus of the University of Tokyo is comprised of three sections: Hongo, Yayoi and Asano, separated by Kototoi street. An existing overpass linking the Hongo and Yayoi sections is shown in Fig. 8
                     .

The existing concrete overpass system, although useful, is one of countless examples of public spaces where, euphemistically speaking, the pedestrian experience is not comfortable. It is comprised of two bridges connected with three stairways. One of these stairways is particularly long: 29 rises without an intermediate landing. The other is composed of particularly steep steps: 19cm rise @ 29cm tread. This is nearly the maximum steepness allowed by the building code. For the proposed retrofitting, it was assumed that the most rational strategy would be to use the existing main concrete bridge spanning over the street and attach two independent TZ structures down to the ground level on both sides, as shown in Fig. 9
                     .

In this case, the TZ structure is three-dimensional. Therefore, instead of two units (1 and 0), there are four modules available (R, L, R2, L2). This substantially enlarges the search space. As such, defining the spatial constraints for the TZP becomes crucial.

The conditions at the Yayoi section (TZPI) are shown in Fig. 10
                     .

STI is placed at the north end of the existing bridge, approximately 450cm above the ground. ID is set parallel to the fence, and ETI is located close to the bottom of the existing stairway. There are three zones constraining TZPI. Allowable zone 1 (AZ1) is the only area where TZMs can be placed. Offset zone 1 (OZ1) “squeezes” the path along the fence. AZ1 and OZ1 constrain only the XY coordinates. Offset zone 2 (OZ2) represents the clearance over the street and also constrains the vertical positions of TZMs, as indicated in Fig. 10. The best solution for TZPI is visualized in Fig. 11
                     . It is comprised of 47 TZMs, GS=18 and NT=8.

The conditions at the Hongo side (TZPII) are shown in Fig. 12
                     .

STII is placed at the south end of the existing bridge, approximately 370cm above the ground. ID is set parallel to Building 1, and ETII (indicated by the black triangle in Fig. 11) is located 200cm away from the existing stairway, opposite the main pedestrian route. Allowable zone 2 (AZ2) is the only area where TZMs can be placed. Buildings 1 and 2 are surrounded by a 120cm offset zone, which is limited in elevation to 620cm. Additionally, a clearance zone around the existing stairway is subtracted from AZ2 in order to prevent TZMs from being placed too close to these stairs. The best solution for TZPII is visualized in Fig. 13
                     . It is comprised of 77 TZMs, GS=29 and NT=9.

The entire TZ system is shown in Figs. 14 and 15
                     
                     .

@&#DISCUSSION@&#

As demonstrated above, TZ construction may become an attractive solution for ramp retrofitting in countless situations. However, in order for it to reach its full potential, the following issues need to be addressed:

The quality of the entire TZP depends on the position of ID. Presently the choice of ID is based on the designer’s intuition. Further investigations into the best ID are advisable. Implementation of ID as a part of the genotype in a meta-heuristic optimization is under consideration.

Intuition and trial-and-error will always play an important role in any creative process. However, since the search space in the GT method presented here can easily become unmanageable, it would be practical to implement an algorithm for estimating the size of the SST for a given problem.

The problem presented here is not overly demanding for modern computation. Therefore an exact method has been investigated. However, for larger and less constrained problems or simply for substantial reduction of the computational time and for a method that is less sensitive to the initial condition, implementation of other meta-heuristics is rational. Evolutionary algorithms have already been successfully applied to TZP optimization in [15–17]. Another particularly interesting method is chaotic swarming of particles, presented in [51] for optimal design of truss structures. For a recent and concise survey of non-gradient optimization methods in structural engineering, containing practical pseudo-codes for each heuristic, see [52].

In the visualizations shown in Figs. 10 and 12–14 the supports were placed after the completion of the TZP optimization. The maximum span of unsupported TZMs was set arbitrarily to five units. Consideration was also given to the torsional stability while placing the supports. Nevertheless, it is rational to integrate the distribution of supports into the TZP optimization process.

TZ is based on prefabricated modules. Although a number of experimental small-scale models have been built [53], there are still practical problems to be solved, such as joinery and the assembly method. These issues may have great impact on the actual applicability and the overall cost of the system. The realization of the case study presented here is under consideration.

Large TZ structures require a large number of modules. For example, the case study presented here uses total of 124 TZMs, each of approximately 6.5m3. Making TZP deployable is an interesting option for practical transportation and assembly. Adopting the concepts of modular foldable structural systems [54] is presently under investigation [55].

Although the GT method, when intelligently applied, gives perfect results for single paths, it is not as straightforward and might not be equally successful in optimizing multi-branch TZ networks (TZN). The meta-heuristic method has been rather successful [17]. However, since the quality of results produced by the GT method is so high, it is rational to investigate this approach for complex TZNs as well.

@&#CONCLUSIONS@&#

A novel and realistic concept for the creation of a barrier-free environment has been presented. A simulation of retrofitting a crossing using a Truss-Z (TZ) ramp system in a very difficult existing situation has been documented. The graph-theoretical (GT) TZ single path (TZP) optimization algorithm presented here produces excellent results, as long as the geometrical constraints are well-defined. Otherwise, the search space easily becomes unmanageable due to combinatorial explosion.

However, most, if not all, real-life engineering problems are highly constrained, making the method described here quite practicable. In cases with relaxed constraints, where there is more “designing freedom“, the manual method is the most straightforward. Alternatively, if receiving of a set of different solution proposals is preferred, evolutionary algorithms (EA) are advisable [16,17]. The method should be chosen according to the design strategy: GT slowly generates the ideal solutions but requires certain knowledge about the expected result; backtracking quickly produces relatively naive solutions; and EAs produce good solutions but requires careful formulation of the objective (cost) function, which is the most challenging issue in meta-heuristics.

“Geometrical simplicity” (GS) and “number of turns” (NT) have been used here to reflect the users’ preferences, which are not commonly accounted for in mainstream skeletal structure optimization.

The setting of the case study presented here was very difficult. However, the TZP optimization method proved robust and consistently produced structurally sound and aesthetically inspiring results.

@&#ACKNOWLEDGMENTS@&#

This work was completed as part of the Singapore University of Technology & Design and Massachusetts Institute of Technology Postdoctoral Fellows Program (SUTD–MIT PDP). The research is titled: “Effective computational methods for grid and raster-based modeling of practical problems in architectural and urban layout design”. Jesse DeLaughter is gratefully acknowledged for the proofreading.

@&#REFERENCES@&#

