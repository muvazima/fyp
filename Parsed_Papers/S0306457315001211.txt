@&#MAIN-TITLE@&#Personalized hybrid recommendation for group of users: Top-N multimedia recommender

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           Novel group hybrid method combining collaborative and content-based recommendation.


                        
                        
                           
                           Proposed method improves the quality of recommended items ordering.


                        
                        
                           
                           Proposed method increases the recommendation precision for very Top-N results.


                        
                        
                           
                           Applicable for single user as well as group recommendation.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Group recommendation

Mixed hybrid recommendation

Top-N recommendation

Multimedia

@&#ABSTRACT@&#


               
               
                  Nowadays, the increasing demand for group recommendations can be observed. In this paper we address the problem of recommendation performance for groups of users (group recommendation). We focus on the performance of very Top-N recommendations, which are important when recommending the long lasting items (only a few such items are consumed per session, e.g. movie). To improve existing group recommenders we propose a mixed hybrid recommender for groups combining content-based and collaborative strategies. The principle of proposed group recommender is to generate content and collaborative recommendations for each user, apply an aggregation strategy to solve the group conflict preferences for the content and collaborative sets separately, and finally reorder the collaborative candidates based on the content-based ones. It is based on an idea that candidates recommended by both recommendation strategies at the same time are presumably more appropriate for the group than the candidates recommended by individual strategies. The evaluation is performed by several experiments in the multimedia domain (as typical representative for group recommendations). Both, online and offline experiments were performed in order to compare real users’ satisfaction to the standard group recommenders and also, to compare performance of proposed approach to the state-of-the-art recommenders based on the MovieLens dataset. Finally, we experimented with the proposed hybrid recommender to generate the recommendation for a group of size one (i.e. single user recommendation). Obtained results, support our hypothesis that proposed mixed hybrid approach improves the precision of the recommendation for groups of users and for the single-user recommendation respectively on very Top-N recommended items.
               
            

@&#INTRODUCTION@&#

Personalized recommendation was proved to be a one of the most effective solutions to the information overload problem. Personalization typically helps, on the one hand, to reduce the number of items available, which are for user not possible to process in acceptable time. On the other hand, it helps to reduce the problem of informational space invisibility, where a user does not even know about the existence of some interesting content.

Historically, several recommenders have been proposed in the literature. At first, the individual user recommenders have been developed in two main directions (Resnick & Varian, 1997):

                        
                           •
                           content-based recommendation

collaborative filtering

The content-based recommendation methods recommend similar items (based on the items’ content similarities), while the collaborative filleting methods generate recommendations based on similar user tastes. Moreover, to overcome some shortcomings of both recommender approaches, their combination – so-called hybrid recommenders are often used (more details are provided in the Section 2 – related work). The research in the personalization area was focused for e-mail, education, news or e-shops domains (Gauch, Speretta, Chandramouli, & Micarelli, 2007). These days, the information overload expanding to new applications and improves our lives in almost every activity (Ricci et al., 2011).

Nowadays, the task of personalization also moved from recommendation to individual users to recommendation to groups. This is based on the fact that we, people, are social beings and we do a lot of our activities together. The difference between single and group recommendation is primarily in taking into account the interests and preferences of multiple users together and to offer them such results, i.e. items, which would satisfy them best all at once. These preferences are usually stored in user models, which are separated from the recommendation methods (Brusilovsky, 1996). In this paper we focus on improving the quality of very Top-N recommended items, which is important in many domains, especially in those with extensive items, which are group members able to experience only a few per session.

The typical and often used representative of the domain where the group recommendation is applied, is the multimedia domain (Boratto & Carta, 2010), or even more specifically subdomain of movies or television content. The consumption of multimedia is for many people an everyday activity, by which they spend substantial part of their free time (often with the companion of other people). Improvement of approaches which help people to choose interesting content therefore helps them to spend their time in a qualitatively better way (more details are provided in
Section 2.2).

One of the most popular type of multimedia represent the domain of TV content, where the increase of Smart TVs devices generate a new space for personalization. Surveys
                        1
                     
                     
                        1
                        BLS American Time Use Survey, A.C. Nielsen Co., date of data publication 2nd July 2012.
                      show that the average citizen of U.S.A. spends a 5.11 h per day by watching TV, what is 9 years for a lifetime. The average schoolchild in the U.S.A. watches television almost 3.3 h per day. It is in total 1200 h per year, while for comparison in school spends approximately only 900 h per year. These data show that experience of television content represents an essential part of the user's daily activities. People tend to watch television together rather than alone (Cesar, Chorianopoulos, & Jensen, 2008), thus according to Masthoff, the TVs should adapt to groups rather than to individuals (Masthoff, 2011, 2004).

As the personalized recommendation is an effective solution that can be used to reduce the information overload problem, its application in the domain of smart TV brings to the users qualitatively better experience (e.g., TV helps to select the appropriate program from broadcast or to choose from multiple news channels the most interesting ones). Plenty of group recommenders have been proposed in the last years for the multimedia domain, while they, due to heterogeneous group members’ preferences, often fail to provide very accurate Top-N recommendations (Kompan & Bieliková, 2014a). The group recommenders are based on the single-user recommendation approaches (content-based and collaborative), while the usage of hybrid recommender is quite rare (see Section 2.2).

Our main contribution in this paper is:

                        
                           a proposal of novel group recommender approach that is based on a combination of collaborative and content-based group recommendation approaches.
                     
                  

We focus on the improvement of the quality of the very Top-N recommendations and the recommendation list order. This is achieved by generating content-based (Section 3.1) and collaborative candidates (Section 3.2) for group members. Next, these candidates (content-based and collaborative separately) are aggregated in order to resolve conflict preferences of group members (Section 3.3). Finally, the hybrid recommender is applied to merge content-based and collaborative group candidates and to generate final recommendations (Section 3.4).

Obtained results clearly show that the proposed group recommender helps group members with the items selection and consequentially improve their experience with the common activity (results of the evaluation are presented in
Section 4). Last but not least, proposed approach is applicable to the single user recommendation as well (while this scenario represents the recommendation to a group of size 1 (for detailed results see
Section 4.3)).

@&#RELATED WORK@&#

The personalized recommendation is often requested by a group of users instead of the single ones. This can be observed over various domains, as the multimedia, holidays, events, trips, restaurants and many others. These domains usually benefit from group recommenders (Kompan & Bieliková, 2014a). Historically, group recommenders are based on the single user approaches. The main challenge for the group recommendation is, in fact, to deal with conflict preferences of group members.

In order to choose and design optimal group recommender approach, it is important to consider multiple additional aspects in comparison to the single user recommendation – as the group size, members’ relationships, personal characteristics etc. It is also important to know whether the group behaves as active or passive (Masthoff, 2011). This means to recognize if the group members will actively choose items from the recommendation (tourists who choose a trip, people who go to watch a movie) or just passively experience recommendation (visitors of cafeteria where plays recommended music in background) (Kompan & Bieliková, 2014a). To solve group members’ conflict preferences the aggregation type should be chosen based on the group characteristics. There are two types based on the aggregation is performed (Masthoff, 2011; Senot, Kostadinov, & Bouzid, 2010) – aggregation of recommendations and aggregation of preferences:

                        
                           •
                           
                              Aggregation of recommendations. This approach is based on an idea that “recommendation methods were primarily intended for individuals, so they better work for them”. After generating recommendations to every group member individually, these recommendation candidates are aggregated together into a common list intended for the whole group. Ntoutsi et al. argue that this approach is more flexible than the aggregation of preferences and it is easier to optimize the process of creating a group recommendation (Ntoutsi et al., 2012).


                              Aggregation of preferences. The approach is based on the principle of aggregating all group members’ preferences into common aggregated group model. To this group representative is then recommended as to a single user (De Pessemier, Dooms, & Martens, 2012; Quijano-Sanchez, Recio-Garcia, Diaz-Agudo, & Jimenez-Diaz, 2013). Thus created and aggregated group model can be saved and used for next recommendation to the same group (in the case of regularly repeating stable groups).

Aggregation of preferences (Gross, Beckmann, & Schirmer, 2011; Lin, Chiu, & Chen, 2011; Popescu, 2012; van Deventer, de Wit, Vanattenhoven, & Gualbahar, 2013) is used more often than aggregation of recommendation (McCarthy et al., 2006; Ntoutsi et al., 2012; Quijano-Sanchez, Recio-Garcia, & Diaz-Agudo, 2010) because it reduces its main weakness, which is usability for significantly non-homogeneous groups. This shortcoming arises when members’ top preferred items are different (and also only weakly acceptable for others), while generally acceptable items did not get into group recommendation process, because they are not top items for users individually. For this reason in such a situation recommended content is preferred only by a small part of the group, perhaps only by one member.

The aggregation of recommendations approach uses recommendation to real users (the aggregation is applied in the next step), while in case of preferences aggregation is the recommendation based on the preferences on a representative single user (representing whole group preferences). This may result to skipping someone preferences. According to Guzzi it is unable to say that one of approaches is better and always applicable (Guzzi, Ricci, & Burke, 2011). Selection of aggregation approach is mainly dependent on group type and the application domain.

For aggregation both – preferences and recommendations – the aggregation strategy have to be carefully chosen. Masthoff in her work describes multiple specific aggregation strategies (Masthoff, 2004), which Senot et al. categorize into three basic strategy types – majority based, consensus based and borderline strategies (Senot et al., 2010):

                        
                           •
                           
                              Majority-based. Strategies of this kind choose from recommendation candidate items those, which prefer group as a whole. Strategies select by different criteria the generally most preferred items, while they omit any negative attitude from group members who are in the minority. Among the representatives of this strategy are included Plurality voting, Copeland rule and Approval voting.


                              Consensus-based. The aim of strategies based on the consensus is to achieve the highest level of individual group members’ satisfaction. This objective is superior to overall satisfaction of group. Strategy therefore always takes preference of all members, aggregates them somehow and then selects items item based on the common opinion of all users. Masthoff found, that when an individual user is faced with the task to select the content for the group, he behave as consensus based strategy type, because it is very close to human way of think (Masthoff, 2004). Among the representatives of this strategy are included average strategy, least misery strategy, Borda count, most pleasure strategy, average without misery strategy, and fairness strategy.


                              Borderline strategies. Strategies of this kind are indeed used to aggregate the group members’ preferences or recommendations, but they are in between the group and the individual approach. Often preferences of some group members are considered only. A typical example is the dictatorship strategy (most respected person strategy), which selects items for whole group based on the preferences of the one selected member. Strategy is used for example in situations where one member is currently more important than the rest of the group (parent, supervisor or honoree).

Masthoff in her work found, that the groups are on average more satisfied when the recommendations are generated by Borda count, average strategy, the average without misery strategy or by most pleasure strategy (Masthoff, 2011). In contrast, in these experiments failed mainly the Copeland rule, Plurality voting, Least misery strategy. According to this work, users mainly care about other group members not to be very unhappy and to be maintained justice in the group.

As we can see, users of smaller groups themselves mainly refuse majority-based strategies. These have place in larger groups, where it is difficult to take into account every group member. An example is a movie played in a bus or a music in a gym. Smaller groups as in Masthoff experiment (Masthoff, 2011) prefer more sensitive way, where everyone is considered in the final result.

According to Beliakov, Pradera, and Calvo (2007) there exist many aggregation functions, while the selection of the most suitable one for a specific application should be based on two basic decisions. At first, the selected aggregation function must be consistent with the semantics of the aggregation procedure, which gives the most suitable class or family (Min and Max, Means, Medians, Ordered weighted averaging, Choquet and Sugeno integrals, Conjunctive and Disjunctive functions, Mixed aggregation). After that, an appropriate member of that class or family should be chosen based on the character of the data and which produces adequate outputs for given inputs.

Sometimes, the group is heterogeneous and there are no similar preferences among the group members. In this case, no aggregation strategy is able to provide sufficient suggestions and thus other approaches have to be used (e.g., most visited items) (Sotelo, Blanco Fernández, Lopez, Gil, & Pazos, 2009).

Group recommenders are typically based on single method approaches, which sadly suffer from various problems. The famous – cold-start problem refers to the new user, where his preferences are unknown. In the content-based approaches this can be extended to the problem of new items respectively, while the similarity search cannot by performed until the analysis of content is finished.

Especially in the content-based (CB) recommendation, an overspecialization is often visible. Because of the similarity search, it is clear that when most similar items are recommended, some kind of “filter bubble effect” occurs.

The recommendation approach choice plays crucial role from the recommender performance and users’ satisfaction point of view. Often the collaborative filtering (CF) is used when there is more items to recommend than users in the specific domain available (Desrosiers & Karypis, 2011). On the contrary, when there it is more users than items, the content-based approach helps to reduce the amount of users. Clearly, there are plenty of shortcomings which should be considered in specific application (e.g. overspecialization, cold-start, sparse ratings).

To overcome these shortcomings and to obtain better results, recommendation approaches are often joined, which produces hybrid recommenders (Ghazanfar & Prugel-Bennett, 2010). Various strategies for the combining of recommenders as the switching, cascade or the feature combination have been proposed in the literature (Burke, 2007).

Recommender systems are used mainly to overcome the information overload problem (Taghipour & Kardan, 2008) and to improve content quality recommended to users. In comparison to commonly used approaches which use the only one recommendation method (CB, CF, knowledge based recommendation etc.), hybrid approaches often provide more robust solutions.

Content-based recommendation is based on an assumption that users like thematically similar content. For this purpose the relevant or distinctive information have to be extracted from the analyzed and recommended content. In this approach is typical to represent items by metadata which allows to determine their relatedness (Kompan & Bieliková, 2010; Weiß, Scheuerer, & Wenleder, 2008). In order to provide final recommendations several steps have to be performed. Firstly, the relevant information has to be extracted and suitable representation for the content chosen (Jačala and Tvarožek, 2012). Usually this is done by the means of various vectors, while techniques as named entity or the keywords extraction are often involved (Belém, Martins, Almeida, & Gonçalves, 2014). In some domains, the distinctive information (required for the similarity content analysis) is available in form of the metadata, e.g., movies. In such a case the metadata can be directly used for further computation.

Next, the similarity search is performed in order to find similar items to those, which were recently experienced usually (Ricci et al., 2011). For this purpose several metrics are used as the cosine similarity, Euclidean distance or Jaccard index (Pazzani & Billsus, 2007). Finally, the recommendation approach generates a recommendation for the specific user, based on his user model and connections between the items (computed in the similarity computation step). Let U and I be a set of users and items and RatedItemsu
                         ∈ Items the set of rated items by user u. The content-based recommendation recommends items with the highest rating r
                        
                           u, i
                         such (Eq. (1)) (Adomavicius & Tuzhilin, 2005):

                           
                              (1)
                              
                                 
                                    
                                       r
                                       
                                          u
                                          ∈
                                          U
                                          s
                                          e
                                          r
                                          s
                                          ,
                                          i
                                          ∈
                                          I
                                          t
                                          e
                                          m
                                          s
                                       
                                    
                                    =
                                    
                                       
                                          ∑
                                          s
                                          i
                                          m
                                          i
                                          l
                                          a
                                          r
                                          i
                                          t
                                          y
                                          (
                                          
                                             i
                                             ,
                                             j
                                          
                                          )
                                       
                                       
                                          
                                             |
                                          
                                          
                                             R
                                             a
                                             t
                                             e
                                             d
                                             I
                                             t
                                             e
                                             m
                                             
                                                s
                                                u
                                             
                                          
                                          
                                             |
                                          
                                       
                                    
                                    ,
                                    
                                    j
                                    ∈
                                    R
                                    a
                                    t
                                    e
                                    d
                                    I
                                    t
                                    e
                                    m
                                    
                                       s
                                       u
                                    
                                 
                              
                           
                        
                     

The CF is based on an assumption that similar users (based on the recent activity) tend to like similar items. As the similarity can be defined on various levels, various approaches have been proposed (e.g., horror movies, Tarantino's movies) (Su & Khoshgoftaar, 2009). Similarly to the content-based recommendation, the similarity computation step is performed, but no content analysis is required (Schafer, Frankowski, Herlocker, & Sen, 2007). Let U and I to be a set of users and items and SimilarUsersu
                         ∈ Users the set of similar users to user u (computed based on the user model similarities). The CF recommends items with the highest rating r
                        
                           u, i
                         such (Eq. (2)) (Adomavicius & Tuzhilin, 2005; Candillier, Meyer, & Boullé, 2007):

                           
                              (2)
                              
                                 
                                    
                                       r
                                       
                                          u
                                          ∈
                                          U
                                          s
                                          e
                                          r
                                          s
                                          ,
                                          i
                                          ∈
                                          I
                                          t
                                          e
                                          m
                                          s
                                       
                                    
                                    =
                                    
                                       
                                          ∑
                                          
                                             r
                                             
                                                s
                                                u
                                                ,
                                                i
                                             
                                          
                                       
                                       
                                          |
                                          
                                             S
                                             i
                                             m
                                             i
                                             l
                                             a
                                             r
                                             U
                                             s
                                             e
                                             r
                                             
                                                s
                                                u
                                             
                                          
                                          |
                                       
                                    
                                    ,
                                    
                                    s
                                    u
                                    ∈
                                    S
                                    i
                                    m
                                    i
                                    l
                                    a
                                    r
                                    U
                                    s
                                    e
                                    r
                                    
                                       s
                                       u
                                    
                                 
                              
                           
                        
                     

Personalized recommenders suffer from various problems. The famous – cold-start problem refers to the new user, where his preferences are unknown. In the content-based approaches this can be extended to the problem of new items respectively.

The hybrid recommenders are not so prone to known shortcomings of traditional methods as cold start (Bellogín, Cantador, Díez, Castells, & Chavarriaga, 2013; Braunhofer, Codina, & Ricci, 2014; Gunawardana & Meek, 2009) or they improve selected features of standard approaches, e.g., absolute acceptance rate, higher user activity rate or higher user loyalty (Domingues et al., 2012). Some of the hybrid recommenders are designed to optimize not only the recommendation precision, but also other metrics, e.g., coverage (Bellogín et al., 2013).

There are several types of hybrid recommender methods. The basic, generally respected, classification introduced Burke (Burke, 2007), who classified previously known approaches into seven basic groups accordingly to the way they use partial recommendation approaches:

                           
                              •
                              
                                 Weighted hybrid. Fixed linear equation is used to join two result lists of independent recommendation approaches. As the weighting scheme is static, the equation (ratio) have to be specified, while the constant performance is assumed. The combination of content and collaborative recommenders is used generally.


                                 Switching hybrid. Switching hybrid system consists of several recommenders, while only one is chosen to generate recommendations. In the contrast to weighted hybrid no constant performance of recommenders which are switched, is assumed. Thus the confidence value for each recommendation and recommender has to be computed and then the best estimation is used to generate recommendations.


                                 Mixed hybrid. Results of several (usually two) approaches are mixed in the stage of the presentation to the users. Generally, merging based on predicted rating or recommender confidence is used.


                                 Feature combining hybrid. In the opposite to the previous hybrid types, only one recommendation method is used when the features are combined. The hybridity of approach is caused by helper methods used to enrichment of features used by the recommendation method (more input information is available).


                                 Feature augmentation hybrid. Feature augmentation consists of several recommenders (two usually). In the comparison to the feature combining, not the basic features, but features generated by that approach are used as the enhanced training set for final recommendation. The role of helper recommender is, in fact, to enrich the input data set.


                                 Cascade hybrid. Several recommenders are involved and strict hierarchical order is defined in the cascade hybrid. The top method generates the recommendation candidates and assigns to items some priority. In the case of equal priority between multiple items, next recommender method from hierarchy is used to calculate items order.


                                 Meta-level hybrid. Similarly to the feature augmentation model learned in one recommender is used to generate final recommendation by other approach. While the feature augmentation uses several inputs, which are enhanced by other approaches, meta-level uses strictly only model generated by other recommenders involved into the process.

Described hybrid types represent wide scale of possible recommendation methods combinations or simply augmentations of input data. The final selection, in the process of designing recommender system, should be always based on specific domain characteristics and the recommendation goal. For example if there it is more recommended items with similar popularity prediction, the cascade hybrid recommender allows us to order these items using second recommender. Sometimes both content and collaborative approaches seem to be suitable, in order to reduce its shortcomings the mixed or weighted hybrid should be used. Moreover, thanks to various users’ behavior and context the switching hybrid can provide sufficient solution to such a dynamic environments.

From the other point of view, we can classify hybrid recommendation approaches based on the goal of the recommendation. Often hybrid approaches focus on increasing the precision of the generated recommendations (Bellogín et al., 2013; Li & Kim, 2003), or on reducing of cold-start problem for users or items new to system (Bellogín et al., 2013; Braunhofer et al., 2014; Gunawardana & Meek, 2009). However, there exist also approaches specialized more to the computation time optimization (Fouss & Pirote, 2007).

Hybrid recommenders become very popular in many domains last years. The benefits of hybrid approaches have been utilized in various domains as recommending movies (Lommatzsch, Kille, Kim, & Albayrak, 2013), music (Domingues et al., 2012), restaurants (Martinez, Rodriguez, & Espinilla, 2009), books (Vaz, de Matos, Martins, & Calado, 2012) etc. Except to e-commerce systems, there are plenty of hybrid methods specialized to e-learning (Cobos et al., 2013; Zhuhadar, Nasraoui, Wyatt, & Romero, 2009), digital libraries (Vellino & Zeber, 2007), careers recommendation (Bostandjiev, O'Donovan, & Höllerer, 2013) or even domain independent recommenders (Dooms, 2013). All mentioned systems were however intended for single users, while hybrid recommenders in the group recommendations domain application is very rare.

Hybrid approaches usually use the CF in combination with the CB approach (Li & Kim, 2003; Spiegel, Kunegis, & Li, 2009; Vellino & Zeber, 2007), probabilistic models (Gunawardana & Meek, 2009) or social-based filtering (Bellogín et al., 2013). There are systems switching between these two approaches also, where recommendation can rely on the content-based component for a majority of the users, switching to collaborative component only for about one third of the user base (Marx, Hennig-Thurau, & Marchand, 2010). Content-based part is joined also with the rule based recommenders (Zhuhadar et al., 2009), knowledge based approaches (Li, Lin, & Lin, 2014; Martinez et al., 2009) and the critiquing based recommenders (Chen & Pu, 2007). Another hybrid approaches use only single recommendation method as for example the semantic graphs (Lommatzsch et al., 2013) or Markov chain-based recommenders (Fouss & Pirote, 2007). The hybridity is in this case caused by augmentation of input data or information available for the recommender.

In the last years the usage of hybrid recommenders increased, while not only one metric for recommendation evaluation is used (e.g., precision and diversity, precision and relevancy). Tejeda-Lorente et al. proposed recommendation system that on the one hand looks for research resources that are relevant to the user, and on the other hand it considers the items quality to ensure the validity of research resources (Tejeda-Lorente, Porcel, Peis, Sanz, & Herrera-Viedma, 2014). Another example of this recent trend documents a system used similarly for recommendation of research resources, which in addition to their relevance considers also a collaboration possibilities in order to form multidisciplinary working groups (Porcel, Tejeda-Lorente, Martínez, & Herrera-Viedma, 2012).

Generally, the popularity of hybrid recommenders is increasing these days, as they tend to help reduce several standard approaches shortcomings. Moreover, as they often use the domain specific features, which cannot be applied to new domains, new approaches are still researched. The trend of using hybrid recommender systems can be massively observed in single user recommendations. Generally, the hybrid recommenders applied to single user recommendation tasks, outperform other approaches. Despite these results, there is a lack of hybrid recommenders intended for group of users.

One of the basic domains for group recommenders is the multimedia domain. Based on the domain characteristic it is still attractive to the researches and business, while plenty of group recommenders have been proposed in the last years. Hybrid systems begin to arise in recent years (Blanco Fernández, Arias, Lopez-Nores, Gil-Solla, & Cabrer, 2006; Kim, Kim, Oh, & Ryu, 2010; Quan & Cho, 2014; van Deventer et al., 2013), similarly, recommenders begin to use aggregation of group members’ recommendations.

In this section we describe the existing systems designed for recommendation in multimedia domain. Described systems belong to various multimedia subdomains. We extended the analysis by Kompan and Bieliková (Kompan & Bieliková, 2014a), from which we selected systems focused on multimedia content (Table 1
                        ).

The group type shows whether the system works with assessed groups (virtual) or with groups with all members’ proven presence (real). In the domain of multimedia usually real groups are formed (Ntoutsi & Stefanidis, 2012; Popescu, 2012; van Deventer et al., 2013). Its advantage in recommendation process is that if we are sure to which users we recommend to, there do not originate inaccuracies which in opposite could cause worse recommendation results. On the other hand, its disadvantage is, that users have to explicitly show their presence. This shortcoming could be in some cases eased by the stable long-time groups so-called “permanent” (Popescu, 2012; Quijano-Sanchez et al., 2010; van Deventer et al., 2013). The groups are often formed ad-hoc and their duration is temporal, thus these are usually treated as a new one (Lin et al., 2011; Ntoutsi & Stefanidis, 2012; Quan & Cho, 2014).

Both aggregation principles are used in the multimedia group recommenders – aggregation of preferences and recommendations respectively. Slight dominance is on the side of aggregation of preferences (Lin et al., 2011; Popescu, 2012; Quan & Cho, 2014; van Deventer et al., 2013) due to the opinion that aggregation in earlier phase better prevents against discrimination of group members with minor preferences. On the other side, aggregation of recommendation (Ntoutsi & Stefanidis, 2012; Quijano-Sanchez et al., 2010; Yu, Zhou, Hao, & Gu, 2006) ensures that recommended items will represent interest of the whole group. In addition, aggregation of recommendation allows the recommender to offline batch processing of recommendation for individual users and then it is possible to recommend to a newly formed group immediately.

Described approaches use various recommendation techniques. There exist hybrid recommender systems, which are however still quite rare. In the case of HbbTV, used to recommendation of TV content, is principle based on automatic enriching metadata, collecting user preferences and follow-up items recommendation. Recommendation consists of several steps; firstly, individual recommendation candidates for individual group members are generated and secondly items which are not relevant for some of group members are excluded. The last step consists of individual recommendations aggregation into the group recommendation (van Deventer et al., 2013). AHP&Bayes recommender uses Bayesian networks to infer individual group members’ genre preferences as well as program preferences, and uses analytic hierarchy process to predict group preferences of genres, based on which it recommends to group (Quan & Cho, 2014). GRec OC uses aggregation of group members’ ratings into common summated rating. Based on these ratings, CF is realized. From generated recommendation list are removed items with satisfaction rating below the threshold for some group member (Kim et al., 2010). Another group recommender Avatar in the first step aggregates group members’ preferences into a group profile (Blanco Fernández et al., 2006). Then the hierarchical and the content recommendation are applied in this system and results are extended by the CF. The hybrid method is used to dense the data sparsity in situations here, where the preference of similar item is used if actual item preference does not exist.

Except these hybrid systems, also several single method recommenders as gRecs, Adaptive correlation-based RS, Happy Movie have been proposed for the multimedia domain. System gRecs is composed from two steps. The first one uses a CF to individuals, in which items are selected based on similar users’ rating. In second step are the individual users’ recommendations aggregated into the common group recommendation (Ntoutsi & Stefanidis, 2012). Adaptive correlation-based RS system is based on idea of estimation the group ratings from correlation between the group and its members (Lin et al., 2011). In System Happy Movie users are modeled based on their profile; initial questionnaire and the feedback they gave to items. The CB recommendation considers the history of group's past recommendations (Quijano-Sanchez et al., 2010). Yu's TV in first step generates the CF for each group member individually. In next phase it aggregates recommended items by average strategy into group recommendation (Yu et al., 2006).

These systems are focused on the recommendation of TV content or movies. Another domain typical for the group recommenders is the music (Popescu, 2012; Sprague, Wu, & Tory, 2008). Groupfun system is proposed to recommendation of music for group of people going to same event to make a deal for event music. Recommendation is based on the probabilistic voting scheme of individual group members (Popescu, 2012). The PartyVote system is designed to replace the DJs in smaller house parities. Recommendation lists are created based on voting (better wins), with guarantee that at last one song will be played for every user. This guarantee rule represents an enhancement of standard voting strategy by including some kind of least misery (rule of at least one song played for every user) (Sprague et al., 2008).

Recommendation to groups represents a complex process comprising from several parts, in which important decisions resulting to recommender performance have to be made. In the phase of the recommender system design should be considered mainly the purpose of the recommendation, group type, group persistence etc.

The most interesting domain from the group recommendation point of view is the multimedia domain. Mostly active groups are formed, which tend to do not change over the time (e.g., family, group of friends).

Similarly to the single user recommendation, also group recommendation suffers from multiple problems (e.g., cold start; filter bubble). Several hybrid approaches have been proposed to overcome these shortcomings. They have been, however proposed primarily for single users (Burke, 2002) and their exploitation for groups is quite rare.

Based on the group recommendation state-of-the-art analysis described in previous chapter, we introduce an innovative mixed hybrid method for groups. In comparison to the traditional single method approaches (CF, CB), our method brings an improvement over the precision especially of very Top-N recommended items. The main idea is to reorder candidates generated by collaborative method based on results of content-based approach and thus to combine strengths of collaborative and content-based recommenders into a one hybrid approach. This way we are able to choose items preferred by both methods, which helps us to reduce the shortcomings of both approaches when used separately (e.g., collaborative – not enough information about users’ preferences or content-based – problem of enclosing the user into bubble of very similar items).

Proposed mixed hybrid method aggregates a CF candidate list of group members and also aggregate group members’ CB recommendation candidate lists (Fig. 1
                     ). Then it combines aggregated lists into one list which represents the recommendation for the whole group. In this way, the items selected as appropriate by both approaches simultaneously are recommended primarily, which increase the probability of recommending the suitable items that will satisfy the group members.

More formally proposed hybrid recommender approach consists of three basic steps:

                        
                           1.
                           Generating recommendations for each group member
                                 
                                    a.
                                    Top-N collaborative filtering (Section 3.1)

Content-based recommendation (Section 3.2)

Aggregating of
                                 
                                    a.
                                    Collaborative filtering recommendations (Section 3.3)

Content-based recommendations (Section 3.3)

Combination of candidates by reordering aggregated collaborative results based on aggregated results of content-based approach (Section 3.4)

Combination of two basic approaches (content and collaborative) ensures more specific profiling of user's interests by excluding deviant candidates from the collaborative method. Moreover, by combination of the collaborative and content-based recommendation, various domain characteristics can be stressed in order to obtain optimal recommendations. The reason is that the group is in fact the combination of multiple users with, in some extent, different tastes. So when we find recommendation candidates for whole group by CF, there is still chance that the process does not capture only really satisfying items. Inclusion of the CB recommendation step is therefore the ideal way how to recommend items that are also similar to the ones which were by group really chosen previously.

In our method we used in the CF step, a weighted cosine similarity (Eq. (3)), because it allows us to assign different weights to different preferences – and emphasizes characteristics of specific domain (e.g., cast is more important as genre in movies domain) (Višnovský, Kaššák, Kompan, & Bieliková, 2014).

                           
                              (3)
                              
                                 
                                    u
                                    s
                                    e
                                    r
                                    
                                    s
                                    i
                                    m
                                    i
                                    l
                                    a
                                    r
                                    i
                                    t
                                    y
                                    
                                       (
                                       
                                          x
                                          ,
                                          y
                                       
                                       )
                                    
                                    =
                                    
                                       
                                          
                                             ∑
                                             
                                                j
                                                =
                                                1
                                             
                                             M
                                          
                                          p
                                          r
                                          e
                                          
                                             f
                                             
                                                x
                                                j
                                             
                                          
                                          p
                                          r
                                          e
                                          
                                             f
                                             
                                                y
                                                j
                                             
                                          
                                          
                                             ∑
                                             
                                                i
                                                =
                                                1
                                             
                                             
                                                N
                                                j
                                             
                                          
                                          
                                             x
                                             
                                                j
                                                i
                                             
                                          
                                          
                                             y
                                             
                                                j
                                                i
                                             
                                          
                                       
                                       
                                          
                                             
                                                
                                                   ∑
                                                   
                                                      j
                                                      =
                                                      1
                                                   
                                                   M
                                                
                                                p
                                                r
                                                e
                                                
                                                   f
                                                   
                                                      x
                                                      j
                                                   
                                                   2
                                                
                                                
                                                   ∑
                                                   
                                                      i
                                                      =
                                                      1
                                                   
                                                   
                                                      N
                                                      j
                                                   
                                                
                                                
                                                   x
                                                   
                                                      j
                                                      i
                                                   
                                                   2
                                                
                                             
                                          
                                          *
                                          
                                             
                                                
                                                   ∑
                                                   
                                                      j
                                                      =
                                                      1
                                                   
                                                   M
                                                
                                                p
                                                r
                                                e
                                                
                                                   f
                                                   
                                                      y
                                                      j
                                                   
                                                   2
                                                
                                                
                                                   ∑
                                                   
                                                      i
                                                      =
                                                      1
                                                   
                                                   
                                                      N
                                                      j
                                                   
                                                
                                                
                                                   y
                                                   
                                                      j
                                                      i
                                                   
                                                   2
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           
                        where M refers to the number of preferences, Nj
                         is the number of metadata elements of the preference j. Prefxj
                         is the weight of preference j for user x. In this way we determine the similarity between user we recommend to and the other users. For the CF we choose set of most similar users Usimilar
                        .

Next, we create the ordered list of items rated by the users from Usimilar
                        . Items order is based on points calculated for every item by Eq. (4).

                           
                              (4)
                              
                                 
                                    i
                                    t
                                    e
                                    m
                                    
                                    s
                                    c
                                    o
                                    r
                                    e
                                    
                                    c
                                    o
                                    l
                                    l
                                    a
                                    b
                                    o
                                    r
                                    a
                                    t
                                    i
                                    v
                                    e
                                    
                                       
                                       x
                                    
                                    =
                                    
                                       |
                                       
                                          U
                                          x
                                       
                                       ∩
                                       
                                          U
                                          
                                             s
                                             i
                                             m
                                             i
                                             l
                                             a
                                             r
                                          
                                       
                                       |
                                    
                                    +
                                    
                                       
                                          
                                             ∑
                                             
                                                u
                                                ∈
                                                
                                                   U
                                                   x
                                                
                                             
                                             
                                                U
                                                x
                                             
                                          
                                          
                                          r
                                          a
                                          t
                                          i
                                          n
                                          g
                                          
                                             (
                                             
                                                u
                                                ,
                                                
                                                x
                                             
                                             )
                                          
                                       
                                       
                                          
                                             U
                                             x
                                          
                                          *
                                          c
                                       
                                    
                                 
                              
                           
                        where set of Ux
                         represents users who rated the item x (for which we rate the score). Score is primarily based on frequency of intersection between Usimilar
                         and the Ux
                         or in other words, the number of users from Usimilar
                         set who rated the item x. Items with the equivalent score are then ordered by its average rating assigned by users from Ux
                         set. The coefficient c is calculated as maximal possible item rating +1. Its usage in calculation ensures that average rating affect item score less than number of users who rated it.

The result of the proposed CF step is an ordered list (based on calculated collaborative score) of recommendation candidates that are potentially interesting for the user. After the selection of Top-N items with the highest score, their scores are transformed into integral values based on the item's position in the list. More concretely as a number of items in selected Top-N list plus 1 subtracted by item's position in list. List of Top-N items and corresponding transformed scores is used in further recommendation steps. Transformation had to be used due to the various distribution of the items scores. In the later step of recommendations combination the transformation ensures, that more suitable items (recommended by both approaches) can skip the items recommended only by collaborative approach. Our aim was also to ensure the equal importance of the collaborative and the content-based approach scores.

Often preferences of similar users used in collaborative approach do not perfectly match to preferences of a user we recommend to. In addition to this problem, collaborative approach suffers from cold start problem for new users who have not rated enough items. CB approach is, however, able to generate sufficient recommendations when there is not enough user feedback available (not enough information about users’ preferences). These shortcomings of CF we reduced by including also the CB approach. Moreover, the CB approach helps not only to reduce the new user problem, but also the new item problem – the inability to recommend items that are rated by only a few users.

Items are described by a set of metadata characterizing their features, each referring to some preference type (e.g., actors, directors, location or keywords in the movie domain). For every user a list of items best matching to his tastes is created (based on the item score content). Scores for the items are calculated as the sum of scores of individual preference type scores (Eq. (5)). In other words our method looks for items, which from the preference type point of view contain some of the user's most preferred metadata elements. For example, if a user likes fantasy movies directed by Peter Jackson or Steven Spielberg, based on
Eq. (5), movies described by such a metadata (directors Jackson or Spielberg, genre fantasy etc.) will obtain higher item score content as other movies such as horror movies directed by Hitchcock. This can be interpreted as a filter used to choose items that are suitable from views of individual preference types (preftypes
                        ).

                           
                              (5)
                              
                                 
                                    i
                                    t
                                    e
                                    m
                                    
                                    s
                                    c
                                    o
                                    r
                                    e
                                    
                                    c
                                    o
                                    n
                                    t
                                    e
                                    n
                                    
                                       t
                                       x
                                    
                                    =
                                    
                                       ∑
                                       
                                          p
                                          t
                                       
                                       
                                          p
                                          r
                                          e
                                          
                                             f
                                             
                                                t
                                                y
                                                p
                                                e
                                                s
                                             
                                          
                                       
                                    
                                    w
                                    e
                                    i
                                    g
                                    h
                                    
                                       t
                                       
                                          p
                                          t
                                       
                                    
                                    *
                                    p
                                    r
                                    e
                                    
                                       f
                                       
                                          s
                                          c
                                          o
                                          r
                                          e
                                          ,
                                          
                                          p
                                          t
                                       
                                    
                                    ;
                                    
                                    p
                                    r
                                    e
                                    
                                       f
                                       
                                          s
                                          c
                                          o
                                          r
                                          e
                                          ,
                                          p
                                          t
                                       
                                    
                                    =
                                    
                                       |
                                       
                                          
                                             U
                                             
                                                p
                                                t
                                             
                                          
                                          ∩
                                          
                                             I
                                             
                                                x
                                                ,
                                                p
                                                t
                                             
                                          
                                       
                                       |
                                    
                                 
                              
                           
                        where the importance of assigned preference type score (pref
                        
                           score, pt
                        ) varies depending on the type of metadata, because we attribute different weight (weightpt
                        ) to individual preference types (pt). Pref
                        
                           score, pt
                         is calculated as frequency of intersection between set of user's m most preferred metadata from pt (Upt
                        ) and set of item x metadata from pt (I
                        
                           x, pt
                        ). Number of user's most preferred metadata (m) considered for each preftype
                         have to be experimentally set.

The result of proposed CB recommendation step is an ordered list (based on calculated content score) of recommendation candidates that are potentially interesting for the user. Next, the items with the highest scores are selected. Finally, the score transformation is performed (as in case of collaborative filtering step).

Aggregation of group members’ CF candidate lists consists of calculation of aggregated score for each item occurred in some of these group members’ lists. Aggregated score of every item is calculated as a sum of individual users’ scores (Eq. (6)) (additive strategy, Masthoff, 2004). Several studies have been exploring the usage of various aggregation strategies (Beliakov et al., 2007; Masthoff, 2011). For this type of aggregation, the family of conjunctive aggregations is the most suitable, because it does not allow low scores for some criteria (group members scores) to be compensated by other scores (Beliakov et al., 2007). The additive strategy seems to be preferred by the group members often (Kompan & Bieliková, 2014a, 2014b; Masthoff, 2004).

                           
                              (6)
                              
                                 
                                    i
                                    t
                                    e
                                    m
                                    
                                    s
                                    c
                                    o
                                    r
                                    e
                                    
                                    c
                                    o
                                    l
                                    l
                                    
                                    a
                                    g
                                    
                                       g
                                       
                                          x
                                          .
                                       
                                    
                                    =
                                    ∀
                                    u
                                    ∈
                                    G
                                    ;
                                    ∑
                                    t
                                    r
                                    a
                                    n
                                    s
                                    f
                                    o
                                    r
                                    m
                                    e
                                    d
                                    
                                    i
                                    t
                                    e
                                    m
                                    
                                    s
                                    c
                                    o
                                    r
                                    e
                                    
                                    c
                                    o
                                    l
                                    l
                                    a
                                    b
                                    o
                                    r
                                    a
                                    t
                                    i
                                    v
                                    
                                       e
                                       
                                          x
                                          ,
                                          
                                          u
                                       
                                    
                                 
                              
                           
                        where G represents an actually aggregated group and transformed 
                        item 
                        score 
                        collaborative
                        
                           x, u
                         the transformed item collaborative score obtained from the collaborative step of proposed hybrid recommendation approach. In the opposite to the aggregation of collaborative candidates, the aggregation of group members’ content-based recommendation candidate lists do uses only information to how many group members is the candidate item recommended to (Eq. (7)).

                           
                              (7)
                              
                                 
                                    i
                                    t
                                    e
                                    m
                                    
                                    s
                                    c
                                    o
                                    r
                                    e
                                    
                                    c
                                    o
                                    n
                                    t
                                    
                                    a
                                    g
                                    
                                       g
                                       
                                          x
                                          .
                                       
                                    
                                    =
                                    ∀
                                    u
                                    ∈
                                    G
                                    ;
                                    ∑
                                    
                                       (
                                       
                                          1
                                          
                                          i
                                          f
                                          
                                          i
                                          t
                                          e
                                          
                                             m
                                             x
                                          
                                          ∈
                                          C
                                          n
                                          t
                                          R
                                          C
                                          
                                             L
                                             u
                                          
                                          ;
                                          e
                                          l
                                          s
                                          e
                                          
                                          0
                                       
                                       )
                                    
                                 
                              
                           
                        where G represents an actually aggregated group, CntRCLu
                         is a CB recommendation candidate list of user u from group G. Clearly, there is a chance that none of the content-based candidates are identical for two users. From the final recommendation point of view this is not an issue, while the collaborative aggregation provides at least average suggestions for the group.

After generating the aggregated recommendation candidate lists from collaborative and content-based approaches, the last step of our method for hybrid recommendation is applied. According to domain or to its long lasting items we are working with, we chose the mixed hybrid method. Main reason is that group will probably interact with only few items, typically with the single one, so it is suitable to recommend small amount of very precisely chosen items.

The main idea is to reorder collaborative candidates based on CB recommendation results. Prioritizing of collaborative candidates, which are also recommended by CB method, is used to identify items which are the most appropriate to recommend as very first ones to recommend (Fig. 2
                        ). A new ordered list of recommendation candidates, which is primarily based on collaborative candidates list, is computed in this final step. A hybrid score is calculated for every item in collaborative candidates list (Eq. (8)). Sometimes, there is no content score for some candidates (as two recommendation method are used to generate candidates, identical candidates are not guaranteed). In such a case only the collaborative item score is considered. Similarly, when no collaborative score is available for some candidate, only the content item score is considered.

Transformed item scores (both collaborative and content) used in the calculation are based on item's position in the candidates lists, not their original score, which was used just to determine these positions. The transformation has to be used due to the various distributions of the items scores.

                           
                              (8)
                              
                                 
                                    i
                                    t
                                    e
                                    m
                                    
                                    s
                                    c
                                    o
                                    r
                                    e
                                    
                                    h
                                    y
                                    b
                                    r
                                    i
                                    
                                       d
                                       x
                                    
                                    =
                                    
                                    t
                                    r
                                    a
                                    n
                                    s
                                    
                                    i
                                    t
                                    e
                                    m
                                    
                                    s
                                    c
                                    o
                                    r
                                    e
                                    
                                    c
                                    o
                                    l
                                    l
                                    
                                    a
                                    g
                                    
                                       
                                          
                                             g
                                             x
                                          
                                       
                                       *
                                    
                                    max
                                    
                                       (
                                       
                                          t
                                          r
                                          a
                                          n
                                          s
                                          
                                          i
                                          t
                                          e
                                          m
                                          
                                          s
                                          c
                                          o
                                          r
                                          e
                                          
                                          c
                                          o
                                          n
                                          t
                                          
                                          a
                                          g
                                          
                                             g
                                             x
                                          
                                          ,
                                          
                                          1
                                       
                                       )
                                    
                                 
                              
                           
                        
                     

A result of final hybrid recommendation is a list of recommendation candidates ordered by calculated hybrid score (list contains all collaborative candidates, ordered by their importance in CB method). Finally Top-N items with the highest scores are recommended. The N have to be chosen in respect to the specific domain.

@&#EVALUATION@&#

In order to explore characteristics of proposed approach and to demonstrate the performance increase, we realized several experiments. With regard to compare obtained results to other recommenders we used the MovieLens dataset, which is widely used in the domain of recommender systems. Often there is problem to perform experiments with real users (as large number of users have to be available to create only a few groups), thus offline experiments are conducted by researches usually (Baltrunas, Makcinskas, & Ricci, 2010; Burke, 2000; Kagita, Pujari, & Padmanabhan, 2013; Lin et al., 2011).

We also evaluate proposed method by live experiment with real users. To ensure the correctness of obtained results, we perform our experiments for groups and also for single users. Obtained results were compared to the baseline approaches we implemented, but the state-of-the-art comparison was also performed.

As the first experiment used to verification of proposed recommendation method for purposes of groups, we conducted a quantitative synthetic experiment. This experiment was aimed primarily to explore the method performance on a significantly large dataset. This kind of evaluation has in fact a good representative value, because can be anytime repeated with the same results and used for comparison to other approaches.

Due to the uniform usage of existing dataset for multiple recommendation methods we ensured that the risks of unintended changes were avoided during the experiment (user's preference, environment, user distract), which can occur in the experiments with the users in real time.

In this experiment we used MovieLens 10 M dataset (approx. 10 M ratings from 71k users on 10 M movies on the 1–5 points scale obtained from real MovieLens recommender service), which is in recommender systems domain used usually (Baltrunas et al., 2010; Burke, 2000; Kagita et al., 2013; Lin et al., 2011). Experiment was performed with a sample of 20k users. The items features as genres, directors, keywords and actors were obtained from the Internet Movie Database (IMDb)
                              2
                           
                           
                              2
                              
                                 www.imdb.com.
                            database by matching the movie name and year. In order to generate groups as real as possible, we generated groups at various levels of homogeneity. For this purpose the users’ similarity was examined as the pairwise weighted cosine similarity between all users (users’ user model were compared).

Amer-Yahia in his work declared that groups are created mostly by users whose similarity is above a certain threshold, while best results were obtained using average users’ similarity measure (Amer-Yahia, Roy, & Chawlat, 2009). Based on this, we identified the distribution of users’ pairwise similarities (Fig. 3
                           ). As we discovered that median (0.359398) and the arithmetic mean (0.363073) are almost identical in our dataset, we decided to use the threshold equals to users’ average similarities in further experiments.

@&#METHODOLOGY@&#

Users’ item ratings were divided by stratification, to the train and the test set (80:20). Next, groups of sizes 2–4 users were generated (used group sizes are based on the work of O'Connor, who in the 1 year-long experiment found that users in the domain of multimedia are interested mostly in groups up to size 4 (O'Connor, Cosley, Konstan, & Riedl, 2002)). To choose users into one group, they needed to satisfy the condition that their pairwise similarity is above the defined threshold.

Next, the group recommendations based on proposed hybrid approach were generated and the precision of such recommendations was computed. Chosen methodology of offline experiments evaluation is similar to methodologies performed with generated groups by other authors (Baltrunas et al., 2010; Burke, 2000; Kagita et al., 2013; Lacko and Kvasnička, 2008; Lin et al., 2011). As the groups are synthetically generated, we need to define conditions, when would be recommended item considered as chosen by group (only single user preferences are known from the dataset). The initial condition we used, in order to consider that the item is liked by the group, was that this item has to be liked independently by all group members. However, we realized that this condition is too strict, because for plenty of groups there were almost no items satisfying this condition (no intersection between individual group members tastes). Because of this we added the second condition for the synthetic groups creation – at least N items, which all of the group members have included in test set have to exist. While during the experiments we used N equal to 5 or 10 items. Based these restriction the total of 1000 groups for each N and group size were generated.

@&#RESULTS@&#

For each group, personalized recommendations were generated using our proposed group hybrid recommender. Because of the strict rule for amount of items liked by all users, the precision obtained in synthetic experiments is slightly lower as the precision obtained from experiments with real groups. Similarly to our experiments, Quijano-Sánchez (Quijano-Sánchez, Recio-Garcıa, & Dıaz-Agudo, 2011) experimented over synthetic groups within the movie domain. Comparing results of seven aggregation strategies, the precision reported has not exceeded 0.4 for group of size 3 and 5.

The recommendation precision of higher number of items decreases regardless on the group size (Table 2
                           ). It is therefore more difficult to find, e.g., five suitable items to recommend as one or two items to recommend for the group. This natural rule (the precision decrease) is strengthened by the fact that we used a synthetic experiment (low number of items in the test set for group members, no interaction between group members). In the real group, however, some group members could persuade the rest that the recommended item is a suitable choice (Ricci et al., 2011). We examine the performance of proposed approach without this shortcoming in the following experiment with real groups.

As we can see, the group size influences the precision mostly when more items are recommended (Table 2 – p@2–5). The reason is that our strictly defined rule for the group preference (all group members have to like the recommended item) eliminates more items in larger groups than in smaller ones (dataset sparsity).

In the groups containing users with five common items we can observe increasing precision with increasing group size, which is caused by the better aggregation phase using recommendations from multiple sources. In groups with multiple items common for all members (10 at least), we can however see the opposite trends. This is primarily caused by the impact of group members’ similarity. Groups with multiple items in common consist also of more similar users, what causes the higher precision for the smaller groups.

The results obtained in offline experimentation suggest that proposed hybrid group recommendation performs well for various group sizes and various level of groups’ homogeneity. In order to analyze the performance of our proposed approach in real settings, we performed an online experiment with real users. This experiment was performed via experimental recommender web service (Fig. 4
                        ), where could users live interact with recommendation system. In the experiment we compared obtained results of the proposed method to the multiple reference methods and with the state-of-art approaches as well. The main difference between a live online experiment realized with a real users in a real time and an offline experiment realized with captured data from datasets is the users’ ability to give a feedback direct to the recommendation in case of live experiment (which is not possible in case of offline experiment).

We asked the total of 31 users to participate in our experiment. Participants represented both males and females (3:2), while various age distribution was covered (18–30). Each of participants firstly rated at least 30 movies before the experiment (provided explicit feedback). Items were rated on a six point scale (0 – lowest, 5 – highest score). Similarly, to the previous experiment, movies metadata were obtained from the IMDb database. In the experiment, we asked participants to create groups, in which they want to watch movies. One person could be member of multiple groups, but two groups cannot contain exactly the same users. Group members mostly knew each other, but there were not only friends in groups. Users created their own groups, in total they created 63 groups of 2 members, 28 groups of 3 and 12 groups of the size 4. For each group size, the groups were split into two sets in order to compare proposed approach to the state-of-the-art.

@&#METHODOLOGY@&#

We focus to explore the performance of the proposed method in comparison to existing recommendation methods. In the experiment, we compared proposed method to the approaches used in existing recommendation systems – PolyLens, Yu's TV and gRecs (our implementation), which belong to most known in the domain of group movie recommendation.

All of the reference systems use the same group type (real groups) and recommendation approach (collaborative, which is a part of proposed method) as our proposed method. The only difference between these systems is the aggregation strategy. PolyLens uses the least misery strategy, Yu's TV an average strategy and gRecs uses various variations as the least misery strategy, justice strategy and the most satisfaction strategy.

To every group we have presented two recommendations – one generated by proposed approach and one by reference. The reference method was chosen randomly, and anonymously presented to the groups (no information about methods was provided). Within each recommendation, we presented every group an ordered list of five items and asked the group members to express the feedback (in addition the feedback for group, we collected also feedback form every group member individually).

We experimented with five items, according to the work of Quijano-Sanchez et al., who stated that users want to get recommended up to this amount (Quijano-Sanchez et al., 2013). With more items recommended users would not be able to determine the order of recommended items and thus they would be unable to decide well as a group.

Rating was carried out by assigning 0–5 points to each item. In addition to the rating of individual items, the overall satisfaction for every recommended list as a whole was collected (by the same way as in case of individual items rating).

We also evaluated the recommendation precision p@5 (precision for five recommended items) and normalized discounted cumulative gain measure (NDCG). NDCG uses a graded relevance scale of items in a recommendation result set. It is calculated as division quotient of Discounted cumulative gain (DCG) and Ideal discounted cumulative gain (IDCG) (Eq. (9)).

                              
                                 (9)
                                 
                                    
                                       N
                                       D
                                       C
                                       
                                          G
                                          x
                                       
                                       =
                                       
                                          
                                             D
                                             C
                                             
                                                G
                                                x
                                             
                                          
                                          
                                             I
                                             D
                                             C
                                             
                                                G
                                                x
                                             
                                          
                                       
                                       ;
                                       
                                       D
                                       C
                                       
                                          G
                                          x
                                       
                                       =
                                       
                                       
                                          ∑
                                          
                                             i
                                             =
                                             1
                                          
                                          x
                                       
                                       
                                          
                                             
                                                2
                                                
                                                   r
                                                   a
                                                   t
                                                   i
                                                   n
                                                   
                                                      g
                                                      i
                                                   
                                                
                                             
                                             −
                                             1
                                          
                                          
                                             l
                                             o
                                             
                                                g
                                                2
                                             
                                             
                                                (
                                                
                                                   i
                                                   +
                                                   1
                                                
                                                )
                                             
                                          
                                       
                                       ;
                                       
                                       
                                       I
                                       D
                                       C
                                       
                                          G
                                          x
                                       
                                       =
                                       
                                       
                                          ∑
                                          
                                             i
                                             =
                                             1
                                          
                                          
                                             r
                                             e
                                             o
                                             r
                                             d
                                             e
                                             r
                                             e
                                             d
                                             _
                                             x
                                          
                                       
                                       
                                          
                                             
                                                2
                                                
                                                   r
                                                   a
                                                   t
                                                   i
                                                   n
                                                   
                                                      g
                                                      i
                                                   
                                                
                                             
                                             −
                                             1
                                          
                                          
                                             l
                                             o
                                             
                                                g
                                                2
                                             
                                             
                                                (
                                                
                                                   i
                                                   +
                                                   1
                                                
                                                )
                                             
                                          
                                       
                                    
                                 
                              
                           where x is an ordered list of recommendation results. DCGx
                            measures score of the list x considering the user's items ratings and their positions in the result list. Items’ importance decreases proportionally with its position in the list x. IDCGx
                            measures the score calculated by same way as DCGx
                           , but from ideally reordered list x (items ordered decreasingly by its rating). NDCG is a real number division quotient of these two measures.

@&#RESULTS@&#

We focused to explore the performance of proposed approach in comparison to the state-of-the-art – especially the precision, users’ satisfaction (from the item and the whole recommended list respectively) and the quality of recommended items order.

We discovered that the groups used to adjust their feedback for evaluated approaches based on the rating of first approach. In other words, after providing score for the first approach they have assigned the score for the second approach on the “better or worse” pattern. This pattern can be observed not only from the single items point of view, but the whole recommended lists were judged similarly.

To better understand the performance of compared approaches, we also provide the average results of our method (HYB_AVG) and of reference methods (REF_AVG). Generally, our method obtains in all 48 cases better average results.

As we can see (Fig. 5
                           a and b), from the general point of view proposed hybrid method obtains better results in comparison to other approaches. The difference in groups (Fig. 5a) and users’ (Fig. 5b) satisfaction is increasing proportionally with the group size. This satisfaction increase is more visible for group instead of individuals, as based on the group interaction the group conformity occurs (Ricci et al., 2011).

Results also show (Fig. 5c and d) that proposed method reaches higher precision than the reference methods. The surprising fact we discovered, is that the precision grows proportionally with group size. In previous offline experiments, where the automatically generated groups were used, the opposite trend occurred. The reason is that if preferences of more users are aggregated (group size), than more generally liked items are recommended.

As we can expect, used methods of group recommendation and neither the aggregation strategies have no impact on the amount of item rating by group (Fig. 5e) or by group members (Fig. 5f).

Moreover, results show (Fig. 5g and h) that the aggregation method has increasing quality effect to recommended items ordering. This effect we measured by normalized discounted cumulative gain metric (NDCG). Our proposed method achieves higher score than the both reference methods in all settings used in experiments.

Results show that the proposed method achieves the improvement of group recommendation results in comparison with the reference systems (PolyLens, Yu's TV and gRecs). Improvement can be observed in increased recommendation precision, improved satisfaction with the recommendation as a whole and especially in improvement of the recommended items order (interesting are recommended at higher positions).

In addition to the online experiment we compared results of proposed method (HYB_AVG) with results published by other authors. We compared results of proposed approach to results of approaches from multimedia and books domain respectively (Fig. 6
                           ).

Reference methods Kag1–Kag4 have been proposed by Kagita et al. (Kagita et al., 2013). They are based on the principle of virtual users representing the interests of the whole groups. When creating a virtual user from group members’ user models various weights are considered (Kag1, Kag3 or with different weights restricted by maximum threshold Kag2, Kag4). The reference method (Kag5), is based on aggregating group members’ preferences, not the members’ user models as was done in previous Kag1–Kag4 methods.

Group collaborative filtering of movies was described also by Kim et al. (Kim et al., 2010). User's similarity used for recommendation is based on metadata of keywords describing individual movies. In the work, two methods have been proposed – benchmark method Kim1 and Kim2 method considering in addition the individual user importance inside the groups.

Wang et al. proposed group recommendation based on the social graph (Wang, Zhang, & Tan, 2011). Wan1 uses collaborative approach, similar users are searched by the random walk algorithm. Method Wan2 uses also the social graph, which is in this case enriched with additional meta-information describing items.

Proposed method was compared with the state-of-the-art methods that use comparable evaluation methodology (Fig. 6). To be able to compare the results of real-scenario recommendation of (1–10 items) we have chosen works that use the precision@n metric with small coefficient n (i.e., 5) and also works with similar application domain. Two of these methods were proposed for movies recommendation (Kagita et al., 2013; Wang et al., 2011), one for recommendation of books (Kim et al., 2010). In these works, however, were not presented results for smaller groups (only groups of size 5, 10, 20, 30 users for Kim1–2 and 5, 10, 20 users for Wan1–2) which are typical for the domain of movies – we are focusing on. Thus we provide the best comparison available in order to reach the goal of the evaluation – a comparison of the group recommendation precision of small amount of items.

As we can see, the precision of results that our method reached in experiment is higher. The main reason is that we evaluated recommendation for relatively small amount of items, where proposed hybrid method shows its strong features.

Proposed group recommender is able to recommend to group of any size. In previous section we aimed to groups with most typically created sizes (2)–(4). From our work perspective, is the single-user recommendation, recommendation to group of size one. In order to show the benefits of proposed hybrid recommender for single-user, we compared its performance to components used (collaborative filtering and content-based recommendation).

For the evaluation we used a subset of MovieLens 10 M dataset. Dataset consists of user ratings (1–5 scale) on at least 20 movies per user. The subset used for the experiments consists of 6000 users. As a result we processed together 662k ratings and for collaborative component we calculated over 18 M mutual user to user similarities.

Since the dataset contains only genres of movies as the metadata information, we needed to expand the metadata information in order to be able generate content-based recommendations. Similarly to previous experiments, we used the data obtained from the IMDb database including the item title (ID), list of genres, keywords, actors and directors.

@&#METHODOLOGY@&#

Firstly we compared the performance of the hybrid recommender to its collaborative and content-based recommendation components. The experiment aimed to demonstrate that proposed mixing mechanism achieves better performance than the content and collaborative recommender used alone.

Moreover each user's rating history was randomly split into train and test set (80% training set, 20% test test). Next, the standard offline evaluation was performed, while the ratings for train set were used to create user models, based on which the recommendation were generated and next compared to the test set.

For the performance evaluation we used the precision metric, which is widely used in the recommender systems evaluation. We focused on the recommendation precision for 1, 3, 5, 10 and 15 items respectively (p@1, 3, 5, 10, 15). In addition to the precision, we explored the performance of our recommender depending on the recommended items’ position in the list. In other words, we monitored whether users prefer items from the higher recommendation list positions. To evaluate the performance of such characteristic we computed the precision independently for each of the first 15 positions in the results list.

As we can see (Table 3
                           ) proposed hybrid approach outperforms the performance of its components in all settings. The decreasing trend of precision at higher levels can be observed. Both, this is a standard pattern caused by the character of the precision metrics and the split of the train and test set. Moreover, the dataset used for the evaluation guarantees at least 20 ratings per users, thus sometimes there is less user ratings in the test set as recommended items. This is the reason why the content-based component obtained lower results from the precision point of view. As the dataset does not contain only limited amount of users’ ratings and movies which similarity is computed, content-based recommender, used alone, do not provide sufficient recommendation. On the other hand, when used as the hybrid recommendation component, it brings significant improvement.

The biggest improvement can be observed when recommending only a few of items (p@1, p@3). In other words, if the proposed hybrid approach scores (hits user preference and the movie), this will more likely occur in the top of the recommended list (Fig. 7
                           ). In the domain of multimedia this pattern can be considered as desired as often only a few items are recommended. Moreover, as the result of proposed single-user recommendation is used in the next step for aggregation and recommendation to the groups, it is critically important to optimize very Top-N recommendation performance.

There is wide range of precision obtained by today's single-user recommenders over the MovieLens dataset reported in the literature. Gupta reported the highest performance for precision p@5 not exceeding 0.27 (Gupta & Mathew, 2012). The average performance approx. 0.38 was reported by Jelassi et al. (Jelassi, Yahia, & Nguifo, 2013). The highest precision – 0.72 is was reported by Elahi et al. (Elahi, Ricci, & Rubens, 2014) which is comparable to our results.

Obtained results support our hypothesis that proposed hybrid method increases the precision of very Top-N hybrid recommendation results when recommending to group of size one i.e. single users.

@&#DISCUSSION@&#

Our method uses collaborative filtering as the primary recommendation approach. It follows that recommendation candidates for each group member are selected based on the community tastes. Group could however be heterogeneous, so from the proposed items it is desirable to choose the items similar to the tastes of individual users. This is ensured by usage of the content-based recommendation approach. For this reason we consider the proposed mixed hybrid method as proper choice, especially in domains with small amount of items experienced per session.

Our experiments showed that proposed method increases the quality of recommended items ordering (higher rated items are recommended at higher positions) in comparison to used state-of-the-art methods. This is supported by normalized discounted cumulative gain metric (NDCG), where our method reaches higher value for groups and also for its members individually.

Moreover, proposed approach increases the precision of recommendations generated for groups (including groups of size one) proportionally to the item positions in the recommended list. In other words, the major improvement of precision is observed on the top list positions. The result is the ability to recommend the lower amount of precisely chosen recommendations. We discovered that the recommendation precision grows proportionally with group size, which means that bigger groups were generally more satisfied than the lower ones using proposed approach.

We also observed positive result of proposed method in the increase of the group satisfaction with the recommendation. The satisfaction was measured by an explicit rating of recommended item list made by groups and also by its members. Similarly to precision metric, we observed higher satisfaction increase in case of larger groups. This result applies for group as a whole and also for its members individually, but it is more visible for whole groups than for its members’ satisfaction.

Moreover, we designed our method to be usable for individuals as good as for groups of users. We compared recommendation precision of proposed hybrid method (group size 1) with a recommendation approaches it combines. We found out that proposed hybrid method increases the recommendation precision in comparison to individually used collaborative filtering or content-based recommendation.

Proposed method uses the aggregation of single-user recommendations strategy. It is more appropriate to aggregate the individual users’ recommendations based on real preferences in comparison to recommendations based on preferences. Moreover, this strategy not only spares the computational but the time complexity respectively. The reason is that recommendations could be precomputed for every user once and then it could be used in every group he is part of. In this case it is only needed to aggregate and mix recommendations which is generally cheaper operation in comparison to users’ recommendation computation.

Proposed group hybrid recommender is intended to be the domain independent. However it is specialized mainly in situations where users use to experience content together in groups and with only a few items typically seen per session. For these reasons we evaluated it in the domain of multimedia by recommendation of movies as a typical and very popular representative of this kind of domain. As we showed in experiments, the main contribution of proposed method is the increase of the item ordering quality and of the precision of recommendation on very Top-N items.

@&#SUMMARY@&#

Activities in some domains are typically performed by whole groups of users instead of individuals. Typical examples are watching movies with friends, going to lunch with colleagues, travelling on holidays with family etc. For these purposes we proposed an innovative mixed hybrid method, which brings an improvement over the recommendation precision especially for very Top-N recommended items. Our method was designed primarily for purposes of multimedia content, or even more specifically for recommendation of movies, but its principle is fully domain independent and it is suitable to be used in any domain with small amount of items typically consumed per session.

Proposed approach is limited to recommendations for small-size groups (2-4) – which are most used in today's scenarios (e.g., movies, TV). The large group sizes (e.g., all gym customers) will lead to the recommendation precision decrease, which is on the contrary standard effect in the group recommendation.

The contributions of the paper are the following:

                           
                              •
                              We proposed a novel mixed hybrid group recommender, focusing on very Top-N recommendations. It outperforms the state-of-the-art group recommenders both in online and offline evaluation respectively.

Our proposed method improves the recommended items order on the very Top-N positions.

Presented method is applicable to single-user recommendations as well (group size 1).

As the recommendation approach itself is separated from the user model, our method is domain independent.

The group satisfaction is still not well-researched topic. It is clear that the group members are the social beings and thus obtaining the group consensus seems to be complex optimization problem. Considering of relations between the group members and their personalities seems to be a logical step for future research in the field of the group recommendation. This is a need for better understanding the mechanisms of members’ influence within the groups. We believe that deeper understanding of these processes can further improve the quality of the recommendation to groups and increase the group satisfaction as well.

@&#CONCLUSION@&#

In this paper we proposed a novel hybrid group recommender, which reorders candidates generated by the collaborative recommendation based on results of the content-based approach. By the improvement of the quality of the very Top-N recommendations generated for the group members (precision), the group decision process is shortened and the user-experience increased. By the combination of two recommendation approaches we reduced the shortcomings of both approaches when used separately (e.g. collaborative – not enough information about users’ preferences or content-based – problem of enclosing the user into bubble of very similar items). Thanks to this, proposed group recommender outperforms the state-of-the-art approaches and improves the performance of Top-N recommendations provided to group members.

@&#ACKNOWLEDGMENTS@&#

This work was partially supported by the Scientific Grant Agency of the Slovak Republic, grant No. VG 1/0646/15 - Adaptation of access to information and knowledge artifacts based on interaction and collaboration within web environment and is the partial result of the Research & Development Operational Programme for the project Research of methods for acquisition, analysis and personalized conveying of information and knowledge, ITMS 26240220039, co-funded by the ERDF. We thank also for the Young researchers support from Slovak University of Technology in Bratislava.

@&#REFERENCES@&#

