@&#MAIN-TITLE@&#An optimization approach for district heating strategic network design

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           We model the incremental evolution of a district heating network.


                        
                        
                           
                           Technical and economic factors are taken into account.


                        
                        
                           
                           Testing is performed on a real-world network.


                        
                        
                           
                           Extensive analysis on large randomly generated networks.


                        
                        
                           
                           The model is incorporated into a software package.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Linear programming

District heating

Optimization

Energy

Graph theory

@&#ABSTRACT@&#


               
               
                  District heating systems provide the heat generated in a centralized location to a set of users for their residential and commercial heating requirements. Heat distribution is generally obtained by using hot water or steam flowing through a closed network of insulated pipes and heat exchange stations at the users’ locations. The use of optimization techniques for the strategic design of such networks is strongly motivated by the high cost of the required infrastructures but is particularly challenging because of the technical characteristics and the size of the real world applications.
                  We present a mathematical model developed to support district heating system planning. The objective is the selection of an optimal set of new users to be connected to an existing thermal network, maximizing revenues and minimizing infrastructure and operational costs. The model considers steady state conditions of the hydraulic system and takes into account the main technical requirements of the real world application. Results on real and randomly generated benchmark networks are discussed.
               
            

@&#INTRODUCTION@&#

A good energy policy should be focused on two main aspects: the reduction of energy consumption and a better use of the available sources. From this point of view, District Heating (DH) is an important resource to reach environmental sustainability and energy efficiency of modern cities. Broadly speaking, DH concerns the centralized production of thermal and possibly electrical energy and its distribution to a network of users, thus obtaining much higher efficiency in the production and maintenance costs with respect to the individual production by the end-users (see, e.g., Gustavsson, 1994; Nitsch, Krewitt, & Langniss, 2004, chap. 4) . During the last decades DH has reached a considerable diffusion not only in northern Europe, but also in central and southern European countries, North America and Japan. Just to give an example of the steep trend line of DH systems implementation, in Italy from 2000 to 2010 the number of towns having DH networks increased from 27 to 104, the kilometers of pipe raised from 1000 to about 3000 and the thermal and electric capacity produced more than doubled, reaching 7700 gigawatt hours (see EuroHeat & Power, 2013). This also correspond to a yearly saving of 1.3 megatonnes of CO2. A similar growing trend can be found in other European nations (see Table 1
                     ) and also in other countries such as China – with 147,000 kilometers of pipes and 338 gigawatt hours – and Canada, where Dalkia serves 19 towns with a total DH extension of about 30 megameters. For more information about the DH infrastructures diffusion the reader is referred to the survey (EuroHeat & Power, 2013), performed in 2013 by EuroHeat & Power, the European association of district heating and cooling.

Starting from early infrastructures fed by traditional boilers, the DH networks saw a progressive increase in the complexity of the energy production system, which today are mainly based on modern Combined Heat and Power (CHP) systems with co-generation engines, and in many cases integrate renewable energy sources such as Waste-to-Energy, Solar, Geothermal and Biofuel engines.

The main aim of this paper is to show how mathematical optimization techniques developed within operations research may offer appropriate methods to support planning and management activities in the DH field. In particular, we focus our research on finding a viable quantitative methodology to support strategic decisions and commercial policies related to the connection of new users to an existing DH network. The resulting optimization problem is modeled through the application of graph theory and integer linear programming (ILP) paradigms. To better explain the problem we study, let us consider Fig. 1
                      which depicts a simple DH network whose nodes and links are associated with the following elements: one plant (represented by node 1), a set of existing users already connected to the network (i.e., nodes 4, 7 and 13), a set of potential users that can be connected to the network in the future (i.e., nodes 10, 11 and 12), a set of pipes which connect the existing users (i.e., the links in solid lines) and a set of potential pipes (i.e., the links in dashed lines) which might be lied down when potential users are connected to the network. Our strategic network design problem aims at deciding which potential users can be connected to the network in order to maximize the overall profit for the energy provider, while respecting the physics and hydraulic operational conditions of the system. As shown in the remainder of the paper the optimal solution of such a problem is then obtained by constructing a graph representation of the DH network and considering an ILP model which is then solved through a commercial solver.

The optimization of DH networks has received relatively little attention in the literature. A first type of modeling approaches aims at representing in detail the network physics through sets of non-linear equations derived from the thermo and fluid dynamic theories. In this way one generally obtains a very good precision of the representation of fluid distribution and thermal gradients along the different network components. However, the algorithmic difficulty of the solution of the required non-linear relations makes such approaches not adequate to model large networks, as those found in real-world applications where hundreds of users are served by the DH system. In this case, aggregation techniques of the network elements are often used to reduce the size enough to permit the numerical solution of the model at the expense of the accuracy of the network representation. Examples of non-linear models for DH network design are presented by Bøhm, Pálsson, Larsen, and Ravn (2008), and Park, Kim, and Kim (2000) while network aggregation techniques are discussed in Larsen, Bøhm, and Wigbels (2004), Larsen, Palsson, Bøhm, and Ravn (2002), Loewen, Wigbels, Althaus, Augusiak, and Renski (2001a, 2001b), Zhao (1995) and Zhao and Holst (1998). An alternative modeling of the DH networks is based on their empirical simulation starting from observation of temperature and pressure distributions of the real system (see, e.g., Benonysson, Bøhm, & Ravn, 1995; Pálsson, 1993). Such approaches require long observations of the system to get sufficient accuracy and are not suited to study different system configurations with respect to the observed ones. Network simulation was also used by Wernstedt, Davidsson, and Johansson (2003) to study the performance of different real-time control strategies for DH network management. An integer programming model for a different network design problem was defined by Aringhieri and Malucelli (2003). They considered the optimal selection of the type of heat exchangers to be installed at the users in order to optimize the return temperature at the plant and achieve good system efficiency at a reasonable cost. Finally, the design of the energy production plant integrating cogeneration engines and renewable energy was recently examined by Reini, Buoro, Covassin, De Nardi, and Pinamonti (2011), who developed integer programming models capable of solving small-scale examples.

Our research was motivated by the Innovami project financed within the regional program PRRIITT, activated by Emilia-Romagna regional authority to promote and support industrial research, innovation and technology transfer. During the project a prototype of the model presented hereafter was developed in collaboration with a local utility company and tested on a small-scale realistic network. Following the positive evaluation by practitioners the model was further extended in partnership with OPTIT, a spinoff company of the University of Bologna, making it possible to solve large-scale networks. The model represents the main hydraulic constraints of the real-world networks and constitutes an effective compromise between the accuracy of representation of physical behavior and the capability of handling realistic instances of the problem.

The paper is organized as follows. In Section 2 we present the main technical characteristic of a DH network and we introduce the required notation as well as the graph representation of the network. The mathematical model developed for supporting DH system optimal planning is described in Section 3. The computational testing of the model large-scale randomly generated networks and on a real-world one is presented in Section 4, while Section 5 draws some conclusions and illustrates possible future developments of the model.

A DH network is made up by one or more energy production plants and a network of insulated pipes through which a hot fluid (usually hot water or steam) can flow from the plants to the users connected to the network. When the hot fluid reaches a user its heat is transferred to a heat exchanger. The fluid cools down and can flow back to the production plant, which provides warming up the cold water, so that the cycle can restart. The heat exchanger is a substitute of the classic domestic boiler and it can also produce water for sanitary use.

Summarizing, the main elements of a DH system are (see Fig. 1 for an example):

                        
                           •
                           One or more plants, where heat energy is produced in order to warm up a heating fluid.

A group of users, which can be represented by the associated heat exchanger. Each such user v has a power requirement PIv
                               (expressed in kilowatt).

A set of insulated pipes which distribute the heating fluid from the plants towards the users, and back to the plants.

Note that the network can be split into two separate parts: the first one is the so-called feed line, which contains the set of pipes bringing hot fluid from the plants to the users. The second part is called the return line, which includes the pipes bringing cooled-down fluid from the users back to the plants. These pipes are usually laid down in pairs, with one feed and the corresponding return pipes, and they share physical properties (such as insulation) and geometric properties (such as diameters and length). Furthermore, the nodes of the network, representing both users’ exchangers and points in which the pipes bifurcate or merge, called tees, are also considered in couple. In fact, the corresponding forward and return nodes are strictly connected both from a thermal and from a hydraulic point of view. As a consequence, a topological representation of a DH network can be obtained by mapping just the feed line (see Fig. 1). Note also that, because pipes bifurcates and merge at tees the overall network may contain loops. However, in this paper to simplify both the notation and the model description we limit ourselves to networks having a tree configuration and with a single plant. This is not limiting since all models and experiments we performed can be extended to the case where loops and multiple plants are present in the network. In particular, in a tree-shaped network with a single plant the direction of the flow along forward pipes is implicitly defined from the plant towards the final users. This is not the case for networks with loops or with multiple plants where in many pipes the flow can be in an arbitrary direction. As a consequence, new appropriate decision variables should be used to define the flow direction as briefly discussed in Section 3.1.

The relevant characteristics to be considered in a DH system are related to thermal and hydraulic conditions of the network, with particular regard to nodes temperature (in kelvin), nodes pressure (in bar) and flow mass along the pipes (in kilogram per second). It is important to remember that these variables are required both for the feed and the returns lines. In addition, for the sake of simplicity we assume that the network lies on a plane, i.e., we do not consider the implications related with the unevenness of the vertical quota of the pipes.

The most important physics equations required for the description of the DH network are discussed in the following. For a general introduction to the engineering physics see, e.g., Khare and Swarup (2009), while for details on the DH specific characteristics see, e.g., Phetteplace (1995).

The first equation relates the heat, the fluid flow rate and the temperature gradient as follows:

                        
                           (1)
                           
                              
                                 Q
                                 =
                                 
                                    m
                                    ˙
                                 
                                 *
                                 
                                    c
                                    p
                                 
                                 *
                                 Δ
                                 T
                              
                           
                        
                     where Q is the heat (watt), 
                        
                           m
                           ˙
                        
                      is the fluid flow rate (kilogram per second), cp
                      is the water specific heat evaluated in constant pressure conditions (kilojoule per kilogram per kelvin) and ΔT is the thermal gradient defined among feed and return lines (in kelvin). Eq. (1) is a general one and derives directly from the first law of thermodynamics, which is usually formulated by stating that the change in the internal energy of a closed system is equal to the amount of heat supplied to the system, minus the amount of work performed by the system on its surroundings.

The behavior of a generic heat exchanger is instead described by the following relation:

                        
                           (2)
                           
                              
                                 Q
                                 =
                                 U
                                 *
                                 A
                                 *
                                 Δ
                                 
                                    T
                                    
                                       m
                                       l
                                    
                                 
                              
                           
                        
                     where U is the overall heat transfer coefficient (in watt per square meter per kelvin), A is the heat transfer surface area (in square meter) and ΔTml
                      is the log-mean temperature difference (in kelvin). Eq. (2) is a specific one and defines a generic heat exchanger, whose heat transfer rate is equal to the product of an overall heat transfer coefficient (that characterizes a particular heat exchanger), a heat transfer surface area and the log-mean temperature difference of the heat exchanger itself. Inside the heat exchanger, there are two different flows: one is the heat transfer fluid which flows along a hydraulic circuit called the primary circuit; the other one is the cooled down water which flows along another circuit called the secondary circuit. This second type of flow has to be warmed up by the hottest fluid of the primary circuit. The log-mean temperature difference factor ΔTml
                      includes both the input temperature of the hottest flow (flowing along the primary circuit) and the input temperature of the warmest flow (flowing along the secondary circuit) together with the relative output temperatures.

In addition to the relations introduced before, it is also important to consider friction losses along the pipes and flow rate constraints, defined by the water requirement of the users. In turbulent flow conditions, pressure losses can be formulated as a sum of two terms: localized pressure losses ΔPc
                      and distributed pressure losses ΔPd
                     . To our purposes, we can approximate the pressure loss as a function of the fluid flow rate as follows:

                        
                           (3)
                           
                              
                                 Δ
                                 P
                                 =
                                 Δ
                                 
                                    P
                                    c
                                 
                                 +
                                 Δ
                                 
                                    P
                                    d
                                 
                                 =
                                 
                                    K
                                    1
                                 
                                 ·
                                 
                                    
                                       m
                                       ˙
                                    
                                    2
                                 
                                 +
                                 
                                    K
                                    2
                                 
                                 ·
                                 
                                    
                                       m
                                       ˙
                                    
                                    
                                       1.87
                                    
                                 
                              
                           
                        
                     where K
                     1 and K
                     2 are empirical coefficients depending on the specific characteristics of the pipe, such as its diameter and length, and properties of the fluid.

Since the heat-transfer fluid loses pressure along the pipes because of the above mentioned localized and distributed pressure drops, the fluid pressure decreases gradually from the plants towards the users and from the users back to the plant. This means that such networks always present at least one point in the feed line corresponding to the minimum value of pressure, and such point is typically associated with a user. The fluid flow along the return line has an opposite direction but same value of flow rate, while the pressure drop along the return line has an opposite sign and slightly larger value due to the lower temperature of the fluid that increases its kinematic viscosity.

Furthermore, note that when we have a single plant serving the network, it is clear that at the plant connection with the feed line we have the highest pressure in the network, while at the connection of the plant node on the return line with have the lowest pressure. As a consequence, the plant is the point with the highest pressure drop between feed and return lines. Similar consideration can be extended also in the case where we have multiple plants. Pressure at the plants has to be monitored and kept within specific ranges so as to permit the fluid flow and be compatible with the required pumping system.

The problem is modeled considering stationary peak conditions. As generally done in practice the peak demand requirements of downstream users is reduced to take into account that not all are active simultaneously. To this end, a so-called concurrent factor, for example equal to 60–70 percent is used to reduce the peak demand of each user. Such
                      a reduction of the demand is practically used to reproduce the fact that not all users are actually requesting the heat concurrently and, as a consequence, it is feasible to define the network capacity taking into account just a fraction of the total demand of the users.

Because of the thermal insulation of the pipes, the temperature losses in the DH system are mainly localized at the user’s heat exchangers. Moreover, the temperature drop at the exchanger is generally assumed to be constant. Such an assumption is clearly very strong when the dynamic behavior of the system has to be analyzed (e.g., to derive operational models) but is acceptable for the purposes of network planning where stationary peak conditions are considered. Note that the main consequence of assuming constant the temperature drop ΔT at the heat exchangers is that formula (2) permits to express the heat power as proportional to the flow rate 
                        
                           m
                           ˙
                        
                      of the fluid.

In this section we introduce a mathematical formulation of the District Heating Network Design Problem (DHNDP) as previously defined. The model is based on a graph representation of the DH network where nodes and arcs of the graph corresponds to the relevant elements of the network. As an example, Fig. 2 depicts a graph representation of the simple DH network shown in Fig. 1. Each node of the original network is represented by a pair of nodes: one, with positive identifier, associated with the feed network and the second, with negative identifier, with the return network. It is possible to identify plant node, user nodes and tee nodes as described in Section 1. The links in the graph represent pipes either of the feed or of the return circuits, and heat exchangers at user nodes. The orientation of the links is compatible with the flow of the heating fluid and it is possible to distinguish between existing pipes, represented by solid arcs and potential ones, represented by hashed arcs.


                     Fig. 3 focuses on the representation of user links and illustrates how such user is inserted into the network, i.e., through a heat exchanger and a parallel configuration between feed line and return line. Note that user arcs are the only connections between feed and return networks because are the only portions of the network where heat exchange is assumed to take place.

As previously mentioned, in a DHNDP the DH network includes both existing and potential elements. The existing elements are associated with the initial network configuration made up by one or more plants and a set of pipes connecting the existing users. The potential elements of the network are instead:

                        
                           •
                           A set of potential users, each with an associated thermal demand.

A set of potential pipes and tees that may be connected to the existing ones to reach the potential users.

More precisely, we are given a directed graph 
                        
                           G
                           =
                           (
                           V
                           ,
                           A
                           )
                           ,
                        
                      where V is the set of nodes, A is the set of arcs. Node set V includes both nodes v, with v > 0, belonging to the feed line and the corresponding nodes 
                        
                           −
                           v
                        
                      belonging to the return line. Set V is also partitioned into some relevant subsets. Namely, VI
                      is the subset of plant nodes, VS
                      is that of existing user nodes, VP
                      is the set of potential users nodes, 
                        
                           
                              V
                              T
                           
                           =
                           
                              V
                              
                                 T
                                 E
                              
                           
                           ∪
                           
                              V
                              
                                 T
                                 P
                              
                           
                        
                      is the set of tee nodes, which is further split in subset VTE
                      of existing tees and subset VTP
                      of potential tees. Finally, we denote by 
                        
                           
                              V
                              E
                           
                           =
                           
                              V
                              S
                           
                           ∪
                           
                              V
                              
                                 T
                                 E
                              
                           
                        
                      the set of all the existing nodes, i.e., that of existing users and tees.

The set of arcs A is, in turn, partitioned into five subsets, namely 
                        
                           A
                           =
                           
                              A
                              F
                           
                           ∪
                           
                              A
                              R
                           
                           ∪
                           
                              A
                              S
                           
                           ∪
                           
                              A
                              P
                           
                           ∪
                           
                              A
                              I
                           
                        
                     . Set 
                        
                           
                              A
                              F
                           
                           =
                           
                              A
                              
                                 F
                                 E
                              
                           
                           ∪
                           
                              A
                              
                                 F
                                 P
                              
                           
                        
                      includes all feed line pipes, i.e., both the existing and potential ones (i.e., sets AFE
                      and AFP
                     , respectively). Similarly, 
                        
                           
                              A
                              R
                           
                           =
                           
                              A
                              
                                 R
                                 E
                              
                           
                           ∪
                           
                              A
                              
                                 R
                                 P
                              
                           
                        
                      is the set of all returns line pipes, including both existing and potential ones (i.e., sets ARE
                      and ARP
                     , respectively). Finally, AS
                      and AP
                      represent the existing and potential user heat exchangers, and AI
                      are the plant arcs.

The demand of each user v ∈ VS
                     ∪VP
                      is represented by the required flow μe
                      of heat fluid in the corresponding user arc 
                        
                           e
                           =
                           
                              (
                              v
                              ,
                              −
                              v
                              )
                           
                           ∈
                           
                              (
                              
                                 A
                                 S
                              
                              ∪
                              
                                 A
                                 P
                              
                              )
                           
                        
                     .

The generic feed line arc is denoted as 
                        
                           e
                           =
                           
                              (
                              i
                              ,
                              j
                              )
                           
                           ∈
                           
                              A
                              F
                           
                           ,
                        
                      while the corresponding return line arc is denoted as 
                        
                           r
                           
                              (
                              e
                              )
                           
                           =
                           
                              (
                              −
                              j
                              ,
                              −
                              i
                              )
                           
                           ∈
                           
                              A
                              R
                           
                        
                     . Similarly, user arcs are indicated as 
                        
                           (
                           v
                           ,
                           −
                           v
                           )
                        
                      where v belongs to VS, VP
                     , and plant arcs are represented as 
                        
                           (
                           −
                           v
                           ,
                           v
                           )
                        
                      with v ∈ VI
                     , respectively. For each pipe arc 
                        
                           e
                           =
                           
                              (
                              i
                              ,
                              j
                              )
                           
                           ∈
                           
                              (
                              
                                 A
                                 F
                              
                              ∪
                              
                                 A
                                 R
                              
                              )
                           
                           ,
                        
                      we define a conventional orientation from node i to node j with i < j. Since we consider here only networks with a tree configuration and with a single plant (i.e., 
                        
                           
                              |
                           
                           
                              V
                              I
                           
                           
                              |
                              =
                              2
                           
                        
                      and 
                        
                           
                              |
                           
                           
                              A
                              I
                           
                           
                              |
                              =
                              1
                           
                        
                     ), the flow direction along pipes is defined a-priori as the water will flow from the plant node to the users nodes and there are no loops which may change the conventional direction. However, as will be discussed in Section 3.1, the model described here can be easily extended to consider more general network structures including loops and multiple plants.

By considering the sample network depicted in Fig. 2 the nodes and arcs sets are defined as follows. 
                        
                           
                              V
                              I
                           
                           =
                           
                              {
                              1
                              ,
                              −
                              1
                              }
                           
                           ,
                        
                     
                     
                        
                           
                              V
                              S
                           
                           =
                           
                              {
                              4
                              ,
                              7
                              ,
                              13
                              ,
                              −
                              4
                              ,
                              −
                              7
                              ,
                              −
                              13
                              }
                           
                           ,
                        
                     
                     
                        
                           
                              V
                              P
                           
                           =
                           
                              {
                              10
                              ,
                              −
                              10
                              ,
                              11
                              ,
                              −
                              11
                              ,
                              12
                              ,
                              −
                              12
                              }
                           
                           ,
                        
                     
                     
                        
                           
                              V
                              
                                 T
                                 E
                              
                           
                           =
                           
                              {
                              2
                              ,
                              −
                              2
                              ,
                              3
                              ,
                              −
                              3
                              ,
                              5
                              ,
                              −
                              5
                              ,
                              6
                              ,
                              −
                              6
                              ,
                              8
                              ,
                              −
                              8
                              }
                           
                           ,
                        
                     
                     
                        
                           
                              V
                              
                                 T
                                 P
                              
                           
                           =
                           
                              {
                              9
                              ,
                              −
                              9
                              }
                           
                           ,
                        
                     
                     
                        
                           
                              A
                              
                                 F
                                 E
                              
                           
                           
                              =
                              {
                              
                                 (
                                 1
                                 ,
                                 2
                                 )
                              
                              ,
                              
                                 (
                                 2
                                 ,
                                 3
                                 )
                              
                              ,
                              
                                 (
                                 3
                                 ,
                                 4
                                 )
                              
                              ,
                              
                                 (
                                 3
                                 ,
                                 5
                                 )
                              
                              ,
                              
                                 (
                                 5
                                 ,
                                 6
                                 )
                              
                              ,
                              
                                 (
                                 6
                                 ,
                                 7
                                 )
                              
                              ,
                           
                        
                      (6, 8), (8, 13)}, 
                        
                           
                              A
                              
                                 F
                                 P
                              
                           
                           =
                           
                              {
                              
                                 (
                                 5
                                 ,
                                 12
                                 )
                              
                              ,
                              
                                 (
                                 8
                                 ,
                                 9
                                 )
                              
                              ,
                              
                                 (
                                 9
                                 ,
                                 10
                                 )
                              
                              ,
                              
                                 (
                                 9
                                 ,
                                 11
                                 )
                              
                              }
                           
                           ,
                        
                     
                     
                        
                           
                              A
                              
                                 R
                                 E
                              
                           
                           
                              =
                              {
                              
                                 (
                                 −
                                 1
                                 ,
                                 −
                                 2
                                 )
                              
                              ,
                              
                                 (
                                 −
                                 2
                                 ,
                                 −
                                 3
                                 )
                              
                              ,
                              
                                 (
                                 −
                                 3
                                 ,
                                 −
                                 4
                                 )
                              
                              ,
                           
                        
                     
                     
                        
                           (
                           −
                           3
                           ,
                           −
                           5
                           )
                           ,
                           (
                           −
                           5
                           ,
                           −
                           6
                           )
                           ,
                           (
                           −
                           6
                           ,
                           −
                           7
                           )
                           ,
                           (
                           −
                           6
                           ,
                           −
                           8
                           )
                           ,
                           (
                           −
                           8
                           ,
                           −
                           13
                           )
                           }
                           ,
                        
                     
                     
                        
                           
                              A
                              
                                 R
                                 P
                              
                           
                           
                              =
                              {
                              
                                 (
                                 −
                                 5
                                 ,
                                 −
                                 12
                                 )
                              
                              ,
                              
                                 (
                                 −
                                 8
                                 ,
                                 −
                                 9
                                 )
                              
                              ,
                              
                                 (
                                 −
                                 9
                                 ,
                                 −
                                 10
                                 )
                              
                              ,
                           
                        
                     
                     
                        
                           (
                           −
                           9
                           ,
                           −
                           11
                           )
                           }
                           ,
                        
                     
                     
                        
                           
                              A
                              S
                           
                           =
                           
                              {
                              
                                 (
                                 4
                                 ,
                                 −
                                 4
                                 )
                              
                              ,
                              
                                 (
                                 7
                                 ,
                                 −
                                 7
                                 )
                              
                              ,
                              
                                 (
                                 13
                                 ,
                                 −
                                 13
                                 )
                              
                              }
                           
                           ,
                        
                     
                     
                        
                           
                              A
                              P
                           
                           =
                           
                              {
                              
                                 (
                                 10
                                 ,
                                 −
                                 10
                                 )
                              
                              ,
                              
                                 (
                                 11
                                 −
                                 11
                                 )
                              
                              ,
                              
                                 (
                                 12
                                 −
                                 12
                                 )
                              
                              }
                           
                        
                      and 
                        
                           
                              A
                              I
                           
                           =
                           
                              {
                              
                                 (
                                 −
                                 1
                                 ,
                                 1
                                 )
                              
                              }
                           
                        
                     .

All the non-linear relations in the network will be approximated by piecewise-linear functions. In particular, such a linear approximation is used to express the pressure drop 
                        
                           Δ
                           P
                           =
                           f
                           (
                           
                              m
                              ˙
                           
                           )
                        
                      given in (3) as a piecewise-linear function 
                        
                           
                              f
                              L
                           
                           
                              (
                              
                                 m
                                 ˙
                              
                              )
                           
                           ,
                        
                      as depicted in Fig. 4.

The economic parameters of the model are the profits associated with the connection of potential users and the costs for the network setup. In particular, for each arc corresponding to the heat exchanger at a potential users (i.e., arc 
                        
                           e
                           =
                           
                              (
                              v
                              ,
                              −
                              v
                              )
                           
                           ∈
                           
                              A
                              P
                           
                        
                     ), the parameter Re
                      denotes the net profit of connecting it to the network. Such a profit is the difference between the net present value of the income associated with the energy sold to the user during the time horizon T (generally between ten and thirty years), minus the costs of user connection, such as, for example, the cost of the exchanger and those of the commercial activities related to the contract setup. Furthermore, for each potential pipe (i.e., arcs 
                        
                           e
                           =
                           
                              (
                              i
                              ,
                              j
                              )
                           
                           ∈
                           
                              A
                              
                                 F
                                 P
                              
                           
                        
                     ), cost Ce
                      represents the global cost of the installation of the required pipes. For the sake of simplicity we only associate cost to potential pipes of the feed line and we include into them also those of the corresponding return pipes.

The physical characteristics of the network are described through several parameters. The pressure in each node of the network must be larger than a minimum value P
                     min , whereas at each plant node v ∈ VI
                      must not exceed a maximum feed line pressure limit 
                        
                           P
                           v
                           max
                        
                     . Each pipe arc 
                        
                           e
                           =
                           
                              (
                              i
                              ,
                              j
                              )
                           
                           ∈
                           
                              (
                              
                                 A
                                 F
                              
                              ∪
                              
                                 A
                                 R
                              
                              )
                           
                        
                      is associated with a maximum capacity 
                        
                           μ
                           e
                           max
                        
                      for the heat fluid, that depends on the diameter of the pipe and on the given maximum speed of the fluid. Finally, each arc 
                        
                           e
                           =
                           
                              (
                              v
                              ,
                              −
                              v
                              )
                           
                           ∈
                           
                              (
                              
                                 A
                                 E
                              
                              ∪
                              
                                 A
                                 P
                              
                              )
                           
                        
                      associated with a user exchanger must have a pressure drop larger than a prescribed minimum value ΔP
                     min .

The objective of the problem is to find the subset of potential users that can be connected to the network, trying to both maximizing the overall net profit and to respect the main physical and logical constraints imposed by the configuration of the network. As previously discussed, the network is designed by considering stationary peak conditions. The formulation uses two main sets of decision variables. The binary variables xe
                     , 
                        
                           e
                           =
                           
                              (
                              v
                              ,
                              −
                              v
                              )
                           
                           ∈
                           
                              A
                              P
                           
                        
                      define the connection state of a potential user and take value 1 if the user v ∈ VP
                      is connected to the network, and 0 otherwise. Furthermore, binary variables ye
                     , 
                        
                           e
                           =
                           
                              (
                              i
                              ,
                              j
                              )
                           
                           ∈
                           
                              A
                              
                                 F
                                 P
                              
                           
                        
                      defines the use of a potential feed line pipe and take 1 if the pipe is used in the optimal solution, and 0 otherwise. In addition to the main decision variables, the model uses continuous variables to represent the hydraulic conditions of the network. In particular, we introduce specific variables for the node pressure Pv, v ∈ V, for the pressure drop and flow rate along the pipes, ΔPe
                      and 
                        
                           
                              
                                 m
                                 ˙
                              
                              e
                           
                           ,
                        
                      
                     e ∈ A, respectively. The resulting mathematical model follows.

                        
                           (4)
                           
                              
                                 
                                    
                                       
                                          max
                                          
                                             ∑
                                             
                                                e
                                                ∈
                                                
                                                   A
                                                   P
                                                
                                             
                                          
                                          
                                             R
                                             e
                                          
                                          
                                             x
                                             e
                                          
                                          −
                                          
                                             ∑
                                             
                                                e
                                                ∈
                                                
                                                   A
                                                   
                                                      F
                                                      P
                                                   
                                                
                                             
                                          
                                          
                                             C
                                             e
                                          
                                          
                                             y
                                             e
                                          
                                       
                                    
                                 
                              
                           
                        
                     subject to

                        
                           (5)
                           
                              
                                 
                                    
                                       
                                          
                                             
                                                m
                                                ˙
                                             
                                             e
                                          
                                          =
                                          
                                             μ
                                             e
                                          
                                       
                                    
                                    
                                    
                                       
                                          ∀
                                          e
                                          ∈
                                          
                                             A
                                             S
                                          
                                       
                                    
                                 
                              
                           
                        
                     
                     
                        
                           (6)
                           
                              
                                 
                                    
                                       
                                          
                                             
                                                m
                                                ˙
                                             
                                             e
                                          
                                          =
                                          
                                             μ
                                             e
                                          
                                          
                                             x
                                             e
                                          
                                       
                                    
                                    
                                    
                                       
                                          ∀
                                          e
                                          ∈
                                          
                                             A
                                             P
                                          
                                       
                                    
                                 
                              
                           
                        
                     
                     
                        
                           (7)
                           
                              
                                 
                                    
                                       
                                          
                                             
                                                m
                                                ˙
                                             
                                             e
                                          
                                          ≤
                                          
                                             μ
                                             e
                                             max
                                          
                                       
                                    
                                    
                                    
                                       
                                          ∀
                                          e
                                          ∈
                                          
                                             A
                                             
                                                F
                                                E
                                             
                                          
                                       
                                    
                                 
                              
                           
                        
                     
                     
                        
                           (8)
                           
                              
                                 
                                    
                                       
                                          
                                             
                                                m
                                                ˙
                                             
                                             e
                                          
                                          ≤
                                          
                                             μ
                                             e
                                             max
                                          
                                          
                                             y
                                             e
                                          
                                       
                                    
                                    
                                    
                                       
                                          ∀
                                          e
                                          ∈
                                          
                                             A
                                             
                                                F
                                                P
                                             
                                          
                                       
                                    
                                 
                              
                           
                        
                     
                     
                        
                           (9)
                           
                              
                                 
                                    
                                       
                                          
                                             
                                                m
                                                ˙
                                             
                                             
                                                r
                                                (
                                                e
                                                )
                                             
                                          
                                          =
                                          
                                             
                                                m
                                                ˙
                                             
                                             e
                                          
                                       
                                    
                                    
                                    
                                       
                                          ∀
                                          e
                                          ∈
                                          
                                             A
                                             F
                                          
                                       
                                    
                                 
                              
                           
                        
                     
                     
                        
                           (10)
                           
                              
                                 
                                    
                                       
                                          
                                             ∑
                                             
                                                e
                                                =
                                                (
                                                i
                                                ,
                                                v
                                                )
                                                ∈
                                                E
                                             
                                          
                                          
                                             
                                                m
                                                ˙
                                             
                                             e
                                          
                                          −
                                          
                                             ∑
                                             
                                                e
                                                =
                                                (
                                                v
                                                ,
                                                j
                                                )
                                                ∈
                                                E
                                             
                                          
                                          
                                             
                                                m
                                                ˙
                                             
                                             e
                                          
                                          =
                                          0
                                       
                                    
                                    
                                    
                                       
                                          ∀
                                          v
                                          ∈
                                          V
                                       
                                    
                                 
                              
                           
                        
                     
                     
                        
                           (11)
                           
                              
                                 
                                    
                                       
                                          
                                             P
                                             v
                                          
                                          ≤
                                          
                                             P
                                             v
                                             max
                                          
                                       
                                    
                                    
                                    
                                       
                                          ∀
                                          v
                                          ∈
                                          
                                             V
                                             I
                                          
                                       
                                    
                                 
                              
                           
                        
                     
                     
                        
                           (12)
                           
                              
                                 
                                    
                                       
                                          
                                             P
                                             v
                                          
                                          ≥
                                          
                                             P
                                             min
                                          
                                       
                                    
                                    
                                    
                                       
                                          ∀
                                          v
                                          ∈
                                          V
                                       
                                    
                                 
                              
                           
                        
                     
                     
                        
                           (13)
                           
                              
                                 
                                    
                                       
                                          Δ
                                          
                                             P
                                             e
                                          
                                          ≤
                                          Δ
                                          
                                             P
                                             max
                                          
                                       
                                    
                                    
                                    
                                       
                                          ∀
                                          e
                                          ∈
                                          
                                             A
                                             I
                                          
                                       
                                    
                                 
                              
                           
                        
                     
                     
                        
                           (14)
                           
                              
                                 
                                    
                                       
                                          Δ
                                          
                                             P
                                             e
                                          
                                          ≥
                                          Δ
                                          
                                             P
                                             min
                                          
                                       
                                    
                                    
                                    
                                       
                                          ∀
                                          e
                                          ∈
                                          
                                             A
                                             S
                                          
                                       
                                    
                                 
                              
                           
                        
                     
                     
                        
                           (15)
                           
                              
                                 
                                    
                                       
                                          Δ
                                          
                                             P
                                             e
                                          
                                          ≥
                                          Δ
                                          
                                             P
                                             min
                                          
                                          
                                             x
                                             e
                                          
                                       
                                    
                                    
                                    
                                       
                                          ∀
                                          e
                                          ∈
                                          
                                             A
                                             P
                                          
                                       
                                    
                                 
                              
                           
                        
                     
                     
                        
                           (16)
                           
                              
                                 
                                    
                                       
                                          Δ
                                          
                                             P
                                             e
                                          
                                          =
                                          
                                             f
                                             L
                                          
                                          
                                             (
                                             
                                                
                                                   m
                                                   ˙
                                                
                                                e
                                             
                                             )
                                          
                                       
                                    
                                    
                                    
                                       
                                          ∀
                                          e
                                          ∈
                                          
                                             A
                                             F
                                          
                                          ∪
                                          
                                             A
                                             R
                                          
                                       
                                    
                                 
                              
                           
                        
                     
                     
                        
                           (17)
                           
                              
                                 
                                    
                                       
                                          
                                             
                                                m
                                                e
                                             
                                             ˙
                                          
                                          ≥
                                          0
                                       
                                    
                                    
                                    
                                       
                                          ∀
                                          e
                                          ∈
                                          
                                             A
                                             F
                                          
                                          ∪
                                          
                                             A
                                             R
                                          
                                       
                                    
                                 
                              
                           
                        
                     
                     
                        
                           (18)
                           
                              
                                 
                                    
                                       
                                          
                                             P
                                             v
                                          
                                          ≥
                                          0
                                       
                                    
                                    
                                    
                                       
                                          ∀
                                          v
                                          ∈
                                          V
                                       
                                    
                                 
                              
                           
                        
                     
                     
                        
                           (19)
                           
                              
                                 
                                    
                                       
                                          Δ
                                          
                                             P
                                             e
                                          
                                          ≥
                                          0
                                       
                                    
                                    
                                    
                                       
                                          ∀
                                          e
                                          ∈
                                          A
                                       
                                    
                                 
                              
                           
                        
                     
                     
                        
                           (20)
                           
                              
                                 
                                    
                                       
                                          
                                             x
                                             e
                                          
                                          ∈
                                          
                                             {
                                             0
                                             ,
                                             1
                                             }
                                          
                                       
                                    
                                    
                                    
                                       
                                          ∀
                                          e
                                          ∈
                                          
                                             A
                                             P
                                          
                                       
                                    
                                 
                              
                           
                        
                     
                     
                        
                           (21)
                           
                              
                                 
                                    
                                       
                                          
                                             y
                                             e
                                          
                                          ∈
                                          
                                             {
                                             0
                                             ,
                                             1
                                             }
                                          
                                       
                                    
                                    
                                    
                                       
                                          ∀
                                          e
                                          ∈
                                          
                                             A
                                             
                                                F
                                                P
                                             
                                          
                                       
                                    
                                 
                              
                           
                        
                     
                  

The objective function (4) of the problem maximizes the net profit of the optimal network, which is defined as the difference between the net present value of the revenues associated with the connection of potential users and the costs required to setup the potential pipes to join them to the network.

The constraints of the model can be grouped into four categories. In the first one, we have the relations that refer to the flows of the heating fluid in the pipes. In particular, constraints (5) and (6) define the flow 
                        
                           
                              m
                              ˙
                           
                           e
                        
                      in the user’s pipes. Namely, existing users ones have their flow imposed by the users’ heat demand, while in pipes corresponding to potential users the flow is non-zero only if the user is connected to the network, i.e., when 
                        
                           
                              x
                              e
                           
                           =
                           1
                        
                     . Similarly, inequalities (7) and (8) impose an upper bound on the flow of the other forward pipes of the network, where such upper bound is zero if a potential pipe is not used, i.e., when 
                        
                           
                              y
                              e
                           
                           =
                           0
                        
                     . The flow along each return pipe r(e) is set equal to that of the corresponding forward pipe e by equalities (9).

The second group of constraints is related with the nodes of the network, corresponding to tees and connections of users and plants to the pipes. First of all, equalities (10) impose the balance of the flows entering and leaving each such node. Then, a lower bound for the pressure in all the nodes is set by (12), while for plant nodes of the feed line is an upper bound for the pressure is also imposed in (11).

The third set of constraints refers to the pressure drops along the pipes. More precisely, the maximum pressure drop at the plant, and the minimum drop on existing and potential users’ pipes are set by inequalities (13), (14) and (15), respectively. As to the remaining pipes of the network, the linearized relation between flow and pressure is synthetically expressed by inequalities (16). Note that, because of the convex nature of the non-linear relation between pressure drop and flow (see Fig. 4), in the actual implementation of the model for a specific solver such inequalities need be transformed into a set of linear relations, possibly involving auxiliary binary variables. However, modern ILP solvers often offer specific functionalities to incorporate such linearizations in the model in a compact form (see, e.g., the IBM ILOG Cplex solver (IBM ILOG, 2009)).

It is important to note that there are different pressure drop profiles for different pipes inner diameter as a function of the water flow rate. In particular, the slope of the curve represented in Fig. 4 can be smoother as the diameter increases (see Frederiksen and Werner, 2013 for a detailed representation of pressure losses as a function of the flow rate for different pipes inner diameter). Hence, in the actual implementation of the model, different pipes have been described by different linearized curves, and the linearization has been made by selecting a proper number of breakpoints 
                        
                           
                              b
                              0
                           
                           ⋯
                           
                              b
                              n
                           
                        
                      suitable to obtain a good approximation of the real curve: (e.g., 
                        
                           
                              b
                              n
                           
                           =
                           20
                        
                     ).

Finally, constraints (17)–(19) set the lower bounds for the continuous variables, while (20) and (21) define the binary variables.

As previously discussed, the above model can be easily extended to represent networks including loops and multiple plants. In such cases the direction of the flow along forward and return pipes is not implicitly defined. As a consequence, appropriate binary variables should be used to define the flow direction on the non-user pipes of the network. Moreover, the existing pressure-related and flow-related variables should be duplicated to take into consideration the flow direction and the drop of pressure direction.

Several other practical requirements may be easily incorporated in the proposed model. A common example is represented by the need to limit the maximum pressure values in specific parts of the network, which may be imposed by adding constraints similar to (11) or (13) for specific nodes or pipes subsets. Similarly, either to take into account pumping costs or to favor solutions that have a lower value of pressures or flows in presence of additional features such as loops, one can add suitable penalties or costs to the objective function. More precisely, let 
                           
                              
                                 
                                    ɛ
                                 
                                 1
                              
                              ,
                              ⋯
                              ,
                              
                                 
                                    ɛ
                                 
                                 3
                              
                           
                         be the unit penalties (or costs) associated with the node pressures, the pressure drops and the fluid flow along the pipes, respectively. Then a more general objective function can be written as:

                           
                              (22)
                              
                                 
                                    
                                       
                                          
                                             max
                                             
                                                ∑
                                                
                                                   e
                                                   ∈
                                                   
                                                      A
                                                      P
                                                   
                                                
                                             
                                             
                                                R
                                                e
                                             
                                             
                                                x
                                                e
                                             
                                             −
                                             
                                                ∑
                                                
                                                   e
                                                   ∈
                                                   
                                                      A
                                                      
                                                         F
                                                         P
                                                      
                                                   
                                                
                                             
                                             
                                                C
                                                e
                                             
                                             
                                                y
                                                e
                                             
                                             
                                             −
                                             
                                             
                                                ∑
                                                
                                                   v
                                                   ∈
                                                   V
                                                
                                             
                                             
                                                
                                                   ɛ
                                                
                                                1
                                             
                                             *
                                             
                                                P
                                                v
                                             
                                             
                                             −
                                             
                                             
                                                ∑
                                                
                                                   e
                                                   ∈
                                                   
                                                      A
                                                      F
                                                   
                                                   ∪
                                                   
                                                      A
                                                      R
                                                   
                                                
                                             
                                             
                                                (
                                                
                                                   
                                                      ɛ
                                                   
                                                   2
                                                
                                                Δ
                                                
                                                   P
                                                   e
                                                
                                                +
                                                
                                                   
                                                      ɛ
                                                   
                                                   3
                                                
                                                
                                                   
                                                      m
                                                      ˙
                                                   
                                                   e
                                                
                                                )
                                             
                                          
                                       
                                    
                                 
                              
                           
                        
                     

Whenever for a given user there exist alternative ways of connecting it to the network or alternative levels of demand, hence of required exchanger, it is possible to consider all of them and let the model chose the optimal one. This is simply done by adding constraints which impose that at most one among a subset of binary variables corresponding to the alternatives is selected.

Economic features of the real-world problem may be also added to the model. For example, generalized budget constraints may limit the total investment costs. In addition, it may be desirable to favor solutions that or favoring solutions that connect users, (e.g., buildings or shops) with a common property manager since this will reduce the administrative cost of setting up the contract.

Model (4)–(21) belongs to the class of Mixed-Integer Linear Programming models which are computationally difficult to solve. However, as we will discuss in the following sections we found that realistically-sized models of this type, i.e., with hundreds of potential users, can be solved to optimality or near-optimality within reasonable computing time by a commercial solver. The possibility of directly solving DHDNP does not come as a surprise, since current solvers incorporate very sophisticate solution strategies capable of successfully attacking several classes of important problems similar to the DHDNP (see, e.g., Fischetti, Lodi, & Salvagnin, 2010). However, specifically designed heuristic algorithms may be required to solve large-scale instances of DHDNP or some variants involving additional real-world constraints as those described above.

In this section we describe the results we obtained during the computational testing of the DHDNP model on a set of test networks. First of all we consider a small real-world network defined within the Innovami project and used to validate a preliminary version of the model described in this paper.

To provide a more extensive and detailed analysis of the model potentialities we next examined a set of 100 large-scale DHDNP instances with up to 1000 potential and 500 existing users. The data for the cost and demand used in such instances are derived from real-world information obtained from Italian multi-utility companies, and the random layout of the network is designed through a procedure that tries to reproduce the characteristics of real-world urban DH networks.

We describe here the testing of the model conducted on a small real-world instance representing a portion of the DH network in a town of Emilia-Romagna, in northern Italy. The instance, defined during the Innovami project funded by the Emilia-Romagna Region in 2009–2010, includes 33 users in total, 20 of which are existing and 13 are potential. The structure of the network is depicted in Fig. 5, where the plant is represented by the square node, existing and potential users are identified by solid and empty large circles, respectively. Similarly, the existing and potential intermediate tee nodes are shown as solid and empty small circles, respectively. Finally, existing (forward) pipes are drawn as solid directed lines, while potential pipes are represented by hashed ones. The type of each user (indicated as E or P) and the corresponding thermal demand in kilowatt are reported in Table 2
                         (note that the reported data are slightly altered to preserve the confidentiality). The existing network is about 4.3 kilometer long and the total length of the potential pipes is slightly less than 1.9 kilometer.

Specific data are also defined for the cost of the heat exchangers, depending on the users’ demand class, for the potential pipes depending on their diameter and length and for the revenues of the sale of energy. In addition, the maximum pressure at the plant is 9 bar, the minimum pressure at each node is 2 bar and the minimum pressure drop at a user’ pipes is equal to 0.5 bar.

Two different scenarios are considered, the first one considers a time horizon of 10 years for the computation of net present value of the network. The second considers a reduced time horizon of 5 years only in which pipes costs are reduced by 10 percent and the user’s fee for the connection to the network are increased by 50 percent. The results of the model for the two scenarios are shown in Fig. 6
                         where the connected potential users are identified by gray circles and the potential pipes which must be used are now drawn with a thick solid line. In particular, in Scenario 1 the potential users 4, 6, 7, 9, 27, 29, 32, 35 and 37 are selected, while in Scenario 2 the optimal set of potential users to be connected includes 4, 7, 9, 27 and 29.

By comparing the two solutions we may observe that some users, such as 11 or 20, are not compatible with the connection in both scenarios. This is either due to the relatively small demand compared to the length of the pipe required to connect them, or to the insufficient capacity of the network. In fact, the limits of the pressure at the plant do not allow to connect all potential users even when they are profitable (e.g., user 33). Some other users, such as 6 and 32, which turn out to be selected with the longer time horizon are instead no longer profitable in the second scenario even if the capacity of the network would allow to connect them.

Since the optimal solutions for this network can be obtained in few seconds of computation by using IBM Cplex solver, it is evident the great value for decision makers of the model we propose for the evaluation of several alternative scenarios to support the decision process.

To analyze the performance of the model on large-scale instances we randomly generated a set of 100 instances. The generation procedure is designed so as to create realistic network, inspired by those found in the real-world. We generated five classes of networks, each characterized by a different size, in terms of existing nodes VE
                         (i.e., existing tees and users). In particular, we considered |VE
                        | ∈ {100, 200, 300, 400, 500}. Furthermore, for each size of network, we considered four different quantities |VP
                        | of potential users defined proportionally to |VE
                        |, namely: 
                           
                              
                                 |
                              
                              
                                 V
                                 P
                              
                              
                                 |
                                 =
                                 |
                              
                              
                                 V
                                 E
                              
                              
                                 |
                                 /
                                 2
                              
                           
                        ; 
                           
                              
                                 |
                              
                              
                                 V
                                 P
                              
                              
                                 |
                                 =
                                 |
                              
                              
                                 V
                                 E
                              
                              
                                 |
                              
                           
                        ; 
                           
                              
                                 |
                              
                              
                                 V
                                 P
                              
                              
                                 |
                                 =
                                 |
                              
                              
                                 V
                                 E
                              
                              
                                 |
                                 +
                                 |
                              
                              
                                 V
                                 E
                              
                              
                                 |
                                 /
                                 2
                              
                           
                        ; 
                           
                              
                                 |
                              
                              
                                 V
                                 P
                              
                              
                                 |
                                 =
                                 2
                                 ·
                                 |
                              
                              
                                 V
                                 E
                              
                              
                                 |
                              
                           
                        . Finally, for each pair of |VE
                        | and |VP
                        | we randomly generated five different test instances.

Given the value of |VE
                        | we define a circle with a diameter of D km. In particular, we used 
                           
                              D
                              =
                              5
                           
                         if |VE
                        | ≤ 200, and 
                           
                              D
                              =
                              10
                           
                         otherwise. Random coordinates within such circle are associated with each existing node. Then a shortest spanning tree for the complete graph including all existing nodes and with arc costs equal to the Euclidean distances between the endpoints. Such a shortest spanning tree represents the existing network. The plant is defined as the node with smaller abscissa coordinate value. In addition, all leaf nodes of the tree are defined as existing users.

We next randomly generate the points corresponding to the potential users so that their coordinates are close to the arcs of the existing network. The potential users’ nodes are connected to the existing network through potential arcs ending at the closest point of the existing network. If such point is along a link a potential tee is added and the existing arc is split in that point.

Each
                         existing and potential user is associated with a random value for the thermal demand PIe
                         drawn from a T-Gamma distribution with an average value of 75 kilowatt. Note that such demand is already reduced taking into account a concurrent factor of 60 percent with respect to the typical original demand. Then, the required flow rate along existing user’s arcs is computed through the relation 
                           
                              
                                 μ
                                 e
                              
                              =
                              P
                              
                                 I
                                 e
                              
                              /
                              
                                 (
                                 Δ
                                 T
                                 *
                                 
                                    c
                                    p
                                 
                                 )
                              
                              ,
                           
                         where 
                           
                              Δ
                              T
                              =
                              27
                           
                         kelvin and 
                           
                              
                                 c
                                 p
                              
                              =
                              4.18
                           
                        .

Given the flow rates on the existing users arcs flow rate, the flow rate on the remaining existing arcs is computed by recursively adding the flow of the outgoing arcs starting from the leaves of the network. The flow rate along the potential pipes is instead simply equal to the flow rate required by the potential user at its endpoint. Then, the diameter (in centimeter) of the pipe required for each existing and potential arc is determined through standard hydraulic equations and the value is rounded up to the next existing pipe diameter value, chosen in the set {25, 32, 40, 50, 65, 80, 100, 125, 150, 200, 250, 300, 350, 400, 500, 600}. Once the diameter is known, we can compute the cost of the pipe by multiplying its unit cost by the length of the pipe and we can determine the coefficients K
                        1 and K
                        2 to be used in (3) to compute the pressure drop along the pipe.

All data of the generated instances are available on request from the authors.

The computational testing has been performed using an Intel Pentium processor SU4100 1.30 gigahertz PC, with 4 gigabytes of memory and the MILP models are solved through the branch-and-cut algorithm implemented in the IBM Cplex 12.2 solver.

Three different scenarios have been considered corresponding to different values of the plant capacity and of the maximum number of potential nodes that can be connected.

The tables including the results includes several information and report the average values over the five instances for each value of VE
                         and VP
                        . In particular, the tables report:

                           
                              •
                              “|VP
                                 |/|VE
                                 |” is the ratio between VP
                                 , the number of potential users and VE
                                 , the number of nodes of the existing network;

“|VS
                                 |” is the average number of existing users;

“VS
                                  pow” is the average total power (in kilowatt) required by existing users;

“VP
                                  pow” is the average total power (in kilowatt) required by potential users;

“Conn. VP
                                 ” is the average number and percentage of connected potential users;

“Conn. VP
                                  pow” is the average total power (in kilowatt) of connected potential users;

“B&C Nodes” is the average number of branch-and-cut nodes.

“Root Time” is the time (in seconds) required for the root node of the branch-and-cut;

“Total time” is the total time (in seconds) required by the branch-and-cut.

In addition, the percentage gap of the best upper bound and heuristic solution values at the root node are computed as follows:
                           
                              •
                              Gap U 
                                    
                                       =
                                       
                                          (
                                          U
                                          −
                                          
                                             Z
                                             *
                                          
                                          )
                                       
                                       /
                                       
                                          Z
                                          *
                                       
                                       ·
                                       100
                                    
                                 
                              

Gap H 
                                    
                                       =
                                       
                                          (
                                          H
                                          −
                                          
                                             Z
                                             *
                                          
                                          )
                                       
                                       /
                                       
                                          Z
                                          *
                                       
                                       ·
                                       100
                                    
                                 
                              

The first set of tests is performed by considering a plant with a very high capacity sufficient to serve all potential users and without any limitation on the number of potential users that can be connected.

The results for the basic scenario are reported in Table 3, which shows that all problems can be solved within a very short computing time by the solver. Moreover the formulation appears to be quite tight as indicated by the small values of the average gaps of both the upper bound and of the heuristic solution value. Since the Scenario does not limit considerably the number of users that can be connected we see that on average about 70 percent of potential users are selected corresponding to more than 85 percent of the total power demand. Such users are clearly the ones that are both profitable and compatible with the physical constraints of the network resulting from the pressure drops and the pipe capacities.

As previously mentioned, the average computing times required to solve the problems to optimality is considerably small and grows relatively slowly with the number of potential users as shown by Fig. 7.

We
                        
                         conducted further tests by considering two additional scenarios to evaluate the model behavior and robustness in different conditions with respect to the basic one. The two scenarios are defined by either limiting the total number of potential users that can be connected or the plant total capacity, as follows:

                           
                              •
                              Scenario 2: the plant capacity is not limited but at most half of the users in VP
                                  can be connected;

Scenario 3: the plant capacity is reduced by 25 percent with respect to that used in Scenario 1 and no limit is set on the number of potential users that can be connected.

Scenario 2 represents the case in which budget restrictions impose a limit on the new users that can be connected. We simplified this requirement by considering just the number of users but a similar effect may be obtained by limiting any other measure related to the potential users that are connected in the optimal solution, such as the total investment cost, the total power or the total length of the pipes used. Scenario 3 instead represents a change either in the available capacity, e.g., due to a modification of the existing or designed plant. Such a scenario may also indirectly account for modifications of the consumption profile of the users that increases the concurrent demand requirement. Because the computing time required by the model is relatively short, we limited our analysis to the 20 instances with 500 existing nodes.

It is interesting to note that computational time is higher when the plant capacity is limited.

The results for Scenario 2 are given in Table 4 and show that the model is not sensibly affected by the additional constraint on the number of users. The computing times and the quality of upper bound and heuristics solutions are almost unchanged. We observe that, as expected, the user that are selected by the model are the largest one as their total demand is the 75 percent of the potential demand.

The results for Scenario 3 are show in Table 5. In this case the reduction of plant capacity has a perceptible effect on both the total computing effort, as indicated by the increase in B&C nodes and total time, and on the quality of the heuristic solution. In addition, the number of users that are connected is drastically reduced.

In Table 6 we mimic the summary results of a what-if analysis on a single instance of the 250/500 set. The table compares the results of the three scenarios by also reporting the total value of the objective function in monetary units. We note that the difference in total net present value of the revenue between Scenarios 1 and 2 is about 10 percent while clearly the starting investment cost for Scenario 2 is substantially smaller because of the smaller number of connected users. Such observation may be verified by considering the unit cost per connected customer and per connected kilowatt that are in Scenario 2 larger by 42 percent and 11 percent, respectively. Similarly, the greatly reduced net present value of Scenario 3 is compensated by a consistent reduction of the initial investment associated with a smaller plant and much smaller number of connected users. Also in this case the unit revenue per connected user and kilowatt are larger than those of Scenario 1 by 121 percent and 31 percent, respectively. Given the possibility of running new simulations in a few minutes of computing time the decision makers can examine in detail several alternative scenarios to carefully evaluate the best solution to be implemented, taking into account all the performance measures that are relevant in the specific real-world context.

An optimization approach for the incremental design of district heating networks has been presented. The proposed mathematical model represents a valuable tool to support strategic decision analyses in the field: it has been conceived to incorporate the essential hydraulic characteristics of a real network together with the economic elements that allow to evaluate long-term scenarios. The model resulted fast to solve even for large networks and very robust with respect to variations of some parameters.

The future development will be in the direction of enriching the model so as to incorporate additional features that may be relevant in real-world applications. First of all, more complex network topologies such as those including either some loops in the backbone infrastructure of the network or multiple plants, need to be fully examined. We performed a preliminary testing on this type of networks and we obtained very encouraging results showing the capability of solving realistic sized networks. In addition several constraints or cost components may be considered, such as:

                        
                           •
                           the cost of the insertion of new tees in the potential network,

the cost of pumping,

the choice of the optimal diameters of the potential pipes,

the choice of the optimal size of heat exchangers at potential users when it is possible to reduce their initial power demand,

the possibility of changing the power of existing users so as to free some power that can be sold to new users.

Clearly, the extensions mentioned above may require adding to the model both new constraints and additional decision variables, which in most cases are binary or integer (especially when a choice between two or more alternatives has to be done). As a consequence, the performance of the presented model may be considerably affected thus reducing the size of problems that can be actually solved in practice. Some preliminary testing on a variant of the model with the optimal choice of the pipe diameters in some parts of the potential network show, however, that the actual deterioration of performances is actually very limited.

Other interesting directions for future developments can be open by including in the optimization process also the creation of the potential network to be fed as an input to the current model. In such a case, the potential network is virtually a complete graph including all possible potential topologies from which the optimal one has to be selected. Because of the substantial increase in the difficulty of the resulting problems it will be appropriate to develop solution methods which belong to the field of matheuristics, where mathematical programming models are integrated into general heuristic solution frameworks that permit to solve complex problems within a reasonable amount of computing time.

An implementation of the model described in this paper has been incorporated by OPTIT srl, an accredited spinoff company of the University of Bologna, into a software tool for the strategic network design of DH networks. The tool, called Opti-TLR (see Vigo, Bordin, Gordini, Laghi, & Zarri, 2015), is based on a public domain GIS for the representation of the network and of the solutions and solves the model through IBM ILOG Cplex (see, e.g., IBM ILOG, 2009). Opti-TLR (see Fig. 8) has been used in the last three years in several projects of DH network design by several mayor utility companies in Italy.

@&#ACKNOWLEDGMENTS@&#

Research partially funded by Ministero dell’Università e della Ricerca, Italy. A preliminary research activity carried out within Progetto Innovami was partially funded by Regione Emilia-Romagna, Italy. The authors gratefully thanks two anonymous referees for their useful comments .

@&#REFERENCES@&#

