@&#MAIN-TITLE@&#MEALS: A multiobjective evolutionary algorithm with local search for solving the bi-objective ring star problem

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           An efficient hybrid evolutionary algorithm for the Biobjective RSP.


                        
                        
                           
                           An embedded local search procedure which deals with multiple objectives.


                        
                        
                           
                           The chromosome encoding allows us to discard dominated solutions.


                        
                        
                           
                           Initial population construction encourages diversification.


                        
                        
                           
                           Experiments display the valuable contribution of the algorithm.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Ring star problem

Hybrid evolutionary algorithm

Bi-objective optimization

Local search

Metaheuristics

@&#ABSTRACT@&#


               
               
                  In this paper we develop a hybrid metaheuristic for approaching the Pareto front of the bi-objective ring star problem. This problem consists of finding a simple cycle (ring) through a subset of nodes of a network. The aim is to minimize both the cost of connecting the nodes in the ring and the cost of allocating the nodes not in the ring to nodes in the ring. The algorithm preserves the general characteristics of a multiobjective evolutionary algorithm and embeds a local search procedure which deals with multiple objectives. The encoding scheme utilized leads to solving a Traveling Salesman Problem in order to compute the ring associated with the chromosome. This allows the algorithm to implicitly discard feasible solutions which are not efficient. The algorithm also includes an ad-hoc initial population construction which contributes to diversification. Extensive computational experiments using benchmark problems show the performance of the algorithm and reveal the noteworthy contribution of the local search procedure.
               
            

@&#INTRODUCTION@&#

The ring star problem consists of locating a simple cycle, the ring structure, through a subset of nodes of a network, while the nodes not in the ring are directly connected to nodes in the ring. This is the star structure (see Fig. 1
                     ). There are two different costs involved, the ring cost given by the sum of the costs of its edges, and the allocation cost given by the sum of the costs of the links connecting the nodes not in the ring to nodes in the ring. This problem has been dealt with in different ways depending on the manner in which the ring cost and the allocation cost are handled.

The single objective ring star problem (RSP), also known as the first version of the Median Cycle Problem, minimizes an objective function obtained by adding the ring cost and the allocation cost. It arises in telecommunications network design problems where concentrators are installed in the nodes of the ring whereas the remaining nodes are connected to their closest concentrator. It also models logistic problems where the retailers in the ring are served in a single-vehicle route and are used as small depots from which the remaining retailers are supplied. The RSP has received the most attention in the literature. Pérez, Moreno-Vega, and Martín (2003) use the model to test a heuristic that combines variable neighborhood search and tabu search. Labbé, Laporte, Martín, and González (2004) formulate the problem as a mixed integer linear program. They present a polyhedral analysis of the problem and propose a branch-and-cut algorithm. Renaud, Boctor, and Laporte (2004) develop a multistart greedy add heuristic and a random keys evolutionary algorithm. Dias, de Sousa Filho, Macambira, Cabral, and Fampa (2006) propose a heuristic that combines variable neighborhood search and a greedy randomized adaptive search procedure. Branch-and-cut algorithms have also been introduced by Kedad-Sidhoum and Nguyen (2010), who propose a new formulation of the RSP based on chains, and by Simonetti, Frota, and de Souza (2011), who reformulate the problem as a minimum Steiner arborescence problem. Calvete, Galé, and Iranzo (2013) propose an evolutionary algorithm based on a formulation of the RSP as a bilevel programming problem with one leader and two independent followers. This approach leads to a new form of chromosome encoding which provides very accurate solutions to the set of benchmark problems within short computing times.

The bi-objective ring star problem (B-RSP) has been proposed in a series of papers by Liefooghe, Jourdan, Basseur, Talbi, and Burke (2008a), Liefooghe, Jourdan, Jozefowiez, and Talbi (2008b), Liefooghe, Jourdan, and Talbi (2010). They recognized the importance of handling the ring star problem as a bi-objective problem aiming to minimize both the ring cost and the allocation cost. Liefooghe and colleagues argue that both objectives are comparable only if they are proportional one to another, which is rarely the case in practice. Moreover, the RSP and the variant in which the allocation cost is treated as a constraint (Pérez et al., 2003) can be considered as two formulations which transform the bi-objective problem into a single objective problem by using scalar approaches (Ehrgott, 2005). In their papers, Liefooghe and colleagues propose different approaches to identify a good approximation of the set of Pareto optimal solutions or the Pareto front. In Liefooghe et al. (2008a), the authors use state-of-the-art instances involving up to 299 nodes to compare three metaheuristics: IBMOLS, which is a population-based local search method, and two evolutionary algorithms based on IBEA and NSGA-II, which are well-known multiobjective methods. The Nondominated Sorting Genetic Algorithm II, NSGA-II, was proposed by Deb, Agrawal, Pratap, and Meyarivan (2002). The best individuals are selected in accordance with the nondomination rank and, in the case of a tie, the crowding distance is applied. This distance gives an estimate of the density of solutions surrounding a particular solution in the population. The Indicator-Based Evolutionary Algorithm, IBEA, was introduced by Zitzler and Kunzli (2004) and is based on a pairwise comparison of solutions by using the binary additive ϵ-indicator. In Liefooghe et al. (2008b), they propose a hybrid method which incorporates a specialized Traveling Salesman Problem (TSP) heuristic into an elitist multiobjective evolutionary algorithm. The TSP heuristic is used both to construct the initial population and to improve the ring cost of each population member at every generation of the evolutionary algorithm. They analyze the hybrid algorithm in benchmark instances up to 264 nodes obtaining that the method outperforms previously proposed algorithms. Finally, in Liefooghe et al. (2010) they extend the comparisons in Liefooghe et al. (2008a) by including what they call a Simple Elitist Evolutionary Algorithm (SEEA) and two variants of a cooperative approach which combines SEEA and IBMOLS. The SEEA method handles an archive of potentially efficient solutions which is updated at each generation with solutions obtained by applying variation operators to randomly chosen archive members. The authors conclude that the cooperative approaches improve the results in a large number of benchmark instances, particularly in large-size ones (up to 1002 nodes).

In this paper we address the B-RSP and present a hybrid metaheuristic to approach the Pareto front based on evolutionary algorithms. The key points of the proposed algorithm are the encoding scheme, the embedded local search procedure and the initial population construction. In the evolutionary algorithms proposed in the literature for solving the B-RSP, the encoding provides a feasible solution of the B-RSP directly, i.e. the genes identify which nodes are in the ring and the order in which they are visited. Then, the nodes not in the ring are allocated to the closest node in the ring. Note that two chromosomes with the same nodes in the ring have the same allocation cost, but can have very different ring costs, depending on how the ring nodes are visited. Based on this fact, in the algorithm proposed the chromosome does not provide us with the ring, but the nodes in the ring. This fact gives us the opportunity of implicitly discarding feasible solutions which for sure are not efficient. This is done when associating a feasible solution of the B-RSP with the chromosome in order to evaluate its quality. For this purpose, optimization techniques as well as local search procedures are embedded in the evolutionary algorithm. The optimization techniques are applied when solving the TSP. The local search procedures concern the implementation of operators which allow us to asses the advisability of changing the role of nodes in the feasible solution associated with the chromosome. Several variants of the method are proposed based on NSGA-II, IBEA and SEEA and their performance compared in benchmark instances. The paper is organized as follows. Section 2 formulates the B-RSP. Section 3 describes the characteristics of the hybrid metaheuristic developed to solve the problem. Section 4 presents a computational study to analyze the performance of variants of the algorithm on benchmark instances dealt with in the literature. Besides, the results provided by the algorithm are compared with the current best Pareto front approximation found in the literature. Finally, Section 5 concludes the paper with some final remarks and main lines for future work.

Let 
                        
                           G
                           =
                           (
                           V
                           ,
                           E
                           ∪
                           A
                           )
                        
                      be a mixed graph, where 
                        
                           V
                           =
                           {
                           0
                           ,
                           1
                           ,
                           ⋯
                           ,
                           n
                           }
                        
                      is the set of nodes, 
                        
                           E
                           =
                           {
                           [
                           i
                           ,
                           j
                           ]
                           :
                           i
                           ,
                           j
                           ∈
                           V
                           }
                        
                      is the set of edges and 
                        
                           A
                           =
                           {
                           (
                           i
                           ,
                           j
                           )
                           :
                           i
                           ,
                           j
                           ∈
                           V
                           }
                        
                      is the set of arcs. Node 0 represents the depot. Edges in E refer to undirected links which are used in the ring structure. We assume that there is a nonnegative ring cost cij
                      associated with each edge [i, j]. Arcs in A refer to directed links used in the star structure. We assume that there is a nonnegative allocation cost dij
                      associated with each arc (i, j), referring to the cost of node i being allocated (connected) to node j.

A ring R is a simple cycle visiting a subset of nodes VR
                      ⊆ V including the depot. The nodes in the ring will be called ring nodes. The remaining nodes are the non-ring nodes. For each i ∉ VR
                     , let j denote the index of the ring node to which node i is allocated. A feasible solution of the B-RSP consists of a ring R and a set of index pairs 
                        
                           
                              A
                              R
                           
                           =
                           
                              {
                              
                                 (
                                 i
                                 ,
                                 j
                                 )
                              
                              :
                              i
                              ∉
                              
                                 V
                                 R
                              
                              ,
                              j
                              ∈
                              
                                 V
                                 R
                              
                              }
                           
                        
                     . Let 
                        X
                      be the set of feasible solutions in the decision space.

The ring cost of the solution 
                        
                           X
                           =
                           (
                           R
                           ,
                           
                              A
                              R
                           
                           )
                           ∈
                           X
                        
                      is defined as:

                        
                           (1)
                           
                              
                                 
                                    Z
                                    1
                                 
                                 
                                    (
                                    X
                                    )
                                 
                                 =
                                 
                                    ∑
                                    
                                       [
                                       i
                                       ,
                                       j
                                       ]
                                       ∈
                                       R
                                    
                                 
                                 
                                    c
                                    
                                       i
                                       j
                                    
                                 
                              
                           
                        
                     and the allocation cost as:

                        
                           (2)
                           
                              
                                 
                                    Z
                                    2
                                 
                                 
                                    (
                                    X
                                    )
                                 
                                 =
                                 
                                    ∑
                                    
                                       
                                          (
                                          i
                                          ,
                                          j
                                          )
                                       
                                       ∈
                                       
                                          A
                                          R
                                       
                                    
                                 
                                 
                                    d
                                    
                                       i
                                       j
                                    
                                 
                              
                           
                        
                     
                  

The B-RSP aims to minimize the objective functions (1) and (2) in the set of feasible solutions:

                        
                           
                              
                                 
                                    
                                       min
                                    
                                    
                                       
                                          (
                                          
                                             Z
                                             1
                                          
                                          
                                             (
                                             X
                                             )
                                          
                                          ,
                                          
                                          
                                             Z
                                             2
                                          
                                          
                                             (
                                             X
                                             )
                                          
                                          )
                                       
                                    
                                 
                                 
                                    
                                       
                                          subject
                                          
                                          to
                                          
                                       
                                    
                                    
                                       
                                          X
                                          ∈
                                          X
                                       
                                    
                                 
                              
                           
                        
                     
                  

According to the theory of multiobjective optimization (Ehrgott, 2005), a feasible solution X is efficient if and only if there is no other feasible solution 
                        
                           X
                           ˜
                        
                      so that 
                        
                           
                              Z
                              s
                           
                           
                              (
                              
                                 X
                                 ˜
                              
                              )
                           
                           ⩽
                           
                              Z
                              s
                           
                           
                              (
                              X
                              )
                           
                           ,
                        
                     
                     
                        
                           s
                           =
                           1
                           ,
                           2
                        
                      with at least one strict inequality. A feasible solution X is weakly efficient if and only if there is no other feasible solution 
                        
                           X
                           ˜
                        
                      so that 
                        
                           
                              Z
                              s
                           
                           
                              (
                              
                                 X
                                 ˜
                              
                              )
                           
                           <
                           
                              Z
                              s
                           
                           
                              (
                              X
                              )
                           
                           ,
                        
                     
                     
                        
                           s
                           =
                           1
                           ,
                           2
                        
                     . The feasible solution X dominates the feasible solution 
                        
                           X
                           ˜
                        
                      if 
                        
                           
                              Z
                              s
                           
                           
                              (
                              X
                              )
                           
                           ⩽
                           
                              Z
                              s
                           
                           
                              (
                              
                                 X
                                 ˜
                              
                              )
                           
                           ,
                        
                     
                     
                        
                           s
                           =
                           1
                           ,
                           2
                        
                      with at least one strict inequality.

Every efficient (weakly efficient) solution corresponds to a nondominated (weakly nondominated) vector in the objective space. The set of all nondominated vectors is the Pareto front. Generating the Pareto front is usually prohibitive either due to the large number of points involved or due to the complexity of the problem. A reasonable approach most often taken in the literature is to compute a good approximation of the Pareto front. For this purpose, population-based metaheuristics, which is what evolutionary algorithms are, have proved to provide very good results (Deb, 2001; Liefooghe et al., 2008a, 2008b; Liefooghe et al., 2010).

The Multiobjective Evolutionary Algorithm with Local Search (MEALS) proposed in this paper is a hybrid metaheuristic which preserves the general characteristics of a multiobjective evolutionary algorithm and embeds a local search procedure. The integration of an evolutionary algorithm and local search operations such as cycle reduction, cycle augmentation and node exchange (Renaud et al., 2004) has been proved to be very effective when solving the RSP for improving the performance of the algorithm in terms of the single objective function being decreased. In the implementation of the algorithm proposed in Calvete et al. (2013) for solving the RSP, local search operations are applied while there is an improvement of the objective function. MEALS aims to extend this integration to the bi-objective case. The extension is not trivial. When there is a single objective function it is possible to compare two solutions and to discard the worst one. However, when there are two objective functions involved it is not so clear which solution should be discarded. In general, when a local search operation is applied, one of the objective functions is improved at the expense of worsening the other objective function. Several approaches have been proposed in the literature on evolutionary multiobjective algorithms to handle this problem. Ishibuchi and Murata (1998) define the fitness of a chromosome as a weighted function of the objectives whose coefficients are randomly generated in each iteration. The same coefficients and function are used in the local search procedure to examine some neighborhood solutions of the current solution obtained after crossover and mutation. Jaszkiewicz (2002) proposes a very similar procedure whose main difference lies in the way the solutions are selected for crossover. Sindhya, Deb, and Miettinen (2008), Sindhya, Sinha, Deb, and Miettinen (2009) propose the use of achievement scalarizing functions. Coello, Lamont, and Veldhuizen (2007) provide a literature survey on the subject. One of the main contributions of the paper is to propose a new method for implementing the local search operations and selecting solutions leading to successive solutions which are not dominated by the previous one. The computational study in Section 4 highlights the importance of the contribution of the local search procedure in the performance of the algorithm in terms of the Pareto front approximation yielded. Next we describe in detail the main characteristics of the algorithm.

As far as we know, all the evolutionary algorithms proposed in the literature to solve the B-RSP use the random keys encoding mechanism developed by Bean (1994) for representing the solutions of the TSP. This encoding scheme easily allows for the recombination of cycles. According to random keys encoding, a random real key k ∈ [0, 1) is assigned to every node in the ring. A zero is assigned to the depot, since it is always in the ring, and a special value is assigned to the nodes not in the ring. In order to associate a feasible solution of the B-RSP with the chromosome, the ring is identified by reading the ring nodes in accordance with their random keys in an increasing order. The non-ring nodes are allocated to their closest ring node. Consistent with this construction, the feasible solution of the B-RSP associated with a chromosome provides the best value of the allocation cost but not necessarily the best value of the ring cost for the ring nodes of the chromosome. Unlike this encoding scheme, we use the codification proposed by Calvete et al. (2013) that provides us with the ring nodes but gives no indication of their position in the ring. Then, we propose to associate the chromosome with a feasible solution of the B-RSP with the best ring cost and the best allocation cost for this fixed set of ring nodes.

We encode the chromosome as a binary vector whose dimension is the number of nodes in the network 
                           
                              C
                              =
                              (
                              
                                 c
                                 0
                              
                              ,
                              ⋯
                              ,
                              
                                 c
                                 
                                    |
                                    V
                                    |
                                 
                              
                              )
                              ,
                           
                         so that 
                           
                              
                                 c
                                 0
                              
                              =
                              1
                           
                         and for each i ∈ V∖{0}

                           
                              
                                 
                                    
                                       c
                                       i
                                    
                                    =
                                    
                                       {
                                       
                                          
                                             
                                                
                                                   1
                                                   ,
                                                
                                             
                                             
                                                
                                                   if
                                                   
                                                   i
                                                   
                                                   is
                                                   
                                                   a
                                                   
                                                   ring
                                                   
                                                   node
                                                
                                             
                                          
                                          
                                             
                                                
                                                   0
                                                   ,
                                                
                                             
                                             
                                                otherwise
                                             
                                          
                                       
                                    
                                 
                              
                           
                        
                     

In order to associate a feasible solution of the B-RSP with a chromosome, we need to construct a ring R through the ring nodes and to allocate the remaining nodes. We propose to construct the ring by solving the TSP associated to the ring nodes 
                           
                              
                                 V
                                 R
                              
                              =
                              
                                 {
                                 i
                                 ∈
                                 V
                                 :
                                 
                                    c
                                    i
                                 
                                 =
                                 1
                                 }
                              
                           
                        . The remaining nodes are allocated to the closest ring node, i.e. 
                           
                              
                                 A
                                 R
                              
                              =
                              
                                 {
                                 
                                    (
                                    i
                                    ,
                                    
                                       j
                                       i
                                    
                                    )
                                 
                                 :
                                 
                                    c
                                    i
                                 
                                 =
                                 0
                                 ,
                                 
                                    j
                                    i
                                 
                                 =
                                 arg
                                 min
                                 
                                    {
                                    
                                       d
                                       
                                          i
                                          j
                                       
                                    
                                    :
                                    j
                                    ∈
                                    
                                       V
                                       R
                                    
                                    }
                                 
                                 }
                              
                           
                        . That is, for the fixed subset of ring nodes provided by the chromosome, we are selecting the feasible solution of the B-RSP with the least ring cost and the least allocation cost. Note that, after selecting the nodes in the ring, the best allocation cost is fixed without paying attention to the way in which the ring nodes are connected. Hence, the feasible solution of the B-RSP which involves an optimal solution of the TSP through the ring nodes and the best allocation of the non-ring nodes will weakly dominate any other feasible solution of the B-RSP with the same ring nodes. This allows us to implicitly discard any other feasible solution of the B-RSP with the same set of ring nodes since they cannot be efficient, and so the populations handled by the algorithm represent better feasible solutions of the B-RSP. In fact, in the implementation of the algorithm, we do not solve the TSP to optimality but apply a heuristic algorithm. Therefore, we only implicitly discard the solutions with a larger ring cost than the ring cost provided by this algorithm. Taking into account that we have to solve a TSP every time a chromosome is generated, we propose to use a heuristic algorithm for solving the TSP that provides us with good enough solutions in short computing times. We have selected a greedy algorithm based on least cost edges followed by 2-opt local search. Other algorithms for solving the TSP could be used (Johnson & McGeoch, 2002; Laporte, 2010).
                     

Let N be the population size. The initial population is formed by two distinguished chromosomes C
                        1 and C
                        2, and 
                           
                              N
                              −
                              2
                           
                         randomly generated chromosomes. The chromosome C
                        1 involves a single ring node (the depot) to which the remaining nodes are allocated. In the chromosome C
                        2 all nodes are ring nodes. Note that the feasible solution associated to C
                        1 is very easy to compute. Moreover, it has the least ring cost and is an efficient solution. In contrast, the computation of the feasible solution associated to C
                        2, which has the least allocation cost, is more difficult since it involves solving a TSP for the whole nodes of the network. We solve this problem by applying the version 2.0.6 of the implementation LKH by Helsgaun (2000) of the Lin and Kernighan heuristic (Lin & Kernighan, 1973). This implementation provides excellent results and can be downloaded from http://www.akira.ruc.dk/~keld/research/LKH/.

Concerning the 
                           
                              N
                              −
                              2
                           
                         random chromosomes, in order to encourage diversification, a number p ∈ [0, 1] is generated for each chromosome. Then, each node is selected to be in the ring with probability p. This procedure, unlike fixing the probability p a priori for the chromosomes as a whole, facilitates the obtaining of chromosomes having a variety in the number of ring nodes.

We apply a uniform crossover operator. For each population, the crossover operator randomly selects N pairs of parents and generates one offspring from each pair. Each gene of the offspring is selected from one of the parents with equal probability.

After generating these offspring, the mutation operator is applied with a mutation probability pm
                        . If the offspring is selected, a gene is randomly selected and its allele value is switched, i.e. a node changes from being a ring node to being a non-ring node or vice versa.

At this point, the offspring is formed by N chromosomes, each with the feasible solution of the B-RSP obtained by applying the procedure explained in Section 3.1 and the corresponding ring cost and allocation cost.

Having finished the crossover and mutation operations, the following step of a standard evolutionary algorithm is to apply the next population selection procedure. Instead, we propose to apply local search operations to solutions corresponding to randomly selected chromosomes of the offspring aiming to improve the quality of the populations managed by the algorithm. Local search procedures are applied in the literature when a single objective function is involved. Usually, the algorithms which include these operations apply them as long as the objective function value is improved. To compare the objective function values of the available solutions before and after applying a local search operation is not as clear when there are two objective functions as when a single objective function is involved. Usually, both objectives are not improved at the same time. In MEALS we embed a procedure which establishes how to apply the local search operations and how to select a solution. A scheme of this procedure is summarized in Fig. 2. Next, we explain each step in more detail.

Each offspring is selected for the local search operation with a probability of pl
                        . Let C be a chromosome selected to undergo the local search and 
                           
                              X
                              =
                              (
                              R
                              ,
                              
                                 A
                                 R
                              
                              )
                           
                         the feasible solution of the B-RSP associated with it. This solution is obtained as indicated in Section 3.1, i.e. the ring is computed by applying the greedy algorithm followed by 2-opt local search. The non-ring nodes are allocated to the closest ring node.

First, a 3-opt local search is applied. This operation does not alter the ring nodes. Hence, it provides a solution with the same allocation cost and less or equal ring cost, which weakly dominates the solution X. Let 
                           
                              X
                              1
                              1
                           
                         be the new solution.

Next, we select in random order every node in V\{0} and apply successively the following operations which evaluate different positions of the node. Let 
                           
                              X
                              k
                              1
                           
                         be the incumbent solution in the kth iteration of the local search procedure. If either 
                           
                              
                                 Z
                                 1
                              
                              
                                 (
                                 
                                    X
                                    k
                                    1
                                 
                                 )
                              
                              =
                              0
                           
                         or 
                           
                              
                                 Z
                                 2
                              
                              
                                 (
                                 
                                    X
                                    k
                                    1
                                 
                                 )
                              
                              =
                              0
                              ,
                           
                         the local search procedure terminates. Otherwise, let i be the node selected in the k-th iteration.

                           
                              •
                              
                                 Cycle reduction: This is applied only if i is a ring node of 
                                    
                                       X
                                       k
                                       1
                                    
                                 . The node is removed from the ring and the nodes allocated to it are reallocated. Let 
                                    
                                       X
                                       k
                                       2
                                    
                                  be the new solution, which coincides with 
                                    
                                       X
                                       k
                                       1
                                    
                                  when i is a non-ring node.


                                 Cycle augmentation: From the solution 
                                    
                                       
                                          X
                                          k
                                          2
                                       
                                       ,
                                    
                                  the non-ring node i is inserted in the best position in the ring according to the ring cost. The remaining non-ring nodes are reallocated. Let 
                                    
                                       X
                                       k
                                       3
                                    
                                  be the new solution.


                                 Node exchange: From the solution 
                                    
                                       
                                          X
                                          k
                                          2
                                       
                                       ,
                                    
                                  the non-ring node i is swapped with the ring node to which it is allocated (except if i is allocated to node 0) and the remaining non-ring nodes are reallocated. Let 
                                    
                                       X
                                       k
                                       4
                                    
                                  be the new solution.

After applying the local search operator to node i, the feasible solutions 
                           
                              X
                              k
                              h
                           
                         are available with objective function values 
                           
                              (
                              
                                 Z
                                 1
                              
                              
                                 (
                                 
                                    X
                                    k
                                    h
                                 
                                 )
                              
                              ,
                              
                                 Z
                                 2
                              
                              
                                 (
                                 
                                    X
                                    k
                                    h
                                 
                                 )
                              
                              )
                              ,
                           
                        
                        
                           
                              h
                              =
                              1
                              ,
                              ⋯
                              ,
                              4
                           
                        . In general, none of them will dominate the remaining three. In order to select the solution 
                           
                              X
                              
                                 k
                                 +
                                 1
                              
                              1
                           
                         to pass to the next iteration of the local search procedure, we would like a criterion guaranteeing that the solution selected in each iteration is not dominated by the previous solution. Moreover, at the termination of the local search operation applied to the chromosome C the solution selected should not be dominated by the original solution X. Finally, we would like to balance both objective functions not allowing one objective to substantially improve at the expense of a worsening of the other. With this aim in mind, we propose to select the solution 
                           
                              X
                              
                                 k
                                 +
                                 1
                              
                              1
                           
                         so that:

                           
                              (3)
                              
                                 
                                    
                                       X
                                       
                                          k
                                          +
                                          1
                                       
                                       1
                                    
                                    =
                                    
                                       
                                          arg
                                          min
                                       
                                       
                                          h
                                          =
                                          1
                                          ,
                                          ⋯
                                          ,
                                          4
                                       
                                    
                                    
                                       {
                                       
                                          
                                             
                                                
                                                   Z
                                                   1
                                                
                                                
                                                   (
                                                   
                                                      X
                                                      k
                                                      h
                                                   
                                                   )
                                                
                                             
                                             
                                                
                                                   Z
                                                   1
                                                
                                                
                                                   (
                                                   
                                                      X
                                                      k
                                                      1
                                                   
                                                   )
                                                
                                             
                                          
                                       
                                       +
                                       
                                          
                                             
                                                
                                                   Z
                                                   2
                                                
                                                
                                                   (
                                                   
                                                      X
                                                      k
                                                      h
                                                   
                                                   )
                                                
                                             
                                             
                                                
                                                   Z
                                                   2
                                                
                                                
                                                   (
                                                   
                                                      X
                                                      k
                                                      1
                                                   
                                                   )
                                                
                                             
                                          
                                       
                                       }
                                    
                                 
                              
                           
                        After selecting 
                           
                              X
                              
                                 k
                                 +
                                 1
                              
                              1
                           
                         the process iterates with the following randomly selected node. Notice that

                           
                              (4)
                              
                                 
                                    
                                       
                                          
                                             
                                                Z
                                                1
                                             
                                             
                                                (
                                                
                                                   X
                                                   
                                                      k
                                                      +
                                                      1
                                                   
                                                   1
                                                
                                                )
                                             
                                          
                                          
                                             
                                                Z
                                                1
                                             
                                             
                                                (
                                                
                                                   X
                                                   k
                                                   1
                                                
                                                )
                                             
                                          
                                       
                                    
                                    +
                                    
                                       
                                          
                                             
                                                Z
                                                2
                                             
                                             
                                                (
                                                
                                                   X
                                                   
                                                      k
                                                      +
                                                      1
                                                   
                                                   1
                                                
                                                )
                                             
                                          
                                          
                                             
                                                Z
                                                2
                                             
                                             
                                                (
                                                
                                                   X
                                                   k
                                                   1
                                                
                                                )
                                             
                                          
                                       
                                    
                                    ⩽
                                    
                                       
                                          
                                             
                                                Z
                                                1
                                             
                                             
                                                (
                                                
                                                   X
                                                   k
                                                   1
                                                
                                                )
                                             
                                          
                                          
                                             
                                                Z
                                                1
                                             
                                             
                                                (
                                                
                                                   X
                                                   k
                                                   1
                                                
                                                )
                                             
                                          
                                       
                                    
                                    +
                                    
                                       
                                          
                                             
                                                Z
                                                2
                                             
                                             
                                                (
                                                
                                                   X
                                                   k
                                                   1
                                                
                                                )
                                             
                                          
                                          
                                             
                                                Z
                                                2
                                             
                                             
                                                (
                                                
                                                   X
                                                   k
                                                   1
                                                
                                                )
                                             
                                          
                                       
                                    
                                    =
                                    2
                                 
                              
                           
                        
                     

The following results guarantee the nondomination of successive solutions. Let us denote by 
                           
                              
                                 (
                                 
                                    Z
                                    1
                                    k
                                 
                                 ,
                                 
                                    Z
                                    2
                                    k
                                 
                                 )
                              
                              =
                              
                                 (
                                 
                                    Z
                                    1
                                 
                                 
                                    (
                                    
                                       X
                                       k
                                       1
                                    
                                    )
                                 
                                 ,
                                 
                                    Z
                                    2
                                 
                                 
                                    (
                                    
                                       X
                                       k
                                       1
                                    
                                    )
                                 
                                 )
                              
                           
                         the objective function values of the solution analyzed in the kth iteration. Let 
                           
                              (
                              
                                 Z
                                 1
                                 
                                    n
                                    +
                                    1
                                 
                              
                              ,
                              
                                 Z
                                 2
                                 
                                    n
                                    +
                                    1
                                 
                              
                              )
                           
                         be the objective function values of the solution provided at the end of the local search procedure. Assume for the time being that 
                           
                              
                                 Z
                                 1
                                 k
                              
                              >
                              0
                              ,
                           
                        
                        
                           
                              
                                 Z
                                 2
                                 k
                              
                              >
                              0
                              ,
                           
                        
                        
                           
                              k
                              =
                              1
                              ,
                              ⋯
                              ,
                              n
                              +
                              1
                           
                        .

                           Lemma 1
                           
                              Let X, 
                                 
                                    X
                                    ˜
                                 
                               
                              be feasible solutions of the B-RSP. If X dominates
                              
                                 
                                    X
                                    ˜
                                 
                               
                              then 
                              
                                 
                                    
                                       
                                          
                                             Z
                                             1
                                          
                                          
                                             (
                                             X
                                             )
                                          
                                          
                                             Z
                                             2
                                          
                                          
                                             (
                                             X
                                             )
                                          
                                          <
                                          
                                             Z
                                             1
                                          
                                          
                                             (
                                             
                                                X
                                                ˜
                                             
                                             )
                                          
                                          
                                             Z
                                             2
                                          
                                          
                                             (
                                             
                                                X
                                                ˜
                                             
                                             )
                                          
                                       
                                    
                                 
                              
                           

Under the hypothesis, either 
                                 
                                    
                                       Z
                                       1
                                    
                                    
                                       (
                                       X
                                       )
                                    
                                    <
                                    
                                       Z
                                       1
                                    
                                    
                                       (
                                       
                                          X
                                          ˜
                                       
                                       )
                                    
                                 
                               and 
                                 
                                    
                                       Z
                                       2
                                    
                                    
                                       (
                                       X
                                       )
                                    
                                    ⩽
                                    
                                       Z
                                       2
                                    
                                    
                                       (
                                       
                                          X
                                          ˜
                                       
                                       )
                                    
                                 
                               or 
                                 
                                    
                                       Z
                                       1
                                    
                                    
                                       (
                                       X
                                       )
                                    
                                    ⩽
                                    
                                       Z
                                       1
                                    
                                    
                                       (
                                       
                                          X
                                          ˜
                                       
                                       )
                                    
                                 
                               and 
                                 
                                    
                                       Z
                                       2
                                    
                                    
                                       (
                                       X
                                       )
                                    
                                    <
                                    
                                       Z
                                       2
                                    
                                    
                                       (
                                       
                                          X
                                          ˜
                                       
                                       )
                                    
                                 
                              . In any case, 
                                 
                                    
                                       Z
                                       1
                                    
                                    
                                       (
                                       X
                                       )
                                    
                                    
                                       Z
                                       2
                                    
                                    
                                       (
                                       X
                                       )
                                    
                                    <
                                    
                                       Z
                                       1
                                    
                                    
                                       (
                                       
                                          X
                                          ˜
                                       
                                       )
                                    
                                    
                                       Z
                                       2
                                    
                                    
                                       (
                                       
                                          X
                                          ˜
                                       
                                       )
                                    
                                 
                              .□


                              
                                 
                                    
                                       Z
                                       1
                                       
                                          k
                                          +
                                          1
                                       
                                    
                                    
                                       Z
                                       2
                                       
                                          k
                                          +
                                          1
                                       
                                    
                                    ⩽
                                    
                                       Z
                                       1
                                       k
                                    
                                    
                                       Z
                                       2
                                       k
                                    
                                    ,
                                 
                              
                              
                                 
                                    k
                                    =
                                    1
                                    ,
                                    ⋯
                                    ,
                                    n
                                 
                              
                           

Let us assume that 
                                 
                                    
                                       Z
                                       1
                                       
                                          k
                                          +
                                          1
                                       
                                    
                                    
                                       Z
                                       2
                                       
                                          k
                                          +
                                          1
                                       
                                    
                                    >
                                    
                                       Z
                                       1
                                       k
                                    
                                    
                                       Z
                                       2
                                       k
                                    
                                 
                              . Hence,

                                 
                                    
                                       
                                          
                                             
                                                
                                                   Z
                                                   2
                                                   k
                                                
                                                
                                                   Z
                                                   2
                                                   
                                                      k
                                                      +
                                                      1
                                                   
                                                
                                             
                                          
                                          <
                                          
                                             
                                                
                                                   Z
                                                   1
                                                   
                                                      k
                                                      +
                                                      1
                                                   
                                                
                                                
                                                   Z
                                                   1
                                                   k
                                                
                                             
                                          
                                       
                                    
                                 
                              By applying (4)
                              
                                 
                                    
                                       
                                          
                                             
                                                
                                                   Z
                                                   2
                                                   k
                                                
                                                
                                                   Z
                                                   2
                                                   
                                                      k
                                                      +
                                                      1
                                                   
                                                
                                             
                                          
                                          +
                                          
                                             
                                                
                                                   Z
                                                   2
                                                   
                                                      k
                                                      +
                                                      1
                                                   
                                                
                                                
                                                   Z
                                                   2
                                                   k
                                                
                                             
                                          
                                          <
                                          2
                                          
                                          ⟹
                                          
                                          
                                             
                                                (
                                                
                                                   Z
                                                   2
                                                   k
                                                
                                                −
                                                
                                                   Z
                                                   2
                                                   
                                                      k
                                                      +
                                                      1
                                                   
                                                
                                                )
                                             
                                             2
                                          
                                          <
                                          0
                                       
                                    
                                 
                              A contradiction follows and so the proof is complete.□

As a result of Lemma 2,

                           
                              (5)
                              
                                 
                                    
                                       Z
                                       1
                                       k
                                    
                                    
                                       Z
                                       2
                                       k
                                    
                                    ⩽
                                    
                                       Z
                                       1
                                       r
                                    
                                    
                                       Z
                                       2
                                       r
                                    
                                    
                                    if
                                    
                                    r
                                    <
                                    k
                                 
                              
                           
                        
                        
                           Theorem 3
                           
                              If r < k the solution
                              
                                 
                                    X
                                    r
                                    1
                                 
                               
                              does not dominate the solution
                              
                                 
                                    X
                                    k
                                    1
                                 
                              
                              .
                           

It directly follows from Lemma 1 and expression (5).□


                              The solution
                              
                                 
                                    
                                       X
                                       k
                                       1
                                    
                                    ,
                                 
                              
                              
                                 
                                    k
                                    =
                                    1
                                    ,
                                    ⋯
                                    ,
                                    n
                                    +
                                    1
                                    ,
                                 
                               
                              is not dominated by the initial solution X.
                           

Taking into account that 
                                 
                                    X
                                    1
                                    1
                                 
                               is the solution obtained after applying a 3-opt local search to X
                              
                                 
                                    
                                       
                                          
                                             Z
                                             1
                                             1
                                          
                                          ⩽
                                          
                                             Z
                                             1
                                          
                                          
                                             (
                                             X
                                             )
                                          
                                          
                                          and
                                          
                                          
                                             Z
                                             2
                                             1
                                          
                                          =
                                          
                                             Z
                                             2
                                          
                                          
                                             (
                                             X
                                             )
                                          
                                       
                                    
                                 
                              Hence, X does not dominate 
                                 
                                    X
                                    1
                                    1
                                 
                              .

If X dominated 
                                 
                                    
                                       X
                                       k
                                       1
                                    
                                    ,
                                 
                              
                              
                                 
                                    k
                                    =
                                    2
                                    ,
                                    ⋯
                                    ,
                                    n
                                    +
                                    1
                                 
                               then, by applying Lemma 1, 
                                 
                                    
                                       Z
                                       1
                                    
                                    
                                       (
                                       X
                                       )
                                    
                                    
                                       Z
                                       2
                                    
                                    
                                       (
                                       X
                                       )
                                    
                                    <
                                    
                                       Z
                                       1
                                       k
                                    
                                    
                                       Z
                                       2
                                       k
                                    
                                 
                              . Hence

                                 
                                    
                                       
                                          
                                             Z
                                             1
                                             1
                                          
                                          
                                             Z
                                             2
                                             1
                                          
                                          <
                                          
                                             Z
                                             1
                                             k
                                          
                                          
                                             Z
                                             2
                                             k
                                          
                                       
                                    
                                 
                              which contradicts (5).□

As a consequence of Theorem 4, the solution 
                           
                              X
                              
                                 n
                                 +
                                 1
                              
                              1
                           
                         obtained at the termination of the local search procedure is not dominated by the initial solution X.

Finally, we consider the cases in which the local search procedure terminates in the kth iteration, 
                           
                              k
                              <
                              n
                              +
                              1
                              ,
                           
                         due to one of the objective function values being equal to zero. Notice that both cannot be zero simultaneously. Then, 
                           
                              X
                              k
                              1
                           
                         is dominated neither by X nor by 
                           
                              
                                 X
                                 r
                                 1
                              
                              ,
                           
                         
                        r < k, since the objective function values associated to these solutions are positive.

Therefore, as desired when proposing the criterion (3) to select the successive solutions, the solution provided by the local search procedure is never dominated by the initial solution.

Three different variants of the algorithm are proposed which apply the rules of the two standard methods NSGA-II and IBEA, and the SEEA method proposed specifically for dealing with the B-RSP. In the implementations of the three variants of MEALS, an archive population is maintained. This archive stores potentially nondominated points found through the algorithm and is updated at each iteration.
                        
                     

In order to analyze the performance of MEALS, a computational experiment has been carried out. First, we have analyzed the influence of the three variants of the algorithm, the effect of using the local search procedure and the impact of the mutation probability on the performance of the algorithm. Second, the selected configurations of MEALS have been compared with the Pareto front approximation available in the literature. Hence, for these two parts of the study, we have used the set of benchmark instances proposed in the literature. In these instances edge and arc costs are equal. This fact has motivated the third part of the study in which the algorithm has been checked on an additional set of instances for which those costs are different. The numerical experiments have been performed on a PC Intel®Core™I7-3820 CPU at 3.6 GHz × 8 having 32 GB of RAM under Ubuntu Linux 12.04 LTS. Although we had a multi-processor computer at hand, only one processor was used in our tests. The code has been written in C++, GCC 4.6.3.

Bearing in mind the parameters of the algorithm, we have analyzed the influence of the local search probability (
                           
                              
                                 p
                                 l
                              
                              =
                              0
                              ,
                              0.2
                              ,
                              0.5
                           
                        ) and the mutation probability (
                           
                              
                                 p
                                 m
                              
                              =
                              0
                              ,
                              0.2
                              ,
                              0.5
                           
                        ) as well as the three variants of MEALS on the performance of the algorithm. The value 
                           
                              
                                 p
                                 l
                              
                              =
                              0
                           
                         and/or 
                           
                              
                                 p
                                 m
                              
                              =
                              0
                           
                         allow us to assess the algorithm when no local search and/or mutation is applied. In a preliminary study we analyzed the influence of the population size, but it was not significant in the performance of any variant of the algorithm. Hence, we set the population size at 200 chromosomes.

The algorithm has been tested on the set of ten benchmark instances used in Liefooghe et al. (2010). The instances are based on Traveling Salesman Problem (TSP) instances from TSPLIB (Reinelt, 1991) involving between 51 and 1002 nodes. The name of the instance includes the number of nodes of the problem. Each TSPLIB instance contains coordinates of a set of points in the plane. Edge and arc costs for each pair of nodes i and j are defined by using the Euclidean distance lij
                         between the points associated to these vertices. Both costs are integers and are obtained by rounding the Euclidean distance: 
                           
                              
                                 c
                                 
                                    i
                                    j
                                 
                              
                              =
                              
                                 ⌊
                                 
                                    l
                                    
                                       i
                                       j
                                    
                                 
                                 +
                                 0.5
                                 ⌋
                              
                              ,
                           
                         [i, j] ∈ E, 
                           
                              
                                 d
                                 
                                    i
                                    j
                                 
                              
                              =
                              
                                 ⌊
                                 
                                    l
                                    
                                       i
                                       j
                                    
                                 
                                 +
                                 0.5
                                 ⌋
                              
                              ,
                           
                         (i, j) ∈ A.

Each test instance has been solved 20 times under each variant of the algorithm and each combination of factors considered. Hence, it has been solved 
                           
                              3
                              ×
                              3
                              ×
                              3
                              ×
                              20
                              =
                              540
                           
                         times. The characteristics of the algorithm configurations are shown in Table 1. The initial population used by all the configurations is matched in corresponding runs. Hence the results provide the ability of each configuration to improve the initial population. The termination condition has been established in terms of computing time. We have used the computing times proposed in Liefooghe et al. (2010), which are displayed in Table 2
                        . In order to evaluate the quality of the Pareto front approximations yielded by the algorithm configurations analyzed, we have used the performance assessment tool suite provided in PISA, http://www.tik.ee.ethz.ch/pisa. For each test instance, we compute the reference set 
                           
                              Z
                              N
                              *
                           
                         which is formed by all the nondominated points available, i.e. the union of the outputs obtained throughout the whole experiment. We have used two indicators which measure the quality of an output set A in comparison to 
                           
                              Z
                              N
                              *
                           
                        . The unary hypervolume metric 
                           
                              I
                              H
                              −
                           
                         (Zitzler & Thiele, 1999) computes the area of the objective space that is weakly dominated by 
                           
                              Z
                              N
                              *
                           
                         and not by A. The binary additive ϵ-indicator 
                           
                              I
                              
                                 
                                    ϵ
                                    +
                                 
                              
                              1
                           
                         computes the minimum factor by which A has to be translated in the objective space to weakly dominate 
                           
                              Z
                              N
                              *
                           
                        . The closer the indexes to zero, the better the approximation. The statistical analysis has been carried out by using Minitab®, release 15.

In order to get a global picture of the performance of the algorithm, we start by carrying out a descriptive analysis of the results for each instance. As an illustration, Figs. 3–6
                        
                        
                         which correspond to problems eil51, bier127, pr264 and pr1002 are displayed. They have a similar structure. For each problem, the left
                         side shows the boxplots of the value of 
                           
                              I
                              H
                              −
                           
                         obtained in the 20 runs. The right side shows the same for 
                           
                              I
                              
                                 
                                    ϵ
                                    +
                                 
                              
                              1
                           
                        . The indicator real value is the number in the Figure multiplied by 
                           
                              10
                              
                                 −
                                 3
                              
                           
                        . In the x-axis, the configurations are shown. From the descriptive analysis on the whole set of instances, we can infer that for most problems, the worse results are obtained when no local search is applied (Configurations 1–9). When local search is applied, differences between 
                           
                              
                                 p
                                 l
                              
                              =
                              0.2
                           
                         and 
                           
                              
                                 p
                                 l
                              
                              =
                              0.5
                           
                         are not so evident. In this case, depending on the problem, we can observe a great influence of the algorithm variant and the mutation probability used. In those problems showing more variation in the values of the indicators, we can observe that the better results are obtained when mutation is applied, i.e. 
                           
                              
                                 p
                                 m
                              
                              =
                              0.2
                           
                         or 
                           
                              
                                 p
                                 m
                              
                              =
                              0.5
                           
                        . Regarding the variant, NSGA-II and IBEA seem to provide better results. The SEEA variant improves for the smaller problems.

To confirm that the influence of the configuration in the indicators 
                           
                              I
                              H
                              −
                           
                         and 
                           
                              I
                              
                                 
                                    ϵ
                                    +
                                 
                              
                              1
                           
                         is statistically significant, the Friedman test has been applied. This is a nonparametric analysis of a randomized block experiment which provides an alternative to the two-way analysis of variance when the assumption of normality is not justified. A p-value equal to zero has been obtained for every problem and every indicator, thus confirming that the configuration significantly influences the results. The test has been repeated on data after eliminating the configurations with 
                           
                              
                                 p
                                 l
                              
                              =
                              0
                           
                         and 
                           
                              
                                 p
                                 m
                              
                              =
                              0
                           
                        . Also in this case, the configuration is statistically significant. After examining data provided by the Friedman test on the estimated median for each instance and each configuration, we have selected the configurations 11, 14 and 17 which correspond to the NSGA-II, IBEA and SEEA variants of MEALS with mutation and local search over 20% of chromosomes. From now on, let these configurations be called MEALS-NSGA-II, MEALS-IBEA and MEALS-SEEA. These configurations seem to provide good results for most problems. Table 3 displays 
                           
                              I
                              H
                              −
                           
                         for these three configurations. The first column shows the name of the problem. The second to fourth columns display the value of 
                           
                              I
                              H
                              −
                           
                         (minimum, mean and maximum obtained in the 20 runs) for the MEALS-NSGA-II configuration. The corresponding values for the MEALS-IBEA and MEALS-SEEA configurations are shown in the fifth to tenth columns. The indicator real value is the number in the table multiplied by 
                           
                              10
                              
                                 −
                                 3
                              
                           
                        . With the same structure, Table 4 shows the value of 
                           
                              I
                              
                                 
                                    ϵ
                                    +
                                 
                              
                              1
                           
                        . An additional test has been applied to these configurations to try to establish if one of them is better than the others. As matched samples have been considered, for every instance MEALS-NSGA-II, MEALS-IBEA, and MEALS-SEEA have been compared by using the Wilcoxon signed rank test with a significance level of 5%. Tables 5
                         and 6
                         show the p-value for each pair of optimizers with respect to the alternative hypothesis that the indicator values for the row optimizer are significantly better than those for the column optimizer, respectively for 
                           
                              I
                              H
                              −
                           
                         and 
                           
                              I
                              
                                 
                                    ϵ
                                    +
                                 
                              
                              1
                           
                        .

According to these results, regarding 
                           
                              
                                 I
                                 H
                                 −
                              
                              ,
                           
                         MEALS-SEEA is the best for the problems eil51, st70 and pr264, since it outperforms the other configurations and MEALS-IBEA is the worst in the sense that it is outperformed by the other two. However, for the problems bier127, kroA150, kroA200, pr299, pr439 and pr1002 MEALS-IBEA is the best whereas MEALS-SEEA is the worst. For the problem kroA100 MEALS-NSGA-II is the best, whereas MEALS-SEEA is the worst. Regarding 
                           
                              
                                 I
                                 
                                    
                                       ϵ
                                       +
                                    
                                 
                                 1
                              
                              ,
                           
                         for all problems except kroA200, MEALS-NSGA-II is not outperformed by another configuration and it is the best for the problems kroA100, kroA150, pr264 and pr1002. MEALS-IBEA is the best configuration only for the problem kroA200, whereas it is the worst for eil51, st70, pr264 and pr439. MEALS-SEEA is not the best configuration for any problem and it is the worst for kroA100, bier127, kroA150, kroA200 and pr1002. Since the performance of the algorithm configurations strongly depends on the problem and the quality indicator selected, we have decided to consider the three of them, MEALS-NSGA-II, MEALS-IBEA and MEALS-SEEA, for comparison with the best Pareto front approximation provided in the literature.

The current best Pareto front approximation (CBPF) for each instance in the set of benchmark instances is provided by Liefooghe and colleagues and can be found at https://sites.google.com/site/arnaudliefooghe/research/rsp. It is worth mentioning that Liefooghe et al. (2010) have not rounded the Euclidean distance when computing the edge and arc costs. Hence, in this part of the study, we have defined 
                           
                              
                                 c
                                 
                                    i
                                    j
                                 
                              
                              =
                              
                                 l
                                 
                                    i
                                    j
                                 
                              
                              ,
                           
                         [i, j] ∈ E, 
                           
                              
                                 d
                                 
                                    i
                                    j
                                 
                              
                              =
                              
                                 l
                                 
                                    i
                                    j
                                 
                              
                              ,
                           
                         (i, j) ∈ A.

Each test instance has been solved 20 times under each selected configuration. We have used the same computing times proposed in Liefooghe et al. (2010) which are displayed in Table 2. As a consequence, it is worth mentioning that our real computing times are shorter since they have to be calculated as the times in Table 2 multiplied by a factor 
                           
                              β
                              =
                              0.75
                           
                        . This factor has been computed as the ratio between the clocks of the machines on which the programs were run. This type of approximate comparison among the running times of different machines has also been made by other authors (Hoshino & de Souza, 2012; Martinelli, Poggi, & Subramanian, 2013; Santos, Coutinho-Rodrigues, & Current, 2010).

In order to compare the Pareto front approximations, for each instance and each configuration we have constructed the Pareto front as the set of all the nondominated points obtained in the 20 runs of the experiment. The reference set is formed by the union of the CBPF and the Pareto fronts obtained by applying the MEALS-NSGA-II, the MEALS-IBEA and the MEALS-SEEA. Tables 7
                         and 8
                         show the value of 
                           
                              I
                              H
                              −
                           
                         and 
                           
                              I
                              
                                 
                                    ϵ
                                    +
                                 
                              
                              1
                           
                         obtained for the CBFP and the Pareto front provided by each algorithm configuration. Concerning 
                           
                              
                                 I
                                 H
                                 −
                              
                              ,
                           
                         for all problems the three variants of MEALS provide much smaller values than the CBPF, thus confirming the good performance of the algorithm proposed. The same can be said regarding 
                           
                              
                                 I
                                 
                                    
                                       ϵ
                                       +
                                    
                                 
                                 1
                              
                              ,
                           
                         except for the smallest problem for which MEALS provides worse values of the indicator and for the problem with 264 nodes for which only MEALS-NSGA-II provides a value of the indicator smaller than that provided by the CBPF.

In this part of the study we have analyzed the performance of the algorithm in a set of instances for which the edge costs and the arc costs are not equal. We have maintained the same benchmark networks as well as the edge cost 
                           
                              
                                 c
                                 
                                    i
                                    j
                                 
                              
                              =
                              
                                 ⌊
                                 
                                    l
                                    
                                       i
                                       j
                                    
                                 
                                 +
                                 0.5
                                 ⌋
                              
                              ,
                           
                         [i, j] ∈ E, but the cost dij
                         has been randomly generated in the interval 
                           
                              [
                              
                                 min
                                 
                                    (
                                    i
                                    ,
                                    j
                                    )
                                    ∈
                                    A
                                 
                              
                              
                                 ⌊
                                 
                                    l
                                    
                                       i
                                       j
                                    
                                 
                                 +
                                 0.5
                                 ⌋
                              
                              ,
                              
                                 max
                                 
                                    (
                                    i
                                    ,
                                    j
                                    )
                                    ∈
                                    A
                                 
                              
                              
                                 ⌊
                                 
                                    l
                                    
                                       i
                                       j
                                    
                                 
                                 +
                                 0.5
                                 ⌋
                              
                              ]
                              ,
                           
                         (i, j) ∈ A. We have followed the structure of the study carried out in Section 4.1. In this case, the results also confirm that the performance of each configuration greatly depends on the network structure of the problem.


                        Figs. 7–10
                        
                        
                        
                         show the boxplots of the value of 
                           
                              I
                              H
                              −
                           
                         and 
                           
                              I
                              
                                 
                                    ϵ
                                    +
                                 
                              
                              1
                           
                         for selected problems which allow us to obtain an insight into the performance of the algorithm. In general, the worse results are obtained when no local search is applied and, regarding the variant, NSGA-II and IBEA seem to provide better results.

After applying the Friedman test, a p-value equal to zero has been obtained for every problem and every indicator, thus confirming that the configuration significantly influences the results. The test has been repeated on data after eliminating the configurations with 
                           
                              
                                 p
                                 l
                              
                              =
                              0
                           
                         and 
                           
                              
                                 p
                                 m
                              
                              =
                              0
                           
                        . Also in this case, the configuration is statistically significant. After examining data provided by the Friedman test on the estimated median for each instance and each configuration, we have again selected the configurations MEALS-NSGA-II, MEALS-IBEA and MEALS-SEEA. These configurations seem to provide good results for most problems. Tables 9
                         and 10
                         are similar to Tables 3 and 4 for the new instances. By applying the Wilcoxon signed rank test with a significance level of 5%, we obtain that, regarding 
                           
                              
                                 I
                                 H
                                 −
                              
                              ,
                           
                         MEALS-NSGA-II is the best for the problems kroA100, kroA150, kroA200, pr264, pr299 and pr439. MEALS-IBEA is the best configuration for the problem pr1002 and the worst for the problems eil51, st70, kroA200. MEALS-SEEA is the best for the problems eil51 and st70 and is the worst for the problems kroA100, kroA150, pr299 and pr1002. Regarding 
                           
                              
                                 I
                                 
                                    
                                       ϵ
                                       +
                                    
                                 
                                 1
                              
                              ,
                           
                         MEALS-NSGA-II is the best for the problem pr264. MEALS-IBEA is the best for the problems bier127, kroA200, pr439 and pr1002 and is the worst for the problem eil51. MEALS-SEEA is the best for the problem eil51 and is the worst configuration for the remaining problems except the problem st70.

@&#CONCLUSIONS@&#

This paper addresses the B-RSP and proposes to embed a local search procedure in a multiobjective evolutionary algorithm for approaching the Pareto front. The local search procedure takes into account both objective functions when selecting the successive solutions and guarantees that the solution provided at the end of the procedure is not dominated by the initial one. Other distinctive characteristics of the proposed algorithm are the chromosome encoding and the initial population construction. Both take into account the bi-objective nature of the problem by implicitly discarding dominated solutions and by diversifying the solutions dealt with in order to obtain a better approach to the Pareto front.

Bearing in mind the literature on the B-RSP, to evaluate the quality of the Pareto front approximations provided by the algorithm we have used two indicators, the unary hypervolume metric and the binary additive ϵ-indicator. Moreover, we have considered three variants of the algorithm which apply the rules of two well-known multiobjective methods, NSGA-II and IBEA, and the SEEA method proposed specifically for handling the B-RSP. The first part of the computational experiment compares the performance of several configurations of the algorithm in the set of benchmark problems proposed in the literature. The influence of the configuration has been found to be statistically significant and better results are obtained when the local search procedure and the mutation operator are applied. The result of the study is that the three variants of the algorithm are selected with mutation and local search over 20% of chromosomes. The second part of the study compares these configurations of the algorithm with the current best Pareto front approximation found in the literature. The results show that the Pareto front approximation provided by all variants of the proposed algorithm have a noteworthy impact on decreasing the hypervolume metric for all benchmark problems. This impact is smaller when considering the ϵ-indicator. The third part of the computational experiment compares the performance of several configurations of the algorithm in a set of instances for which the edge and arc costs are not equal. The results show that the configuration is statistically significant. Moreover, applying the local search procedure generally improves the algorithm performance.

Future works will involve using an automatic algorithm configuration package as IRACE (López-Ibáñez, Dubois-Lacoste, Stützle, & Birattari, 2011) to possibly identify a better configuration of the algorithm developed. Moreover, the proposed metaheuristics will be applied to other combinatorial problems.

@&#ACKNOWLEDGMENT@&#

The authors gratefully acknowledge the anonymous referees for their valuable suggestions to improve the presentation of the paper.

@&#REFERENCES@&#

