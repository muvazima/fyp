@&#MAIN-TITLE@&#An effective algorithm for constrained optimization based on optics inspired optimization (OIO)

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           Introducing a new algorithm for constrained optimization inspired from Optics.


                        
                        
                           
                           The mechanism of algorithm is simple which allows its implementation easily.


                        
                        
                           
                           Investigating the application of the algorithm on mechanical engineering design.


                        
                        
                           
                           The algorithm is capable to find the global optimum of many investigated problems.


                        
                        
                           
                           The algorithm behaves constantly and performs more reliable than other algorithms.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Optics

Optics inspired optimization

Constrained optimization

Engineering design optimization

@&#ABSTRACT@&#


               
               
                  Due to the law of reflection, the converging and diverging behavior of concave and convex mirrors causes that curved mirrors show different image types. The optics inspired optimization (OIO) is a recently proposed algorithm for unconstrained optimization which treats the surface of the function to be optimized as a wavy mirror in which each peak is assumed to reflect as a convex mirror and each valley to reflect as a concave one. Each individual is treated as an artificial light point that its glittered ray is reflected back by the function surface, given that the surface is convex or concave, and the artificial image (a new solution) is formed based on mirror equations adopted from Optics. There are several constraint handling techniques which have been proposed for handling infeasible solutions. However, these techniques may suffer from problem dependency, no unique way for designing their operators, no unique way for updating their internal parameters, increasing the computational complexity, etc. To equip OIO with a mechanism to handle constraints and to avoid the drawbacks of typical techniques, a feasibility measure is used beside the objective function value to bias the search toward feasible regions. Such a consideration requires to modify several modules in the basic OIO algorithm. To increase the probability to generate better solutions, a number of alternative solutions are produced from each individual and one is selected based on the sequential use of modified Deb’s tournament selection. Besides, Deb’s tournament selection rule is used in place of the greedy selection in basic OIO, along with allowing the survival of individuals with a good value of the objective function, regardless of their feasibility. Performance of the proposed algorithm is compared with a number of noticeable algorithms such as COPSO, ECHT-EP2, 
                        α
                     Simplex etc, on CEC 2006 and CEC 2010 set of benchmark problems and on a set of mechanical design optimization problems. Results demonstrate that the proposed algorithm performs the global optimization task very well and competitive. Such an outcome encourages that further developments and applications of OIO would be worth to realize its full potency in the future studies.
               
            

@&#INTRODUCTION@&#

Constrained optimization problems, especially nonlinear optimization problems, are of scientists’ great interests in recent decades. Structural optimization and engineering design are just a few fields in which constrained optimization problems are met. A general constrained optimization problem can be defined as follows: 
                        
                           (1)
                           
                              
                                 
                                    
                                       minimize
                                    
                                    
                                       f
                                       
                                          (
                                          
                                             
                                                X
                                             
                                             →
                                          
                                          )
                                       
                                    
                                    
                                 
                                 
                                    
                                    
                                       
                                          
                                             g
                                          
                                          
                                             j
                                          
                                       
                                       
                                          (
                                          
                                             
                                                X
                                             
                                             →
                                          
                                          )
                                       
                                       ≤
                                       0
                                       ,
                                    
                                    
                                       j
                                       =
                                       1
                                       ,
                                       …
                                       ,
                                       q
                                    
                                 
                                 
                                    
                                    
                                       
                                          
                                             h
                                          
                                          
                                             j
                                          
                                       
                                       
                                          (
                                          
                                             
                                                X
                                             
                                             →
                                          
                                          )
                                       
                                       =
                                       0
                                       ,
                                    
                                    
                                       j
                                       =
                                       q
                                       +
                                       1
                                       ,
                                       …
                                       ,
                                       m
                                    
                                 
                                 
                                    
                                    
                                       
                                          
                                             L
                                          
                                          →
                                       
                                       ≤
                                       
                                          
                                             X
                                          
                                          →
                                       
                                       ≤
                                       
                                          
                                             U
                                          
                                          →
                                       
                                    
                                    
                                 
                              
                           
                        
                      where 
                        
                           
                              X
                           
                           →
                        
                        =
                        
                           [
                           
                              
                                 
                                    
                                       
                                          x
                                       
                                       
                                          1
                                       
                                    
                                 
                                 
                                    
                                       
                                          x
                                       
                                       
                                          2
                                       
                                    
                                 
                                 
                                    …
                                 
                                 
                                    
                                       
                                          x
                                       
                                       
                                          n
                                       
                                    
                                 
                              
                           
                           ]
                        
                        ∈
                        
                           
                              R
                           
                           
                              n
                           
                        
                      is an 
                        n
                     -dimensional decision vector, 
                        
                           
                              L
                           
                           →
                        
                        =
                        
                           [
                           
                              
                                 
                                    
                                       
                                          l
                                       
                                       
                                          1
                                       
                                    
                                 
                                 
                                    
                                       
                                          l
                                       
                                       
                                          2
                                       
                                    
                                 
                                 
                                    …
                                 
                                 
                                    
                                       
                                          l
                                       
                                       
                                          n
                                       
                                    
                                 
                              
                           
                           ]
                        
                       and 
                        
                           
                              U
                           
                           →
                        
                        =
                        
                           [
                           
                              
                                 
                                    
                                       
                                          u
                                       
                                       
                                          1
                                       
                                    
                                 
                                 
                                    
                                       
                                          u
                                       
                                       
                                          2
                                       
                                    
                                    …
                                 
                                 
                                    
                                       
                                          u
                                       
                                       
                                          n
                                       
                                    
                                 
                              
                           
                           ]
                        
                       are the lower and upper bound vectors with condition 
                        
                           
                              l
                           
                           
                              d
                           
                        
                        ≤
                        
                           
                              x
                           
                           
                              d
                           
                        
                        ≤
                        
                           
                              u
                           
                           
                              d
                           
                        
                        ,
                        d
                        =
                        1
                        ,
                        …
                        ,
                        n
                     . 
                        f
                        
                           (
                           
                              
                                 X
                              
                              →
                           
                           )
                        
                      is a numerical function to be minimized, 
                        
                           
                              g
                           
                           
                              j
                           
                        
                        
                           (
                           
                              
                                 X
                              
                              →
                           
                           )
                        
                        ≤
                        0
                        ,
                        
                        j
                        =
                        1
                        ,
                        …
                        ,
                        q
                     , are 
                        q
                      inequality constraints and 
                        
                           
                              h
                           
                           
                              j
                           
                        
                        
                           (
                           
                              
                                 X
                              
                              →
                           
                           )
                        
                        =
                        0
                        ,
                        j
                        =
                        q
                        +
                        1
                        ,
                        …
                        ,
                        m
                     , are 
                        m
                        −
                        q
                      equality constraints.

The main challenge in constrained optimization is how to balance the search between feasible and infeasible regions effectively, i.e., to design an efficient constraint handling technique to locate the global optimum in the feasible region  [1]. Several trends for handling infeasible solutions have been emerged in the area of evolutionary computation. Among numerous methods that have been proposed for handling constraints, the most popular methods are the penalty function method, special representations and operators, repair methods, methods based on the separation of objectives and constraints, etc.  [2,3]. There are many algorithms that have used one of the mentioned constraint handling mechanisms (e.g., SAFF  [4], COPSO  [5], ISR  [6], ATMES  [7], SMES  [8], ECHT-EP2  [9], HCOEA  [10], 
                        α
                     Simplex  [11], ECHT-DE  [12], ANT-
                        β
                     
                     [13], ICA-4  [14], MPSO  [15], MBFOA  [16], DSS-MDE  [1], Sic-PSO  [17], RSPSO  [18], PSRE  [19], CPSO-DD  [20], IHS  [21], COPSO  [5], CPSO  [22], CDE  [23], DES  [24], FSA  [25], 
                        ε
                     PSO  [26], 
                        V
                        
                           (
                           μ
                           +
                           1
                           )
                        
                     -ES  [27], (
                        μ
                        +
                        λ
                     )-ES  [28], IPSO  [29], S&C  [30], SES  [31], Co-evolutionary penalty  [32]). Recently, Mezura and Coello  [33] have done an analysis of the most relevant types of constraint-handling techniques that have been adopted with nature-inspired algorithms.

To tackle a certain difficult problem for which a common representation scheme might not be appropriate, a typical way would be to develop special representations and consequently design special operators to enforce feasibility of solutions at all time. However, this approach is problem dependent and remains applicable for problems in which locating the feasible solutions is extremely difficult  [3]. Repair methods are also applicable when it is relatively easy to repair an infeasible solution to obtain a feasible one (for example, many combinatorial optimization problems admit such repairs). The difficulty with this method is that there is no unique way for designing the intended repair operator  [3].

The most common approach for handling constraints is the method of penalty function. The idea is to transform a constrained optimization problem into an unconstraint one by adding a certain value to the objective function value based on the amount of constraint violation presented in a solution  [3]. The constraint violation for the 
                        j
                     th constraint in (1) is defined as follows: 
                        
                           (2)
                           
                              c
                              
                                 
                                    v
                                 
                                 
                                    j
                                 
                              
                              
                                 (
                                 
                                    
                                       X
                                    
                                    →
                                 
                                 )
                              
                              =
                              
                                 {
                                 
                                    
                                       
                                          max
                                          
                                             {
                                             0
                                             ,
                                             
                                                
                                                   g
                                                
                                                
                                                   j
                                                
                                             
                                             
                                                (
                                                
                                                   
                                                      X
                                                   
                                                   →
                                                
                                                )
                                             
                                             }
                                          
                                          ,
                                       
                                       
                                          j
                                          =
                                          1
                                          ,
                                          …
                                          ,
                                          q
                                       
                                    
                                    
                                       
                                          max
                                          
                                             {
                                             0
                                             ,
                                             
                                                |
                                                
                                                   
                                                      h
                                                   
                                                   
                                                      j
                                                   
                                                
                                                
                                                   (
                                                   
                                                      
                                                         X
                                                      
                                                      →
                                                   
                                                   )
                                                
                                                −
                                                ε
                                                |
                                             
                                             }
                                          
                                          ,
                                       
                                       
                                          j
                                          =
                                          q
                                          +
                                          1
                                          ,
                                          …
                                          ,
                                          m
                                       
                                    
                                 
                              
                           
                        
                      where, 
                        ε
                      is a small positive tolerance value to convert an equality constraint into an inequality constraint. The formulation of the penalty function is as follows: 
                        
                           (3)
                           
                              φ
                              
                                 (
                                 
                                    
                                       X
                                    
                                    →
                                 
                                 )
                              
                              =
                              f
                              
                                 (
                                 
                                    
                                       X
                                    
                                    →
                                 
                                 )
                              
                              +
                              
                                 
                                    ∑
                                 
                                 
                                    j
                                    =
                                    1
                                 
                                 
                                    m
                                 
                              
                              
                                 
                                    r
                                 
                                 
                                    j
                                 
                              
                              ×
                              c
                              
                                 
                                    v
                                 
                                 
                                    j
                                 
                              
                              
                                 (
                                 
                                    
                                       X
                                    
                                    →
                                 
                                 )
                              
                           
                        
                      where 
                        φ
                        
                           (
                           
                              
                                 X
                              
                              →
                           
                           )
                        
                      is the penalized objective function and 
                        
                           
                              r
                           
                           
                              j
                           
                        
                      is a positive coefficient called “penalty factor”. As the infeasible solutions are penalized by the function in (3), the search ability in feasible regions will be enhanced. The most critical challenge with this method is how to set appropriate penalty weights 
                        
                           
                              r
                           
                           
                              j
                           
                        
                        [3]. It is often required to reset the penalty factors for different kinds of optimization problems and this sounds a main drawback for such methods.

The method of multi objective optimization is one of the widely used methods working based on the separation of objectives and constraints. In such methods, the objective function 
                        f
                        
                           (
                           
                              
                                 X
                              
                              →
                           
                           )
                        
                      and the constraint violation measures 
                        c
                        
                           
                              v
                           
                           
                              j
                           
                        
                        
                           (
                           
                              
                                 X
                              
                              →
                           
                           )
                        
                      constitute a (
                        m
                        +
                        1
                     )-dimensional vector. Using some multi-objective optimization methods, the attempt is to minimize the components of the composite vector. Therefore, an ideal solution 
                        
                           
                              
                                 
                                    X
                                 
                                 →
                              
                           
                           
                              ∗
                           
                        
                      would have 
                        c
                        
                           
                              v
                           
                           
                              j
                           
                        
                        
                           (
                           
                              
                                 
                                    
                                       X
                                    
                                    →
                                 
                              
                              
                                 ∗
                              
                           
                           )
                        
                        =
                        0
                        ,
                        
                        j
                        =
                        1
                        ,
                        …
                        ,
                        m
                     , and 
                        f
                        
                           (
                           
                              
                                 
                                    
                                       X
                                    
                                    →
                                 
                              
                              
                                 ∗
                              
                           
                           )
                        
                        ≤
                        f
                        
                           (
                           
                              
                                 Y
                              
                              →
                           
                           )
                        
                      for all 
                        Y
                        ∈
                        F
                        [2]. One of the main drawbacks of such methods is that while the computational complexity increases, the problem difficulty is not decreased.

There have been proposed several approaches that make the use of penalty functions unnecessary. Deb  [34] introduced a tournament selection operator for evolutionary algorithms, where two solutions are compared at a time and the following selection criteria are always enforced: 
                        
                           •
                           Between 2 feasible solutions, the one with better fitness value wins.

If one solution is feasible and the other one is infeasible, the feasible solution wins.

If both solutions are infeasible, the one with the lowest sum of constraint violations is preferred.

In Deb’s approach, feasible solutions are always preferred to infeasible ones. Therefore, this approach will have difficulties in problems in which the global optimum lies on the boundary between the feasible and infeasible regions  [35]. To cover the lack of a diversity preserving mechanism in Deb’s approach, Mezura et al.  [36] used the Deb’s approach while allowing the survival of those individuals with a good value of the objective function, regardless of their feasibility. Through introducing a user-defined parameter called 
                        
                           
                              S
                           
                           
                              r
                           
                        
                     , with probability 
                        
                           
                              S
                           
                           
                              r
                           
                        
                      the selection between two solutions is only based on the objective function value and with probability 
                        1
                        −
                        
                           
                              S
                           
                           
                              r
                           
                        
                      the selection is by using Deb’s selection criteria. Runarsson and Yao  [37] proposed a new constraint handling technique called stochastic ranking (SR). In SR, the balance between the objective and penalty functions is achieved through a ranking procedure based on the stochastic bubble-sort algorithm. Like method of Mezura et al.  [36], SR uses a comparison probability (
                        
                           
                              P
                           
                           
                              f
                           
                        
                     ) for comparing the feasible and infeasible solutions which enables the user to specify an agreeable bias toward the objective function in ranking individuals in evolutionary algorithms. Takahama and Sakai proposed the 
                        α
                      constrained method  [38] and 
                        ε
                      constrained method  [39], which adopt a lexicographic ordering with relaxation of the constraints. The authors called these methods algorithm transformation methods, because these methods convert an algorithm for unconstrained optimization into an algorithm for constrained optimization by replacing the ordinal comparisons with the 
                        α
                      level and the 
                        ε
                      level comparisons.

There are several deterministic algorithms which are efficient to solve numerical constrained optimization problems, e.g., the recursive quadratic programming, projection method and the generalized reduced gradient method  [40]. However, efficiency of these methods is under assumptions of differentiability and continuity of the objective function, which may be rarely met in real world applications. Beside deterministic algorithms, metaheuristics, e.g., evolution strategies, particle swarm optimization, ant colony optimization, differential evolution, etc., which are stochastic optimization techniques do not require any assumption on the objective function. However, such methods lack a mechanism to bias the search efficiently toward the feasible region in constrained search spaces. To cover this deficiency, considerable amount of researches have been devoted and a wide variety of approaches have been suggested in the last few years to handle constraints efficiently during the search  [3,9,36,37,39].

There are several nature inspired algorithms which adopt their source of inspiration from Physics, e.g., Ray optimization  [41], Spiral Dynamics inspired optimization  [42], Central force optimization  [43], etc. It has been observed that concave surfaces/mirrors reflect the light rays toward the principal axis (a line passing through the center of the mirror and perpendicular to the mirror). Such a mirror causes light rays to converge (see Fig. 1
                     (a)). On the other side, by a convex surface/mirror, light rays coming in parallel to the principal axis are reflected away from the principal axis so that they appear to be diverging (see Fig. 1(b)). Such an optical observations have been metaphorically modeled into the searching process of numerical unconstrained optimization by the so called optics inspired optimization (OIO) algorithm. OIO which have been introduced by Husseinzadeh Kashan  [45], treats the surface of the numerical function to be optimized as a reflecting surface wherein each peak is assumed to reflect as a convex mirror and each valley to reflect as a concave one. Each point in the joint search/solution and objective space (a subset in 
                        
                           
                              R
                           
                           
                              n
                              +
                              1
                           
                        
                     ) which is mapped as a solution within the search space (a subset in 
                        
                           
                              R
                           
                           
                              n
                           
                        
                     ) is assumed to be an artificial light point. In this way, the artificial ray glittered from an artificial light point is reflected back artificially by the function surface, given that the reflecting surface is a part of a peak or a part of a valley, and the artificial image point (a new point in the joint search and objective space which is mapped as a new solution in the search/solution space) is formed upright (toward the light point position in the search space) or inverted (away from the light point position in the search space). Such a model gives the ability to carry out both exploration and exploitation tasks during the search for optimum. In optics, spherical mirrors (concave or convex mirrors) suffer from spherical aberration phenomenon which results in an imperfection of the produced image. Such a phenomenon can also be observed artificially in OIO which may result in a less converging behavior of the algorithm.

OIO has been originally proposed for unconstrained continuous optimization. To enforce OIO to search for the feasible global optimum of a constrained optimization problem, we need to equip it with a constraint handling technique and a number of auxiliary mechanisms. In this paper, the proposed OIO based algorithm for constrained optimization 
                        
                           •
                           uses the notion of Deb’s constraint-handling method with a diversity mechanism in a probabilistic manner during “generation of a new solution” step of OIO,

is adapted in such a way that a feasibility based criterion is used beside the objective function criterion to decide indirectly upon getting acceleration toward better solutions or outward worse solutions. To include the feasibility based criterion into the searching process of OIO, it is required to completely modify two main steps of basic OIO, e.g., “mirror type determination” and “correction of spherical aberration”,

generates a number of alternative solutions from each individual, among them, one is selected based on the sequential use of Deb’s tournament selection with a modification on one of selection rules. This increases the probability to generate better solutions,

uses a truncated geometric distribution to set the number of changes in a given solution dynamically (to obtain a new solution) with more emphasis given to the smaller/larger rate of changes.

In this section, we briefly review the Optics related materials which will be used metaphorically in OIO. For more details please see Husseinzadeh Kashan  [45]. Optics is a branch of physics which involves the behavior and properties of light, including its interactions with matter and the construction of instruments that use or detect it. A curved or spherical mirror is a mirror with a curved reflective surface, which may be either convex (bulging outward) or concave (bulging inward). The behavior of light reflected by a curved mirror is subject to the two laws of reflection. 
                        
                           1.
                           The incident ray, the reflected ray, and the normal all lie on the same plane.

The angle between the incident ray and the normal is equal to the angle between the reflected ray and the normal.

A concave mirror has a reflecting surface that bulges inward (away from the incident light). Concave mirrors reflect light inward to focal point. Concave mirrors show different image types depending on the distance between the object and the mirror. The image on a concave mirror is virtual, upright and larger than the object if it is placed between focal point and mirror. If the object is placed beyond the focal point, its image is always real and inverted. But the image size depends on the position of the object (see Fig. 2
                     (a)).

A convex mirror is a curved mirror in which the reflective surface bulges toward the light source. Convex mirrors reflect light outwards and always form a virtual, upright and smaller image than the object. The ray diagram in Fig. 2(b) represents how an image is formed by a spherical convex mirror.

The spherical mirror model can be used to develop a simple equation for spherical mirrors. Let 
                        f
                      be the focal length, 
                        r
                      be the radius of curvature 
                        
                           (
                           r
                           =
                           2
                           f
                           )
                        
                        ,
                        
                        p
                      be the object position, and 
                        q
                      be the image position (see Fig. 3
                     ). The mirror equation is approximately given by [46]: 
                        
                           (4)
                           
                              
                                 
                                    2
                                 
                                 
                                    r
                                 
                              
                              =
                              
                                 
                                    1
                                 
                                 
                                    p
                                 
                              
                              +
                              
                                 
                                    1
                                 
                                 
                                    q
                                 
                              
                              ⇒
                              q
                              =
                              
                                 
                                    r
                                    p
                                 
                                 
                                    2
                                    p
                                    −
                                    r
                                 
                              
                              .
                           
                        
                     
                  

All distances are measured from the vertex; the point where the axis meets the mirror. Both of 
                        r
                      (or 
                        f
                     ) and 
                        q
                      are negative for a convex mirror and only 
                        q
                      is negative for a concave mirror just when the object lies between the vertex and the focal point.


                     Magnification (
                        m
                     ) is another property of a spherical mirror and is the ratio of the image height to the object height  [46]. 
                        
                           (5)
                           
                              m
                              =
                              −
                              
                                 
                                    q
                                 
                                 
                                    p
                                 
                              
                              =
                              
                                 
                                    H
                                    I
                                 
                                 
                                    H
                                    O
                                 
                              
                              ⇒
                              H
                              I
                              =
                              −
                              H
                              O
                              
                                 
                                    q
                                 
                                 
                                    p
                                 
                              
                              .
                           
                        
                     
                  

A negative magnification means that the image is inverted relative to the object.

It should be noted that Eq. (4) is approximately correct for a spherical mirror. To form an image, this equation uses only rays that are close to and almost parallel with the principal axis. In reality rays that are far from principal axis do not converge to a single point. The fact that a spherical mirror does not bring all parallel rays to a single point is known as spherical aberration (see Fig. 4
                     ).

The extent of the ray divergence 
                        
                           (
                           κ
                           )
                        
                      from the focus is called the lateral aberration and is given by  [47]: 
                        
                           (6)
                           
                              κ
                              =
                              
                                 
                                    
                                       
                                          r
                                       
                                       
                                          2
                                       
                                    
                                 
                                 
                                    2
                                    
                                       
                                          
                                             
                                                r
                                             
                                             
                                                2
                                             
                                          
                                          −
                                          H
                                          
                                             
                                                O
                                             
                                             
                                                2
                                             
                                          
                                       
                                    
                                 
                              
                              −
                              
                                 
                                    r
                                 
                                 
                                    2
                                 
                              
                              .
                           
                        
                     
                  

Spherical aberration can be minimized by using a mirror whose height is small compared to the radius of curvature. Eq. (6) predicts that when HO is kept constant and the radius of curvature gets larger, the lateral aberration 
                        κ
                      decreases. OIO uses such a mechanism for correcting artificial spherical aberration.

The optics inspired optimization (OIO) algorithm is a population based evolutionary algorithm, which has been recently proposed by Husseinzadeh Kashan  [45]. OIO is suitable for unconstrained optimization with continuous variables. The idea behind OIO for search is to preserve both exploration and exploitation via imitating the image formation process by spherical mirrors. In OIO it is assumed that a number of artificial light points (points in 
                        
                           
                              R
                           
                           
                              n
                              +
                              1
                           
                        
                      whose mapping in 
                        
                           
                              R
                           
                           
                              n
                           
                        
                      are potential solutions to the problem) are sitting in front of an artificial wavy mirror reflecting their images. OIO treats the surface of the function to be optimized as the reflecting mirror composed of peaks and valleys. Each peak is treated as a convex reflective surface and each valley is treated as a concave reflective surface. In this way, the artificial ray glittered from the artificial light point is reflected back artificially by the function surface, given that the reflecting surface is a part of a peak or a part of a valley, and the artificial image point (a new point in 
                        
                           
                              R
                           
                           
                              n
                              +
                              1
                           
                        
                      which is mapped in 
                        
                           
                              R
                           
                           
                              n
                           
                        
                      as a new solution in the search domain) is formed upright (toward the light point position in the search space) or inverted (outward the light point position in the search space).


                     Fig. 5
                      demonstrates the idea behind OIO to generate new solutions in the one dimensional search space. In this figure it is assumed that an artificial light point (object) in the joint search and objective space is in front of the function surface (mirror) in a particular distance from vertex (values on the 
                        X
                     -axis form the search/solution space and values on the 
                        f
                        
                           (
                           X
                           )
                        
                     -axis form the objective space. The set of all points in the 
                        X
                        −
                        f
                        
                           (
                           X
                           )
                        
                     -coordinate system forms the joint search and objective space). The artificial image is formed in the joint search and objective space, with its position and height determined through the equations of mirror (Eq. (4)) and magnification (Eq. (5)). Mapping the artificial image position into the search space results the position of the new candidate solution in the search space which may enter to the population after a greedy selection phase. Depending on the type of the reflecting part of the function surface (convex or concave) and depending on the position of the artificial light point (object) in the joint search and objective space, there are four different situations under which new solutions are generated (see Fig. 5). The idea behind OIO is thus simple. Given an individual solution 
                        O
                      in the population, a different solution 
                        F
                      (vertex point) is picked randomly from the population. If 
                        F
                      is worse than 
                        O
                     , in terms of function/objective value, then it is assumed that the surface is convex and the new solution is generated upright somewhere toward 
                        O
                     , on the line connecting 
                        O
                      and 
                        F
                      (see Fig. 5(a)). If 
                        F
                      is better than 
                        O
                      then it is assumed that the surface is concave and the new solution is generated upright toward (see Fig. 5(b)) or inverted outward (see Fig. 5(c) and (d)) 
                        O
                     , on the line connecting 
                        O
                      and 
                        F
                      in the search space. The above logic to generate new solutions is able to serve exploration and exploitation during the search for an optimum. Exploration may be controlled relatively via allowing a larger jump in the solution space (see Fig. 5(b) and (c)) while exploitation may be carried out by allowing a relatively smaller jump over the base solutions (see Fig. 5(a) and (d)).

Let 
                        f
                        
                           (
                           
                              
                                 X
                              
                              →
                           
                           )
                        
                        ,
                        
                        
                           
                              X
                           
                           →
                        
                        =
                        
                           
                              
                                 [
                                 
                                    
                                       
                                          
                                             
                                                x
                                             
                                             
                                                1
                                             
                                          
                                       
                                       
                                          
                                             
                                                x
                                             
                                             
                                                2
                                             
                                          
                                          …
                                       
                                       
                                          
                                             
                                                x
                                             
                                             
                                                n
                                             
                                          
                                       
                                    
                                 
                                 ]
                              
                           
                           
                              1
                              ×
                              n
                           
                        
                        ∈
                        
                           
                              R
                           
                           
                              n
                           
                        
                     , be an 
                        n
                      variable scalar function that should be minimized over the 
                        n
                      dimensional decision space 
                        
                           
                              X
                           
                           →
                        
                        ∈
                        S
                        ⊆
                        
                           
                              R
                           
                           
                              n
                           
                        
                     , defined by 
                        
                           
                              l
                           
                           
                              d
                           
                        
                        ≤
                        
                           
                              x
                           
                           
                              d
                           
                        
                        ≤
                        
                           
                              u
                           
                           
                              d
                           
                        
                        ,
                        
                        d
                        =
                        1
                        ,
                        …
                        ,
                        n
                     . The joint search and objective space is introduced by the set of all vectors 
                        
                           
                              
                                 [
                                 
                                    
                                       
                                          
                                             
                                                x
                                             
                                             
                                                1
                                             
                                          
                                       
                                       
                                          
                                             
                                                x
                                             
                                             
                                                2
                                             
                                          
                                       
                                       
                                          …
                                       
                                       
                                          
                                             
                                                x
                                             
                                             
                                                n
                                             
                                          
                                       
                                       
                                          f
                                          
                                             (
                                             
                                                
                                                   X
                                                
                                                →
                                             
                                             )
                                          
                                       
                                    
                                 
                                 ]
                              
                           
                           
                              1
                              ×
                              
                                 (
                                 n
                                 +
                                 1
                                 )
                              
                           
                        
                        ∈
                        
                           
                              R
                           
                           
                              n
                              +
                              1
                           
                        
                     . The following notations are used to develop OIO’s process. To have a visualized perception of these notations, the interest reader may refer to Figs. 6 and 7
                     
                      in  [45]. 
                        
                           –
                           
                              
                                 
                                    
                                       
                                          
                                             O
                                          
                                          →
                                       
                                    
                                    
                                       j
                                    
                                    
                                       t
                                    
                                 
                                 =
                                 
                                    
                                       
                                          [
                                          
                                             
                                                
                                                   
                                                      
                                                         o
                                                      
                                                      
                                                         j
                                                         1
                                                      
                                                      
                                                         t
                                                      
                                                   
                                                
                                                
                                                   
                                                      
                                                         o
                                                      
                                                      
                                                         j
                                                         2
                                                      
                                                      
                                                         t
                                                      
                                                   
                                                
                                                
                                                   …
                                                
                                                
                                                   
                                                      
                                                         o
                                                      
                                                      
                                                         j
                                                         n
                                                      
                                                      
                                                         t
                                                      
                                                   
                                                
                                             
                                          
                                          ]
                                       
                                    
                                    
                                       1
                                       ×
                                       n
                                    
                                 
                               is the position of artificial light point 
                                 j
                               in the 
                                 n
                               dimensional search space in iteration 
                                 t
                               (i.e., the 
                                 j
                              th solution in the population),


                              
                                 
                                    
                                       
                                          
                                             F
                                          
                                          →
                                       
                                    
                                    
                                       
                                          
                                             i
                                          
                                          
                                             k
                                          
                                       
                                    
                                    
                                       t
                                    
                                 
                                 =
                                 
                                    
                                       
                                          [
                                          
                                             
                                                
                                                   
                                                      
                                                         f
                                                      
                                                      
                                                         
                                                            
                                                               i
                                                            
                                                            
                                                               k
                                                            
                                                         
                                                         1
                                                      
                                                      
                                                         t
                                                      
                                                   
                                                
                                                
                                                   
                                                      
                                                         f
                                                      
                                                      
                                                         
                                                            
                                                               i
                                                            
                                                            
                                                               k
                                                            
                                                         
                                                         2
                                                      
                                                      
                                                         t
                                                      
                                                   
                                                
                                                
                                                   …
                                                
                                                
                                                   
                                                      
                                                         f
                                                      
                                                      
                                                         
                                                            
                                                               i
                                                            
                                                            
                                                               k
                                                            
                                                         
                                                         n
                                                      
                                                      
                                                         t
                                                      
                                                   
                                                
                                             
                                          
                                          ]
                                       
                                    
                                    
                                       1
                                       ×
                                       n
                                    
                                 
                               is an individual in the population, different from 
                                 
                                    
                                       
                                          
                                             O
                                          
                                          →
                                       
                                    
                                    
                                       j
                                    
                                    
                                       t
                                    
                                 
                              , which passes the artificial principal axis through itself. Index 
                                 
                                    
                                       i
                                    
                                    
                                       k
                                    
                                 
                               is drawn randomly from 
                                 
                                    {
                                    1
                                    ,
                                    …
                                    ,
                                    
                                       NO
                                    
                                    }
                                 
                              . NO is the number of artificial light points (i.e., the population size).


                              
                                 
                                    
                                       
                                          
                                             I
                                          
                                          →
                                       
                                    
                                    
                                       j
                                       ,
                                       
                                          
                                             i
                                          
                                          
                                             k
                                          
                                       
                                    
                                    
                                       t
                                    
                                 
                                 =
                                 
                                    
                                       
                                          [
                                          
                                             
                                                
                                                   
                                                      
                                                         i
                                                      
                                                      
                                                         j
                                                         ,
                                                         
                                                            
                                                               i
                                                            
                                                            
                                                               k
                                                            
                                                         
                                                         ,
                                                         1
                                                      
                                                      
                                                         t
                                                      
                                                   
                                                
                                                
                                                   
                                                      
                                                         i
                                                      
                                                      
                                                         j
                                                         ,
                                                         
                                                            
                                                               i
                                                            
                                                            
                                                               k
                                                            
                                                         
                                                         ,
                                                         2
                                                      
                                                      
                                                         t
                                                      
                                                   
                                                
                                                
                                                   …
                                                
                                                
                                                   
                                                      
                                                         i
                                                      
                                                      
                                                         j
                                                         ,
                                                         
                                                            
                                                               i
                                                            
                                                            
                                                               k
                                                            
                                                         
                                                         ,
                                                         n
                                                      
                                                      
                                                         t
                                                      
                                                   
                                                
                                             
                                          
                                          ]
                                       
                                    
                                    
                                       1
                                       ×
                                       n
                                    
                                 
                               is the image position of the artificial light point 
                                 j
                               in the search space in iteration 
                                 t
                              . The artificial image is formed by the artificial mirror whose principal axis passes through 
                                 
                                    
                                       
                                          
                                             F
                                          
                                          →
                                       
                                    
                                    
                                       
                                          
                                             i
                                          
                                          
                                             k
                                          
                                       
                                    
                                    
                                       t
                                    
                                 
                              .


                              
                                 
                                    
                                       s
                                    
                                    
                                       j
                                       ,
                                       
                                          
                                             i
                                          
                                          
                                             k
                                          
                                       
                                    
                                    
                                       t
                                    
                                 
                               is the position of the artificial light point 
                                 j
                               (whose image is formed by the artificial mirror) on the function/objective axis (objective space) in iteration 
                                 t
                              . The position of artificial light point 
                                 j
                               in the joint search and objective space is thus given by the vector 
                                 
                                    
                                       
                                          [
                                          
                                             
                                                
                                                   
                                                      
                                                         o
                                                      
                                                      
                                                         j
                                                         1
                                                      
                                                      
                                                         t
                                                      
                                                   
                                                
                                                
                                                   
                                                      
                                                         o
                                                      
                                                      
                                                         j
                                                         2
                                                      
                                                      
                                                         t
                                                      
                                                   
                                                
                                                
                                                   …
                                                
                                                
                                                   
                                                      
                                                         o
                                                      
                                                      
                                                         j
                                                         n
                                                      
                                                      
                                                         t
                                                      
                                                   
                                                
                                                
                                                   
                                                      
                                                         s
                                                      
                                                      
                                                         j
                                                         ,
                                                         
                                                            
                                                               i
                                                            
                                                            
                                                               k
                                                            
                                                         
                                                      
                                                      
                                                         t
                                                      
                                                   
                                                
                                             
                                          
                                          ]
                                       
                                    
                                    
                                       1
                                       ×
                                       
                                          (
                                          n
                                          +
                                          1
                                          )
                                       
                                    
                                 
                              ,


                              
                                 
                                    
                                       p
                                    
                                    
                                       j
                                       ,
                                       
                                          
                                             i
                                          
                                          
                                             k
                                          
                                       
                                    
                                    
                                       t
                                    
                                 
                               is the distance between the position of artificial light point 
                                 j
                               on the function/objective axis and the position of artificial mirror vertex on the function/objective axis (i.e., 
                                 f
                                 
                                    (
                                    
                                       
                                          
                                             
                                                F
                                             
                                             →
                                          
                                       
                                       
                                          
                                             
                                                i
                                             
                                             
                                                k
                                             
                                          
                                       
                                       
                                          t
                                       
                                    
                                    )
                                 
                              ) in iteration 
                                 t
                              ,


                              
                                 
                                    
                                       q
                                    
                                    
                                       j
                                       ,
                                       
                                          
                                             i
                                          
                                          
                                             k
                                          
                                       
                                    
                                    
                                       t
                                    
                                 
                               is the distance between the image position of the artificial light point 
                                 j
                               on the function/objective axis and the position of artificial mirror vertex on the function/objective axis (i.e., 
                                 f
                                 
                                    (
                                    
                                       
                                          
                                             
                                                F
                                             
                                             →
                                          
                                       
                                       
                                          
                                             
                                                i
                                             
                                             
                                                k
                                             
                                          
                                       
                                       
                                          t
                                       
                                    
                                    )
                                 
                              ) in iteration 
                                 t
                              ,


                              
                                 
                                    
                                       r
                                    
                                    
                                       
                                          
                                             i
                                          
                                          
                                             k
                                          
                                       
                                    
                                    
                                       t
                                    
                                 
                               is the radius of curvature of the artificial mirror whose center of curvature is on the principal axis which passes through 
                                 
                                    
                                       
                                          
                                             F
                                          
                                          →
                                       
                                    
                                    
                                       
                                          
                                             i
                                          
                                          
                                             k
                                          
                                       
                                    
                                    
                                       t
                                    
                                 
                              ,


                              
                                 
                                    
                                       m
                                    
                                    
                                       
                                          
                                             i
                                          
                                          
                                             k
                                          
                                       
                                    
                                    
                                       t
                                    
                                 
                               is the position of the center of curvature on the function/objective axis (objective space),


                              
                                 H
                                 
                                    
                                       O
                                    
                                    
                                       j
                                       ,
                                       
                                          
                                             i
                                          
                                          
                                             k
                                          
                                       
                                    
                                    
                                       t
                                    
                                 
                               is the height of the artificial light point 
                                 j
                               from artificial principal axis in iteration 
                                 t
                              ,


                              
                                 H
                                 
                                    
                                       I
                                    
                                    
                                       j
                                       ,
                                       
                                          
                                             i
                                          
                                          
                                             k
                                          
                                       
                                    
                                    
                                       t
                                    
                                 
                               is the image height of the artificial light point 
                                 j
                               from artificial principal axis in iteration 
                                 t
                              ,


                              
                                 
                                    
                                       κ
                                    
                                    
                                       j
                                       ,
                                       
                                          
                                             i
                                          
                                          
                                             k
                                          
                                       
                                    
                                    
                                       t
                                    
                                 
                               is the value of lateral aberration relevant to the artificial mirror which is reflecting the image of the artificial light point 
                                 j
                               in iteration 
                                 t
                              .

The overall mechanism of OIO can be formulated as follows. At first, NO numbers of individuals are generated randomly to form the initial position of the artificial light points in the search space. Thereafter, in iteration 
                        t
                     , each artificial light point 
                        j
                        
                        
                           (
                           j
                           =
                           1
                           ,
                           …
                           ,
                           
                              NO
                           
                           )
                        
                      with position 
                        
                           
                              
                                 
                                    O
                                 
                                 →
                              
                           
                           
                              j
                           
                           
                              t
                           
                        
                        =
                        
                           [
                           
                              
                                 
                                    
                                       
                                          o
                                       
                                       
                                          j
                                          1
                                       
                                       
                                          t
                                       
                                    
                                 
                                 
                                    
                                       
                                          o
                                       
                                       
                                          j
                                          2
                                       
                                       
                                          t
                                       
                                    
                                 
                                 
                                    …
                                 
                                 
                                    
                                       
                                          o
                                       
                                       
                                          j
                                          n
                                       
                                       
                                          t
                                       
                                    
                                 
                              
                           
                           ]
                        
                       in the search space sits (in the joint search and objective space in position 
                        
                           [
                           
                              
                                 
                                    
                                       
                                          o
                                       
                                       
                                          j
                                          1
                                       
                                       
                                          t
                                       
                                    
                                 
                                 
                                    
                                       
                                          o
                                       
                                       
                                          j
                                          2
                                       
                                       
                                          t
                                       
                                    
                                 
                                 
                                    …
                                 
                                 
                                    
                                       
                                          o
                                       
                                       
                                          j
                                          n
                                       
                                       
                                          t
                                       
                                    
                                 
                                 
                                    
                                       
                                          s
                                       
                                       
                                          j
                                          ,
                                          
                                             
                                                i
                                             
                                             
                                                k
                                             
                                          
                                       
                                       
                                          t
                                       
                                    
                                 
                              
                           
                           ]
                        
                     ) in front of the artificial mirror (function surface) in distance 
                        
                           
                              p
                           
                           
                              j
                              ,
                              
                                 
                                    i
                                 
                                 
                                    k
                                 
                              
                           
                           
                              t
                           
                        
                      from the mirror vertex and its artificial image is formed in the joint search and objective space in distance 
                        
                           
                              q
                           
                           
                              j
                              ,
                              
                                 
                                    i
                                 
                                 
                                    k
                                 
                              
                           
                           
                              t
                           
                        
                      (on the function/objective axis) from the vertex, given that the principal axis passes through point 
                        
                           
                              
                                 
                                    F
                                 
                                 →
                              
                           
                           
                              
                                 
                                    i
                                 
                                 
                                    k
                                 
                              
                           
                           
                              t
                           
                        
                      in the search space (
                        
                           
                              
                                 
                                    F
                                 
                                 →
                              
                           
                           
                              
                                 
                                    i
                                 
                                 
                                    k
                                 
                              
                           
                           
                              t
                           
                        
                      is selected randomly from the current population with this condition that 
                        f
                        
                           (
                           
                              
                                 
                                    
                                       F
                                    
                                    →
                                 
                              
                              
                                 
                                    
                                       i
                                    
                                    
                                       k
                                    
                                 
                              
                              
                                 t
                              
                           
                           )
                        
                      must differ from 
                        f
                        
                           (
                           
                              
                                 
                                    
                                       O
                                    
                                    →
                                 
                              
                              
                                 j
                              
                              
                                 t
                              
                           
                           )
                        
                     ) and the artificial mirror radius of curvature is 
                        
                           
                              r
                           
                           
                              
                                 
                                    i
                                 
                                 
                                    k
                                 
                              
                           
                           
                              t
                           
                        
                     . Mapping the artificial image position into the solution space produces an artificial image position 
                        
                           
                              
                                 
                                    I
                                 
                                 →
                              
                           
                           
                              j
                              ,
                              
                                 
                                    i
                                 
                                 
                                    k
                                 
                              
                           
                           
                              t
                           
                        
                      in the search space which can be treated as a new solution to the problem.

To develop OIO’s equation for generation of a new solution in the search space, consider the artificial light point 
                        j
                        ,
                        
                           
                              
                                 
                                    O
                                 
                                 →
                              
                           
                           
                              j
                           
                           
                              t
                           
                        
                     , and pick an individual 
                        
                           
                              
                                 
                                    F
                                 
                                 →
                              
                           
                           
                              
                                 
                                    i
                                 
                                 
                                    k
                                 
                              
                           
                           
                              t
                           
                        
                      from the current population such that 
                        
                           
                              i
                           
                           
                              k
                           
                        
                        ∈
                        
                           {
                           1
                           ,
                           …
                           ,
                           
                              NO
                           
                           }
                        
                     , 
                        
                           
                              i
                           
                           
                              k
                           
                        
                        ≠
                        j
                      and 
                        f
                        
                           (
                           
                              
                                 
                                    
                                       F
                                    
                                    →
                                 
                              
                              
                                 
                                    
                                       i
                                    
                                    
                                       k
                                    
                                 
                              
                              
                                 t
                              
                           
                           )
                        
                        ≠
                        f
                        
                           (
                           
                              
                                 
                                    
                                       O
                                    
                                    →
                                 
                              
                              
                                 j
                              
                              
                                 t
                              
                           
                           )
                        
                     . If 
                        f
                        
                           (
                           
                              
                                 
                                    
                                       O
                                    
                                    →
                                 
                              
                              
                                 j
                              
                              
                                 t
                              
                           
                           )
                        
                        >
                        f
                        
                           (
                           
                              
                                 
                                    
                                       F
                                    
                                    →
                                 
                              
                              
                                 
                                    
                                       i
                                    
                                    
                                       k
                                    
                                 
                              
                              
                                 t
                              
                           
                           )
                        
                      it is concluded that the function surface is concave and if 
                        f
                        
                           (
                           
                              
                                 
                                    
                                       O
                                    
                                    →
                                 
                              
                              
                                 j
                              
                              
                                 t
                              
                           
                           )
                        
                        <
                        f
                        
                           (
                           
                              
                                 
                                    
                                       F
                                    
                                    →
                                 
                              
                              
                                 
                                    
                                       i
                                    
                                    
                                       k
                                    
                                 
                              
                              
                                 t
                              
                           
                           )
                        
                      it is concluded that the function surface is convex.

Now, assume that the function surface in front of the artificial light point 
                        j
                      is concave. The position 
                        
                           
                              s
                           
                           
                              j
                              ,
                              
                                 
                                    i
                                 
                                 
                                    k
                                 
                              
                           
                           
                              t
                           
                        
                      of the artificial light point 
                        j
                      on the function/objective axis (objective space) is somewhere between 
                        f
                        
                           (
                           
                              
                                 
                                    
                                       O
                                    
                                    →
                                 
                              
                              
                                 j
                              
                              
                                 t
                              
                           
                           )
                        
                      and positive infinity (please see Fig. 6 in  [45]). That is: 
                        
                           (7)
                           
                              
                                 
                                    s
                                 
                                 
                                    j
                                    ,
                                    
                                       
                                          i
                                       
                                       
                                          k
                                       
                                    
                                 
                                 
                                    t
                                 
                              
                              =
                              U
                              
                                 [
                                 f
                                 
                                    (
                                    
                                       
                                          
                                             
                                                O
                                             
                                             →
                                          
                                       
                                       
                                          j
                                       
                                       
                                          t
                                       
                                    
                                    )
                                 
                                 ,
                                 
                                 f
                                 
                                    (
                                    
                                       
                                          
                                             
                                                O
                                             
                                             →
                                          
                                       
                                       
                                          j
                                       
                                       
                                          t
                                       
                                    
                                    )
                                 
                                 +
                                 
                                    
                                       d
                                    
                                    
                                       ∞
                                    
                                 
                                 ]
                              
                           
                        
                      where, 
                        U
                        
                           [
                           a
                           ,
                           b
                           ]
                        
                      is a random value distributed uniformly between 
                        a
                      and 
                        b
                     . 
                        
                           
                              d
                           
                           
                              ∞
                           
                        
                      is assumed to be the physical infinity and can accept any positive value. Starting with 
                        
                           
                              d
                           
                           
                              ∞
                           
                        
                        =
                        
                           |
                           
                              
                                 max
                              
                              
                                 j
                                 =
                                 1
                                 ,
                                 …
                                 ,
                                 N
                                 O
                              
                           
                           
                              {
                              f
                              
                                 (
                                 
                                    
                                       
                                          
                                             O
                                          
                                          →
                                       
                                    
                                    
                                       j
                                    
                                    
                                       1
                                    
                                 
                                 )
                              
                              }
                           
                           |
                        
                     , we update 
                        
                           
                              d
                           
                           
                              ∞
                           
                        
                      whenever we correct the artificial spherical aberration in OIO (see Section  3.1). Based on our definition of 
                        
                           
                              p
                           
                           
                              j
                              ,
                              
                                 
                                    i
                                 
                                 
                                    k
                                 
                              
                           
                           
                              t
                           
                        
                      we can write: 
                        
                           (8)
                           
                              
                                 
                                    p
                                 
                                 
                                    j
                                    ,
                                    
                                       
                                          i
                                       
                                       
                                          k
                                       
                                    
                                 
                                 
                                    t
                                 
                              
                              =
                              
                                 
                                    s
                                 
                                 
                                    j
                                    ,
                                    
                                       
                                          i
                                       
                                       
                                          k
                                       
                                    
                                 
                                 
                                    t
                                 
                              
                              −
                              f
                              
                                 (
                                 
                                    
                                       
                                          
                                             F
                                          
                                          →
                                       
                                    
                                    
                                       
                                          
                                             i
                                          
                                          
                                             k
                                          
                                       
                                    
                                    
                                       t
                                    
                                 
                                 )
                              
                              .
                           
                        
                     
                  

In a similar way the position 
                        
                           
                              m
                           
                           
                              
                                 
                                    i
                                 
                                 
                                    k
                                 
                              
                           
                           
                              t
                           
                        
                      of the center of curvature of the artificial concave mirror on the function/objective axis (objective space) is somewhere between 
                        f
                        
                           (
                           
                              
                                 
                                    
                                       O
                                    
                                    →
                                 
                              
                              
                                 j
                              
                              
                                 t
                              
                           
                           )
                        
                      and positive infinity. That is: 
                        
                           (9)
                           
                              
                                 
                                    m
                                 
                                 
                                    
                                       
                                          i
                                       
                                       
                                          k
                                       
                                    
                                 
                                 
                                    t
                                 
                              
                              =
                              U
                              
                                 [
                                 f
                                 
                                    (
                                    
                                       
                                          
                                             
                                                O
                                             
                                             →
                                          
                                       
                                       
                                          j
                                       
                                       
                                          t
                                       
                                    
                                    )
                                 
                                 ,
                                 
                                 f
                                 
                                    (
                                    
                                       
                                          
                                             
                                                O
                                             
                                             →
                                          
                                       
                                       
                                          j
                                       
                                       
                                          t
                                       
                                    
                                    )
                                 
                                 +
                                 
                                    
                                       d
                                    
                                    
                                       ∞
                                    
                                 
                                 ]
                              
                              .
                           
                        
                     
                  

Based on our definition of 
                        
                           
                              r
                           
                           
                              
                                 
                                    i
                                 
                                 
                                    k
                                 
                              
                           
                           
                              t
                           
                        
                      we can write: 
                        
                           (10)
                           
                              
                                 
                                    r
                                 
                                 
                                    
                                       
                                          i
                                       
                                       
                                          k
                                       
                                    
                                 
                                 
                                    t
                                 
                              
                              =
                              
                                 
                                    m
                                 
                                 
                                    
                                       
                                          i
                                       
                                       
                                          k
                                       
                                    
                                 
                                 
                                    t
                                 
                              
                              −
                              f
                              
                                 (
                                 
                                    
                                       
                                          
                                             F
                                          
                                          →
                                       
                                    
                                    
                                       
                                          
                                             i
                                          
                                          
                                             k
                                          
                                       
                                    
                                    
                                       t
                                    
                                 
                                 )
                              
                              .
                           
                        
                     
                  

Now, assume that the function surface in front of the artificial light point 
                        j
                      is convex. The position 
                        
                           
                              s
                           
                           
                              j
                              ,
                              
                                 
                                    i
                                 
                                 
                                    k
                                 
                              
                           
                           
                              t
                           
                        
                      of the artificial light point 
                        j
                      on the function/objective axis (objective space) is somewhere between 
                        f
                        
                           (
                           
                              
                                 
                                    
                                       F
                                    
                                    →
                                 
                              
                              
                                 
                                    
                                       i
                                    
                                    
                                       k
                                    
                                 
                              
                              
                                 t
                              
                           
                           )
                        
                      and positive infinity (please see Fig. 7 in  [45]). That is: 
                        
                           (11)
                           
                              
                                 
                                    s
                                 
                                 
                                    j
                                    ,
                                    
                                       
                                          i
                                       
                                       
                                          k
                                       
                                    
                                 
                                 
                                    t
                                 
                              
                              =
                              U
                              
                                 [
                                 f
                                 
                                    (
                                    
                                       
                                          
                                             
                                                F
                                             
                                             →
                                          
                                       
                                       
                                          
                                             
                                                i
                                             
                                             
                                                k
                                             
                                          
                                       
                                       
                                          t
                                       
                                    
                                    )
                                 
                                 ,
                                 
                                 f
                                 
                                    (
                                    
                                       
                                          
                                             
                                                F
                                             
                                             →
                                          
                                       
                                       
                                          
                                             
                                                i
                                             
                                             
                                                k
                                             
                                          
                                       
                                       
                                          t
                                       
                                    
                                    )
                                 
                                 +
                                 
                                    
                                       d
                                    
                                    
                                       ∞
                                    
                                 
                                 ]
                              
                              .
                           
                        
                     
                  

Similar to the case of an artificial concave mirror, in case of an artificial convex mirror, 
                        
                           
                              p
                           
                           
                              j
                              ,
                              
                                 
                                    i
                                 
                                 
                                    k
                                 
                              
                           
                           
                              t
                           
                        
                      is obtained by Eq. (8). The position 
                        
                           
                              m
                           
                           
                              
                                 
                                    i
                                 
                                 
                                    k
                                 
                              
                           
                           
                              t
                           
                        
                      of the center of curvature of the artificial convex mirror on the function/objective axis (objective space) is somewhere between negative infinity and 
                        f
                        
                           (
                           
                              
                                 
                                    
                                       O
                                    
                                    →
                                 
                              
                              
                                 j
                              
                              
                                 t
                              
                           
                           )
                        
                     . Therefore: 
                        
                           (12)
                           
                              
                                 
                                    m
                                 
                                 
                                    
                                       
                                          i
                                       
                                       
                                          k
                                       
                                    
                                 
                                 
                                    t
                                 
                              
                              =
                              U
                              
                                 [
                                 f
                                 
                                    (
                                    
                                       
                                          
                                             
                                                O
                                             
                                             →
                                          
                                       
                                       
                                          j
                                       
                                       
                                          t
                                       
                                    
                                    )
                                 
                                 −
                                 
                                    
                                       d
                                    
                                    
                                       ∞
                                    
                                 
                                 ,
                                 f
                                 
                                    (
                                    
                                       
                                          
                                             
                                                O
                                             
                                             →
                                          
                                       
                                       
                                          j
                                       
                                       
                                          t
                                       
                                    
                                    )
                                 
                                 ]
                              
                           
                        
                      where it is assumed that 
                        f
                        
                           (
                           
                              
                                 
                                    
                                       O
                                    
                                    →
                                 
                              
                              
                                 j
                              
                              
                                 t
                              
                           
                           )
                        
                        −
                        
                           
                              d
                           
                           
                              ∞
                           
                        
                      is the physical negative infinity. Just similar to the case of an artificial concave mirror, in case of a convex mirror, 
                        
                           
                              r
                           
                           
                              
                                 
                                    i
                                 
                                 
                                    k
                                 
                              
                           
                           
                              t
                           
                        
                      is obtained by Eq. (10). However, here 
                        
                           
                              r
                           
                           
                              
                                 
                                    i
                                 
                                 
                                    k
                                 
                              
                           
                           
                              t
                           
                        
                      is negative. Once the values of 
                        
                           
                              p
                           
                           
                              j
                              ,
                              
                                 
                                    i
                                 
                                 
                                    k
                                 
                              
                           
                           
                              t
                           
                        
                      and 
                        
                           
                              r
                           
                           
                              
                                 
                                    i
                                 
                                 
                                    k
                                 
                              
                           
                           
                              t
                           
                        
                      were determined, the mirror equation can be used to obtain 
                        
                           
                              q
                           
                           
                              j
                              ,
                              
                                 
                                    i
                                 
                                 
                                    k
                                 
                              
                           
                           
                              t
                           
                        
                      as follows: 
                        
                           (13)
                           
                              
                                 
                                    2
                                 
                                 
                                    
                                       
                                          r
                                       
                                       
                                          
                                             
                                                i
                                             
                                             
                                                k
                                             
                                          
                                       
                                       
                                          t
                                       
                                    
                                 
                              
                              =
                              
                                 
                                    1
                                 
                                 
                                    
                                       
                                          p
                                       
                                       
                                          j
                                          ,
                                          
                                             
                                                i
                                             
                                             
                                                k
                                             
                                          
                                       
                                       
                                          t
                                       
                                    
                                 
                              
                              +
                              
                                 
                                    1
                                 
                                 
                                    
                                       
                                          q
                                       
                                       
                                          j
                                          ,
                                          
                                             
                                                i
                                             
                                             
                                                k
                                             
                                          
                                       
                                       
                                          t
                                       
                                    
                                 
                              
                              ⇒
                              
                                 
                                    q
                                 
                                 
                                    j
                                    ,
                                    
                                       
                                          i
                                       
                                       
                                          k
                                       
                                    
                                 
                                 
                                    t
                                 
                              
                              =
                              
                                 
                                    
                                       
                                          r
                                       
                                       
                                          
                                             
                                                i
                                             
                                             
                                                k
                                             
                                          
                                       
                                       
                                          t
                                       
                                    
                                    
                                       
                                          p
                                       
                                       
                                          j
                                          ,
                                          
                                             
                                                i
                                             
                                             
                                                k
                                             
                                          
                                       
                                       
                                          t
                                       
                                    
                                 
                                 
                                    2
                                    
                                       
                                          p
                                       
                                       
                                          j
                                          ,
                                          
                                             
                                                i
                                             
                                             
                                                k
                                             
                                          
                                       
                                       
                                          t
                                       
                                    
                                    −
                                    
                                       
                                          r
                                       
                                       
                                          
                                             
                                                i
                                             
                                             
                                                k
                                             
                                          
                                       
                                       
                                          t
                                       
                                    
                                 
                              
                              .
                           
                        
                     
                  

Depending on the type of the function surface (convex or concave) and the relative position of artificial light point 
                        j
                      on the function/objective axis to the position of the center of curvature, 
                        
                           
                              q
                           
                           
                              j
                              ,
                              
                                 
                                    i
                                 
                                 
                                    k
                                 
                              
                           
                           
                              t
                           
                        
                      can be either positive or negative. Given the fact that: 
                        
                           (14)
                           
                              H
                              
                                 
                                    O
                                 
                                 
                                    j
                                    ,
                                    
                                       
                                          i
                                       
                                       
                                          k
                                       
                                    
                                 
                                 
                                    t
                                 
                              
                              =
                              
                                 ‖
                                 
                                    
                                       
                                          
                                             O
                                          
                                          →
                                       
                                    
                                    
                                       j
                                    
                                    
                                       t
                                    
                                 
                                 −
                                 
                                    
                                       
                                          
                                             F
                                          
                                          →
                                       
                                    
                                    
                                       
                                          
                                             i
                                          
                                          
                                             k
                                          
                                       
                                    
                                    
                                       t
                                    
                                 
                                 ‖
                              
                           
                        
                      based on the magnification equation (Eq. (5)), the image height of the artificial light point 
                        j
                      is obtained as follows: 
                        
                           (15)
                           
                              H
                              
                                 
                                    I
                                 
                                 
                                    j
                                    ,
                                    
                                       
                                          i
                                       
                                       
                                          k
                                       
                                    
                                 
                                 
                                    t
                                 
                              
                              =
                              −
                              H
                              
                                 
                                    O
                                 
                                 
                                    j
                                    ,
                                    
                                       
                                          i
                                       
                                       
                                          k
                                       
                                    
                                 
                                 
                                    t
                                 
                              
                              
                                 
                                    
                                       
                                          q
                                       
                                       
                                          j
                                          ,
                                          
                                             
                                                i
                                             
                                             
                                                k
                                             
                                          
                                       
                                       
                                          t
                                       
                                    
                                 
                                 
                                    
                                       
                                          p
                                       
                                       
                                          j
                                          ,
                                          
                                             
                                                i
                                             
                                             
                                                k
                                             
                                          
                                       
                                       
                                          t
                                       
                                    
                                 
                              
                           
                        
                      which can be treated as the step length to generate a new solution. We can now generate the image position of the artificial light point 
                        j
                      in the search space in iteration 
                        t
                      as follows: 
                        
                           (16)
                           
                              
                                 
                                    
                                       
                                          I
                                       
                                       →
                                    
                                 
                                 
                                    j
                                    ,
                                    
                                       
                                          i
                                       
                                       
                                          k
                                       
                                    
                                 
                                 
                                    t
                                 
                              
                              =
                              
                                 
                                    
                                       
                                          F
                                       
                                       →
                                    
                                 
                                 
                                    
                                       
                                          i
                                       
                                       
                                          k
                                       
                                    
                                 
                                 
                                    t
                                 
                              
                              +
                              H
                              
                                 
                                    I
                                 
                                 
                                    j
                                    ,
                                    
                                       
                                          i
                                       
                                       
                                          k
                                       
                                    
                                 
                                 
                                    t
                                 
                              
                              
                                 
                                    
                                       (
                                       
                                          
                                             
                                                
                                                   O
                                                
                                                →
                                             
                                          
                                          
                                             j
                                          
                                          
                                             t
                                          
                                       
                                       −
                                       
                                          
                                             
                                                
                                                   F
                                                
                                                →
                                             
                                          
                                          
                                             
                                                
                                                   i
                                                
                                                
                                                   k
                                                
                                             
                                          
                                          
                                             t
                                          
                                       
                                       )
                                    
                                 
                                 
                                    
                                       ‖
                                       
                                          
                                             
                                                
                                                   O
                                                
                                                →
                                             
                                          
                                          
                                             j
                                          
                                          
                                             t
                                          
                                       
                                       −
                                       
                                          
                                             
                                                
                                                   F
                                                
                                                →
                                             
                                          
                                          
                                             
                                                
                                                   i
                                                
                                                
                                                   k
                                                
                                             
                                          
                                          
                                             t
                                          
                                       
                                       ‖
                                    
                                 
                              
                              =
                              
                                 
                                    
                                       
                                          F
                                       
                                       →
                                    
                                 
                                 
                                    
                                       
                                          i
                                       
                                       
                                          k
                                       
                                    
                                 
                                 
                                    t
                                 
                              
                              −
                              H
                              
                                 
                                    O
                                 
                                 
                                    j
                                    ,
                                    
                                       
                                          i
                                       
                                       
                                          k
                                       
                                    
                                 
                                 
                                    t
                                 
                              
                              
                                 
                                    
                                       
                                          q
                                       
                                       
                                          j
                                          ,
                                          
                                             
                                                i
                                             
                                             
                                                k
                                             
                                          
                                       
                                       
                                          t
                                       
                                    
                                 
                                 
                                    
                                       
                                          p
                                       
                                       
                                          j
                                          ,
                                          
                                             
                                                i
                                             
                                             
                                                k
                                             
                                          
                                       
                                       
                                          t
                                       
                                    
                                 
                              
                              
                                 
                                    
                                       (
                                       
                                          
                                             
                                                
                                                   O
                                                
                                                →
                                             
                                          
                                          
                                             j
                                          
                                          
                                             t
                                          
                                       
                                       −
                                       
                                          
                                             
                                                
                                                   F
                                                
                                                →
                                             
                                          
                                          
                                             
                                                
                                                   i
                                                
                                                
                                                   k
                                                
                                             
                                          
                                          
                                             t
                                          
                                       
                                       )
                                    
                                 
                                 
                                    
                                       ‖
                                       
                                          
                                             
                                                
                                                   O
                                                
                                                →
                                             
                                          
                                          
                                             j
                                          
                                          
                                             t
                                          
                                       
                                       −
                                       
                                          
                                             
                                                
                                                   F
                                                
                                                →
                                             
                                          
                                          
                                             
                                                
                                                   i
                                                
                                                
                                                   k
                                                
                                             
                                          
                                          
                                             t
                                          
                                       
                                       ‖
                                    
                                 
                              
                              =
                              
                                 
                                    
                                       
                                          F
                                       
                                       →
                                    
                                 
                                 
                                    
                                       
                                          i
                                       
                                       
                                          k
                                       
                                    
                                 
                                 
                                    t
                                 
                              
                              −
                              
                                 
                                    
                                       
                                          q
                                       
                                       
                                          j
                                          ,
                                          
                                             
                                                i
                                             
                                             
                                                k
                                             
                                          
                                       
                                       
                                          t
                                       
                                    
                                 
                                 
                                    
                                       
                                          p
                                       
                                       
                                          j
                                          ,
                                          
                                             
                                                i
                                             
                                             
                                                k
                                             
                                          
                                       
                                       
                                          t
                                       
                                    
                                 
                              
                              
                                 (
                                 
                                    
                                       
                                          
                                             O
                                          
                                          →
                                       
                                    
                                    
                                       j
                                    
                                    
                                       t
                                    
                                 
                                 −
                                 
                                    
                                       
                                          
                                             F
                                          
                                          →
                                       
                                    
                                    
                                       
                                          
                                             i
                                          
                                          
                                             k
                                          
                                       
                                    
                                    
                                       t
                                    
                                 
                                 )
                              
                              =
                              
                                 
                                    
                                       
                                          F
                                       
                                       →
                                    
                                 
                                 
                                    
                                       
                                          i
                                       
                                       
                                          k
                                       
                                    
                                 
                                 
                                    t
                                 
                              
                              −
                              
                                 
                                    
                                       
                                          r
                                       
                                       
                                          
                                             
                                                i
                                             
                                             
                                                k
                                             
                                          
                                       
                                       
                                          t
                                       
                                    
                                 
                                 
                                    2
                                    
                                       
                                          p
                                       
                                       
                                          j
                                          ,
                                          
                                             
                                                i
                                             
                                             
                                                k
                                             
                                          
                                       
                                       
                                          t
                                       
                                    
                                    −
                                    
                                       
                                          r
                                       
                                       
                                          
                                             
                                                i
                                             
                                             
                                                k
                                             
                                          
                                       
                                       
                                          t
                                       
                                    
                                 
                              
                              
                                 (
                                 
                                    
                                       
                                          
                                             O
                                          
                                          →
                                       
                                    
                                    
                                       j
                                    
                                    
                                       t
                                    
                                 
                                 −
                                 
                                    
                                       
                                          
                                             F
                                          
                                          →
                                       
                                    
                                    
                                       
                                          
                                             i
                                          
                                          
                                             k
                                          
                                       
                                    
                                    
                                       t
                                    
                                 
                                 )
                              
                              .
                           
                        
                     
                  

In this way, 
                        
                           
                              
                                 
                                    I
                                 
                                 →
                              
                           
                           
                              j
                              ,
                              
                                 
                                    i
                                 
                                 
                                    k
                                 
                              
                           
                           
                              t
                           
                        
                      may be entered as a new solution (search direction) in the population if it produces a better function value than 
                        
                           
                              
                                 
                                    O
                                 
                                 →
                              
                           
                           
                              j
                           
                           
                              t
                           
                        
                     . However, to preserve more diversity in the population, it seems beneficial to use a consequent of multiple search directions instead of a single search direction generated by Eq. (16) in OIO. Let 
                        
                           
                              
                                 
                                    I
                                 
                                 →
                              
                           
                           
                              j
                              ,
                              
                                 
                                    i
                                 
                                 
                                    k
                                 
                              
                           
                           
                              t
                           
                        
                      be a typical search direction obtained by Eq. (16). Based on the notion of using multiple search directions to generate a new consequent image position (solution) we write: 
                        
                           (17)
                           
                              
                                 
                                    
                                       
                                          I
                                       
                                       →
                                    
                                 
                                 
                                    j
                                 
                                 
                                    t
                                 
                              
                              =
                              
                                 
                                    ∑
                                 
                                 
                                    k
                                    =
                                    1
                                 
                                 
                                    K
                                 
                              
                              
                                 
                                    w
                                 
                                 
                                    k
                                 
                                 
                                    t
                                 
                              
                              
                                 
                                    
                                       
                                          I
                                       
                                       →
                                    
                                 
                                 
                                    j
                                    ,
                                    
                                       
                                          i
                                       
                                       
                                          k
                                       
                                    
                                 
                                 
                                    t
                                 
                              
                           
                        
                      where 
                        
                           
                              
                                 
                                    I
                                 
                                 →
                              
                           
                           
                              j
                           
                           
                              t
                           
                        
                      is the weighted linear combination of different search directions and is treated as the consequent of different images of the artificial light point 
                        j
                     . The random weights 
                        
                           
                              w
                           
                           
                              k
                           
                           
                              t
                           
                        
                      are generated such that 
                        
                           
                              ∑
                           
                           
                              k
                              =
                              1
                           
                           
                              K
                           
                        
                        
                           
                              w
                           
                           
                              k
                           
                           
                              t
                           
                        
                        =
                        1
                        ,
                        
                        0
                        <
                        
                           
                              w
                           
                           
                              k
                           
                           
                              t
                           
                        
                        ≤
                        1
                     . Generally 
                        K
                        =
                        1
                     , 2, 3 would produce satisfactory results (for each 
                        
                           
                              
                                 
                                    I
                                 
                                 →
                              
                           
                           
                              j
                           
                           
                              t
                           
                        
                      the value of 
                        K
                      is set randomly equal to 2 or 3 in all of our experiments). Eq. (17) says that to generate a new solution in OIO, we may generate multiple artificial image points 
                        
                           
                              
                                 
                                    I
                                 
                                 →
                              
                           
                           
                              j
                              ,
                              
                                 
                                    i
                                 
                                 
                                    k
                                 
                              
                           
                           
                              t
                           
                        
                        ,
                        
                        ∀
                        k
                      and introduce their weighted mean as the new solution 
                        
                           
                              
                                 
                                    I
                                 
                                 →
                              
                           
                           
                              j
                           
                           
                              t
                           
                        
                     .

We use from Roulette wheel selection strategy to select the individual solution 
                        
                           
                              
                                 
                                    F
                                 
                                 →
                              
                           
                           
                              
                                 
                                    i
                                 
                                 
                                    k
                                 
                              
                           
                           
                              t
                           
                        
                      from the current population. However, since the function to be optimized is a minimization problem, we have to convert the objective function values to fitness function values of maximization form. One way is to use the simplest procedure to get the fitness value relevant to solution 
                        j
                        
                           (
                           
                              fit
                           
                           
                              (
                              
                                 
                                    
                                       
                                          O
                                       
                                       →
                                    
                                 
                                 
                                    j
                                 
                                 
                                    t
                                 
                              
                              )
                           
                           )
                        
                      from its function value 
                        
                           (
                           f
                           
                              (
                              
                                 
                                    
                                       
                                          O
                                       
                                       →
                                    
                                 
                                 
                                    j
                                 
                                 
                                    t
                                 
                              
                              )
                           
                           )
                        
                      and the maximum function value in the population as follows: 
                        
                           fit
                        
                        
                           (
                           
                              
                                 
                                    
                                       O
                                    
                                    →
                                 
                              
                              
                                 j
                              
                              
                                 t
                              
                           
                           )
                        
                        =
                        
                           
                              max
                           
                           
                              i
                              =
                              1
                              ,
                              …
                              ,
                              N
                              O
                           
                        
                        
                           {
                           f
                           
                              (
                              
                                 
                                    
                                       
                                          O
                                       
                                       →
                                    
                                 
                                 
                                    i
                                 
                                 
                                    t
                                 
                              
                              )
                           
                           }
                        
                        −
                        f
                        
                           (
                           
                              
                                 
                                    
                                       O
                                    
                                    →
                                 
                              
                              
                                 j
                              
                              
                                 t
                              
                           
                           )
                        
                     .

As was already mentioned, spherical aberration occurs in a spherical mirror when the rays are far from the principal axis relative to the radius of curvature. Large values of lateral aberration 
                           κ
                         indicates that the width (HO) of incoming ray is large compared to the radius of curvature (
                           r
                        ).

In analogy with what happens in optics, spherical aberration may occur artificially in OIO, which results in a weak convergence of algorithm. Correction of spherical aberration (or decreasing the lateral aberration) in OIO is related to modify the value of 
                           
                              
                                 r
                              
                              
                                 
                                    
                                       i
                                    
                                    
                                       k
                                    
                                 
                              
                              
                                 t
                              
                           
                        .

In course of search for optimum by OIO, it is possible to repeatedly obtain 
                           H
                           
                              
                                 O
                              
                              
                                 j
                                 ,
                                 
                                    
                                       i
                                    
                                    
                                       k
                                    
                                 
                              
                              
                                 t
                              
                           
                           >
                           
                              |
                              
                                 
                                    r
                                 
                                 
                                    
                                       
                                          i
                                       
                                       
                                          k
                                       
                                    
                                 
                                 
                                    t
                                 
                              
                              |
                           
                         (since 
                           
                              
                                 r
                              
                              
                                 
                                    
                                       i
                                    
                                    
                                       k
                                    
                                 
                              
                              
                                 t
                              
                           
                         is negative for an artificial convex mirror, its absolute value is used), which means that the artificial light point 
                           j
                         is at the height that cannot be seen by the artificial mirror (and the lateral aberration amount is undefined). To be diagnosed in the mirror, the mirror absolute radius of curvature 
                           
                              (
                              
                                 |
                                 
                                    
                                       r
                                    
                                    
                                       
                                          
                                             i
                                          
                                          
                                             k
                                          
                                       
                                    
                                    
                                       t
                                    
                                 
                                 |
                              
                              )
                           
                         must be greater than 
                           H
                           
                              
                                 O
                              
                              
                                 j
                                 ,
                                 
                                    
                                       i
                                    
                                    
                                       k
                                    
                                 
                              
                              
                                 t
                              
                           
                        . Therefore, when computing 
                           
                              
                                 r
                              
                              
                                 
                                    
                                       i
                                    
                                    
                                       k
                                    
                                 
                              
                              
                                 t
                              
                           
                         in Eq. (10), if we get 
                           H
                           
                              
                                 O
                              
                              
                                 j
                                 ,
                                 
                                    
                                       i
                                    
                                    
                                       k
                                    
                                 
                              
                              
                                 t
                              
                           
                           >
                           
                              |
                              
                                 
                                    r
                                 
                                 
                                    
                                       
                                          i
                                       
                                       
                                          k
                                       
                                    
                                 
                                 
                                    t
                                 
                              
                              |
                           
                        , we must correct 
                           
                              
                                 r
                              
                              
                                 
                                    
                                       i
                                    
                                    
                                       k
                                    
                                 
                              
                              
                                 t
                              
                           
                        . We correct 
                           
                              
                                 r
                              
                              
                                 
                                    
                                       i
                                    
                                    
                                       k
                                    
                                 
                              
                              
                                 t
                              
                           
                         via increasing the length of the artificial mirror radius of curvature. Given an artificial light point 
                           j
                        , with position 
                           
                              [
                              
                                 
                                    
                                       
                                          
                                             o
                                          
                                          
                                             j
                                             1
                                          
                                          
                                             t
                                          
                                       
                                    
                                    
                                       
                                          
                                             o
                                          
                                          
                                             j
                                             2
                                          
                                          
                                             t
                                          
                                       
                                    
                                    
                                       …
                                    
                                    
                                       
                                          
                                             o
                                          
                                          
                                             j
                                             n
                                          
                                          
                                             t
                                          
                                       
                                    
                                    
                                       
                                          
                                             s
                                          
                                          
                                             j
                                             ,
                                             
                                                
                                                   i
                                                
                                                
                                                   k
                                                
                                             
                                          
                                          
                                             t
                                          
                                       
                                    
                                 
                              
                              ]
                           
                          in the joint search and objective space sitting in front of the function surface, we say aberration has occurred if the value of lateral aberration 
                           
                              
                                 κ
                              
                              
                                 j
                                 ,
                                 
                                    
                                       i
                                    
                                    
                                       k
                                    
                                 
                              
                              
                                 t
                              
                           
                         (see Eq. (18)) be greater than a given threshold. The threshold value is a given constant and equal to 0.01. Using Eq. (6) as the basis to calculate the value of lateral aberration relevant to the artificial mirror which is reflecting the image of the artificial light point 
                           j
                         in iteration 
                           t
                        , we can write:
                           
                              (18)
                              
                                 
                                    
                                       κ
                                    
                                    
                                       j
                                       ,
                                       
                                          
                                             i
                                          
                                          
                                             k
                                          
                                       
                                    
                                    
                                       t
                                    
                                 
                                 =
                                 
                                    
                                       
                                          
                                             
                                                (
                                                
                                                   
                                                      r
                                                   
                                                   
                                                      
                                                         
                                                            i
                                                         
                                                         
                                                            k
                                                         
                                                      
                                                   
                                                   
                                                      t
                                                   
                                                
                                                )
                                             
                                          
                                          
                                             2
                                          
                                       
                                    
                                    
                                       2
                                       
                                          
                                             
                                                
                                                   
                                                      (
                                                      
                                                         
                                                            r
                                                         
                                                         
                                                            
                                                               
                                                                  i
                                                               
                                                               
                                                                  k
                                                               
                                                            
                                                         
                                                         
                                                            t
                                                         
                                                      
                                                      )
                                                   
                                                
                                                
                                                   2
                                                
                                             
                                             −
                                             
                                                
                                                   
                                                      (
                                                      H
                                                      
                                                         
                                                            O
                                                         
                                                         
                                                            j
                                                            ,
                                                            
                                                               
                                                                  i
                                                               
                                                               
                                                                  k
                                                               
                                                            
                                                         
                                                         
                                                            t
                                                         
                                                      
                                                      )
                                                   
                                                
                                                
                                                   2
                                                
                                             
                                          
                                       
                                    
                                 
                                 −
                                 
                                    
                                       
                                          |
                                          
                                             
                                                r
                                             
                                             
                                                
                                                   
                                                      i
                                                   
                                                   
                                                      k
                                                   
                                                
                                             
                                             
                                                t
                                             
                                          
                                          |
                                       
                                    
                                    
                                       2
                                    
                                 
                                 .
                              
                           
                        
                     

If for an artificial light point 
                           j
                         we come out to 
                           
                              
                                 κ
                              
                              
                                 j
                                 ,
                                 
                                    
                                       i
                                    
                                    
                                       k
                                    
                                 
                              
                              
                                 t
                              
                           
                           ≥
                           0.01
                        , we correct the occurred aberration via increasing the length of the artificial mirror radius of curvature. To correct the occurred aberration, we repeatedly do the following steps until getting 
                           
                              
                                 κ
                              
                              
                                 j
                                 ,
                                 
                                    
                                       i
                                    
                                    
                                       k
                                    
                                 
                              
                              
                                 t
                              
                           
                           <
                           0.01
                        . We first increase the absolute length of the physical infinity and set 
                           
                              
                                 d
                              
                              
                                 ∞
                              
                           
                           ←
                           2
                           
                              
                                 d
                              
                              
                                 ∞
                              
                           
                        . Then, the new value of the radius of curvature 
                           
                              
                                 r
                              
                              
                                 
                                    
                                       i
                                    
                                    
                                       k
                                    
                                 
                              
                              
                                 t
                              
                           
                         is calculated via Eq. (10), given that 
                           
                              
                                 m
                              
                              
                                 
                                    
                                       i
                                    
                                    
                                       k
                                    
                                 
                              
                              
                                 t
                              
                           
                           =
                           
                              
                                 m
                              
                              
                                 
                                    
                                       i
                                    
                                    
                                       k
                                    
                                 
                              
                              
                                 t
                              
                           
                           +
                           
                              
                                 d
                              
                              
                                 ∞
                              
                           
                         (if the artificial mirror is concave) or 
                           
                              
                                 m
                              
                              
                                 
                                    
                                       i
                                    
                                    
                                       k
                                    
                                 
                              
                              
                                 t
                              
                           
                           =
                           
                              
                                 m
                              
                              
                                 
                                    
                                       i
                                    
                                    
                                       k
                                    
                                 
                              
                              
                                 t
                              
                           
                           −
                           
                              
                                 d
                              
                              
                                 ∞
                              
                           
                         (if the artificial mirror is convex). The value of 
                           
                              
                                 κ
                              
                              
                                 j
                                 ,
                                 
                                    
                                       i
                                    
                                    
                                       k
                                    
                                 
                              
                              
                                 t
                              
                           
                         is then computed based on the new value of 
                           
                              
                                 r
                              
                              
                                 
                                    
                                       i
                                    
                                    
                                       k
                                    
                                 
                              
                              
                                 t
                              
                           
                         and the whole process is repeated until getting 
                           
                              
                                 κ
                              
                              
                                 j
                                 ,
                                 
                                    
                                       i
                                    
                                    
                                       k
                                    
                                 
                              
                              
                                 t
                              
                           
                           <
                           0.01
                        . The final value of 
                           
                              
                                 r
                              
                              
                                 
                                    
                                       i
                                    
                                    
                                       k
                                    
                                 
                              
                              
                                 t
                              
                           
                         is then used to calculate 
                           
                              
                                 q
                              
                              
                                 j
                                 ,
                                 
                                    
                                       i
                                    
                                    
                                       k
                                    
                                 
                              
                              
                                 t
                              
                           
                         via Eq. (13).

The entire flowchart of OIO for minimizing an unconstrained numerical function has been demonstrated in Fig. 6.

The optics inspired optimization of Section  3 is only applicable for unconstrained optimization where there is no hard constraint except the boundary constraints. To adapt OIO to solve constrained optimization problems we need to adjust:

1. The mirror type determination step of OIO (see Fig. 6) to include a feasibility based criterion beside the objective function criterion to decide upon the type of the artificial mirror. Such an adjustment may speed up steering of search toward feasible regions. To adapt the mirror type determination step of OIO we use from cv(
                        X
                     ) criterion beside 
                        f
                        
                           (
                           X
                           )
                        
                      criterion. If both 
                        
                           
                              
                                 
                                    O
                                 
                                 →
                              
                           
                           
                              j
                           
                           
                              t
                           
                        
                      and 
                        
                           
                              
                                 
                                    F
                                 
                                 →
                              
                           
                           
                              
                                 
                                    i
                                 
                                 
                                    k
                                 
                              
                           
                           
                              t
                           
                        
                      are feasible, we use from 
                        f
                        
                           (
                           X
                           )
                        
                      criterion to decide upon the type of mirror; otherwise we use from cv(
                        X
                     ) criterion. Fig. 7 revises the mirror type determination step in the adapted OIO algorithm for constrained optimization, whose idea is completely similar to that was used in Fig. 6. Accordingly, the spherical aberration correction step in the adapted OIO algorithm for constrained optimization is depicted in Fig. 8
                     . In this figure we have 
                        
                           
                              d
                           
                           
                              ∞
                           
                           
                              1
                           
                        
                        =
                        
                           |
                           
                              
                                 max
                              
                              
                                 j
                                 =
                                 1
                                 ,
                                 …
                                 ,
                                 N
                                 O
                              
                           
                           
                              {
                              f
                              
                                 (
                                 
                                    
                                       
                                          
                                             O
                                          
                                          →
                                       
                                    
                                    
                                       j
                                    
                                    
                                       1
                                    
                                 
                                 )
                              
                              }
                           
                           |
                        
                      and 
                        
                           
                              d
                           
                           
                              ∞
                           
                           
                              2
                           
                        
                        =
                        max
                        
                           {
                           1
                           
                              
                                 0
                              
                              
                                 −
                                 4
                              
                           
                           ,
                           
                              
                                 max
                              
                              
                                 j
                                 =
                                 1
                                 ,
                                 …
                                 ,
                                 N
                                 O
                              
                           
                           
                              {
                              c
                              v
                              
                                 (
                                 
                                    
                                       
                                          
                                             O
                                          
                                          →
                                       
                                    
                                    
                                       j
                                    
                                    
                                       1
                                    
                                 
                                 )
                              
                              }
                           
                           }
                        
                     . We may update 
                        
                           
                              d
                           
                           
                              ∞
                           
                           
                              1
                           
                        
                      and 
                        
                           
                              d
                           
                           
                              ∞
                           
                           
                              2
                           
                        
                      whenever we correct the artificial spherical aberration.

2. To prevent the population converges too early resulting in being suboptimal, and to heal the premature convergence, we can add a random perturbation term to the right side of Eq. (17) to probably improve the exploration ability of OIO for constrained optimization. The relevant equation is thus obtained as follows: 
                        
                           (19)
                           
                              
                                 
                                    
                                       
                                          I
                                       
                                       →
                                    
                                 
                                 
                                    j
                                 
                                 
                                    t
                                 
                              
                              =
                              
                                 
                                    ∑
                                 
                                 
                                    k
                                    =
                                    1
                                 
                                 
                                    K
                                 
                              
                              
                                 
                                    w
                                 
                                 
                                    k
                                 
                              
                              
                                 (
                                 
                                    
                                       
                                          
                                             I
                                          
                                          →
                                       
                                    
                                    
                                       j
                                       ,
                                       
                                          
                                             i
                                          
                                          
                                             k
                                          
                                       
                                    
                                    
                                       t
                                    
                                 
                                 +
                                 
                                    
                                       r
                                    
                                    
                                       j
                                    
                                 
                                 ×
                                 
                                    
                                       δ
                                    
                                    
                                       j
                                    
                                    
                                       t
                                    
                                 
                                 ×
                                 b
                                 e
                                 
                                    
                                       r
                                    
                                    
                                       j
                                    
                                    
                                       t
                                    
                                 
                                 ×
                                 
                                    
                                       e
                                    
                                    →
                                 
                                 )
                              
                           
                        
                      where, 
                        
                           
                              e
                           
                           →
                        
                        =
                        
                           
                              
                                 [
                                 1
                                 ,
                                 1
                                 ,
                                 …
                                 ,
                                 1
                                 ]
                              
                           
                           
                              1
                              ×
                              n
                           
                        
                      and 
                        
                           
                              δ
                           
                           
                              j
                           
                           
                              t
                           
                        
                      is a parameter which controls the perturbation magnitude and its value is set equal to 
                        max
                        
                           (
                           0
                           ,
                           ln
                           
                              
                                 H
                                 
                                    
                                       O
                                    
                                    
                                       j
                                    
                                    
                                       t
                                    
                                 
                              
                           
                           )
                        
                     . As the population evolves, we expect 
                        
                           
                              δ
                           
                           
                              j
                           
                           
                              t
                           
                        
                      gets smaller and therefore the perturbation magnitude gets smaller. 
                        
                           
                              r
                           
                           
                              j
                           
                        
                      is a random number with value equal to 
                        U
                        
                           [
                           −
                           0.75
                           ,
                           0.75
                           ]
                        
                     . 
                        
                           
                              
                                 ber
                              
                           
                           
                              j
                           
                           
                              t
                           
                        
                      is a Bernoulli random number which is equal to 1 with probability 
                        1
                        −
                        
                           
                              N
                              O
                              ×
                              t
                              +
                              j
                           
                           
                              #
                              
                                 eval
                              
                           
                        
                     , where 
                        #
                        
                           eval
                        
                      is the maximum number of function evaluations. As can be seen, the probability value decreases as the search proceeds, and this makes the effect of random perturbation less and less during the evolution process.

By “POIO” we address to a version of OIO algorithm which uses Eq. (19) to generate a new solution (“OIO” itself uses Eq. (17) to generate a new solution). The perturbation term in Eq. (19) is employed just after POIO finds a solution in the feasible region.

3. The way of updating the current population to attain a new population during the selection process (the Generation of a new solution step in the flowchart of Fig. 6). Once a complete solution was generated by Eq. (17) or (19), and before any evaluation being carried out on the quality of the solution, its feasibility is first checked with respect to the range constraints and values outside of the ranges are inserted back into their range randomly. To handle hard constraints, our constraint handling mechanism avoids the use of penalty function. Instead, we use the notion of Deb’s constraint-handling method  [34] in the selection process. Deb’s method uses a tournament selection operator, where two solutions are compared at a time based on three selection criteria described in Section  1. However in Deb’s approach, feasible solutions are always considered better than infeasible ones and therefore, this approach may have difficulties with problems in which the global optimum lies on the boundary between the feasible and infeasible regions  [35]. To remedy this deficiency, similar to the approach followed by Mezura et al.  [36], we try to preserve diversity by allowing the infeasible solutions having good value of the objective functions remain in the population. To select between 
                        
                           
                              
                                 
                                    I
                                 
                                 →
                              
                           
                           
                              j
                           
                           
                              t
                           
                        
                      and 
                        
                           
                              
                                 
                                    O
                                 
                                 →
                              
                           
                           
                              j
                           
                           
                              t
                           
                        
                     , we employ Deb’s constraint-handling method in a probabilistic manner (diversity mechanism). Based on the value of a parameter called 
                        
                           
                              S
                           
                           
                              r
                           
                        
                      (selection ratio), the selection will be performed either based only on the value of the objective function, regardless of feasibility, or based on Deb’s criteria  [36]. Typically at the beginning of the search when the algorithm seeks for fruitful feasible areas, using larger values of 
                        
                           
                              S
                           
                           
                              r
                           
                        
                      makes more sense since it allows accepting infeasible solutions located in promising areas of the search space. However, as the population evolves and feasible areas are detected the weight given to the selection of a better infeasible solution with a great sum of constraint violations value should be decreased in comparison with the one with a smaller sum of constraint violations value. Therefore, using a decreasing updating strategy for 
                        
                           
                              S
                           
                           
                              r
                           
                        
                      seems to be reasonable. We use a decreasing strategy to update the value of 
                        
                           
                              S
                           
                           
                              r
                           
                        
                      as follows: 
                        
                           (20)
                           
                              
                                 
                                    S
                                 
                                 
                                    r
                                 
                                 
                                    t
                                    +
                                    1
                                 
                              
                              =
                              max
                              
                                 {
                                 0
                                 ,
                                 
                                    
                                       S
                                    
                                    
                                       r
                                    
                                    
                                       0
                                    
                                 
                                 
                                    (
                                    1
                                    −
                                    
                                       (
                                       α
                                       t
                                       /
                                       
                                          
                                             
                                                
                                                   t
                                                
                                                
                                                   ˆ
                                                
                                             
                                          
                                          
                                             
                                                max
                                             
                                          
                                       
                                       )
                                    
                                    )
                                 
                                 }
                              
                           
                        
                      where 
                        
                           
                              
                                 
                                    t
                                 
                                 
                                    ˆ
                                 
                              
                           
                           
                              
                                 max
                              
                           
                        
                        =
                        
                           
                              #
                              
                                 eval
                              
                           
                           
                              N
                              O
                           
                        
                      is an estimation of the number of iterations passed by the algorithm, #eval is the maximum allowable number of objective function evaluations to solve a problem; NO is the size of population and 
                        α
                      is a coefficient. Following Mezura et al.  [48] we use 
                        
                           
                              S
                           
                           
                              r
                           
                           
                              0
                           
                        
                        =
                        0.55
                      as the initial value of 
                        
                           
                              S
                           
                           
                              r
                           
                        
                     .

Based on the strategy followed by Eq. (20) to update 
                        
                           
                              S
                           
                           
                              r
                           
                        
                     , at the beginning of the search process, there is a significant chance for updating the current population only based on the value of the objective function, regardless of the feasibility. However as the time proceeds, this chance decreases and selection based on Deb’s criteria precedes.

In order to increase the probability to generate better solutions, each individual 
                        
                           (
                           
                              
                                 
                                    
                                       O
                                    
                                    →
                                 
                              
                              
                                 j
                              
                              
                                 t
                              
                           
                           )
                        
                      in the population is allowed to generate a number of alternative solutions 
                        
                           (
                           
                              
                                 
                                    
                                       I
                                    
                                    →
                                 
                              
                              
                                 j
                              
                              
                                 t
                              
                           
                           )
                        
                      in each iteration i.e., multiple offspring are generated from a single solution  [36]. The number of generated solutions 
                        
                           (
                           
                              
                                 n
                              
                              
                                 f
                              
                           
                           )
                        
                      is a user defined parameter. Among the 
                        
                           
                              n
                           
                           
                              f
                           
                        
                      alternative solutions generated for each individual, we select only one of them (as the final 
                        
                           
                              
                                 
                                    I
                                 
                                 →
                              
                           
                           
                              j
                           
                           
                              t
                           
                        
                      solution) based on the sequential use of Deb’s tournament selection with a modification on the third condition (that is, when both solutions are infeasible) as follows:


                     
                        
                           
                              
                              
                                 
                                    
                                       
                                          If
                                       
                                       both solutions are infeasible then
                                    
                                 
                                 
                                    
                                       
                                       
                                          If
                                       
                                       
                                          U
                                          
                                             [
                                             0
                                             ,
                                             1
                                             ]
                                          
                                          ≤
                                          
                                             
                                                S
                                             
                                             
                                                r
                                             
                                             
                                                t
                                             
                                          
                                       
                                    
                                 
                                 
                                    
                                       
                                       Conduct a greedy selection between the two solutions based on   
                                          f
                                          
                                             (
                                             X
                                             )
                                          
                                        
                                       criterion.
                                    
                                 
                                 
                                    
                                       
                                       
                                          Else if
                                       
                                    
                                 
                                 
                                    
                                       
                                       Conduct a greedy selection between the two solutions based on cv(
                                          X
                                       ) criterion.
                                    
                                 
                                 
                                    
                                       
                                       
                                          End if
                                       
                                    
                                 
                                 
                                    
                                       
                                          End if
                                       
                                    
                                 
                              
                           
                        
                     
                  

The idea behind the above selection strategy is that at the beginning of the search when the algorithm searches in infeasible areas, neither the sum of constraint violations value nor the objective function value precedes directly the other one. However, as the value of 
                        
                           
                              S
                           
                           
                              r
                           
                        
                      is decreased (i.e., when the above if-then-else statement terminates more likely at the else part) and the feasible regions are detected, the feasibility issue becomes more important. The above modification has a significant role in preventing the search to approach unfavorable feasible regions too early. As an evidence, the modification has a very significant effect on the rate of successfully hitting the global optimum of problem g13 of CEC 2006 test suite (see Section  5.1) by OIO.

4. The feasible solution 
                        
                           
                              
                                 
                                    I
                                 
                                 →
                              
                           
                           
                              j
                           
                           
                              t
                           
                        
                      generated by Eq. (17) or (19) differs with 
                        
                           
                              
                                 
                                    O
                                 
                                 →
                              
                           
                           
                              j
                           
                           
                              t
                           
                        
                      in all dimensions. However on many functions, due to the early convergence of algorithm to the local optima, it may not be a good choice to make changes in all dimensions of 
                        
                           
                              
                                 
                                    O
                                 
                                 →
                              
                           
                           
                              j
                           
                           
                              t
                           
                        
                     . For some functions, even preserving a small amount of change in 
                        
                           
                              
                                 
                                    O
                                 
                                 →
                              
                           
                           
                              j
                           
                           
                              t
                           
                        
                      may produce more satisfactory results. Let 
                        
                           
                              c
                           
                           
                              j
                           
                           
                              t
                           
                        
                      ​denote the number of changes made in 
                        
                           
                              
                                 
                                    O
                                 
                                 →
                              
                           
                           
                              j
                           
                           
                              t
                           
                        
                     .

To simulate the number of changes 
                        
                           (
                           
                              
                                 c
                              
                              
                                 j
                              
                              
                                 t
                              
                           
                           )
                        
                     , we use a truncated geometric distribution  [44,49,50]. Using a truncated geometric distribution, we can set the number of changes dynamically with more emphasis given to the smaller/larger rate of changes. The following formula simulates the random number of changes made in 
                        
                           
                              
                                 
                                    O
                                 
                                 →
                              
                           
                           
                              j
                           
                           
                              t
                           
                        
                      to get a new solution. 
                        
                           (21)
                           
                              
                                 
                                    c
                                 
                                 
                                    j
                                 
                                 
                                    t
                                 
                              
                              =
                              
                                 ⌈
                                 
                                    
                                       ln
                                       
                                          (
                                          1
                                          −
                                          
                                             (
                                             1
                                             −
                                             
                                                
                                                   
                                                      (
                                                      1
                                                      −
                                                      
                                                         
                                                            p
                                                         
                                                         
                                                            c
                                                         
                                                      
                                                      )
                                                   
                                                
                                                
                                                   n
                                                
                                             
                                             )
                                          
                                          r
                                          )
                                       
                                    
                                    
                                       ln
                                       
                                          (
                                          1
                                          −
                                          
                                             
                                                p
                                             
                                             
                                                c
                                             
                                          
                                          )
                                       
                                    
                                 
                                 ⌉
                              
                              ,
                              
                              
                                 
                                    c
                                 
                                 
                                    j
                                 
                                 
                                    t
                                 
                              
                              ∈
                              
                                 {
                                 1
                                 ,
                                 2
                                 ,
                                 …
                                 ,
                                 n
                                 }
                              
                           
                        
                      where 
                        r
                        =
                        U
                        
                           [
                           0
                           ,
                           1
                           ]
                        
                      and 
                        
                           
                              p
                           
                           
                              c
                           
                        
                        <
                        1
                        ,
                        
                        
                           
                              p
                           
                           
                              c
                           
                        
                        ≠
                        0
                      is a control parameter. The greater positive (negative) value of 
                        
                           
                              p
                           
                           
                              c
                           
                        
                     , the smaller (greater) number of changes is recommended. Let us set 
                        
                           
                              
                                 
                                    U
                                 
                                 →
                              
                           
                           
                              j
                           
                           
                              t
                           
                        
                        ←
                        
                           
                              
                                 
                                    O
                                 
                                 →
                              
                           
                           
                              j
                           
                           
                              t
                           
                        
                     . 
                        
                           
                              c
                           
                           
                              j
                           
                           
                              t
                           
                        
                      components are selected randomly from 
                        
                           
                              
                                 
                                    I
                                 
                                 →
                              
                           
                           
                              j
                           
                           
                              t
                           
                        
                      and their values are assigned to their relevant components in 
                        
                           
                              
                                 
                                    U
                                 
                                 →
                              
                           
                           
                              j
                           
                           
                              t
                           
                        
                     . Finally we conduct selection between 
                        
                           
                              
                                 
                                    U
                                 
                                 →
                              
                           
                           
                              j
                           
                           
                              t
                           
                        
                      and 
                        
                           
                              
                                 
                                    O
                                 
                                 →
                              
                           
                           
                              j
                           
                           
                              t
                           
                        
                     .

@&#EXPERIMENTS@&#

In order to evaluate how well OIO performs on finding the global minimum of the constrained optimization problems, three category of problems are considered. The first category includes the first 13 well-studied problems (problems g01–g13) of CEC 2006 test suite  [51], by which we compare the performance of OIO with 8 constrained optimization algorithms. The second category of problems includes problems g14–g24 of CEC 2006 test suite (with the exception of g20 and g22 for which no feasible solutions ever been found). The main characteristics of these problems in terms of the number of linear inequalities, the number of nonlinear inequalities, the number of linear equalities and the number of nonlinear equalities can be found in  [51]. The third set of problems includes all benchmark problems of the special session on constrained optimization of 2010 IEEE Congress on Evolutionary Computation (CEC 2010)  [52]. The fourth set of the problems includes the Himmelblau’s nonlinear optimization problem together with five well-studied real-world engineering optimization problems on which we compare the performance of OIO with a large number of comparator algorithms. The results of our computational experiments indicate that OIO produces competitive results and ensures finding feasible solutions for all test problems almost in all runs.

In this section we evaluate the performance of OIO and POIO on 13 well-defined constrained optimization problems known as problems g01, g02, …, g13 of CEC 2006  [51]. These problems are widely recognized for having different properties and include various types of objective functions (i.e., linear, nonlinear, and quadratic) with different number of decision variables (
                           n
                        ) and linear/nonlinear equalities/inequalities. Some main characteristics of each problem in terms of the ratio between the feasible region and the entire search space, and the number of active constraints on the optima can be found in  [36]. Among these 13 problems, problems g02, g03, g08 and g12 are maximization problems which are transformed by using 
                           −
                           f
                           
                              (
                              X
                              )
                           
                         to minimization problems. All equality constraints 
                           
                              (
                              
                                 
                                    h
                                 
                                 
                                    j
                                 
                              
                              
                                 (
                                 X
                                 )
                              
                              =
                              0
                              )
                           
                        , are converted into inequality constraints 
                           
                              (
                              
                                 |
                                 
                                    
                                       h
                                    
                                    
                                       j
                                    
                                 
                                 
                                    (
                                    X
                                    )
                                 
                                 |
                              
                              ≤
                              ε
                              )
                           
                         with 
                           ε
                           =
                           0.0001
                        .

We compare the results obtained by OIO and POIO with those given by a number of constraint-handling algorithms. The list of these algorithms is as follows (#eval is the number of function evaluations): 
                           
                              –
                              SAFF  [4] with 
                                    #
                                    
                                       eval
                                    
                                    =
                                    1
                                    
                                    400
                                    
                                    000
                                 ;

COPSO  [5] with 
                                    #
                                    
                                       eval
                                    
                                    =
                                    350
                                    ,
                                    000
                                 ;

ISR  [6] with 
                                    #
                                    
                                       eval
                                    
                                    =
                                    350
                                    ,
                                    000
                                 ;

ATMES  [7] with 
                                    #
                                    
                                       eval
                                    
                                    =
                                    240
                                    ,
                                    000
                                 ;

SMES  [8] with 
                                    #
                                    
                                       eval
                                    
                                    =
                                    240
                                    ,
                                    000
                                 ;

ECHT-EP2  [9] with 
                                    #
                                    
                                       eval
                                    
                                    =
                                    240
                                    ,
                                    000
                                 ;

HCOEA  [10] with 
                                    #
                                    
                                       eval
                                    
                                    =
                                    240
                                    ,
                                    000
                                 ;


                                 
                                    α
                                 Simplex  [11] which uses 
                                    13
                                    ,
                                    000
                                    ≤
                                    #
                                    
                                       eval
                                    
                                    ≤
                                    130
                                    ,
                                    000
                                 .

For both OIO and POIO we set 
                           #
                           
                              eval
                           
                           =
                           225
                           ,
                           000
                        . As it can be seen, they evaluate a smaller number of objective functions in comparisons with 7 out of 8 comparator algorithms. The only algorithm which allows a smaller number of objective functions evaluation is the 
                           α
                        Simplex. However, the reason behind this reduction is that in the 
                           α
                        Simplex method, the objective function and the constraints are treated separately. So, when the order relation of the search points can be decided only by the satisfaction level of the constraints, the objective function is not evaluated  [11]. 30 independent runs are performed for each problem.

The parameters used in the experiment are initialized as follows: 
                           
                              –
                              The number of artificial light points is 150. That is 
                                    
                                       NO
                                    
                                    =
                                    150
                                 .


                                 
                                    
                                       
                                          p
                                       
                                       
                                          c
                                       
                                    
                                    =
                                    
                                       {
                                       
                                          
                                             
                                                U
                                                
                                                   (
                                                   0.1
                                                   ,
                                                   
                                                   0.2
                                                   )
                                                
                                                ×
                                                
                                                   (
                                                   n
                                                   −
                                                   
                                                      
                                                         n
                                                      
                                                      
                                                         
                                                            max
                                                         
                                                      
                                                   
                                                   )
                                                
                                                ,
                                                
                                                
                                                n
                                                ≤
                                                
                                                   
                                                      n
                                                   
                                                   
                                                      
                                                         max
                                                      
                                                   
                                                
                                                /
                                                2
                                             
                                          
                                          
                                             
                                                U
                                                
                                                   (
                                                   0.05
                                                   ,
                                                   
                                                   0.15
                                                   )
                                                
                                                ×
                                                
                                                   (
                                                   n
                                                   −
                                                   
                                                      
                                                         n
                                                      
                                                      
                                                         
                                                            max
                                                         
                                                      
                                                   
                                                   )
                                                
                                                ,
                                                
                                                
                                                n
                                                >
                                                
                                                   
                                                      n
                                                   
                                                   
                                                      
                                                         max
                                                      
                                                   
                                                
                                                /
                                                2
                                             
                                          
                                          
                                             
                                                U
                                                
                                                   (
                                                   0.1
                                                   ,
                                                   
                                                   0.2
                                                   )
                                                
                                                ,
                                                
                                                
                                                n
                                                =
                                                
                                                   
                                                      n
                                                   
                                                   
                                                      
                                                         max
                                                      
                                                   
                                                
                                             
                                          
                                       
                                    
                                 , where 
                                    
                                       
                                          n
                                       
                                       
                                          
                                             max
                                          
                                       
                                    
                                  is the size of the largest problem in the test suite (problem g02 with 
                                    
                                       
                                          n
                                       
                                       
                                          
                                             max
                                          
                                       
                                    
                                    =
                                    20
                                 ). We found that the number of changes made in the solutions should be relatively large when solving the benchmark problems.


                                 
                                    
                                       
                                          n
                                       
                                       
                                          f
                                       
                                    
                                    =
                                    max
                                    
                                       {
                                       2
                                       ,
                                       
                                          ⌊
                                          −
                                          
                                             
                                                n
                                             
                                             
                                                
                                                   max
                                                
                                             
                                          
                                          
                                             
                                                log
                                             
                                             
                                                10
                                             
                                          
                                          
                                             (
                                             2
                                             n
                                             /
                                             
                                                
                                                   n
                                                
                                                
                                                   
                                                      max
                                                   
                                                
                                             
                                             )
                                          
                                          ⌋
                                       
                                       }
                                    
                                  and 
                                    α
                                    =
                                    U
                                    
                                       (
                                       10
                                       ,
                                       20
                                       )
                                    
                                 .


                        Table 1
                         summarizes the results obtained by various algorithms. In this table, results are based on the best, mean, worst and standard deviation of the lowest function values obtained by each algorithm. As can be seen from the results of Table 1, OIO always reaches the global optimum of 12 out of 13 problems. For the other one problem (g02) OIO performs satisfactory.

From the results it can be seen that OIO is one of the most stable algorithms. Except for problem g02, for which none of algorithms could reach the global optimum in all runs, OIO always reaches the global optimum of the other 12 problems in all runs. Especially for problem g10 all of the comparator algorithms, except 
                           α
                        Simplex, fail to reach the global optimum in all runs. The situation for SAFF, ATMES, SMES and HCOEA algorithms is even more critical since these algorithms are not able to get the optimum exactly. However, OIO with at most 225,000 objective function evaluations always finds the global optimum falling within the accepted tolerance. The other problem for which the performance of OIO is the best among rivals is g07. The very small value of standard deviation indicates that OIO performs a very stable search. Among rivals COPSO with 340,000 objective function evaluations also exhibits a competitive performance. The performance of OIO on g13 is also remarkable and can be thought as the best one. The very small value of standard deviation indicates that OIO always finds the true global optimum. The performance of ECHT-EP2 with standard deviation of 1E−12 is also remarkable on g13.

Results indicate that the performance of POIO is also acceptable on many problems. Especially for g07 and g13 the performance of POIO is quite impressive. On g05 and g10 the performance of OIO is better than POIO but on g02 the performance of POIO is better than OIO. On other functions the performance of both algorithms is rather comparable. For most of optimization algorithms, problem g02 presents many problems to consistently reach the vicinity of the best known solution. However, POIO reports on average an objective value of −0.8022385 which is distinctly better than 
                           −
                           0.79010
                           ,
                           −
                           0.782715
                           ,
                           −
                           0.790148
                           ,
                           −
                           0.785238
                         and −0.7841868 provided by other algorithms. On this problem, HCOEA, ECHT-EP2 and COPSO have an acceptable average performance, too. The worst objective value reported by POIO (i.e., −0.7960956) is also far better than that of other algorithms. As can be seen, the performance of OIO on g02 is not very competitive. Clearly this is the perturbation term used in Eq. (19) that causes POIO exhibits such a consistence performance. 
                           
                              –
                              SAFF and SMES algorithms almost provide the poorest results. These algorithms are strictly inferior to OIO and POIO on problems g02, g05, g07, g09, g10 and g13. The only problem on which SMES beats OIO and POIO in terms of the best performance is g02.

Comparing with ATMES, both of OIO and POIO are superior on problems g10 and g13 with respect to the best performance; on problems g02, g05, g07, g09, g10 and g13, with respect to the average and worst performance and on problems g02, g03, g05–g13 with respect to the standard deviation values (we give this latter comparison since ATMES, OIO and POIO algorithms have been implemented in MATLAB).

Comparing with 
                                    α
                                 Simplex method which uses the notion of a constrained method in the body of the Nelder–Mead simplex method, OIO based algorithms perform generally better on problems g02, g07 and g13. Beside g07 and g13 problems, OIO and POIO are superior further on g10 in comparison with HCOEA. OIO and POIO are better than ISR in terms of the mean and worst values reported for problems g02, g10 and g13.

COPSO and ECHT-EP2 algorithms are among the most recent constrained-handling algorithms that provide an excellent yardstick for measuring the performance of other algorithms. Both of these algorithms are inferior to OIO on g10 and inferior to POIO on g02 in terms of the mean and worst case performance (unlike ECHT-EP2, COPSO is inferior to OIO and POIO on g13 on all measures). Performance of these algorithms is almost the same on other problems.

All algorithms in Table 1 are ranked based on their best, mean and worst performance and their rank is shown in parenthesis on each problem. The overall ranking point and therefore the final rank of each algorithm have been presented in the last row. The best possible ranking point for an algorithm is 39 point. From the ranking points, it is obvious that the performance of OIO (with total points equal to 52) and POIO (with total points equal to 57) is the best among 8 comparator algorithms and therefore they are ranked first. While the ranking points of COPSO and ECHT-EP2 are almost close to the total points gathered by OIO and POIO, the ranking points of SMES/SAFF and ATMES are two and three times greater.

We do not include the standard deviations into our pointing system, because (1) the standard deviation values resulted by OIO and POIO are very small and in many cases are very close or equal to the best values obtained by the other methods. Even for problems g02, g07 and g13, the standard deviations reported by OIO and POIO are the lowest values among all rivals, (2) we do not know to what level of precision the standard deviation values produced by different methods have been rounded (this may be depended on the type of the language used for implementation of algorithms).

We conduct an approximate 
                           t
                        -test  [1] between the mean performance of the comparator algorithms to examine if there exists a statistically significant improvement made by OIO and POIO over comparator algorithms in the solution quality. The following statistics is used for the 
                           t
                        -test. 
                           
                              (22)
                              
                                 
                                    
                                       t
                                    
                                    
                                       0
                                    
                                 
                                 =
                                 
                                    
                                       
                                          
                                             
                                                
                                                   y
                                                
                                                
                                                   ̄
                                                
                                             
                                          
                                          
                                             1
                                          
                                       
                                       −
                                       
                                          
                                             
                                                
                                                   y
                                                
                                                
                                                   ̄
                                                
                                             
                                          
                                          
                                             2
                                          
                                       
                                    
                                    
                                       
                                          
                                             
                                                
                                                   S
                                                
                                                
                                                   1
                                                
                                                
                                                   2
                                                
                                             
                                             /
                                             
                                                
                                                   n
                                                
                                                
                                                   1
                                                
                                             
                                             +
                                             
                                                
                                                   S
                                                
                                                
                                                   2
                                                
                                                
                                                   2
                                                
                                             
                                             /
                                             
                                                
                                                   n
                                                
                                                
                                                   2
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           
                         where 
                           
                              
                                 
                                    
                                       y
                                    
                                    
                                       ̄
                                    
                                 
                              
                              
                                 1
                              
                           
                         and 
                           
                              
                                 
                                    
                                       y
                                    
                                    
                                       ̄
                                    
                                 
                              
                              
                                 2
                              
                           
                         are mean values and 
                           
                              
                                 S
                              
                              
                                 1
                              
                           
                         and 
                           
                              
                                 S
                              
                              
                                 2
                              
                           
                         denote the standard deviations of the results obtained by two different approaches. 
                           
                              
                                 n
                              
                              
                                 1
                              
                           
                         and 
                           
                              
                                 n
                              
                              
                                 2
                              
                           
                         are the number of independent runs of the two approaches. The degree of freedom is calculated as follows: 
                           
                              (23)
                              
                                 d
                                 f
                                 =
                                 
                                    ⌊
                                    1
                                    /
                                    
                                       (
                                       
                                          (
                                          
                                             
                                                
                                                   (
                                                   
                                                      
                                                         
                                                            
                                                               S
                                                            
                                                            
                                                               1
                                                            
                                                            
                                                               2
                                                            
                                                         
                                                         /
                                                         
                                                            
                                                               n
                                                            
                                                            
                                                               1
                                                            
                                                         
                                                      
                                                      
                                                         
                                                            
                                                               S
                                                            
                                                            
                                                               1
                                                            
                                                            
                                                               2
                                                            
                                                         
                                                         /
                                                         
                                                            
                                                               n
                                                            
                                                            
                                                               1
                                                            
                                                         
                                                         +
                                                         
                                                            
                                                               S
                                                            
                                                            
                                                               2
                                                            
                                                            
                                                               2
                                                            
                                                         
                                                         /
                                                         
                                                            
                                                               n
                                                            
                                                            
                                                               2
                                                            
                                                         
                                                      
                                                   
                                                   )
                                                
                                             
                                             
                                                2
                                             
                                          
                                          /
                                          
                                             
                                                n
                                             
                                             
                                                1
                                             
                                          
                                          )
                                       
                                       +
                                       
                                          (
                                          
                                             
                                                
                                                   (
                                                   
                                                      
                                                         
                                                            
                                                               S
                                                            
                                                            
                                                               2
                                                            
                                                            
                                                               2
                                                            
                                                         
                                                         /
                                                         
                                                            
                                                               n
                                                            
                                                            
                                                               2
                                                            
                                                         
                                                      
                                                      
                                                         
                                                            
                                                               S
                                                            
                                                            
                                                               1
                                                            
                                                            
                                                               2
                                                            
                                                         
                                                         /
                                                         
                                                            
                                                               n
                                                            
                                                            
                                                               1
                                                            
                                                         
                                                         +
                                                         
                                                            
                                                               S
                                                            
                                                            
                                                               2
                                                            
                                                            
                                                               2
                                                            
                                                         
                                                         /
                                                         
                                                            
                                                               n
                                                            
                                                            
                                                               2
                                                            
                                                         
                                                      
                                                   
                                                   )
                                                
                                             
                                             
                                                2
                                             
                                          
                                          /
                                          
                                             
                                                n
                                             
                                             
                                                2
                                             
                                          
                                          )
                                       
                                       )
                                    
                                    ⌋
                                 
                                 .
                              
                           
                        
                     

The value of 
                           
                              
                                 t
                              
                              
                                 0
                              
                           
                         statistics has been listed in Table 2
                         for each pairwise comparison. We do not perform the 
                           t
                        -test for the cases where two algorithms have revealed the same performance. From the results of Table 2 we can see that on many cases for which we conducted the 
                           t
                        -test, there is a significant difference between the mean values provided by OIO/POIO and other rivals. However, the statistical analysis fails to realize the superiority of OIO/POIO over SAFF on g05, over 
                           α
                        Simplex on g13 and over SMES on g06, for the reason that they report a relatively larger standard deviation value. The statistical analysis shows that there is only one problem (g02) that the performance of OIO is significantly inferior to COPSO and HCOEA. Such a conclusion comes from the fact that the value of 
                           
                              
                                 t
                              
                              
                                 0
                              
                           
                         is relatively large and positive. There is also no significant difference between the mean performance of OIO and 
                           α
                        Simplex on g10. While the same conclusion is also true when comparing POIO with COPSO or ISR, it fails when comparing POIO with ECHT-EP2 and 
                           α
                        Simplex. Our statistical analysis also shows that the difference between POIO and ISR or ECHT-EP2 is not significant on g05, though ISR and ECHT-EP2 always find the global optimum and therefore perform better than POIO. The performance of POIO on g02 is better than most of the algorithms. However, the differences are not significant between POIO and COPOSO or HCOEA.

In conclusion, from the results on 13 constrained optimization problems we can see that our approach is efficient and can compete in the best way with current constraint handling algorithms. With respect to a slightly better performance of OIO compared to POIO, in the remainder of the paper we just investigate the performance of OIO.

In this section, we show the experimental results of OIO on the remaining test problems incorporated in CEC 2006  [51]. These problems are g14–g19, g21, g23 and g24. We report the performance of OIO, ANT-
                           β
                           [13], and DSS-MDE  [1] on these benchmark problems.

The maximum number of function evaluations is set to 500,000 according to the setting in CEC 2006. All parameter setting are kept unchanged, same as those were used in Section  5.1 except for the population size which is doubled for problems g14, g19 and g23. Table 3
                         summarizes the statistics gathered from 25 independent trials performed for each problem. For each trial, the function error value 
                           f
                           
                              (
                              
                                 
                                    X
                                 
                                 
                                    ∗
                                 
                              
                              )
                           
                           −
                           f
                           
                              (
                              
                                 
                                    X
                                 
                                 
                                    
                                       optimal
                                    
                                 
                              
                              )
                           
                         is recorded, where 
                           f
                           
                              (
                              
                                 
                                    X
                                 
                                 
                                    ∗
                                 
                              
                              )
                           
                         is the best function value obtained in that trial and 
                           f
                           
                              (
                              
                                 
                                    X
                                 
                                 
                                    
                                       optimal
                                    
                                 
                              
                              )
                           
                         is the optimal function value. Then the function error values for the 25 trials are compared and the best, median, mean, worst, standard deviation (stdev) and the rate of feasible solutions (%Fes) are reported. From the results it can be seen that unlike ANT-
                           β
                        , both of OIO and DSS-MDE achieve 100% feasible rate for all test functions.

While on problems g14, g16 and g21, OIO shows the best performance on all criteria, DSS-MDE exhibits the best performance on problems g17 and g19. The performance of both algorithms is comparable on problems g15, g18 and g24. On problem g23, OIO reports the best values for the median, worst, mean and standard deviation criteria and only fails to locate the optimal value with the accuracy level obtained by DSS-MDE. This scenario is reversed on problems g17, where OIO performs the best only in terms of the best case performance.

Results indicate that ANT-
                           β
                         algorithm has a weak performance. It can be seen that OIO is clearly better than ANT-
                           β
                         on all problems in terms of all performance criteria. Results also indicate that ANT-
                           β
                         is not able to ensure finding feasible solutions in all runs, despite performing a much larger number of evaluations.

For problems g17 and g21, the best solutions found by OIO are slightly better than the optimal values reported for these problems since CEC 2006 contest. The minus sign behind the values reported for the best function error values supports such a conclusion.

In this section we investigate the performance of OIO on all benchmark functions of the special session on constrained optimization of 2010 IEEE Congress on Evolutionary Computation (CEC 2010)  [52]. These problems are introduced by C01 to C18 in Table 4
                        , respectively. On these benchmark problems all parameters of OIO are kept constant, same as those were used in Section  5.1 except for the population size (NO) which is set equal to 200 and 
                           
                              
                                 p
                              
                              
                                 c
                              
                           
                         which is set equal to 
                           U
                           
                              (
                              0.01
                              ,
                              
                              0.02
                              )
                           
                           ×
                           n
                         for problems C01, C02, C08, C10 and C13. The number of function evaluations (#eval) is also equal to 200,000 for all 10 dimensional problems.

We have compared the performance of OIO with one of the most successful constrained optimization algorithm well-known as ECHT-DE  [12]. ECHT is an ensemble of constraint handling techniques with four constraint handling techniques as an efficient alternative to the trial and error based search for the best constraint handling technique with its best parameters for a given problem  [12]. In ECHT, each constraint handling technique has its own population and each function call is efficiently utilized. ECHT-DE combines the notion of ECHT with the search capability of differential evolution (DE).


                        Table 4 summarizes the statistics values achieved by ECHT-DE and OIO. From the results it can be seen that OIO competes in the best way with ECHT-DE. While on some problems it is inferior to ECHT-DE, on several problems it performs superior than ECHT-DE. Though on many problems both algorithms achieve almost close outputs, there is a very large gap between the performances on problems C14 and C15, for which the performance of OIO is far better than ECHT-DE based on mean, worst and standard deviation statistics.

Both of OIO and ECHT-DE are able to find feasible solutions of all runs on many problems. More exactly, OIO finds feasible solutions for 17 out of 18 problems in each of its 25 runs and hence achieves a 100% feasibility rate for these problems. The exception is problem C11 for which the feasibility rate of OIO is only 68%. ECHT-DE finds feasible solutions for 16 out of 18 problems in each of its 25 runs. It fails on problems C11 and C12. However, its feasibility rate for these problems is good and equal to 92% and 96%.

Using the same statistical test introduced by Eqs. (22) and (23), the last column in Table 4 determines whether the difference between OIO and ECHT-DE is significant or insignificant. In case of a significance difference, the name of winner algorithm comes in parenthesis. As can be seen on 6 problems the differences are insignificant. However, the statistical test fails to recognize the superiority of OIO over ECHT-DE on C14. On 5 problems OIO performs significantly better than ECHT-DE, while on 5 problems ECHT-DE performs significantly better than OIO. Since on problems C11 and C12, ECHT-DE fails to reach always a feasible solution, we abstain to conduct any 
                           t
                        -test.

Both algorithms have been ranked based on their best, mean, worst and standard deviation performance and their rank is shown in parenthesis on each problem. The overall ranking point and therefore the final rank of each algorithm have been presented in the last row. While the ranking points of OIO and ECHT-DE are almost close to each other, this is OIO which gathers fewer points and achieves the first rank of performance.

This problem has been originally proposed by Himmelblau  [53]. In this problem, there are five design variables, six nonlinear inequality constraints and 10 boundary conditions. This problem was originally solved using the Generalized Reduced Gradient (GRG) method  [53]. The problem was also solved using several penalty based methods (e.g. death penalty, static penalty, dynamic penalty, annealing penalty, adaptive penalty and co-evolutionary penalty) and multi-objective (MGA) method  [32,3]. Takahama and Sakai  [26] solved this problem with an improved version of the 
                           ε
                        PSO algorithm. Omran and Salman  [54] have solved this problem using CODEQ algorithm. We divide the comparator algorithms in twofold; those which used a few number of objective function evaluations (
                           #
                           
                              eval
                           
                           =
                           5000
                        ) and those which used a relatively larger number of evaluations (
                           #
                           
                              eval
                           
                           >
                           5000
                        ). To incorporate OIO in both categories, we execute it under 
                           #
                           
                              eval
                           
                           =
                           5000
                         and 
                           #
                           
                              eval
                           
                           =
                           30
                           ,
                           000
                        .

The value of OIO’s control parameters on both of the Himmelblau’s nonlinear optimization problem and engineering design problems (see Section  5.5) are kept unchanged, same as those were set in Section  5.1. The only exceptions are the population size (NO) and the number of function evaluations (#eval). We set 
                           
                              NO
                           
                           =
                           19
                         for all problems (except for the pressure vessel design optimization problem). 30 independent runs are performed by OIO for each problem.

Results obtained by various algorithms on Himmelblau’s nonlinear optimization problem are summarized in Table 5
                        . Without any doubt, OIO is the most effective algorithm. On average, with only 25,041 function evaluations, OIO finds the true optimum in each run, while 
                           ε
                        PSO and CODEQ algorithms which are the most competitive rivals, may need at least 50,000 evaluations to find near optimal solutions. The performance of Co-evolutionary penalty method with 
                           #
                           
                              eval
                           
                           =
                           900
                           ,
                           000
                         is also not satisfactory. Even with #eval  = 5000, OIO performs evidently competitive since it dominates all rivals with a stable performance. Such a result indicates that the rank of OIO among 10 rivals is first when solving Himmelblau’s nonlinear optimization problem.

In order to assess the performance of OIO on real word engineering problems, five well-studied problems are adopted from the literature. These problems are: the tension/compression spring design optimization problem, the welded beam design optimization problem (in two cases), the speed reducer design optimization problem (in two cases), the pressure vessel design optimization problem and the three-bar truss design optimization problem. The mathematical expression of these problems and their special cases can be found in  [50]. We compare the performance of OIO on mechanical engineering design problems with a large number of algorithms such as: ICA-4  [14], MPSO  [15], MBFOA  [16], DSS-MDE  [1], Sic-PSO  [17], RSPSO  [18], PSRE  [19], CPSO-DD  [20], IHS  [21], COPSO  [5], CPSO  [22], CDE  [23], DES  [24], FSA  [25], 
                           ε
                         PSO  [26], 
                           V
                           
                              (
                              μ
                              +
                              1
                              )
                           
                        -ES  [27], (
                           μ
                           +
                           λ
                        )-ES  [28], IPSO  [29], S&C  [30], SES  [31] and Co-evolutionary penalty  [32]. Our results demonstrate that OIO is an effective algorithm whose performance on most of the problems exceeds or matches the best performance among the comparator algorithms.

Minimization of the weight of a tension/compression spring subject to constraints on minimum deflection, shear stress, surge frequency and limits on outside diameter is intended  [32]. This problem has three continuous variables defined as: the wire diameter, the mean coil diameter and the number of active coils.

Given the maximum number of functions evaluated by the comparator algorithms, we classify them into three categories and run OIO under 
                              #
                              
                                 eval
                              
                              =
                              15
                              ,
                              000
                           , 24,000 and 48,000 to make the comparison in each category possible. Results are tabulated in Table 6
                           . It can be seen that even with a relatively few number of evaluations 
                              
                                 (
                                 #
                                 
                                    eval
                                 
                                 =
                                 15
                                 ,
                                 000
                                 )
                              
                            OIO performs well with a stable performance. Moreover, the performance of OIO improves as the maximum number of evaluations increases. In terms of the mean, worst, and standard deviation, OIO dominates all of the 18 comparator algorithms in three categories. It is worth to note that OIO exhibits such a performance with the minimum number of function evaluations in each category. Differences in the number of function evaluations are more significant especially in the third category. However, there are several algorithms that exhibit acceptable performance. Among them, the performance of DSS-MDE and COPSO and FSA is noticeable. Once again results confirm that OIO is deserved to take the first place among all rivals.

The problem is to minimize the cost of a beam subject to constraints on shear stress, bending stress in the beam, buckling load on the bar and the end deflection of the beam. The design variables are the thickness of the weld, length of the weld, width of the beam, and the beam thickness. There are two types of mathematical formulation for this problem. The first one (case I) has 6 inequality constraints  [17] but the second one (case II) has 5 inequality constraints  [30].


                           Table 7
                            summarizes the statistics reported by different algorithms on both cases of the welded beam design optimization problem. For the case I formulation, OIO requires on average 16,598 evaluations to ends up it search before all solutions in the population become the same and getting stagnation. Even with such a relatively few number of evaluations, OIO is able to find the global optimum of all runs with the precision of 1E−16. However, none of 13 rivals could exhibit such a performance. Although SiC-PSO, 
                              
                                 (
                                 μ
                                 +
                                 λ
                                 )
                              
                           -ES, COPSO, DES and CPSO-DD algorithms are able to find a near optimal solution, they are failed to compete with OIO on all criteria. Among rivals, COPSO, DES and CPSO-DD algorithms are the most effective algorithms which need to evaluate 30,000, 36,000 and 50,000 objective functions to reveal their ultimate performance. However, with almost half of the number of functions evaluated by COPSO, OIO strongly dominates them. Under case II formulation, the situation does not change and on average 17,887 function evaluations is enough for OIO to always hit the global optimum. Here, the results obtained by DSS-MDE with 24,000 function evaluations are better than other comparator algorithms and almost equal to those given by OIO. However in terms of the standard deviation value, OIO is more dependable than DSS-MDE in converging to the true optimum in all runs. From these analysis we can infer that on the welded beam design optimization problem OIO is again ranked strictly first among 19 rivals.

The weight of a speed reducer is to be minimized subject to constraints on bending stress of the gear teeth, surface stress, transverse defections of the shafts and stresses in the shaft. The variables are the face width, module of the teeth, number of teeth in the pinion, length of the first shaft between bearings, length of the second shaft between bearings, and the diameter of the first and second shafts  [30]. All variables are continuous except 
                              
                                 
                                    x
                                 
                                 
                                    3
                                 
                              
                            which is an integer. There are 11 constraints in the problem. Similar to welded beam design optimization problem, two cases of the problem have been considered in the literature which differ with each other in the allowable range they consider for variable 
                              
                                 
                                    x
                                 
                                 
                                    5
                                 
                              
                            (see Appendix A in  [50]).

Once again the performance of OIO on both cases is quite impressive (see Table 8
                           ). It always finds the optimum. For both cases the standard deviation values reported by OIO are very low which indicate that OIO behaves very stable in the task of hitting the optimum. As can be seen, OIO reveals such a performance with almost 22,000 function evaluations which is the minimum among all rivals. The only algorithm that can compete with OIO on case I is DES which shows rather the same best and mean performance. However, in terms of the standard deviation value OIO performs much better than DES. On case II, DSS-MDE performs very competitive. It finds the optimum solution in all runs with the same level of precision achieved by OIO. Therefore we can rank both of OIO and DSS-MDE algorithms first among all comparator algorithms when solving the speed reducer design optimization problem.

A cylindrical vessel is capped at both ends by hemispherical heads. The objective is to minimize the total cost, including the cost of the materials, forming and welding. There are four design variables: Thickness of the shell 
                              
                                 (
                                 
                                    
                                       x
                                    
                                    
                                       1
                                    
                                 
                                 )
                              
                           , thickness of the head 
                              
                                 (
                                 
                                    
                                       x
                                    
                                    
                                       2
                                    
                                 
                                 )
                              
                           , the inner radius 
                              
                                 (
                                 
                                    
                                       x
                                    
                                    
                                       3
                                    
                                 
                                 )
                              
                           , and the length of the cylindrical section of the vessel 
                              
                                 (
                                 
                                    
                                       x
                                    
                                    
                                       4
                                    
                                 
                                 )
                              
                           . 
                              
                                 
                                    x
                                 
                                 
                                    1
                                 
                              
                            and 
                              
                                 
                                    x
                                 
                                 
                                    2
                                 
                              
                            are integer multiples of 0.0625. To solve this mixed integer problem we round the value of 
                              
                                 
                                    x
                                 
                                 
                                    1
                                 
                              
                            and 
                              
                                 
                                    x
                                 
                                 
                                    2
                                 
                              
                            to their integer part and multiply them by 0.0625.

Experimental results on this problem are shown in Table 9
                           . 50,000 function evaluations is allowed for OIO. We have considered two extreme levels for the number of individuals in the population, i.e.,  NO  = 3 and NO  = 200. When the number of individuals is too few, stagnation may occur. Every time stagnation occurs, the whole population is reinitialized and the searching process is continued. In this way the algorithm performs as a multi-restart algorithm. Results indicate that the performance of OIO is still acceptable and competitive. When the population is small, OIO is able to find the optimal solution. However, large populations cause that OIO converges slowly and hence it cannot be able to find the optimal solution with a high precision within 30 runs. In terms of the worst case performance, large populations give OIO a better performance with a relatively small deviations rather than small populations. Instead, the mean performance of small populations is better than that given by the large populations. Comparing with rivals, OIO with a large population is always inferior to COPSO-DD on all criteria except for the standard deviation. The best performance of OIO with a small population is optimal and the same with that given by COPSO-DD. But OIO is still inferior on the remaining criteria. OIO is able to beat the other rivals on this problem, though some of them evaluate a huge number of solutions.

This last problem deals with the design of a three-bar truss structure in which the volume should be minimized subject to stress constraints  [30]. The problem has two decision variables and three nonlinear constraints. We compare the performance of OIO with that of DSS-MDE and S&C algorithms in Table 10
                           .

With only 7560 function evaluations, OIO always find the global optimum with a standard deviation of 5.06E−14. However, DSS-MDE with 15,000 function evaluations is failed to ensure optimality in all runs. In spite of evaluating a larger number of solutions, the performance of S&C is not very competitive. Clearly, OIO is the most successful algorithm which should be ranked first among rivals.

The optics inspired optimization algorithm (OIO) has been introduced recently as a new nature inspired metaheuristic for numerical optimization. OIO is a population based search methodology that treats the surface of the numerical function to be optimized as a reflecting surface in which each peak is assumed to reflect as a convex mirror and each valley to reflect as a concave one. In each iteration, a number of artificial light points (individuals) are assumed to lie in front of the function surface and their artificially glittered ray is reflected back by the function surface, given that the surface is convex or concave, and the position of the artificial image is formed as a new solution in the search domain based on the mirror equations adopted from physics of optics.

The adaptation of OIO to solve constrained optimization problems was investigated in this paper. There are several constraint handling techniques which have been proposed for handling infeasible solutions. One technique is to develop special representations and consequently design special operators to enforce feasibility of solutions. However, this approach is problem dependent. Repair methods are also applicable when it is relatively easy to repair an infeasible solution to obtain a feasible one. The difficulty with this method is that there is no unique way to design the intended repair operator. The most common approach for handling constraints is the method of penalty function. However, it is often required to reset the penalty factors for different kinds of optimization problems and this sounds a main drawback for such methods. Another constraint handling mechanism is the method of multi objective optimization in which the objective function 
                        f
                        
                           (
                           
                              
                                 X
                              
                              →
                           
                           )
                        
                      and the constraint violation measures 
                        c
                        
                           
                              v
                           
                           
                              j
                           
                        
                        
                           (
                           
                              
                                 X
                              
                              →
                           
                           )
                        
                      constitute a (
                        m
                        +
                        1
                     )-dimensional vector and the attempt is to minimize the components of the composite vector. The main drawbacks of such methods is that while the computational complexity increases, the problem difficulty is not decreased.

To adapt OIO for solving a constrained optimization problem a measure of feasibility was used beside the objective criterion to bias the search toward feasible regions. Generation of multiple offspring was also allowed to increase the probability of an individual to generate better solutions and to prevent early convergence to lessfruitful feasible areas. Moreover, a diversity mechanism was adopted, which allows partly the survival of promising infeasible solutions beside feasible solutions.

The performance of OIO was tested on a set of 22 benchmark problems of CEC 2006, on a set of 18 benchmark problems of CEC 2010, on Himmelblau’s nonlinear optimization problem and on five well-studied engineering design optimization problems. Our comparisons with a large number of comparator algorithms indicated that OIO is a very competitive algorithm and can provide outstanding results. In our comparisons there were included several noticeable algorithms such as COPSO, ECHT-EP2, 
                        α
                     Simplex.

OIO is in its infancy. It is therefore the author’s hope that this paper inspires future works on developing OIO theory and applications. The algorithm performance indicates that it converges fast toward the global minimum. However, any statement on the convergence behavior of OIO should be based on the theoretical foundations or a formal convergence proof. Beside, self-adaptive strategies and multiple populations could be employed in OIO as they are used in other evolutionary algorithms. The performance of OIO can be further tested on single as well as multi objective real world engineering optimization problems addressed in the literature.

@&#ACKNOWLEDGMENT@&#

The author would like to express his appreciation to the Iranian National Science Foundation for the financial support of this work.

@&#REFERENCES@&#

