@&#MAIN-TITLE@&#Elastic shapes models for improving segmentation of object boundaries in synthetic aperture sonar images

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           SAS imagery exhibits high levels of background noise and ambiguous target boundaries.


                        
                        
                           
                           Segmentation algorithms without prior shape knowledge typically fail.


                        
                        
                           
                           We model shapes as elements of a Riemannian manifold with an elastic metric.


                        
                        
                           
                           Such elastic shape models serve as shape priors in a Bayesian active contour model.


                        
                        
                           
                           We show improvement in boundary segmentation with shape prior versus without prior.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Riemannian geometry

Shape analysis

Bayesian active contours

Synthetic aperture sonar

@&#ABSTRACT@&#


               
               
                  We present a variational framework for naturally incorporating prior shape knowledge in guidance of active contours for boundary extraction in images. This framework is especially suitable for images collected outside the visible spectrum, where boundary estimation is difficult due to low contrast, low resolution, and presence of noise and clutter. Accordingly, we illustrate this approach using the segmentation of various objects in synthetic aperture sonar (SAS) images of underwater terrains. We use elastic shape analysis of planar curves in which the shapes are considered as elements of a quotient space of an infinite dimensional, non-linear Riemannian manifold. Using geodesic paths under the elastic Riemannian metric, one computes sample mean and covariances of training shapes in each classes and derives statistical models for capturing class-specific shape variability. These models are then used as shape priors in a variational setting to solve for Bayesian estimation of desired contours as follows. In traditional active contour models curves are driven towards minimum of an energy composed of image and smoothing terms. We introduce an additional shape term based on shape models of relevant shape classes. The minimization of this total energy, using iterated gradient-based updates of curves, leads to an improved segmentation of object boundaries. This is demonstrated using a number of shape classes in two large SAS image datasets.
               
            

@&#INTRODUCTION@&#

An object of interest in an image can be characterized to some extent by the shape of its external boundary. It is therefore important to develop procedures for boundary extraction in problems of detection, tracking, and classification of objects in images. Certain methods for extraction make use of only the image data itself to define target boundaries while others additionally assume the availability of prior knowledge about the shape of the target to be segmented. A large body of research exists on the former approach (see for example [1,2] and papers that followed) whereas the latter is relatively less explored, with a few exceptions [3–5]. As segmentation algorithms become more sophisticated, they are tested in more difficult imaging environments of real-world scenarios where images do not have enough contrast to provide crisp, clear boundaries. One example of this scenario is when images are collected in a spectrum outside the visible domain. Here, images are typically of low contrast and contain excessive clutter, causing standard boundary extraction algorithms to fail. For instance, Fig. 8 shows some examples of synthetic aperture sonar (SAS) images that are difficult to segment automatically. Thus, it is of increasing importance that boundary extraction algorithms make use of prior knowledge about expected targets in order to help compensate for the bad data quality. Our goal is to present a method for representing, modeling, and incorporating prior information about shapes of closed curves in a boundary extraction algorithm and demonstrate its effectiveness in imaging scenarios outside the visual spectrum. We clarify that our goal is not to develop a general purpose image segmentation algorithm, but to use the contextual knowledge to determine expected object shapes and to use this information in boundary extraction. Here, one must provide prior knowledge in the form of training shapes that are representative of the target boundary desired to be segmented.

One particular example of interest to us is boundary extraction in synthetic aperture sonar (SAS) imagery in military undersea reconnaissance, although our procedure can be applied to a wide variety of applications such as medical diagnosis and infrared surveillance. The task of automatically extracting object contours in SAS imagery is challenging due to the following reasons.
                        
                           1.
                           These images are typically low contrast due to a low signal-to-noise ratio (SNR), i.e. the background and target can be quite similar in intensity levels and boundaries are not clear. (By SNR we mean the ratio of average target pixel intensity to average background pixel intensity.)

The SAS imagery used here comes from a side scan sonar, where an autonomous underwater vehicle travels in a straight line and sends out a series of sound chirps from its side. Since one target side faces away from the sonar, the target is partially occluded in sound shadow, which introduces missing boundaries and causes the shape of a highlighted target to vary widely with its aspect angle.

The resolution of sonar images is often much lower than those obtained in the visible spectrum, resulting in relatively fewer pixels on targets.

Underwater imaging environments normally contain high speckle clutter due to rough seabed backgrounds.

These factors make it difficult to perform boundary extractions on SAS imagery using standard active contour and other boundary segmentation methods, and methods that can incorporate additional information are required. We will utilize manually-extracted boundaries of different known classes of sea-floor targets imaged via SAS as prior knowledge to the algorithm.

The term active contour, or snake, refers to a dynamic curve that evolves to capture desired features in an image domain. There are two broad categories of active contour methods: parametric and geometric, each with their own set of advantages and drawbacks. Parametric active contours are explicitly defined parameterized curves, and the forces that drive the snake evolution are applied to the curve directly; whereas, geometric active contours are implicitly defined as zero level sets of higher-dimensional functions across the entire image domain. Here, we provide a brief survey of past and present work in these two areas.

Many of the past and current parametric snake models are based on the ideas presented in the seminal paper of Kass et al. [6]. They define an energy function comprised of two parts, external and internal energy, whereby an explicitly parameterized snake evolves towards local minima corresponding to desirable solutions (edges, boundaries, etc.). The external energy is made from the pixel intensity values across the image domain, and the internal energy is designed as a regularization term that applies a smoothing force to maintain continuity of the curve itself. In order to allow for a more general initialization, Cohen and Cohen in [7] introduce an internal balloon force derived from the finite element method that instead of drawing a snake inward towards a boundary edge, it inflates the snake outward. Xu and Prince in [8] introduce a new type of external force called Gradient Vector Flow (GVF), which is not based on the negative gradient of an energy function, but rather it diffuses the vectors from the Gaussian smoothed image gradient by solving a pair of decoupled linear PDE’s. Li et al. [9] propose an Edge Preserving GVF (EPGVF) that maintains the benefits of GVF while improving the ability to detect weak edges. It also allows for topological change in a parametric active contour setting, a quality that arises much more naturally in geometric models.

A geometric active contour is described by a curve evolution equation that does not depend on the explicit parametrization of the contour but rather on the intrinsic geometric properties or quantities of the contour, such as curvature and normal vector, that are independent of parametrization. Most geometric active contour methods stem from the ideas presented in Osher and Sethian’s work on front propagation with curvature-dependent speed [10]. They represent a front, or an interface, as the zero level set of a higher-dimensional signed distance function called the level-set function. The front is evolved according to hyperbolic conservation laws acting on the level set function itself, where the velocity field is defined by its curvature (geometric term) as well as possible external flows (advection term). A desirable property of this method is that it can naturally handle topological change, i.e. splitting and merging, of the evolving front with no additional effort. Malladi et al. [2] and Caselles et al. [11] independently applied Osher and Sethian’s ideas to the problem of boundary extraction in images in order to make use of topological change in the segmentation of not just one but potentially many object boundaries. In addition to any curvature smoothing term, Malladi et al. define a speed function based on image data to be applied to the propagating front, which provides a halting criterion at potential boundaries. Caselles et al. use a similar approach but consider the advection term to drive active contours towards minimal distance curves or geodesics in a Riemannian space derived from the image, a popular method called “geodesic active contours.” Kichenassamy et al. [12] modify slightly the work defined in [2,11] by deriving their model from basic differential geometric principles. Common to all geometric active contour models is the notion of evolution according to Euclidean curve shortening, which defines the gradient direction in which the Euclidean perimeter shrinks the fastest. This velocity vector is determined by the geometric heat equation and is equivalent to the inward normal direction scaled by the signed curvature [13,14]. Such an evolution is a very desirable component of a snake model because it simultaneously shrinks the curve and smooths it without inducing any cross-overs. Li et al. [15] also describe a level set approach for image segmentation.

In many applications the image information alone is seldom enough to drive the contour towards the desired target boundary, and it is necessary to incorporate prior knowledge about the type of shape. Sonar imagery is a good example of a scenario where without an energy term to help guide the snake to a set of high probability prior shapes, background clutter, occlusion, and overall inhomogeneity of the target intensity can give rise to false segmentation results. For this reason, many current methods employ a Bayesian framework to apply a shape prior, an energy term based on the statistics of a set of training shapes, to the active contour model. The nature of the shape prior depends on the type of active contour model in use, parametric or geometric. In a parametric model, the shape prior is a statistical model on closed or open contours in 
                           
                              
                                 
                                    R
                                 
                                 
                                    2
                                 
                              
                           
                        ; whereas, in a geometric model, the shape prior is a statistical model on level-set functions, i.e. surfaces, in 
                           
                              
                                 
                                    R
                                 
                                 
                                    3
                                 
                              
                           
                         or higher.

Past Bayesian methods have been applied almost exclusively to geometric models where most efforts follow the ideas presented in Leventon et al. [16]. Here, a set of signed distance functions are obtained from previously known training shapes, and an arithmetic mean is computed. PCA is then performed in 
                           
                              
                                 
                                    L
                                 
                                 
                                    2
                                 
                              
                           
                         space to create a multivariate Gaussian distribution on the subspace defined by the top n principal components. Fang and Chan in [17] incorporate such a Gaussian density for use as a shape prior in a geodesic active contour framework based on [11]. Cremers et al. in [3] and Rousson and Cremers in [18] improve on [16] by applying a kernel density estimation technique to model general distributions of level-set functions beyond that of just Gaussian. They modify the Mumford–Shah based segmentation in [1] to include the shape prior term from this density estimation. Kim et al. in [4] also estimate densities of level-set functions nonparametrically in 
                           
                              
                                 
                                    L
                                 
                                 
                                    2
                                 
                              
                           
                         space.

One major limitation of these approaches is that the shape theory used here to develop priors is not as powerful as the state-of-the-art methods. The latest methods utilize the differential geometry of shape spaces and develop efficient algorithms for computing statistical modes of variations in training shapes. For example, [19] makes use of “landmark-based” shape analysis [20] to impose a shape prior. While this method involves proper shape spaces and geodesic distances, it is not ideally suited to active contours since it was developed primarily for landmarks denoting salient points on a shape. For this reason it cannot handle the shape analysis of full contours in generality. There has been a recent push to exploit the shape space of closed, planar curves represented as continuous, parameterized functions using ideas from differential geometry [21–24]. To complement this work, there has also been substantial research efforts dedicated to developing techniques to calculate intrinsic shape statistics on such manifolds [25]. Joshi and Srivastava [5] use ideas from elastic shape analysis of closed, planar curves to create a shape prior from an intrinsic density on shape space to help evolve a curve in a parametric active contour model. Although the method presented in [5] incorporates robust intrinsic shape statistics, it uses EPGVF [9] to calculate its image energy term, which does not perform well in images with ambiguous target boundaries, high speckle noise, and low SNR as in SAS imagery. Additionally, the shape representation used in [5], taken from [22], results in a computationally expensive algorithm, and simplifications for elastic shape analysis provided in [23] (explained later) promise a much cheaper solution.

The main contribution of this research is to apply the latest technique in shape analysis of contours, termed elastic shape analysis, in developing the shape prior in an active contour framework, and investigate its use in extraction of shapes in SAS images. The problem of boundary extraction in the context of this model can be posed as a maximum a posteriori (MAP) estimation via the energy minimization
                           
                              (1)
                              
                                 
                                    
                                       β
                                    
                                    
                                       ˆ
                                    
                                 
                                 =
                                 
                                    
                                       argmin
                                    
                                    
                                       β
                                       ∈
                                       B
                                    
                                 
                                 
                                    
                                       
                                          
                                             
                                                E
                                             
                                             
                                                image
                                             
                                          
                                          (
                                          β
                                          )
                                          +
                                          
                                             
                                                E
                                             
                                             
                                                smooth
                                             
                                          
                                          (
                                          β
                                          )
                                          +
                                          
                                             
                                                E
                                             
                                             
                                                prior
                                             
                                          
                                          (
                                          β
                                          )
                                       
                                    
                                 
                                 ,
                              
                           
                        where the minimization is over a set 
                           
                              B
                           
                         of appropriately chosen curves. The terms 
                           
                              
                                 
                                    E
                                 
                                 
                                    image
                                 
                              
                           
                         and 
                           
                              
                                 
                                    E
                                 
                                 
                                    smooth
                                 
                              
                           
                         are common energy terms based on given image pixel data and the smoothness of the evolving boundary curve, respectively, while the term 
                           
                              
                                 
                                    E
                                 
                                 
                                    prior
                                 
                              
                           
                         is the novel term representing the shape prior energy. Due to the nature of the background noise in SAS imagery, common gradient vector field techniques to form 
                           
                              
                                 
                                    E
                                 
                                 
                                    image
                                 
                              
                           
                        , such as EPGVF, typically fail to produce good results, even with the addition of 
                           
                              
                                 
                                    E
                                 
                                 
                                    prior
                                 
                              
                           
                        . Therefore, we design a model that makes use of not only prior shape information but also prior image information; that is, 
                           
                              
                                 
                                    E
                                 
                                 
                                    image
                                 
                              
                           
                         is formed based on prior knowledge of typical target and background pixel intensities. We use the well-known idea of “region competition” presented in [26] in our parametric framework to ensure a more robust performance in a noisy imaging environment.

This general formulation is inspired by Joshi and Srivastava in [5], where the authors define a prior shape density on a manifold of closed curves. This explicit shape model allows for greater accuracy in capturing appropriate variation within a shape class compared to previously implemented level-set methods. The functional representation of curves automatically removes the desired shape invariants of scale and translation while the remaining invariants are removed by forming a quotient space of the manifold modulo their group actions. Shapes are analyzed as members of this quotient space of closed curves rather than as entire level-set functions, thus facilitating a conceptually simple and natural way of comparing shapes invariant to all similarity transforms. These shape comparisons are made by imposing an elastic Riemannian metric [27,28,22,29] on the quotient space to allow for natural bending and stretching of shapes in the formation of minimum length geodesic paths. The main difference between our formulation of 
                           
                              
                                 
                                    E
                                 
                                 
                                    prior
                                 
                              
                           
                         and that of [5] is in the functional representation of shape; the current representation greatly simplifies the cost of elastic shape analysis and drastically improves shape modeling. In fact, it allows for a ten-fold increase in the computational speed for evaluating shape models.

To summarize, the main advantages of our Bayesian active contour model are
                           
                              1.
                              The use of prior shape and prior intensity information to drive the contour to a target boundary in noisy imaging environments.

A shape analysis framework that studies curves directly as continuous, parameterized functions rather than as higher-dimensional level-set functions or a series of finite, expertly selected landmarks.

An attractive elastic metric to compare shapes under an appropriate combination of bending and stretching. This metric is invariant to all the shape-preserving transforms: rotation, scale, and translation, as well as re-parameterization.

The use of a formal statistical prior on shape space of planar, closed curves, learned from the given training shapes.

The computation of gradients of energy terms as vector fields on the current curves for efficient updates.

The main limitations of this framework are as follows. First, it does not allow for topological change of the evolving contour. In our particular application, we are only concerned with segmenting one target consisting of one closed boundary curve, so we do not consider the splitting and merging of closed curves in our model design. Second, it is application specific, in that it does not provide a method for boundary extraction in a general image. One must have a preconceived notion of the set of potential classes to which the target of interest may belong in order to make use of our Bayesian framework.

The remainder of the paper is organized as follows. Section 2 provides an overview of elastic shape analysis of planar contours, including the basic mathematical framework and methods of computing intrinsic shape statistics on the space of closed curves. Section 3 outlines our active contour model, describing each of the three energy terms in Eq. (1) and explaining how to obtain the MAP estimation 
                           
                              
                                 
                                    β
                                 
                                 
                                    ˆ
                                 
                              
                           
                        . Section 4 shows experimental results on SAS imagery from two databases. Section 5 is the conclusion and description of future work.

In this section we briefly summarize a Riemannian framework for elastic shape analysis and modeling of closed planar curves. This framework results in metrics, statistics, and models that are invariant to arbitrary rotation, scaling, translation, and re-parameterization of individual curves. For more detailed information, refer to [23]. The most important advantage of this framework is that it performs simultaneous registration (of points across curves) and comparisons of the shapes of curves. This has the effect of stretching/compressing and bending parts of curves to match each other as well as they can. Consequently, the resulting shape models are more compact and parsimonious as compared to models obtained without registration.

Consider absolutely continuous, parameterized curves of the type 
                           
                              β
                              :
                              
                                 
                                    S
                                 
                                 
                                    1
                                 
                              
                              →
                              
                                 
                                    R
                                 
                                 
                                    n
                                 
                              
                           
                        . We will use 
                           
                              ‖
                              β
                              ‖
                           
                         to denote the 
                           
                              
                                 
                                    L
                                 
                                 
                                    2
                                 
                              
                           
                         norm 
                           
                              ‖
                              β
                              ‖
                              =
                              
                                 
                                    
                                       ∫
                                       
                                          
                                             
                                                S
                                             
                                             
                                                1
                                             
                                          
                                       
                                    
                                    |
                                    β
                                    (
                                    t
                                    )
                                    
                                       
                                          |
                                       
                                       
                                          2
                                       
                                    
                                    dt
                                 
                              
                           
                        , and where 
                           
                              |
                              ·
                              |
                           
                         is the Euclidean norm in 
                           
                              
                                 
                                    R
                                 
                                 
                                    n
                                 
                              
                           
                        . Let the set of all re-parameterizations be the set of all re-parameterizations of 
                           
                              
                                 
                                    S
                                 
                                 
                                    1
                                 
                              
                           
                        :
                           
                              (2)
                              
                                 Γ
                                 =
                                 
                                    
                                       
                                          γ
                                          :
                                          
                                             
                                                S
                                             
                                             
                                                1
                                             
                                          
                                          →
                                          
                                             
                                                S
                                             
                                             
                                                1
                                             
                                          
                                          |
                                          γ
                                          
                                          is an orientation-preserving diffeomorphism
                                       
                                    
                                 
                                 .
                              
                           
                        
                     

A re-parameterization of the curve 
                           
                              β
                           
                         is given by the composition 
                           
                              (
                              β
                              ∘
                              γ
                              )
                              (
                              t
                              )
                              =
                              β
                              (
                              γ
                              (
                              t
                              )
                              )
                           
                        , where 
                           
                              γ
                              ∈
                              Γ
                           
                        . Since, for any two curves 
                           
                              
                                 
                                    β
                                 
                                 
                                    1
                                 
                              
                           
                         and 
                           
                              
                                 
                                    β
                                 
                                 
                                    2
                                 
                              
                           
                        , the 
                           
                              
                                 
                                    L
                                 
                                 
                                    2
                                 
                              
                           
                         norm of their difference changes with the parameterizations, i.e. 
                           
                              ‖
                              
                                 
                                    β
                                 
                                 
                                    1
                                 
                              
                              -
                              
                                 
                                    β
                                 
                                 
                                    2
                                 
                              
                              ‖
                              
                              ≠
                              
                              ‖
                              
                                 
                                    β
                                 
                                 
                                    1
                                 
                              
                              ∘
                              γ
                              -
                              
                                 
                                    β
                                 
                                 
                                    2
                                 
                              
                              ∘
                              γ
                              ‖
                           
                        , one cannot use this difference as a metric to compare shapes of curves. Instead, the curves are represented by their square-root velocity function (SRVF) given by 
                           
                              q
                              (
                              t
                              )
                              =
                              
                                 
                                    β
                                 
                                 
                                    ̇
                                 
                              
                              (
                              t
                              )
                              /
                              
                                 
                                    |
                                    
                                       
                                          β
                                       
                                       
                                          ̇
                                       
                                    
                                    (
                                    t
                                    )
                                    |
                                 
                              
                           
                        . The SRVF of a reparametrized curve 
                           
                              β
                              ∘
                              γ
                           
                         is given by 
                           
                              (
                              q
                              ,
                              γ
                              )
                              ≡
                              (
                              q
                              ∘
                              γ
                              )
                              
                                 
                                    
                                       
                                          γ
                                       
                                       
                                          ̇
                                       
                                    
                                 
                              
                           
                        . Given an SRVF q, one can recover the curve 
                           
                              β
                           
                         up to a translation using 
                           
                              β
                              (
                              t
                              )
                              =
                              
                                 ∫
                                 
                                    0
                                 
                                 
                                    t
                                 
                              
                              q
                              (
                              s
                              )
                              |
                              q
                              (
                              s
                              )
                              |
                              ds
                           
                        . In Joshi and Srivastava in [5], a curve is represented by a pair of functions that represent the norm and the direction of the vector 
                           
                              
                                 
                                    β
                                 
                                 
                                    ̇
                                 
                              
                              (
                              t
                              )
                           
                        , respectively, as functions of time.

As described in [23], there are several reasons for selecting the SRVF representation for analyzing the shape of a curve. First, with respect to the 
                           
                              
                                 
                                    L
                                 
                                 
                                    2
                                 
                              
                           
                         metric, it can be shown that 
                           
                              ‖
                              
                                 
                                    q
                                 
                                 
                                    1
                                 
                              
                              -
                              
                                 
                                    q
                                 
                                 
                                    2
                                 
                              
                              ‖
                              =
                              ‖
                              (
                              
                                 
                                    q
                                 
                                 
                                    1
                                 
                              
                              ,
                              γ
                              )
                              -
                              (
                              
                                 
                                    q
                                 
                                 
                                    2
                                 
                              
                              ,
                              γ
                              )
                              ‖
                           
                         for all 
                           
                              γ
                              ∈
                              Γ
                           
                        . This property allows us to compute distances not between individual curves but between different re-parameterizations of curves. Second, since 
                           
                              |
                              q
                              (
                              t
                              )
                              
                                 
                                    |
                                 
                                 
                                    2
                                 
                              
                              =
                              |
                              
                                 
                                    β
                                 
                                 
                                    ̇
                                 
                              
                              (
                              t
                              )
                              |
                           
                        , the 
                           
                              
                                 
                                    L
                                 
                                 
                                    2
                                 
                              
                           
                        -norm of any q-function is the length of its corresponding curve 
                           
                              β
                           
                        . Thus, 
                           
                              
                                 
                                    L
                                 
                                 
                                    2
                                 
                              
                           
                         norm of SRVF’s of unit-length curves is one and the space of such curves is a convenient unit sphere! Lastly, an important elastic Riemannian metric – a metric that measures a combination of stretching and bending to optimally deform one curve into another – becomes the standard 
                           
                              
                                 
                                    L
                                 
                                 
                                    2
                                 
                              
                           
                         metric under the change of variable from 
                           
                              β
                           
                         to q. This interpretation allows us to obtain at least a 10-fold increase over previous methods that use the elastic metric but not SRVF representation, e.g. Joshi and Srivastava in [5]. Since we are concerned with extracting the closed boundary of an object in an image, we consider the corresponding closure condition on SRVF’s. It can be shown that if the curve 
                           
                              β
                           
                         is closed, then 
                           
                              
                                 ∫
                                 
                                    0
                                 
                                 
                                    1
                                 
                              
                              q
                              (
                              t
                              )
                              |
                              q
                              (
                              t
                              )
                              |
                              dt
                              =
                              0
                           
                        . In summary, the subset of all SRVF’s denoting unit-length closed curves is given by:
                           
                              (3)
                              
                                 C
                                 =
                                 
                                    
                                       
                                          q
                                          ∈
                                          
                                             
                                                L
                                             
                                             
                                                2
                                             
                                          
                                          (
                                          
                                             
                                                S
                                             
                                             
                                                1
                                             
                                          
                                          ,
                                          
                                             
                                                R
                                             
                                             
                                                2
                                             
                                          
                                          )
                                          |
                                          
                                             ∫
                                             
                                                
                                                   
                                                      S
                                                   
                                                   
                                                      1
                                                   
                                                
                                             
                                          
                                          |
                                          q
                                          (
                                          t
                                          )
                                          
                                             
                                                |
                                             
                                             
                                                2
                                             
                                          
                                          dt
                                          =
                                          1
                                          ,
                                          
                                             ∫
                                             
                                                
                                                   
                                                      S
                                                   
                                                   
                                                      1
                                                   
                                                
                                             
                                          
                                          q
                                          (
                                          t
                                          )
                                          |
                                          q
                                          (
                                          t
                                          )
                                          |
                                          dt
                                          =
                                          0
                                       
                                    
                                 
                                 .
                              
                           
                        
                     

This subset is shown to be a submanifold of 
                           
                              
                                 
                                    L
                                 
                                 
                                    2
                                 
                              
                           
                         and inherits a standard 
                           
                              
                                 
                                    L
                                 
                                 
                                    2
                                 
                              
                           
                         metric to make it a Riemannian manifold. We denote the Riemannian manifold 
                           
                              C
                           
                         as preshape space of unit length, closed curves.

The main tool in comparing curves in this framework is to use the geodesic distance between them in 
                           
                              C
                           
                         as a measure of their difference. This requires computation for geodesics in 
                           
                              C
                           
                         under the chosen metric (
                           
                              
                                 
                                    L
                                 
                                 
                                    2
                                 
                              
                           
                        ). Since the geometry of 
                           
                              C
                           
                         is not straightforward – it is a complicated submanifold of a unit sphere – one uses a numerical technique for computing geodesics in 
                           
                              C
                           
                        . One such numerical technique is called path straightening. It initializes an arbitrary path between any two points in 
                           
                              C
                           
                         and iteratively straightens it until the path becomes a geodesic, i.e. locally the shortest path. This ideas was introduced in [30] but particularized to 
                           
                              C
                           
                         in [23]. Let 
                           
                              
                                 
                                    q
                                 
                                 
                                    1
                                 
                              
                              ,
                              
                                 
                                    q
                                 
                                 
                                    2
                                 
                              
                              ∈
                              C
                           
                         denote SRVF’s associated with two unit-length, closed curves, and let 
                           
                              α
                           
                         be the geodesic between them found using the path straightening algorithm. The length of this path 
                           
                              α
                           
                        , denoted by 
                           
                              d
                              (
                              
                                 
                                    q
                                 
                                 
                                    1
                                 
                              
                              ,
                              
                                 
                                    q
                                 
                                 
                                    2
                                 
                              
                              )
                           
                        , provides a formal distance – geodesic distance – between elements of 
                           
                              C
                           
                        .

The actions of translation and scaling groups are already removed in this representation, but the rotation and re-parameterization variability are yet to be removed. In other words, any two curves that differ in only the rotation and re-parameterization have different SRVF’s but the same shapes. We need to unify all the elements of 
                           
                              C
                           
                         that represent the same shape. This is done using the algebraic operation of forming orbits – all possible rotations and re-parameterizations of a curve form a set called an orbit of that curve, and membership of an orbit defines an equivalence class. For a curve 
                           
                              β
                           
                         with the SRVF q, its orbit is given by: 
                           
                              [
                              q
                              ]
                              =
                              closure
                              
                                 
                                    
                                       O
                                       (
                                       q
                                       ,
                                       γ
                                       )
                                       |
                                       q
                                       ∈
                                       C
                                       ,
                                       O
                                       ∈
                                       SO
                                       (
                                       n
                                       )
                                       ,
                                       γ
                                       ∈
                                       Γ
                                    
                                 
                              
                           
                        . The original orbits are not closed sets, and, for a technical reason, they are fixed to be closed by taking the closure of the original sets. The set of all such orbits is called the shape space, denoted by 
                           
                              S
                              =
                              {
                              [
                              q
                              ]
                              |
                              q
                              ∈
                              C
                              }
                           
                        . Elements of the shape space are compared using the shortest geodesic distance between the elements of the corresponding orbits. That is, the shape distance is defined to be:
                           
                              (4)
                              
                                 
                                    
                                       d
                                    
                                    
                                       s
                                    
                                 
                                 (
                                 [
                                 
                                    
                                       q
                                    
                                    
                                       1
                                    
                                 
                                 ]
                                 ,
                                 [
                                 
                                    
                                       q
                                    
                                    
                                       2
                                    
                                 
                                 ]
                                 )
                                 =
                                 
                                    
                                       
                                          min
                                       
                                       
                                          γ
                                          ∈
                                          Γ
                                          ,
                                          O
                                          ∈
                                          SO
                                          (
                                          2
                                          )
                                       
                                    
                                 
                                 d
                                 (
                                 
                                    
                                       q
                                    
                                    
                                       1
                                    
                                 
                                 ,
                                 O
                                 (
                                 
                                    
                                       q
                                    
                                    
                                       2
                                    
                                 
                                 ,
                                 γ
                                 )
                                 )
                                 .
                              
                           
                        
                     

In this computation, one fixes the first curve and searches over all possible rotations and re-parameterizations of the second curve so that the geodesic distance between them is minimized. Since each orbit represents a shape uniquely, 
                           
                              
                                 
                                    d
                                 
                                 
                                    s
                                 
                              
                           
                         is a proper shape metric for analysis and modeling of shapes.

This framework also helps us evaluate two quantities that are important in statistical analysis. First, given any two shapes, 
                           
                              [
                              
                                 
                                    q
                                 
                                 
                                    1
                                 
                              
                              ]
                           
                         and 
                           
                              [
                              
                                 
                                    q
                                 
                                 
                                    2
                                 
                              
                              ]
                           
                        , this framework can help compute the starting or shooting direction v such that a geodesic from 
                           
                              [
                              
                                 
                                    q
                                 
                                 
                                    1
                                 
                              
                              ]
                           
                         with the initial velocity v reaches 
                           
                              [
                              
                                 
                                    q
                                 
                                 
                                    2
                                 
                              
                              ]
                           
                         in unit time. Notationally, this is written as 
                           
                              v
                              =
                              
                                 
                                    exp
                                 
                                 
                                    [
                                    
                                       
                                          q
                                       
                                       
                                          1
                                       
                                    
                                    ]
                                 
                                 
                                    -
                                    1
                                 
                              
                              (
                              [
                              
                                 
                                    q
                                 
                                 
                                    2
                                 
                              
                              ]
                              )
                           
                        , the inverse exponential map. Second, it computes the final resting point of the geodesic that starts at some arbitrary point 
                           
                              [
                              q
                              ]
                           
                         and has an arbitrary initial velocity as v. Notationally, this is denoted by 
                           
                              
                                 
                                    exp
                                 
                                 
                                    [
                                    q
                                    ]
                                 
                              
                              (
                              v
                              )
                           
                        , the exponential map.

Given a set of n shapes 
                           
                              Q
                              =
                              
                                 
                                    {
                                    
                                       
                                          q
                                       
                                       
                                          i
                                       
                                    
                                    }
                                 
                                 
                                    i
                                    =
                                    1
                                    ,
                                    …
                                    ,
                                    n
                                 
                              
                           
                        , where each 
                           
                              [
                              
                                 
                                    q
                                 
                                 
                                    i
                                 
                              
                              ]
                              ∈
                              S
                           
                        , we wish to find the mean and covariance of the set 
                           
                              Q
                           
                        . Together, these two statistics fully define a Gaussian-type distribution that approximates a model from which 
                           
                              Q
                           
                         can be assumed to be observed. These distributions are approximate since 
                           
                              S
                           
                         is an infinite-dimensional space and one, in practice, imposes density on a certain subset of 
                           
                              S
                           
                        . The ability to define densities of shapes on 
                           
                              S
                           
                        , even approximately, is an important tool that allows us to perform hypothesis tests, create stochastic models, and create prior shape densities for our Bayesian active contour model. Since the data lie on a non-linear Riemannian manifold rather than in a standard vector space, the notions of addition and subtraction are void. Thus, one must define new intrinsic ways of obtaining statistics aside from the typical sample (arithmetic) mean and sample covariance calculations.

A popular intrinsic mean calculation is the “Karcher mean.” In general, for the set 
                           
                              Q
                           
                         on 
                           
                              S
                           
                        , the Karcher mean 
                           
                              μ
                           
                         is defined as the point that minimizes the sum of square geodesic distances between all points in the set. That is,
                           
                              (5)
                              
                                 μ
                                 =
                                 
                                    
                                       
                                          argmin
                                       
                                       
                                          [
                                          q
                                          ]
                                          ∈
                                          S
                                       
                                    
                                 
                                 
                                    
                                       
                                          ∑
                                       
                                       
                                          i
                                          =
                                          1
                                       
                                       
                                          n
                                       
                                    
                                 
                                 
                                    
                                       d
                                    
                                    
                                       s
                                    
                                 
                                 
                                    
                                       (
                                       [
                                       q
                                       ]
                                       ,
                                       [
                                       
                                          
                                             q
                                          
                                          
                                             i
                                          
                                       
                                       ]
                                       )
                                    
                                    
                                       2
                                    
                                 
                                 ,
                              
                           
                        where 
                           
                              
                                 
                                    d
                                 
                                 
                                    s
                                 
                              
                           
                         is the geodesic distance in the shape space. An iterative algorithm to find the Karcher mean of a set of shapes is outlined below. The general idea is to update the current estimate 
                           
                              
                                 
                                    μ
                                 
                                 
                                    j
                                 
                              
                           
                         in the direction of the average shooting vector from 
                           
                              
                                 
                                    μ
                                 
                                 
                                    j
                                 
                              
                           
                         to each of the shapes in 
                           
                              Q
                           
                        .
                           Algorithm 1
                           Karcher Mean


                           Let 
                                 
                                    
                                       
                                          μ
                                       
                                       
                                          0
                                       
                                    
                                    ∈
                                    S
                                 
                               be an initial estimate of the mean of the shape class 
                                 
                                    Q
                                 
                              . A typical selection is to let 
                                 
                                    
                                       
                                          μ
                                       
                                       
                                          0
                                       
                                    
                                    =
                                    [
                                    
                                       
                                          q
                                       
                                       
                                          1
                                       
                                    
                                    ]
                                 
                              . Set 
                                 
                                    j
                                    =
                                    0
                                 
                              .
                                 
                                    1.
                                    For each 
                                          
                                             i
                                             =
                                             1
                                             ,
                                             …
                                             ,
                                             n
                                          
                                       , solve for the shooting vector 
                                          
                                             
                                                
                                                   v
                                                
                                                
                                                   i
                                                
                                             
                                             =
                                             
                                                
                                                   exp
                                                
                                                
                                                   
                                                      
                                                         μ
                                                      
                                                      
                                                         j
                                                      
                                                   
                                                
                                                
                                                   -
                                                   1
                                                
                                             
                                             (
                                             [
                                             
                                                
                                                   q
                                                
                                                
                                                   i
                                                
                                             
                                             ]
                                             )
                                          
                                       .

Compute the average direction 
                                          
                                             
                                                
                                                   v
                                                
                                                
                                                   ¯
                                                
                                             
                                             =
                                             
                                                
                                                   1
                                                
                                                
                                                   n
                                                
                                             
                                             
                                                
                                                   ∑
                                                
                                                
                                                   i
                                                   =
                                                   1
                                                
                                                
                                                   n
                                                
                                             
                                             
                                                
                                                   v
                                                
                                                
                                                   i
                                                
                                             
                                          
                                       .

If 
                                          
                                             ‖
                                             
                                                
                                                   v
                                                
                                                
                                                   ¯
                                                
                                             
                                             ‖
                                          
                                        is small, stop. Else, update 
                                          
                                             
                                                
                                                   μ
                                                
                                                
                                                   j
                                                
                                             
                                          
                                        in the direction 
                                          
                                             
                                                
                                                   v
                                                
                                                
                                                   ¯
                                                
                                             
                                          
                                        using 
                                          
                                             
                                                
                                                   μ
                                                
                                                
                                                   j
                                                   +
                                                   1
                                                
                                             
                                             =
                                             
                                                
                                                   exp
                                                
                                                
                                                   
                                                      
                                                         μ
                                                      
                                                      
                                                         j
                                                      
                                                   
                                                
                                             
                                             (
                                             ∊
                                             
                                                
                                                   v
                                                
                                                
                                                   ¯
                                                
                                             
                                             )
                                          
                                        where 
                                          
                                             ∊
                                             >
                                             0
                                          
                                        is small, typically 0.1.

Set 
                                          
                                             j
                                             =
                                             j
                                             +
                                             1
                                          
                                        and return to step (i).


                        Fig. 1
                         shows two examples of mean shapes for two shape classes taken from our SAS application. The example on the left side shows target shapes of 20 imaged cylinders and their mean, while the example on the right shows the target shapes of 20 imaged boxes and their mean.

Once we have found a Karcher mean 
                           
                              μ
                           
                         for the set of shapes 
                           
                              Q
                           
                        , we obtain the Karcher covariance matrix via
                           
                              (6)
                              
                                 K
                                 =
                                 
                                    
                                       1
                                    
                                    
                                       n
                                       -
                                       1
                                    
                                 
                                 
                                    
                                       
                                          ∑
                                       
                                       
                                          i
                                          =
                                          1
                                       
                                       
                                          n
                                       
                                    
                                 
                                 
                                    
                                       v
                                    
                                    
                                       i
                                    
                                 
                                 
                                    
                                       v
                                    
                                    
                                       i
                                    
                                    
                                       T
                                    
                                 
                                 ,
                              
                           
                        where the 
                           
                              
                                 
                                    v
                                 
                                 
                                    i
                                 
                              
                           
                        ’s are shooting vectors from 
                           
                              μ
                           
                         to the respective 
                           
                              [
                              
                                 
                                    q
                                 
                                 
                                    i
                                 
                              
                              ]
                           
                        ’s in 
                           
                              Q
                           
                        . While in theory 
                           
                              v
                              :
                              [
                              0
                              ,
                              1
                              ]
                              →
                              
                                 
                                    R
                                 
                                 
                                    2
                                 
                              
                           
                         is a vector valued function, in practice it is computed using T equally spaced samples on the interval 
                           
                              [
                              0
                              ,
                              1
                              ]
                           
                        . Therefore, 
                           
                              v
                              ∈
                              
                                 
                                    R
                                 
                                 
                                    2
                                    ×
                                    T
                                 
                              
                           
                         or re-arranged to be 
                           
                              
                                 
                                    R
                                 
                                 
                                    1
                                    ×
                                    2
                                    T
                                 
                              
                           
                         and K is a 
                           
                              2
                              T
                              ×
                              2
                              T
                           
                         covariance matrix.
                           Algorithm 2
                           Karcher Covariance


                           Given a set of shapes 
                                 
                                    Q
                                 
                               and its Karcher mean 
                                 
                                    μ
                                 
                              .
                                 
                                    1.
                                    For 
                                          
                                             i
                                             =
                                             1
                                             ,
                                             …
                                             ,
                                             n
                                          
                                       , calculate the shooting vector 
                                          
                                             
                                                
                                                   v
                                                
                                                
                                                   i
                                                
                                             
                                             =
                                             
                                                
                                                   exp
                                                
                                                
                                                   μ
                                                
                                                
                                                   -
                                                   1
                                                
                                             
                                             (
                                             [
                                             
                                                
                                                   q
                                                
                                                
                                                   i
                                                
                                             
                                             ]
                                             )
                                          
                                       .

Compute the Karcher covariance matrix K as in Eq. (6) with the shooting vectors 
                                          
                                             
                                                
                                                   v
                                                
                                                
                                                   i
                                                
                                             
                                          
                                       .

Define a “shape class” to be the set of shapes 
                           
                              Q
                           
                         along with its Karcher mean 
                           
                              μ
                           
                         and its covariance K, and henceforth, we use the notation 
                           
                              (
                              Q
                              ,
                              μ
                              ,
                              K
                              )
                           
                         to refer to a shape class.

There are many densities one can define on 
                              
                                 S
                              
                            with the shape class 
                              
                                 (
                                 Q
                                 ,
                                 μ
                                 ,
                                 K
                                 )
                              
                           , but for this research we only consider a “truncated wrapped-normal density” [31]. A wrapped-normal density in this case is a multivariate Gaussian density defined on the tangent space of the mean, which is then mapped to the manifold via the exponential mapping. Since the range space of this mapping is a subset of a unit sphere, one needs to truncate the Gaussian density in the tangent space so that the exponential map is a bijection. We choose to define a Gaussian density on the tangent space because it is simple to implement, and it has an analytic formula that we can use in future applications such as likelihood ratio tests and defining a shape prior energy in our active contour model. Since 
                              
                                 S
                              
                            is an infinite dimensional space, in practice we define a multivariate Gaussian on a finite, m-dimensional subspace of a tangent space of 
                              
                                 S
                              
                            by selecting the m dominant principal components of K (corresponding to the largest m singular values 
                              
                                 
                                    
                                       {
                                       
                                          
                                             σ
                                          
                                          
                                             i
                                          
                                          
                                             2
                                          
                                       
                                       }
                                    
                                    
                                       i
                                       =
                                       1
                                       ,
                                       …
                                       ,
                                       m
                                    
                                 
                              
                            of K). We refer to this subspace as the m-dimensional principal subspace of 
                              
                                 
                                    
                                       T
                                    
                                    
                                       μ
                                    
                                 
                                 (
                                 S
                                 )
                              
                           . The truncation allows us to have a invertible mapping from this subspace to the shape space 
                              
                                 S
                              
                           . In practice we truncate the subspace by restricting to a disk of size 
                              
                                 π
                              
                            around the origin in that subspace.

After obtaining the m dominant principal components of K, we can visualize shapes in 
                              
                                 S
                              
                            that are up to two standard deviations on either side of the mean in the kth principal direction of variance 
                              
                                 
                                    
                                       u
                                    
                                    
                                       k
                                    
                                 
                              
                           ; that is, we can visualize an analogy of the confidence interval 
                              
                                 μ
                                 ±
                                 2
                                 
                                    
                                       σ
                                    
                                    
                                       k
                                    
                                 
                                 
                                    
                                       u
                                    
                                    
                                       k
                                    
                                 
                              
                            on the shape space 
                              
                                 S
                              
                            according to the wrapped-normal density. Fig. 2
                            shows an example of the top 
                              
                                 m
                                 =
                                 5
                              
                            directions of variance in each of the two shape classes shown in Fig. 1 respectively. In each row the center shape is the Karcher mean, and the path of shapes on either side represents the path traversed on 
                              
                                 S
                              
                            along the shooting vector 
                              
                                 
                                    
                                       v
                                    
                                    
                                       k
                                    
                                 
                                 =
                                 ±
                                 2
                                 
                                    
                                       σ
                                    
                                    
                                       k
                                    
                                 
                                 
                                    
                                       u
                                    
                                    
                                       k
                                    
                                 
                              
                           . It is also straightforward to obtain a random sample from a truncated wrapped-normal density on 
                              
                                 S
                              
                           . Given a shape class 
                              
                                 (
                                 Q
                                 ,
                                 μ
                                 ,
                                 K
                                 )
                              
                           , and an integer m, let 
                              
                                 [
                                 U
                                 ,
                                 Σ
                                 ,
                                 V
                                 ]
                                 =
                                 msvd
                                 (
                                 K
                                 )
                              
                           , and select 
                              
                                 
                                    
                                       u
                                    
                                    
                                       k
                                    
                                 
                              
                            as the kth column of 
                              
                                 U
                                 ,
                                 k
                                 =
                                 1
                                 ,
                                 …
                                 ,
                                 m
                              
                           . Obtain 
                              
                                 
                                    
                                       {
                                       
                                          
                                             z
                                          
                                          
                                             k
                                          
                                       
                                       }
                                    
                                    
                                       k
                                       =
                                       1
                                       ,
                                       …
                                       ,
                                       m
                                    
                                 
                                 ,
                                 m
                              
                            i.i.d. samples from the standard normal density 
                              
                                 N
                                 (
                                 0
                                 ,
                                 1
                                 )
                              
                           . Compute the linear combination 
                              
                                 v
                                 =
                                 
                                    
                                       ∑
                                    
                                    
                                       k
                                       =
                                       1
                                    
                                    
                                       m
                                    
                                 
                                 
                                    
                                       z
                                    
                                    
                                       k
                                    
                                 
                                 
                                    
                                       σ
                                    
                                    
                                       k
                                    
                                 
                                 
                                    
                                       u
                                    
                                    
                                       k
                                    
                                 
                              
                           . If 
                              
                                 ‖
                                 v
                                 ‖
                                 <
                                 π
                              
                           , then compute the random sample 
                              
                                 q
                                 =
                                 
                                    
                                       exp
                                    
                                    
                                       μ
                                    
                                 
                                 (
                                 v
                                 )
                              
                            and its coordinate function 
                              
                                 β
                              
                           . Fig. 3
                            shows an example of 12 random samples obtained from the densities learned from the two shape classes shown in Fig. 1.

We summarize steps for defining a truncated wrapped-normal Gaussian density on shape space 
                              
                                 S
                              
                            for different shape classes. Assuming we are given a priori a set of training shapes 
                              
                                 Q
                              
                            that represent a certain shape class, we compute a Karcher mean 
                              
                                 μ
                              
                            and covariance K to form a shape class 
                              
                                 (
                                 Q
                                 ,
                                 μ
                                 ,
                                 K
                                 )
                              
                           . First, obtain the singular value decomposition of K as 
                              
                                 [
                                 U
                                 ,
                                 Σ
                                 ,
                                 V
                                 ]
                                 =
                                 svd
                                 (
                                 K
                                 )
                              
                           , and let M be the m-dimensional principal subspace of 
                              
                                 
                                    
                                       T
                                    
                                    
                                       μ
                                    
                                 
                                 (
                                 S
                                 )
                              
                            defined as the first m columns of U. The prior density of this shape class is given as the exponential mapping of 
                              
                                 
                                    
                                       f
                                    
                                    
                                       M
                                    
                                 
                                 (
                                 v
                                 )
                              
                           , the multivariate Gaussian density on M.
                              
                                 (7)
                                 
                                    
                                       
                                          f
                                       
                                       
                                          M
                                       
                                    
                                    (
                                    v
                                    )
                                    =
                                    
                                       
                                          1
                                       
                                       
                                          Z
                                       
                                    
                                    
                                       
                                          e
                                       
                                       
                                          -
                                          
                                             
                                                1
                                             
                                             
                                                2
                                             
                                          
                                          
                                             
                                                
                                                   
                                                      
                                                         v
                                                      
                                                      
                                                         ‖
                                                      
                                                      
                                                         T
                                                      
                                                   
                                                   
                                                      
                                                         Σ
                                                      
                                                      
                                                         m
                                                      
                                                      
                                                         -
                                                         1
                                                      
                                                   
                                                   
                                                      
                                                         v
                                                      
                                                      
                                                         ‖
                                                      
                                                   
                                                   +
                                                   ‖
                                                   
                                                      
                                                         v
                                                      
                                                      
                                                         ⊥
                                                      
                                                   
                                                   
                                                      
                                                         ‖
                                                      
                                                      
                                                         2
                                                      
                                                   
                                                   /
                                                   (
                                                   2
                                                   
                                                      
                                                         δ
                                                      
                                                      
                                                         2
                                                      
                                                   
                                                   )
                                                
                                             
                                          
                                       
                                    
                                    
                                       
                                          1
                                       
                                       
                                          ‖
                                          v
                                          ‖
                                          <
                                          π
                                       
                                    
                                    ,
                                 
                              
                           where 
                              
                                 v
                                 =
                                 
                                    
                                       exp
                                    
                                    
                                       μ
                                    
                                    
                                       -
                                       1
                                    
                                 
                                 (
                                 q
                                 )
                                 ,
                                 
                                    
                                       v
                                    
                                    
                                       ‖
                                    
                                 
                              
                            is the projection of v into 
                              
                                 M
                                 ,
                                 
                                    
                                       v
                                    
                                    
                                       ⊥
                                    
                                 
                                 =
                                 v
                                 -
                                 
                                    
                                       v
                                    
                                    
                                       ‖
                                    
                                 
                                 ,
                                 
                                    
                                       Σ
                                    
                                    
                                       m
                                    
                                 
                              
                            is the diagonal matrix containing the first m singular values, and Z is the normalizing constant. The scalar value 
                              
                                 δ
                              
                            is chosen to be less than the smallest singular value in 
                              
                                 
                                    
                                       Σ
                                    
                                    
                                       m
                                    
                                 
                              
                           . For the final expression on 
                              
                                 S
                              
                           , please refer to the paper [31]. As described later, the density 
                              
                                 
                                    
                                       f
                                    
                                    
                                       M
                                    
                                 
                              
                            suffices for the purposes of this paper.

Earlier we posed the problem of boundary extraction as a MAP estimation in Eq. (1), where the final solution is a closed curve that minimizes an energy functional defined by three terms, 
                        
                           
                              
                                 E
                              
                              
                                 image
                              
                           
                           ,
                           
                              
                                 E
                              
                              
                                 smooth
                              
                           
                        
                     , and 
                        
                           
                              
                                 E
                              
                              
                                 prior
                              
                           
                        
                     . In order to minimize this expression, we introduce a time variable s and search for a steady state solution of the differential equation
                        
                           (8)
                           
                              
                                 
                                    ∂
                                 
                                 
                                    ∂
                                    s
                                 
                              
                              β
                              (
                              t
                              ,
                              s
                              )
                              =
                              -
                              
                                 
                                    λ
                                 
                                 
                                    1
                                 
                              
                              ∇
                              
                                 
                                    E
                                 
                                 
                                    image
                                 
                              
                              (
                              β
                              )
                              (
                              t
                              ,
                              s
                              )
                              -
                              
                                 
                                    λ
                                 
                                 
                                    2
                                 
                              
                              ∇
                              
                                 
                                    E
                                 
                                 
                                    smooth
                                 
                              
                              (
                              β
                              )
                              (
                              t
                              ,
                              s
                              )
                              -
                              
                                 
                                    λ
                                 
                                 
                                    3
                                 
                              
                              ∇
                              
                                 
                                    E
                                 
                                 
                                    prior
                                 
                              
                              (
                              β
                              )
                              (
                              t
                              ,
                              s
                              )
                              ,
                           
                        
                     where the 
                        
                           
                              
                                 λ
                              
                              
                                 i
                              
                           
                        
                     ’s are user defined weighting coefficients for each energy term. Since the contour evolution is in the direction of the negative gradient of the three energy terms, the steady state solution results in a local minimization of Eq. (1). The weights 
                        
                           
                              
                                 λ
                              
                              
                                 i
                              
                           
                        
                      greatly affect the performance of the contour evolution, and for this model we leave their selection up to the discretion of the user. The following subsections describe the formulation of the three energy gradients.

Our image energy term is based on the work presented in [26,18,32,33]. In these papers, the authors propose an image energy that is not based on the gradient of a Gaussian smoothed edge map, as in for example EPGVF in [9], but rather instead a region-based energy term that is more robust to noise and diffuse object boundaries. The active contour model assumes a set of training shapes/images, and we use our training data to form this region-based image energy term in the following manner.

Let 
                           
                              
                                 
                                    I
                                 
                                 
                                    train
                                 
                              
                           
                         be the pixel information in a training image and let 
                           
                              
                                 
                                    β
                                 
                                 
                                    train
                                 
                              
                              (
                              t
                              )
                           
                         be a parameterized closed curve on the image domain 
                           
                              Ω
                           
                        . For our application the region-based approach assumes that any image domain is partitioned into two regions via a closed curve representing the target boundary. The target region 
                           
                              
                                 
                                    Ω
                                 
                                 
                                    in
                                 
                              
                           
                         lies inside the curve, and the background region 
                           
                              
                                 
                                    Ω
                                 
                                 
                                    out
                                 
                              
                           
                         lies outside the curve. Using training shape data 
                           
                              
                                 
                                    β
                                 
                                 
                                    train
                                 
                              
                              (
                              t
                              )
                           
                        , one obtains a priori two estimated probability densities, 
                           
                              
                                 
                                    p
                                 
                                 
                                    in
                                 
                              
                              (
                              I
                              )
                           
                         and 
                           
                              
                                 
                                    p
                                 
                                 
                                    out
                                 
                              
                              (
                              I
                              )
                           
                        , from the normalized histograms of intensity values in 
                           
                              
                                 
                                    Ω
                                 
                                 
                                    in
                                 
                              
                           
                         and 
                           
                              
                                 
                                    Ω
                                 
                                 
                                    out
                                 
                              
                           
                         respectively. These two learned densities will be used to calculate 
                           
                              
                                 
                                    E
                                 
                                 
                                    image
                                 
                              
                           
                         during an active contour evolution on a test image.

Let 
                           
                              I
                              (
                              x
                              )
                              ∈
                              [
                              0
                              ,
                              1
                              ]
                           
                         be the pixel intensity value of the test image at location 
                           
                              x
                              ∈
                              Ω
                           
                        . Paragios and Deriche [33] show that for a curve 
                           
                              β
                              (
                              t
                              ,
                              s
                              )
                           
                         defining the two regions 
                           
                              
                                 
                                    Ω
                                 
                                 
                                    in
                                 
                              
                           
                         and 
                           
                              
                                 
                                    Ω
                                 
                                 
                                    out
                                 
                              
                           
                        , the minimization of the following energy function is equivalent to the maximization of the image-based a posteriori segmentation probability.
                           
                              (9)
                              
                                 
                                    
                                       E
                                    
                                    
                                       image
                                    
                                 
                                 (
                                 β
                                 )
                                 =
                                 -
                                 
                                    ∫
                                    
                                       
                                          
                                             Ω
                                          
                                          
                                             in
                                          
                                       
                                    
                                 
                                 log
                                 (
                                 
                                    
                                       p
                                    
                                    
                                       in
                                    
                                 
                                 (
                                 I
                                 (
                                 x
                                 )
                                 )
                                 )
                                 dx
                                 -
                                 
                                    ∫
                                    
                                       
                                          
                                             Ω
                                          
                                          
                                             out
                                          
                                       
                                    
                                 
                                 log
                                 (
                                 
                                    
                                       p
                                    
                                    
                                       out
                                    
                                 
                                 (
                                 I
                                 (
                                 x
                                 )
                                 )
                                 )
                                 dx
                                 .
                              
                           
                        
                     

Using functional differentiation and Green’s Theorem, as shown in [26], we calculate the gradient of the image energy at a point 
                           
                              (
                              t
                              ,
                              s
                              )
                           
                         on the curve as
                           
                              (10)
                              
                                 ∇
                                 
                                    
                                       E
                                    
                                    
                                       image
                                    
                                 
                                 (
                                 β
                                 )
                                 (
                                 t
                                 ,
                                 s
                                 )
                                 =
                                 -
                                 log
                                 
                                    
                                       
                                          
                                             
                                                
                                                   
                                                      p
                                                   
                                                   
                                                      in
                                                   
                                                
                                                (
                                                I
                                                (
                                                β
                                                (
                                                t
                                                ,
                                                s
                                                )
                                                )
                                                )
                                             
                                             
                                                
                                                   
                                                      p
                                                   
                                                   
                                                      out
                                                   
                                                
                                                (
                                                I
                                                (
                                                β
                                                (
                                                t
                                                ,
                                                s
                                                )
                                                )
                                                )
                                             
                                          
                                       
                                    
                                 
                                 n
                                 (
                                 t
                                 ,
                                 s
                                 )
                                 ,
                              
                           
                        where 
                           
                              n
                              (
                              t
                              ,
                              s
                              )
                           
                         is the outward unit normal vector to the curve 
                           
                              β
                           
                        . For brevity we will define 
                           
                              
                                 
                                    ℓ
                                 
                                 
                                    β
                                 
                              
                              (
                              t
                              ,
                              s
                              )
                              ≡
                              log
                              
                                 
                                    
                                       
                                          
                                             
                                                
                                                   p
                                                
                                                
                                                   in
                                                
                                             
                                             (
                                             I
                                             (
                                             β
                                             (
                                             t
                                             ,
                                             s
                                             )
                                             )
                                             )
                                          
                                          
                                             
                                                
                                                   p
                                                
                                                
                                                   out
                                                
                                             
                                             (
                                             I
                                             (
                                             β
                                             (
                                             t
                                             ,
                                             s
                                             )
                                             )
                                             )
                                          
                                       
                                    
                                 
                              
                           
                        .

Notice that contour evolution according to the negative gradient will be along the outward normal direction if 
                           
                              
                                 
                                    ℓ
                                 
                                 
                                    β
                                 
                              
                              (
                              t
                              ,
                              s
                              )
                              >
                              0
                           
                         and along the inward normal direction if 
                           
                              
                                 
                                    ℓ
                                 
                                 
                                    β
                                 
                              
                              (
                              t
                              ,
                              s
                              )
                              <
                              0
                           
                        . This evolution will therefore push any part of the contour more likely lying in the target out towards its most likely boundary, and it will pull any part lying outside of the target in towards its most likely boundary. Refer to Section 4 on experimental results for an example of forming the functions 
                           
                              
                                 
                                    p
                                 
                                 
                                    in
                                 
                              
                              ,
                              
                                 
                                    p
                                 
                                 
                                    out
                                 
                              
                           
                        , and 
                           
                              ℓ
                           
                         for a dataset of SAS imagery.

The proposed image energy gradient has many advantages.
                           
                              1.
                              Assuming at least part of the target lies within the contour, and assuming that there is only one target in the image (as is the case for our SAS datasets), “capture range” is only limited to the size of 
                                    
                                       Ω
                                    
                                 . This is because any part of the contour that lies outside of the target boundary will be drawn towards it no matter how far away it is.

In practice, one computes the log-likelihood 
                                    
                                       ℓ
                                       (
                                       I
                                       (
                                       x
                                       )
                                       )
                                    
                                  for all 
                                    
                                       x
                                       ∈
                                       Ω
                                    
                                  once before initialization of the active contour evolution. At each evolution time s, one only needs to calculate the unit normal vector field on the contour, then sample from 
                                    
                                       ℓ
                                       (
                                       I
                                       (
                                       x
                                       )
                                       )
                                    
                                  at the appropriate points of the curve in the domain to obtain 
                                    
                                       
                                          
                                             ℓ
                                          
                                          
                                             β
                                          
                                       
                                       (
                                       t
                                       ,
                                       s
                                       )
                                    
                                 . This results in considerable computational efficiency.

There is no need for an added “balloon force” since the contour is automatically pushed out of the target if inside and pulled into the target if outside.

Evolution along the normal direction provides a simpler flow compared to that which is given by a gradient vector field on the image directly. Such opposing techniques can produce erratic flows because it will detect edges throughout the entirety of a background that contains high speckle noise.

The smoothing gradient described next is also formulated as a scalar times the unit normal, so these two energy terms can be combined for added computational efficiency.


                        Figs. 4 and 5
                        
                         highlight many of the above advantages of segmenting SAS data with the log-likelihood image energy gradient flow compared to EPGVF [9], which was used in the work of Joshi and Srivastava in [5]. In Fig. 4 we show a SAS test image of a cylinder to be segmented and the EPGVF on a subset (enlarged for visualization purposes) of the image containing a piece of the target. It is apparent from this visualization that capture range is a significant issue with EPGVF. The target boundary in this particular image is rather pronounced, as it is not a difficult image to segment compared to other SAS images, and we see that in close range to the target, EPGVF will draw a contour to the boundary rather nicely. But farther away the target boundary’s influence becomes weaker, and background noise dominates the direction of the gradient vector flow creating many confusing sources and sinks. Another major downside of the EPGVF compared to the log-likelihood energy flow is its chaotic nature within the target boundary. Since the SAS target is by nature highly texturized, the vector flow inside the boundary finds edges nearly everywhere and cannot point outward towards the true target boundary. Thus an active contour flow according to EPGVF will draw the contour towards the boundary in short range but will not necessarily stop exactly on the target boundary and most certainly will not expand any part of the contour that lies within the boundary outward.


                        Fig. 5 shows the segmentation results on this test image from each image gradient term combined with a smoothing penalty (defined in Section 3.2). Many of the aforementioned downsides of EPGVF in this setting are illuminated by the poor result shown in (b). Although the log-likelihood image 
                           
                              ℓ
                              (
                              I
                              (
                              x
                              )
                              )
                           
                         in (c) shows an apparently large amount of speckle noise in the background, as seen in (d) this background noise is not strong enough to keep the contour from finding the true target boundary when segmenting with the proposed image energy gradient combined with the smoothing penalty. As mentioned before, this particular SAS image is relatively friendly to segment and does not require a shape prior to achieve satisfactory results. In general this will not be the case, and a shape prior energy term will be necessary to find the correct boundary.

A common feature of all active contour models is a smoothness penalty that prevents the evolving contour from becoming too jagged. Kass et al. [6] propose an energy functional in the form of a regularization term on the first and second order derivatives of the curve in order to enforce a certain level of smoothness. This term while effective, usually depends on the parameterization of the curve, and thus we wish to use an energy term invariant to parameterization to complement our shape analysis framework. We follow a common approach from geometric active contours as proposed in [12,11], which is based on the idea of Euclidean heat flow. Define the smoothing energy functional as 
                           
                              
                                 
                                    E
                                 
                                 
                                    smooth
                                 
                              
                              (
                              β
                              )
                              =
                              
                                 ∫
                                 
                                    0
                                 
                                 
                                    1
                                 
                              
                              |
                              
                                 
                                    β
                                 
                                 
                                    ̇
                                 
                              
                              (
                              t
                              )
                              |
                              dt
                           
                        , which is equal to the length of the curve and is naturally invariant to any re-parameterization. It is shown in [12] that the gradient of 
                           
                              
                                 
                                    E
                                 
                                 
                                    smooth
                                 
                              
                           
                         is given by the Euclidean heat flow equation 
                           
                              ∇
                              
                                 
                                    E
                                 
                                 
                                    smooth
                                 
                              
                              (
                              β
                              )
                              (
                              t
                              ,
                              s
                              )
                              =
                              
                                 
                                    κ
                                 
                                 
                                    β
                                 
                              
                              (
                              t
                              ,
                              s
                              )
                              n
                              (
                              t
                              ,
                              s
                              )
                           
                        , where 
                           
                              
                                 
                                    κ
                                 
                                 
                                    β
                                 
                              
                              (
                              t
                              ,
                              s
                              )
                           
                         is the curvature of 
                           
                              β
                              (
                              t
                              )
                           
                         at evolution time s. It has been shown (see [13,14]) that this penalty on a curve’s length automatically leads to smoothing of a curve by forcing the curve to become convex over time. Eventually, the curve evolves to a circle and shrinks to a point as time s goes to infinity. Fig. 6
                         shows some illustrations of the evolution under the gradient of 
                           
                              
                                 
                                    E
                                 
                                 
                                    smooth
                                 
                              
                           
                        .

The shape prior energy term is one of the novel contributions of this paper and is derived from a probability density function on the shape space formed by SRVF’s of unit length closed curves 
                           
                              S
                           
                        . Notice that the statistical methods described in Section 2 are based on SRVF’s of curves rather than the curves themselves; however, the proposed shape prior energy gradient in Eq. (8) is expressed in terms of the curve 
                           
                              β
                           
                        , and therefore, one needs a change of variable from q to 
                           
                              β
                           
                         in the prior energy term to be compatible. This change of variable can be derived analytically but we use a convenient numerical approach. This involves computing a shape prior gradient vector for evolution on 
                           
                              S
                           
                        , i.e. a shooting vector, and then converting it to a gradient vector field on the curve 
                           
                              β
                           
                        , taking special care to preserve the nuisance variables of scale and translation that are lost in the conversion from 
                           
                              β
                           
                         to SRVF with unit norm. We categorize scale and translation as nuisance variables because they are not important to the definition of shape – in fact they are shape invariants – but in a segmentation algorithm, it is clearly necessary to maintain the location and size of the active contour. Let the curve length represent the scale variable, and let the centroid represent the translation variable. At any iteration time s, we follow this general procedure to apply our shape prior energy gradient to 
                           
                              β
                           
                        :
                           
                              1.
                              Calculate and save the length and the centroid of the current curve 
                                    
                                       β
                                    
                                 .

Convert 
                                    
                                       β
                                    
                                  to SRVF representation q and re-normalize such that 
                                    
                                       q
                                       ∈
                                       S
                                    
                                 .

Calculate the shape prior gradient at 
                                    
                                       μ
                                    
                                  in the form of a shooting vector 
                                    
                                       Aw
                                       ∈
                                       
                                          
                                             T
                                          
                                          
                                             μ
                                          
                                       
                                       (
                                       S
                                       )
                                    
                                 . Parallel translate it to 
                                    
                                       
                                          
                                             T
                                          
                                          
                                             q
                                          
                                       
                                       (
                                       S
                                       )
                                    
                                  to obtain a vector v.

Obtain a first order numerical approximation of 
                                    
                                       ∇
                                       
                                          
                                             E
                                          
                                          
                                             prior
                                          
                                       
                                       (
                                       β
                                       )
                                    
                                  from v, in terms of a vector field on 
                                    
                                       β
                                    
                                 , using curves restored to the original scale and translation.

We now explain in more detail steps 3 and 4 in the above procedure. In step 3, we wish to obtain a vector 
                           
                              v
                              ∈
                              
                                 
                                    T
                                 
                                 
                                    q
                                 
                              
                              (
                              S
                              )
                           
                         that represents the gradient of the shape prior energy on 
                           
                              S
                           
                         given a shape class 
                           
                              (
                              Q
                              ,
                              μ
                              ,
                              K
                              )
                           
                         and the multivariate density 
                           
                              
                                 
                                    f
                                 
                                 
                                    M
                                 
                              
                              (
                              v
                              )
                           
                         described in Eq. (7). We first obtain the shooting vector 
                           
                              w
                              ∈
                              
                                 
                                    T
                                 
                                 
                                    μ
                                 
                              
                              (
                              S
                              )
                           
                         signifying the initial direction of travel to reach q from the mean shape 
                           
                              μ
                           
                         along a geodesic; that is, calculate 
                           
                              w
                              =
                              
                                 
                                    exp
                                 
                                 
                                    μ
                                 
                                 
                                    -
                                    1
                                 
                              
                              (
                              q
                              )
                           
                        . Let 
                           
                              
                                 
                                    U
                                 
                                 
                                    m
                                 
                              
                           
                         be the first m columns of U in the SVD of K, and let 
                           
                              
                                 
                                    Σ
                                 
                                 
                                    m
                                 
                              
                           
                         be as in Eq. (7). Define 
                           
                              
                                 
                                    E
                                 
                                 
                                    prior
                                 
                              
                              (
                              w
                              )
                           
                        , the shape prior energy as a function of the shooting vector w, as
                           
                              (11)
                              
                                 
                                    
                                       E
                                    
                                    
                                       prior
                                    
                                 
                                 (
                                 w
                                 )
                                 =
                                 
                                    
                                       1
                                    
                                    
                                       2
                                    
                                 
                                 
                                    
                                       w
                                    
                                    
                                       T
                                    
                                 
                                 (
                                 
                                    
                                       U
                                    
                                    
                                       m
                                    
                                 
                                 
                                    
                                       Σ
                                    
                                    
                                       m
                                    
                                    
                                       -
                                       1
                                    
                                 
                                 
                                    
                                       U
                                    
                                    
                                       m
                                    
                                    
                                       T
                                    
                                 
                                 )
                                 w
                                 +
                                 
                                    
                                       1
                                    
                                    
                                       2
                                       
                                          
                                             δ
                                          
                                          
                                             2
                                          
                                       
                                    
                                 
                                 ‖
                                 w
                                 -
                                 
                                    
                                       U
                                    
                                    
                                       m
                                    
                                 
                                 
                                    
                                       U
                                    
                                    
                                       m
                                    
                                    
                                       T
                                    
                                 
                                 w
                                 
                                    
                                       ‖
                                    
                                    
                                       2
                                    
                                 
                                 ,
                              
                           
                        where 
                           
                              δ
                           
                         is a number smaller than the smallest singular value in 
                           
                              
                                 
                                    Σ
                                 
                                 
                                    m
                                 
                              
                           
                        . This energy term is the negative of the argument of the exponent in 
                           
                              
                                 
                                    f
                                 
                                 
                                    M
                                 
                              
                              (
                              w
                              )
                           
                         for that shape class. The gradient vector of this prior energy is therefore 
                           
                              ∇
                              
                                 
                                    E
                                 
                                 
                                    prior
                                 
                              
                              (
                              w
                              )
                              =
                              Aw
                           
                         where A is the matrix 
                           
                              A
                              =
                              
                                 
                                    U
                                 
                                 
                                    m
                                 
                              
                              
                                 
                                    Σ
                                 
                                 
                                    m
                                 
                                 
                                    -
                                    1
                                 
                              
                              
                                 
                                    U
                                 
                                 
                                    m
                                 
                                 
                                    T
                                 
                              
                              +
                              (
                              I
                              -
                              
                                 
                                    U
                                 
                                 
                                    m
                                 
                              
                              
                                 
                                    U
                                 
                                 
                                    m
                                 
                                 
                                    T
                                 
                              
                              )
                              /
                              
                                 
                                    δ
                                 
                                 
                                    2
                                 
                              
                           
                        . We wish to define the shape prior gradient on the tangent space at q rather than at 
                           
                              μ
                           
                        , so the final step is to parallel transport Aw from 
                           
                              μ
                           
                         to q, denoted by 
                           
                              v
                              =
                              Π
                              (
                              Aw
                              ;
                              μ
                              ,
                              q
                              )
                              ∈
                              
                                 
                                    T
                                 
                                 
                                    q
                                 
                              
                              (
                              S
                              )
                           
                        . The vector v represents the shape prior gradient with respect to q; an evolution of q according to the negative gradient will result in an energy minimization precisely at the mean 
                           
                              μ
                           
                        .

In step 4, we convert this shape prior gradient vector v defined on 
                           
                              
                                 
                                    T
                                 
                                 
                                    q
                                 
                              
                              (
                              S
                              )
                           
                         to a gradient vector field defined on the explicit curve 
                           
                              β
                           
                         using a simple numerical approximation of the chain rule. The idea is to travel a short distance 
                           
                              ∊
                           
                         from q along the geodesic defined by the shooting vector 
                           
                              -
                              v
                           
                        , and then convert the resulting shape into its curve representation with the original nuisance variables obtained in step 1. Subtracting the original curve 
                           
                              β
                           
                         from the new curve as in a finite difference approximation defines a vector field on 
                           
                              β
                           
                         that represents a first order numerical approximation of the negative shape prior gradient. That is, let 
                           
                              -
                              ∇
                              
                                 
                                    E
                                 
                                 
                                    prior
                                 
                              
                              (
                              β
                              )
                              (
                              t
                              ,
                              s
                              )
                              =
                              (
                              
                                 
                                    β
                                 
                                 
                                    new
                                 
                              
                              (
                              t
                              ,
                              s
                              )
                              -
                              β
                              (
                              t
                              ,
                              s
                              )
                              )
                              /
                              ∊
                           
                        , where 
                           
                              
                                 
                                    β
                                 
                                 
                                    new
                                 
                              
                           
                         is obtained as follows: (i) calculate 
                           
                              
                                 
                                    q
                                 
                                 
                                    new
                                 
                              
                              =
                              
                                 
                                    exp
                                 
                                 
                                    q
                                 
                              
                              (
                              -
                              ∊
                              v
                              )
                           
                        , (ii) convert 
                           
                              
                                 
                                    q
                                 
                                 
                                    new
                                 
                              
                           
                         to its curve representation 
                           
                              
                                 
                                    
                                       
                                          β
                                       
                                       
                                          ̃
                                       
                                    
                                 
                                 
                                    new
                                 
                              
                              (
                              t
                              )
                              =
                              
                                 ∫
                                 
                                    0
                                 
                                 
                                    t
                                 
                              
                              
                                 
                                    q
                                 
                                 
                                    new
                                 
                              
                              (
                              u
                              )
                              |
                              
                                 
                                    q
                                 
                                 
                                    new
                                 
                              
                              (
                              u
                              )
                              |
                              du
                           
                        , and (iii) scale and center 
                           
                              
                                 
                                    
                                       
                                          β
                                       
                                       
                                          ̃
                                       
                                    
                                 
                                 
                                    new
                                 
                              
                           
                         to obtain 
                           
                              
                                 
                                    β
                                 
                                 
                                    new
                                 
                              
                           
                         with the same length and centroid as 
                           
                              β
                           
                        .

An important advantage of this shape prior formulation beyond that of its highly desirable intrinsic nature is that it makes use of the information given in the first moment 
                           
                              μ
                           
                         as well as the second moment K. An often used prior energy takes the form 
                           
                              d
                              
                                 
                                    (
                                    [
                                    q
                                    ]
                                    ,
                                    [
                                    μ
                                    ]
                                    )
                                 
                                 
                                    2
                                 
                              
                           
                        , that is, squared distance from the current shape to the mean. Although this energy does incorporate prior knowledge in driving the active contour toward the mean of a training shape class, it does not allow for evolution along any directions of variance that may be more important than others. In other words, the prior energy does not incorporate any additional structure to account for these important directions of variability inherent to the shape class; instead, it allows for only a simple isotropic flow. Consequently, adding to 
                           
                              
                                 
                                    E
                                 
                                 
                                    prior
                                 
                              
                           
                         the information given from the second moment K will drive an evolving active contour towards the prior mean in a much more efficient and natural manner according to the underlying variation within the shape class. Fig. 7
                         gives an example of this phenomenon.

The total energy of the active contour model is given as the weighted sum of the three individual energies presented in the preceding subsections. Thus the differential equation in (8) governing the active contour evolution becomes
                           
                              (12)
                              
                                 
                                    
                                       ∂
                                    
                                    
                                       ∂
                                       s
                                    
                                 
                                 β
                                 (
                                 t
                                 ,
                                 s
                                 )
                                 =
                                 (
                                 
                                    
                                       λ
                                    
                                    
                                       1
                                    
                                 
                                 
                                    
                                       ℓ
                                    
                                    
                                       β
                                    
                                 
                                 (
                                 t
                                 ,
                                 s
                                 )
                                 -
                                 
                                    
                                       λ
                                    
                                    
                                       2
                                    
                                 
                                 
                                    
                                       κ
                                    
                                    
                                       β
                                    
                                 
                                 (
                                 t
                                 ,
                                 s
                                 )
                                 )
                                 n
                                 (
                                 s
                                 ,
                                 t
                                 )
                                 -
                                 
                                    
                                       λ
                                    
                                    
                                       3
                                    
                                 
                                 ∇
                                 
                                    
                                       E
                                    
                                    
                                       prior
                                    
                                 
                                 (
                                 β
                                 )
                                 (
                                 t
                                 ,
                                 s
                                 )
                                 .
                              
                           
                        
                     

In our implementation, we use a forward difference approximation of the time derivative on the left hand side, and, after dropping the arguments 
                           
                              (
                              t
                              ,
                              s
                              )
                           
                         for brevity, Eq. (12) becomes
                           
                              
                                 
                                    
                                       β
                                    
                                    
                                       (
                                       n
                                       +
                                       1
                                       )
                                    
                                 
                                 =
                                 
                                    
                                       β
                                    
                                    
                                       (
                                       n
                                       )
                                    
                                 
                                 +
                                 (
                                 
                                    
                                       λ
                                    
                                    
                                       1
                                    
                                 
                                 
                                    
                                       ℓ
                                    
                                    
                                       
                                          
                                             β
                                          
                                          
                                             (
                                             n
                                             )
                                          
                                       
                                    
                                 
                                 -
                                 
                                    
                                       λ
                                    
                                    
                                       2
                                    
                                 
                                 
                                    
                                       κ
                                    
                                    
                                       
                                          
                                             β
                                          
                                          
                                             (
                                             n
                                             )
                                          
                                       
                                    
                                 
                                 )
                                 n
                                 -
                                 
                                    
                                       λ
                                    
                                    
                                       3
                                    
                                 
                                 ∇
                                 
                                    
                                       E
                                    
                                    
                                       prior
                                    
                                 
                                 (
                                 
                                    
                                       β
                                    
                                    
                                       (
                                       n
                                       )
                                    
                                 
                                 )
                                 .
                              
                           
                        Note that the time stepping constant 
                           
                              Δ
                              s
                           
                         is implicitly multiplied to each 
                           
                              
                                 
                                    λ
                                 
                                 
                                    i
                                 
                              
                           
                        . That is, an appropriate time step for numerical stability can be taken into account in the user’s selection of the 
                           
                              
                                 
                                    λ
                                 
                                 
                                    i
                                 
                              
                           
                        ’s, so we do not include 
                           
                              Δ
                              s
                           
                         in the written equation.

Since the above evolution seeks a local minimum of total energy rather than a global minimum, the final result is highly dependent on the initialization 
                           
                              
                                 
                                    β
                                 
                                 
                                    (
                                    0
                                    )
                                 
                              
                           
                        , and until now we have yet to discuss any techniques to implement this key step of the segmentation process. There are many ways to automatically plant an initial seed that encloses the objective target. For all data we work with in the scope of this paper, there is only one target in each image, and the target is the brightest part of the image; thus, a simple automatic initialization would be to draw a circle of a sufficiently large radius centered at the pixel with the highest intensity value. In order to start the active contour closer to the final desired boundary, a more sophisticated approach is to apply an image filter, such as a Gaussian or median filter, and then threshold the image at a certain intensity value to create a binary image. A boundary curve is then placed around the connected region containing the brightest pixel value, which serves as the initialization to the active contour algorithm. Automatic seed initialization of any level of sophistication quite often fails in noisy imaging environments such as SAS, so a commonplace approach is to request a user input of a manual initialization. Any manual initialization is performed in a crude manner, i.e. such that the seed is generally close to the apparent target boundary but not directly on it in order to reduce the effect of any human bias to the results.

There are also many options for a stopping criterion. In this algorithm we have direct access to the total energy, and thus we make use of this information to stop the active contour appropriately. We stop the algorithm when 
                           
                              |
                              
                                 
                                    E
                                 
                                 
                                    total
                                 
                                 
                                    (
                                    n
                                    )
                                 
                              
                              -
                              
                                 
                                    E
                                 
                                 
                                    total
                                 
                                 
                                    (
                                    n
                                    -
                                    1
                                    )
                                 
                              
                              |
                              <
                              τ
                           
                        , where 
                           
                              τ
                           
                         is some small tolerance, that is, when the total energy does not change much between time iterations. Often times the energy gradient oscillates on an order greater than 
                           
                              τ
                           
                         as n increases, so it is beneficial to apply some smoothing to the sequence of 
                           
                              
                                 
                                    E
                                 
                                 
                                    total
                                 
                              
                           
                        ’s before checking the difference. Of course, it is also necessary to impose a maximum number of iterations in case the energy function does not converge.

@&#EXPERIMENTAL RESULTS@&#

We demonstrate the proposed framework using a number of scenarios for boundary extraction in SAS imagery. In this section, we first provide a procedure that measures the performance of our algorithm when segmenting SAS imagery with shape prior compared to that when segmenting without shape prior. Then we describe two SAS datasets on which we perform this experiment, and we give the subsequent results and analyses with examples.

We test our proposed Bayesian active contour algorithm on SAS datasets where we know a priori the number of target classes, 
                           
                              
                                 
                                    N
                                 
                                 
                                    class
                                 
                              
                           
                        , that are present in each dataset. Before running the algorithm and measuring its performance on this data, we must first complete a few tasks. First, obtain ground truth segmentations of the target in each image. This step can be accomplished by a single human with expertise in sonar imagery, i.e. someone who can hand-segment a consistently accurate target boundary in SAS imagery, or can it can be accomplished by averaging over many non-expert human hand segmentations. For each image, denote the associated ground truth curve as 
                           
                              
                                 
                                    β
                                 
                                 
                                    true
                                 
                              
                           
                         and its SRVF as 
                           
                              
                                 
                                    q
                                 
                                 
                                    true
                                 
                              
                           
                        . These ground truth shapes will be used in the calculation of 
                           
                              
                                 
                                    E
                                 
                                 
                                    prior
                                 
                              
                           
                         as well as 
                           
                              
                                 
                                    E
                                 
                                 
                                    image
                                 
                              
                           
                        . Next, use the ground truth segmentations to create the target and background pixel densities 
                           
                              
                                 
                                    p
                                 
                                 
                                    in
                                 
                              
                           
                         and 
                           
                              
                                 
                                    p
                                 
                                 
                                    out
                                 
                              
                           
                         as well as the resultant log-likelihood function 
                           
                              ℓ
                           
                         for use in the calculation of 
                           
                              ∇
                              
                                 
                                    E
                                 
                                 
                                    image
                                 
                              
                           
                         as outlined in Section 3. Finally, select appropriate values for the parameters 
                           
                              
                                 
                                    λ
                                 
                                 
                                    1
                                 
                              
                              ,
                              
                                 
                                    λ
                                 
                                 
                                    2
                                 
                              
                           
                        , and 
                           
                              
                                 
                                    λ
                                 
                                 
                                    3
                                 
                              
                           
                        .

The goal of this experiment is to compare the performance of our active contour algorithm with and without shape prior on SAS data. That is, we wish to measure how well the final extracted contour represents the true target boundary in each case. In order to achieve this goal, we must measure not only how well the final contour matches the ground truth shape but also how well the image information within the regions defined by the final contour match the baseline pixel distributions. Below we outline the procedures for measuring the performance of our active contour algorithm without and with shape prior. For a particular test image, let 
                           
                              
                                 
                                    q
                                 
                                 
                                    ˆ
                                 
                              
                           
                         be the SRVF of the final extracted contour 
                           
                              
                                 
                                    β
                                 
                                 
                                    ˆ
                                 
                              
                           
                        , and let 
                           
                              
                                 
                                    
                                       
                                          p
                                       
                                       
                                          ˆ
                                       
                                    
                                 
                                 
                                    in
                                 
                              
                           
                         be the pixel intensity distribution of the target region defined by 
                           
                              
                                 
                                    β
                                 
                                 
                                    ˆ
                                 
                              
                           
                        .


                        Without shape prior: For each image,
                           
                              1.
                              Obtain 
                                    
                                       
                                          
                                             β
                                          
                                          
                                             ˆ
                                          
                                       
                                    
                                  and its corresponding SRVF 
                                    
                                       
                                          
                                             q
                                          
                                          
                                             ˆ
                                          
                                       
                                    
                                  with 
                                    
                                       
                                          
                                             λ
                                          
                                          
                                             3
                                          
                                       
                                       =
                                       0
                                    
                                 .

Calculate 
                                    
                                       
                                          
                                             d
                                          
                                          
                                             s
                                          
                                       
                                       (
                                       [
                                       
                                          
                                             q
                                          
                                          
                                             ˆ
                                          
                                       
                                       ]
                                       ,
                                       [
                                       
                                          
                                             q
                                          
                                          
                                             true
                                          
                                       
                                       ]
                                       )
                                    
                                 , the geodesic distance in shape space between the extracted contour and the ground truth contour.

Calculate 
                                    
                                       
                                          
                                             
                                                
                                                   p
                                                
                                                
                                                   ˆ
                                                
                                             
                                          
                                          
                                             in
                                          
                                       
                                    
                                  and compute 
                                    
                                       
                                          
                                             d
                                          
                                          
                                             P
                                          
                                       
                                       (
                                       
                                          
                                             
                                                
                                                   p
                                                
                                                
                                                   ˆ
                                                
                                             
                                          
                                          
                                             in
                                          
                                       
                                       ,
                                       
                                          
                                             p
                                          
                                          
                                             in
                                          
                                       
                                       )
                                    
                                 , where 
                                    
                                       
                                          
                                             d
                                          
                                          
                                             P
                                          
                                       
                                       (
                                       ·
                                       ,
                                       ·
                                       )
                                    
                                  is an appropriate distance between probability distributions. We use earth mover’s distance (EMD) in this experiment.

Now for each image in the dataset, we have two distance values: a shape distance from ground truth and a pixel distribution distance from ground truth. We display these results by estimating two probability distributions from the normalized histograms of these two distance values.


                        With shape prior:
                        
                           
                              1.
                              Randomly select 
                                    
                                       
                                          
                                             N
                                          
                                          
                                             train
                                          
                                       
                                    
                                  number of training shapes in each class from the given ground truth shapes. Form each shape class 
                                    
                                       (
                                       
                                          
                                             Q
                                          
                                          
                                             i
                                          
                                       
                                       ,
                                       
                                          
                                             μ
                                          
                                          
                                             i
                                          
                                       
                                       ,
                                       
                                          
                                             K
                                          
                                          
                                             i
                                          
                                       
                                       )
                                       ,
                                       i
                                       =
                                       1
                                       ,
                                       …
                                       ,
                                       
                                          
                                             N
                                          
                                          
                                             class
                                          
                                       
                                    
                                 , via the procedures outlined in Section 2. Designate the remaining images as test images.

For each test image,
                                    
                                       (a)
                                       Obtain 
                                             
                                                
                                                   
                                                      β
                                                   
                                                   
                                                      ˆ
                                                   
                                                
                                             
                                           and its corresponding SRVF 
                                             
                                                
                                                   
                                                      q
                                                   
                                                   
                                                      ˆ
                                                   
                                                
                                             
                                           with 
                                             
                                                
                                                   
                                                      λ
                                                   
                                                   
                                                      3
                                                   
                                                
                                                >
                                                0
                                             
                                           and shape prior from the appropriate class 
                                             
                                                (
                                                
                                                   
                                                      Q
                                                   
                                                   
                                                      i
                                                   
                                                
                                                ,
                                                
                                                   
                                                      μ
                                                   
                                                   
                                                      i
                                                   
                                                
                                                ,
                                                
                                                   
                                                      K
                                                   
                                                   
                                                      i
                                                   
                                                
                                                )
                                             
                                          .

Calculate 
                                             
                                                
                                                   
                                                      d
                                                   
                                                   
                                                      s
                                                   
                                                
                                                (
                                                [
                                                
                                                   
                                                      q
                                                   
                                                   
                                                      ˆ
                                                   
                                                
                                                ]
                                                ,
                                                [
                                                
                                                   
                                                      q
                                                   
                                                   
                                                      true
                                                   
                                                
                                                ]
                                                )
                                             
                                          , the geodesic distance in shape space between the extracted contour and the ground truth contour.

Calculate 
                                             
                                                
                                                   
                                                      
                                                         
                                                            p
                                                         
                                                         
                                                            ˆ
                                                         
                                                      
                                                   
                                                   
                                                      in
                                                   
                                                
                                             
                                           and compute 
                                             
                                                
                                                   
                                                      d
                                                   
                                                   
                                                      P
                                                   
                                                
                                                (
                                                
                                                   
                                                      
                                                         
                                                            p
                                                         
                                                         
                                                            ˆ
                                                         
                                                      
                                                   
                                                   
                                                      in
                                                   
                                                
                                                ,
                                                
                                                   
                                                      p
                                                   
                                                   
                                                      in
                                                   
                                                
                                                )
                                             
                                          , where 
                                             
                                                
                                                   
                                                      d
                                                   
                                                   
                                                      P
                                                   
                                                
                                                (
                                                ·
                                                ,
                                                ·
                                                )
                                             
                                           is EMD.

Go back to step (1) and repeat the process for 
                                    
                                       
                                          
                                             N
                                          
                                          
                                             iter
                                          
                                       
                                    
                                  iterations.

Again, we display the results by estimating two probability distributions from the normalized histograms of these two distance values obtained throughout the experiment.

We perform the above experiment on two datasets: a dataset of simulated SAS imagery, the PC SWAT dataset, and a dataset of real SAS imagery, the NURC dataset. For each dataset, we use 
                           
                              
                                 
                                    N
                                 
                                 
                                    iter
                                 
                              
                              =
                              5
                           
                         and 
                           
                              
                                 
                                    N
                                 
                                 
                                    train
                                 
                              
                              =
                              10
                           
                        . The datasets are described in the following subsections along with results from the above experiment.

This sonar image database was created from the Shallow Water Acoustics Toolkit (SWAT), a program developed by the Naval Surface Warfare Center Panama City Division (NSWC PCD) that synthesizes SAS imagery of various targets in realistic seabed environments. In this particular dataset, four classes of targets were generated, namely box, cone, sphere, and cylinder, at varying aspect angles and with varying target and background intensity. We consider only two targets in our boundary extraction experiment, cylinder and box, since the other two classes, sphere and cone, are radially symmetric and provide no within-class shape variation with respect to aspect angle.


                        Fig. 8
                         shows three images of a cylinder and three images of a box from the PC SWAT database. Fig. 1 in Section 3 shows an example of 20 target shapes from each class and their corresponding Karcher means. Fig. 9
                         shows the estimated target and background prior pixel densities 
                           
                              
                                 
                                    p
                                 
                                 
                                    in
                                 
                              
                           
                         and 
                           
                              
                                 
                                    p
                                 
                                 
                                    out
                                 
                              
                           
                         as well as the log-likelihood function 
                           
                              ℓ
                           
                         for different pixel values. Although these functions are computed over the entire pixel intensity domain 
                           
                              [
                              0
                              ,
                              1
                              ]
                           
                        , we show these plots only over the interval 
                           
                              [
                              0
                              ,
                              0.25
                              ]
                           
                         for display purposes. After about an intensity of 0.065, the log-likelihood function appears to level off to a constant value of about 4.375, but it becomes increasingly unstable due to numerical errors; thus, we manually force the log-likelihood curve to remain at a constant 4.375 after this point in the domain.

We run the performance experiment described in the previous subsection on 72 images from the PC SWAT dataset, 36 from each of the two classes. Fig. 10
                         shows an example of the segmentation of one cylinder and one box from this experiment. Here we show for both cases the test image, the image transformed via the log-likelihood function 
                           
                              ℓ
                           
                        , the binary image representing 
                           
                              
                                 
                                    Ω
                                 
                                 
                                    in
                                 
                              
                           
                         and 
                           
                              
                                 
                                    Ω
                                 
                                 
                                    out
                                 
                              
                           
                        , the segmentation without shape prior, the segmentation with shape prior, and the ground truth manual segmentation. Both cases highlight the necessity for shape prior in obtaining a segmentation result resembling that of ground truth. The left plot in Fig. 11
                         shows the estimated densities of geodesic shape distances obtained from this performance experiment, and the right plot shows the estimated densities of EMD from 
                           
                              
                                 
                                    
                                       
                                          p
                                       
                                       
                                          ˆ
                                       
                                    
                                 
                                 
                                    in
                                 
                              
                           
                         to 
                           
                              
                                 
                                    p
                                 
                                 
                                    in
                                 
                              
                           
                        . The features in these plots indicate that with the addition of shape prior to the model, both distance values, geodesic and EMD, are on average smaller than without shape prior; thus, the use of shape prior improves the segmentation performance on this dataset.


                        Figs. 12 and 13
                        
                         show a variety of instances from this experiment where the addition of shape prior fixes a segmentation that fails without shape prior. Fig. 12 shows the segmentation results on the cylinder target class, and Fig. 13 shows the segmentation results on the box target class. Each row shows the segmentations achieved on the same image with no prior as well as with each shape prior, and it shows the ground truth manual segmentation. Quite often the segmentation without the shape prior can often get trapped in false boundaries. Problems arise when the speckle noise in the background is on the same intensity level as a typical target pixel or when there is missing target shape information due to occlusion by shadow. Also if the target region is not connected, the segmentation without prior will not fill in any implied boundaries to overcome any disconnectedness. Without topological change the active contour loops over itself when encountering disconnected target components or high levels of background speckle noise, and the segmentations with such loops contribute greatly to the poor performance without shape prior seen in Fig. 11. The addition of shape prior corrects these issues. For comparison, we ran the algorithm of Li et al. [15] on the same images and obtained results shown in the rightmost column. It can be seen that without a shape prior, this method is also liable to obtain multiple contours or get stuck in false boundaries. In order to compare computational cost, we ran 300 iterations of our method (with and without prior) and Li et al.’s method. The average timings of our method are: 1.14s (without prior) and 24s (with prior), while the average timing of Li et al.’s method is 53s.

In addition to using synthesized sonar data from the SWAT program, we test the segmentation performance of our Bayesian active contour model on real SAS field data gathered by the NATO Undersea Research Center (NURC). The dataset we consider from this sonar system consists of multiview imagery at several aspects of three target classes: cylinders, truncated cones, and wedges. We found that the shapes of the wedge target class separated into two distinct shape classes; thus, we model the targets in this dataset with four shape classes denoted cylinder, cone, wedge 1, and wedge 2. Three example images of each class are shown in Fig. 14
                        , and example shape classes with their respective Karcher means are shown in Fig. 15
                        . Fig. 16
                         shows the estimated target and background pixel densities 
                           
                              
                                 
                                    p
                                 
                                 
                                    in
                                 
                              
                           
                         and 
                           
                              
                                 
                                    p
                                 
                                 
                                    out
                                 
                              
                           
                         as well as the log-likelihood function 
                           
                              ℓ
                           
                         for the NURC dataset. As in the PC SWAT dataset, these functions are computed over the entire pixel intensity domain 
                           
                              [
                              0
                              ,
                              1
                              ]
                           
                        , but we show these plots only over the interval 
                           
                              [
                              0
                              ,
                              0.08
                              ]
                           
                         for display purposes. The ratio of average target pixel intensity to average background pixel intensity is 10.2 in the NURC dataset compared to 8.8 in the PC SWAT dataset, giving the NURC dataset a higher SNR than the PC SWAT dataset. Also, we can see that it exhibits a smaller amount of speckle noise in the background compared to the PC SWAT dataset.

We run the aforementioned performance experiment on 150 images from the NURC dataset and observe that due to the improved image quality over the PC SWAT dataset, the segmentation without prior does not fail quite as often. The estimated densities of EMD and of geodesic distances obtained without and with shape prior are closer in distribution to each other compared to those from the PC SWAT data. Fig. 17
                         shows similar plots as Fig. 11 for this experiment, and although we see improved performance without shape prior, the benefits of including the prior are still apparent. As in our display of PC SWAT results, we show various segmentation results from each of the four shape classes – cylinder, cone, wedge 1, wedge 2 – in Figs. 18–21
                        
                        
                        
                         respectively. In each example, the addition of the correct shape prior improves the performance of the algorithm.

Segmentation of targets in SAS imagery is a difficult problem due to the inherent properties of sonar images such as background speckle noise, occlusions from shadows, and muddled boundaries from low resolution. Thus, it is necessary to include in any segmentation algorithm some prior knowledge of the shape of the target of interest. We present a parametric active contour model that incorporates state of the art shape statistics in a Bayesian approach to image segmentation. Prior shape models are built as densities on principal subspaces of the tangent space of a Riemannian manifold of closed contours equipped with an elastic metric for comparison. Evolution of an active contour model that includes a shape prior energy term based on these shape statistics can help overcome the difficulties of segmenting in a noisy imaging environment such as SAS. On two separate SAS image databases, synthetic and real, we show that the addition of shape prior produces an estimated target boundary that more closely resembles that of ground truth.

Future research efforts will be dedicated to studying the overall classification performance using this active contour algorithm. The classification procedure is defined as follows. Evaluate all possible models under the MAP framework by running the active contour model 
                        
                           
                              
                                 N
                              
                              
                                 class
                              
                           
                        
                      times, each time using a different shape prior. This yields 
                        
                           
                              
                                 N
                              
                              
                                 class
                              
                           
                        
                      final extracted boundaries 
                        
                           {
                           
                              
                                 
                                    
                                       β
                                    
                                    
                                       ˆ
                                    
                                 
                              
                              
                                 i
                              
                           
                           }
                        
                      as defined in Eq. (1). Each 
                        
                           
                              
                                 
                                    
                                       β
                                    
                                    
                                       ˆ
                                    
                                 
                              
                              
                                 i
                              
                           
                        
                      is a local minimizer of the energy functional
                        
                           (13)
                           
                              
                                 
                                    E
                                 
                                 
                                    total
                                 
                                 
                                    i
                                 
                              
                              =
                              
                                 
                                    λ
                                 
                                 
                                    1
                                 
                              
                              
                                 
                                    E
                                 
                                 
                                    image
                                 
                              
                              +
                              
                                 
                                    λ
                                 
                                 
                                    2
                                 
                              
                              
                                 
                                    E
                                 
                                 
                                    smooth
                                 
                              
                              +
                              
                                 
                                    λ
                                 
                                 
                                    3
                                 
                              
                              
                                 
                                    E
                                 
                                 
                                    prior
                                 
                                 
                                    i
                                 
                              
                              ,
                           
                        
                     the total energy defined from the ith shape prior, 
                        
                           i
                           =
                           1
                           ,
                           …
                           ,
                           
                              
                                 N
                              
                              
                                 class
                              
                           
                        
                     . To classify the target, select the class that yields the minimum posterior energy. That is, class label 
                        
                           =
                           
                              
                                 argmin
                              
                              
                                 i
                              
                           
                           
                              
                                 E
                              
                              
                                 total
                              
                              
                                 i
                              
                           
                           (
                           
                              
                                 
                                    
                                       β
                                    
                                    
                                       ˆ
                                    
                                 
                              
                              
                                 i
                              
                           
                           )
                        
                     . Classification proves to be a difficult task due to the poor image qualities of SAS, and we will study this process in detail in future efforts.

@&#ACKNOWLEDGMENTS@&#

The authors would like to acknowledge the NATO Undersea Research Center for providing us the SAS field data as well as the Naval Surface Warfare Center Panama City Division for providing us the PC SWAT data. This work was supported in part by the Naval Surface Warfare Center Panama City Division In-house Laboratory Independent Research program funded by the Office of Naval Research and by the Grants Office of Naval Research 
                  N00014-09-1-0664 and National Science Foundation (NSF) 
                  DMS-0915003 (to AS). We would also like to acknowledge and thank Dr. Kerry Commander at NSWC PCD for his support of this work.

@&#REFERENCES@&#

