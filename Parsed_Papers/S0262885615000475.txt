@&#MAIN-TITLE@&#Non-negative matrix completion for action detection

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           Developing a multi-label classification framework with a convex optimization process for activity detection.


                        
                        
                           
                           Histogram correction for activity representation in each class, to localize activities in a weakly supervised setting.


                        
                        
                           
                           Proposing a new formulation for matrix completion to deal with classification/localization in video.


                        
                        
                           
                           Developing an activity recognition system in a totally weakly supervised multi-label setting.


                        
                        
                           
                           Developing a non-negative matrix completion framework based on Alternating Direction Method (ADM).


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Matrix completion

Multi-label classification

Weakly supervised classification

Human activity recognition

Alternating direction method

Convex optimization

@&#ABSTRACT@&#


               
               
                  With the increasing number of videos all over the Internet and the increasing number of cameras looking at people around the world, one of the most interesting applications would be human activity recognition in videos. Many researches have been conducted in the literature for this purpose. But, still recognizing activities in a video with unrestricted conditions is a challenging problem. Moreover, finding the spatio-temporal location of the activity in the video is another issue. In this paper, we present a method based on a non-negative matrix completion framework, that learns to label videos with activity classes, and localizes the activity of interest spatio-temporally throughout the video. This approach has a multi-label weakly supervised setting for activity detection, with a convex optimization procedure. The experimental results show that the proposed approach is competitive with the state-of-the-art methods.
               
            

@&#INTRODUCTION@&#

Action detection and recognition has many applications, including vision based surveillance, human–computer interaction, patient monitoring systems and a lot more [1,2]. This makes it a very important field in the computer vision studies, today. Understanding the behavior of an individual in a video sequence is a challenging task due to several different issues, including the large variability in the imaging conditions as well as the way different people perform a particular action, while in the meantime the background clutter and motion make the problem of extracting information from a human action rather difficult. Furthermore, the high dimensionality of such data is another significant challenge for these recognition problems.

The problem of action detection is comprised of two subproblems, recognition and localization. Traditional approaches use fully annotated video datasets for the process of learning, where each video is labeled with an activity class and the activity location is defined, usually via bounding boxes for in each individual video frame. But it is very hard to provide ground truth data which labels every individual action in the video sequence, with bounding boxes for the action in every frame. Thus, an approach which can recognize actions in videos and extract its spatio-temporal location is of great interest. For this purpose, we consider a weakly supervised setting, where instead of labeling the manually annotated spatio-temporal locations (bounding boxes), we label each video with one or more particular action classes. With this formulation, we will be dealing with only positive and negative videos, for each action. Negative videos are those which do not have any instances of the activity of interest. On the other hand, positive videos of a particular activity contain the activity of interest somewhere in their sequence of frames, but we do not know where. Since the supervision is weak, providing datasets for training would be a simple task, whereas, the learning task would be a challenging one.

One might notice that this problem is very similar to the formulation of a Multiple-Instance Learning (MIL) problem [3–6]. In MIL, the learning task is to learn a concept to recognize positive instances in a bunch of positive and negative bags. Negative bags contain all negative instances, while positive bags contain at least one positive instance. The objective would be to train from previously labeled positive and negative bags to find positive instances in both train and test bags. For our purpose, we are also dealing with videos which may or may not contain an activity of interest. Accordingly, we could model the videos as positive or negative bags. Nonetheless, this could not be done so easily, and the problem is not equivalent to one of a MIL method. This is because a video sequence is a single entity and is not composed of a bunch of instances, in which the activity or activities of interest happen.

In order to model our problem in a MIL framework, we use a simple technique to break a video down to several potential activity regions and the rest as the background. We treat a video as a vector of quantized features, similar to the bag of words (BoWs) model [7]. During the recognition procedure we correct the representative feature vector of each video such that the non-activity regions are taken out. This is done via rank minimization criteria over the features matrix. This framework learns a latent representation for each activity in the whole dataset and finds the best action label(s) for each test video. A simple search throughout the potential spatio-temporal regions in the video, can find us the location of the activity of interest in space and time. Fig. 1
                      shows some sample frames from the Hollywood Human Action (HOHA) dataset, where potential activity regions are marked using yellow bounding boxes. The selected region for the activity of interest in depicted in green. Fig. 2
                      illustrates the process of activity detection, presented in this paper. We provide our learner with a number of videos, each of which has been weakly labeled with one or a number of actions. The testing procedure would be defined as determining the label(s) for each unlabeled video, along with finding the spatio-temporal region(s) of the activity or activities. We test our approach on five well-known activity recognition datasets: KTH, Weizmann, MSR2, HOHA and UCF Sports.

As also discussed earlier, activity recognition/localization is a hard task due to the clutter and the noise from the background and/or the imaging conditions, besides the variability in performing the actions by the subjects. Many previous works have targeted activity recognition [8–12] and localization [13–17], but few works have proposed methods to solve both, simultaneously [18–24]. Most approaches use fully annotated datasets and train a recognition/localization framework in fully supervised settings. In order to address the above issues different features have been introduced [8,25], interest region detectors such as space–time volumes [26] or trajectories [27,10] have been used and different classifiers are utilized [28,25]. These methods have improved recognition results, but they often do not incorporate spatial and temporal relationships between regions of interest in videos. Hence, recognizing and localizing activities as a joint process in weakly supervised settings could improve both recognition and localization results.

We observe that joint recognition and localization of human activities in a weakly supervised setting is a very good application for MIL, since labeling videos and annotating the activity in every single frame is a very arduous task. On the other hand, each video in the dataset could be treated as a positive or negative bag (containing or not contracting an activity of interest). We develop a MIL model, based on low-rank matrix completion, where the features vector for each video is polished to take the background context and non-activity related regions effects out. Thence, we will be able recover a representative feature vector for each single activity in the dataset in a convex multi-label setting. Furthermore, we use a number of fixed length histogram of densely sampled features, which captures both the visual content of the scene and the temporal changes in the scene. Therefore, our method is mostly independent from the video content, view point and the background/imaging conditions, to some extent.

Our contributions could be summarized as: (1) developing a multi-label recognition framework with a convex optimization process for the problem of activity recognition, in which we use the well known matrix completion to recover the labels for the test videos. Each video may have one or more activities of interest occurring in different spatio-temporal segments. (2) Using the histograms of densely sampled features throughout the video and correcting the histograms such that for each class a representative histogram is extracted. This histogram could be searched in the video over the potential locations of the activity, to localize the activity, spatio-temporally. (3) Proposing a new formulation for matrix completion to deal with recognition/localization in video. (4) Developing an activity recognition system in a weakly supervised multi-label setting. (5) Developing a non-negative matrix completion framework based on Alternating Direction Method (ADM) of multipliers.

The rest of the paper is organized as follows: Section 2 reviews the literature of the work and Section 3 explains the notations used in this paper. Section 4 discusses conventional matrix completion techniques. Section 5 explains the proposed approach in details and Section 6 gives the results on some real world datasets. Finally, Section 7 concludes the paper.

@&#RELATED WORKS@&#

Multiple-instance learning dates back to [29] for solving drug activity prediction problem with axis-parallel rectangles. Following that a simple general framework was proposed by [3], in which a probabilistic measure for diverse density is proposed. A search over the diverse density surface and finding the global maxima would lead to the solution to the multiple-instance learning problem. The authors in [4] have also proposed two approaches for maximum margin MIL based on support vector machines. In [5] the authors first calculate a likelihood ratio for each sample in all the bags using a support vector regression (SVR) model. Then they concatenate the likelihood ratios and a binary linear support vector machine (SVM) classifies these vectors as positive and negative. The samples inside each bag are classified using a threshold on their likelihood ratios. One of the works towards convex multiple instance learning was [30], in which the authors propose a model based on matrix completion for MIL. They propose two convex algorithms for matrix completion based on the fixed-point continuation (FPC) method, applied to image categorization.

Action recognition in videos has long been an interesting field of research and different methods have been investigated. Some researches use models that directly utilize bag-of-words (BoWs) representations [31,32]. Some other approaches decompose an action into smaller parts for capturing the local spatial or temporal structure of the activity and to better model the interaction between parts [18,33,11,33]. Some use the global spatio-temporal templates, such as motion history, spatio-temporal shapes and descriptors, the human model changing in time or other templates [34–36]. These approaches try to retain the visual shape and structure of the activity. Recently, most researches use approaches encoding the spatio-temporal layout of a video using a fixed space–time grid. As shown by Laptev et al. [8], compared to simple bag-of words [31], these approaches enhance the recognition rates.

Action localization is usually performed separately from the recognition phase. Most approaches often use spatio-temporal features to localize actions throughout the video. Tran and Yuan [13] use a max-margin structured output regression model. A kernel-based discriminative clustering algorithm is presented in [14], where movie scripts are used as a means of supervision. Tran et al. [15] and Yuan et al. [37] utilize a sub-volume search technique for action localization and [16] proposes a dictionary learning approach for the same problem. Gaidon et al. [17] proposed a model based on a sequence of atomic action units (actoms) which structures the bag-of-words model in a temporal context.

As discussed earlier, joint activity recognition and localization in video sequences could improve performance of both stages. Recently, weakly supervised learning models have been developed for activity recognition/localization and event detection in video sequences [18,20–24,38]. The approach proposed in recognizes activities using a multi-class SVM and an inference is done over temporal segments with dynamic programming. Lan et al. [20] recognize activities from a video while detecting its location and sub-patches to indicate the precise location of the activity. They train a latent SVM with a number of fully annotated videos. They build a model to localize and recognize a single action for each video and infer the sub-patches the action is happening in. The proposed method in [18] extracts spatio-temporal structures by forming clusters of trajectories (termed potential action parts). A graphical model is used to recognize a collection of these clusters as a particular action. Tang et al. [38] use a variable-duration hidden Markov model. Their algorithm divides each video into fixed length temporal segments and builds a structured temporal model on top of the features. The inference process uses an exact MAP inference formulation using dynamic programming, in which they find the sequence of states and durations that maximize a predefined energy function. Their activity segmentation is only restricted to the temporal segments. Another approach is proposed in [22], which constructs a space–time video graph, and finds the sub-graph that maximizes an activity classifier's score. The graph nodes for each video describe local video sub-regions, which are associated with weights learned with a linear SVM to show how much the node supports the action class. The edges between the nodes are determined by proximity in space and time. The detection problem, thus would be equivalent to solving a maximum-weight connected sub-graph problem that could identify both the spatial and temporal regions for a particular activity. Siva and Xiang [21] propose a simple model for solving the activity recognition/localization problem, where a person detector extracts potential action cuboids. The best potential cuboids for each action are selected by a genetic algorithm optimization procedure. Then, a SVM is trained for the recognition purpose. Hoai et al. [24] propose an approach for learning a discriminative sub-window classifier for object/action detection. It simultaneously localizes the instances of the positive class and learns a sub-window SVM to recognize them. In another work, [23] introduces hierarchical space–time segments for action recognition and localization.

Rank Minimization has recently gained a lot of attention, due to the simple, effective success in solving many problems. As denoted by [39,40] the minimization of the rank function can be achieved using the minimizer obtained with the nuclear norm, which is calculated as the sum of singular values. In the field of computer vision, nuclear norm minimization has been applied to many problems, namely: camera calibration [41], structure from motion [42], image segmentation [43], image categorization [44] and many more. In order to solve the rank minimization problem, many approaches are developed, such as Fixed Point Continuation [45], Augmented Lagrangian Multipliers method [46] and Alternating Direction Method [47].

Matrices are characterized by bold capital letters (like A). Non-bold letters are used for scalar variables. The scalar in the row i and column j of matrix A is denoted by aij
                     . 〈a
                     1,
                     a
                     2〉 is the inner product between two vectors a
                     1 and a
                     2. ‖a‖2
                     2
                     =〈a,
                     a〉=∑
                        i
                     
                     a
                     
                        i
                     
                     2 indicates the squared Euclidean Norm of the vector a. tr(A)=∑
                        i
                     
                     a
                     
                        ii
                      is the trace of A. 
                        
                           
                              A
                           
                           F
                        
                        =
                        
                           
                              t
                              r
                              
                                 
                                    
                                       A
                                       ⊺
                                    
                                    A
                                 
                              
                           
                        
                        =
                        
                           
                              
                                 
                                    ∑
                                    
                                       i
                                       j
                                    
                                 
                                 
                              
                              
                                 a
                                 
                                    i
                                    j
                                 
                              
                           
                        
                      is the Frobenius Norm of A, and ‖A‖⁎ the nuclear norm (sum of singular values) of A. ⨀ designates the Hadamard or elementwise product.

Matrix Completion is the process of recovering a matrix from a sampling of its entries. We are interested in recovering a data matrix D from a matrix D
                     0, in which we only get to observe a number of its entries, which is comparably much smaller than the total number of elements in the matrix. Let Ω denote the set of known entries. With sufficiently large measurements and uniformly distributed entries in the matrix, we can assume that there is only one low-rank matrix with these entries [39]. So the optimization problem would be
                        
                           (1)
                           
                              
                                 
                                    
                                       minimize
                                       
                                       rank
                                       
                                          D
                                       
                                    
                                 
                                 
                                    
                                       subject
                                       
                                       t
                                       o
                                       
                                       
                                          D
                                          
                                             i
                                             j
                                          
                                       
                                       =
                                       
                                          D
                                          
                                             0
                                             
                                                i
                                                j
                                             
                                          
                                       
                                       
                                       
                                          i
                                          j
                                       
                                       ∈
                                       Ω
                                       .
                                    
                                 
                              
                           
                        
                     
                  

Unfortunately, this is a NP-hard optimization problem and all known algorithms, which provide exact solutions, require exponential time complexities relative to the matrix dimension, d. But as denoted by [40,39], if a matrix has rank r, then it should have exactly r nonzero singular values. Thus, the rank function could be characterized as the number of non-vanishing singular values. A simple estimate of the rank function can be defined as the sum of the singular values, σ
                        k
                     , over the constraint set, which is called the nuclear norm:
                        
                           (2)
                           
                              
                                 
                                    D
                                 
                                 *
                              
                              =
                              
                                 
                                    ∑
                                    
                                       k
                                       =
                                       1
                                    
                                    d
                                 
                                 
                              
                              
                                 σ
                                 k
                              
                              
                                 D
                              
                              .
                           
                        
                     
                  

An error term is incorporated, for robustness to a level of noise and outliers. The amount of error is controlled by a loss function, l(.). To avoid trivial solutions, this amount of error is also put in the minimization objective along with the matrix rank approximation (nuclear norm):
                        
                           (3)
                           
                              
                                 
                                    
                                       
                                       min
                                       
                                          
                                             D
                                          
                                          *
                                       
                                       +
                                       l
                                       
                                          E
                                       
                                    
                                 
                                 
                                    
                                       subject
                                       
                                       t
                                       o
                                       
                                       D
                                       =
                                       
                                          D
                                          0
                                       
                                       +
                                       E
                                    
                                 
                                 
                                    
                                       
                                       
                                          E
                                          
                                             i
                                             j
                                          
                                       
                                       =
                                       0
                                       
                                       f
                                       o
                                       r
                                       
                                       
                                          i
                                          j
                                       
                                       ∉
                                       Ω
                                       .
                                    
                                 
                              
                           
                        
                     
                  

Recently, this formulation has been used for classification tasks. A classification task is to learn the connection between the space of features X and the space of labels Y, from Ntr
                      training instances. Let m be the number of different classes (the number of labels), n the dimensionality of the feature space, N the number of total instances, and Ntr
                      and Ntst
                      the number of training and testing instances, respectively. As noted by Goldberg et al. [45] the problem of classifying Ntst
                      test entries can be cast as a Matrix Completion task. To this end, we can concatenate all labels and features into a single matrix:
                        
                           (4)
                           
                              
                                 D
                                 0
                              
                              =
                              
                                 
                                    
                                       
                                          
                                             
                                                
                                                   
                                                      Y
                                                      
                                                         t
                                                         r
                                                      
                                                   
                                                
                                                
                                                   
                                                      Y
                                                      
                                                         t
                                                         s
                                                         t
                                                      
                                                   
                                                
                                             
                                             
                                                
                                                   
                                                      X
                                                      
                                                         t
                                                         r
                                                      
                                                   
                                                
                                                
                                                   
                                                      X
                                                      
                                                         t
                                                         s
                                                         t
                                                      
                                                   
                                                
                                             
                                          
                                       
                                    
                                    
                                       
                                          
                                             1
                                             ⊺
                                          
                                       
                                    
                                 
                              
                              ,
                           
                        
                     where 
                        
                           Y
                           
                              t
                              r
                           
                        
                        ∈
                        
                           ℝ
                           
                              m
                              ×
                              
                                 N
                                 
                                    t
                                    r
                                 
                              
                           
                        
                      and 
                        
                           Y
                           
                              t
                              s
                              t
                           
                        
                        ∈
                        
                           ℝ
                           
                              m
                              ×
                              
                                 N
                                 
                                    t
                                    s
                                    t
                                 
                              
                           
                        
                      are the test and training labels and 
                        
                           X
                           
                              t
                              r
                           
                        
                        ∈
                        
                           ℝ
                           
                              n
                              ×
                              
                                 N
                                 
                                    t
                                    r
                                 
                              
                           
                        
                      and 
                        
                           X
                           
                              t
                              s
                              t
                           
                        
                        ∈
                        
                           ℝ
                           
                              n
                              ×
                              
                                 N
                                 
                                    t
                                    s
                                    t
                                 
                              
                           
                        
                      are the test and training feature vectors, respectively. If a linear classification model holds, the above matrix should be rank deficient. In this formulation, the classification process would be defined as filling the unknown entries in Ytst
                      such that the Nuclear Norm of D0
                      is minimized. This could be done via a convex minimization process [45,47,30]. In practice, we have errors and incomplete data in the training features and labels. So, we define the set of known entries in D0
                      as Ω
                        X
                      and Ω
                        Y
                      and zero out unknown entries:
                        
                           (5)
                           
                              D
                              =
                              
                                 
                                    
                                       
                                          
                                             D
                                             Y
                                          
                                       
                                    
                                    
                                       
                                          
                                             D
                                             X
                                          
                                       
                                    
                                    
                                       
                                          
                                             D
                                             1
                                          
                                       
                                    
                                 
                              
                              =
                              
                                 
                                    
                                       
                                          
                                             
                                                
                                                   
                                                      Y
                                                      
                                                         t
                                                         r
                                                      
                                                   
                                                
                                                
                                                   
                                                      Y
                                                      
                                                         t
                                                         s
                                                         t
                                                      
                                                   
                                                
                                             
                                             
                                                
                                                   
                                                      X
                                                      
                                                         t
                                                         r
                                                      
                                                   
                                                
                                                
                                                   
                                                      X
                                                      
                                                         t
                                                         s
                                                         t
                                                      
                                                   
                                                
                                             
                                          
                                       
                                    
                                    
                                       
                                          
                                             1
                                             ⊺
                                          
                                       
                                    
                                 
                              
                              +
                              
                                 
                                    
                                       
                                          
                                             
                                                
                                                   
                                                      E
                                                      
                                                         Y
                                                         
                                                            t
                                                            r
                                                         
                                                      
                                                   
                                                
                                                
                                                   0
                                                
                                             
                                             
                                                
                                                   
                                                      E
                                                      
                                                         X
                                                         
                                                            t
                                                            r
                                                         
                                                      
                                                   
                                                
                                                
                                                   
                                                      E
                                                      
                                                         X
                                                         
                                                            t
                                                            s
                                                            t
                                                         
                                                      
                                                   
                                                
                                             
                                          
                                       
                                    
                                    
                                       
                                          
                                             0
                                             ⊺
                                          
                                       
                                    
                                 
                              
                              .
                           
                        
                     
                  


                     DX
                      and DY
                      stand for the feature and label rows, and D1
                      is the last row of the matrix. Therefore, the classification process would be posed as finding the best Ytst
                      and the error matrix, E such that the rank of D
                     =
                     D
                     
                        0
                     
                     +
                     E is minimized [45]. This would be equivalent to [30]:
                        
                           (6)
                           
                              
                                 
                                    
                                       
                                       
                                          
                                             min
                                             D
                                          
                                       
                                       
                                          
                                             D
                                          
                                          *
                                       
                                       +
                                       
                                          1
                                          
                                             
                                                Ω
                                                X
                                             
                                          
                                       
                                       
                                          
                                             ∑
                                             
                                                i
                                                j
                                                ∈
                                                
                                                   Ω
                                                   X
                                                
                                             
                                          
                                          
                                       
                                       
                                          c
                                          x
                                       
                                       
                                          
                                             E
                                             
                                                X
                                                
                                                   i
                                                   j
                                                
                                             
                                          
                                       
                                       +
                                       
                                          
                                             λ
                                             1
                                          
                                          
                                             
                                                Ω
                                                Y
                                             
                                          
                                       
                                       
                                          
                                             ∑
                                             
                                                i
                                                j
                                                ∈
                                                
                                                   Ω
                                                   Y
                                                
                                             
                                          
                                          
                                       
                                       
                                          c
                                          y
                                       
                                       
                                          
                                             E
                                             
                                                Y
                                                
                                                   i
                                                   j
                                                
                                             
                                          
                                       
                                    
                                 
                                 
                                    
                                       subject
                                       
                                       t
                                       o
                                       
                                       D
                                       =
                                       
                                          D
                                          0
                                       
                                       +
                                       E
                                       ,
                                       
                                          D
                                          1
                                       
                                       =
                                       
                                          1
                                          ⊺
                                       
                                       ,
                                    
                                 
                              
                           
                        
                     where cy
                     (.) is a log loss function to emphasize the error on entries switching classes and cx
                     (.) is a least squares error. These two terms are to avoid trivial solutions and to penalize large distortions of D. The parameter λ1 is a positive trade-off weight [45,30]. This minimization problem can be solved using a Fixed Point Continuation (FPC) method [45] or an Alternating Direction Method (ADM) of multipliers [47].

Each video in the dataset is represented with the concatenation on a number of histograms of densely sampled features. We use histogram of gradient (HoG), histogram of optical flow (HoF) [8] and histogram of the oriented edges of the motion boundaries (HoMB) [10] descriptors. As shown by Laptev et al. [8], compared to the bag-of-words approaches, encoding the spatio-temporal layout of a video with a fixed space–time grid enhances the recognition rates. These histograms are computed on a regular grid at three different scales. For each descriptor (HoG, HoF, HoMB) an independent dictionary is used. This is done by using K-means, and quantizing all descriptors to the closest ℓ2 distance dictionary element. The concatenation of all three histograms forms the video descriptor, hi
                        , a column vector of size n.

As a result, the feature vector for each video forms a single column in DX
                        , and the video labels are accommodated in the corresponding column in DY
                        . Training and testing samples compose the data matrix. We consider some extra columns in the matrix in which we will recover a representative feature vector for each label (activity class), which will be discussed in details later. Like discussed in the previous section, Ω
                           X
                         and Ω
                           Y
                         denote the known entries in the matrix. The matrix completion process will recover the missing entries in our matrix. For our case, the missing entries are the test labels and the feature vectors representatives of each class. The recovered labels are used to determine the class or classes of activities in each test video, and a search throughout the video would find us the spatio-temporal location of each activity of interest, using its class representative.

We define a matrix D, as follows, to contain both training and testing instances, as well as a set of columns to find representatives for each activity class:
                           
                              (7)
                              
                                 D
                                 =
                                 
                                    
                                       
                                          
                                             
                                                D
                                                Y
                                             
                                          
                                       
                                       
                                          
                                             
                                                D
                                                X
                                             
                                          
                                       
                                       
                                          
                                             
                                                D
                                                1
                                             
                                          
                                       
                                    
                                 
                                 =
                                 
                                    
                                       
                                          
                                             
                                                
                                                   
                                                      
                                                         Y
                                                         
                                                            t
                                                            r
                                                         
                                                      
                                                   
                                                   
                                                      
                                                         Y
                                                         
                                                            t
                                                            s
                                                            t
                                                         
                                                      
                                                   
                                                   
                                                      
                                                         Y
                                                         rep
                                                      
                                                   
                                                
                                                
                                                   
                                                      
                                                         X
                                                         
                                                            t
                                                            r
                                                         
                                                      
                                                   
                                                   
                                                      
                                                         X
                                                         
                                                            t
                                                            s
                                                            t
                                                         
                                                      
                                                   
                                                   
                                                      
                                                         X
                                                         rep
                                                      
                                                   
                                                
                                             
                                          
                                       
                                       
                                          
                                             
                                                1
                                                ⊺
                                             
                                          
                                       
                                    
                                 
                                 +
                                 
                                    
                                       
                                          
                                             
                                                
                                                   
                                                      
                                                         E
                                                         
                                                            Y
                                                            
                                                               t
                                                               r
                                                            
                                                         
                                                      
                                                   
                                                   
                                                      0
                                                   
                                                   
                                                      0
                                                   
                                                
                                                
                                                   
                                                      
                                                         E
                                                         
                                                            X
                                                            
                                                               t
                                                               r
                                                            
                                                         
                                                      
                                                   
                                                   
                                                      
                                                         E
                                                         
                                                            X
                                                            
                                                               t
                                                               s
                                                               t
                                                            
                                                         
                                                      
                                                   
                                                   
                                                      0
                                                   
                                                
                                             
                                          
                                       
                                       
                                          
                                             
                                                0
                                                ⊺
                                             
                                          
                                       
                                    
                                 
                                 ,
                              
                           
                        where Yrep
                         would be an m
                        ×
                        m identity matrix. Each column of this matrix would be reserved for one activity class and the recovered corresponding column in Xrep
                         will be a feature vector representative for that class. Therefore, the objective function would be defined as minimizing the rank of the data matrix D, together with the error, matrix E. A sample composition of matrix D for videos from the multi-label MSR2 action dataset is shown in Fig. 3
                        . Since, we use histograms of quantized features to describe videos, our feature vectors are composed of non-negative values. Thus, we need to ensure that the completion process does not inject negative entries in the matrix. Consequently, we add a constraint D
                        
                           X
                        
                        ≥0:
                           
                              (8)
                              
                                 
                                    
                                       
                                          
                                          
                                             
                                                min
                                                
                                                   D
                                                   ,
                                                   
                                                      X
                                                      rep
                                                   
                                                
                                             
                                          
                                          
                                             
                                                D
                                             
                                             *
                                          
                                          +
                                          
                                             
                                                λ
                                                1
                                             
                                             
                                                
                                                   D
                                                   X
                                                
                                             
                                          
                                          
                                             
                                                ∑
                                                
                                                   i
                                                   ,
                                                   j
                                                   ∈
                                                   
                                                      D
                                                      X
                                                   
                                                
                                             
                                             
                                          
                                          
                                             l
                                             x
                                          
                                          
                                             
                                                d
                                                
                                                   i
                                                   j
                                                
                                             
                                             
                                                d
                                                
                                                   0
                                                   
                                                      i
                                                      j
                                                   
                                                
                                             
                                          
                                          +
                                          
                                             
                                                λ
                                                2
                                             
                                             
                                                
                                                   D
                                                   Y
                                                
                                             
                                          
                                          
                                             
                                                ∑
                                                
                                                   i
                                                   ,
                                                   j
                                                   ∈
                                                   
                                                      D
                                                      Y
                                                   
                                                
                                             
                                             
                                          
                                          
                                             l
                                             y
                                          
                                          
                                             
                                                d
                                                
                                                   i
                                                   j
                                                
                                             
                                             
                                                d
                                                
                                                   0
                                                   
                                                      i
                                                      j
                                                   
                                                
                                             
                                          
                                       
                                    
                                    
                                       
                                          subject
                                          
                                          t
                                          o
                                          
                                          D
                                          =
                                          
                                             D
                                             0
                                          
                                          +
                                          E
                                          ,
                                          
                                             D
                                             1
                                          
                                          =
                                          
                                             1
                                             ⊺
                                          
                                          ,
                                          
                                             D
                                             X
                                          
                                          ≥
                                          0
                                          ,
                                       
                                    
                                 
                              
                           
                        where ly
                        (.,.) is a log loss function, used to penalize labels changing from one class to the other. l
                        
                           x
                        (.,.)=χ2(.,.) is defined as a Pearson's distance between the entries of the initial and recovered data matrix, which has an asymmetric characteristic.
                           
                              (9)
                              
                                 
                                    l
                                    x
                                 
                                 
                                    a
                                    b
                                 
                                 =
                                 
                                    χ
                                    2
                                 
                                 
                                    a
                                    b
                                 
                                 =
                                 
                                    
                                       
                                          
                                             a
                                             −
                                             b
                                          
                                       
                                       2
                                    
                                    
                                       a
                                       +
                                       b
                                    
                                 
                                 ,
                              
                           
                        
                        
                           
                              (10)
                              
                                 
                                    l
                                    y
                                 
                                 
                                    a
                                    b
                                 
                                 =
                                 
                                    1
                                    γ
                                 
                                 log
                                 
                                    
                                       1
                                       +
                                       
                                          e
                                          
                                             
                                                −
                                                γ
                                                
                                                   
                                                      b
                                                      −
                                                      a
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                                 .
                              
                           
                        
                     

A convex minimization process could solve the problem and recover the best matrix. This is explained in details in the next subsection.

Let us, for simplicity, replace the second and the third terms in the objective function in (8) with f(E
                        
                           X
                        ) and g(E
                        
                           Y
                        ), respectively. Now, we need to convert it to the following equivalent problem:
                           
                              (11)
                              
                                 
                                    
                                       
                                          
                                          
                                             
                                                min
                                                
                                                   D
                                                   ,
                                                   E
                                                
                                             
                                          
                                          
                                             
                                                D
                                             
                                             *
                                          
                                          +
                                          f
                                          
                                             
                                                E
                                                X
                                             
                                          
                                          +
                                          g
                                          
                                             
                                                E
                                                Y
                                             
                                          
                                       
                                    
                                    
                                       
                                          subject
                                          
                                          t
                                          o
                                          
                                          D
                                          =
                                          
                                             D
                                             0
                                          
                                          +
                                          E
                                          ,
                                          
                                             D
                                             X
                                          
                                          =
                                          U
                                          ,
                                          −
                                          U
                                          ≤
                                          0
                                          ,
                                       
                                    
                                 
                              
                           
                        
                     

The D1
                        
                        =
                        1
                        T is enforced by keeping the last row of E equal to 0
                        ⊺ 
                        [46]. This problem could be solved using an ADM algorithm. The Lagrangian function would be:
                           
                              (12)
                              
                                 
                                    
                                       
                                          
                                             
                                                D
                                             
                                             *
                                          
                                          +
                                          f
                                          
                                             
                                                E
                                                X
                                             
                                          
                                          +
                                          g
                                          
                                             
                                                E
                                                Y
                                             
                                          
                                          +
                                          
                                             
                                                
                                                   ℒ
                                                   1
                                                
                                                ,
                                                D
                                                −
                                                
                                                   D
                                                   0
                                                
                                                −
                                                E
                                             
                                          
                                       
                                    
                                    
                                       
                                          
                                          +
                                          
                                             
                                                
                                                   ℒ
                                                   2
                                                
                                                ,
                                                
                                                   D
                                                   X
                                                
                                                −
                                                U
                                             
                                          
                                          +
                                          
                                             μ
                                             2
                                          
                                          
                                             
                                                
                                                   
                                                      
                                                         D
                                                         −
                                                         
                                                            D
                                                            0
                                                         
                                                         −
                                                         
                                                            E
                                                            X
                                                         
                                                      
                                                   
                                                   F
                                                   2
                                                
                                                +
                                                
                                                   
                                                      
                                                         
                                                            D
                                                            X
                                                         
                                                         −
                                                         U
                                                      
                                                   
                                                   F
                                                   2
                                                
                                             
                                          
                                          ,
                                       
                                    
                                 
                              
                           
                        where ℒ1 and ℒ2 are the Lagrange multipliers. The variables would be updated iteratively as illustrated in Algorithm 1. To ensure the convergence of the algorithm, we need to satisfy some KKT conditions [48] as well. They are discussed in the next subsection.
                           Algorithm 1
                           Non-negative matrix completion, using alternating direction method (ADM) of multipliers.
                                 
                                    
                                 
                              
                           

Step 1 of the algorithm, which consists a nuclear norm minimization could be solved using singular value thresholding (SVT) algorithm [49]. Fortunately, we do not have to solve the problem exactly, and updating D only once would still satisfy the convergence properties of the problem [46]. So, it is solved as
                           
                              (13)
                              
                                 
                                    U
                                    S
                                    V
                                 
                                 =
                                 s
                                 v
                                 d
                                 
                                    
                                       
                                          D
                                          k
                                       
                                       −
                                       
                                          D
                                          0
                                       
                                       −
                                       
                                          E
                                          k
                                       
                                       −
                                       
                                          
                                             ℒ
                                             1
                                          
                                          μ
                                       
                                    
                                 
                                 ,
                              
                           
                        
                        
                           
                              (14)
                              
                                 
                                    D
                                    
                                       k
                                       +
                                       1
                                    
                                 
                                 =
                                 U
                                 
                                    S
                                    μ
                                    −
                                 
                                 1
                                 
                                    S
                                 
                                 
                                    V
                                    ⊺
                                 
                                 ,
                              
                           
                        where USV
                        ⊺ is the singular value decomposition of the matrix, and 
                           
                              S
                              ϵ
                           
                           
                              .
                           
                         is a shrinkage or a proximal operator for the nuclear norm, defined as
                           
                              (15)
                              
                                 
                                    S
                                    ϵ
                                 
                                 
                                    x
                                 
                                 =
                                 
                                    
                                       
                                          
                                             x
                                             −
                                             ϵ
                                          
                                          
                                             if
                                             
                                             x
                                             >
                                             ϵ
                                             ,
                                          
                                       
                                       
                                          
                                             x
                                             +
                                             ϵ
                                          
                                          
                                             if
                                             
                                             x
                                             <
                                             −
                                             ϵ
                                             ,
                                          
                                       
                                       
                                          
                                             0
                                          
                                          
                                             otherwise
                                             .
                                          
                                       
                                    
                                 
                              
                           
                        
                     

The convergence properties of the optimization algorithms are dependent to the choice and variations in the parameter μ 
                        [46] and KKT (Karush–Kuhn–Tucker) conditions [48,50]. Let's call a combination of the variables present in the optimization process W:
                           
                              (16)
                              
                                 W
                                 :
                                 =
                                 
                                    D
                                    E
                                    U
                                    
                                       ℒ
                                       1
                                    
                                    
                                       ℒ
                                       2
                                    
                                 
                                 .
                              
                           
                        
                     

In order for W to be a KKT point, in the KTH iteration of the algorithm, it should satisfy the following conditions, which will pose as the stopping criterion of the algorithm, as well:
                           
                              (17)
                              
                                 
                                    D
                                    k
                                 
                                 −
                                 
                                    D
                                    0
                                 
                                 −
                                 
                                    E
                                    k
                                 
                                 =
                                 0
                                 ,
                              
                           
                        
                        
                           
                              (18)
                              
                                 
                                    D
                                    
                                       X
                                       k
                                    
                                 
                                 −
                                 
                                    U
                                    k
                                 
                                 =
                                 0
                                 ,
                              
                           
                        
                        
                           
                              (19)
                              
                                 
                                    ℒ
                                    
                                       1
                                       k
                                    
                                 
                                 ⊙
                                 
                                    U
                                    k
                                 
                                 =
                                 0
                                 ,
                              
                           
                        
                        
                           
                              (20)
                              
                                 −
                                 
                                    U
                                    k
                                 
                                 ≤
                                 0
                                 ,
                              
                           
                        
                        
                           
                              (21)
                              
                                 
                                    ℒ
                                    
                                       2
                                       k
                                    
                                 
                                 ≥
                                 0
                                 .
                              
                           
                        
                     

In order to study the convergence properties of the algorithm, we need to first ensure the boundedness of the variables, incorporated in the optimization procedure.
                           Lemma 5.1
                           
                              The sequences 
                              
                                 
                                    
                                       ℒ
                                       
                                          1
                                          k
                                       
                                    
                                 
                               
                              and 
                              
                                 
                                    
                                       ℒ
                                       
                                          2
                                          k
                                       
                                    
                                 
                               
                              are bounded.

Let's assume {U
                              
                                 k
                              
                              ⁎}, {D
                              
                                 k
                              
                              ⁎} and {E
                              
                                 k
                              
                              ⁎} are the optimal values of the above optimization problem. Then:
                                 
                                    (22)
                                    
                                       
                                          
                                             
                                                0
                                                ∈
                                                
                                                   ∂
                                                   D
                                                
                                                L
                                                
                                                   
                                                      D
                                                      k
                                                      *
                                                   
                                                   
                                                      E
                                                      k
                                                      *
                                                   
                                                   
                                                      U
                                                      k
                                                      *
                                                   
                                                   
                                                      ℒ
                                                      
                                                         1
                                                         k
                                                      
                                                   
                                                   
                                                      ℒ
                                                      
                                                         2
                                                         k
                                                      
                                                   
                                                   
                                                      μ
                                                      k
                                                   
                                                
                                                ,
                                             
                                          
                                          
                                             
                                                0
                                                ∈
                                                
                                                   ∂
                                                   E
                                                
                                                L
                                                
                                                   
                                                      D
                                                      k
                                                      *
                                                   
                                                   
                                                      U
                                                      k
                                                      *
                                                   
                                                   
                                                      E
                                                      k
                                                      *
                                                   
                                                   
                                                      ℒ
                                                      
                                                         1
                                                         k
                                                      
                                                   
                                                   
                                                      ℒ
                                                      
                                                         2
                                                         k
                                                      
                                                   
                                                   
                                                      μ
                                                      k
                                                   
                                                
                                                ,
                                             
                                          
                                       
                                    
                                 
                              
                           

Therefore,
                           
                              (23)
                              
                                 
                                    
                                       ℒ
                                       
                                          1
                                          k
                                       
                                    
                                    
                                       ℒ
                                       
                                          2
                                          k
                                       
                                    
                                 
                                 ∈
                                 
                                    ∂
                                    D
                                 
                                 
                                    
                                       
                                          D
                                          k
                                          *
                                       
                                    
                                    *
                                 
                                 ,
                                 
                                 
                                    
                                       ℒ
                                       
                                          1
                                          k
                                       
                                    
                                    
                                       ℒ
                                       
                                          2
                                          k
                                       
                                    
                                 
                                 ∈
                                 
                                    ∂
                                    E
                                 
                                 
                                    
                                       f
                                       
                                          
                                             E
                                             
                                                X
                                                k
                                             
                                          
                                       
                                       +
                                       g
                                       
                                          
                                             E
                                             
                                                Y
                                                k
                                             
                                          
                                       
                                    
                                 
                                 .
                              
                           
                        
                     

Consequently, 
                           
                              
                                 ℒ
                                 
                                    1
                                    k
                                 
                              
                           
                         and 
                           
                              
                                 ℒ
                                 
                                    2
                                    k
                                 
                              
                           
                         are bounded. □
                           Lemma 5.2
                           
                              If μk satisfies the condition ∑
                                 k
                                 =1
                              +∞
                              μ
                              
                                 k
                              
                              −2
                              μ
                              
                                 k
                                 +1
                              <+∞, the sequences {E
                              
                                 k
                              }, {D
                              
                                 k
                              }, {U
                              
                                 k
                              }, {U
                              
                                 k
                              
                              ⁎}, {D
                              
                                 k
                              
                              ⁎} and {E
                              
                                 k
                              
                              ⁎} are bounded. ({U
                              
                                 k
                              
                              ⁎}, {D
                              
                                 k
                              
                              ⁎} and {E
                              
                                 k
                              
                              ⁎} are the optimal values of the optimization problem).

As far as we are solving a minimization problem, we can say:
                                 
                                    (24)
                                    
                                       
                                          
                                             
                                                L
                                                
                                                   
                                                      D
                                                      
                                                         k
                                                         +
                                                         1
                                                      
                                                      *
                                                   
                                                   
                                                      E
                                                      
                                                         k
                                                         +
                                                         1
                                                      
                                                      *
                                                   
                                                   
                                                      U
                                                      
                                                         k
                                                         +
                                                         1
                                                      
                                                      *
                                                   
                                                   
                                                      ℒ
                                                      
                                                         1
                                                         k
                                                      
                                                   
                                                   
                                                      ℒ
                                                      
                                                         2
                                                         k
                                                      
                                                   
                                                   
                                                      μ
                                                      k
                                                   
                                                
                                                ≤
                                                L
                                                
                                                   
                                                      D
                                                      
                                                         k
                                                         +
                                                         1
                                                      
                                                      *
                                                   
                                                   
                                                      E
                                                      k
                                                      *
                                                   
                                                   
                                                      U
                                                      k
                                                      *
                                                   
                                                   
                                                      ℒ
                                                      
                                                         1
                                                         k
                                                      
                                                   
                                                   
                                                      ℒ
                                                      
                                                         2
                                                         k
                                                      
                                                   
                                                   
                                                      μ
                                                      k
                                                   
                                                
                                             
                                          
                                          
                                             
                                                
                                                ≤
                                                L
                                                
                                                   
                                                      D
                                                      k
                                                      *
                                                   
                                                   
                                                      E
                                                      k
                                                      *
                                                   
                                                   
                                                      U
                                                      k
                                                      *
                                                   
                                                   
                                                      ℒ
                                                      
                                                         1
                                                         k
                                                      
                                                   
                                                   
                                                      ℒ
                                                      
                                                         2
                                                         k
                                                      
                                                   
                                                   
                                                      μ
                                                      k
                                                   
                                                
                                                =
                                                L
                                                
                                                   
                                                      D
                                                      k
                                                      *
                                                   
                                                   
                                                      E
                                                      k
                                                      *
                                                   
                                                   
                                                      U
                                                      k
                                                      *
                                                   
                                                   
                                                      ℒ
                                                      
                                                         1
                                                         
                                                            k
                                                            −
                                                            1
                                                         
                                                      
                                                   
                                                   
                                                      ℒ
                                                      
                                                         2
                                                         
                                                            k
                                                            −
                                                            1
                                                         
                                                      
                                                   
                                                   
                                                      μ
                                                      
                                                         k
                                                         −
                                                         1
                                                      
                                                   
                                                
                                             
                                          
                                          
                                             
                                                
                                                +
                                                
                                                   1
                                                   2
                                                
                                                
                                                   μ
                                                   
                                                      k
                                                      −
                                                      1
                                                   
                                                   
                                                      −
                                                      2
                                                   
                                                
                                                
                                                   
                                                      
                                                         μ
                                                         
                                                            k
                                                            −
                                                            1
                                                         
                                                      
                                                      +
                                                      
                                                         μ
                                                         k
                                                      
                                                   
                                                
                                                
                                                   
                                                      
                                                         
                                                            
                                                               
                                                                  ℒ
                                                                  
                                                                     1
                                                                     k
                                                                  
                                                               
                                                               −
                                                               
                                                                  ℒ
                                                                  
                                                                     1
                                                                     
                                                                        k
                                                                        −
                                                                        1
                                                                     
                                                                  
                                                               
                                                            
                                                         
                                                         F
                                                         2
                                                      
                                                      +
                                                      
                                                         
                                                            
                                                               
                                                                  ℒ
                                                                  
                                                                     2
                                                                     k
                                                                  
                                                               
                                                               −
                                                               
                                                                  ℒ
                                                                  
                                                                     2
                                                                     
                                                                        k
                                                                        −
                                                                        1
                                                                     
                                                                  
                                                               
                                                            
                                                         
                                                         F
                                                         2
                                                      
                                                   
                                                
                                                .
                                             
                                          
                                       
                                    
                                 
                              and with the boundedness of 
                                 
                                    
                                       ℒ
                                       
                                          1
                                          k
                                       
                                    
                                 
                               and 
                                 
                                    
                                       ℒ
                                       
                                          2
                                          k
                                       
                                    
                                 
                              , and ∑
                                 k
                                 =1
                              +∞
                              μ
                              
                                 k
                              
                              −2
                              μ
                              
                                 k
                                 +1
                              <+∞ we can say that 
                                 
                                    
                                       L
                                       
                                          
                                             
                                                D
                                                
                                                   k
                                                   +
                                                   1
                                                
                                                *
                                             
                                             ,
                                             
                                                E
                                                
                                                   k
                                                   +
                                                   1
                                                
                                                *
                                             
                                             ,
                                             
                                                U
                                                
                                                   k
                                                   +
                                                   1
                                                
                                                *
                                             
                                             
                                                ℒ
                                                
                                                   1
                                                   k
                                                
                                             
                                             ,
                                             
                                                ℒ
                                                
                                                   2
                                                   k
                                                
                                             
                                             ,
                                             
                                                μ
                                                k
                                             
                                          
                                       
                                    
                                 
                               is bounded and as a result {U
                              
                                 k
                              
                              ⁎}, {D
                              
                                 k
                              
                              ⁎} and {E
                              
                                 k
                              
                              ⁎} are bounded, as well. The boundedness of {U
                              
                                 k
                              }, {E
                              
                                 k
                              } and {D
                              
                                 k
                              } is also proved in a same way. □


                              If the sequences of Lagrangian multipliers are bounded, then for the sequence Wk we can say: 
                                 
                                    
                                       ∑
                                       
                                          k
                                          =
                                          0
                                       
                                       ∞
                                    
                                    
                                 
                                 
                                    
                                       
                                          
                                             ℒ
                                             
                                                1
                                                
                                                   k
                                                   +
                                                   1
                                                
                                             
                                          
                                          −
                                          
                                             ℒ
                                             
                                                1
                                                k
                                             
                                          
                                       
                                    
                                    F
                                    2
                                 
                                 <
                                 ∞
                               
                              
                                 
                                    
                                       ∑
                                       
                                          k
                                          =
                                          0
                                       
                                       ∞
                                    
                                    
                                 
                                 
                                    
                                       
                                          
                                             ℒ
                                             
                                                2
                                                
                                                   k
                                                   +
                                                   1
                                                
                                             
                                          
                                          −
                                          
                                             ℒ
                                             
                                                2
                                                k
                                             
                                          
                                       
                                    
                                    F
                                    2
                                 
                                 <
                                 ∞
                               
                              Then
                              
                                 
                                    (25)
                                    
                                       
                                          
                                             lim
                                             
                                                k
                                                →
                                                +
                                                ∞
                                             
                                          
                                       
                                       
                                          
                                             
                                                W
                                                
                                                   k
                                                   +
                                                   1
                                                
                                             
                                             −
                                             
                                                W
                                                k
                                             
                                          
                                       
                                       =
                                       0
                                       ,
                                    
                                 
                              
                              and each Wk point is a KKT point and is a solution in the problem.
                           

With regard to the above two lemmas, the conditions of this theorem would be satisfied. Therefore, it could be proved exactly the same as described in [50]. This theorem guarantees that the achieved solution is feasible. □


                              For the above algorithm (D
                              
                                 k
                              
                              ⁎,
                              E
                              
                                 k
                              
                              ⁎) is an optimal solution, and the convergence rate is of at least O(μ
                              
                                 k
                              
                              −1).


                        
                           
                              (26)
                              
                                 
                                    
                                       
                                          
                                             
                                                D
                                                k
                                             
                                          
                                          *
                                       
                                       +
                                       f
                                       
                                          
                                             E
                                             
                                                X
                                                k
                                             
                                          
                                       
                                       +
                                       g
                                       
                                          
                                             E
                                             
                                                Y
                                                k
                                             
                                          
                                       
                                       −
                                       
                                          F
                                          *
                                       
                                    
                                 
                                 =
                                 O
                                 
                                    
                                       μ
                                       k
                                       
                                          −
                                          1
                                       
                                    
                                 
                              
                           
                        
                        where F
                        ⁎ 
                        is the optimal solution of the problem in (12).
                        
                           Proof
                           Since F
                              ⁎ is the optimal solution:
                                 
                                    (27)
                                    
                                       
                                          
                                             
                                                L
                                                
                                                   
                                                      D
                                                      
                                                         k
                                                         +
                                                         1
                                                      
                                                      *
                                                   
                                                   
                                                      E
                                                      
                                                         k
                                                         +
                                                         1
                                                      
                                                      *
                                                   
                                                   
                                                      U
                                                      
                                                         k
                                                         +
                                                         1
                                                      
                                                      *
                                                   
                                                   
                                                      ℒ
                                                      
                                                         1
                                                         k
                                                      
                                                   
                                                   
                                                      ℒ
                                                      
                                                         2
                                                         k
                                                      
                                                   
                                                   
                                                      μ
                                                      k
                                                   
                                                
                                                =
                                                
                                                   
                                                      min
                                                      
                                                         D
                                                         ,
                                                         E
                                                         ,
                                                         U
                                                      
                                                   
                                                
                                                L
                                                
                                                   D
                                                   E
                                                   U
                                                   
                                                      ℒ
                                                      
                                                         1
                                                         k
                                                      
                                                   
                                                   
                                                      ℒ
                                                      
                                                         2
                                                         k
                                                      
                                                   
                                                   
                                                      μ
                                                      k
                                                   
                                                
                                             
                                          
                                          
                                             
                                                ≤
                                                
                                                   
                                                      min
                                                      
                                                         D
                                                         +
                                                         E
                                                         =
                                                         
                                                            D
                                                            0
                                                         
                                                         ,
                                                         U
                                                         =
                                                         
                                                            D
                                                            0
                                                         
                                                      
                                                   
                                                
                                                L
                                                
                                                   D
                                                   E
                                                   U
                                                   
                                                      ℒ
                                                      
                                                         1
                                                         k
                                                      
                                                   
                                                   
                                                      ℒ
                                                      
                                                         2
                                                         k
                                                      
                                                   
                                                   
                                                      μ
                                                      k
                                                   
                                                
                                                =
                                                
                                                   F
                                                   *
                                                
                                                ,
                                             
                                          
                                       
                                    
                                 
                              so
                                 
                                    (28)
                                    
                                       
                                          
                                             
                                                
                                                   
                                                      
                                                         D
                                                         
                                                            k
                                                            +
                                                            1
                                                         
                                                         *
                                                      
                                                   
                                                   *
                                                
                                                +
                                                f
                                                
                                                   
                                                      E
                                                      
                                                         X
                                                         
                                                            k
                                                            +
                                                            1
                                                         
                                                      
                                                      *
                                                   
                                                
                                                +
                                                g
                                                
                                                   
                                                      E
                                                      
                                                         Y
                                                         
                                                            k
                                                            +
                                                            1
                                                         
                                                      
                                                      *
                                                   
                                                
                                             
                                          
                                          
                                             
                                                =
                                                L
                                                
                                                   
                                                      D
                                                      
                                                         k
                                                         +
                                                         1
                                                      
                                                      *
                                                   
                                                   
                                                      E
                                                      
                                                         k
                                                         +
                                                         1
                                                      
                                                      *
                                                   
                                                   
                                                      U
                                                      
                                                         k
                                                         +
                                                         1
                                                      
                                                      *
                                                   
                                                   
                                                      ℒ
                                                      
                                                         1
                                                         k
                                                      
                                                   
                                                   
                                                      ℒ
                                                      
                                                         2
                                                         k
                                                      
                                                   
                                                   
                                                      μ
                                                      k
                                                   
                                                
                                                −
                                                
                                                   1
                                                   
                                                      2
                                                      
                                                         μ
                                                         k
                                                      
                                                   
                                                
                                                
                                                   
                                                      
                                                         
                                                            
                                                               
                                                                  ℒ
                                                                  
                                                                     1
                                                                     k
                                                                  
                                                               
                                                               −
                                                               
                                                                  ℒ
                                                                  
                                                                     1
                                                                     
                                                                        k
                                                                        −
                                                                        1
                                                                     
                                                                  
                                                               
                                                            
                                                         
                                                         F
                                                         2
                                                      
                                                      +
                                                      
                                                         
                                                            
                                                               
                                                                  ℒ
                                                                  
                                                                     2
                                                                     k
                                                                  
                                                               
                                                               −
                                                               
                                                                  ℒ
                                                                  
                                                                     2
                                                                     
                                                                        k
                                                                        −
                                                                        1
                                                                     
                                                                  
                                                               
                                                            
                                                         
                                                         F
                                                         2
                                                      
                                                   
                                                
                                             
                                          
                                          
                                             
                                                ≤
                                                
                                                   F
                                                   *
                                                
                                                −
                                                
                                                   1
                                                   
                                                      2
                                                      μ
                                                   
                                                
                                                
                                                   
                                                      
                                                         
                                                            
                                                               
                                                                  ℒ
                                                                  
                                                                     1
                                                                     k
                                                                  
                                                               
                                                               −
                                                               
                                                                  ℒ
                                                                  
                                                                     1
                                                                     
                                                                        k
                                                                        −
                                                                        1
                                                                     
                                                                  
                                                               
                                                            
                                                         
                                                         F
                                                         2
                                                      
                                                      +
                                                      
                                                         
                                                            
                                                               
                                                                  ℒ
                                                                  
                                                                     2
                                                                     k
                                                                  
                                                               
                                                               −
                                                               
                                                                  ℒ
                                                                  
                                                                     2
                                                                     
                                                                        k
                                                                        −
                                                                        1
                                                                     
                                                                  
                                                               
                                                            
                                                         
                                                         F
                                                         2
                                                      
                                                   
                                                
                                                =
                                                
                                                   F
                                                   *
                                                
                                                −
                                                O
                                                
                                                   
                                                      μ
                                                      k
                                                      
                                                         −
                                                         1
                                                      
                                                   
                                                
                                                .
                                             
                                          
                                       
                                    
                                 
                              
                           

Due to the boundedness of all the variables, the theorem is proved. □

We can conclude that if μk
                         is increasing slightly in each iteration, the algorithm is Q-linearly convergent. If μk
                         will be increasing faster, the algorithm would even be converged faster, but increasing this variable too much would cause a slower convergence in the singular value thresholding sub-problem. As a result, a good choice for the sequence of {μk
                        } variables yields in a decrease in the number of required SVD operations.

The computational complexity of the algorithm is very easy to compute, since the algorithm is a single straightforward loop. The most computationally expensive stage in the loop is to compute an SVD of a matrix with (m
                        +
                        n)×
                        N elements. Since m
                        +
                        n
                        <
                        N, we can say that the complexity of the SVD part is O(N
                        3). Therefore, the computational complexity of the whole algorithm would be O(qN
                        3), where q is the number of iterations (in practice q
                        <<
                        N). As discussed above, q is dependent to the choice of {μ
                        
                           k
                        } and the Q-linear convergence rate.

Let's say each video i is represented with a histogram h
                        
                           i
                        
                        =[b
                        1,
                        b
                        2,…,
                        b
                        
                           n
                        ]. In general, histogram of videos is a linear combination of histograms of all its sub-regions. For instance, if there are two activities, a
                        1 and a
                        2 in the video, the histogram of the whole video would be 
                           
                              h
                              i
                           
                           =
                           α
                           
                              h
                              
                                 a
                                 1
                              
                           
                           +
                           β
                           
                              h
                              
                                 a
                                 2
                              
                           
                           +
                           γ
                           
                              h
                              
                                 b
                                 
                                    g
                                    i
                                 
                              
                           
                        , where 
                           
                              h
                              
                                 a
                                 1
                              
                           
                         is the histogram for the first activity, 
                           
                              h
                              
                                 a
                                 2
                              
                           
                         is the histogram for the second activity and 
                           
                              h
                              
                                 b
                                 
                                    g
                                    i
                                 
                              
                           
                         is the additive noise from the background and clutter present in the video i. This simple characteristic of the histograms (like also used in [44]) enables us extract video sub-region histograms, with our matrix completion framework. With respect to this characteristic of the histograms, minimizing the rank of the data matrix (shown in Fig. 3) would decompose each activity histogram and would form the entries in X
                        
                           rep
                        .

When minimizing the rank of the matrix, we are actually maximizing the linear relations between both the rows (corresponding to row-rank) and the columns (corresponding to column-rank). We can say that the row-rank minimization helps inferring the label(s) for each video and the column-rank minimization contributes to finding the representative feature vectors to equip the action localization process. Each column contains the histogram of a single video. So, in order for the column-rank to be minimized, the process should better correlate the unknown values in the representative feature vectors to the other columns. Since these columns hold values for the corresponding labels, the unknown feature vector values of these columns will be a compromise from all known columns containing the same labels.

As an example, consider the case illustrated in Fig. 4
                        . In this figure, there are two videos (V
                        1 and V
                        2), both containing two a
                        1 and a
                        2 actions in different orders. These two videos together with all other videos in the dataset are put in the matrix (Fig. 3). All these videos contribute in creating representative histogram feature vectors for each activity class. Let's call the histogram feature vectors of V
                        1 and V
                        2 as h1
                         and h2
                        . Therefore, we could say 
                           
                              h
                              1
                           
                           =
                           
                              α
                              1
                           
                           
                              h
                              
                                 a
                                 1
                              
                           
                           +
                           
                              β
                              1
                           
                           
                              h
                              
                                 a
                                 2
                              
                           
                           +
                           
                              γ
                              1
                           
                           
                              h
                              
                                 b
                                 
                                    g
                                    1
                                 
                              
                           
                         and 
                           
                              h
                              2
                           
                           =
                           
                              α
                              2
                           
                           
                              h
                              
                                 a
                                 1
                              
                           
                           +
                           
                              β
                              2
                           
                           
                              h
                              
                                 a
                                 2
                              
                           
                           +
                           
                              γ
                              2
                           
                           
                              h
                              
                                 b
                                 
                                    g
                                    2
                                 
                              
                           
                        . When the matrix is completed, ideally 
                           
                              h
                              
                                 b
                                 
                                    g
                                    1
                                 
                              
                           
                         and 
                           
                              h
                              
                                 b
                                 
                                    g
                                    2
                                 
                              
                           
                         will be removed from the data and be accommodated in the error matrix, E. Furthermore, 
                           
                              h
                              
                                 a
                                 1
                              
                           
                         and 
                           
                              h
                              
                                 a
                                 2
                              
                           
                         will contribute in building the representative histogram feature vectors for their corresponding activity classes. We use the representative histogram feature vectors for a
                        1 and a
                        2 activities, and search the histograms to find the best spatio-temporal segment with the minimum distance with these representatives. It is very important to note that the proposed method is a transductive method (like [45]), which means that all samples shall be put together in the matrix and the decisions on the labels of the test videos are acquired all at once. The same applies for when we are looking for representative feature vectors. When there are quite enough number of videos (columns in the matrix), we can expect getting good representative feature vectors.

For each video labeled with an activity, our task would be to search throughout the video and find the spatio-temporal region, which best matches the representative histogram of that specific activity class. One naive solution for the search procedure could be a cuboid search, which is quite similar to sliding window search in the object recognition context. But cuboid search would be computationally quite expensive. Therefore, we first extract potential activity regions in the video and only search among these regions.

In order to extract the potential activity regions, we use person detectors, face detectors and space–time interest point detectors on the video. These detectors are used to help reduce the search space, in order not to perform a full cuboid search on the videos. On each video a pre-trained person detector [51] is run on every ℱ
                           th
                         frames and a bounding box with a margin is created around that. We track this bounding box with a Meanshift tracker [52] throughout the video and omit repeated results. We also run a face detector on the same ℱ
                           th
                         frames of the video, and create same type of bounding boxes around them. We further detect all the space–time interest points (STIP) [9], in the video. This detector is based on the extension of Harris operator to both space and time. We name these three detectors as Pi
                        , Fi
                         and IPi
                        , for each video Vi
                        . The first two ones, detect the presence of a human, and the latter one detect segments with lots of motion (possibly containing objects and humans). In order to model interactions between humans and objects, we further merge co-occurring segments. Co-occurring segments are those happening in at least 50% temporal duration, together. Algorithm 2 shows the procedure for extracting potential spatio-temporal segments, Si
                         for each video Vi
                        . Now, all the Si
                        s are converted into their respective histograms of densely sampled quantized features.
                           Algorithm 2
                           Algorithm for extracting potential spatio-temporal segments.
                                 
                                    
                                 
                              
                           

A simple Euclidean distance is used to determine the best activity candidate for each video. For a test video i, classified as class k, the corresponding representative histogram for that class in Xrep
                         is matched to all the Si
                        s found in video i and the one with the least distance is selected as the spatio-temporal segmentation for that activity in video i.

@&#EXPERIMENTS@&#

To evaluate the proposed technique for activity recognition, we set up several experiments on various datasets. In this section we review the results and compare them with the state-of-the-art methods.

Several popular action and activity recognition datasets are used for evaluation of the proposed algorithm. We divide the datasets into two board categories: (1) Easy Datasets and (2) Hard Datasets. The former includes KTH [31] and Weizmann [53], which do not have camera motion or occlusion. The latter includes and MSR2 [28], HOHA [8] and UCF Sports [26] action datasets, which contain arbitrary camera motion with partial occlusion during the action. In this second category of the datasets, many actions are defined as interactions between different subjects or with objects in the scene.

KTH action recognition dataset has six types of human actions (walking, jogging, running, boxing, hand waving and hand clapping) performed by 25 subjects, in 2391 video sequences. This dataset is taken with a static camera with 25fps and a resolution of 160×120. Weizmann action recognition dataset contains 90 video sequences of resolution 180×144 with 50 deinterlaced fps. The dataset has nine different people performing 10 actions (run, walk, skip, jumping-jack, jump-forward-on-two-legs, jump-in-place-on-two-legs, gallop-sideways, wave-two-hands, wave-one-hand and bend).

MSR2 action dataset contains 54 videos and three action categories: boxing, clapping and hand-waving. In this dataset, the videos contain multiple actions and even some have actions occurring at the same time. HOHA (Hollywood Human Action) dataset contains 430 videos with a resolution of 240×450 and 24fps. In this dataset, each video sequence contains nuisances such as significant camera motion, rapid scene changes and occasionally significant clutter. Furthermore, actions in this dataset are performed in many different positions and conditions. Furthermore, many actions are defined by the interactions between the subjects and objects. As a result, this dataset is a really challenging one. UCF Sports dataset consists of 150 videos extracted from sports broadcasts. This dataset has more constrained environments, but still there are camera motions, as well as many different lighting and capturing conditions. It is also a challenging dataset due to the large displacements in most of its actions, the cluttered background, and the large intra-class variability.

As discussed, we use HoG, HoF and HoMB histogram feature vectors to represent each video. To generate these histograms, dense sampling of features is used, which extracts video space–time blocks from five dimensions (x,
                        y,
                        t,
                        σ,
                        τ). σ and τ are the spatial and temporal scales, respectively. In our experiments, the size of a space–time patch is considered to be 18×18×10 with 50% overlap between consecutive patches, as also used in [9].

We have adapted a low-rank framework for activity recognition. So, first we need to see if our histogram features are a good fit for this purpose. The feature vectors of instances for same classes should compose lower-rank matrices, than those composed from instances from different classes. To perform such a test, we extract the histogram features (HoG, HoF, HoMB) from the action bounding boxes of the UCF Sports dataset (provided by [26]). For each class i, we construct a matrix 
                           X
                        
                        
                           i
                         by concatenating all the feature vectors of the same activity class. We also create some matrices 
                           Y
                        
                        
                           j
                        , constructed using activities from two or more classes.

The rank function is modeled by the number of non-zero singular values, and approximated by the sum of the singular values. Therefore, minimizing the rank is equivalent to minimizing the number of non-vanishing singular values. Thus, a matrix with a lower rank would have more energy of the singular values concentrated on its first singular values. We can define an energy function as a function of singular values σj
                         
                        [44]:
                           
                              (29)
                              
                                 E
                                 
                                    X
                                    p
                                 
                                 =
                                 
                                    
                                       
                                          
                                             ∑
                                             
                                                j
                                                =
                                                1
                                             
                                             p
                                          
                                          
                                             
                                                σ
                                                j
                                             
                                          
                                       
                                    
                                    
                                       
                                          ∑
                                          
                                             j
                                             =
                                             1
                                          
                                          
                                             min
                                             
                                                n
                                                D
                                             
                                          
                                       
                                       
                                          
                                             σ
                                             j
                                          
                                       
                                    
                                 
                                 ,
                              
                           
                        where p is the number of singular values we want to calculate the energy for, n is the length of the feature vectors and D is the total number of instances in the matrix X. Fig. 5
                         shows the mean energy signal for 
                           X
                        
                        
                           i
                        s and 
                           Y
                        
                        
                           j
                        s, as described above. As it is obvious, the first singular values have more energy for the case of 
                           X
                        matrices with all columns of same class instances, compared to the case that the matrix is composed of features from different classes.

Experimental settings for each of the datasets are explained separately. This is because we have adapted similar set of settings to the approaches we compare to. We compare our model with the state-of-the-art models reported in the literature and with the well-known bag-of-words model with SVM classifier with a χ
                        2 kernel. The results reported here are independent from the localization, which is discussed in the next subsection. Note that, since we use a k-means clustering with random initialization for all our models to make the dictionary of the histograms (bags), a deviation of ±0.5% is expected.

All sequences are divided with respect to the subjects into a training set (16 persons), and a test set (9 persons). Fig. 6
                            shows the classification accuracy of our model for each of the activity classes in comparisons with the baseline method (SVM+BoW). Table 1
                            also shows the accuracy results in comparisons with some state-of-the-art methods in the same database. As could be seen, our method gives competitive results with the best results previously reported. Note that our method, both recognizes and localizes the activities in space and time, while others use the annotated activity locations (bounding boxes or silhouettes), for training. This is indicated in the supervision column in the table.

For this dataset we use a leave-one-out cross-validation (LOOCV) method for training and testing the data. Fig. 7
                            shows the per-class recognition results, compared to the BoW+SVM model. Table 2
                            illustrates the accuracy results in comparisons with some state-of-the-art methods on Weizmann database.

For the experiments on this dataset, a two-to-one random division of all videos in the dataset is used as the training and testing set. This dataset contains videos with multiple actions happening in the video and in some cases the actions are being performed at the same time. It is a good test for the multi-label settings of our method. Some of the videos in this dataset contain several instances of all activities. Since we try to find each activity in the video sequences and match the first potential region, we split the videos such that each video contains only one instance of each activity class, while there might be several activities from different classes, in each video. Fig. 8
                            shows the per class accuracy results of our method, compared to the MI-SVM model [4], used in [21]. The MI-SVM model uses a latent SVM framework with a BoW-like set of features. Table 3
                            shows accuracy results for the recognition task, compared with several state-of-the-art methods. Some methods, reported recognition results with cross dataset tests. They train on the KTH dataset and test on MSR2. This is indicated in the table, as well, in the ‘experiments condition’ column.

In this experiment the test set has 211 videos with 217 labels and the training set has 219 videos with 231 labels, all manually annotated [18]. Fig. 9
                            shows the per-class accuracy results for this dataset. Since this dataset is a very hard task for activity detection, due to the large amount clutter and random motion in the camera, the recognition results on all methods are not very good. But our approach is comparable with all other state-of-the-art methods that are designed specifically for this dataset and such videos. Unlike many other methods, aside from recognition, we also perform the localization task. Table 4
                            shows the overall accuracy results compared to some other recent methods, on this dataset.

For this dataset we use a split into 103 trainings and 47 test samples, these are the settings used in [18,20]. This separation minimizes the strong correlation of background cues between the test and training set [18]. Fig. 10
                            gives the per class classification accuracy for this dataset. As could be seen our method outperforms the BoW+SVM model in almost all classes. Some results reported in the previous works on this dataset use LOOCV (leave-one-out-cross-validation) method, which may take into account the similarity of the background instead of the activity itself. This is because in this sports dataset the background is very similar for sports of a same kind and it can affect the activity recognition rates. Therefore, these methods generally achieve better recognition accuracies. In order to have a better comparative study, we compare our results to both LOOCV and 103:47 dataset split methods. Table 5
                            shows these recognition rates. The upper part of the table reports results of methods that use LOOCV, and the lower part use an experimental setting, similar to ours. As it is obvious, our results are quite competitive with those fully supervised methods. Fully supervised methods use both the video labels and the bounding box annotations for training their systems. Furthermore, our results are also competitive with those methods that use LOOCV. Although we have a harder dataset split, we achieve comparable results. This could be because we have adapted a so-called transductive method for action recognition.

The second functionality of our method is the localization of the activity in the video sequence. As discussed in Section 5.5 the class representatives (Xrep
                         in (7)) are used to detect the corresponding activity in the video. A search among the potential regions of this video will give us the region which best matches the representative histogram, and is selected as the spatio-temporal segmentation of the activity. In order to evaluate the action localization process, we employ a localization score threshold, θ. The score of a detected spatio-temporal segment is defined by averaging the overlap percentage between the segment and the annotation bounding box from the dataset, as defined in [18]. In our experiments, if the detected spatio-temporal segment for an activity has a 
                           θ
                           =
                           
                              1
                              8
                           
                         overlap with the annotation ground truth from the dataset, the recognition and localization is considered as correct. Some results could be found in Fig. 11
                        .

In order to perform a comparative study between the proposed method and state-of-the-art action localization techniques, we employ the well-known intersection-over-union (IOU) criterion, the average precision (AP) for action localization and the localization score (θ). We also plot precision–recall curve for action localization comparisons. Our results are compared with previous methods, with these metrics, where available. Tables 6, 7 and 8
                        
                        
                         show comparisons of the results on KTH, MSR2 and UCF Sports datasets, respectively. Note that Lan et al. [20] only provides localization results on a subset of frames on the UCF Sport dataset. Thus, we include results on this subset for comparison, as well. Fig. 12
                         illustrates the average localization score for different actions in the HOHA dataset, as function of θ, in comparison with [18]. Furthermore, the precision–recall curves for two ‘Diving’ and ‘Hours Riding’ actions of the UCF Sports dataset are depicted in Fig. 13
                        . These curves are drawn for the subset of frames used in [20], for comparisons purposes. As could be seen, our method performs quite competitive even to the methods which were designed only for activity localization.

Since the recognition and the localization functions are two separate phases, there is the probability that the selected segment as the best match to the activity is not the correct activity region we were looking for. Therefore, we also take into account the second, third, forth and the fifth regions, and calculate the recognition/localization accuracy for each. Each of these five is called a rank. When we calculate the accuracy for a rank r, if the region of interest is found in the set 1,…,
                        r we will consider it as correct, otherwise incorrect. With this definition, we can draw a cumulative match score (CMS) diagram as shown in Fig. 14
                        . The scores in the diagram are the recognition/localization accuracy as a percentage calculated overall in each dataset, independently.

@&#DISCUSSIONS@&#

As mentioned before, we have developed a multi-label classification and localization framework for human action recognition. The results on the MSR2 action dataset prove that the multi-label setting is working fine. Moreover, in this paper we proposed an approach that not only recognizes the video scenes to have an activity of interest, it segments the activity spatio-temporally. This is of a great interest, since not much previous methods tackle the problem of segmenting in both time and space. An important note on the recognition results, independent from the segmentation phase, is that it is quite competitive even with those, which do not perform any localization of the activity. This is because when using the whole frame or video features for the recognition, one incorporates many outliers and noise. But in our method we try to take out the noise and use the remainder for the localization task. Taking out the noise helps a better modeling of the data and therefore a better recognition rate.

Furthermore, our method works fine for many types of datasets. As explained in the experiments section, we have divided our test cases to Easy and Hard, and reported results on both sets of data. Our method does not put any restrictions on the data, from clutter or noise to camera motion.

@&#CONCLUSION@&#

In this paper, we have developed a multi-label classification framework with a convex optimization process for the problem of activity detection. Our approach uses a non-negative matrix completion framework to recover the labels for the test videos. Moreover, we use the histograms of densely sampled features throughout the video. In the matrix completion procedure, we correct the histograms such that for each class a representative histogram is extracted. This histogram is used to localize the action of interest in the video, spatio-temporally. Therefore, this approach is working with a weakly supervised multi-label setting. We solve the non-negative matrix completion problem using a convex alternating direction method.

As a direction for the future, it is more desirable to have precise activity locations rather than a bounding box. So, instead of putting the feature vectors for the whole video in the matrix for matrix completion, we might be able to put feature vectors for the parts associated in the video. Furthermore, matrix completion finds linear relations over the instances. One can kernelize the matrix completion framework to get superior results.

@&#REFERENCES@&#

