@&#MAIN-TITLE@&#BotGrab: A negative reputation system for botnet detection

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           A novel negative reputation system is proposed to detect bot-infected hosts.


                        
                        
                           
                           It considers both malicious activities and history of coordinated group activities.


                        
                        
                           
                           A proposed online incremental clustering technique facilitates the online learning.


                        
                        
                           
                           The negative reputation threshold can adjust the sensitivity of the system.


                        
                        
                           
                           It can successfully detect various botnets with a high DR and a low FAR.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Botnet detection

Negative reputation system

Reputation score

Coordinated group activity

Malicious activity

@&#ABSTRACT@&#


               
               
                  Botnets continue to be used by attackers to perform various malicious activities on the Internet. Over the past years, many botnet detection techniques have been proposed; however, most of them cannot detect botnets in an early stage of their lifecycle, or they often depend on a specific command and control protocol. In this paper, we propose BotGrab, a general botnet detection system that considers both malicious activities and the history of coordinated group activities in the network to identify bot-infected hosts. BotGrab tracks suspected hosts participating in some coordinated group activities and calculates a negative reputation score for each of them based on the history of their participation in these activities. A suspected host will be identified as being bot-infected if it has a high negative reputation score or performs some malicious activities while having a low negative reputation score. We demonstrate the effectiveness of BotGrab to detect various botnets including HTTP-, IRC-, and P2P-based botnets using a testbed network consisting of some bot-infected hosts.
               
            

@&#INTRODUCTION@&#

The increasing number of malware threats and the growing complexity of cyber attacks have attracted renewed interest in much of the recent research. Over the past few years, the objectives and motivations behind malware threats have changed significantly; hence, they have evolved into better organized and more profit-centered endeavors [1]. This matter has created a new type of threat that endangers thousands of network infrastructures around the world. At the heart of these threats lies a network of compromised hosts remotely controlled by an attacker. These hosts form a botnet.

The term bot is short for robot. A bot, also known as zombie or drone, is a kind of malware that runs on a host typically unbeknownst to its owners and carries out commands sent by a so-called botmaster. A botnet is a network of bot-infected hosts, and its value to the botmaster can be quantified by some characteristics, such as diversity of attacks, botnet size, attack rate, and synchronization level [2]. Due to a large number of bots and their coordinated behaviors, it not only provides the botmaster with more processing power and Internet bandwidth for free but also allows her to launch coordinated attacks on an unprecedented scale and complexity.

The number of botnets has risen dramatically in the past few years [3] and they have become one of the biggest malware threats, responsible for a large volume of malicious activities. Therefore, there is a need to develop an effective technique for botnet detection and the best policies can be taken out only when the behavior of each stage of the botnet lifecycle is clearly understood.

The lifecycle of botnets can be generally divided into three stages: formation, command and control (C&C), and attack. In the formation stage, the botmaster spreads her bots using a propagation mechanism, such as exploiting propagation, email propagation, web browser propagation, and file sharing propagation [4] to compromise numerous hosts and install bots on them. The bots then try to join the botnet through a rallying mechanism and form a botnet meeting the needs of the botmaster. In addition, each bot is programmed carefully so that it can connect to the botmaster through a C&C channel to update itself with new instructions and code in order to launch new attacks. In the C&C stage, the botmaster sends her commands via C&C channels to remotely control her bots. Finally, in the attack stage, the bots perform different types of malicious activities, such as launching distributed denial of service attacks, sending spam, leaking personal information, and defrauding pay per click advertisers [5].

Although various techniques have been recently proposed to detect botnets, most of them have some limitations in terms of depending on a specific C&C protocol, lacking of detection in an early stage of the botnet lifecycle, working offline, and needing to labeled data for training. To overcome some of these limitations, several techniques have been suggested that generally focus on identifying botnet coordinated group activities, but they still suffer from the lack of enough attention paid to the history of these activities. Therefore, this makes them potentially have a high false alarm rate.

Moreover, reputation systems represent a significant trend in supplementary decision making services and they have been extensively used in many applications, such as P2P networks [6,7], multi-agent systems, ad-hoc and wireless sensor networks [8], and file-sharing systems [9]. The basic idea is to let a party (or parties) calculate reputation scores for a set of objects based on a collection of opinions hold about the objects.

In this paper, we propose BotGrab, a novel negative reputation system that considers both malicious activities and the history of coordinated group activities in the monitored network to identify bot-infected hosts. BotGrab leverages intrinsic behavior of bots in a botnet, which is that they (1) receive the same commands from the botmaster in the C&C stage and (2) perform some malicious activities in response to those commands in the attack stage. Hence, this behavior leads bot-infected hosts to participate in some coordinated group activities in these stages, which can be used as a “footprint” to identify them.

The main contributions of this paper are as follows:
                        
                           •
                           We develop a general botnet detection system that considers both malicious activities and the history of coordinated group activities in the monitored network. Thus, it is able to identify bot-infected hosts that perform some malicious activities in the attack stage or participate in some coordinated group activities in an early stage of the botnet lifecycle.

We propose a novel negative reputation system to track each suspected host in the network and calculate a negative reputation score for it based on its participation in coordinated group activities. We also take some factors into account to make the score more reliable. Consequently, this would be much more accurate than in the case where some hosts temporarily participate in few coordinated group activities.

We build a prototype of BotGrab to demonstrate how it works in the real network traffic including various botnets (e.g., those controlled via IRC, HTTP, or P2P). The experimental results show that it can successfully detect various botnets with a high detection rate and a low false alarm rate.

The rest of this paper is organized as follows: Section 2 provides a general overview of botnet C&C channels and briefly reviews some related work. Section 3 presents BotGrab and Section 4 reports experimental results. Finally, Section 5 discusses some conclusions.

Each botnet has a form of communication infrastructure that the botmaster can use to send out commands to her bots and receive responses from them [10]. This communication infrastructure is commonly known as command and control (C&C) channel.

Botnets can be classified into two main categories based on the structure of their C&C channels: centralized and distributed. In the centralized botnets, the botmaster usually designates a host with a high bandwidth Internet access as C&C server and then utilizes IRC or HTTP protocol to communicate with her bots. Although the centralized structure is easy to construct and efficient in distributing the botmaster’s commands, it presents a major weakness: the C&C server becomes a single point of failure. In fact, taking down the server would cause all bots to lose their communications with the botmaster.

In order to avoid the weakness of having a single point of failure, in the distributed botnets, the communication infrastructure does not completely depend on only a C&C server and it cannot be destroyed even by detecting a number of bots [11]. In these botnets, the botmaster utilizes a P2P protocol to communicate with her bots. In a P2P-based botnet, a new bot-infected host needs to follow an initial procedure, usually known as bootstrap, so that it can find and then join the botnet. There are two general ways of bootstrapping: using an initial peer list or using rendezvous server hard-coded in each bot to obtain the IP address of peer bots in order to join the botnet. Instead of connecting with one C&C server, each bot connects to its peer bots and acts as both client and server. Therefore, if some bots in the botnet are detected, the botnet can still continue to operate under the control of the botmaster. In fact, she can inject her commands to some bots and they distribute these commands to all peer bots connected to them.

@&#RELATED WORK@&#

There has been considerable research work conducted in the area of botnet detection, which can be classified according to three main criteria: the stage of the lifecycle in which botnets are detected, the technique of learning used, and the level of correlation analysis. According to the first criterion, if we could detect botnets in an early stage of their lifecycle (the formation or C&C stages), we would be able to shut them down prior to be used as part of cyber-attacks. On the contrary, detection of botnets in the attack stage has the advantage of being reasonably accurate. Based on the learning technique, botnet detection techniques are divided into supervised and unsupervised [10]. The supervised botnet detection techniques utilize a labeled dataset for training that makes the process error-prone. By removing the need of labeling, the unsupervised botnet detection techniques facilitate the online learning and usually leverage the general botnet behavior, which make them able to detect unknown botnets. However, botnet detection techniques can employ two different levels of correlation analysis, namely, individual-level and group-level analyses. In the individual-level analysis, botnet detection techniques try to focus on detecting each bot-infected host in the network regardless of behavior of other bot-infected hosts. These techniques have the advantage of being able to detect even one bot-infected host in the monitored network typically by matching observed activities with known signatures and thus they need to a priori knowledge of botnets. In the group-level analysis, botnet detection techniques try to find two or more hosts that share a similar behavior pattern and identify them as suspected hosts. These techniques are more accurate, but they can only detect bot-infected hosts that are part of the same botnet. In the following, we discuss some of the popular botnet detection techniques proposed in the literature.

Goebel and Holz [12] proposed Rishi, a technique that uses n-gram analysis with a scoring function and black/white lists to detect IRC-based botnets. Rishi is only able to detect IRC-based botnets and employs individual-level of correlation analysis. It has a relatively high false alarm rate, due to depending on regular expressions as signatures to automatically identify bot-infected hosts. Wang et al. [13] presented other technique to detect IRC-based botnets in an early stage, which employs group-level analysis. Based on their observations, bots that belong to the same botnet have nicknames, composed of a constant string and a random string, which basically follow the same pattern. Therefore, they defined the channel distance criterion to calculate the similarity of nicknames in one channel and used it to identify botnet channels in which nicknames have the same structure. The limitations of this technique are similar to Rishi, but with this difference that it can detect unknown IRC-based botnets.

Gu et al. [14] introduced BotHunter, a passive network monitoring system that focuses on recognizing the infection and coordination dialog occurring during a successful malware infection to detect bot-infected hosts in real-time. BotHunter works by tracking the two-way communication flows between internal and external hosts to extract an evidence trail of data exchanges that match a state-based infection model. It employs individual-level analysis of hosts and needs to predefined infection lifecycle dialog model. BotSniffer is another technique presented in [15], which uses network-based anomaly detection to identify botnet C&C channels in the network. It is based on the observation that bots within the same botnet will likely demonstrate very strong synchronization/correlation in their responses/activities. Hence, it employs several correlation and similarity analysis algorithms to identify hosts that show these behaviors in the network. It is only able to detect centralized botnets with protocols such as IRC and HTTP. BotMiner [16] is an unsupervised botnet detection framework that employs group-level analysis and is independent of botnet C&C protocol and structure. It first clusters similar communication traffic and similar malicious traffic, and then applies cross cluster correlation to identify hosts sharing both similar communication patterns and similar malicious activities. BotMiner considers a history of botnet coordinated group activities by aggregating network flows during long time interval (e.g., during one day), which makes it more accurate but still it cannot detect botnets in an early stage and does not work online.

Castle and Buckley [17] presented a technique to detect spam botnets. At first, they extract the header information from an email message and enhance it with information from the envelope to generate a set of synthetic headers. They then replace the values of the synthetic headers with a limited range of tokens to generate a normalized template representation. Finally, they group the templates to obtain few clusters with a large number of email messages associated with them. These clusters are identified as suspected botnet clusters. This technique is apt and simple, but presents some serious drawbacks because it cannot detect botnets in an early stage and is only able to detect botnets that are used for spamming.

Wurzinger et al. [18] presented a botnet detection system that aims to identify bot-infected hosts without a priori knowledge about C&C channels and the way of botnet propagation. The system relies on a detection model that has two states. The first state of the model specifies signs in the network traffic that show a particular bot command is sent. When a predefined sign is observed, the detection model is switched to the second state. This state specifies another signs that indicate the bot response is occurred. When a model is in the second state, a bot infection is reported. The system does rely upon content analysis of the network traffic to identify signs in the first state. Hence, it cannot detect botnets with complex obfuscation and encryption schemes used for C&C channels.

Yu et al. [19] presented an unsupervised technique that can detect centralized botnets in an online fashion. They first transform the captured network traffic into multi-dimensional feature streams and then use a data-adaptive clustering algorithm to group feature streams. They use a similarity criterion as a metric for group-level analysis to detect suspected botnet clusters that meet the criteria at that moment without considering their earlier behaviors.

Lu et al. [10] proposed an unsupervised technique to detect and cluster botnet communication traffic on network application communities. They first classify the network traffic into existing known applications using a C4.5 decision tree model and then cluster the network traffic to find the anomalous behaviors on a specific application community based on the n-gram features extracted from the content of network flows. In real world, it is very difficult to identify all network traffic (e.g., traffic with the encrypted payload) into known applications on the large scale networks.

Choi and Lee [20] proposed BotGAD, an online unsupervised botnet detection technique. They define a group activity as a key feature of botnets and present a metric to detect botnets by monitoring group activities in DNS traffic. A botnet can evade this technique when it performs DNS queries in one stage of the botnet lifecycle and never performs them again. Moreover, BotGAD is only able to detect botnets that perform group activities in DNS traffic.

In this section, we present BotGrab, a negative reputation system for botnet detection. The aim of BotGrab is to detect a group of bot-infected hosts within a monitored network that are part of the same botnet. To do so, BotGrab utilizes a negative reputation score which is a measure calculated by one of its components for each host to identify whether or not that host is bot-infected.

Generally, there are four main steps that the majority of the recent trust and reputation systems in the literature follow [21]:
                        
                           •
                           
                              Information collection. For each peer, this is done by asking the opinions of other users about that peer.


                              Information aggregation. In this step, all of the received information is aggregated thoroughly and then a score is calculated for each peer in the network in some way.


                              Peer selection. In this step, the most reputable peer in the network is selected based on the calculated scores.


                              Punishment and reward. This is done according to the satisfaction of users who have received a service from the reputable peer, which leads to adjust its global trust or reputation.

As a reputation system, BotGrab follows the above steps, but makes some slight modifications. In particular, instead of asking the opinions of other hosts about a given host, it calculates the negative reputation score of the host based on the history of its participation in various coordinated group activities.

In the following, we first give the problem definition and then describe the architecture of BotGrab.

In order to present a general botnet detection system, we need to study the basic characteristics of botnets. We thus start with the definition of a botnet.
                           Definition 1
                           Botnet


                           A botnet is defined as a coordinated group of bots that are controlled through C&C channels and perform similar malicious activities [16].

The term “coordinated group” means that multiple (at least two) bots within the same botnet receive the same commands and perform the similar activities [16]. The bots perform all of their activities over different time periods in the form of an integrated group during the botnet lifecycle. Hence, each bot-infected host in the network leaves a history of some coordinated group activities, which can be used as a footprint to identify it.

BotGrab consists of five different engines (see Fig. 1
                        ): base filtering, flow clustering, negative reputation, malicious activity detection, and botnet detection.

The base filtering engine maintains a blacklist and whitelist of known malicious and benign hosts, respectively. It captures the network traffic sent to or received from hosts not included in the blacklist and whitelist. The network traffic is then simultaneously given to both flow clustering and malicious activity detection engines. The flow clustering engine extracts a number of flow vectors from the given network traffic and divide the flow vectors into some flow clusters by an online clustering technique. Any flow cluster that has been updated at the previous time period and its intra-cluster similarity is above a similarity threshold, 
                           
                              
                                 
                                    τ
                                 
                                 
                                    sim
                                 
                              
                           
                        , is suspected to be involved in a coordinated group activity. Therefore, it is delivered to the negative reputation engine. Moreover, any non-suspected flow cluster with a preservation criterion below a preserve threshold, 
                           
                              
                                 
                                    τ
                                 
                                 
                                    prv
                                 
                              
                           
                        , is eliminated from the set of flow clusters. The negative reputation engine calculates a negative reputation score for each suspected host based on the history of its coordinated group activities and gives all calculated scores to the botnet detection engine that makes informed decisions about the suspected hosts. On the other hand, the malicious activity detection engine monitors the network traffic to detect malicious activities that may be related to a botnet and notifies the botnet detection engine. Subsequently, this engine combines the obtained results and makes a final decision on which of hosts are most likely to be bot-infected. More specifically, if a disreputable host has performed some malicious activities or its score meets a negative reputation threshold, 
                           
                              
                                 
                                    τ
                                 
                                 
                                    rep
                                 
                              
                           
                        , even though has not performed any malicious activities yet, it is identified as being bot-infected. Eventually, the system administrator is informed and the blacklist is updated with malicious hosts engaged in recent botnet C&C communications.

Since the ultimate goal of BotGrab is to detect bot-infected hosts within its monitored network, it is better for BotGrab to be deployed at the edge of the network in order to capture and analyze all network traffic flowing between internal hosts and the Internet (see Fig. 2
                        ).

As mentioned above, the base filtering engine maintains a blacklist of known malicious hosts already engaged in botnet C&C communications and updates it based on feedback received from the botnet detection engine. Therefore, if an internal host tries to connect to a malicious host in the blacklist, it is identified as a potential bot-infected host. In addition to the blacklist, the base filtering engine maintains a whitelist of known benign hosts (e.g., Google, Yahoo, and Facebook servers) that are “safe” for the monitored network and does not capture packets sent to or received from them. It should be mentioned that the base filtering engine is not essential to the detection accuracy of BotGrab, but can reduce the calculation time and storage space required.

The aim of the flow clustering engine is to identify coordinated group activities in the monitored network through network flow analysis. Recall that a network flow or, in short, flow is a set of packets that share the same source IP address, source port, destination IP address, destination port, and protocol. It is called active as long as packets that meet its specification arrive continuously. Hence, statistical features of each active flow are continuously changed over time and it is impossible to cluster active flows unless we consider each of them as a flow stream over different time periods.
                              Definition 2
                              Flow vector


                              Let 
                                    
                                       
                                          
                                             f
                                          
                                          
                                             i
                                          
                                       
                                    
                                  be a flow. Each flow vector 
                                    
                                       
                                          
                                             f
                                          
                                          
                                             i
                                          
                                       
                                       (
                                       
                                          
                                             t
                                          
                                          
                                             j
                                          
                                       
                                       )
                                    
                                  is a p-dimensional feature vector extracted from 
                                    
                                       
                                          
                                             f
                                          
                                          
                                             i
                                          
                                       
                                    
                                  during the time period 
                                    
                                       
                                          
                                             t
                                          
                                          
                                             j
                                          
                                       
                                    
                                 : 
                                    
                                       (1)
                                       
                                          
                                             
                                                f
                                             
                                             
                                                i
                                             
                                          
                                          (
                                          
                                             
                                                t
                                             
                                             
                                                j
                                             
                                          
                                          )
                                          =
                                          (
                                          
                                             
                                                x
                                             
                                             
                                                1
                                             
                                          
                                          ,
                                          
                                             
                                                x
                                             
                                             
                                                2
                                             
                                          
                                          ,
                                          …
                                          ,
                                          
                                             
                                                x
                                             
                                             
                                                p
                                             
                                          
                                          )
                                          ,
                                       
                                    
                                 where p is the number of features. 
                                    
                                       
                                          
                                             x
                                          
                                          
                                             k
                                          
                                       
                                    
                                  is the kth feature value of 
                                    
                                       
                                          
                                             f
                                          
                                          
                                             i
                                          
                                       
                                       (
                                       
                                          
                                             t
                                          
                                          
                                             j
                                          
                                       
                                       )
                                    
                                  and can be denoted by 
                                    
                                       
                                          
                                             f
                                          
                                          
                                             i
                                          
                                          
                                             k
                                          
                                       
                                       (
                                       
                                          
                                             t
                                          
                                          
                                             j
                                          
                                       
                                       )
                                    
                                 .

The flow stream of a flow 
                                    
                                       
                                          
                                             f
                                          
                                          
                                             i
                                          
                                       
                                    
                                 , denoted by 
                                    
                                       
                                          
                                             
                                                
                                                   F
                                                
                                                
                                                   →
                                                
                                             
                                          
                                          
                                             i
                                          
                                       
                                    
                                 , is defined as a sequence of overlapping flow vectors extracted from 
                                    
                                       
                                          
                                             f
                                          
                                          
                                             i
                                          
                                       
                                    
                                  during consecutive time periods of the same length:
                                    
                                       (2)
                                       
                                          
                                             
                                                
                                                   
                                                      F
                                                   
                                                   
                                                      →
                                                   
                                                
                                             
                                             
                                                i
                                             
                                          
                                          =
                                          〈
                                          
                                             
                                                f
                                             
                                             
                                                i
                                             
                                          
                                          (
                                          
                                             
                                                t
                                             
                                             
                                                1
                                             
                                          
                                          )
                                          ,
                                          
                                             
                                                f
                                             
                                             
                                                i
                                             
                                          
                                          (
                                          
                                             
                                                t
                                             
                                             
                                                2
                                             
                                          
                                          )
                                          ,
                                          
                                             
                                                f
                                             
                                             
                                                i
                                             
                                          
                                          (
                                          
                                             
                                                t
                                             
                                             
                                                3
                                             
                                          
                                          )
                                          ,
                                          …
                                          ,
                                          
                                             
                                                f
                                             
                                             
                                                i
                                             
                                          
                                          (
                                          
                                             
                                                t
                                             
                                             
                                                j
                                             
                                          
                                          )
                                          ,
                                          …
                                          〉
                                          ,
                                       
                                    
                                 where 
                                    
                                       
                                          
                                             f
                                          
                                          
                                             i
                                          
                                       
                                       (
                                       
                                          
                                             t
                                          
                                          
                                             j
                                          
                                       
                                       )
                                    
                                  is a flow vector. Fig. 3
                                  shows flow vectors at two consecutive time periods.

Let 
                                    
                                       
                                          
                                             
                                                
                                                   F
                                                
                                                
                                                   →
                                                
                                             
                                          
                                          
                                             i
                                          
                                       
                                    
                                  be the ith flow stream. The flow set S is the infinite collection of flow streams in the network traffic:
                                    
                                       (3)
                                       
                                          S
                                          =
                                          
                                             
                                                
                                                   …
                                                   ,
                                                   
                                                      
                                                         
                                                            
                                                               F
                                                            
                                                            
                                                               →
                                                            
                                                         
                                                      
                                                      
                                                         i
                                                         -
                                                         1
                                                      
                                                   
                                                   ,
                                                   
                                                      
                                                         
                                                            
                                                               F
                                                            
                                                            
                                                               →
                                                            
                                                         
                                                      
                                                      
                                                         i
                                                      
                                                   
                                                   ,
                                                   
                                                      
                                                         
                                                            
                                                               F
                                                            
                                                            
                                                               →
                                                            
                                                         
                                                      
                                                      
                                                         i
                                                         +
                                                         1
                                                      
                                                   
                                                   ,
                                                   …
                                                
                                             
                                          
                                          .
                                       
                                    
                                 The set of flow vectors at a time period t is denoted by 
                                    
                                       S
                                       (
                                       t
                                       )
                                       ⊆
                                       S
                                    
                                 : 
                                    
                                       (4)
                                       
                                          S
                                          (
                                          t
                                          )
                                          =
                                          
                                             
                                                
                                                   
                                                      
                                                         f
                                                      
                                                      
                                                         i
                                                      
                                                   
                                                   (
                                                   t
                                                   )
                                                   ,
                                                   
                                                      
                                                         f
                                                      
                                                      
                                                         i
                                                         +
                                                         1
                                                      
                                                   
                                                   (
                                                   t
                                                   )
                                                   ,
                                                   …
                                                   ,
                                                   
                                                      
                                                         f
                                                      
                                                      
                                                         i
                                                         +
                                                         n
                                                      
                                                   
                                                   (
                                                   t
                                                   )
                                                
                                             
                                          
                                          .
                                       
                                    
                                 
                              

As mentioned before, bots within the same botnet receive the same commands and perform the similar activities; hence, they exhibit a similar traffic behavior during close time periods. This is largely due to the fact that bots are pre-programmed to perform the same routine activities as coordinated by the same botmaster [15]. With regard to this issue, we use an online clustering technique to identify coordinated group activities in the monitored network. The online clustering technique consists of two main procedures: online incremental clustering (OIC) and suspected cluster identification (SCI). These procedures are based on the concepts of “flow distance” and “flow cluster”, which are described below.
                              Definition 5
                              Flow distance


                              Let 
                                    
                                       
                                          
                                             f
                                          
                                          
                                             i
                                          
                                       
                                       (
                                       t
                                       )
                                    
                                  and 
                                    
                                       
                                          
                                             f
                                          
                                          
                                             j
                                          
                                       
                                       (
                                       t
                                       )
                                    
                                  be two flow vectors at the time period t. The distance of 
                                    
                                       
                                          
                                             f
                                          
                                          
                                             i
                                          
                                       
                                       (
                                       t
                                       )
                                    
                                  from 
                                    
                                       
                                          
                                             f
                                          
                                          
                                             j
                                          
                                       
                                       (
                                       t
                                       )
                                    
                                  is defined as the average of differences between their corresponding feature values:
                                    
                                       (5)
                                       
                                          dis
                                          (
                                          
                                             
                                                f
                                             
                                             
                                                i
                                             
                                          
                                          (
                                          t
                                          )
                                          ,
                                          
                                             
                                                f
                                             
                                             
                                                j
                                             
                                          
                                          (
                                          t
                                          )
                                          )
                                          =
                                          
                                             
                                                
                                                   
                                                      ∑
                                                   
                                                   
                                                      k
                                                      =
                                                      1
                                                   
                                                   
                                                      p
                                                   
                                                
                                                
                                                   
                                                      δ
                                                   
                                                   
                                                      i
                                                      ,
                                                      j
                                                   
                                                   
                                                      k
                                                   
                                                
                                                Δ
                                                (
                                                
                                                   
                                                      f
                                                   
                                                   
                                                      i
                                                   
                                                   
                                                      k
                                                   
                                                
                                                (
                                                t
                                                )
                                                ,
                                                
                                                   
                                                      f
                                                   
                                                   
                                                      j
                                                   
                                                   
                                                      k
                                                   
                                                
                                                (
                                                t
                                                )
                                                )
                                             
                                             
                                                
                                                   
                                                      ∑
                                                   
                                                   
                                                      k
                                                      =
                                                      1
                                                   
                                                   
                                                      p
                                                   
                                                
                                                
                                                   
                                                      δ
                                                   
                                                   
                                                      i
                                                      ,
                                                      j
                                                   
                                                   
                                                      k
                                                   
                                                
                                             
                                          
                                          ,
                                       
                                    
                                 where 
                                    
                                       
                                          
                                             δ
                                          
                                          
                                             i
                                             ,
                                             j
                                          
                                          
                                             k
                                          
                                       
                                    
                                  is an indicator and is defined as
                                    
                                       (6)
                                       
                                          
                                             
                                                δ
                                             
                                             
                                                i
                                                ,
                                                j
                                             
                                             
                                                k
                                             
                                          
                                          =
                                          
                                             
                                                
                                                   
                                                      
                                                         
                                                            0
                                                         
                                                         
                                                            if
                                                            
                                                            
                                                               
                                                                  f
                                                               
                                                               
                                                                  i
                                                               
                                                               
                                                                  k
                                                               
                                                            
                                                            (
                                                            t
                                                            )
                                                            
                                                            or
                                                            
                                                            
                                                               
                                                                  f
                                                               
                                                               
                                                                  j
                                                               
                                                               
                                                                  k
                                                               
                                                            
                                                            (
                                                            t
                                                            )
                                                            
                                                            is missed,
                                                         
                                                      
                                                      
                                                         
                                                            1
                                                         
                                                         
                                                            otherwise.
                                                         
                                                      
                                                   
                                                
                                             
                                          
                                       
                                    
                                 Moreover, 
                                    
                                       Δ
                                       (
                                       
                                          
                                             f
                                          
                                          
                                             i
                                          
                                          
                                             k
                                          
                                       
                                       (
                                       t
                                       )
                                       ,
                                       
                                          
                                             f
                                          
                                          
                                             j
                                          
                                          
                                             k
                                          
                                       
                                       (
                                       t
                                       )
                                       )
                                    
                                  is the difference between the values of the kth feature of 
                                    
                                       
                                          
                                             f
                                          
                                          
                                             i
                                          
                                       
                                       (
                                       t
                                       )
                                    
                                  and 
                                    
                                       
                                          
                                             f
                                          
                                          
                                             j
                                          
                                       
                                       (
                                       t
                                       )
                                    
                                 . If the kth feature is a categorical feature, the difference 
                                    
                                       Δ
                                       (
                                       
                                          
                                             f
                                          
                                          
                                             i
                                          
                                          
                                             k
                                          
                                       
                                       (
                                       t
                                       )
                                       ,
                                       
                                          
                                             f
                                          
                                          
                                             j
                                          
                                          
                                             k
                                          
                                       
                                       (
                                       t
                                       )
                                       )
                                    
                                  is calculated as
                                    
                                       (7)
                                       
                                          Δ
                                          (
                                          
                                             
                                                f
                                             
                                             
                                                i
                                             
                                             
                                                k
                                             
                                          
                                          (
                                          t
                                          )
                                          ,
                                          
                                             
                                                f
                                             
                                             
                                                j
                                             
                                             
                                                k
                                             
                                          
                                          (
                                          t
                                          )
                                          )
                                          =
                                          
                                             
                                                
                                                   
                                                      
                                                         
                                                            0
                                                         
                                                         
                                                            if
                                                            
                                                            
                                                               
                                                                  f
                                                               
                                                               
                                                                  i
                                                               
                                                               
                                                                  k
                                                               
                                                            
                                                            (
                                                            t
                                                            )
                                                            =
                                                            
                                                               
                                                                  f
                                                               
                                                               
                                                                  j
                                                               
                                                               
                                                                  k
                                                               
                                                            
                                                            (
                                                            t
                                                            )
                                                            ,
                                                         
                                                      
                                                      
                                                         
                                                            1
                                                         
                                                         
                                                            otherwise.
                                                         
                                                      
                                                   
                                                
                                             
                                          
                                       
                                    
                                 Otherwise, it is calculated as
                                    
                                       (8)
                                       
                                          Δ
                                          (
                                          
                                             
                                                f
                                             
                                             
                                                i
                                             
                                             
                                                k
                                             
                                          
                                          (
                                          t
                                          )
                                          ,
                                          
                                             
                                                f
                                             
                                             
                                                j
                                             
                                             
                                                k
                                             
                                          
                                          (
                                          t
                                          )
                                          )
                                          =
                                          
                                             
                                                ∣
                                                
                                                   
                                                      f
                                                   
                                                   
                                                      i
                                                   
                                                   
                                                      k
                                                   
                                                
                                                (
                                                t
                                                )
                                                -
                                                
                                                   
                                                      f
                                                   
                                                   
                                                      j
                                                   
                                                   
                                                      k
                                                   
                                                
                                                (
                                                t
                                                )
                                                ∣
                                             
                                             
                                                
                                                   
                                                      f
                                                   
                                                   
                                                      max
                                                   
                                                   
                                                      k
                                                   
                                                
                                                (
                                                t
                                                -
                                                1
                                                )
                                                -
                                                
                                                   
                                                      f
                                                   
                                                   
                                                      min
                                                   
                                                   
                                                      k
                                                   
                                                
                                                (
                                                t
                                                -
                                                1
                                                )
                                             
                                          
                                          ,
                                       
                                    
                                 where 
                                    
                                       
                                          
                                             f
                                          
                                          
                                             min
                                          
                                          
                                             k
                                          
                                       
                                       (
                                       t
                                       -
                                       1
                                       )
                                    
                                  and 
                                    
                                       
                                          
                                             f
                                          
                                          
                                             max
                                          
                                          
                                             k
                                          
                                       
                                       (
                                       t
                                       -
                                       1
                                       )
                                    
                                  are the minimum and maximum values of the kth feature over all flow vectors at the previous time period 
                                    
                                       t
                                       -
                                       1
                                    
                                 , respectively. The main purpose of using them is to normalize feature values when we are calculating the distance of two flow vectors.

A flow cluster is a set of flow vectors such that the distance of each one from the cluster’s centroid is less than a distance threshold, 
                                    
                                       σ
                                    
                                 , which we call the cluster radius. Each flow cluster 
                                    
                                       
                                          
                                             c
                                          
                                          
                                             j
                                          
                                       
                                    
                                  is a triple 
                                    
                                       (
                                       
                                          
                                             μ
                                          
                                          
                                             j
                                          
                                       
                                       ,
                                       
                                          
                                             θ
                                          
                                          
                                             j
                                          
                                       
                                       ,
                                       
                                          
                                             ψ
                                          
                                          
                                             j
                                          
                                       
                                       )
                                    
                                 , where 
                                    
                                       
                                          
                                             μ
                                          
                                          
                                             j
                                          
                                       
                                    
                                  is the centroid, 
                                    
                                       
                                          
                                             θ
                                          
                                          
                                             j
                                          
                                       
                                    
                                  is the birth date, and 
                                    
                                       
                                          
                                             ψ
                                          
                                          
                                             j
                                          
                                       
                                    
                                  is the update status of 
                                    
                                       
                                          
                                             c
                                          
                                          
                                             j
                                          
                                       
                                    
                                 .

The set of flow clusters at the time period t is denoted by 
                              
                                 C
                                 (
                                 t
                                 )
                              
                           . For each flow cluster 
                              
                                 
                                    
                                       c
                                    
                                    
                                       j
                                    
                                 
                                 ∈
                                 C
                                 (
                                 t
                                 )
                              
                           , the centroid 
                              
                                 
                                    
                                       μ
                                    
                                    
                                       j
                                    
                                 
                              
                            is represented as a p-dimensional flow vector. Let 
                              
                                 
                                    
                                       c
                                    
                                    
                                       j
                                    
                                    
                                       k
                                    
                                 
                              
                            be the set of values of the kth feature over all flow vectors in 
                              
                                 
                                    
                                       c
                                    
                                    
                                       j
                                    
                                 
                              
                           : 
                              
                                 (9)
                                 
                                    
                                       
                                          c
                                       
                                       
                                          j
                                       
                                       
                                          k
                                       
                                    
                                    =
                                    {
                                    
                                       
                                          f
                                       
                                       
                                          i
                                       
                                       
                                          k
                                       
                                    
                                    (
                                    t
                                    )
                                    |
                                    
                                       
                                          f
                                       
                                       
                                          i
                                       
                                    
                                    (
                                    t
                                    )
                                    ∈
                                    
                                       
                                          c
                                       
                                       
                                          j
                                       
                                    
                                    }
                                    .
                                 
                              
                           Each feature value 
                              
                                 
                                    
                                       μ
                                    
                                    
                                       j
                                    
                                    
                                       k
                                    
                                 
                                 ∈
                                 
                                    
                                       μ
                                    
                                    
                                       j
                                    
                                 
                              
                            is calculated as the average of values in 
                              
                                 
                                    
                                       c
                                    
                                    
                                       j
                                    
                                    
                                       k
                                    
                                 
                              
                            if they are numerical, otherwise it is set to a value with the highest frequency in 
                              
                                 
                                    
                                       c
                                    
                                    
                                       j
                                    
                                    
                                       k
                                    
                                 
                              
                           .

The pseudo code of OIC is shown in Algorithm 1. As outlined in the algorithm, OIC receives a set of flow vectors at the current time period as input and either updates the existing flow clusters or makes some new flow clusters, such that flow vectors in the same flow cluster are more similar to each other than flow vectors in different flow clusters. Let 
                              
                                 S
                                 (
                                 t
                                 )
                              
                            be the set of flow vectors at the current time period t and 
                              
                                 C
                                 (
                                 t
                                 -
                                 1
                                 )
                              
                            be the set of flow clusters at the previous time period 
                              
                                 t
                                 -
                                 1
                              
                           . At first, OIC updates flow vectors in each flow cluster 
                              
                                 
                                    
                                       c
                                    
                                    
                                       j
                                    
                                 
                                 ∈
                                 C
                                 (
                                 t
                                 -
                                 1
                                 )
                              
                            with their new values in 
                              
                                 S
                                 (
                                 t
                                 )
                              
                            and then removes those flow vectors from 
                              
                                 
                                    
                                       c
                                    
                                    
                                       j
                                    
                                 
                              
                            whose flow distance from the centroid 
                              
                                 
                                    
                                       μ
                                    
                                    
                                       j
                                    
                                 
                              
                            is greater than or equal to 
                              
                                 σ
                              
                            (lines 7 to 16). Afterward, if a flow vector 
                              
                                 
                                    
                                       f
                                    
                                    
                                       i
                                    
                                 
                                 (
                                 t
                                 )
                                 ∈
                                 S
                                 (
                                 t
                                 )
                              
                            does not belong to any flow cluster 
                              
                                 
                                    
                                       c
                                    
                                    
                                       j
                                    
                                 
                                 ∈
                                 C
                                 (
                                 t
                                 )
                              
                           , it is added to (1) the nearest flow cluster 
                              
                                 
                                    
                                       c
                                    
                                    
                                       min
                                    
                                 
                                 ∈
                                 C
                                 (
                                 t
                                 )
                              
                            whose flow distance is less than 
                              
                                 σ
                              
                            (lines 20 to 24), or (2) a new flow cluster 
                              
                                 
                                    
                                       c
                                    
                                    
                                       new
                                    
                                 
                              
                            (lines 26 to 30). It should be mentioned that OIC has a time complexity of 
                              
                                 O
                                 (
                                 nc
                                 )
                              
                           , where n is the number of flow vectors in 
                              
                                 S
                                 (
                                 t
                                 )
                              
                            and c is the number of flow clusters in 
                              
                                 C
                                 (
                                 t
                                 )
                              
                           .

In addition, the pseudo code of SCI is shown in Algorithm 2. As described in the algorithm, SCI calculates the similarity and preservation criterion of flow clusters at the current time period to identify suspected flow clusters and remove some non-suspected ones. Let 
                              
                                 C
                                 (
                                 t
                                 )
                              
                            be the set of flow clusters at the current time period t. At first, SCI examines flow clusters in 
                              
                                 C
                                 (
                                 t
                                 )
                              
                            to make a decision as to whether a flow cluster 
                              
                                 
                                    
                                       c
                                    
                                    
                                       j
                                    
                                 
                                 ∈
                                 C
                                 (
                                 t
                                 )
                              
                            is suspected to be involved in a coordinated group activity (lines 3 to 6). For this purpose, it considers three characteristics for a suspected flow cluster: (1) being updated at the current time period (i.e., it contains some active flows), (2) having at least two flow vectors whose hosts are different from each other, and (3) having an intra-cluster similarity criterion above the similarity threshold 
                              
                                 
                                    
                                       τ
                                    
                                    
                                       sim
                                    
                                 
                              
                           . The reason is that the bots belonging to the same botnet generally run the same program code and are pre-programmed to respond to different commands from the botmaster. Hence, they behave in a similar way and almost deterministically on the given commands. This implies botnet flow vectors within the same flow cluster are very similar to each other and there is a high closeness between them. In fact, what makes the most difference between botnet flow clusters and other flow clusters is the closeness of flow vectors within them, indicating that there is a coordinated group activity in the network. If 
                              
                                 
                                    
                                       c
                                    
                                    
                                       j
                                    
                                 
                              
                            is identified as “suspect”, it is added to the set 
                              
                                 Ω
                                 (
                                 t
                                 )
                              
                            of suspected flow clusters.
                              Definition 7
                              Intra-cluster similarity criterion


                              Let 
                                    
                                       
                                          
                                             c
                                          
                                          
                                             j
                                          
                                       
                                    
                                  be a flow cluster with the centroid 
                                    
                                       
                                          
                                             μ
                                          
                                          
                                             j
                                          
                                       
                                    
                                 . Intra-cluster similarity criterion for 
                                    
                                       
                                          
                                             c
                                          
                                          
                                             j
                                          
                                       
                                    
                                  is denoted by 
                                    
                                       sim
                                       (
                                       
                                          
                                             c
                                          
                                          
                                             j
                                          
                                       
                                       )
                                    
                                  and calculated as
                                    
                                       (10)
                                       
                                          sim
                                          (
                                          
                                             
                                                c
                                             
                                             
                                                j
                                             
                                          
                                          )
                                          =
                                          
                                             
                                                e
                                             
                                             
                                                -
                                                
                                                   
                                                      d
                                                   
                                                   
                                                      j
                                                   
                                                
                                             
                                          
                                          ,
                                       
                                    
                                 where 
                                    
                                       
                                          
                                             d
                                          
                                          
                                             j
                                          
                                       
                                    
                                  is the average distance of all flow vectors in 
                                    
                                       
                                          
                                             c
                                          
                                          
                                             j
                                          
                                       
                                    
                                  from 
                                    
                                       
                                          
                                             μ
                                          
                                          
                                             j
                                          
                                       
                                    
                                  and called the average intra-cluster distance:
                                    
                                       (11)
                                       
                                          
                                             
                                                d
                                             
                                             
                                                j
                                             
                                          
                                          =
                                          
                                             
                                                1
                                             
                                             
                                                |
                                                
                                                   
                                                      c
                                                   
                                                   
                                                      j
                                                   
                                                
                                                |
                                             
                                          
                                          
                                             
                                                
                                                   ∑
                                                
                                                
                                                   
                                                      
                                                         f
                                                      
                                                      
                                                         i
                                                      
                                                   
                                                   (
                                                   t
                                                   )
                                                   ∈
                                                   
                                                      
                                                         c
                                                      
                                                      
                                                         j
                                                      
                                                   
                                                
                                             
                                          
                                          dis
                                          (
                                          
                                             
                                                f
                                             
                                             
                                                i
                                             
                                          
                                          (
                                          t
                                          )
                                          ,
                                          
                                             
                                                μ
                                             
                                             
                                                j
                                             
                                          
                                          )
                                          ,
                                       
                                    
                                 where 
                                    
                                       |
                                       
                                          
                                             c
                                          
                                          
                                             j
                                          
                                       
                                       |
                                    
                                  is the number of flow vectors in 
                                    
                                       
                                          
                                             c
                                          
                                          
                                             j
                                          
                                       
                                    
                                 . If flow vectors in 
                                    
                                       
                                          
                                             c
                                          
                                          
                                             j
                                          
                                       
                                    
                                  are much more similar, 
                                    
                                       
                                          
                                             d
                                          
                                          
                                             j
                                          
                                       
                                    
                                  will be more closer to zero and thus the intra-cluster similarity of 
                                    
                                       
                                          
                                             c
                                          
                                          
                                             j
                                          
                                       
                                    
                                  will be more closer to 1.

Online incremental clustering (OIC) 
                                    
                                       
                                          
                                          
                                             
                                                
                                                   Input:
                                                
                                             
                                             
                                                
                                                   
                                                   
                                                      
                                                         S
                                                         (
                                                         t
                                                         )
                                                      
                                                   : set of flow vectors
                                             
                                             
                                                
                                                   
                                                   
                                                      
                                                         C
                                                         (
                                                         t
                                                         -
                                                         1
                                                         )
                                                      
                                                   : set of flow clusters
                                             
                                             
                                                
                                                   
                                                   
                                                      
                                                         σ
                                                      
                                                   : cluster radius
                                             
                                             
                                                
                                                   Output:
                                                
                                             
                                             
                                                
                                                   
                                                   
                                                      
                                                         C
                                                         (
                                                         t
                                                         )
                                                      
                                                   : set of flow clusters
                                             
                                             
                                                
                                                   
                                                   1: for 
                                                   
                                                      
                                                         k
                                                         =
                                                         1
                                                      
                                                    to p 
                                                   do
                                                
                                             
                                             
                                                
                                                   
                                                   2: Calculate 
                                                      
                                                         
                                                            
                                                               f
                                                            
                                                            
                                                               min
                                                            
                                                            
                                                               k
                                                            
                                                         
                                                         (
                                                         t
                                                         -
                                                         1
                                                         )
                                                      
                                                    and 
                                                      
                                                         
                                                            
                                                               f
                                                            
                                                            
                                                               max
                                                            
                                                            
                                                               k
                                                            
                                                         
                                                         (
                                                         t
                                                         -
                                                         1
                                                         )
                                                      
                                                   
                                                
                                             
                                             
                                                
                                                   
                                                   3: end for
                                                
                                             
                                             
                                                
                                                   
                                                   4: for each 
                                                      
                                                         
                                                            
                                                               c
                                                            
                                                            
                                                               j
                                                            
                                                         
                                                         ∈
                                                         C
                                                         (
                                                         t
                                                         -
                                                         1
                                                         )
                                                      
                                                    
                                                   do
                                                
                                             
                                             
                                                
                                                   
                                                   5: 
                                                   
                                                      
                                                         
                                                            
                                                               ψ
                                                            
                                                            
                                                               j
                                                            
                                                         
                                                         ←
                                                      
                                                    F
                                             
                                             
                                                
                                                   
                                                   6: end for
                                                
                                             
                                             
                                                
                                                   
                                                   7: for each 
                                                      
                                                         
                                                            
                                                               f
                                                            
                                                            
                                                               i
                                                            
                                                         
                                                         (
                                                         t
                                                         )
                                                         ∈
                                                         S
                                                         (
                                                         t
                                                         )
                                                      
                                                    
                                                   do
                                                
                                             
                                             
                                                
                                                   
                                                   8: 
                                                   if 
                                                   
                                                      
                                                         
                                                            
                                                               f
                                                            
                                                            
                                                               i
                                                            
                                                         
                                                         (
                                                         t
                                                         -
                                                         1
                                                         )
                                                         ∈
                                                         
                                                            
                                                               c
                                                            
                                                            
                                                               j
                                                            
                                                         
                                                      
                                                    for some 
                                                      
                                                         
                                                            
                                                               c
                                                            
                                                            
                                                               j
                                                            
                                                         
                                                         ∈
                                                         C
                                                         (
                                                         t
                                                         -
                                                         1
                                                         )
                                                      
                                                    
                                                   then
                                                
                                             
                                             
                                                
                                                   
                                                   9: 
                                                   
                                                   
                                                      
                                                         
                                                            
                                                               c
                                                            
                                                            
                                                               j
                                                            
                                                         
                                                         ←
                                                         (
                                                         
                                                            
                                                               c
                                                            
                                                            
                                                               j
                                                            
                                                         
                                                         -
                                                         {
                                                         
                                                            
                                                               f
                                                            
                                                            
                                                               i
                                                            
                                                         
                                                         (
                                                         t
                                                         -
                                                         1
                                                         )
                                                         }
                                                         )
                                                         ∪
                                                         {
                                                         
                                                            
                                                               f
                                                            
                                                            
                                                               i
                                                            
                                                         
                                                         (
                                                         t
                                                         )
                                                         }
                                                      
                                                   
                                                
                                             
                                             
                                                10: 
                                                   
                                                   if 
                                                   
                                                      
                                                         dis
                                                         (
                                                         
                                                            
                                                               f
                                                            
                                                            
                                                               i
                                                            
                                                         
                                                         (
                                                         t
                                                         )
                                                         ,
                                                         
                                                            
                                                               μ
                                                            
                                                            
                                                               j
                                                            
                                                         
                                                         )
                                                         ⩾
                                                         σ
                                                      
                                                    
                                                   then
                                                
                                             
                                             
                                                11: 
                                                   
                                                   
                                                      
                                                         
                                                            
                                                               c
                                                            
                                                            
                                                               j
                                                            
                                                         
                                                         ←
                                                         
                                                            
                                                               c
                                                            
                                                            
                                                               j
                                                            
                                                         
                                                         -
                                                         {
                                                         
                                                            
                                                               f
                                                            
                                                            
                                                               i
                                                            
                                                         
                                                         (
                                                         t
                                                         )
                                                         }
                                                      
                                                   
                                                
                                             
                                             
                                                12: 
                                                   
                                                   end if
                                                
                                             
                                             
                                                13: 
                                                   Update 
                                                      
                                                         
                                                            
                                                               μ
                                                            
                                                            
                                                               j
                                                            
                                                         
                                                      
                                                   
                                                
                                             
                                             
                                                14: 
                                                   
                                                   
                                                      
                                                         
                                                            
                                                               ψ
                                                            
                                                            
                                                               j
                                                            
                                                         
                                                         ←
                                                      
                                                    T
                                             
                                             
                                                15: 
                                                   end if
                                                
                                             
                                             
                                                16: end for
                                                
                                             
                                             
                                                17: 
                                                      
                                                         C
                                                         (
                                                         t
                                                         )
                                                         ←
                                                         C
                                                         (
                                                         t
                                                         -
                                                         1
                                                         )
                                                      
                                                   
                                                
                                             
                                             
                                                18: for each 
                                                      
                                                         
                                                            
                                                               f
                                                            
                                                            
                                                               i
                                                            
                                                         
                                                         (
                                                         t
                                                         )
                                                         ∈
                                                         S
                                                         (
                                                         t
                                                         )
                                                      
                                                    
                                                   do
                                                
                                             
                                             
                                                19: 
                                                   if 
                                                   
                                                      
                                                         
                                                            
                                                               f
                                                            
                                                            
                                                               i
                                                            
                                                         
                                                         (
                                                         t
                                                         )
                                                         ∉
                                                         
                                                            
                                                               c
                                                            
                                                            
                                                               j
                                                            
                                                         
                                                      
                                                    for all 
                                                      
                                                         
                                                            
                                                               c
                                                            
                                                            
                                                               j
                                                            
                                                         
                                                         ∈
                                                         C
                                                         (
                                                         t
                                                         )
                                                      
                                                    
                                                   then
                                                
                                             
                                             
                                                20: 
                                                   
                                                   
                                                      
                                                         
                                                            
                                                               c
                                                            
                                                            
                                                               min
                                                            
                                                         
                                                         ←
                                                         arg
                                                         
                                                            
                                                               min
                                                            
                                                            
                                                               
                                                                  
                                                                     c
                                                                  
                                                                  
                                                                     k
                                                                  
                                                               
                                                               ∈
                                                               C
                                                               (
                                                               t
                                                               )
                                                            
                                                         
                                                         dis
                                                         (
                                                         
                                                            
                                                               f
                                                            
                                                            
                                                               i
                                                            
                                                         
                                                         (
                                                         t
                                                         )
                                                         ,
                                                         
                                                            
                                                               μ
                                                            
                                                            
                                                               k
                                                            
                                                         
                                                         )
                                                      
                                                   
                                                
                                             
                                             
                                                21: 
                                                   
                                                   if 
                                                   
                                                      
                                                         dis
                                                         (
                                                         
                                                            
                                                               f
                                                            
                                                            
                                                               i
                                                            
                                                         
                                                         (
                                                         t
                                                         )
                                                         ,
                                                         
                                                            
                                                               μ
                                                            
                                                            
                                                               min
                                                            
                                                         
                                                         )
                                                         <
                                                         σ
                                                      
                                                    
                                                   then
                                                
                                             
                                             
                                                22: 
                                                   
                                                   
                                                      
                                                         
                                                            
                                                               c
                                                            
                                                            
                                                               min
                                                            
                                                         
                                                         ←
                                                         
                                                            
                                                               c
                                                            
                                                            
                                                               min
                                                            
                                                         
                                                         ∪
                                                         {
                                                         
                                                            
                                                               f
                                                            
                                                            
                                                               i
                                                            
                                                         
                                                         (
                                                         t
                                                         )
                                                         }
                                                      
                                                   
                                                
                                             
                                             
                                                23: 
                                                   Update 
                                                      
                                                         
                                                            
                                                               μ
                                                            
                                                            
                                                               min
                                                            
                                                         
                                                      
                                                   
                                                
                                             
                                             
                                                24: 
                                                   
                                                   
                                                      
                                                         
                                                            
                                                               ψ
                                                            
                                                            
                                                               min
                                                            
                                                         
                                                         ←
                                                         T
                                                      
                                                   
                                                
                                             
                                             
                                                25: 
                                                   
                                                   else
                                                
                                             
                                             
                                                26: 
                                                   
                                                   
                                                      
                                                         
                                                            
                                                               c
                                                            
                                                            
                                                               new
                                                            
                                                         
                                                         ←
                                                         {
                                                         
                                                            
                                                               f
                                                            
                                                            
                                                               i
                                                            
                                                         
                                                         (
                                                         t
                                                         )
                                                         }
                                                      
                                                   
                                                
                                             
                                             
                                                27: 
                                                   
                                                   
                                                      
                                                         
                                                            
                                                               μ
                                                            
                                                            
                                                               new
                                                            
                                                         
                                                         ←
                                                         
                                                            
                                                               f
                                                            
                                                            
                                                               i
                                                            
                                                         
                                                         (
                                                         t
                                                         )
                                                      
                                                   
                                                
                                             
                                             
                                                28: 
                                                   
                                                   
                                                      
                                                         
                                                            
                                                               θ
                                                            
                                                            
                                                               new
                                                            
                                                         
                                                         ←
                                                         t
                                                      
                                                   
                                                
                                             
                                             
                                                29: 
                                                   
                                                   
                                                      
                                                         
                                                            
                                                               ψ
                                                            
                                                            
                                                               new
                                                            
                                                         
                                                         ←
                                                         T
                                                      
                                                   
                                                
                                             
                                             
                                                30: 
                                                   
                                                   
                                                      
                                                         C
                                                         (
                                                         t
                                                         )
                                                         ←
                                                         C
                                                         (
                                                         t
                                                         )
                                                         ∪
                                                         {
                                                         
                                                            
                                                               c
                                                            
                                                            
                                                               new
                                                            
                                                         
                                                         }
                                                      
                                                   
                                                
                                             
                                             
                                                31: 
                                                   
                                                   end if
                                                
                                             
                                             
                                                32: 
                                                   end if
                                                
                                             
                                             
                                                33: end for
                                                
                                             
                                          
                                       
                                    
                                 
                              

As long as new flow streams are arriving into the network over different time periods, an increase in the number of flow clusters appears to take place. This makes a significant increase in the amount of storage space and calculation time. Therefore, SCI eliminates non-suspected flow clusters with a preservation criterion below the preserve threshold 
                              
                                 
                                    
                                       τ
                                    
                                    
                                       prv
                                    
                                 
                              
                            from 
                              
                                 C
                                 (
                                 t
                                 )
                              
                            (lines 7 to 10).
                              Definition 8
                              Cluster preservation criterion


                              Let 
                                    
                                       
                                          
                                             d
                                          
                                          
                                             j
                                          
                                       
                                    
                                  be the average intra-cluster distance of a flow cluster 
                                    
                                       
                                          
                                             c
                                          
                                          
                                             j
                                          
                                       
                                    
                                 . The cluster preservation criterion for 
                                    
                                       
                                          
                                             c
                                          
                                          
                                             j
                                          
                                       
                                    
                                  is denoted by 
                                    
                                       prv
                                       (
                                       
                                          
                                             c
                                          
                                          
                                             j
                                          
                                       
                                       )
                                    
                                  and calculated as
                                    
                                       (12)
                                       
                                          prv
                                          (
                                          
                                             
                                                c
                                             
                                             
                                                j
                                             
                                          
                                          )
                                          =
                                          
                                             
                                                e
                                             
                                             
                                                -
                                                (
                                                
                                                   
                                                      λ
                                                   
                                                   
                                                      1
                                                   
                                                
                                                
                                                   
                                                      o
                                                   
                                                   
                                                      j
                                                   
                                                
                                                +
                                                
                                                   
                                                      λ
                                                   
                                                   
                                                      2
                                                   
                                                
                                                
                                                   
                                                      d
                                                   
                                                   
                                                      j
                                                   
                                                
                                                )
                                             
                                          
                                          ,
                                       
                                    
                                 where 
                                    
                                       
                                          
                                             λ
                                          
                                          
                                             1
                                          
                                       
                                    
                                  and 
                                    
                                       
                                          
                                             λ
                                          
                                          
                                             2
                                          
                                       
                                    
                                  are two parameters specified by the user, and 
                                    
                                       
                                          
                                             o
                                          
                                          
                                             j
                                          
                                       
                                    
                                  is the lifetime of 
                                    
                                       
                                          
                                             c
                                          
                                          
                                             j
                                          
                                       
                                    
                                 : 
                                    
                                       (13)
                                       
                                          
                                             
                                                o
                                             
                                             
                                                j
                                             
                                          
                                          =
                                          t
                                          -
                                          
                                             
                                                θ
                                             
                                             
                                                j
                                             
                                          
                                          ,
                                       
                                    
                                 where t and 
                                    
                                       
                                          
                                             θ
                                          
                                          
                                             j
                                          
                                       
                                    
                                  are the current time period and the birth date of 
                                    
                                       
                                          
                                             c
                                          
                                          
                                             j
                                          
                                       
                                    
                                 , respectively. The parameters 
                                    
                                       
                                          
                                             d
                                          
                                          
                                             j
                                          
                                       
                                    
                                  and 
                                    
                                       
                                          
                                             o
                                          
                                          
                                             j
                                          
                                       
                                    
                                  cause flow clusters with a high intra-cluster distance and long lifetime have a low preservation criterion.

Suspected cluster identification (SCI) 
                                    
                                       
                                          
                                          
                                             
                                                
                                                   Input
                                                
                                             
                                             
                                                
                                                   
                                                   
                                                      
                                                         C
                                                         (
                                                         t
                                                         )
                                                      
                                                   : set of flow clusters
                                             
                                             
                                                
                                                   
                                                   
                                                      
                                                         
                                                            
                                                               τ
                                                            
                                                            
                                                               sim
                                                            
                                                         
                                                      
                                                   : similarity threshold
                                             
                                             
                                                
                                                   
                                                   
                                                      
                                                         
                                                            
                                                               τ
                                                            
                                                            
                                                               prv
                                                            
                                                         
                                                      
                                                   : preserve threshold
                                             
                                             
                                                
                                                   Output
                                                
                                             
                                             
                                                
                                                   
                                                   
                                                      
                                                         Ω
                                                         (
                                                         t
                                                         )
                                                      
                                                   : set of suspected flow clusters
                                             
                                             
                                                
                                                   
                                                   
                                                      
                                                         C
                                                         (
                                                         t
                                                         )
                                                      
                                                   : set of flow clusters
                                             
                                             
                                                
                                                   
                                                   1: 
                                                      
                                                         Ω
                                                         (
                                                         t
                                                         )
                                                         ←
                                                         ϕ
                                                      
                                                   
                                                
                                             
                                             
                                                
                                                   
                                                   2: for each 
                                                      
                                                         
                                                            
                                                               c
                                                            
                                                            
                                                               j
                                                            
                                                         
                                                         ∈
                                                         C
                                                         (
                                                         t
                                                         )
                                                      
                                                    
                                                   do
                                                
                                             
                                             
                                                
                                                   
                                                   3: Calculate 
                                                      
                                                         sim
                                                         (
                                                         
                                                            
                                                               c
                                                            
                                                            
                                                               j
                                                            
                                                         
                                                         )
                                                      
                                                   
                                                
                                             
                                             
                                                
                                                   
                                                   4: 
                                                   if 
                                                   
                                                      
                                                         
                                                            
                                                               ψ
                                                            
                                                            
                                                               j
                                                            
                                                         
                                                         =
                                                      
                                                    T and 
                                                   
                                                      
                                                         ∣
                                                         
                                                            
                                                               c
                                                            
                                                            
                                                               j
                                                            
                                                         
                                                         ∣
                                                         ⩾
                                                         2
                                                      
                                                    
                                                   and 
                                                   
                                                      
                                                         sim
                                                         (
                                                         
                                                            
                                                               c
                                                            
                                                            
                                                               j
                                                            
                                                         
                                                         )
                                                         >
                                                         
                                                            
                                                               τ
                                                            
                                                            
                                                               sim
                                                            
                                                         
                                                      
                                                    
                                                   then
                                                
                                             
                                             
                                                
                                                   
                                                   5: 
                                                   
                                                      
                                                         Ω
                                                         (
                                                         t
                                                         )
                                                         ←
                                                         Ω
                                                         (
                                                         t
                                                         )
                                                         ∪
                                                         {
                                                         
                                                            
                                                               c
                                                            
                                                            
                                                               j
                                                            
                                                         
                                                         }
                                                      
                                                   
                                                
                                             
                                             
                                                
                                                   
                                                   6: 
                                                   end if
                                                
                                             
                                             
                                                
                                                   
                                                   7: Calculate 
                                                      
                                                         prv
                                                         (
                                                         
                                                            
                                                               c
                                                            
                                                            
                                                               j
                                                            
                                                         
                                                         )
                                                      
                                                   
                                                
                                             
                                             
                                                
                                                   
                                                   8: 
                                                   if 
                                                   
                                                      
                                                         prv
                                                         (
                                                         
                                                            
                                                               c
                                                            
                                                            
                                                               j
                                                            
                                                         
                                                         )
                                                         <
                                                         
                                                            
                                                               τ
                                                            
                                                            
                                                               prv
                                                            
                                                         
                                                      
                                                    
                                                   then
                                                
                                             
                                             
                                                
                                                   
                                                   9: 
                                                   
                                                      
                                                         C
                                                         (
                                                         t
                                                         )
                                                         ←
                                                         C
                                                         (
                                                         t
                                                         )
                                                         -
                                                         {
                                                         
                                                            
                                                               c
                                                            
                                                            
                                                               j
                                                            
                                                         
                                                         }
                                                      
                                                   
                                                
                                             
                                             
                                                10: 
                                                   end if
                                                
                                             
                                             
                                                11: end for
                                                
                                             
                                          
                                       
                                    
                                 
                              

The aim of the negative reputation engine is to identify hosts that are prone to participate in the coordinated group activities. To do so, it receives suspected flow clusters from the flow clustering engine as input and updates the negative reputation score of each host that has at least one flow vector in those flow clusters. This score indicates how much the host has participated in the coordinated group activities in the monitored network. Fig. 4
                            shows the overall structure of the negative reputation engine whose idea was taken from some reputation models [22,23]. It deals with some measures to calculate the negative reputation, as described below.
                              Definition 9
                              Observation


                              The observation is a set of variables reflecting different aspects of a suspected flow cluster deemed important by the negative reputation engine.

Let O be the set of all observations and H be the set of all hosts in the monitored network. We define two functions 
                              
                                 h
                                 :
                                 O
                                 →
                                 
                                    
                                       2
                                    
                                    
                                       H
                                    
                                 
                              
                            and 
                              
                                 d
                                 :
                                 O
                                 →
                                 [
                                 0
                                 ,
                                 1
                                 ]
                              
                           , such that for each observation 
                              
                                 o
                                 ∈
                                 O
                              
                            of a suspected flow cluster, 
                              
                                 h
                                 (
                                 o
                                 )
                              
                            gives the set of hosts that have at least one flow vector in the cluster and 
                              
                                 d
                                 (
                                 o
                                 )
                              
                            gives the cluster’s average intra-cluster distance. The negative reputation engine records an impression for each observation o.
                              Definition 10
                              Impression


                              The impression is an evaluation made by the negative reputation engine on certain aspects of an observation. The impression 
                                    
                                       ι
                                    
                                  of an observation o is denoted by a 4-tuple:
                                    
                                       (14)
                                       
                                          ι
                                          =
                                          (
                                          o
                                          ,
                                          τ
                                          ,
                                          η
                                          ,
                                          ν
                                          )
                                          ,
                                       
                                    
                                 where 
                                    
                                       τ
                                    
                                  is the time period when the impression is recorded, 
                                    
                                       η
                                    
                                  is the number of different hosts in o, and 
                                    
                                       ν
                                    
                                  is the closeness rating calculated through 
                                    
                                       (
                                       1
                                       -
                                       d
                                       (
                                       o
                                       )
                                       )
                                    
                                 . In fact, 
                                    
                                       η
                                    
                                  and 
                                    
                                       ν
                                    
                                  are the parameters obtained from the observation that is judged.

For example, suppose the negative reputation engine observes a suspected flow cluster with 5 members and an average intra-cluster distance of 0.05 during the time period 8. Hence, it records an impression 
                              
                                 ι
                                 =
                                 (
                                 o
                                 ,
                                 8
                                 ,
                                 5
                                 ,
                                 0.95
                                 )
                              
                            of this observation. From this impression, we conclude 5 hosts closely try to be involved in a coordinated group activity.

We say that an impression 
                              
                                 ι
                                 =
                                 (
                                 o
                                 ,
                                 τ
                                 ,
                                 η
                                 ,
                                 ν
                                 )
                              
                            
                           covers a host 
                              
                                 
                                    
                                       h
                                    
                                    
                                       i
                                    
                                 
                              
                            if 
                              
                                 
                                    
                                       h
                                    
                                    
                                       i
                                    
                                 
                                 ∈
                                 h
                                 (
                                 o
                                 )
                              
                           . In addition, we define 
                              
                                 ι
                                 (
                                 
                                    
                                       h
                                    
                                    
                                       i
                                    
                                 
                                 ,
                                 t
                                 )
                              
                            to be the set of all recorded impressions covering 
                              
                                 
                                    
                                       h
                                    
                                    
                                       i
                                    
                                 
                              
                            from the time period 
                              
                                 t
                                 -
                                 m
                              
                            to t:
                              
                                 (15)
                                 
                                    ι
                                    (
                                    
                                       
                                          h
                                       
                                       
                                          i
                                       
                                    
                                    ,
                                    t
                                    )
                                    =
                                    {
                                    ι
                                    |
                                    
                                       
                                          h
                                       
                                       
                                          i
                                       
                                    
                                    ∈
                                    h
                                    (
                                    o
                                    )
                                    ∧
                                    (
                                    t
                                    -
                                    m
                                    ⩽
                                    τ
                                    ⩽
                                    t
                                    )
                                    }
                                    ,
                                 
                              
                           where 
                              
                                 h
                                 (
                                 o
                                 )
                              
                            is the set of hosts in o and m is a parameter specified by the user to determine the most recent impressions. If an impression was recorded at a much earlier time period, it would be considered out-of-date and not included in 
                              
                                 ι
                                 (
                                 
                                    
                                       h
                                    
                                    
                                       i
                                    
                                 
                                 ,
                                 t
                                 )
                              
                           . 
                              Definition 11
                              Negative reputation score


                              The negative reputation score is a quantity given to a host on a scale of 0 to 1 in order to show the level of its participation in the coordinated group activities over different time periods. The score is dynamically calculated for each host based on the set of all recorded impressions covering it.

Based on the above definition, the negative reputation score is not given directly to each host (for example, by a supervisor), but it is calculated dynamically only by the negative reputation engine for each host based on its network activities (which cause some impression to be recorded). It should be noticed that the calculation does not take into account a collection of opinions from other hosts.

When calculating the negative reputation score of a host, it is important to know how reliable that value is. Although there are many factors and parameters that can be taken into account to increase the reliability of negative reputation scores, we will focus on three of them: impression support, participant similarity, and average closeness rating.

(1) Impression support: the intuition behind the impression support is that in a monitored network, few observed cases of some coordinated group activities, recorded as different impressions, are not enough to make a correct judgment about the negative reputation of a host. Hence, we need a significant amount of experience before we can say the host is prone to participate in the coordinated group activities. As the number of impressions covering a host grows, the impression support of that host increases until the number reaches a maximum value, which we call the confidence level of impressions. Therefore, a host that has a history of the coordinated group activities is more disreputable than the others. Let 
                              
                                 ι
                                 (
                                 
                                    
                                       h
                                    
                                    
                                       i
                                    
                                 
                                 ,
                                 t
                                 )
                              
                            be the set of all impressions covering the host 
                              
                                 
                                    
                                       h
                                    
                                    
                                       i
                                    
                                 
                              
                            from the time period 
                              
                                 t
                                 -
                                 m
                              
                            to t. The impression support of 
                              
                                 
                                    
                                       h
                                    
                                    
                                       i
                                    
                                 
                              
                            at this time period is denoted by 
                              
                                 α
                                 (
                                 
                                    
                                       h
                                    
                                    
                                       i
                                    
                                 
                                 ,
                                 t
                                 )
                              
                            and calculated as
                              
                                 (16)
                                 
                                    α
                                    (
                                    
                                       
                                          h
                                       
                                       
                                          i
                                       
                                    
                                    ,
                                    t
                                    )
                                    =
                                    
                                       
                                          
                                             
                                                
                                                   
                                                      sin
                                                      
                                                         
                                                            
                                                               
                                                                  
                                                                     π
                                                                  
                                                                  
                                                                     2
                                                                     ξ
                                                                  
                                                               
                                                               |
                                                               ι
                                                               (
                                                               
                                                                  
                                                                     h
                                                                  
                                                                  
                                                                     i
                                                                  
                                                               
                                                               ,
                                                               t
                                                               )
                                                               |
                                                            
                                                         
                                                      
                                                   
                                                   
                                                      |
                                                      ι
                                                      (
                                                      
                                                         
                                                            h
                                                         
                                                         
                                                            i
                                                         
                                                      
                                                      ,
                                                      t
                                                      )
                                                      |
                                                      ∈
                                                      [
                                                      0
                                                      ,
                                                      ξ
                                                      ]
                                                      ,
                                                   
                                                
                                                
                                                   
                                                      1
                                                   
                                                   
                                                      otherwise,
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           where 
                              
                                 ξ
                                 <
                                 m
                              
                            is a parameter specified by the user to determine how many impressions should cover each host in order to reach the confidence level and 
                              
                                 |
                                 ι
                                 (
                                 
                                    
                                       h
                                    
                                    
                                       i
                                    
                                 
                                 ,
                                 t
                                 )
                                 |
                              
                            is the cardinality of 
                              
                                 ι
                                 (
                                 
                                    
                                       h
                                    
                                    
                                       i
                                    
                                 
                                 ,
                                 t
                                 )
                              
                           . If the number of impressions covering 
                              
                                 
                                    
                                       h
                                    
                                    
                                       i
                                    
                                 
                              
                            is much less than the confidence level parameter 
                              
                                 ξ
                              
                           , the impression support of 
                              
                                 
                                    
                                       h
                                    
                                    
                                       i
                                    
                                 
                              
                            will be low. This means that we do not have a significant experience to decide for the negative reputation of 
                              
                                 
                                    
                                       h
                                    
                                    
                                       i
                                    
                                 
                              
                            and thus its score should be reduced.

(2) Participant similarity: the participant similarity is another factor that we can take into account to calculate the negative reputation score of a host. If the host has consecutive coordinated group activities with others, it should have the same participant hosts in different observations. Thus, the diversity of its participant hosts in the current and previous observations should be very low. Let 
                              
                                 
                                    
                                       ι
                                    
                                    
                                       r
                                    
                                 
                                 =
                                 (
                                 
                                    
                                       o
                                    
                                    
                                       r
                                    
                                 
                                 ,
                                 
                                    
                                       τ
                                    
                                    
                                       r
                                    
                                 
                                 ,
                                 
                                    
                                       η
                                    
                                    
                                       r
                                    
                                 
                                 ,
                                 
                                    
                                       ν
                                    
                                    
                                       r
                                    
                                 
                                 )
                              
                            and 
                              
                                 
                                    
                                       ι
                                    
                                    
                                       s
                                    
                                 
                                 =
                                 (
                                 
                                    
                                       o
                                    
                                    
                                       s
                                    
                                 
                                 ,
                                 
                                    
                                       τ
                                    
                                    
                                       s
                                    
                                 
                                 ,
                                 
                                    
                                       η
                                    
                                    
                                       s
                                    
                                 
                                 ,
                                 
                                    
                                       ν
                                    
                                    
                                       s
                                    
                                 
                                 )
                              
                            be the rth and sth impressions in the set 
                              
                                 ι
                                 (
                                 
                                    
                                       h
                                    
                                    
                                       i
                                    
                                 
                                 ,
                                 t
                                 )
                              
                           . The participant similarity of 
                              
                                 
                                    
                                       h
                                    
                                    
                                       i
                                    
                                 
                              
                            at this time period is denoted by 
                              
                                 β
                                 (
                                 
                                    
                                       h
                                    
                                    
                                       i
                                    
                                 
                                 ,
                                 t
                                 )
                              
                            and calculated as
                              
                                 (17)
                                 
                                    β
                                    (
                                    
                                       
                                          h
                                       
                                       
                                          i
                                       
                                    
                                    ,
                                    t
                                    )
                                    =
                                    
                                       
                                          e
                                       
                                       
                                          -
                                          δ
                                          (
                                          
                                             
                                                h
                                             
                                             
                                                i
                                             
                                          
                                          ,
                                          t
                                          )
                                       
                                    
                                    ,
                                 
                              
                           where 
                              
                                 δ
                                 (
                                 
                                    
                                       h
                                    
                                    
                                       i
                                    
                                 
                                 ,
                                 t
                                 )
                              
                            is a participant diversity measure defined as
                              
                                 (18)
                                 
                                    δ
                                    (
                                    
                                       
                                          h
                                       
                                       
                                          i
                                       
                                    
                                    ,
                                    t
                                    )
                                    =
                                    
                                       
                                          
                                             ∑
                                          
                                          
                                             
                                                
                                                   ι
                                                
                                                
                                                   r
                                                
                                             
                                             ∈
                                             ι
                                             (
                                             
                                                
                                                   h
                                                
                                                
                                                   i
                                                
                                             
                                             ,
                                             t
                                             )
                                          
                                       
                                    
                                    
                                       
                                          
                                             ∑
                                          
                                          
                                             
                                                
                                                   ι
                                                
                                                
                                                   s
                                                
                                             
                                             ∈
                                             ι
                                             (
                                             
                                                
                                                   h
                                                
                                                
                                                   i
                                                
                                             
                                             ,
                                             t
                                             )
                                          
                                       
                                    
                                    ω
                                    (
                                    
                                       
                                          ι
                                       
                                       
                                          r
                                       
                                    
                                    ,
                                    
                                       
                                          ι
                                       
                                       
                                          s
                                       
                                    
                                    )
                                    ·
                                    |
                                    h
                                    (
                                    
                                       
                                          o
                                       
                                       
                                          r
                                       
                                    
                                    )
                                    -
                                    h
                                    (
                                    
                                       
                                          o
                                       
                                       
                                          s
                                       
                                    
                                    )
                                    |
                                    ,
                                 
                              
                           where 
                              
                                 ω
                                 (
                                 
                                    
                                       ι
                                    
                                    
                                       r
                                    
                                 
                                 ,
                                 
                                    
                                       ι
                                    
                                    
                                       s
                                    
                                 
                                 )
                              
                            is a weighting function that gives higher weights to impressions that are closer together in terms of time period:
                              
                                 (19)
                                 
                                    ω
                                    (
                                    
                                       
                                          ι
                                       
                                       
                                          r
                                       
                                    
                                    ,
                                    
                                       
                                          ι
                                       
                                       
                                          s
                                       
                                    
                                    )
                                    =
                                    
                                       
                                          e
                                       
                                       
                                          -
                                          
                                             
                                                |
                                                
                                                   
                                                      τ
                                                   
                                                   
                                                      r
                                                   
                                                
                                                -
                                                
                                                   
                                                      τ
                                                   
                                                   
                                                      s
                                                   
                                                
                                                |
                                             
                                             
                                                m
                                             
                                          
                                       
                                    
                                    .
                                 
                              
                           
                        

From (17), we conclude that if the sets of hosts in two observations contain 
                              
                                 
                                    
                                       h
                                    
                                    
                                       i
                                    
                                 
                              
                            and the difference between them is very low, the participant similarity of 
                              
                                 
                                    
                                       h
                                    
                                    
                                       i
                                    
                                 
                              
                            will increase.

(3) Average closeness rating: the average closeness rating is the last factor that we consider in calculating the negative reputation score of a host. It shows that if the host has a high closeness with its participant hosts in different observations, it will be more prone to participate in a coordinated group activity. The average closeness rating of 
                              
                                 
                                    
                                       h
                                    
                                    
                                       i
                                    
                                 
                              
                            at the time period t is denoted by 
                              
                                 γ
                                 (
                                 
                                    
                                       h
                                    
                                    
                                       i
                                    
                                 
                                 ,
                                 t
                                 )
                              
                            and calculated as
                              
                                 (20)
                                 
                                    γ
                                    (
                                    
                                       
                                          h
                                       
                                       
                                          i
                                       
                                    
                                    ,
                                    t
                                    )
                                    =
                                    
                                       
                                          1
                                       
                                       
                                          |
                                          ι
                                          (
                                          
                                             
                                                h
                                             
                                             
                                                i
                                             
                                          
                                          ,
                                          t
                                          )
                                          |
                                       
                                    
                                    
                                       
                                          
                                             ∑
                                          
                                          
                                             
                                                
                                                   ι
                                                
                                                
                                                   r
                                                
                                             
                                             ∈
                                             ι
                                             (
                                             
                                                
                                                   h
                                                
                                                
                                                   i
                                                
                                             
                                             ,
                                             t
                                             )
                                          
                                       
                                    
                                    
                                       
                                          ν
                                       
                                       
                                          r
                                       
                                    
                                    .
                                 
                              
                           
                        

Finally, the negative reputation score of 
                              
                                 
                                    
                                       h
                                    
                                    
                                       i
                                    
                                 
                              
                            at the time period t is denoted by 
                              
                                 υ
                                 (
                                 
                                    
                                       h
                                    
                                    
                                       i
                                    
                                 
                                 ,
                                 t
                                 )
                              
                            and calculated as
                              
                                 (21)
                                 
                                    υ
                                    (
                                    
                                       
                                          h
                                       
                                       
                                          i
                                       
                                    
                                    ,
                                    t
                                    )
                                    =
                                    
                                       
                                          w
                                       
                                       
                                          1
                                       
                                    
                                    ·
                                    α
                                    (
                                    
                                       
                                          h
                                       
                                       
                                          i
                                       
                                    
                                    ,
                                    t
                                    )
                                    +
                                    
                                       
                                          w
                                       
                                       
                                          2
                                       
                                    
                                    ·
                                    β
                                    (
                                    
                                       
                                          h
                                       
                                       
                                          i
                                       
                                    
                                    ,
                                    t
                                    )
                                    +
                                    
                                       
                                          w
                                       
                                       
                                          3
                                       
                                    
                                    ·
                                    γ
                                    (
                                    
                                       
                                          h
                                       
                                       
                                          i
                                       
                                    
                                    ,
                                    t
                                    )
                                    ,
                                 
                              
                           where 
                              
                                 
                                    
                                       ∑
                                    
                                    
                                       i
                                       =
                                       1
                                    
                                    
                                       3
                                    
                                 
                                 
                                    
                                       w
                                    
                                    
                                       i
                                    
                                 
                                 =
                                 1
                              
                           . 
                              Definition 12
                              Disreputable host


                              Let H be the set of all hosts in the monitored network. A host 
                                    
                                       
                                          
                                             h
                                          
                                          
                                             i
                                          
                                       
                                       ∈
                                       H
                                    
                                  at the time period t is called disreputable if 
                                    
                                       υ
                                       (
                                       
                                          
                                             h
                                          
                                          
                                             i
                                          
                                       
                                       ,
                                       t
                                       )
                                       
                                       ≠
                                       
                                       0
                                    
                                 .

For all intents and purposes, the negative reputation score is a comprehensive score of participation in the coordinated group activities given to a particular host based on its historical behavior during different observations. As a matter of fact, by calculating the score for each host, the botnet detection engine is able to make informed decisions on which of hosts are being bot-infected.

As previously mentioned, a botnet could perform a wide variety of malicious activities, such as launching distributed denial of service attacks, scanning, spamming, and leaking information. Since the malicious activities are an integral part of the botnet lifecycle, the malicious activity detection engine is used to provide reliable botnet detection and better overall system accuracy. Since there is a bunch of considerable works (see, for example [24,25]) which have been proposed in the area, we briefly introduce the malicious activity detection engine in the following paragraphs.

The malicious activity detection engine is composed of two modules: misuse detection and anomaly detection. Each module works separately and identifies hosts that have some malicious activities. The misuse detection module employs a signature database of known malicious activities. It compares the network traffic with the signatures in the database and identifies a malicious activity if there is a match. Hence, the malicious activities of botnets with known signatures could be identified by this module. On the contrary, the anomaly detection module builds a model of normal network behavior and then considers any deviation from this model as a malicious activity. Therefore, it is capable of identifying known and unknown malicious activities that the bot-infected hosts may perform. For example, it is able to detect scanning activities (which may be used for botnet propagation), distributed denial of service attacks, and some other malicious activities that a botmaster may command her bots to perform.

It is important to clarify that the malicious activity detection engine alone is not enough for the botnet detection, because most malicious activities are not exclusively used in botnets. Also, a botnet may not perform any malicious activity for the time being. This is why we need to perform further analysis as discussed in the next section.

The power of a botnet mainly comes from the number of infected hosts that form it. This makes the botmaster to be able to launch a variety of attacks on an unprecedented scale. As explained before, since bots in the same botnet generally run the same program code, infected hosts mainly show similar behavior during the botnet lifecycle (i.e., they perform similar/coordinated activities [16]). Therefore, the botnet detection engine basically works by examining and tracking disreputable hosts.

As stated earlier, infection is the first stage of the botnet lifecycle. Once infection has been established, each infected host downloads a malicious program from the Internet and runs it. It then connects to C&C channel(s) to receive commands from the botmaster in the C&C stage and performs malicious activities in the near future during the attack stage. Basically, it can be seen that coordinated group activities of botnets are more tangible during the C&C and attack stages that can be used to detect them.


                           Algorithm 3 shows the pseudo code of the botnet detection engine. Let 
                              
                                 R
                                 (
                                 t
                                 )
                              
                            be the set of disreputable hosts and 
                              
                                 M
                                 (
                                 t
                                 )
                              
                            be the set of hosts that have some malicious activities at the current time period t. The botnet detection engine first receives 
                              
                                 R
                                 (
                                 t
                                 )
                              
                            and 
                              
                                 M
                                 (
                                 t
                                 )
                              
                            as input from the negative reputation and malicious activity detection engines, respectively. It then checks whether or not a host 
                              
                                 
                                    
                                       h
                                    
                                    
                                       i
                                    
                                 
                                 ∈
                                 M
                                 (
                                 t
                                 )
                              
                            is disreputable (i.e., 
                              
                                 
                                    
                                       h
                                    
                                    
                                       i
                                    
                                 
                                 ∈
                                 R
                                 (
                                 t
                                 )
                              
                           ). If so, it identifies 
                              
                                 
                                    
                                       h
                                    
                                    
                                       i
                                    
                                 
                              
                            as bot-infected (lines 3 to 6). Otherwise, if 
                              
                                 
                                    
                                       h
                                    
                                    
                                       i
                                    
                                 
                                 ∉
                                 M
                                 (
                                 t
                                 )
                              
                           , it tracks the activities of 
                              
                                 
                                    
                                       h
                                    
                                    
                                       i
                                    
                                 
                              
                            to see if its negative reputation score will rise during the subsequent time periods (lines 7 to 11). There are some situations in which bots within a botnet have no immediate malicious activities because they try to pretend their traffic are generated by human being, or they may be lying dormant for a while. Hence, the botnet detection engine lets them participate in further coordinated group activities and thus increases their negative reputation scores. In consequence of the increasing scores, it is able to identify bot-infected hosts through the negative reputation threshold 
                              
                                 
                                    
                                       τ
                                    
                                    
                                       rep
                                    
                                 
                              
                           , which is chosen based on the sensitivity of the network. However, the algorithm has a time complexity of 
                              
                                 O
                                 (
                                 |
                                 H
                                 |
                                 )
                              
                           . 
                              Algorithm 3
                              Botnet detection engine 
                                    
                                       
                                          
                                          
                                             
                                                
                                                   Input
                                                
                                             
                                             
                                                
                                                   
                                                   
                                                      
                                                         R
                                                         (
                                                         t
                                                         )
                                                      
                                                   : set of disreputable hosts
                                             
                                             
                                                
                                                   
                                                   
                                                      
                                                         M
                                                         (
                                                         t
                                                         )
                                                      
                                                   : set of hosts that have malicious activities
                                             
                                             
                                                
                                                   
                                                   
                                                      
                                                         
                                                            
                                                               τ
                                                            
                                                            
                                                               rep
                                                            
                                                         
                                                      
                                                   : negative reputation threshold
                                             
                                             
                                                
                                                   Output
                                                
                                             
                                             
                                                
                                                   
                                                   
                                                      
                                                         I
                                                         (
                                                         t
                                                         )
                                                      
                                                   : set of bot-infected hosts
                                             
                                             
                                                
                                                   
                                                   1: 
                                                      
                                                         I
                                                         (
                                                         t
                                                         )
                                                         ←
                                                         ϕ
                                                      
                                                   
                                                
                                             
                                             
                                                
                                                   
                                                   2: for each 
                                                      
                                                         
                                                            
                                                               h
                                                            
                                                            
                                                               i
                                                            
                                                         
                                                         ∈
                                                         H
                                                      
                                                    
                                                   do
                                                
                                             
                                             
                                                
                                                   
                                                   3: 
                                                   if 
                                                   
                                                      
                                                         
                                                            
                                                               h
                                                            
                                                            
                                                               i
                                                            
                                                         
                                                         ∈
                                                         M
                                                         (
                                                         t
                                                         )
                                                      
                                                    
                                                   then
                                                
                                             
                                             
                                                
                                                   
                                                   4: 
                                                   
                                                   if 
                                                   
                                                      
                                                         
                                                            
                                                               h
                                                            
                                                            
                                                               i
                                                            
                                                         
                                                         ∈
                                                         R
                                                         (
                                                         t
                                                         )
                                                      
                                                    
                                                   then
                                                
                                             
                                             
                                                
                                                   
                                                   5: 
                                                   
                                                   
                                                      
                                                         I
                                                         (
                                                         t
                                                         )
                                                         ←
                                                         I
                                                         (
                                                         t
                                                         )
                                                         ∪
                                                         {
                                                         
                                                            
                                                               h
                                                            
                                                            
                                                               i
                                                            
                                                         
                                                         }
                                                      
                                                   
                                                
                                             
                                             
                                                
                                                   
                                                   6: 
                                                   
                                                   end if
                                                
                                             
                                             
                                                
                                                   
                                                   7: 
                                                   else
                                                
                                             
                                             
                                                
                                                   
                                                   8: 
                                                   
                                                   if 
                                                   
                                                      
                                                         
                                                            
                                                               h
                                                            
                                                            
                                                               i
                                                            
                                                         
                                                         ∈
                                                         R
                                                         (
                                                         t
                                                         )
                                                      
                                                    
                                                   and 
                                                   
                                                      
                                                         υ
                                                         (
                                                         
                                                            
                                                               h
                                                            
                                                            
                                                               i
                                                            
                                                         
                                                         ,
                                                         t
                                                         )
                                                         ⩾
                                                         
                                                            
                                                               τ
                                                            
                                                            
                                                               rep
                                                            
                                                         
                                                      
                                                    
                                                   then
                                                
                                             
                                             
                                                
                                                   
                                                   9: 
                                                   
                                                   
                                                      
                                                         I
                                                         (
                                                         t
                                                         )
                                                         ←
                                                         I
                                                         (
                                                         t
                                                         )
                                                         ∪
                                                         {
                                                         
                                                            
                                                               h
                                                            
                                                            
                                                               i
                                                            
                                                         
                                                         }
                                                      
                                                   
                                                
                                             
                                             
                                                10: 
                                                   
                                                   end if
                                                
                                             
                                             
                                                11: 
                                                   end if
                                                
                                             
                                             
                                                12: end for
                                                
                                             
                                          
                                       
                                    
                                 
                              

We implemented a prototype of BotGrab to evaluate its performance on real-world network traces. In this section, we present a range of evaluations and analyses that explores the performance of different engines of BotGrab. We also evaluate the evadability of BotGrab and compare it to several other leading techniques.

To generate real-world network traces, we established a testbed network using a virtual network environment of several VMware hosts, including Ubuntu Linux and Windows XP SP2. These hosts were intentionally infected with various botnets, including those controlled via HTTP, IRC, or P2P, in order to launch them in a controlled environment. In addition to collect botnet network traces, we also collected normal network traces from our campus network. The packets in our testbed network demonstrated a wide diversity in popular protocols such as HTTP, FTP, SSH, DNS, and SNMP, and collaborative applications such as IM, P2P, and IRC. They were organized into bi-directional flow records by Argus [26] which is a flow monitoring tool inspecting packets and groups together those within the same connection into a flow record.

In the testbed network, we launched the botnets in three different experiments. In each experiment, we tried to identify bot-infected hosts in two different ways. In the first case, we identified bot-infected hosts regarding only their participation in coordinated group activities in the early stages of the botnet lifecycle. In the second case, we identified them based on their coordinated group activities as well as their malicious activities. Table 1
                         shows the characteristics of different network traces collected from the experiments.

We used TRiAD as an HTTP-based botnet, rBot as an IRC-based botnet, and Immonia as a P2P-based botnet. In the experiments, we commanded the bots to send basic information about their hosts, sleep for a while, and perform some malicious activities (e.g., launching denial of service attacks and port scanning). Hence, the bots received several commands during the experiments. We then collected the whole network traces (including those are generated by bot-infected and benign hosts) to evaluate the detection and false alarm rates of BotGrab.

@&#EXPERIMENTAL RESULTS@&#

As mentioned before, BotGrab can be deployed at the edge of the network to capture and analyze traffic between internal and external hosts. For a large-scale network, we recommend to setup BotGrab with distributed components in which the flow clustering, negative reputation, and malicious activity detection engines can be deployed on separated hosts. Therefore, it would be able to detect bot-infected hosts in a larger monitored network. In our experiments, BotGrab was run on a Linux server with an Intel Core 2 Quad 2.83 GHz CPU and 8 GB RAM. The system was run with the average CPU and RAM utilization of 37% and 16%, respectively.

Recall that BotGrab consists of five main engines. In the base filtering engine, we created a whitelist of the top 100 most popular websites (as reported by Alexa) to filter out packets that were safe. However, as we discussed previously, this engine is not essential for BotGrab and mainly aims to improve its efficiency. In the flow clustering engine, at the end of each time period, we extracted a set of flow vectors from the network traffic. Each flow vector consisted of values of eight different features: destination IP address, destination port, protocol, number of bytes per packet, number of bytes per second, number of packets per second, total bytes, and total packets. Our malicious activity detection engine was built based on Snort, an open-source network intrusion detection system, for the purpose of convenience. We used two anomaly detection techniques: PHAD [24] and NETAD [25] which were adapted and implemented as Snort pre-processor plug-ins. We also used PEHunter, which is a Snort dynamic preprocessor that grabs Windows portable executables off the network, to detect binary downloading.

In our experiments, the length of a time period was set to 
                           
                              Δ
                              T
                              =
                              5
                           
                         (s). The cluster radius was set to 
                           
                              σ
                              =
                              0.40
                           
                        . The similarity, preserve, and negative reputation thresholds were set to 
                           
                              
                                 
                                    τ
                                 
                                 
                                    sim
                                 
                              
                              =
                              0.85
                              ,
                              
                                 
                                    τ
                                 
                                 
                                    prv
                                 
                              
                              =
                              0.60
                           
                        , and 
                           
                              
                                 
                                    τ
                                 
                                 
                                    rep
                                 
                              
                              =
                              0.80
                           
                        , respectively. The parameters 
                           
                              
                                 
                                    λ
                                 
                                 
                                    1
                                 
                              
                           
                         and 
                           
                              
                                 
                                    λ
                                 
                                 
                                    2
                                 
                              
                           
                        , which are commonly used in the cluster preservation criterion, were respectively set to 
                           
                              0.01
                           
                         and 1, in order to give more weight to the average intra-cluster distance than the lifetime of a cluster. The confidence level and the parameter m were set to 
                           
                              ξ
                              =
                              3
                           
                         and 
                           
                              m
                              =
                              10
                           
                        , respectively. Finally, the parameters 
                           
                              
                                 
                                    w
                                 
                                 
                                    1
                                 
                              
                              ,
                              
                                 
                                    w
                                 
                                 
                                    2
                                 
                              
                           
                        , and 
                           
                              
                                 
                                    w
                                 
                                 
                                    3
                                 
                              
                           
                         were set to 0.33, which are weighting values used in the negative reputation score to give an equal weight to the impression support, participant similarity, and average closeness rating. Table 2
                         shows the parameter settings.


                        Table 3
                         shows the average detection and false alarm rates of BotGrab for different experiments. Based on the results in the table above, we conclude that BotGrab can identify bot-infected hosts more accurate if it considers both coordinated group activities and malicious activities in the network.

Here, we present a detailed sensitivity analysis of BotGrab for different values of parameters. Through this analysis, we can estimate appropriate values of the parameters to better detect bot-infected hosts in the monitored network.

The flow clustering is one of the main engines of BotGrab that focuses on clustering of flows and identifying suspected flow clusters. Fig. 5
                         shows the effect of the parameter 
                           
                              σ
                           
                         on the average number of flow clusters during the online incremental clustering. Clearly, a decrease in 
                           
                              σ
                           
                         would lead to an increase in the number of flow clusters at each time period, thus it incurs a significant additional amount of calculation time in subsequent steps.


                        Table 4
                         shows the average detection and false alarm rates of BotGrab for different values of the parameter 
                           
                              σ
                           
                        , ranging from 0.60 to 0.30. From the table, we find that the higher values of 
                           
                              σ
                           
                         result in lower detection rates. This is because the flow clustering engine attempts to identify suspected flow clusters (which are doubtful to have flow vectors related to likely botnet coordinated group activities); therefore, with an increase in 
                           
                              σ
                           
                        , non-bontet flow vectors may be added to botnet flow clusters and so reduce their intra-cluster similarity. As a result, this leads to a situation where they are not considered as suspected flow clusters and thus a decrease in the detection rate. According to Fig. 5 and Table 4, we can make a trade-off between the number of flow clusters, detection rate, and false alarm rate by setting 
                           
                              σ
                              =
                              0.40
                           
                        .

As mentioned before, BotGrab is based on the intuition that since bots in the same botnet run the same program code, they have similar communication and malicious activity patterns and thus generate similar flow vectors. Hence, there is a high closeness among flow vectors in a botnet flow cluster. Therefore, the flow clustering engine identifies suspected flow clusters based on the intra-cluster similarity criterion and delivers them to the negative reputation engine. To set a proper value of the similarity threshold, the detection and false alarm rates should be considered. Table 5
                         compares the average detection and false alarm rates of BotGrab for different values of the parameter 
                           
                              
                                 
                                    τ
                                 
                                 
                                    sim
                                 
                              
                           
                        , ranging from 0.75 to 0.90. Clearly, with an increase in 
                           
                              
                                 
                                    τ
                                 
                                 
                                    sim
                                 
                              
                           
                        , the false alarm rate decreases, but the detection rate remains almost unchanged until 
                           
                              
                                 
                                    τ
                                 
                                 
                                    sim
                                 
                              
                              =
                              0.90
                           
                        . This is because for a low value of 
                           
                              
                                 
                                    τ
                                 
                                 
                                    sim
                                 
                              
                           
                        , some flow clusters may be incorrectly identified as suspected flow clusters. Moreover, by choosing 
                           
                              
                                 
                                    τ
                                 
                                 
                                    sim
                                 
                              
                           
                         near to 1, the detection rate slightly decreases, because flow vectors in a botnet flow cluster may not be exactly the same and thus it cannot satisfy the high value of 
                           
                              
                                 
                                    τ
                                 
                                 
                                    sim
                                 
                              
                           
                        .

The flow clustering engine chooses some flow clusters to eliminate from the flow cluster set based on the cluster preservation criterion. Fig. 6
                         shows the effect of the parameter 
                           
                              
                                 
                                    τ
                                 
                                 
                                    prv
                                 
                              
                           
                         on the average number of flow clusters. As the figure shows, maintaining old flow clusters with a high average intra-cluster distance leads to an increase in the number of flow clusters dramatically, and thus it incurs a significant additional amount of storage space and calculation time in subsequent steps. Choosing the value of 
                           
                              
                                 
                                    τ
                                 
                                 
                                    prv
                                 
                              
                           
                         depends on the degree of synchronization in coordinated group activities of bots. In other words, if 
                           
                              
                                 
                                    τ
                                 
                                 
                                    prv
                                 
                              
                           
                         is set to a high value and bots in the same botnet do not communicate with the botmaster at the relatively same time, a new formed botnet flow cluster may be removed before it includes flow vectors of all bot-infected hosts. On the other hand, choosing a proper value of 
                           
                              
                                 
                                    τ
                                 
                                 
                                    prv
                                 
                              
                           
                         gives an opportunity to botnet flow clusters with insufficient flow vectors to remain in the flow cluster set and to grow their intra-cluster similarity during subsequent time periods and thus increase the detection rate. From the results shown in the figure, we conclude that a better choice for 
                           
                              
                                 
                                    τ
                                 
                                 
                                    prv
                                 
                              
                           
                         is 0.60.

Recall that bot-infected hosts participate in coordinated group activities during different stages of the botnet lifecycle. Hence, the negative reputation engine calculates a score for each suspected host that has at least one coordinated group activity. Table 6
                         shows the negative reputation scores of a number of hosts, 
                           
                              
                                 
                                    h
                                 
                                 
                                    1
                                 
                              
                           
                         to 
                           
                              
                                 
                                    h
                                 
                                 
                                    6
                                 
                              
                           
                        , at time periods 8, 10, 12, and 16 for the experiment E01. In fact, 
                           
                              
                                 
                                    h
                                 
                                 
                                    1
                                 
                              
                              ,
                              
                                 
                                    h
                                 
                                 
                                    2
                                 
                              
                           
                        , and 
                           
                              
                                 
                                    h
                                 
                                 
                                    3
                                 
                              
                           
                         are benign while 
                           
                              
                                 
                                    h
                                 
                                 
                                    4
                                 
                              
                              ,
                              
                                 
                                    h
                                 
                                 
                                    5
                                 
                              
                           
                        , and 
                           
                              
                                 
                                    h
                                 
                                 
                                    6
                                 
                              
                           
                         are bot-infected hosts. Since 
                           
                              
                                 
                                    h
                                 
                                 
                                    2
                                 
                              
                           
                         and 
                           
                              
                                 
                                    h
                                 
                                 
                                    3
                                 
                              
                           
                         have occasionally participated in a coordinated group activity at time periods 10 and 16, respectively, each of them gets a score, but it does not increase during subsequent time periods. On the other hand, 
                           
                              
                                 
                                    h
                                 
                                 
                                    4
                                 
                              
                              ,
                              
                                 
                                    h
                                 
                                 
                                    5
                                 
                              
                           
                        , and 
                           
                              
                                 
                                    h
                                 
                                 
                                    6
                                 
                              
                           
                         have participated in at least one coordinated group activity during subsequent time periods and thus their scores are gradually increased.

The botnet detection engine makes a decision on whether a host is bot-infected based on reports received from the negative reputation and malicious activity detection engines, respectively. To set a proper value of the parameter 
                           
                              
                                 
                                    τ
                                 
                                 
                                    rep
                                 
                              
                           
                        , the detection and false alarm rates should be considered. Table 7
                         shows the average detection and false alarm rates of BotGrab for different values of 
                           
                              
                                 
                                    τ
                                 
                                 
                                    rep
                                 
                              
                           
                        , ranging from 0.40 to 0.90. As the table shows, with a low value of 
                           
                              
                                 
                                    τ
                                 
                                 
                                    rep
                                 
                              
                           
                        , BotGrab can detect bot-infected hosts, but it has a relatively high false alarm rate if does not consider malicious activities in the network. Suppose the worst case that some hosts occasionally participate in coordinated group activities and 
                           
                              
                                 
                                    τ
                                 
                                 
                                    rep
                                 
                              
                           
                         has been set to a low value; therefore, those hosts may be incorrectly identified as being bot-infected. On the other hand, by setting a high value for 
                           
                              
                                 
                                    τ
                                 
                                 
                                    rep
                                 
                              
                           
                        , BotGrab is able to identify bot-infected hosts with a low false alarm rate, but not necessarily in the early stages of the botnet lifecycle. Hence, we can achieve good trade-off between the false alarm rate and the stage of the botnet lifecycle in which bot-infected hosts are identified, by choosing a proper value of 
                           
                              
                                 
                                    τ
                                 
                                 
                                    rep
                                 
                              
                           
                        . In addition, by considering malicious activity reports, BotGrab is able to identify bot-infected hosts with higher detection rates in the attack stage.


                        Fig. 7
                         shows the run time of BotGrab for each time period in E01, E02, and E03. From the results obtained, we find that the maximum run time of BotGrab is almost 120 (ms) in some time periods, observed in high peak times and traffic burst of the network. Notice that the length of a time period was set to 
                           
                              Δ
                              T
                           
                         = 5 (s) or 5000 (ms); hence, the maximum run time of BotGrab is negligible with respect to 
                           
                              Δ
                              T
                           
                        .

In this section, we discuss potential ways in which a botmaster can evade BotGrab and also present some solutions to avoid these problems as much as possible.

(1) Evasion by not performing group activities: if the botmaster sends different commands to all bots separately via C&C channels to perform different tasks, they do not perform coordinated group activities and thus can evade BotGrab. In practice, the way is unlikely used by a botnet [16] because then it is no longer effective for the botmaster.

(2) Evasion by using long intervals between performing coordinated group activities: if a botnet uses long intervals between its group activities during different stages of its lifecycle, it may cause the negative reputation engine cannot calculate a proper score for bot-infected hosts. To mitigate this problem, we can choose a higher value for m to consider older impressions in calculation of scores, which incurs more calculation time.

(3) Evasion by misusing the whitelist filtering: the botmaster may attempt to misuse the whitelist filtering, if she knows the whitelist; therefore, she can potentially use safe hosts as third-party proxies for C&C purpose to bypass the detection of BotGrab. In fact, as we mentioned before, whitelist filtering is not essential to the detection accuracy of BotGrab and thus can be removed to avoid such evasions.

It is not easy to conduct a fair comparison among various botnet detection techniques due to differences between testbed networks, volume of traffic, bot binaries used in experiments, and lack of common datasets. Therefore, instead of doing a performance comparison between BotGrab and other existing botnet detection techniques, we compare them in terms of some significant characteristics. In Table 8
                        , we give a general comparison between BotGrab and other well-known botnet detection techniques including Rishi [12], BotHunter [14], BotSniffer [15], BotMiner [16], Castel [17], Wurzinger [18], and Yu [19], previously reported in the literature.

Chiefly, BotGrab is able to detect unknown botnets because it utilizes an unsupervised technique driven by intrinsic characteristics of botnets such as coordinated group activities, without a priori knowledge of them. It is also able to identify bot-infected hosts participating in some coordinated group activities in the early stages of the botnet lifecycle, even though they have not performed any malicious activities yet. Moreover, it can detect various botnets (e.g., those controlled via IRC, HTTP, or P2P).

There are some techniques, such as encrypting the C&C traffic, by which the botmaster may attempt to evade detection. Hence, detection techniques that employ network packet payload analysis and rely on syntax are vulnerable to evasion [2]. BotGrab is resistance to command encryption by extracting flow vectors from packet headers. It also uses an incremental clustering technique to facilitate the identification of bot-infected hosts in real-time. It finally considers both malicious activities and history of coordinated group activities in the network to ensure a low false alarm rate.

Botnet detection is a relatively novel and a very challenging research area. Over the past years, various botnet detection techniques have been proposed, but most of them have some shortcomings in terms of depending on a specific C&C protocol, lacking of detection in an early stage of the botnet lifecycle, working offline, and needing to labeled data for training. We addressed these shortcomings by proposing BotGrab, a novel negative reputation system for botnet detection. BotGrab is based on the fact that since bots in the same botnet are preprogrammed by the botmaster and run the same program code, they are most likely to have the same communication and malicious activity patterns. Hence, these patterns lead to some coordinated group activities which can be used to detect bot-infected hosts. BotGrab calculates a negative reputation score for each suspected host based on the history of its participation in coordinated group activities in the monitored network. In fact, the scores allow it to make informed decisions on which of hosts are most likely to be bot-infected.

We evaluated the performance of BotGrab to detect various botnets including HTTP-, IRC-, and P2P-based botnets using a testbed network and investigated the impact of different parameters on its performance. In the testbed network, we launched the botnets in three different experiments. The experimental results showed that BotGrab can efficiently detect botnets with a high detection rate and a low false alarm rate in different stages of the botnet lifecycle.

At last, we are interested in further development of BotGrab toward adding a host-based negative reputation engine to it. As the matter of fact, this makes BotGrab to have more information received from the hosts and thus could take into account more factors to calculate the negative reputation scores. As a result, we think this engine would help BotGrab to detect bot-infected hosts effectively before their participation in coordinated group activities.

@&#REFERENCES@&#

