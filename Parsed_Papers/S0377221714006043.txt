@&#MAIN-TITLE@&#Solving the container relocation problem by an improved greedy look-ahead heuristic

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           Investigate the container relocation problem, which is a classic problem in container operations in terminals.


                        
                        
                           
                           Develop a greedy look-ahead heuristic to solve the problem.


                        
                        
                           
                           Combine a greedy-based framework with a tree search procedure.


                        
                        
                           
                           Limit the look-ahead tree by the depth and width parameters.


                        
                        
                           
                           Provide high-quality solutions in a short runtime, especially for large-scale instances.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Heuristics

Logistics

Transportation

Container relocation problem

@&#ABSTRACT@&#


               
               
                  The container relocation problem (CRP) is one of the most crucial issues for container terminals. In a single bay, containers belonging to multiple groups should be retrieved by an equipped yard crane in accordance with their retrieval priorities. An operation of the crane can either relocate a container from the top of a stack to another within the bay, or remove a container with the highest retrieval priority among all remaining containers. The objective of the CRP is to find an optimized operation plan for the crane with the fewest number of container relocations. This paper proposes an improved greedy look-ahead heuristic for the CRP and conducts experiments on four existing data sets. The experimental results show that the proposed approach is able to provide better solutions for large-scale instances in shorter runtime, compared to the up-to-date approaches in the recent literature.
               
            

@&#INTRODUCTION@&#

Since the introduction of the containerization system in inter-modal freight transportation, the use of containers of standard dimensions has risen steadily in recent decades. The intense workload involved in container handling in marine terminals is a serious challenge for managers aiming to improve operational efficiency. The main objective of container operation research concentrates on controlling container handling time to reduce the eventual costs.

The common process for container handling in marine terminals can be divided into three phases. In the first phase, new transship containers are assigned to certain storage areas in a container yard when arriving at the terminal; in a container yard, containers are piled vertically to form stacks, a row of stacks further constitutes a bay, and a block consists of a parallel group of bays. Fig. 1
                      shows an example of a container yard.

The first phase involves allocating placements for incoming transship containers, to reduce the expected number of future rehandles. De Castillo and Daganzo (1993) and Kim (1997) proposed methods for estimating the expected number of rehandles. Various studies on generating container storage strategies can be found in Kim, Park, and Ryu (2000), Kang, Ryu, and Kim (2006), Yang and Kim (2006) and Zhang, Chen, Shi, and Zheng (2010).

In the second phase, transship containers are stored in the yard for some time before being shipped to consignees. The container pre-marshalling problem (CPMP) is usually investigated in this phase, which performs container rehandling in advance, to facilitate the ship-loading process.

Two types of the CPMP have been studied in the recent literature, namely CPMP-A and CPMP-B. In the CPMP-A, an initial layout of these containers is given; the objective is to minimize the number of rehandles so as to transform the layout to an orderly final layout that does not need further rehandling. In the CPMP-B, an initial layout and a final layout are both given, and the objective is to minimize the number of rehandles in transforming the initial layout to the final layout. Lee and Hsu (2007) provided an integer programming formulation for both types of the CPMP as a multi-commodity flow problem, and Huang and Lin (2012) proposed heuristic algorithms for both types of the CPMP. Meta-heuristics have also been investigated for the CPMP, such as neighborhood search (Lee & Chao, 2009), corridor method (Caserta & Voß, 2009b), lowest priority first heuristic (Expósito-Izquierdo, Melián-Batista, & Moreno-Vega, 2012) and tree search (Bortfeldt & Forster, 2012).

The third phase is the ship-loading process. During this phase, containers should be retrieved from the yard in accordance with a specific ship stowage (or loading) plan. The retrieval priorities of containers are determined by the ship stowage plan, which is known a prior. Containers which are planned to be placed on the bottom tiers of the cabin should be retrieved first; in other words, they are assigned higher retrieval priorities. Because berths are in short supply in comparison with the number of ships, the ship-loading process is a very important part of the terminal workload.

If the containers are pre-marshalled in the second phase, the ship-loading process then becomes remarkably easy without requiring any additional container rehandle. Otherwise, the container relocation problem (CRP) has to be investigated in this phase; the CRP aims to find an optimal operation plan with the fewest rehandles, to save time and money.

This paper extends our previous work (Jin, Lim, & Zhu, 2013), developing an improved greedy look-ahead heuristic for the CRP. The remainder of this paper is organized as follows. Section 2 gives a detailed description of the CRP. Section 3 discusses the existing approaches and data sets in the recent literature, and Section 4 describes the proposed greedy look-ahead heuristic in detail. Experiments are conducted on four existing data sets. We illustrate and discuss the computational results in comparison with the up-to-date approaches from the literature in Section 5. Finally, conclusions and suggestions for future research are given in Section 6.

In this paper, we consider the problem of retrieving containers from a single bay. The bay consists of S stacks numbered 1,…,
                     S and each stack has T tiers. The height of each stack s, denoted by 
                        
                           h
                           (
                           s
                           )
                        
                     , should not exceed T. The initial layout contains N containers, which belong to G groups numbered 1,…,
                     G.

Two types of container operations are defined. A relocation is an operation that relocates a container from the top of one stack to another. We denote a relocation that moves container c from a source stack 
                        
                           
                              
                                 s
                              
                              
                                 1
                              
                           
                        
                      to a destination stack 
                        
                           
                              
                                 s
                              
                              
                                 2
                              
                           
                        
                      by 
                        
                           
                              
                                 
                                    c
                                    :
                                    
                                       
                                          s
                                       
                                       
                                          1
                                       
                                    
                                    →
                                    
                                       
                                          s
                                       
                                       
                                          2
                                       
                                    
                                 
                              
                           
                        
                     . A retrieval is an operation that picks a container up from the top of a stack, and then puts it onto a yard truck waiting nearby. We regard the position of the waiting truck as a virtual stack, say stack 0, and a retrieval that removes the top container c of stack 
                        
                           
                              
                                 s
                              
                              
                                 1
                              
                           
                        
                      is denoted by 
                        
                           
                              
                                 
                                    c
                                    :
                                    
                                       
                                          s
                                       
                                       
                                          1
                                       
                                    
                                    →
                                    0
                                 
                              
                           
                        
                     . Relocations and retrievals are executed by the yard crane equipped to the bay.

An instance of the CRP consists of the information of the bay size and an initial layout of containers. According to the assortment on the container groups, instances of the CRP can be categorized into simplex instances and grouping instances. Containers in the initial layout of a simplex instance have distinct retrieval priorities. Conversely, in a grouping instance, containers are classified into several groups. We regard simplex instances as special cases of grouping instances, where each group contains only one container.

A solution to an instance (or a layout) is a sequence of relocations and retrievals, following which the yard crane can clear the initial layout (or the layout). The objective of the CRP is to find the optimal solution to a given instance, with the fewest number of relocations.

A smaller group index indicates a higher retrieval priority; in other words, containers should be retrieved in ascending order of group index. Given a layout, the containers with the highest retrieval priority among all remaining containers within, namely the targets, should be retrieved first before other containers. If there exists a target currently placed at the top of a stack, retrieving it directly is clearly the best choice for the current layout. When all the targets are beneath other containers, relocations are required.

A container is well placed in a stack if all other containers placed below have lower retrieval priorities than itself; in other words, its group index is not greater than any container placed below. Otherwise, we say it is badly placed. Fig. 2
                      illustrates a bay with 5 stacks and 4 tiers, in which each box represents a container and the number marked inside is its group index; badly placed containers are colored in gray. In this figure, the crane is retrieving a container from group 1, which is the only target in this layout.

Let us distinguish between two variants of the CRP: the restricted CRP and the unrestricted CRP. In the restricted variant (R-CRP), anticipatory relocations are not allowed, i.e., a container is relocated if and only if it is at a higher tier than a target. Correspondingly, the general version allowing any relocations is referred to as the unrestricted variant (U-CRP) or the general CRP.

The following definitions and notation are needed for explaining the detailed process of the proposed greedy look-ahead heuristic.

For each stack s (
                        
                           s
                           =
                           1
                           ,
                           …
                           ,
                           S
                        
                     ) in a layout, we use 
                        
                           
                              
                                 g
                              
                              
                                 min
                              
                           
                           (
                           s
                           )
                        
                      to denote the minimum group index among all containers in stack s. We use 
                        
                           g
                           (
                           c
                           )
                        
                      to denote the group index for container c. Stack s is able to support container c if c would be well placed after being relocated to stack s, to put it in mathematical way, 
                        
                           h
                           (
                           s
                           )
                           <
                           T
                        
                      and 
                        
                           g
                           (
                           c
                           )
                           ⩽
                           
                              
                                 g
                              
                              
                                 min
                              
                           
                           (
                           s
                           )
                        
                     . We use 
                        
                           
                              
                                 g
                              
                              
                                 top
                              
                           
                           (
                           s
                           )
                        
                      to denote the group index of the top container of stack s, and 
                        
                           f
                           (
                           s
                           )
                        
                      to denote the minimum group index among all containers in stack s (
                        
                           h
                           (
                           s
                           )
                           ⩾
                           1
                        
                     ) except its top container. Hence, the top container of stack s is well placed if and only if 
                        
                           
                              
                                 g
                              
                              
                                 top
                              
                           
                           (
                           s
                           )
                           ⩽
                           f
                           (
                           s
                           )
                        
                     .

The pseudo-codes in this paper contain the following mathematical operators:
                        
                           ⊕
                           Given a layout L and a crane operation opr, 
                                 
                                    L
                                    ⊕
                                    opr
                                 
                               represents the successor layout of executing opr to L.

Given two solutions 
                                 
                                    
                                       
                                          sol
                                       
                                       
                                          1
                                       
                                    
                                 
                               and 
                                 
                                    
                                       
                                          sol
                                       
                                       
                                          2
                                       
                                    
                                 
                              , 
                                 
                                    
                                       
                                          sol
                                       
                                       
                                          1
                                       
                                    
                                    +
                                    
                                       
                                          sol
                                       
                                       
                                          2
                                       
                                    
                                 
                               represents the compound solution by connecting crane operation sequences in 
                                 
                                    
                                       
                                          sol
                                       
                                       
                                          1
                                       
                                    
                                 
                               and 
                                 
                                    
                                       
                                          sol
                                       
                                       
                                          2
                                       
                                    
                                 
                              ; moreover, given a solution sol and a crane operation opr, 
                                 
                                    sol
                                    +
                                    opr
                                 
                               represents the resulting solution by appending opr to sol.

Given a solution sol, 
                                 
                                    ‖
                                    sol
                                    ‖
                                 
                               represents the number of relocations in the solution.

@&#RELATED WORK@&#


                     Kim and Hong (2006) first studied the CRP, investigating the CRP on both simplex instances and grouping instances. They derived a branch-and-bound algorithm and a heuristic rule. In their heuristic rule, a procedure for estimating the expected number of relocations was also employed.


                     Caserta, Voß, and Sniedovich (2011) proposed a corridor method which solved the CRP through a dynamic programming model. A two-dimensional corridor is determined by width parameter δ and height parameter λ, in such a way that the size of the corridor is limited by 
                        
                           2
                           δ
                           ×
                           λ
                        
                     , and hence the number of successor layouts is also limited. They also generated a set of simplex instances named CVS (using the initials of their names, Caserta, Voß & Sniedovich). In CVS instances, the initial layout contains up to 10 stacks and each stack has up to 10 containers; the containers have distinct retrieval priorities. However, CVS instances do not have a height limitation on the stacks. Instead, in their method, the parameter λ represents the height of the corridor, which confines the maximum height of the stacks via the method itself.


                     Zhu, Qin, Lim, and Zhang (2012) investigated iterative deepening A* (IDA*) algorithms for the R-CRP and the U-CRP on simplex instances. The IDA* algorithms aim to find the optimal solutions. Embedded with probe heuristics, the algorithms can always obtain promising solutions before the optimum is found. They also generated a new data set in which the bay size 
                        
                           S
                           ×
                           T
                        
                      was up to 
                        
                           10
                           ×
                           7
                        
                      and the retrieval priorities of containers are distinct. Their algorithm provided outstanding results for old and new data sets, especially for the R-CRP, in which a majority of instances were solved to optimality.

The latest study of the CRP was carried out by Forster and Bortfeldt (2012b), who designed a tree search procedure for the U-CRP on grouping instances. The tree search only explores a partial solution space by searching a promising subset of branches. The authors ran experiments on the original CVS instances without a height limitation, and on revised instances in which two empty tiers above the initial layout are added as the height limitation. Additionally, experiments for their BF instances were carried out. BF instances were generated by Bortfeldt and Forster (2012) first for the CPMP, and can also be used for the CRP. The bay size 
                        
                           S
                           ×
                           T
                        
                      was up to 
                        
                           20
                           ×
                           8
                        
                     , hence BF instances are grouping instances and can be regarded as large-scale instances among existing data sets.


                     Lee and Lee (2010) extended the CRP to a multiple-bay scenario, which aims to retrieve containers from multiple bays, while minimizing the total operational time for the yard crane, including the bay-changing time and intra-bay job time. This study was then followed by Forster and Bortfeldt (2012a) who implemented their tree search procedure for the CRP to tackle the multiple-bay retrieval problem.

The greedy look-ahead heuristic (GLAH) proposed in this paper can be split into three levels as illustrated in Fig. 3
                     . Due to the simple fact that it is always best to retrieve any retrievable targets if possible, a simple mechanism is applied for this purpose that as many retrievals are carried out automatically as possible, immediately after every relocation. In our approach we only consider irreducible layouts without retrievable targets in them, we only need to care about which relocations are going to be carried out for a layout. Every circle in Fig. 3 represents an irreducible layout, and every layout transition (arrow linking circles) is completed through a corresponding relocation.

The top level of the GLAH is a greedy mechanism: in every stage one relocation is executed to the current layout until the layout becomes empty. The relocation is chosen by the middle level, with the hope of finding a reasonably high-quality solution in that direction.

The middle level, namely the look-ahead procedure, applies a limited tree search to give an advice for the main greedy mechanism. Since the number of tree nodes increases exponentially as the tree depth increases, the depth and width of the look-ahead tree are limited. The current layout in the top level is passed to the middle level as the root node of the look-ahead tree. Starting from the root node, a limited look-ahead tree is built according to the depth and width limitations. The attractiveness of every leaf node is evaluated by the bottom level, and the score of every branch (non-leaf) node is easily determined by the highest attractiveness among its children.

The bottom level applies a set of specific heuristic rules to conduct the evaluation process for every leaf node in the look-ahead tree. Given a layout, the evaluation heuristic repeatedly executes relocations and retrievals, following the heuristic rules, so as to clear the layout. The number of relocations realized in the resulting solution obtained by the evaluation heuristic is used to measure the attractiveness of the corresponding leaf node.

With the help of the evaluation heuristic, the attractivenesses of the nodes in the look-ahead tree can be computed. The most promising relocation leading to the best leaf node is reported to the top level, as the next relocation to execute for the greedy mechanism.

During the whole process of the GLAH, we always record found solutions and update the best found solution 
                        
                           
                              
                                 sol
                              
                              
                                 best
                              
                           
                        
                     . The best found solution is initialized by applying the evaluation heuristic to the initial layout. At the end of the greedy mechanism, 
                        
                           
                              
                                 sol
                              
                              
                                 best
                              
                           
                        
                      is finally reported for the corresponding CRP instance.

The pseudo-code of the top level is given in Algorithm 1. The argument 
                           
                              
                                 
                                    L
                                 
                                 
                                    init
                                 
                              
                           
                         of procedure Greedy is the initial layout given in the problem instance. For the current layout 
                           
                              
                                 
                                    L
                                 
                                 
                                    curr
                                 
                              
                           
                        , procedure Look-Ahead-Advice provides the most promising relocation advice for this stage. The greedy mechanism repeats until 
                           
                              
                                 
                                    L
                                 
                                 
                                    curr
                                 
                              
                           
                         becomes empty.
                           Algorithm 1
                           Greedy mechanism 
                                 
                                    
                                       
                                       
                                          
                                             Greedy
                                                
                                                   
                                                      (
                                                      
                                                         
                                                            L
                                                         
                                                         
                                                            init
                                                         
                                                      
                                                      )
                                                   
                                                
                                             
                                          
                                          
                                             
                                                1 Solution 
                                                   
                                                      
                                                         
                                                            sol
                                                         
                                                         
                                                            best
                                                         
                                                      
                                                      
                                                      ≔
                                                      
                                                   
                                                solution obtained by Evaluate
                                                
                                                   
                                                      (
                                                      
                                                         
                                                            L
                                                         
                                                         
                                                            init
                                                         
                                                      
                                                      )
                                                   
                                                
                                             
                                          
                                          
                                             
                                                2 Initialize 
                                                   
                                                      
                                                         
                                                            L
                                                         
                                                         
                                                            curr
                                                         
                                                      
                                                      
                                                      ≔
                                                      
                                                      
                                                         
                                                            L
                                                         
                                                         
                                                            init
                                                         
                                                      
                                                      ,
                                                      
                                                      
                                                         
                                                            sol
                                                         
                                                         
                                                            curr
                                                         
                                                      
                                                      
                                                      ≔
                                                      
                                                      ∅
                                                   
                                                
                                             
                                          
                                          
                                             
                                                3 Auto-Retrieve
                                                
                                                   
                                                      (
                                                      
                                                         
                                                            L
                                                         
                                                         
                                                            curr
                                                         
                                                      
                                                      ,
                                                      
                                                      
                                                         
                                                            sol
                                                         
                                                         
                                                            curr
                                                         
                                                      
                                                      )
                                                   
                                                
                                             
                                          
                                          
                                             
                                                4 while 
                                                
                                                   
                                                      
                                                         
                                                            L
                                                         
                                                         
                                                            curr
                                                         
                                                      
                                                   
                                                 is not empty
                                          
                                          
                                             
                                                5 
                                                if 
                                                
                                                   
                                                      ‖
                                                      
                                                         
                                                            sol
                                                         
                                                         
                                                            curr
                                                         
                                                      
                                                      ‖
                                                      +
                                                      L
                                                      
                                                         ower-
                                                      B
                                                      
                                                         ound
                                                      
                                                      (
                                                      
                                                         
                                                            L
                                                         
                                                         
                                                            curr
                                                         
                                                      
                                                      )
                                                      ⩾
                                                      ‖
                                                      
                                                         
                                                            sol
                                                         
                                                         
                                                            best
                                                         
                                                      
                                                      ‖
                                                   
                                                
                                             
                                          
                                          
                                             
                                                6 
                                                break
                                             
                                          
                                          
                                             
                                                7 Relocation 
                                                   
                                                      relo
                                                      
                                                      ≔
                                                      
                                                      L
                                                      
                                                         ook-
                                                      A
                                                      
                                                         head-
                                                      A
                                                      
                                                         dvice
                                                      
                                                      (
                                                      
                                                         
                                                            L
                                                         
                                                         
                                                            curr
                                                         
                                                      
                                                      )
                                                   
                                                
                                             
                                          
                                          
                                             
                                                8 
                                                
                                                   
                                                      
                                                         
                                                            L
                                                         
                                                         
                                                            curr
                                                         
                                                      
                                                      
                                                      ≔
                                                      
                                                      
                                                         
                                                            L
                                                         
                                                         
                                                            curr
                                                         
                                                      
                                                      ⊕
                                                      relo
                                                      ,
                                                      
                                                      
                                                         
                                                            sol
                                                         
                                                         
                                                            curr
                                                         
                                                      
                                                      
                                                      ≔
                                                      
                                                      
                                                         
                                                            sol
                                                         
                                                         
                                                            curr
                                                         
                                                      
                                                      +
                                                      relo
                                                   
                                                
                                             
                                          
                                          
                                             
                                                9 Auto-Retrieve
                                                
                                                   
                                                      (
                                                      
                                                         
                                                            L
                                                         
                                                         
                                                            curr
                                                         
                                                      
                                                      ,
                                                      
                                                         
                                                            sol
                                                         
                                                         
                                                            curr
                                                         
                                                      
                                                      )
                                                   
                                                
                                             
                                          
                                          
                                             10 return
                                                
                                                
                                                   
                                                      
                                                         
                                                            sol
                                                         
                                                         
                                                            best
                                                         
                                                      
                                                   
                                                
                                             
                                          
                                          
                                             
                                                
                                             
                                          
                                          
                                             Auto-Retrieve
                                                
                                                   
                                                      (
                                                      L
                                                      ,
                                                      sol
                                                      )
                                                   
                                                
                                             
                                          
                                          
                                             13 while a target c is placed at the top of a stack s in L
                                             
                                          
                                          
                                             14 
                                                
                                                   
                                                      L
                                                      
                                                      ≔
                                                      
                                                      L
                                                      ⊕
                                                      
                                                         
                                                            
                                                               c
                                                               :
                                                               s
                                                               →
                                                               0
                                                            
                                                         
                                                      
                                                      ,
                                                      
                                                      sol
                                                      
                                                      ≔
                                                      
                                                      sol
                                                      +
                                                      
                                                         
                                                            
                                                               c
                                                               :
                                                               s
                                                               →
                                                               0
                                                            
                                                         
                                                      
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           

In each stage, we compute the lower bound for the number of relocations required to clear the current layout 
                           
                              
                                 
                                    L
                                 
                                 
                                    curr
                                 
                              
                           
                        . And according to the lower bound, if 
                           
                              
                                 
                                    sol
                                 
                                 
                                    best
                                 
                              
                           
                         can never be improved in later stages (c.f. line 5 in Algorithm 1), the greedy mechanism terminates immediately.

The lower bound method used in our approach is proposed by Forster and Bortfeldt (2012b). Given an irreducible layout, the lower bound for the number of required relocations consists of two parts: the number of badly placed containers 
                              
                                 
                                    
                                       k
                                    
                                    
                                       BG
                                    
                                 
                              
                            and a binary variable 
                              
                                 
                                    
                                       k
                                    
                                    
                                       non-BG
                                    
                                 
                              
                           . The variable 
                              
                                 
                                    
                                       k
                                    
                                    
                                       BG
                                    
                                 
                              
                            is a lower bound for the number of required relocations that move badly placed containers, it equals to the number of badly placed containers in the layout.

The binary variable 
                              
                                 
                                    
                                       k
                                    
                                    
                                       non-BG
                                    
                                 
                              
                            is involved in consideration of the following situation: a badly placed container needs to be relocated, however no stack is able to support it in the layout. Hence at least one additional relocation is needed for this container. The variable 
                              
                                 
                                    
                                       k
                                    
                                    
                                       non-BG
                                    
                                 
                                 =
                                 1
                              
                            if and only if there is no empty stack and
                              
                                 
                                    
                                       min
                                    
                                    
                                       
                                          
                                             
                                                
                                                   g
                                                
                                                
                                                   top
                                                
                                             
                                             (
                                             s
                                             )
                                             |
                                             s
                                             =
                                             1
                                             ,
                                             …
                                             ,
                                             S
                                          
                                       
                                    
                                    >
                                    
                                       max
                                    
                                    
                                       
                                          
                                             
                                                
                                                   g
                                                
                                                
                                                   min
                                                
                                             
                                             (
                                             s
                                             )
                                             |
                                             s
                                             =
                                             1
                                             ,
                                             …
                                             ,
                                             S
                                          
                                       
                                    
                                    .
                                 
                              
                           
                        

The middle level of the GLAH is the look-ahead procedure; the task of this level is to provide a relocation advice for the top level through a limited tree search. There are up to 
                           
                              S
                              ×
                              (
                              S
                              -
                              1
                              )
                           
                         valid relocations for a layout with S stacks, and the size of the look-ahead tree would increase exponentially as the search depth increases, hence it is impossible to explore the whole search space. To overcome this drawback, we impose limitations both on the depth of the tree search and on the number of children generated for each branch node. Therefore, only a limited number of successor layouts will be inspected in the look-ahead tree, we wish to build a search tree consisting of very promising nodes with the hope of leading to high-quality solutions.

A relocation is a Bad–Good (BG) relocation if the relocated container is badly placed and becomes well placed after relocation. Bad–Bad (BB), Good–Good (GG) and Good–Bad (GB) relocations are analogously defined.

With the consideration of efficiently retrieving targets from the current layout, we would like to know whether a relocation helps reduce the number of blocking containers placed at higher tiers than the targets. Hence, according to whether a Bad–X (Bad–Good or Bad–Bad) relocation is a restricted relocation, Bad–X relocations can be further classified into two subcategories. The Bad–X relocations that free a target (moves a badly placed container away above a target) are called freeing target (FT) Bad–X relocations, and the other subcategory is non-freeing target (NF) Bad–X relocations. As a result, six categories of relocations in total are defined: FT-BG, NF-BG, FT-BB, NF-BB, GG and GB.

The motivation of this relocation classification is to preserve the diversification of the search space, so that there is a higher chance of covering the various parts of the entire search space and a greater likelihood of finding high-quality solutions.

Among the six categories, FT-BG and FT-BB are needful since they remove badly placed containers above targets and make targets retrievable. And for the other four categories, we provide four examples in Figs. 4–7
                           
                           
                           
                           . For the ease of presentation, we use 
                              
                                 
                                    
                                       
                                          g
                                          (
                                          c
                                          )
                                          :
                                          
                                             
                                                s
                                             
                                             
                                                1
                                             
                                          
                                          →
                                          
                                             
                                                s
                                             
                                             
                                                2
                                             
                                          
                                       
                                    
                                 
                              
                            to demonstrate crane operations for the following examples, since the containers in each example have distinct retrieval priorities that would not lead to ambiguity.

For the badly placed containers that are not above targets, NF-BG relocations could be productive since they may facilitate future relocations and retrievals. Fig. 4 illustrates an example where the NF-BG relocation plays an important role in finding the optimal solution. The optimal solution contains four relocations if the first relocation executed is an NF-BG relocation, namely 
                              
                                 
                                    
                                       
                                          5
                                          :
                                          3
                                          →
                                          1
                                       
                                    
                                 
                              
                           .

Although GG and NF-BB relocations do not reduce the number of badly placed containers, and GB relocations even transform a well placed container into a badly placed one, there are still situations that some stack is advantageously vacated for other containers in subsequent stages.

In the layout illustrated in Fig. 5, relocating container 2 from stack 1 to stack 3 will make stack 1 empty, and then stack 1 is able to accommodate all badly placed containers blocking container 1. The optimal solution to this example contains three relocations: 
                              
                                 
                                    
                                       
                                          2
                                          :
                                          1
                                          →
                                          3
                                       
                                    
                                 
                              
                           , 
                              
                                 
                                    
                                       
                                          5
                                          :
                                          2
                                          →
                                          1
                                       
                                    
                                 
                              
                            and 
                              
                                 
                                    
                                       
                                          4
                                          :
                                          2
                                          →
                                          1
                                       
                                    
                                 
                              
                           ; however if we do not adopt the first GG relocation, at least four relocations are required to clear the layout.

Similarly, the optimal solution to the layout shown in Fig. 6 consists of 8 relocations, starting with a GB relocation 
                              
                                 
                                    
                                       
                                          3
                                          :
                                          1
                                          →
                                          3
                                       
                                    
                                 
                              
                           . And for the layout shown in Fig. 7, the optimal solution contains 12 relocations, starting with an NF-BB relocation 
                              
                                 
                                    
                                       
                                          4
                                          :
                                          1
                                          →
                                          3
                                       
                                    
                                 
                              
                            and a GB relocation 
                              
                                 
                                    
                                       
                                          3
                                          :
                                          1
                                          →
                                          3
                                       
                                    
                                 
                              
                           .

The last three examples are motivated by the same idea that though GG, GB and NF-BB relocations do not reduce the number of badly placed containers at present, they may provide better placements for future relocations and optimize the whole process.

With the classification described above, for a given layout, we can divide the possible relocations into six categories: FT-BG, NF-BG, FT-BB, NF-BB, GG and GB. And for each node in the look-ahead tree, we select only a few relocations from each category to generate its children; the maximum numbers of selected relocations from the six categories are denoted by 
                              
                                 
                                    
                                       n
                                    
                                    
                                       FT
                                       -
                                       BG
                                    
                                 
                              
                           , 
                              
                                 
                                    
                                       n
                                    
                                    
                                       NF
                                       -
                                       BG
                                    
                                 
                              
                           , 
                              
                                 
                                    
                                       n
                                    
                                    
                                       FT
                                       -
                                       BB
                                    
                                 
                              
                           , 
                              
                                 
                                    
                                       n
                                    
                                    
                                       NF
                                       -
                                       BB
                                    
                                 
                              
                           , 
                              
                                 
                                    
                                       n
                                    
                                    
                                       GG
                                    
                                 
                              
                            and 
                              
                                 
                                    
                                       n
                                    
                                    
                                       GB
                                    
                                 
                              
                           , respectively. The depth of the look-ahead tree is limited by a parameter, denoted by D.

For an FT-BG or NF-BG relocation 
                              
                                 
                                    
                                       
                                          c
                                          :
                                          
                                             
                                                s
                                             
                                             
                                                1
                                             
                                          
                                          →
                                          
                                             
                                                s
                                             
                                             
                                                2
                                             
                                          
                                       
                                    
                                 
                              
                           , the minimum group index in stack 
                              
                                 
                                    
                                       s
                                    
                                    
                                       2
                                    
                                 
                              
                            changes from 
                              
                                 
                                    
                                       g
                                    
                                    
                                       min
                                    
                                 
                                 (
                                 
                                    
                                       s
                                    
                                    
                                       2
                                    
                                 
                                 )
                              
                            to 
                              
                                 g
                                 (
                                 c
                                 )
                              
                            due to the relocation. We assign a value of 
                              
                                 
                                    
                                       g
                                    
                                    
                                       min
                                    
                                 
                                 (
                                 
                                    
                                       s
                                    
                                    
                                       2
                                    
                                 
                                 )
                                 -
                                 g
                                 (
                                 c
                                 )
                              
                            to each FT-BG or NF-BG relocation, representing the gap or the decrement of the minimum group index in stack 
                              
                                 
                                    
                                       s
                                    
                                    
                                       2
                                    
                                 
                              
                            caused by the relocation. We prefer relocations incurring smaller gap in this case, and sort FT-BG relocations and NF-BG relocations in ascending order of this measure, respectively.

And for an FT-BB or NF-BB relocation 
                              
                                 
                                    
                                       
                                          c
                                          :
                                          
                                             
                                                s
                                             
                                             
                                                1
                                             
                                          
                                          →
                                          
                                             
                                                s
                                             
                                             
                                                2
                                             
                                          
                                       
                                    
                                 
                              
                           , the minimum group index in stack 
                              
                                 
                                    
                                       s
                                    
                                    
                                       2
                                    
                                 
                              
                            does not change due to the relocation. We assign a value of 
                              
                                 g
                                 (
                                 c
                                 )
                                 -
                                 
                                    
                                       g
                                    
                                    
                                       min
                                    
                                 
                                 (
                                 
                                    
                                       s
                                    
                                    
                                       2
                                    
                                 
                                 )
                              
                            to each FT-BB or NF-BB relocation, representing the difference between the minimum group index in stack 
                              
                                 
                                    
                                       s
                                    
                                    
                                       2
                                    
                                 
                              
                            and the group index of the relocated container c. We prefer relocations with smaller group index difference in case of moving the relocated container again too soon. Hence, both FT-BB relocations and NF-BB relocations are sorted in ascending order of 
                              
                                 g
                                 (
                                 c
                                 )
                                 -
                                 
                                    
                                       g
                                    
                                    
                                       min
                                    
                                 
                                 (
                                 
                                    
                                       s
                                    
                                    
                                       2
                                    
                                 
                                 )
                              
                           .

GG relocations are sorted by 
                              
                                 f
                                 (
                                 
                                    
                                       s
                                    
                                    
                                       1
                                    
                                 
                                 )
                                 -
                                 
                                    
                                       g
                                    
                                    
                                       min
                                    
                                 
                                 (
                                 
                                    
                                       s
                                    
                                    
                                       2
                                    
                                 
                                 )
                              
                            in descending order, and GB relocations are sorted by 
                              
                                 f
                                 (
                                 
                                    
                                       s
                                    
                                    
                                       1
                                    
                                 
                                 )
                                 +
                                 
                                    
                                       g
                                    
                                    
                                       min
                                    
                                 
                                 (
                                 
                                    
                                       s
                                    
                                    
                                       2
                                    
                                 
                                 )
                              
                            in descending order. With such ordering, we prefer relocations that yield more convenient stacks (with larger 
                              
                                 f
                                 (
                                 
                                    
                                       s
                                    
                                    
                                       1
                                    
                                 
                                 )
                              
                            after the relocation) and not destroy good stacks.

After the six categories of relocations are sorted according to corresponding criteria, from each relocation category 
                              
                                 X
                              
                           , up to 
                              
                                 
                                    
                                       n
                                    
                                    
                                       X
                                    
                                 
                              
                            top relocations are collected; if the total number of relocations of type 
                              
                                 X
                              
                            is less than 
                              
                                 
                                    
                                       n
                                    
                                    
                                       X
                                    
                                 
                              
                           , collect the whole set of the relocations of type 
                              
                                 X
                              
                           . All collected relocations then compose the candidate relocation list reloList which will be used to construct the look-ahead tree.

The pseudo-code of the middle level is given in Algorithm 2. At line 8 in Algorithm 2 the obtained complete solution is condensed; and at line 17 in Algorithm 2, we add an additional relocation to reloList for resolve an outer-sync issue between the middle and the bottom levels, and at line 8 the complete solution is condensed. We will further explain them in Sections 4.3.5 and 4.3.4, respectively.
                              Algorithm 2
                              Look-ahead procedure 
                                    
                                       
                                          
                                          
                                             
                                                Look-Ahead-Advice
                                                   
                                                      
                                                         (
                                                         
                                                            
                                                               L
                                                            
                                                            
                                                               curr
                                                            
                                                         
                                                         )
                                                      
                                                   
                                                
                                             
                                             
                                                
                                                   1 Root node 
                                                      
                                                         
                                                            
                                                               L
                                                            
                                                            
                                                               0
                                                            
                                                         
                                                         
                                                         ≔
                                                         
                                                         
                                                            
                                                               L
                                                            
                                                            
                                                               curr
                                                            
                                                         
                                                      
                                                   
                                                
                                             
                                             
                                                
                                                   2 return
                                                   Tree-Search
                                                   
                                                      
                                                         (
                                                         0
                                                         ,
                                                         
                                                            
                                                               L
                                                            
                                                            
                                                               0
                                                            
                                                         
                                                         ,
                                                         ∅
                                                         )
                                                         .
                                                         advice
                                                      
                                                   
                                                
                                             
                                             
                                                
                                                   
                                                
                                             
                                             
                                                Tree-Search
                                                   
                                                      
                                                         (
                                                         d
                                                         ,
                                                         
                                                            
                                                               L
                                                            
                                                            
                                                               d
                                                            
                                                         
                                                         ,
                                                         
                                                            
                                                               sol
                                                            
                                                            
                                                               d
                                                            
                                                         
                                                         )
                                                      
                                                   
                                                
                                             
                                             
                                                
                                                   3 if 
                                                   
                                                      
                                                         ‖
                                                         
                                                            
                                                               sol
                                                            
                                                            
                                                               curr
                                                            
                                                         
                                                         ‖
                                                         +
                                                         d
                                                         +
                                                         L
                                                         
                                                            ower-
                                                         B
                                                         
                                                            ound
                                                         
                                                         (
                                                         
                                                            
                                                               L
                                                            
                                                            
                                                               d
                                                            
                                                         
                                                         )
                                                         ⩾
                                                         ‖
                                                         
                                                            
                                                               sol
                                                            
                                                            
                                                               best
                                                            
                                                         
                                                         ‖
                                                      
                                                   
                                                
                                             
                                             
                                                
                                                   4 
                                                   return
                                                   
                                                   null
                                                
                                             
                                             
                                                
                                                   5 if 
                                                   
                                                      
                                                         
                                                            
                                                               L
                                                            
                                                            
                                                               d
                                                            
                                                         
                                                      
                                                    is empty or 
                                                      
                                                         d
                                                         =
                                                         D
                                                      
                                                   
                                                
                                             
                                             
                                                
                                                   6 
                                                   
                                                      
                                                         
                                                            
                                                               sol
                                                            
                                                            
                                                               eva
                                                            
                                                         
                                                         
                                                         ≔
                                                      
                                                   
                                                   solution obtained by Evaluate
                                                   
                                                      
                                                         (
                                                         
                                                            
                                                               L
                                                            
                                                            
                                                               d
                                                            
                                                         
                                                         )
                                                      
                                                   
                                                
                                             
                                             
                                                
                                                   7 Complete solution 
                                                      
                                                         
                                                            
                                                               sol
                                                            
                                                            
                                                               com
                                                            
                                                         
                                                         ≔
                                                         
                                                            
                                                               sol
                                                            
                                                            
                                                               curr
                                                            
                                                         
                                                         +
                                                         
                                                            
                                                               sol
                                                            
                                                            
                                                               d
                                                            
                                                         
                                                         +
                                                         
                                                            
                                                               sol
                                                            
                                                            
                                                               eva
                                                            
                                                         
                                                      
                                                   
                                                
                                             
                                             
                                                
                                                   8 Condense the complete solution 
                                                      
                                                         
                                                            
                                                               sol
                                                            
                                                            
                                                               com
                                                            
                                                         
                                                      
                                                   
                                                
                                             
                                             
                                                
                                                   9 
                                                   if 
                                                   
                                                      
                                                         ‖
                                                         
                                                            
                                                               sol
                                                            
                                                            
                                                               best
                                                            
                                                         
                                                         ‖
                                                         >
                                                         ‖
                                                         
                                                            
                                                               sol
                                                            
                                                            
                                                               com
                                                            
                                                         
                                                         ‖
                                                      
                                                   
                                                
                                             
                                             
                                                10 
                                                   
                                                   
                                                      
                                                         
                                                            
                                                               sol
                                                            
                                                            
                                                               best
                                                            
                                                         
                                                         
                                                         ≔
                                                         
                                                         
                                                            
                                                               sol
                                                            
                                                            
                                                               com
                                                            
                                                         
                                                      
                                                   
                                                
                                             
                                             
                                                11 // 
                                                      
                                                         
                                                            
                                                               sol
                                                            
                                                            
                                                               best
                                                            
                                                         
                                                      
                                                    is the global variable representing the best found solution
                                             
                                             
                                                12 
                                                   return
                                                   
                                                   
                                                      
                                                         {
                                                         advice
                                                         ←
                                                         null
                                                         ,
                                                         cost
                                                         ←
                                                         d
                                                         +
                                                         ‖
                                                         
                                                            
                                                               sol
                                                            
                                                            
                                                               eva
                                                            
                                                         
                                                         ‖
                                                         }
                                                      
                                                   
                                                
                                             
                                             
                                                13 else
                                                
                                             
                                             
                                                14 
                                                   
                                                      
                                                         bestChild
                                                         
                                                         ≔
                                                      
                                                   
                                                    
                                                   
                                                      
                                                         {
                                                         advice
                                                         ←
                                                         null
                                                         ,
                                                         cost
                                                         ←
                                                         inf
                                                      
                                                   }
                                             
                                             
                                                15 Generate 
                                                      
                                                         reloList
                                                      
                                                    by collecting promising relocations from the six categories
                                             
                                             
                                                16 // See Section 4.2.2 for detailed description
                                             
                                             
                                                17 Add the next relocation from the evaluation heuristic to reloList
                                                
                                             
                                             
                                                18 // See Section 4.3.4 for detailed description
                                             
                                             
                                                19 
                                                   for each relocation relo in reloList
                                                
                                             
                                             
                                                20 
                                                   
                                                   
                                                      
                                                         
                                                            
                                                               L
                                                            
                                                            
                                                               d
                                                               +
                                                               1
                                                            
                                                         
                                                         
                                                         ≔
                                                         
                                                         
                                                            
                                                               L
                                                            
                                                            
                                                               d
                                                            
                                                         
                                                         ⊕
                                                         relo
                                                         ,
                                                      
                                                    
                                                   
                                                      
                                                         
                                                            
                                                               sol
                                                            
                                                            
                                                               d
                                                               +
                                                               1
                                                            
                                                         
                                                         
                                                         ≔
                                                         
                                                         
                                                            
                                                               sol
                                                            
                                                            
                                                               d
                                                            
                                                         
                                                         +
                                                         relo
                                                      
                                                   
                                                
                                             
                                             
                                                21 
                                                   
                                                   
                                                      
                                                         A
                                                         
                                                            uto-
                                                         R
                                                         
                                                            etrieve
                                                         
                                                         (
                                                         
                                                            
                                                               L
                                                            
                                                            
                                                               d
                                                               +
                                                               1
                                                            
                                                         
                                                         ,
                                                         
                                                            
                                                               sol
                                                            
                                                            
                                                               d
                                                               +
                                                               1
                                                            
                                                         
                                                         )
                                                      
                                                   
                                                
                                             
                                             
                                                22 
                                                   
                                                   
                                                      
                                                         child
                                                         
                                                         ≔
                                                         
                                                         T
                                                         
                                                            ree-
                                                         S
                                                         
                                                            earch
                                                         
                                                         (
                                                         d
                                                         +
                                                         1
                                                         ,
                                                         
                                                            
                                                               L
                                                            
                                                            
                                                               d
                                                               +
                                                               1
                                                            
                                                         
                                                         ,
                                                         
                                                            
                                                               sol
                                                            
                                                            
                                                               d
                                                               +
                                                               1
                                                            
                                                         
                                                         )
                                                      
                                                   
                                                
                                             
                                             
                                                23 
                                                   
                                                   if 
                                                   
                                                      
                                                         bestChild
                                                         .
                                                         cost
                                                         >
                                                         child
                                                         .
                                                         cost
                                                      
                                                   
                                                
                                             
                                             
                                                24 
                                                   
                                                   
                                                      
                                                         bestChild
                                                         
                                                         ≔
                                                         
                                                         {
                                                         advice
                                                         ←
                                                         relo
                                                         ,
                                                         cost
                                                         ←
                                                         child
                                                         .
                                                         cost
                                                         }
                                                      
                                                   
                                                
                                             
                                             
                                                25 
                                                   return
                                                   
                                                   bestChild
                                                
                                             
                                          
                                       
                                    
                                 
                              

For each node 
                              
                                 
                                    
                                       L
                                    
                                    
                                       d
                                    
                                 
                              
                            at depth d, if 
                              
                                 
                                    
                                       L
                                    
                                    
                                       d
                                    
                                 
                              
                            is empty or the depth limitation is reached, it is a leaf node; otherwise, it is a branch node. Procedure Tree-Search returns a structure which includes a relocation advice and a corresponding cost. The embedded relocation is the most promising relocation advice for 
                              
                                 
                                    
                                       L
                                    
                                    
                                       d
                                    
                                 
                              
                           . The cost for a leaf node equals to 
                              
                                 d
                                 +
                                 ‖
                                 
                                    
                                       sol
                                    
                                    
                                       eva
                                    
                                 
                                 ‖
                              
                           , representing the evaluated number of relocations needed for clearing 
                              
                                 
                                    
                                       L
                                    
                                    
                                       0
                                    
                                 
                              
                            if following the path via 
                              
                                 
                                    
                                       L
                                    
                                    
                                       d
                                    
                                 
                              
                           . Smaller cost indicates higher attractiveness. And the cost for a branch node is computed as the minimum cost among its children.

Finally, the most promising relocation for the root node 
                              
                                 
                                    
                                       L
                                    
                                    
                                       0
                                    
                                 
                              
                            is obtained by recursively invoking procedure Tree-Search, and it is used as the relocation advice to the current layout 
                              
                                 
                                    
                                       L
                                    
                                    
                                       curr
                                    
                                 
                              
                            in the top level. All complete solutions are recorded and the best found solution 
                              
                                 
                                    
                                       sol
                                    
                                    
                                       best
                                    
                                 
                              
                            is always updated if a complete solution with fewer relocations is obtained by the evaluation heuristic.


                        Zhu et al. (2012) presented an efficient heuristic (named PU2 in their paper) for the simplex instances. We extend it to tackle the grouping instances, and improve it by adopting a newly developed gap utilization process. This process is carried out before every X–Good (Good–Good or Bad–Good) relocation, with the purpose of fully utilizing the gap of the minimum group index of the destination stack of the relocation.

The main process of the evaluation heuristic can be summarized as follows. At each step an urgent target 
                        
                           
                              
                                 
                                    c
                                 
                                 
                                    ∗
                                 
                              
                           
                         is determined among all targets in the layout, then all badly placed containers above 
                           
                              
                                 
                                    c
                                 
                                 
                                    ∗
                                 
                              
                           
                         have to be relocated to certain destination stacks one by one. After that, 
                           
                              
                                 
                                    c
                                 
                                 
                                    ∗
                                 
                              
                           
                         is retrieved and the heuristic repeats such procedure until the layout becomes empty. The pseudo-code of the evaluation heuristic is given in Algorithm 3, detailed description will be given in the remainder part of this subsection.
                           Algorithm 3
                           Evaluation heuristic 
                                 
                                    
                                       
                                       
                                          
                                             Evaluate
                                                
                                                   
                                                      (
                                                      L
                                                      )
                                                   
                                                
                                             
                                          
                                          
                                             
                                                1 Solution 
                                                   
                                                      sol
                                                      
                                                      ≔
                                                      
                                                      ∅
                                                   
                                                
                                             
                                          
                                          
                                             
                                                2 Auto-Retrieve
                                                
                                                   
                                                      (
                                                      L
                                                      ,
                                                      sol
                                                      )
                                                   
                                                
                                             
                                          
                                          
                                             
                                                3 while 
                                                L is not empty
                                          
                                          
                                             
                                                4 Determine the urgent container 
                                                   
                                                      
                                                         
                                                            c
                                                         
                                                         
                                                            ∗
                                                         
                                                      
                                                   
                                                 in stack 
                                                   
                                                      
                                                         
                                                            s
                                                         
                                                         
                                                            ∗
                                                         
                                                      
                                                   
                                                
                                             
                                          
                                          
                                             
                                                5 
                                                while 
                                                
                                                   
                                                      
                                                         
                                                            c
                                                         
                                                         
                                                            ∗
                                                         
                                                      
                                                   
                                                 is not retrievable
                                          
                                          
                                             
                                                6 Container 
                                                   
                                                      c
                                                      
                                                      ≔
                                                   
                                                
                                                the top container of stack 
                                                   
                                                      
                                                         
                                                            s
                                                         
                                                         
                                                            ∗
                                                         
                                                      
                                                   
                                                
                                             
                                          
                                          
                                             
                                                7 
                                                if 
                                                
                                                   
                                                      
                                                         
                                                            S
                                                         
                                                         
                                                            1
                                                         
                                                      
                                                      
                                                      ≠
                                                      
                                                      ∅
                                                   
                                                
                                             
                                          
                                          
                                             
                                                8 
                                                
                                                
                                                   
                                                      
                                                         
                                                            s
                                                         
                                                         
                                                            ′
                                                         
                                                      
                                                      
                                                      ≔
                                                      
                                                      arg
                                                      
                                                         
                                                            min
                                                         
                                                         
                                                            s
                                                            ∈
                                                            
                                                               
                                                                  S
                                                               
                                                               
                                                                  1
                                                               
                                                            
                                                         
                                                      
                                                      
                                                         
                                                            g
                                                         
                                                         
                                                            min
                                                         
                                                      
                                                      (
                                                      s
                                                      )
                                                   
                                                
                                             
                                          
                                          
                                             
                                                9 
                                                
                                                
                                                   
                                                      G
                                                      
                                                         ap-
                                                      U
                                                      
                                                         tilize
                                                      
                                                      (
                                                      L
                                                      ,
                                                      sol
                                                      ,
                                                      
                                                         
                                                            
                                                               c
                                                               :
                                                               
                                                                  
                                                                     s
                                                                  
                                                                  
                                                                     ∗
                                                                  
                                                               
                                                               →
                                                               
                                                                  
                                                                     s
                                                                  
                                                                  
                                                                     ′
                                                                  
                                                               
                                                            
                                                         
                                                      
                                                      )
                                                   
                                                
                                             
                                          
                                          
                                             10 
                                                
                                                
                                                   
                                                      L
                                                      
                                                      ≔
                                                      
                                                      L
                                                      ⊕
                                                      
                                                         
                                                            
                                                               c
                                                               :
                                                               
                                                                  
                                                                     s
                                                                  
                                                                  
                                                                     ∗
                                                                  
                                                               
                                                               →
                                                               
                                                                  
                                                                     s
                                                                  
                                                                  
                                                                     ′
                                                                  
                                                               
                                                            
                                                         
                                                      
                                                      ,
                                                      
                                                      sol
                                                      
                                                      ≔
                                                      
                                                      sol
                                                      +
                                                      
                                                         
                                                            
                                                               c
                                                               :
                                                               
                                                                  
                                                                     s
                                                                  
                                                                  
                                                                     ∗
                                                                  
                                                               
                                                               →
                                                               
                                                                  
                                                                     s
                                                                  
                                                                  
                                                                     ′
                                                                  
                                                               
                                                            
                                                         
                                                      
                                                   
                                                
                                             
                                          
                                          
                                             11 
                                                elseif 
                                                
                                                   
                                                      
                                                         
                                                            S
                                                         
                                                         
                                                            2
                                                         
                                                      
                                                      
                                                      ≠
                                                      
                                                      ∅
                                                   
                                                
                                             
                                          
                                          
                                             12 
                                                
                                                
                                                   
                                                      
                                                         
                                                            s
                                                         
                                                         
                                                            ′
                                                         
                                                      
                                                      
                                                      ≔
                                                      
                                                      arg
                                                      
                                                         
                                                            max
                                                         
                                                         
                                                            s
                                                            ∈
                                                            
                                                               
                                                                  S
                                                               
                                                               
                                                                  2
                                                               
                                                            
                                                         
                                                      
                                                      
                                                         
                                                            g
                                                         
                                                         
                                                            top
                                                         
                                                      
                                                      (
                                                      s
                                                      )
                                                   
                                                
                                             
                                          
                                          
                                             13 
                                                
                                                
                                                   
                                                      
                                                         
                                                            s
                                                         
                                                         
                                                            a
                                                         
                                                      
                                                      
                                                      ≔
                                                      
                                                      arg
                                                      
                                                         
                                                            min
                                                         
                                                         
                                                            s
                                                            ∈
                                                            
                                                               
                                                                  S
                                                               
                                                               
                                                                  a
                                                               
                                                            
                                                            (
                                                            
                                                               
                                                                  s
                                                               
                                                               
                                                                  ′
                                                               
                                                            
                                                            )
                                                         
                                                      
                                                      
                                                         
                                                            g
                                                         
                                                         
                                                            min
                                                         
                                                      
                                                      (
                                                      s
                                                      )
                                                   
                                                
                                             
                                          
                                          
                                             14 
                                                
                                                
                                                   
                                                      
                                                         
                                                            c
                                                         
                                                         
                                                            ′
                                                         
                                                      
                                                      
                                                      ≔
                                                   
                                                
                                                the top container of stack 
                                                   
                                                      
                                                         
                                                            s
                                                         
                                                         
                                                            ′
                                                         
                                                      
                                                   
                                                
                                             
                                          
                                          
                                             15 
                                                
                                                
                                                   
                                                      G
                                                      
                                                         ap-
                                                      U
                                                      
                                                         tilize
                                                      
                                                      (
                                                      L
                                                      ,
                                                      sol
                                                      ,
                                                      
                                                         
                                                            
                                                               
                                                                  
                                                                     c
                                                                  
                                                                  
                                                                     ′
                                                                  
                                                               
                                                               :
                                                               
                                                                  
                                                                     s
                                                                  
                                                                  
                                                                     ′
                                                                  
                                                               
                                                               →
                                                               
                                                                  
                                                                     s
                                                                  
                                                                  
                                                                     a
                                                                  
                                                               
                                                            
                                                         
                                                      
                                                      )
                                                   
                                                
                                             
                                          
                                          
                                             16 
                                                
                                                
                                                   
                                                      L
                                                      
                                                      ≔
                                                      
                                                      L
                                                      ⊕
                                                      
                                                         
                                                            
                                                               
                                                                  
                                                                     c
                                                                  
                                                                  
                                                                     ′
                                                                  
                                                               
                                                               :
                                                               
                                                                  
                                                                     s
                                                                  
                                                                  
                                                                     ′
                                                                  
                                                               
                                                               →
                                                               
                                                                  
                                                                     s
                                                                  
                                                                  
                                                                     a
                                                                  
                                                               
                                                            
                                                         
                                                      
                                                      ,
                                                      
                                                      sol
                                                      
                                                      ≔
                                                      
                                                      sol
                                                      +
                                                      
                                                         
                                                            
                                                               
                                                                  
                                                                     c
                                                                  
                                                                  
                                                                     ′
                                                                  
                                                               
                                                               :
                                                               
                                                                  
                                                                     s
                                                                  
                                                                  
                                                                     ′
                                                                  
                                                               
                                                               →
                                                               
                                                                  
                                                                     s
                                                                  
                                                                  
                                                                     a
                                                                  
                                                               
                                                            
                                                         
                                                      
                                                   
                                                
                                             
                                          
                                          
                                             17 
                                                
                                                
                                                   
                                                      G
                                                      
                                                         ap-
                                                      U
                                                      
                                                         tilize
                                                      
                                                      (
                                                      L
                                                      ,
                                                      sol
                                                      ,
                                                      
                                                         
                                                            
                                                               c
                                                               :
                                                               
                                                                  
                                                                     s
                                                                  
                                                                  
                                                                     ∗
                                                                  
                                                               
                                                               →
                                                               
                                                                  
                                                                     s
                                                                  
                                                                  
                                                                     ′
                                                                  
                                                               
                                                            
                                                         
                                                      
                                                      )
                                                   
                                                
                                             
                                          
                                          
                                             18 
                                                
                                                
                                                   
                                                      L
                                                      
                                                      ≔
                                                      
                                                      L
                                                      ⊕
                                                      
                                                         
                                                            
                                                               c
                                                               :
                                                               
                                                                  
                                                                     s
                                                                  
                                                                  
                                                                     ∗
                                                                  
                                                               
                                                               →
                                                               
                                                                  
                                                                     s
                                                                  
                                                                  
                                                                     ′
                                                                  
                                                               
                                                            
                                                         
                                                      
                                                      ,
                                                      
                                                      sol
                                                      
                                                      ≔
                                                      
                                                      sol
                                                      +
                                                      
                                                         
                                                            
                                                               c
                                                               :
                                                               
                                                                  
                                                                     s
                                                                  
                                                                  
                                                                     ∗
                                                                  
                                                               
                                                               →
                                                               
                                                                  
                                                                     s
                                                                  
                                                                  
                                                                     ′
                                                                  
                                                               
                                                            
                                                         
                                                      
                                                   
                                                
                                             
                                          
                                          
                                             19 
                                                else
                                             
                                          
                                          
                                             20 
                                                
                                                
                                                   
                                                      
                                                         
                                                            s
                                                         
                                                         
                                                            ′
                                                         
                                                      
                                                      
                                                      ≔
                                                      
                                                      arg
                                                      
                                                         
                                                            max
                                                         
                                                         
                                                            s
                                                            ≠
                                                            
                                                               
                                                                  s
                                                               
                                                               
                                                                  ∗
                                                               
                                                            
                                                         
                                                      
                                                      
                                                         
                                                            
                                                               
                                                                  
                                                                     g
                                                                  
                                                                  
                                                                     min
                                                                  
                                                               
                                                               (
                                                               s
                                                               )
                                                               |
                                                               h
                                                               (
                                                               s
                                                               )
                                                               <
                                                               T
                                                            
                                                         
                                                      
                                                   
                                                
                                             
                                          
                                          
                                             21 
                                                
                                                if 
                                                
                                                   
                                                      h
                                                      (
                                                      
                                                         
                                                            s
                                                         
                                                         
                                                            ′
                                                         
                                                      
                                                      )
                                                      =
                                                      T
                                                      -
                                                      1
                                                   
                                                 and 
                                                   
                                                      g
                                                      (
                                                      c
                                                      )
                                                   
                                                 is not the smallest above 
                                                   
                                                      
                                                         
                                                            c
                                                         
                                                         
                                                            ∗
                                                         
                                                      
                                                   
                                                
                                             
                                          
                                          
                                             22 
                                                
                                                
                                                   
                                                      
                                                         
                                                            s
                                                         
                                                         
                                                            ′
                                                         
                                                      
                                                      
                                                      ≔
                                                      
                                                      arg
                                                      second
                                                      
                                                         
                                                            max
                                                         
                                                         
                                                            s
                                                            ≠
                                                            
                                                               
                                                                  s
                                                               
                                                               
                                                                  ∗
                                                               
                                                            
                                                         
                                                      
                                                      
                                                         
                                                            
                                                               
                                                                  
                                                                     g
                                                                  
                                                                  
                                                                     min
                                                                  
                                                               
                                                               (
                                                               s
                                                               )
                                                               |
                                                               h
                                                               (
                                                               s
                                                               )
                                                               <
                                                               T
                                                            
                                                         
                                                      
                                                   
                                                
                                             
                                          
                                          
                                             23 
                                                
                                                
                                                   
                                                      L
                                                      
                                                      ≔
                                                      
                                                      L
                                                      ⊕
                                                      
                                                         
                                                            
                                                               c
                                                               :
                                                               
                                                                  
                                                                     s
                                                                  
                                                                  
                                                                     ∗
                                                                  
                                                               
                                                               →
                                                               
                                                                  
                                                                     s
                                                                  
                                                                  
                                                                     ′
                                                                  
                                                               
                                                            
                                                         
                                                      
                                                      ,
                                                      
                                                      sol
                                                      
                                                      ≔
                                                      
                                                      sol
                                                      +
                                                      
                                                         
                                                            
                                                               c
                                                               :
                                                               
                                                                  
                                                                     s
                                                                  
                                                                  
                                                                     ∗
                                                                  
                                                               
                                                               →
                                                               
                                                                  
                                                                     s
                                                                  
                                                                  
                                                                     ′
                                                                  
                                                               
                                                            
                                                         
                                                      
                                                   
                                                
                                             
                                          
                                          
                                             24 
                                                
                                                   
                                                      A
                                                      
                                                         uto-
                                                      R
                                                      
                                                         etrieve
                                                      
                                                      (
                                                      L
                                                      ,
                                                      sol
                                                      )
                                                   
                                                
                                             
                                          
                                          
                                             25 return
                                                
                                                sol
                                             
                                          
                                       
                                    
                                 
                              
                           

The urgent target, denoted by 
                              
                                 
                                    
                                       c
                                    
                                    
                                       ∗
                                    
                                 
                              
                           , is chosen according to the fewest containers placed above it among all targets. As the targets are those containers of the highest retrieval priority among all remaining containers in the layout, containers placed above targets are all badly placed. The number of badly placed containers placed above a target is an obvious way to measure the difficulty of retrieving this target. Let 
                              
                                 
                                    
                                       s
                                    
                                    
                                       ∗
                                    
                                 
                              
                            be the index of the stack that 
                              
                                 
                                    
                                       c
                                    
                                    
                                       ∗
                                    
                                 
                              
                            is located in, Fig. 8
                            shows an example of choosing the urgent target for the given layout.

After the urgent target 
                              
                                 
                                    
                                       c
                                    
                                    
                                       ∗
                                    
                                 
                              
                            is determined, all badly placed containers above 
                              
                                 
                                    
                                       c
                                    
                                    
                                       ∗
                                    
                                 
                              
                            are to be relocated. For each container c from the top of stack 
                              
                                 
                                    
                                       s
                                    
                                    
                                       ∗
                                    
                                 
                              
                            to the lowest container above 
                              
                                 
                                    
                                       c
                                    
                                    
                                       ∗
                                    
                                 
                              
                           , the destination stack is determined in the following way.
                              Case 1
                              Let 
                                    
                                       
                                          
                                             S
                                          
                                          
                                             1
                                          
                                       
                                    
                                  be the set of stacks that can support c, if 
                                    
                                       
                                          
                                             S
                                          
                                          
                                             1
                                          
                                       
                                       
                                       ≠
                                       
                                       ∅
                                    
                                 , the destination stack, say stack 
                                    
                                       
                                          
                                             s
                                          
                                          
                                             ′
                                          
                                       
                                    
                                 , is chosen by the minimum 
                                    
                                       
                                          
                                             g
                                          
                                          
                                             min
                                          
                                       
                                       (
                                       s
                                       )
                                    
                                  among the stacks in 
                                    
                                       
                                          
                                             S
                                          
                                          
                                             1
                                          
                                       
                                    
                                 ,
                                    
                                       
                                          
                                             
                                                S
                                             
                                             
                                                1
                                             
                                          
                                          =
                                          
                                             
                                                
                                                   s
                                                   
                                                   ≠
                                                   
                                                   
                                                      
                                                         s
                                                      
                                                      
                                                         ∗
                                                      
                                                   
                                                   |
                                                   h
                                                   (
                                                   s
                                                   )
                                                   <
                                                   T
                                                   ,
                                                   
                                                      
                                                         g
                                                      
                                                      
                                                         min
                                                      
                                                   
                                                   (
                                                   s
                                                   )
                                                   ⩾
                                                   g
                                                   (
                                                   c
                                                   )
                                                
                                             
                                          
                                          ,
                                          
                                             
                                                s
                                             
                                             
                                                ′
                                             
                                          
                                          =
                                          arg
                                          
                                             
                                                
                                                   min
                                                
                                                
                                                   s
                                                   ∈
                                                   
                                                      
                                                         S
                                                      
                                                      
                                                         1
                                                      
                                                   
                                                
                                             
                                          
                                          
                                             
                                                g
                                             
                                             
                                                min
                                             
                                          
                                          (
                                          s
                                          )
                                          .
                                       
                                    
                                 Then, we move c to stack 
                                    
                                       
                                          
                                             s
                                          
                                          
                                             ′
                                          
                                       
                                    
                                  by an FT-BG relocation 
                                    
                                       
                                          
                                             
                                                c
                                                :
                                                
                                                   
                                                      s
                                                   
                                                   
                                                      ∗
                                                   
                                                
                                                →
                                                
                                                   
                                                      s
                                                   
                                                   
                                                      ′
                                                   
                                                
                                             
                                          
                                       
                                    
                                 . If such stack does not exist (
                                    
                                       
                                          
                                             S
                                          
                                          
                                             1
                                          
                                       
                                       =
                                       ∅
                                    
                                 ), refer to Case 2.

In this case, we know that relocating c will cause additional relocations. Besides directly relocating c to a stack, we consider another possibility that relocating another container will vacate a good space for c. Check if there exists a stack 
                                    
                                       
                                          
                                             s
                                          
                                          
                                             ′
                                          
                                       
                                    
                                  and its top container 
                                    
                                       
                                          
                                             c
                                          
                                          
                                             ′
                                          
                                       
                                    
                                  that satisfy the following conditions:
                                    
                                       1.
                                       
                                          
                                             
                                                
                                                   
                                                      c
                                                   
                                                   
                                                      ′
                                                   
                                                
                                             
                                           is now well placed in stack 
                                             
                                                
                                                   
                                                      s
                                                   
                                                   
                                                      ′
                                                   
                                                
                                             
                                          ,

there exists an assistant stack 
                                             
                                                
                                                   
                                                      s
                                                   
                                                   
                                                      a
                                                   
                                                
                                             
                                           which can support 
                                             
                                                
                                                   
                                                      c
                                                   
                                                   
                                                      ′
                                                   
                                                
                                             
                                          , and


                                          c will become well placed by replacing 
                                             
                                                
                                                   
                                                      c
                                                   
                                                   
                                                      ′
                                                   
                                                
                                             
                                           in stack 
                                             
                                                
                                                   
                                                      s
                                                   
                                                   
                                                      ′
                                                   
                                                
                                             
                                          .

With the help of the assistant stack 
                                    
                                       
                                          
                                             s
                                          
                                          
                                             a
                                          
                                       
                                    
                                 , we can first relocate 
                                    
                                       
                                          
                                             c
                                          
                                          
                                             ′
                                          
                                       
                                    
                                  from stack 
                                    
                                       
                                          
                                             s
                                          
                                          
                                             ′
                                          
                                       
                                    
                                  to stack 
                                    
                                       
                                          
                                             s
                                          
                                          
                                             a
                                          
                                       
                                    
                                 , then relocate c from stack 
                                    
                                       
                                          
                                             s
                                          
                                          
                                             ∗
                                          
                                       
                                    
                                  to stack 
                                    
                                       
                                          
                                             s
                                          
                                          
                                             ′
                                          
                                       
                                    
                                 . Let 
                                    
                                       
                                          
                                             S
                                          
                                          
                                             2
                                          
                                       
                                    
                                  be the set of stacks that satisfy all conditions above,
                                    
                                       
                                          
                                             
                                                S
                                             
                                             
                                                2
                                             
                                          
                                          =
                                          
                                             
                                                
                                                   s
                                                   
                                                   ≠
                                                   
                                                   
                                                      
                                                         s
                                                      
                                                      
                                                         ∗
                                                      
                                                   
                                                   |
                                                   h
                                                   (
                                                   s
                                                   )
                                                   ⩾
                                                   1
                                                   ,
                                                   
                                                      
                                                         g
                                                      
                                                      
                                                         top
                                                      
                                                   
                                                   (
                                                   s
                                                   )
                                                   ⩽
                                                   f
                                                   (
                                                   s
                                                   )
                                                   ,
                                                   g
                                                   (
                                                   c
                                                   )
                                                   ⩽
                                                   f
                                                   (
                                                   s
                                                   )
                                                   ,
                                                   
                                                      
                                                         S
                                                      
                                                      
                                                         a
                                                      
                                                   
                                                   (
                                                   s
                                                   )
                                                   
                                                   ≠
                                                   
                                                   ∅
                                                
                                             
                                          
                                          ,
                                          
                                          where
                                          
                                          
                                             
                                                S
                                             
                                             
                                                a
                                             
                                          
                                          (
                                          
                                             
                                                s
                                             
                                             
                                                ′
                                             
                                          
                                          )
                                          =
                                          
                                             
                                                
                                                   s
                                                   
                                                   ≠
                                                   
                                                   
                                                      
                                                         s
                                                      
                                                      
                                                         ∗
                                                      
                                                   
                                                   ,
                                                   
                                                      
                                                         s
                                                      
                                                      
                                                         ′
                                                      
                                                   
                                                   |
                                                   h
                                                   (
                                                   s
                                                   )
                                                   <
                                                   T
                                                   ,
                                                   
                                                      
                                                         g
                                                      
                                                      
                                                         min
                                                      
                                                   
                                                   (
                                                   s
                                                   )
                                                   ⩾
                                                   
                                                      
                                                         g
                                                      
                                                      
                                                         top
                                                      
                                                   
                                                   (
                                                   
                                                      
                                                         s
                                                      
                                                      
                                                         ′
                                                      
                                                   
                                                   )
                                                
                                             
                                          
                                          .
                                       
                                    
                                 If 
                                    
                                       
                                          
                                             S
                                          
                                          
                                             2
                                          
                                       
                                       
                                       ≠
                                       
                                       ∅
                                    
                                 , stack 
                                    
                                       
                                          
                                             s
                                          
                                          
                                             ′
                                          
                                       
                                    
                                  is chosen by the maximum group index of their top containers. Then stack 
                                    
                                       
                                          
                                             s
                                          
                                          
                                             a
                                          
                                       
                                    
                                  is chosen by the minimum 
                                    
                                       
                                          
                                             g
                                          
                                          
                                             min
                                          
                                       
                                       (
                                       s
                                       )
                                    
                                  among all possible assistant stacks,
                                    
                                       
                                          
                                             
                                                s
                                             
                                             
                                                ′
                                             
                                          
                                          =
                                          arg
                                          
                                             
                                                
                                                   max
                                                
                                                
                                                   s
                                                   ∈
                                                   
                                                      
                                                         S
                                                      
                                                      
                                                         2
                                                      
                                                   
                                                
                                             
                                          
                                          
                                          
                                             
                                                g
                                             
                                             
                                                top
                                             
                                          
                                          (
                                          s
                                          )
                                          ,
                                          
                                          
                                             
                                                s
                                             
                                             
                                                a
                                             
                                          
                                          =
                                          arg
                                          
                                             
                                                
                                                   min
                                                
                                                
                                                   s
                                                   ∈
                                                   
                                                      
                                                         S
                                                      
                                                      
                                                         a
                                                      
                                                   
                                                   (
                                                   
                                                      
                                                         s
                                                      
                                                      
                                                         ′
                                                      
                                                   
                                                   )
                                                
                                             
                                          
                                          
                                             
                                                g
                                             
                                             
                                                min
                                             
                                          
                                          (
                                          s
                                          )
                                          .
                                       
                                    
                                 Two relocations would be executed: a GG relocation 
                                    
                                       
                                          
                                             
                                                
                                                   
                                                      c
                                                   
                                                   
                                                      ′
                                                   
                                                
                                                :
                                                
                                                   
                                                      s
                                                   
                                                   
                                                      ′
                                                   
                                                
                                                →
                                                
                                                   
                                                      s
                                                   
                                                   
                                                      a
                                                   
                                                
                                             
                                          
                                       
                                    
                                  and an FT-BG relocation 
                                    
                                       
                                          
                                             
                                                c
                                                :
                                                
                                                   
                                                      s
                                                   
                                                   
                                                      ∗
                                                   
                                                
                                                →
                                                
                                                   
                                                      s
                                                   
                                                   
                                                      ′
                                                   
                                                
                                             
                                          
                                       
                                    
                                 . Otherwise (
                                    
                                       
                                          
                                             S
                                          
                                          
                                             2
                                          
                                       
                                       =
                                       ∅
                                    
                                 ), refer to Case 3.

In this case, we have to consider FT-BB relocations for c. Let stack 
                                    
                                       
                                          
                                             s
                                          
                                          
                                             ′
                                          
                                       
                                    
                                  be the stack with the maximum 
                                    
                                       
                                          
                                             g
                                          
                                          
                                             min
                                          
                                       
                                       (
                                       s
                                       )
                                    
                                 ,
                                    
                                       
                                          
                                             
                                                s
                                             
                                             
                                                ′
                                             
                                          
                                          =
                                          arg
                                          
                                             
                                                
                                                   max
                                                
                                                
                                                   s
                                                   ≠
                                                   
                                                      
                                                         s
                                                      
                                                      
                                                         ∗
                                                      
                                                   
                                                
                                             
                                          
                                          
                                             
                                                
                                                   
                                                      
                                                         g
                                                      
                                                      
                                                         min
                                                      
                                                   
                                                   (
                                                   s
                                                   )
                                                   |
                                                   h
                                                   (
                                                   s
                                                   )
                                                   <
                                                   T
                                                
                                             
                                          
                                          .
                                       
                                    
                                 Here we perform an additional check, that if stack 
                                    
                                       
                                          
                                             s
                                          
                                          
                                             ′
                                          
                                       
                                    
                                  satisfies the following special conditions:
                                    
                                       1.
                                       
                                          
                                             
                                                h
                                                (
                                                
                                                   
                                                      s
                                                   
                                                   
                                                      ′
                                                   
                                                
                                                )
                                                =
                                                T
                                                -
                                                1
                                             
                                          , and


                                          
                                             
                                                g
                                                (
                                                c
                                                )
                                             
                                           is not the smallest among all containers above 
                                             
                                                
                                                   
                                                      c
                                                   
                                                   
                                                      ∗
                                                   
                                                
                                             
                                          .

If the conditions are satisfied, the destination stack is reselected with the second maximum 
                                    
                                       
                                          
                                             g
                                          
                                          
                                             min
                                          
                                       
                                       (
                                       s
                                       )
                                    
                                  instead of 
                                    
                                       
                                          
                                             s
                                          
                                          
                                             ′
                                          
                                       
                                    
                                 , denoted by 
                                    
                                       
                                          
                                             s
                                          
                                          
                                             ″
                                          
                                       
                                    
                                 , then an FT-BB relocation 
                                    
                                       〈
                                       c
                                       :
                                       
                                          
                                             s
                                          
                                          
                                             ∗
                                          
                                       
                                       →
                                       
                                          
                                             s
                                          
                                          
                                             ″
                                          
                                       
                                       〉
                                    
                                  is carried out. Otherwise, refer to Case 4.

In this case, stack 
                                    
                                       
                                          
                                             s
                                          
                                          
                                             ′
                                          
                                       
                                    
                                 , the stack with the maximum 
                                    
                                       
                                          
                                             g
                                          
                                          
                                             min
                                          
                                       
                                       (
                                       s
                                       )
                                    
                                 , is determined as the destination stack for c, and an FT-BB relocation 
                                    
                                       
                                          
                                             
                                                c
                                                :
                                                
                                                   
                                                      s
                                                   
                                                   
                                                      ∗
                                                   
                                                
                                                →
                                                
                                                   
                                                      s
                                                   
                                                   
                                                      ′
                                                   
                                                
                                             
                                          
                                       
                                    
                                  is then carried out.


                                 Fig. 9
                                  shows examples for the four cases of determining the destination stack.

In the first example, container c can be supported by stack 4, hence stack 4 is chosen as the destination stack for relocating c.

In the second example, no stack is able to support c in this case. However, we find the top container 
                                    
                                       
                                          
                                             c
                                          
                                          
                                             ′
                                          
                                       
                                    
                                  of stack 
                                    
                                       
                                          
                                             s
                                          
                                          
                                             ′
                                          
                                       
                                       =
                                       2
                                    
                                  is now well placed, stack 
                                    
                                       
                                          
                                             s
                                          
                                          
                                             a
                                          
                                       
                                       =
                                       4
                                    
                                  can support 
                                    
                                       
                                          
                                             c
                                          
                                          
                                             ′
                                          
                                       
                                    
                                 , and c will become well placed by replacing 
                                    
                                       
                                          
                                             c
                                          
                                          
                                             ′
                                          
                                       
                                    
                                  in stack 
                                    
                                       
                                          
                                             s
                                          
                                          
                                             ′
                                          
                                       
                                    
                                 . Therefore, in this case, a GG relocation 
                                    
                                       
                                          
                                             
                                                3
                                                :
                                                2
                                                →
                                                4
                                             
                                          
                                       
                                    
                                  and an FT-BG relocation 
                                    
                                       
                                          
                                             
                                                4
                                                :
                                                1
                                                →
                                                2
                                             
                                          
                                       
                                    
                                  are carried out.

In the third example, firstly let 
                                    
                                       
                                          
                                             s
                                          
                                          
                                             ′
                                          
                                       
                                       =
                                       4
                                    
                                  since 
                                    
                                       
                                          
                                             g
                                          
                                          
                                             min
                                          
                                       
                                       (
                                       4
                                       )
                                       =
                                       3
                                    
                                  is the largest among all stacks except stack 
                                    
                                       
                                          
                                             s
                                          
                                          
                                             ∗
                                          
                                       
                                    
                                 . We find that 
                                    
                                       h
                                       (
                                       4
                                       )
                                       =
                                       T
                                       -
                                       1
                                    
                                  and 
                                    
                                       g
                                       (
                                       c
                                       )
                                       =
                                       4
                                    
                                  is not the smallest among all containers above 
                                    
                                       
                                          
                                             c
                                          
                                          
                                             ∗
                                          
                                       
                                    
                                 . Both conditions are satisfied, so that we reselect stack 2 as the destination stack.

In the fourth example, let 
                                    
                                       
                                          
                                             s
                                          
                                          
                                             ′
                                          
                                       
                                       =
                                       4
                                    
                                  similar to the third example. The two conditions are not satisfied at the same time, therefore we take stack 4 as the destination stack.

The gap utilization process is carried out before every X–Good (Good–Good or Bad–Good) relocation, with the purpose of fully utilizing the gap of the minimum group index of the destination stack of the relocation.

If the destination stack for c is determined in Case 3 or Case 4, the Bad–Bad relocation 
                              
                                 
                                    
                                       
                                          c
                                          :
                                          
                                             
                                                s
                                             
                                             
                                                ∗
                                             
                                          
                                          →
                                          
                                             
                                                s
                                             
                                             
                                                ″
                                             
                                          
                                       
                                    
                                 
                              
                            or 
                              
                                 
                                    
                                       
                                          c
                                          :
                                          
                                             
                                                s
                                             
                                             
                                                ∗
                                             
                                          
                                          →
                                          
                                             
                                                s
                                             
                                             
                                                ′
                                             
                                          
                                       
                                    
                                 
                              
                            is executed directly. Otherwise in the previous two cases, the relocation 
                              
                                 
                                    
                                       
                                          c
                                          :
                                          
                                             
                                                s
                                             
                                             
                                                ∗
                                             
                                          
                                          →
                                          
                                             
                                                s
                                             
                                             
                                                ′
                                             
                                          
                                       
                                    
                                 
                              
                            determined in Case 1, 
                              
                                 
                                    
                                       
                                          
                                             
                                                c
                                             
                                             
                                                ′
                                             
                                          
                                          :
                                          
                                             
                                                s
                                             
                                             
                                                ′
                                             
                                          
                                          →
                                          
                                             
                                                s
                                             
                                             
                                                a
                                             
                                          
                                       
                                    
                                 
                              
                            and 
                              
                                 
                                    
                                       
                                          c
                                          :
                                          
                                             
                                                s
                                             
                                             
                                                ∗
                                             
                                          
                                          →
                                          
                                             
                                                s
                                             
                                             
                                                ′
                                             
                                          
                                       
                                    
                                 
                              
                            in Case 2 are all X–Good (Good–Good or Bad–Good) relocations.

Before executing each X–Good relocation determined in Cases 1 and 2, we try to find additional BG relocations from other unrelated stacks, to utilize the gap of the minimum group index in the destination stack of the determined X–Good relocation.

For Case 1, before the FT-BG relocation 
                              
                                 
                                    
                                       
                                          c
                                          :
                                          
                                             
                                                s
                                             
                                             
                                                ∗
                                             
                                          
                                          →
                                          
                                             
                                                s
                                             
                                             
                                                ′
                                             
                                          
                                       
                                    
                                 
                              
                            is executed, we try to find a stack 
                              
                                 
                                    
                                       s
                                    
                                    
                                       3
                                    
                                 
                              
                            (
                              
                                 
                                    
                                       s
                                    
                                    
                                       3
                                    
                                 
                                 
                                 ≠
                                 
                                 
                                    
                                       s
                                    
                                    
                                       ∗
                                    
                                 
                                 ,
                                 
                                    
                                       s
                                    
                                    
                                       ′
                                    
                                 
                              
                           ) with its top container 
                              
                                 
                                    
                                       c
                                    
                                    
                                       3
                                    
                                 
                              
                            satisfying the following conditions:
                              
                                 1.
                                 
                                    
                                       
                                          h
                                          (
                                          
                                             
                                                s
                                             
                                             
                                                ′
                                             
                                          
                                          )
                                          ⩽
                                          T
                                          -
                                          2
                                       
                                    ,


                                    
                                       
                                          
                                             
                                                c
                                             
                                             
                                                3
                                             
                                          
                                       
                                     is badly placed in stack 
                                       
                                          
                                             
                                                s
                                             
                                             
                                                3
                                             
                                          
                                       
                                    , and


                                    
                                       
                                          g
                                          (
                                          c
                                          )
                                          ⩽
                                          g
                                          (
                                          
                                             
                                                c
                                             
                                             
                                                3
                                             
                                          
                                          )
                                          ⩽
                                          
                                             
                                                g
                                             
                                             
                                                min
                                             
                                          
                                          (
                                          
                                             
                                                s
                                             
                                             
                                                ′
                                             
                                          
                                          )
                                       
                                    .

If more than one stack 
                              
                                 
                                    
                                       s
                                    
                                    
                                       3
                                    
                                 
                              
                            satisfying these conditions, the one with the maximum 
                              
                                 g
                                 (
                                 
                                    
                                       c
                                    
                                    
                                       3
                                    
                                 
                                 )
                              
                            is chosen. This gap utilization process repeats until 
                              
                                 h
                                 (
                                 
                                    
                                       s
                                    
                                    
                                       ′
                                    
                                 
                                 )
                                 =
                                 T
                                 -
                                 1
                              
                           , or no such BG relocation can be found. After that, relocation 
                              
                                 
                                    
                                       
                                          c
                                          :
                                          
                                             
                                                s
                                             
                                             
                                                ∗
                                             
                                          
                                          →
                                          
                                             
                                                s
                                             
                                             
                                                ′
                                             
                                          
                                       
                                    
                                 
                              
                            is finally carried out. For Case 2, the gap utilization process is carried out before each of the two relocations determined, the stack 
                              
                                 
                                    
                                       s
                                    
                                    
                                       3
                                    
                                 
                              
                            (
                              
                                 
                                    
                                       s
                                    
                                    
                                       3
                                    
                                 
                                 
                                 ≠
                                 
                                 
                                    
                                       s
                                    
                                    
                                       ∗
                                    
                                 
                                 ,
                                 
                                    
                                       s
                                    
                                    
                                       ′
                                    
                                 
                                 ,
                                 
                                    
                                       s
                                    
                                    
                                       a
                                    
                                 
                              
                           ) is selected by the same criteria. Fig. 10
                            illustrates an example of the gap utilization process.
                              Algorithm 4
                              Gap utilization 
                                    
                                       
                                          
                                          
                                             
                                                Gap-Utilize
                                                   
                                                      
                                                         (
                                                         L
                                                         ,
                                                         sol
                                                         ,
                                                         
                                                            
                                                               
                                                                  c
                                                                  :
                                                                  
                                                                     
                                                                        s
                                                                     
                                                                     
                                                                        1
                                                                     
                                                                  
                                                                  →
                                                                  
                                                                     
                                                                        s
                                                                     
                                                                     
                                                                        2
                                                                     
                                                                  
                                                               
                                                            
                                                         
                                                         )
                                                      
                                                   
                                                
                                             
                                             
                                                1 while 
                                                   
                                                      
                                                         h
                                                         (
                                                         
                                                            
                                                               s
                                                            
                                                            
                                                               2
                                                            
                                                         
                                                         )
                                                         ⩽
                                                         T
                                                         -
                                                         2
                                                      
                                                   
                                                
                                             
                                             
                                                2 
                                                   
                                                      
                                                         S
                                                         
                                                         ≔
                                                         
                                                         
                                                            
                                                               
                                                                  s
                                                                  
                                                                  ≠
                                                                  
                                                                  
                                                                     
                                                                        s
                                                                     
                                                                     
                                                                        1
                                                                     
                                                                  
                                                                  ,
                                                                  
                                                                     
                                                                        s
                                                                     
                                                                     
                                                                        2
                                                                     
                                                                  
                                                                  |
                                                                  h
                                                                  (
                                                                  s
                                                                  )
                                                                  >
                                                                  1
                                                                  ,
                                                                  
                                                                     
                                                                        g
                                                                     
                                                                     
                                                                        top
                                                                     
                                                                  
                                                                  (
                                                                  s
                                                                  )
                                                                  >
                                                                  f
                                                                  (
                                                                  s
                                                                  )
                                                                  ,
                                                                  g
                                                                  (
                                                                  c
                                                                  )
                                                                  ⩽
                                                                  
                                                                     
                                                                        g
                                                                     
                                                                     
                                                                        top
                                                                     
                                                                  
                                                                  (
                                                                  s
                                                                  )
                                                                  ⩽
                                                                  
                                                                     
                                                                        g
                                                                     
                                                                     
                                                                        min
                                                                     
                                                                  
                                                                  (
                                                                  
                                                                     
                                                                        s
                                                                     
                                                                     
                                                                        2
                                                                     
                                                                  
                                                                  )
                                                               
                                                            
                                                         
                                                      
                                                   
                                                
                                             
                                             
                                                3 
                                                   if 
                                                   
                                                      
                                                         S
                                                         =
                                                         ∅
                                                      
                                                   
                                                
                                             
                                             
                                                4 
                                                   break
                                                
                                             
                                             
                                                5 
                                                   
                                                      
                                                         
                                                            
                                                               s
                                                            
                                                            
                                                               3
                                                            
                                                         
                                                         
                                                         ≔
                                                         
                                                         arg
                                                         
                                                            
                                                               max
                                                            
                                                            
                                                               s
                                                               ∈
                                                               S
                                                            
                                                         
                                                         
                                                         
                                                            
                                                               g
                                                            
                                                            
                                                               top
                                                            
                                                         
                                                         (
                                                         s
                                                         )
                                                      
                                                   
                                                
                                             
                                             
                                                6 
                                                   
                                                      
                                                         L
                                                         
                                                         ≔
                                                         
                                                         L
                                                         ⊕
                                                         
                                                            
                                                               
                                                                  c
                                                                  :
                                                                  
                                                                     
                                                                        s
                                                                     
                                                                     
                                                                        3
                                                                     
                                                                  
                                                                  →
                                                                  
                                                                     
                                                                        s
                                                                     
                                                                     
                                                                        2
                                                                     
                                                                  
                                                               
                                                            
                                                         
                                                         ,
                                                         
                                                         sol
                                                         
                                                         ≔
                                                         
                                                         sol
                                                         +
                                                         
                                                            
                                                               
                                                                  c
                                                                  :
                                                                  
                                                                     
                                                                        s
                                                                     
                                                                     
                                                                        3
                                                                     
                                                                  
                                                                  →
                                                                  
                                                                     
                                                                        s
                                                                     
                                                                     
                                                                        2
                                                                     
                                                                  
                                                               
                                                            
                                                         
                                                      
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                              

It is worth mentioning that when creating the candidate relocation list 
                              
                                 reloList
                              
                           , we add an additional relocation to the list (c.f.line 17 in Algorithm 2). The purpose of this action is to resolve the outer-sync issue between the middle and the bottom levels. For the current node of the tree search, under the rules described in Section 4.3.2, the first relocation can be determined.

The attractiveness of each leaf node is evaluated by predicting the number of relocations required to clear the corresponding layout, by the evaluation heuristic. However, the candidate relocation list 
                              
                                 reloList
                              
                           , which is first set up by limited number of relocations from the six categories, may not include the next relocation determined in the evaluation heuristic. Hence, the solution found by the evaluation heuristic may not be achieved by only attempting the limited number of candidate relocations.

To overcome this drawback, we add the next executed relocation provided by the evaluation heuristic to the candidate relocation list reloList, to maintain the consistency between the middle and the bottom levels.

After a complete solution is generated, the solution is then condensed by a solution condensation approach (c.f. line 8 in Algorithm 1). Because it is possible that relocations in a solution can be combined without affecting the whole solution, the solution condensation approach aims to eliminate unnecessary relocations to further improve the quality of the solution obtained.

For every relocation pair, for example 
                              
                                 
                                    
                                       
                                          c
                                          :
                                          
                                             
                                                s
                                             
                                             
                                                1
                                             
                                          
                                          →
                                          
                                             
                                                s
                                             
                                             
                                                2
                                             
                                          
                                       
                                    
                                 
                              
                            and 
                              
                                 
                                    
                                       
                                          c
                                          :
                                          
                                             
                                                s
                                             
                                             
                                                2
                                             
                                          
                                          →
                                          
                                             
                                                s
                                             
                                             
                                                3
                                             
                                          
                                       
                                    
                                 
                              
                           , moving the same relocated container c, we check whether:
                              
                                 1.
                                 
                                    c stays in stack 
                                       
                                          
                                             
                                                s
                                             
                                             
                                                2
                                             
                                          
                                       
                                     between the two relocations,

there is no container being moved out from stack 
                                       
                                          
                                             
                                                s
                                             
                                             
                                                3
                                             
                                          
                                       
                                    , and

there is no container being relocated to stack 
                                       
                                          
                                             
                                                s
                                             
                                             
                                                3
                                             
                                          
                                       
                                    .

If the conditions are all satisfied, then we replace the former relocation by a combined relocation 
                              
                                 
                                    
                                       
                                          c
                                          :
                                          
                                             
                                                s
                                             
                                             
                                                1
                                             
                                          
                                          →
                                          
                                             
                                                s
                                             
                                             
                                                3
                                             
                                          
                                       
                                    
                                 
                              
                            and remove the second relocation of the relocation pair. This relocation combination process repeats until no such relocation pair can be found.

The condensed solution is finally used in the look-ahead procedure, for evaluating the attractiveness of the corresponding leaf node.

Our experiments are carried out on four data sets: CVS, CVS-MSH, BF and ZHU. Therein, BF instances are grouping instances, while other sets of instances are simplex ones.

The look-ahead depth is limited by parameter D, and the number of child nodes for each tree node are determined by six parameters, 
                        
                           
                              
                                 n
                              
                              
                                 FT
                                 -
                                 BG
                              
                           
                           ,
                           
                           
                              
                                 n
                              
                              
                                 NF
                                 -
                                 BG
                              
                           
                           ,
                           
                           
                              
                                 n
                              
                              
                                 FT
                                 -
                                 BB
                              
                           
                           ,
                           
                           
                              
                                 n
                              
                              
                                 NF
                                 -
                                 BB
                              
                           
                           ,
                           
                           
                              
                                 n
                              
                              
                                 GG
                              
                           
                        
                      and 
                        
                           
                              
                                 n
                              
                              
                                 GB
                              
                           
                        
                     , corresponding to the numbers of child nodes generated from the six categories of relocations, respectively. We set the parameters 
                        
                           
                              
                                 n
                              
                              
                                 FT
                                 -
                                 BG
                              
                           
                           =
                           
                              
                                 n
                              
                              
                                 NF
                                 -
                                 BG
                              
                           
                           =
                           5
                        
                     , 
                        
                           
                              
                                 n
                              
                              
                                 FT
                                 -
                                 BB
                              
                           
                           =
                           
                              
                                 n
                              
                              
                                 NF
                                 -
                                 BB
                              
                           
                           =
                           3
                        
                     , 
                        
                           
                              
                                 n
                              
                              
                                 GG
                              
                           
                           =
                           
                              
                                 n
                              
                              
                                 GB
                              
                           
                           =
                           1
                        
                     , and run our approach twice with 
                        
                           D
                           =
                           3
                        
                      and 
                        
                           D
                           =
                           4
                        
                     .

For CVS, CVS-MSH and BF instances, there is no study on finding optimal solutions for them. We reimplement IDA*-UM, the improved version of IDA*-U proposed by Zhu et al. (2012), and run experiments on these three data sets with a runtime limitation of one second. IDA*-UM is able to find very high-quality solutions and tighter lower bounds for the U-CRP.


                        Caserta et al. (2011) generated 21 groups of simplex instances, each group consisting of 40 instances. These groups are labeled CVS K-S; K and S represent the number of containers stacked in each stack and the number of stacks in the initial layout, respectively. It is worth noting that in CVS instances, stacks are not constrained in height. Since in reality, the height of the stack is constrained by the height of the crane, CVS-MSH (maximum stack height) instances reproduce CVS instances by imposing a height limitation of K plus 2.

The comparison results are shown in Tables 1 and 2
                        
                        . The columns under heading F&B list the results of the tree search procedure proposed by Forster and Bortfeldt (2012b), except group CVS 10-10 for which the results are provided by Caserta and Voß (2009a, 2009c). The columns under heading IDA*-UM give the average best lower bound found, average number of relocations and the time used by IDA*-UM, with a one-second runtime limitation. The columns relo and time show the average number of relocations of the solutions obtained and the average runtime (in seconds) used by different approaches, respectively.


                        Bortfeldt and Forster (2012) also introduced 32 groups of instances for the CPMP, each group consisting of 20 instances. Since the instance are of the same format in the CPMP and the CRP, BF instances can be used as grouping instances directly in the CRP. In BF instances, the bay consists of either 16 or 20 stacks and has either 5 or 8 tiers. The number of containers in the initial layouts N is either 60% or 80% of the bay size 
                           
                              S
                              ×
                              T
                           
                        , and the number of retrieval priorities G is either 20% or 40% of the number of containers N.


                        Table 3
                         gives the results for all 32 groups of BF instances, the column headings in the table have the same meaning as Tables 1 and 2. IDA*-UM here is slightly amended by adopting the urgent target determination method described in Section 4.3.1, in order to handle the situation of grouped containers.

Our GLAH outperforms IDA*-UM and F&B (the tree search procedure) when 
                           
                              D
                              =
                              3
                           
                        . And we find that with the increment of the look-ahead depth D, solutions are improved, while the runnsimplexing time will increase several times over.


                        Zhu et al. (2012) introduced 25 groups of simplex instances, with bay size 
                           
                              S
                              ∈
                              [
                              6
                              ,
                              10
                              ]
                           
                         and 
                           
                              T
                              ∈
                              [
                              3
                              ,
                              7
                              ]
                           
                        . Each group of size 
                           
                              S
                              ×
                              T
                           
                         can be regarded as the combination of T subgroups with different 
                           
                              N
                              ∈
                              [
                              S
                              ×
                              T
                              -
                              T
                              ,
                              S
                              ×
                              T
                              -
                              1
                              ]
                           
                        ; there are 100 instances in every subgroup; hence the total quantity is 
                           
                              100
                              ×
                              T
                           
                         for each group. Utilizations of the initial layouts of ZHU instances are very high, in comparison with BF instances. The authors solved both the restricted and unrestricted variants of the CRP, by two IDA* algorithms, which are referred to as IDA*-R and IDA*-U, respectively.

IDA*-R solves the restricted variant of the CRP, the R-CRP, to optimally for a majority of the instances, owing to a very strong lower bound estimation method for the R-CRP. However, for the unrestricted variant, the U-CRP, due to the enlargement of the solution space and the lack of strong lower bound estimation, IDA*-U is not able to provide high-quality solutions. For the U-CRP, by introducing a visiting record map to IDA*-U, Zhu et al. (2012)
                        developed an improved algorithm, namely IDA*-UM, which outperforms IDA*-U. Furthermore, by adopting an over-counted lower bound, which would accelerate the algorithm while pruning search branches unduly, another algorithm called IDA*-UM3 was also proposed.


                        Table 4
                         compares the total number of relocations obtained by the IDA* algorithms and our GLAH, together with the best known solutions. The columns under the heading Best Known is provided by Zhu et al. (2012), which gives the best known lower bound and the best known solution, involving a long-period experiment of exploring up to 
                           
                              
                                 
                                    2
                                 
                                 
                                    30
                                 
                              
                           
                         nodes by IDA*-U. The columns relo and time show the total number of relocations of the solutions obtained and the runtime (in seconds) by different approaches, respectively.

This table is divided into three parts: Group 1–4, Groups 5–17 and Groups 18–25. In the first part, our GLAH and the IDA* algorithms are both able to solve the instances to optimality. In the third part, our GLAH provides better results than the best known solution, even when 
                           
                              D
                              =
                              3
                           
                        . The values highlighted in bold in the latter two parts are the superior values comparing our GLAH against the IDA* algorithms.

As the IDA* algorithms aim to find the optimality, through exploring the whole search space and pruning unpromising branches away, for small-scale instances our GLAH does not outperform either the best known solutions or the IDA* algorithms. However, for large-scale instances, in which the solution space is extremely large and the pruning process is not sufficiently efficient, the IDA* algorithms spend much time searching the upper levels of the solution space so that its efficiency is low.

Our GLAH is a greedy based framework with a look-ahead procedure in which only a subset of promising branches is involved, following the belief that this provides a strong possibility of obtaining high-quality solutions. This idea works on large-scale instances, thus, our results outperform the best known solutions in the third part of Table 4.

@&#CONCLUSIONS@&#

From the comparison of the experimental results, the proposed GLAH is shown to provide better solutions for most of the existing instances, especially for large-scale instances. The GLAH is a very efficient approach for finding an efficient solution, although it cannot guarantee optimality even if given infinite runtime.

The efficiency of the look-ahead procedure is mainly affected by the depth and width of the tree search. However, the increments in the time consumed by increasing tree search depth are exponential, and hence we need to limit the look-ahead depth depending on the scale of the instance.

At the start of the whole process, the layout obviously has more containers that would yield more possible successor layouts. Thus, the GLAH should put more emphasis on the early period than on the later period. Such improvements will be studied in future work.

@&#REFERENCES@&#

