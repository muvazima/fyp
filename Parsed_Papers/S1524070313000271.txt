@&#MAIN-TITLE@&#Optimal crowd editing

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           An original crowd scene editing method is proposed.


                        
                        
                           
                           Our approach is based on optimal control theory and adjoint methods.


                        
                        
                           
                           We use a dynamic crowd model and user input constraints.


                        
                        
                           
                           The method applies to any differentiable crowd model.


                        
                        
                           
                           The method applies to any crowd’s state related constraints.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Crowd editing

Crowd simulation

Agent steering

Control

Adjoint methods

Optimal control strategy

@&#ABSTRACT@&#


               
               
                  Simulating realistic crowd behaviors is a challenging problem in computer graphics. Yet, several satisfying simulation models exhibiting natural pedestrians or group emerging behaviors exist. Choosing among these model generally depends on the considered crowd density or the topology of the environment. Conversely, achieving a user-desired kinematic or dynamic pattern at a given instant of the simulation reveals to be much more tedious. In this paper, a novel generic control methodology is proposed to solve this crowd editing issue. Our method relies on an adjoint formulation of the underlying optimization procedure. It is independent to a certain extent of the choice of the simulation model, and is designed to handle several forms of constraints. A variety of examples attesting the benefits of our approach are proposed, along with quantitative performance measures.
               
            

@&#INTRODUCTION@&#

Animating a crowd of thousand of individuals is a challenging task. Most of the time, human crowds exhibit very subtle and specific patterns. The variability of crowd dynamics and behaviors is a consequence of the diversity of the persons inside it (age, sex, social and psychological attributes), as well as the spatial configuration of obstacles and lanes. Nevertheless, several models exist, that can either rely on per-individual strategies, usually grouped under the denomination of steering behaviors or microscopic models, or in contrast on a global definition of the crowd flow and properties: the macroscopic models. Assessing the quality of those models is usually difficult, since several criteria can be evaluated: computation performances, presence of emerging behaviors, individual trajectories respecting the least effort principles, etc. In the context of civil engineering, those models can provide a lot of information about potentially dangerous areas or bottlenecks where problems are likely to occur. The context of graphics is slightly different since animators usually have a precise idea of what they want to show, which may differ from what is actually given by the simulation models. A possibility is then to tweak the different parameters of the used model, in a trial-and-error fashion, until the simulation is acceptable. It is easy to understand that this strategy, depicted in Fig. 1
                     a, is likely to fail for most simulation models regarding the complexity of the dynamics inherent to the crowd if the animator tries to obtain a desired kinematic or dynamic pattern at a given time in the simulation process. This calls for automatic procedures that can reach those constraints while preserving the specificities of the crowd models. This notion of controlling a crowd is investigated in this paper. In practice, because of the discrete nature of pedestrians (and thus the highly discontinuous nature of the solution space), the use of simple gradient based methods yields some difficulties related to collision handling between individuals. This issue has already been encountered in the control of multibody dynamics in [33], where the authors suggest to select a solution from a set of samples (computed on-line on a cluster of machines). In this paper, we propose a combination of a gradient based method along with an heuristic to explore several distinct paths in the solution space.

In the presented article, the control of a crowd is seen as an editing process, in the sense that the trajectories produced by the simulation model are deformed to achieve users constraints (Fig. 1b) while minimizing the discrepancy with the simulation model’s dynamics. The types of constraints can be twofold: (i) per-individual constraints, meaning that the user can specify its own properties related to pedestrians (like positions, velocities or even shape-related information) or (ii) macroscopic constraints, such as respecting a given velocity field or higher order dynamical information, like the divergence or rotational components of a velocity field. Those two types of constraints are illustrated in the rest of the paper. Our optimization process uses recipes from optimal control of variational models by formulating the problem with the adjoint theory [16]. It is virtually adaptable to any kind of simulation model provided that it can be analytically described as a variational system. This is usually the case with crowd dynamics model, but not anymore if one considers cognitive modeling of pedestrian steering behaviors. Also, the quality of the produced animation strongly depends on both the realism of the controlled model and on the nature of the constraint imposed by the animator. In that sense our method augments the latent qualities of a given crowd model but is not meant to produce systematically more realistic simulations than advanced techniques. In other words, the resulting scene after control using the model and the users constraints is optimal, but not the model which basically stays the same.

First, a presentation of the related work is performed in Section 2, and an overview of the control process is given in Section 3. The optimal control of dynamical system, along with its requirements are then presented (Section 4). Algorithmic aspects of this control will notably be explained in this part. In Section 5, a variety of control are applied on a generic dynamic crowd model to illustrate the power of our method and quantitative convergence results are also presented, before a discussion and a conclusion end the paper (Section 7).

@&#RELATED WORK@&#

We first begin by giving the main approaches of crowd simulation, which we dissociate from the idea of crowd control. We also discuss other control works such as fluid ones.

Simulating crowd of individuals has drawn a lot of attention over the past decades for the potential interests of computer graphics, but also for safety engineering or robotics applications. The different models are commonly divided into two categories: microscopic and macroscopic. Microscopic approaches tend to model member of the crowds as agents with specific behaviors. Sophisticated behavior models seek autonomous agents endowed with goals and specific attributes [20,30], but for a somehow limited number of individuals. Oppositely, their motions can be the result of simple laws, such as in the seminal work of Reynolds on flocking [27]. Designing and tuning these laws is now known as the steering problem, for which several solutions exist thanks to different strategies; for examples interacting particles under psychosocial forces [8], reproducing experimental observations [23], principle of least effort [6] or vision based strategies [22]. The most recent methods allow to simulate large scale crowds at interactive framerates with convincing emergent behaviors of the groups. Another recent trend is to capture from the real world heterogeneous behaviors of pedestrians to add variety in the simulation and possibly realism. This is the case in [14,15], where authors capture individual trajectories of pedestrians and reuse them in an online fashion. Conversely, macroscopic models generally consider the crowd as a whole and model its dynamic by means of continuum mechanics equations, allowing analogies with the domain of computational fluid dynamics [10,32,26,21]. This type of modeling works well with dense crowds where the weight of individual decisions is somehow weakened, but fails to describe realistic interpersonal collision avoidance behaviors or heterogeneous crowds with individuals exhibiting distinct goals or motivations.

Controlling a crowd to achieve a given effect is a rather difficult task, mostly because the only control parameters are those of the simulation model, which are generally not designed for it. Ulicny and colleagues [34] are the first to describe an interactive tool to design crowd scenes in an intuitive manner using a brush metaphor. With regards to the control of the pedestrian trajectories, existing solutions usually assume that individuals are driven by a given steering strategy combined with an ambient velocity field which is usually referred to as a flow or navigation field [3,19,11,24,25]. In [11], Jin and colleagues define those fields as a combination of radial basis functions defined by the user. Park [24] defines control flows attached to special particles which motions can be keyframed during the simulation. Patil et al. define their navigation field with a sketch based interface or by extracting flow fields from videos, in a way similar to [4]. Other approaches consider the spatial relationships of the crowd members (coded as a graph) as an important feature to preserve, then use spectral interpolation methods [13] or mesh deformation techniques [31,9] to edit existing crowd animations.

In a sense, our method can be related to previous works on control techniques applied to fluid animation [5,18,28], more specifically from the work of McNamara and his colleagues [18] which use and adjoint method to compute the simulation gradients. In [36], Wojtan and colleagues adapted the idea of the adjoint method to the control of particles, in the specific context of flocking applications using in practice linearized models associated with implicit schemes.

Our contribution mainly differs from these works in the fact that any user constraints, either defined at a particle level or on higher representation quantities (i.e. eulerian density, velocity, vorticity, etc.) can be given to the system whatever the controlled model, and automatically adapts the adjoint procedure, which tightly couples the crowd model and the constraints. Hence, it allows to augment existing simulation models with very various inputs, provided the model is differentiable by the state it drives as described in the following Sections.

Our crowd control system requires three major ingredients: (i) a simulation model, which describes how the crowd is moving in a deterministic fashion, (ii) constraints provided by the animator and (iii) the control process which combines the two previous information.

We refer to the dynamical model used for crowd simulation as a unified model 
                           
                              M
                           
                         driving the state of the crowd 
                           
                              X
                              ∈
                              
                                 
                                    R
                                 
                                 
                                    
                                       
                                          N
                                       
                                       
                                          X
                                       
                                    
                                 
                              
                           
                        , which evolution is governed by the following partial differential equation:
                           
                              (1)
                              
                                 
                                    
                                       ∂
                                       X
                                    
                                    
                                       ∂
                                       t
                                    
                                 
                                 +
                                 M
                                 (
                                 X
                                 )
                                 =
                                 0
                                 ,
                              
                           
                        
                        
                           
                              (2)
                              
                                 with
                                 :
                                 X
                                 (
                                 
                                    
                                       t
                                    
                                    
                                       0
                                    
                                 
                                 )
                                 =
                                 
                                    
                                       X
                                    
                                    
                                       0
                                    
                                 
                                 .
                              
                           
                        However, a crowd can exhibit different scales of dynamic. One can chose to control only large scales, potentially governed by continuum equations, and leading to express the model in the Eulerian space. But people also interact to each other, at least to avoid collision, involving a Lagrangian expression of the model. The more convenient way to gather these dynamics into a unified model is to express them in the Lagrangian space. In this case, considering N pedestrians whose individual state is composed of q quantities (such as position and/or velocity), we have N
                        
                           X
                        
                        =
                        Nq.

This choice also requires to express the large scale model, generally continuous, in the Lagrangian domain. The projection of the continuum dynamic on the Lagrangian space can be done by using differentiable kernel functions (as in [21]), such that common operators (gradient, laplacian, etc.) applied on continuum quantities can be expressed in the Lagrangian model. As well as Lagrangian interactions, this amounts to simply consider weighted relations between pedestrians. These relations can also be used to express Eulerian quantities (i.e. continuous, or related to the environment) with respect to Lagrangian data over an Eulerian grid. A good example is provided by the density, which can be computed as the convolution of a Gaussian kernel and Dirac centered on the pedestrians positions. These techniques are used to formalize the constraints in Section 4 when they are related to the environment.

Control aims at automatically defining the best control parameters 
                           
                              U
                              ∈
                              
                                 
                                    R
                                 
                                 
                                    
                                       
                                          N
                                       
                                       
                                          U
                                       
                                    
                                 
                              
                           
                         of a system. The optimality of these parameters depends on the difference between the state trajectory produced by the system and one or multiple external constraints Y. This difference is evaluated thanks to a “sensor” which thanks to an observation operator is able to make the translation 
                           
                              Y
                              =
                              H
                              (
                              X
                              )
                           
                        . The resulting error is processed by a controller which will provide corrected system parameters (i.e. U) and, thanks to system’s integration, a corrected trajectory X(t). Fig. 2
                         shows an overview of the control policy.

This paper focuses on the controller which is indeed of great importance in this kind of approach. In our case it is an optimal controller based on variational data assimilation using adjoint formulation.

Unlike lot of engineering control applications, the control loop is not expressed in the frequency domain, and X(t) cannot be determined by one-pass analytical means. The reason is the specificity of the system which contains time integration of the model. To deal with this specificity, we use optimal control theory recipes as explained in the next Section.

In this section, we will now explain how the controller is able to find optimal parameters for the crowd model 
                        
                           M
                        
                     .


                        The model of crowd can be defined as in Eq. (1), which integration produces a state trajectory X(t). In order to give the model an opportunity to fulfill input constraints Y, it is necessary to introduce a degree of freedom in the model. This can be accomplished by adding a term in charge of capturing the model deviation, leading to the new following equation:
                           
                              (3)
                              
                                 
                                    
                                       ∂
                                       X
                                    
                                    
                                       ∂
                                       t
                                    
                                 
                                 +
                                 M
                                 (
                                 X
                                 )
                                 =
                                 
                                    
                                       ∊
                                    
                                    
                                       M
                                    
                                 
                                 (
                                 t
                                 )
                                 ,
                              
                           
                        with 
                           
                              
                                 
                                    ∊
                                 
                                 
                                    M
                                 
                              
                              ∈
                              
                                 
                                    R
                                 
                                 
                                    
                                       
                                          N
                                       
                                       
                                          X
                                       
                                    
                                 
                              
                           
                         being called the model’s error. One can notice this control parameter can be seen as a time-evolving steering term for crowd models.


                        The initial condition X(t
                        0) can also be considered as a degree of freedom, leading to the equation:
                           
                              (4)
                              
                                 X
                                 (
                                 
                                    
                                       t
                                    
                                    
                                       0
                                    
                                 
                                 )
                                 =
                                 
                                    
                                       X
                                    
                                    
                                       0
                                    
                                 
                                 +
                                 
                                    
                                       ∊
                                    
                                    
                                       0
                                    
                                 
                                 ,
                              
                           
                        where 
                           
                              
                                 
                                    ∊
                                 
                                 
                                    0
                                 
                              
                              ∈
                              
                                 
                                    R
                                 
                                 
                                    
                                       
                                          N
                                       
                                       
                                          X
                                       
                                    
                                 
                              
                           
                         stands for the initial condition error.


                        The input constraint Y is related to the system state by a non-linear function 
                           
                              H
                           
                        . The difference between Y and what is actually observed 
                           
                              H
                              (
                              X
                              )
                           
                         is the observation error 
                        
                           
                              
                                 
                                    ∊
                                 
                                 
                                    H
                                 
                              
                              ∈
                              
                                 
                                    R
                                 
                                 
                                    
                                       
                                          N
                                       
                                       
                                          Y
                                       
                                    
                                 
                              
                           
                        :
                           
                              (5)
                              
                                 H
                                 (
                                 X
                                 )
                                 =
                                 Y
                                 +
                                 
                                    
                                       ∊
                                    
                                    
                                       H
                                    
                                 
                                 .
                              
                           
                        Eqs. (3)–(5) form an optimal system (see [16]). The problem is then to find the state trajectory X(t) satisfying the system with the lowest errors possible, i.e. respecting as much as possible the model, the reference initialization condition and the input constraints. The controlled system, as presented in Fig. 2, can be identified as Eqs. (3) and (4). The control parameters can therefore be defined as: 
                           
                              U
                              =
                              (
                              
                                 
                                    ∊
                                 
                                 
                                    M
                                 
                              
                              ,
                              
                                 
                                    ∊
                                 
                                 
                                    0
                                 
                              
                              )
                           
                        . It is then possible to express the problem as the minimization of the cost function:
                           
                              (6)
                              
                                 J
                                 (
                                 
                                    
                                       ∊
                                    
                                    
                                       M
                                    
                                 
                                 ,
                                 
                                    
                                       ∊
                                    
                                    
                                       0
                                    
                                 
                                 )
                                 =
                                 
                                    
                                       1
                                    
                                    
                                       2
                                    
                                 
                                 
                                    ∫
                                    
                                       
                                          
                                             t
                                          
                                          
                                             0
                                          
                                       
                                    
                                    
                                       
                                          
                                             t
                                          
                                          
                                             f
                                          
                                       
                                    
                                 
                                 
                                    
                                       
                                          
                                             
                                                
                                                   ∊
                                                
                                                
                                                   M
                                                
                                             
                                          
                                       
                                    
                                    
                                       Q
                                    
                                    
                                       2
                                    
                                 
                                 dt
                                 +
                                 
                                    
                                       1
                                    
                                    
                                       2
                                    
                                 
                                 
                                    ∫
                                    
                                       
                                          
                                             t
                                          
                                          
                                             0
                                          
                                       
                                    
                                    
                                       
                                          
                                             t
                                          
                                          
                                             f
                                          
                                       
                                    
                                 
                                 
                                    
                                       
                                          
                                             
                                                
                                                   ∊
                                                
                                                
                                                   0
                                                
                                             
                                          
                                       
                                    
                                    
                                       B
                                    
                                    
                                       2
                                    
                                 
                                 dt
                                 +
                                 
                                    
                                       1
                                    
                                    
                                       2
                                    
                                 
                                 
                                    ∫
                                    
                                       
                                          
                                             t
                                          
                                          
                                             0
                                          
                                       
                                    
                                    
                                       
                                          
                                             t
                                          
                                          
                                             f
                                          
                                       
                                    
                                 
                                 
                                    
                                       
                                          
                                             Y
                                             -
                                             H
                                             (
                                             X
                                             )
                                          
                                       
                                    
                                    
                                       R
                                    
                                    
                                       2
                                    
                                 
                                 dt
                                 .
                              
                           
                        with Q, B and R being the respective covariance matrices of errors 
                           
                              
                                 
                                    ∊
                                 
                                 
                                    M
                                 
                              
                              ,
                              
                              
                                 
                                    ∊
                                 
                                 
                                    0
                                 
                              
                           
                         and 
                           
                              
                                 
                                    ∊
                                 
                                 
                                    H
                                 
                              
                           
                        . They can be seen as penalization factors of the associated errors. In case of diagonal matrices, they represent the weights given to the model, the initial condition and the input constraints. These covariances are crucial for the assimilation of observations. Once the model, the reference initial condition and the input constraints are set, they remain the only parameters to be configured by the user for the scene edition. For example, setting an unalterable crowd configuration at t
                        0 amounts to assign B a null value. More details about the definition of these matrices are given below.

As stated above, these quantities act as weights on model, initialization and constraints. Therefore the most decisive part of the parameterizing falls on the user since it is related to the balance one expects between model’s consistency and constraints achievement. For example, a larger (resp. smaller) value of the error covariance matrix R will give less importance (resp. more importance) to the constraints during the control process. The same applies for covariances matrix Q related to the model and for B related to the initial condition. In practice, dimensional analysis can be used as a first guess on their value. For instance, knowing that model covariance unit dimension [Q] equals [X]2
                           s−2 (where [•] is the dimension of the quantity •), [R] equals [Y]2 and [B] is [X]2, it is possible to use the expected range of values of involved quantities and thus automatically compute covariances. Let us also precise that in some cases it is possible to dynamically tune these covariances. For instance, let us consider a model 
                              
                                 M
                              
                            being very reluctant to match a constraint Y that a user absolutely wants to be reached. Therefore, it is necessary to radically either increase Q or decrease R, yielding a possibly too fast gradient descent speed and consequently divergence. A solution to this issue can be to tune these covariances along gradient descent according to the error between Y and the corresponding observation 
                              
                                 H
                                 (
                                 X
                                 )
                              
                           . For example, when error decreases, R will decrease too so the weight of Y increase and the gradient descent speed keeps in a convergence range. This kind of approach can be seen as an “at all costs” method since it ensures the constraint to be fulfilled. On the other hand, the model dynamics is progressively neglected along the control process, leading to an half-optimal solution in the sense that this strategy gives results essentially optimal for constraints.

The input constraints do not necessarily exist during the whole sequence. Inputs may be sparser than the time discretization. Instead of Y(t), we consider in this case the set:
                              
                                 (7)
                                 
                                    (
                                    
                                       
                                          Y
                                       
                                       
                                          i
                                       
                                    
                                    ,
                                    
                                       
                                          t
                                       
                                       
                                          i
                                       
                                    
                                    ,
                                    
                                       
                                          R
                                       
                                       
                                          i
                                       
                                    
                                    )
                                    ,
                                 
                              
                           meaning that input Y
                           
                              i
                            is set at time t
                           
                              i
                            with a covariance (i.e. weight) R
                           
                              i
                           .

This part presents a method to minimize the cost function 
                           
                              J
                           
                         and as such a way to estimate the optimal control parameters 
                           
                              (
                              
                                 
                                    ∊
                                 
                                 
                                    M
                                 
                              
                              ,
                              
                              
                                 
                                    ∊
                                 
                                 
                                    0
                                 
                              
                              )
                           
                         required in Eqs. (3) and (4). Those parameters produce the optimal state trajectory. Minimizing the cost function in Eq. (6) requires to cancel its derivatives 
                           
                              
                                 
                                    ∂
                                    J
                                 
                                 
                                    ∂
                                    
                                       
                                          ∊
                                       
                                       
                                          M
                                       
                                    
                                 
                              
                              δ
                              
                                 
                                    ∊
                                 
                                 
                                    M
                                 
                              
                           
                         and 
                           
                              
                                 
                                    ∂
                                    J
                                 
                                 
                                    ∂
                                    
                                       
                                          ∊
                                       
                                       
                                          0
                                       
                                    
                                 
                              
                              δ
                              
                                 
                                    ∊
                                 
                                 
                                    0
                                 
                              
                           
                        . In practice, due to the size of the system’s state, a direct gradient descent is not possible since it would require the integration of the whole model for each gradient direction computation, each component of the state, and each time-step. The adjoint formulation allows to overcome this computational wall by expressing the gradient simply through one model integration, and its descent by one other. More details about adjoint techniques can be found in [16] and applications in computer graphics in [18,36].

By introducing the adjoint variable 
                              
                                 λ
                                 ∈
                                 
                                    
                                       R
                                    
                                    
                                       
                                          
                                             N
                                          
                                          
                                             X
                                          
                                       
                                    
                                 
                              
                           , it is proved that the gradient is given by the adjoint trajectory 
                              λ
                           (t) obtained by the backward integration of the following equation:
                              
                                 (8)
                                 
                                    
                                       
                                          
                                          
                                             
                                                -
                                                
                                                   
                                                      ∂
                                                      λ
                                                   
                                                   
                                                      ∂
                                                      t
                                                   
                                                
                                                +
                                                
                                                   
                                                      
                                                         
                                                            
                                                               
                                                                  ∂
                                                               
                                                               
                                                                  X
                                                               
                                                            
                                                            M
                                                         
                                                      
                                                   
                                                   
                                                      ∗
                                                   
                                                
                                                λ
                                                =
                                                
                                                   
                                                      
                                                         
                                                            
                                                               
                                                                  ∂
                                                               
                                                               
                                                                  X
                                                               
                                                            
                                                            H
                                                         
                                                      
                                                   
                                                   
                                                      ∗
                                                   
                                                
                                                
                                                   
                                                      R
                                                   
                                                   
                                                      -
                                                      1
                                                   
                                                
                                                
                                                   
                                                      
                                                         Y
                                                         -
                                                         H
                                                         (
                                                         X
                                                         )
                                                      
                                                   
                                                
                                                ,
                                             
                                          
                                       
                                       
                                          
                                          
                                             
                                                with
                                                :
                                                λ
                                                (
                                                
                                                   
                                                      t
                                                   
                                                   
                                                      f
                                                   
                                                
                                                )
                                                =
                                                0
                                                .
                                             
                                          
                                       
                                    
                                 
                              
                           The derivation of the model and of the observation operator, respectively:
                              
                                 
                                    
                                       
                                          
                                          
                                             
                                                
                                                   
                                                      ∂
                                                   
                                                   
                                                      X
                                                   
                                                
                                                M
                                                ∈
                                                
                                                   
                                                      R
                                                   
                                                   
                                                      
                                                         
                                                            N
                                                         
                                                         
                                                            X
                                                         
                                                      
                                                   
                                                
                                                ×
                                                
                                                   
                                                      R
                                                   
                                                   
                                                      
                                                         
                                                            N
                                                         
                                                         
                                                            X
                                                         
                                                      
                                                   
                                                
                                             
                                          
                                       
                                       
                                          
                                          
                                             
                                                and
                                                
                                                
                                                   
                                                      ∂
                                                   
                                                   
                                                      X
                                                   
                                                
                                                H
                                                ∈
                                                
                                                   
                                                      R
                                                   
                                                   
                                                      
                                                         
                                                            N
                                                         
                                                         
                                                            Y
                                                         
                                                      
                                                   
                                                
                                                ×
                                                
                                                   
                                                      R
                                                   
                                                   
                                                      
                                                         
                                                            N
                                                         
                                                         
                                                            X
                                                         
                                                      
                                                   
                                                
                                                ,
                                             
                                          
                                       
                                    
                                 
                              
                           both along with their adjoint
                              1
                              The adjoint operator is defined as 〈Ax,
                                 y〉=〈x,(A)∗
                                 y〉 and is equivalent to a simple transposition in the case of matrices operator.
                           
                           
                              1
                            are needed to achieve this integration. This part constitutes the more tedious part of the method since such derivations can be quite tricky in some cases (but also very simple in others). However, these derivations have to be formulated and implemented only once for given crowd model and input constraint type (i.e. a given observation operator 
                              
                                 H
                              
                           ). We finally outline that there exist automatic differential tools (like Tapenade 
                           [7]) that enable to derive linear tangent and associated adjoint of complex models based on heuristics, conditionals, etc.

The adjoint variable trajectory 
                              λ
                           (t) states for the discrepancy between the state trajectory X(t) and the input constraints Y. Once available, one can simply write the variation of the control parameters:
                              
                                 (9)
                                 
                                    d
                                    
                                       
                                          ∊
                                       
                                       
                                          M
                                       
                                    
                                    (
                                    t
                                    )
                                    =
                                    Q
                                    λ
                                    (
                                    t
                                    )
                                    ,
                                 
                              
                           
                           
                              
                                 (10)
                                 
                                    d
                                    
                                       
                                          ∊
                                       
                                       
                                          0
                                       
                                    
                                    =
                                    
                                       
                                          1
                                       
                                       
                                          
                                             
                                                t
                                             
                                             
                                                f
                                             
                                          
                                          -
                                          
                                             
                                                t
                                             
                                             
                                                0
                                             
                                          
                                       
                                    
                                    B
                                    λ
                                    (
                                    
                                       
                                          t
                                       
                                       
                                          0
                                       
                                    
                                    )
                                    .
                                 
                              
                           Let us now turn to how these variational parameters are used to converge to an optimal solution.

The variational control parameters 
                              
                                 (
                                 d
                                 
                                    
                                       ∊
                                    
                                    
                                       M
                                    
                                 
                                 ,
                                 d
                                 
                                    
                                       ∊
                                    
                                    
                                       0
                                    
                                 
                                 )
                              
                            can be used in two distinct ways, each one providing specific kind of solutions.

In this case, 
                                 
                                    (
                                    d
                                    
                                       
                                          ∊
                                       
                                       
                                          M
                                       
                                    
                                    ,
                                    d
                                    
                                       
                                          ∊
                                       
                                       
                                          0
                                       
                                    
                                    )
                                 
                               are directly used to compute a state trajectory offset d
                              X(t). The equation driving this trajectory reads:
                                 
                                    (11)
                                    
                                       
                                          
                                             ∂
                                             d
                                             X
                                          
                                          
                                             ∂
                                             t
                                          
                                       
                                       +
                                       
                                          
                                             
                                                
                                                   
                                                      ∂
                                                   
                                                   
                                                      X
                                                   
                                                
                                                M
                                             
                                          
                                       
                                       d
                                       X
                                       =
                                       d
                                       
                                          
                                             ∊
                                          
                                          
                                             M
                                          
                                       
                                       ,
                                    
                                 
                              
                              
                                 
                                    (12)
                                    
                                       with
                                       :
                                       d
                                       X
                                       (
                                       
                                          
                                             t
                                          
                                          
                                             0
                                          
                                       
                                       )
                                       =
                                       d
                                       
                                          
                                             ∊
                                          
                                          
                                             0
                                          
                                       
                                       .
                                    
                                 
                              For each gradient descent iteration n, the state trajectory is updated by:
                                 
                                    (13)
                                    
                                       
                                          
                                             X
                                          
                                          
                                             n
                                             +
                                             1
                                          
                                       
                                       (
                                       t
                                       )
                                       =
                                       
                                          
                                             X
                                          
                                          
                                             n
                                          
                                       
                                       (
                                       t
                                       )
                                       +
                                       d
                                       X
                                       (
                                       t
                                       )
                                       .
                                    
                                 
                              This way of using control parameters can be seen as fully variational since only derived models are integrated during the control process.

Here, the control parameters are first computed globally using their previous values. For each gradient descent n, they are updated such as:
                                 
                                    (14)
                                    
                                       
                                          
                                             ∊
                                          
                                          
                                             M
                                          
                                          
                                             n
                                             +
                                             1
                                          
                                       
                                       (
                                       t
                                       )
                                       =
                                       
                                          
                                             ∊
                                          
                                          
                                             M
                                          
                                          
                                             n
                                          
                                       
                                       (
                                       t
                                       )
                                       +
                                       d
                                       
                                          
                                             ∊
                                          
                                          
                                             M
                                          
                                       
                                       (
                                       t
                                       )
                                       ,
                                    
                                 
                              
                              
                                 
                                    (15)
                                    
                                       
                                          
                                             ∊
                                          
                                          
                                             0
                                          
                                          
                                             n
                                             +
                                             1
                                          
                                       
                                       =
                                       
                                          
                                             ∊
                                          
                                          
                                             0
                                          
                                          
                                             n
                                          
                                       
                                       +
                                       d
                                       
                                          
                                             ∊
                                          
                                          
                                             0
                                          
                                       
                                       .
                                    
                                 
                              The state trajectory is then computed using Eqs. (3) and (4) of the optimal system. Therefore, this way of using control parameters can be seen as half-variational. This way of using the adjoint method is rather close to the functional scheme shown in Fig. 2, whereas the local descent is rather based on a derived system. We will now see how these two ways behave.

The adjoint formulation is generally used in an Eulerian framework where the local and the global gradient descent provide quite coherent and rather similar results. For a Lagrangian framework as proposed in this paper, they can be very different. The reason comes from the obstacle and agents avoidance model. One can easily understand a crowd can exhibit very different trajectories for two different, even close, initial conditions. In some case for example, a pedestrian will pass left an obstacle, and for a slightly different initialization he will pass right. This will produce a trajectory gap, likely to generate other gaps, and so on. This point, we call tangling issue, turns out to be critical for the local gradient descent which is a fully variational method. This kind of issue is not new and can be solved using Monte-Carlo techniques, as for example in [12,29], or using a selection on a set of pre-computed trajectories [33]. However, in our application both strategies are ineffective since the system state is too big and would require a number of pedestrians or pre-computed trajectories too large regarding to the actual computational capabilities.

Indeed, the time integration of the derived model of Eq. (11) is not able to make a call for such radical decision. The trajectory offset d
                        X(t) it produces can only account for trajectory variations, not trajectory creation. In an optimization point of view, the local gradient descent is hence likely to yield local minima for which pedestrians trajectories can look unnatural.

On the other hand, the global gradient descent calls on the “real” crowd model through Eq. (3). During the optimization, trajectories are therefore allowed to jump from different solutions, abiding by the chaotic nature of crowd. However, convergence is not assured since between two iterations, part of the discrepancy carried by 
                           
                              
                                 
                                    ∊
                                 
                                 
                                    M
                                 
                              
                              (
                              t
                              )
                           
                         can become obsolete and produce irregularities.

A good solution can be found in mixing the both approaches, i.e. alternating the local descent for some iterations and the more global gradient descent. In our experimentations, this strategy prevented from falling too rapidly in local minima and yielded satisfying results and computational efficiency.

We recall here that the proposed control scheme is not dependent of the crowd model 
                        
                           M
                        
                     . However, 
                        
                           M
                        
                      should be a dynamical model explicitly driving a state X through time evolution equations. As such, geometric approaches such as Reciprocal Velocity Obstacles, as defined in [35], cannot be controlled by our method, but the range of possibilities is nevertheless very wide. In this Section, the crowd simulation model against which we tested our optimal crowd editing strategy is presented. This model is a very generic dynamical model mainly based on Helbing’s model [8] in its use of pedestrian interaction forces. We note that in Ref. [36] the necessary derivations are also given for the Reynold’s flocking model [27].

The evolution of pedestrians is governed by physiological capabilities, psychological behaviors, group strategies and goal achievement. Assuming that this evolution is also governed by Newton’s law of motion, we obtain for each pedestrian p
                        
                           i
                         the system:
                           
                              (16)
                              
                                 
                                    
                                       ∂
                                       
                                          
                                             y
                                          
                                          
                                             i
                                          
                                       
                                    
                                    
                                       ∂
                                       t
                                    
                                 
                                 
                                 =
                                 
                                    
                                       u
                                    
                                    
                                       i
                                    
                                 
                                 ,
                              
                           
                        
                        
                           
                              (17)
                              
                                 
                                    
                                       m
                                    
                                    
                                       i
                                    
                                 
                                 
                                    
                                       ∂
                                       
                                          
                                             u
                                          
                                          
                                             i
                                          
                                       
                                    
                                    
                                       ∂
                                       t
                                    
                                 
                                 
                                 =
                                 
                                    
                                       F
                                    
                                    
                                       i
                                    
                                 
                                 ,
                              
                           
                        with y
                        
                           i
                         being the position of the pedestrian, u
                        
                           i
                         its velocity and m
                        
                           i
                         its mass that we value as 70kg. For clarity’s sake, we will use a matrix notation stating, as an example, y
                        =
                        y
                        
                           i
                         the vector of the whole positions of the pedestrians, and 
                           y
                         being the diagonal matrix induced by the same vector. The overall force applied to pedestrians, 
                           
                              F
                           
                        , gathers all constraints applied to them. We propose to use the model proposed by Helbing et al. [8] by decomposing this force into four major components:
                           
                              (18)
                              
                                 F
                                 =
                                 
                                    
                                       
                                          
                                             
                                                
                                                   F
                                                
                                                
                                                   will
                                                
                                             
                                          
                                          
                                             ︸
                                          
                                       
                                    
                                    
                                       source
                                    
                                 
                                 +
                                 
                                    
                                       
                                          
                                             
                                                
                                                   F
                                                
                                                
                                                   fatigue
                                                
                                             
                                          
                                          
                                             ︸
                                          
                                       
                                    
                                    
                                       friction
                                    
                                 
                                 +
                                 
                                    
                                       
                                          
                                             
                                                
                                                   F
                                                
                                                
                                                   sociological
                                                
                                             
                                          
                                          
                                             ︸
                                          
                                       
                                    
                                    
                                       interactions
                                    
                                 
                                 +
                                 
                                    
                                       F
                                    
                                    
                                       obstacle
                                    
                                 
                              
                           
                        At first, people want to reach some position with a given amount of determination, and will release power according to this amount. The direction to the goal will be expressed as unit vector W, and the level of determination as α (valued 140N in experiments), leading to the source force: 
                           
                              
                                 
                                    F
                                 
                                 
                                    will
                                    ,
                                    i
                                 
                              
                              =
                              
                                 
                                    α
                                 
                                 
                                    i
                                 
                              
                              
                                 
                                    W
                                 
                                 
                                    i
                                 
                              
                           
                        , and in crowd space:
                           
                              (19)
                              
                                 
                                    
                                       F
                                    
                                    
                                       will
                                    
                                 
                                 =
                                 
                                    
                                       α
                                    
                                    
                                       ̲
                                    
                                 
                                 W
                                 .
                              
                           
                        In our experiments, W(x) is computed on a grid using the Eikonal equation in order to simulate path-planning (like in [32]), and we simply obtain W
                        
                           i
                        
                        =
                        W(y
                        
                           i
                        ).

But a pedestrian will be slowed down by his physiological capabilities since moving is power consuming. This can be expressed as 
                           
                              
                                 
                                    F
                                 
                                 
                                    fatigue
                                    ,
                                    i
                                 
                              
                              =
                              -
                              
                                 
                                    k
                                 
                                 
                                    i
                                 
                              
                              
                                 
                                    u
                                 
                                 
                                    i
                                 
                              
                           
                        , and in crowd space:
                           
                              (20)
                              
                                 
                                    
                                       F
                                    
                                    
                                       fatigue
                                    
                                 
                                 =
                                 -
                                 
                                    
                                       k
                                    
                                    
                                       ̲
                                    
                                 
                                 u
                                 ,
                              
                           
                        where k are the fatigue coefficients of pedestrians (valued 140kgs−1 in experiments).

Pedestrians repulse each other according to a sociological force 
                              
                                 
                                    
                                       F
                                    
                                    
                                       sociological
                                    
                                 
                              
                           . This force is directed for every pedestrian i to its neighbor j by the unit vector e
                           
                              ij
                           . The intensity of this force decreases with the distance between the pedestrians i and j using an inverse exponential function. The sociological force 
                              
                                 
                                    
                                       f
                                    
                                    
                                       ij
                                    
                                    
                                       y
                                    
                                 
                              
                            relating pedestrians i and j therefore reads:
                              
                                 (21)
                                 
                                    
                                       
                                          f
                                       
                                       
                                          ij
                                       
                                       
                                          y
                                       
                                    
                                    =
                                    -
                                    
                                       
                                          ae
                                       
                                       
                                          -
                                          
                                             
                                                ‖
                                                
                                                   
                                                      y
                                                   
                                                   
                                                      j
                                                   
                                                
                                                -
                                                
                                                   
                                                      y
                                                   
                                                   
                                                      i
                                                   
                                                
                                                ‖
                                                -
                                                (
                                                
                                                   
                                                      r
                                                   
                                                   
                                                      i
                                                   
                                                
                                                +
                                                
                                                   
                                                      r
                                                   
                                                   
                                                      j
                                                   
                                                
                                                )
                                             
                                             
                                                b
                                             
                                          
                                       
                                    
                                    
                                       
                                          e
                                       
                                       
                                          ij
                                       
                                    
                                    ,
                                 
                              
                           where a and b are two coefficients related respectively to the force intensity and to the cutback distance separating high repulsions from the low ones. In the following experiments we set a
                           =1000N and b
                           =0.08m. The quantity r stands for the modeled radius of the pedestrians which values are randomly taken in the range [0.25m,0.35m]. Introducing the adjacency matrix of pedestrians 
                              A
                            weighted by 
                              
                                 
                                    
                                       f
                                    
                                    
                                       ij
                                    
                                    
                                       y
                                    
                                 
                              
                           , it is possible to express the sociological force in the crowd space writing:
                              
                                 (22)
                                 
                                    
                                       
                                          F
                                       
                                       
                                          sociological
                                       
                                    
                                    =
                                    
                                       
                                          A
                                       
                                       
                                          
                                             
                                                f
                                             
                                             
                                                y
                                             
                                          
                                       
                                    
                                    1
                                    ,
                                 
                              
                           with 1
                           =[1,1,…,1,1]
                              T
                           . In our experiments, the connectivity of 
                              A
                            is set such that pedestrians distant of more than 3m are not connected.

In order to present the control results using a simple crowd model, collision body forces are neglected. Besides, the steady conditions used in this paper do not require such forces as compared to panic or rush situations.

The obstacles repulsion is directed oppositely toward the closest wall point x
                           
                              obs
                           , and its intensity is given by a function of the distance from the ith pedestrian position to this point. This distance and this direction read:
                              
                                 (23)
                                 
                                    
                                       
                                          D
                                       
                                       
                                          obs
                                          ,
                                          i
                                       
                                    
                                    =
                                    ‖
                                    
                                       
                                          x
                                       
                                       
                                          obs
                                       
                                    
                                    -
                                    
                                       
                                          y
                                       
                                       
                                          i
                                       
                                    
                                    ‖
                                    .
                                 
                              
                           
                           
                              
                                 (24)
                                 
                                    
                                       
                                          e
                                       
                                       
                                          obs
                                          ,
                                          i
                                       
                                    
                                    =
                                    
                                       
                                          
                                             
                                                x
                                             
                                             
                                                obs
                                             
                                          
                                          -
                                          
                                             
                                                y
                                             
                                             
                                                i
                                             
                                          
                                       
                                       
                                          ‖
                                          
                                             
                                                x
                                             
                                             
                                                obs
                                             
                                          
                                          -
                                          
                                             
                                                y
                                             
                                             
                                                i
                                             
                                          
                                          ‖
                                       
                                    
                                 
                              
                           We obtain for each pedestrian i the obstacle force:
                              
                                 (25)
                                 
                                    
                                       
                                          w
                                       
                                       
                                          obs
                                          ,
                                          i
                                       
                                       
                                          y
                                       
                                    
                                    =
                                    -
                                    
                                       
                                          ae
                                       
                                       
                                          -
                                          
                                             
                                                
                                                   
                                                      D
                                                   
                                                   
                                                      obs
                                                      ,
                                                      i
                                                   
                                                
                                                -
                                                
                                                   
                                                      r
                                                   
                                                   
                                                      i
                                                   
                                                
                                             
                                             
                                                b
                                             
                                          
                                       
                                    
                                    
                                       
                                          e
                                       
                                       
                                          obs
                                          ,
                                          i
                                       
                                    
                                    ,
                                 
                              
                           leading to the expression: 
                              
                                 
                                    
                                       F
                                    
                                    
                                       obstacle
                                    
                                 
                                 =
                                 
                                    
                                       w
                                    
                                    
                                       obs
                                    
                                    
                                       y
                                    
                                 
                              
                           . Here again, D
                           obs(x) and e
                           obs(x) are computed on a grid using the Eikonal equation.

We now dispose of a complete differentiable dynamical model stating the evolution of
                              
                                 (26)
                                 
                                    
                                       
                                          
                                          
                                             
                                                X
                                                =
                                                
                                                   
                                                      
                                                         
                                                            
                                                               
                                                                  y
                                                               
                                                            
                                                            
                                                               
                                                                  u
                                                               
                                                            
                                                         
                                                      
                                                   
                                                
                                                ,
                                                by
                                                
                                                the
                                                
                                                model
                                                :
                                             
                                          
                                       
                                       
                                          
                                          
                                             
                                                M
                                                (
                                                X
                                                )
                                                =
                                                
                                                   
                                                      
                                                         
                                                            
                                                               
                                                                  -
                                                                  u
                                                               
                                                            
                                                            
                                                               
                                                                  -
                                                                  
                                                                     
                                                                        
                                                                           
                                                                              m
                                                                           
                                                                           
                                                                              ̲
                                                                           
                                                                        
                                                                     
                                                                     
                                                                        -
                                                                        1
                                                                     
                                                                  
                                                                  F
                                                                  (
                                                                  y
                                                                  ,
                                                                  u
                                                                  )
                                                               
                                                            
                                                         
                                                      
                                                   
                                                
                                                .
                                             
                                          
                                       
                                    
                                 
                              
                           
                        

As stated in Eq. (8), the control process requires the adjoint derivation of the presented model which reads:
                           
                              (27)
                              
                                 
                                    
                                       (
                                       
                                          
                                             ∂
                                          
                                          
                                             X
                                          
                                       
                                       M
                                       )
                                    
                                    
                                       ∗
                                    
                                 
                                 =
                                 
                                    
                                       
                                          
                                             
                                                
                                                   0
                                                
                                                
                                                   
                                                      
                                                         ∂
                                                      
                                                      
                                                         y
                                                      
                                                   
                                                   
                                                      
                                                         F
                                                      
                                                      
                                                         T
                                                      
                                                   
                                                
                                             
                                             
                                                
                                                   1
                                                
                                                
                                                   
                                                      
                                                         ∂
                                                      
                                                      
                                                         u
                                                      
                                                   
                                                   
                                                      
                                                         F
                                                      
                                                      
                                                         T
                                                      
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                                 
                                    
                                       
                                          
                                             
                                                
                                                   1
                                                
                                                
                                                   0
                                                
                                             
                                             
                                                
                                                   0
                                                
                                                
                                                   -
                                                   
                                                      
                                                         
                                                            
                                                               m
                                                            
                                                            
                                                               ̲
                                                            
                                                         
                                                      
                                                      
                                                         -
                                                         1
                                                      
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                                 .
                              
                           
                        In this purpose, the derivation by the positions y and the velocities u reads:
                           
                              (28)
                              
                                 
                                    
                                       ∂
                                    
                                    
                                       y
                                    
                                 
                                 
                                    
                                       F
                                    
                                    
                                       T
                                    
                                 
                                 =
                                 
                                    
                                       (
                                       
                                          
                                             α
                                          
                                          
                                             ̲
                                          
                                       
                                       
                                          
                                             
                                                
                                                   J
                                                
                                                
                                                   W
                                                
                                             
                                          
                                          
                                             ̲
                                          
                                       
                                       )
                                    
                                    
                                       T
                                    
                                 
                                 +
                                 
                                    
                                       L
                                    
                                    
                                       
                                          
                                             f
                                          
                                          
                                             ∂
                                             y
                                          
                                       
                                    
                                 
                                 +
                                 
                                    
                                       (
                                       
                                          
                                             
                                                
                                                   w
                                                
                                                
                                                   obs
                                                
                                                
                                                   ∂
                                                   y
                                                
                                             
                                          
                                          
                                             ̲
                                          
                                       
                                       )
                                    
                                    
                                       T
                                    
                                 
                                 ,
                              
                           
                        
                        
                           
                              (29)
                              
                                 
                                    
                                       ∂
                                    
                                    
                                       u
                                    
                                 
                                 
                                    
                                       F
                                    
                                    
                                       T
                                    
                                 
                                 =
                                 -
                                 
                                    
                                       k
                                    
                                    
                                       ̲
                                    
                                 
                                 ,
                              
                           
                        with J
                        
                           W
                         being the spatial jacobian matrix of the path W
                        
                           i
                         and 
                           L
                         the Laplacian operator associated to 
                           A
                         and which is symmetric in our case.

@&#RESULTS@&#

We illustrate the control concepts with several constraints, either expressed at pedestrian or continuum levels. All the computations were done on a standard laptop. The optimization time is linear in terms of number of individuals and time steps in the initial sequence. For every experiments, the computation time never exceeded half an hour for a non-optimized version of the code. We note that the user can have access to and examine the different trajectories from the early stages of the optimization process, and since the convergence has roughly an exponential decrease behavior, a good hint of the final result can be obtained only after a few minutes of convergence.

In all the following experiments, we set the model covariance (i.e. the control steering weighting) as:
                        
                           (30)
                           
                              Q
                              =
                              
                                 
                                    
                                       
                                          
                                             
                                                
                                                   
                                                      Q
                                                   
                                                   
                                                      y
                                                   
                                                
                                             
                                             
                                                0
                                             
                                          
                                          
                                             
                                                0
                                             
                                             
                                                
                                                   
                                                      Q
                                                   
                                                   
                                                      u
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                              
                              =
                              
                                 
                                    
                                       
                                          
                                             
                                                0
                                             
                                             
                                                0
                                             
                                          
                                          
                                             
                                                0
                                             
                                             
                                                
                                                   
                                                      I
                                                   
                                                   
                                                      Nq
                                                   
                                                
                                                100
                                                
                                                
                                                   
                                                      m
                                                   
                                                   
                                                      2
                                                   
                                                
                                                
                                                
                                                   
                                                      s
                                                   
                                                   
                                                      -
                                                      4
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                              
                              ,
                           
                        
                     with I
                     
                        Nq
                      being the identity matrix of size Nq. This covariance means the positions evolution of the model is fully trusted, but the velocities evolution is more uncertain. However, it is possible to assign Q
                     
                        y
                      a value, which would allow the control to slightly modify the pedestrian positions without respect to the dynamics of the system.

We also chose to ignore here corrections on the initial condition X(t
                     0) and therefore rather focus on the behavior of the control during the sequences. Consequently, we set B as null.

All time integrations were performed using the fourth-order Runge–Kutta method.

The first experiment aims at testing the procedure by constraining the positions y
                           1 and y
                           2 of only two pedestrians in the crowd, yielding a simple observation operator and adjoint derivation:
                              
                                 (31)
                                 
                                    Y
                                    =
                                    
                                       
                                          y
                                       
                                       
                                          Y
                                       
                                    
                                    ,
                                    H
                                    (
                                    X
                                    )
                                    =
                                    y
                                    ,
                                    
                                       
                                          
                                             
                                                
                                                   
                                                      ∂
                                                   
                                                   
                                                      X
                                                   
                                                
                                                H
                                             
                                          
                                       
                                       
                                          ∗
                                       
                                    
                                    =
                                    
                                       
                                          
                                             
                                                
                                                   
                                                      
                                                         
                                                            I
                                                         
                                                         
                                                            Nq
                                                         
                                                      
                                                   
                                                
                                                
                                                   
                                                      0
                                                   
                                                
                                             
                                          
                                       
                                    
                                    .
                                 
                              
                           The constraint matrix covariance is zero everywhere except for pedestrians 1 and 2:
                              
                                 (32)
                                 
                                    
                                       
                                          R
                                       
                                       
                                          i
                                          ,
                                          j
                                       
                                    
                                    =
                                    
                                       
                                          
                                             
                                                
                                                   
                                                      0
                                                   
                                                   
                                                      if
                                                      
                                                      i
                                                      
                                                      ≠
                                                      
                                                      j
                                                      ,
                                                   
                                                
                                                
                                                   
                                                      10
                                                      
                                                      
                                                         
                                                            m
                                                         
                                                         
                                                            2
                                                         
                                                      
                                                   
                                                   
                                                      if
                                                      
                                                      i
                                                      =
                                                      j
                                                      =
                                                      1
                                                      
                                                      or
                                                      
                                                      i
                                                      =
                                                      j
                                                      =
                                                      2
                                                   
                                                
                                                
                                                   
                                                      ∞
                                                   
                                                   
                                                      otherwise
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           From a starting group of 38 members, two people are given a rendez-vous constraint at a given time t
                           
                              Y
                           
                           =20s and in a specific position (illustrated in Fig. 3
                           ). Hence, the editing process has to find a path for both individuals through the group to fulfill the constraint. In this experiment we use the local gradient descent. The optimization is processed in the interval [t
                           0,
                           t
                           
                              f
                           ]. As the optimization is performed globally for all individuals, it is interesting to observe that other pedestrians help them in finding a solution, as can be seen in the images of Fig. 3 and in the accompanying video. After the rendez-vous, the two pedestrians tend to return to the place they occupied in the crowd before the optimization process. This is an effect of the local gradient descent since the derivation of repulsive interactions between agents (and with obstacles) acts as a spring. Therefore, for such model, one can state:
                              
                                 (33)
                                 
                                    
                                       
                                          d
                                          X
                                          (
                                          t
                                          )
                                       
                                       
                                          t
                                          →
                                          ∞
                                       
                                    
                                    =
                                    0
                                    .
                                 
                              
                           In the optimized scene we present, the controlled pedestrians do not reach their original place essentially because of the interactions cut-off in adjacency matrix 
                              A
                           . This yields rather a plastic deformation of the resulting trajectory X(t) instead of a theoretically elastic one. Let us mention that in a case where the user would prefer the pedestrians to ignore their original state, he can simply perform the optimization in the interval [t
                           0,
                           t
                           
                              Y
                           ] and use the natural model of the crowd after t
                           
                              Y
                           .

Of course, it is important to mention that obtaining such a scenario only by simulating a crowd model would be very difficult to obtain and would require both pedestrians to wait for each other at the meeting point. Let us now turn to the second experiment on individual constraints which involves two groups of interacting people.

The second experiment considers two groups of people, each one evolving in opposite directions. We aim at making each group to form, after crossing each others, the letters “SG” (for Social Groups). Here again the observation operator is set as in Eq. (31), and the constraint covariance is set on the basis of Eq. (32).

As can be observed in Fig. 4
                           (a), the simulation without any control creates two homogeneous flows without any specific pattern. In this experiment, the major difficulty comes from the tangling of the trajectories that is indeed difficult to correctly control since the simulation presents some chaotic attributes from two closed initial conditions. This issue, already mentioned in Section 4.3, is in practice handled using the global gradient descent.

The complete experimentation as well as comparisons with a simple simulation of the crowd model aiming at forming the required configuration are visible in the accompanying video. In Fig. 4(a), we illustrate the trajectories of the two groups without any control whereas Fig. 4(b) presents trajectories after 200 iterations of the editing process, highlighting the benefit of the control. As shown in the videos, the remaining trajectories are consistent and yield a more natural evolution than using a simple crowd simulation to reach this goal without control. To assess some quantitative values, Fig. 4(c) shows the evolution of the Root Mean Square (RMS) errors along the iterations between required and actual positions for the two groups of individuals. It is first interesting to observe that globally the RMS decrease along iterations, illustrating the benefit of the proposed editing process. The large variations observed (as around iteration 100) are in part due to the chaotic behavior of repulsive Lagrangian models that are likely to generate different scenario for two closed configurations, or in other words, to the tangling issue.

Despite this variations, it is nevertheless satisfactory to observe that the global RMS decreases along iterations, finally yielding a consistent solution.

Comparing to other solution handling the shape control problem, such as the interpolation of Laplacian coordinates as proposed by Takahashi and colleagues [31], our method produces trajectories which match as much as possible the dynamics induced by the original crowd model, which is not the case in most geometric approaches.

This time, the constraint lies in a different space than X. Indeed, Y refers here to Eulerian data expressed on a grid. For the different constraints to come in this section, the observation operators and their associated derivation can be found in [1].

Here, we follow the idea proposed in [4,25], which consists in capturing a velocity field from a video, and then use it as a constraint to modify the global crowd motion. From user point of view, the input is therefore a video sequence, and from control point of view, the constraint is the velocity field extracted from the video. Such constraint allows the user to enrich a crowd scene with real crowd footage, or with original video content as we will show. We refer to this idea as video-based motion transfer for crowd. The experiment is illustrated in Fig. 11. From an abstract video of moving shapes (courtesy of BBC motion video), a dense velocity field is extracted with a Lucas–Kanade filter [17]. This time-varying velocity field then serves as a time-varying constraint Y(t) in the proposed control process. For this experiment we use the local gradient descent since no crowd tangling is expected. The covariance associated to the flow constraint is set as R
                           =
                           I
                           2M
                           0.05m2
                           s−2, with M being the number of discrete meshes of the grid on which the flow is expressed. Extracts of the results are presented in Fig. 11 and can be seen in the accompanying video.

For this example, we measure the quality of our approach by estimating how much of the motion information given by the flow constraint is retained in the final animation. This is accomplished by computing the spatial normalized root mean square (RMS) between the constraint velocity fields and the observed ones at each time step. Results are presented in Fig. 5
                           . The RMS of the output of the simple simulation and of the optimized scene, with respect to Y, are presented. For comparison’s sake, the RMS was also computed for the simple advection method proposed in [4]. In addition, we present the same error for the simple simulation of a mixture of both the dynamic crowd model and the advection method. In this purpose the user-desired velocity field U was simply added to the velocity term u
                           
                              i
                            in Eq. (16). This way of integrating the motion field in the evolution equation is classical for most flow field based approaches (see for instance [11] or [25]). From all the four cases, our method achieves the best RMS performance. Let us note that the RMS is computed over the entire Eulerian domain (a 32×16 grid) and that pedestrians do not cover the entire domain. Therefore, some error will always reside in the area of the domain empty of agents. Even so, our method manage to reach an average of 60% error in the main crowd stream time interval, when the other methods shows an average of 90–100%. In all cases, error is valued 100% at t
                           0 because the crowd does not move at this time. This can be corrected in the proposed method by simply attributing a value to the initialization covariance B. At t
                           
                              f
                            the error also reach such value, but this time because the crowd has left the domain.

Here, and contrary to [4], it is important to note that the produced pedestrian trajectories match to a certain extent the dynamics of the original model (for instance, no collisions between individuals). This was not the case in the mentioned work, since individual motions were only obtained by advecting the individuals along the velocity field, which of course does not prevent individuals to collide.

In this experiment four groups of people are trying to reach the opposite exits in a cross-shaped corridor (see Fig. 6
                            for a schematic of the scene). This kind of situation is very frequently described in other works as an interesting configuration for the examination of emerging behaviors, see for instance [32,22] or [2]. Our aim is to show that it is possible to change the magnitude of the bottleneck by imposing a patch constraint (i.e. in a specific part of the environment) on the vorticity, which is closely related to the whirling of individuals in the crowd flow. This example is particularly tricky, since it involves a lot of pedestrian interactions in a confined space.

The vorticity observation operator 
                              
                                 H
                                 (
                                 X
                                 )
                              
                            is obtained by the Eulerian cross-product differentiation of the Lagrangian velocities. This operator is thus highly non-linear since projections between these two spaces highly involves positions. It’s expression and linearization is given in [1]. Hence, we impose a vorticity constraint for a duration of five seconds between the 12th and the 17th second of the animation (Fig. 7
                           b), with a covariance set as R
                           =
                           I
                           
                              M
                           0.2s−2.

The original observed vorticity (Fig. 7a) of the output of the simple crowd simulation shows quasi-random positive and negative values, which simply translates the fact that pedestrians are bumping into each other, and that each pedestrians tries to find out its own path toward its goal. After optimization, one can observe the vorticity shape obtained (Fig. 7c) matches much better the constraint. The resulting paths can be seen in the accompanying videos and in Figs. 8 and 12
                           
                           . It is noticeable that at the beginning of the sequence, each group has chosen a side and that at the instant of the constraint a whirling pattern has emerged as a result of the control process.

Also, one can notice in Fig. 9
                            that the average time is mostly decreasing along the control iterations, which tends to prove that imposing such a vorticity constraint can help to loosen the bottleneck. Among others, this procedure can also be seen as a tool to produce a user-desired emerging behavior even if the crowd model does not create it implicitly.

Of course, more advanced collision avoidance models such as in [35] produce better results from realism point of view. But let us point out that none of them is able produce such specific behavior at a specific time. Also, we do not aim to improve the model used in this paper, but only to show that high-level constraints can produce similar conduct to advanced models, even in complex situations. Therefore, it is theoretically possible to edit a crowd scene so as to inject any crowd meta-behavior (provided its associated observation operator 
                              
                                 H
                                 (
                                 X
                                 )
                              
                            can be defined) such as avoidance vortices.

We propose here to use eulerian density maps as constraints. The crowd is asked to be present in specific areas defined by a user at given times. The density observation operator 
                              
                                 H
                                 (
                                 X
                                 )
                              
                            is obtained by the Eulerian convolution of Lagrangian positions of pedestrians. Its expression and linearization is given in [1].

For this experiment, in order to introduce some heterogeneity in the group of pedestrians, we slightly modify the model by randomly setting the radius parameter in the range [0.25m,0.35m] for each pedestrian p
                           
                              i
                            where their mass m
                           
                              i
                            are proportional to their radius with a mean value of 70kg for r
                           
                              i
                           
                           =0.3m. In addition, the will parameter α
                           
                              i
                            is randomly set in the range 140N±10% and the fatigue coefficient k
                           
                              i
                            is set in the range 140kgs−1
                           ±10%. These modifications provide variability in the simulated crowd dynamics in order to show the ability of our method to deal with heterogeneous crowds.

The original scene presents a crowd of 64 pedestrians heading a common direction after staying still at t
                           =
                           t
                           0 in an empty environment. Three density areas are set as constraints at 
                              
                                 
                                    
                                       t
                                    
                                    
                                       
                                          
                                             Y
                                          
                                          
                                             1
                                          
                                       
                                    
                                 
                                 =
                                 7
                                 
                                 s,
                                 
                                 
                                    
                                       t
                                    
                                    
                                       
                                          
                                             Y
                                          
                                          
                                             2
                                          
                                       
                                    
                                 
                                 =
                                 14.5
                                 
                                 s
                              
                            and 
                              
                                 
                                    
                                       t
                                    
                                    
                                       
                                          
                                             Y
                                          
                                          
                                             3
                                          
                                       
                                    
                                 
                                 =
                                 22
                                 
                                 s
                              
                            each lasting for 1s around their reference time, and such as their location is apart from the original path of the pedestrians (see Fig. 10
                           
                           ). The crowd needs then to radically modify its global behavior coming from the simulation model. Inputs Y
                           1, Y
                           2 and Y
                           3 are 8m×8m areas filled by a homogeneous density values of 1.1pedm−2 in order to slightly over-constrain the inputs.

Even if no major trajectories tangling is expected in this scene, we use the global gradient descent strategy in this experiment in order to authorize reconfiguration among pedestrians during the control process. Such reconfiguration is likely to happen because of the introduced variability in the model for this experiment and because of the unnatural constraints as compared to original crowd trajectory. However, a user might prefer to preserve the original pedestrians organization. This is why we also present in the accompanying video the results obtained for this experiments using the local gradient descent. Covariances are parametered such as: Q
                           
                              u
                           
                           =
                           I
                           
                              Nq
                           0.1m2
                           s−4 and R
                           =
                           I
                           
                              M
                           10ped2
                           m−4, causing a slow but smooth convergence for demonstration’s benefit.

In Fig. 10(a), we present the output of the simulated model. One can see clearly the input densities do not correspond to the original pedestrians trajectories. Despite that, the control process is able to modify the trajectories along iterations so as to fit the inputs as we can see in Fig. 10(b) and (c). The final edited scene can be viewed in Fig. 13
                           . In the image sequence, one can see that in the final output the crowd matches the three density inputs and that its inner dynamics is preserved all along the scene. This experiment gives another illustration of the large variety of situations the strategy presented in this paper can manage.

In this paper, the question of controlling a crowd simulation in order to fit some users constraints has been examined. We have proposed an original editing process which relies on a formulation of a gradient based approach in a variational setting expressed with the adjoint theory. This control methodology allows notably to control different aspects of the simulation, such as per-pedestrians properties, inter-pedestrians relations or as well continuum related information. Several examples of this control were given, illustrating the versatile nature of the control methodology. This framework adapts to any dynamical model, provided its analytical derivation, with respect to the state space, can be computed. Regarding the control nature, any type of constraints can be used if an analytic relation with the state space exists and can be differentiated. The output of this procedure is constituted by new pedestrians trajectories that realize a good tradeoff between what is imposed by the dynamical model and the realization of the constraint.

This method is mainly dedicated to users (as for example artists) which would desire to correct the output of a crowd simulation by imposing specific behaviors. In such production pipeline, the user can choose several types of constraints that would best match its need, and also the trade-off between the respect of the considered crowd model and his constraints (expressed through the covariance matrices).

It is important to outline that our technique however may suffer from some defects: first, it cannot be used in interactive-time applications, since the optimization is performed globally, i.e. over the entire sequence, rather than sequentially, as would a short-horizon filtering. Yet, sequential version of this optimization, like in sequential Monte-Carlo or ensemble methods, could be a natural variant of our variational framework. Second, as far as the method is roughly speaking a gradient descent, there is no theoretical guarantee that a global minimum will be found. In the case where the problem is over constrained (such as in the letter formation example), the resolution may be stuck in unsatisfying situation, typical of local minima. The observation operators should be designed accordingly, and be as well-posed as possible, but this is a classical issue in optimization. Finally, the complexity inherent to the combinatorial explosion of inter pedestrians relative positioning (the tangling issue) can render the optimization process tedious, and calls for a careful choice of the covariance matrices, which can be sometimes tricky. Our future works will consider more advanced sampling strategies to cope with the problem of the avoidance of local minima, and lower the computation cost.

@&#ACKNOWLEDGMENTS@&#

This work has been supported by french Région Bretagne by contract reference RB ARE09143 ARED ASFOULE.

Supplementary data associated with this article can be found, in the online version, at http://dx.doi.org/10.1016/j.gmod.2013.09.001.


                     
                        
                           Supplementary video
                           
                        
                     
                  

@&#REFERENCES@&#

