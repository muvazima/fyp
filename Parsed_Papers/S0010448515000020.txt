@&#MAIN-TITLE@&#Enriching the semantics of variational geometric constraint data with ontology

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           The semantics of product data cannot be automatically exchanged by existing standards.


                        
                        
                           
                           An ontology is constructed by formalizing VGC specifications in OWL and SWRL.


                        
                        
                           
                           The ontology is instantiated by the VGC data extracted from CAD systems.


                        
                        
                           
                           The ontology can well express the explicit semantics of the VGC data.


                        
                        
                           
                           Consistency checking, knowledge reasoning and semantic queries can be performed.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Semantic

Variational geometric constraint

Data semantic exchange

Ontology

OWL 2 DL

SWRL

@&#ABSTRACT@&#


               
               
                  Lack of explicit semantics in the product data to be exchanged among product development systems is a major problem for existing product data exchange standards. To solve this problem, the semantics of product data should be enriched to form a basis for exchanging them. This paper proposes an ontology-based approach to enrich the semantics of variational geometric constraint data, one of the most important kinds of product data in product development systems. In this approach, an ontology for variational geometric constraint specifications is constructed by formalizing the specifications in the variational geometric constraint network theory in Web Ontology Language 2 Description Logic (OWL 2 DL) and Semantic Web Rule Language (SWRL). This ontology has rigorous computer-interpretable semantics due to the mathematic logic-based semantics of OWL 2 DL and SWRL. It is capable of providing a semantic enrichment model for the variational geometric constraint data extracted from CAD systems. The ontology is implemented with the use of the OWL 2 DL/SWRL ontology based technologies. As the benefits of the implemented ontology, consistency checking, knowledge reasoning and semantic queries can be automatically performed. These benefits will lay a basis for further exchanging the explicit semantics of variational geometric constraint data among heterogeneous product development systems.
               
            

@&#INTRODUCTION@&#

The exchange of product data among different product development systems used at different phases of product life cycle has become an important requirement for industry. Various product data exchange standards, including the standard for the exchange of product model data (STEP)  [1], have been developed to meet this requirement during the last few decades. Although these standards are capable of exchanging geometric data correctly, they have a common drawback in transferring the meanings of product data in a specific context (i.e. the semantics of product data). For this reason, the product data related to product development process, such as the construction history data, parameter data, constraint data and feature data, are completely lost during the exchange process  [2]. To overcome this drawback, the semantics of product data should be expressed and interpreted explicitly  [3].

Variational geometric constraint data is one of the most important kinds of product data that describes the geometric variation information used for product tolerance design  [4]. A systematic description of the data can be found in the variational geometric constraint network theory  [5] and the function oriented computer aided tolerancing (FOCAT) system  [6]. Even though the variational geometric constraint network theory and the FOCAT system have provided and implemented an approach to use the variational geometric constraint data to generate the variational geometric constraint types to construct a tolerance chain to facilitate product tolerance design, the semantics of the data were not expressed and interpreted explicitly in this implemented approach. Thus the approach is insufficient to satisfy the requirements of exchanging the semantics of variational geometric constraint data among heterogeneous product development systems. To overcome this limitation, ontology is introduced and an ontology-based approach to enrich the semantics of the variational geometric constraint data is proposed in this paper.

Ontology, an explicit specification of a conceptualization, is well-known for having a capability to represent and exchange data semantics explicitly  [7]. Even though the application of ontology has its root in the field of the Semantic Web, it has been extended to many other fields during the past decade. In the field of geometrical product development, ontology has been used to enrich product data semantics  [8,9], facilitate knowledge sharing and reusing in product model development  [10] and implement the semantic interoperability among industrial information systems [11]. The role of ontologies with rigorous semantics is highlighted in a comprehensive review on the knowledge representation techniques in product design systems  [12]. With an ontology-based approach, variational geometric constraint specifications defined in the variational geometric constraint network theory  [5] are formalized in OWL 2 DL  [13] and SWRL  [14], two ontology representation languages developed by the World Wide Web Consortium (W3C). Then the formalized specifications are instantiated by the variational geometric constraint data extracted from CAD systems. By this way, the semantics of the data are expressed and interpreted explicitly due to the logic-based semantics of OWL 2 DL and SWRL, which forms a basis for the exchange of such semantics. As three benefits of the proposed ontology-based approach, consistency checking, knowledge reasoning and semantic queries are capable of being performed on the formalized variational geometric constraint data.

The rest of the paper is organized as follows. Section  2 provides an overview of related work. Section  3 sketches a background about the variational geometric constraint network theory. The details of the proposed ontology-based approach are explained in Section  4. The implementation of the approach is presented and the benefits of this implementation are illustrated through an example in Section  5. Section  6 ends the paper with a conclusion.

@&#RELATED WORK@&#

The collaborative development of complex products requires that product data can be correctly exchanged among heterogeneous product development systems used at different phases of product life cycle. To satisfy this requirement, many national and international product data exchange standards have been successively developed during the past few decades  [15]. Among these standards, the most widely used one is STEP  [1]. The product data modeling language used for STEP is EXPRESS  [16]. Although EXPRESS can develop syntactically correct product data models, it cannot represent the explicit semantics of product data  [9]. Thus, STEP has great difficulty in interpreting the semantics of product data in different phases of product life cycle and implementing the exchange of such semantics among heterogeneous product development systems. To enrich the semantics of product data, many studies have been carried out during the past decade. This section discusses some typical studies and explains their main contributions.

A representative study is the intelligent Self-describing Technical and Environmental Networks (S-TEN) project  [17]. This project presented and implemented a bi-directional translation method between EXPRESS and OWL. Using this method, an EXPRESS product data model can be translated into an OWL product data ontology. By this way, the semantics of product data can be greatly enriched. However, the implemented translation method only focuses on translating modular STEP application protocols, hence in the method no application protocol is covered in full  [8,18]. In addition, the method cannot translate all of the EXPRESS features into OWL. To overcome these drawbacks in S-TEN, National Institute of Standards and Technology (NIST)  [8,18] extended the translation method in S-TEN and proposed a complete translation method to translate STEP schema and its instances to OWL. This extended method was then used to develop a Protégé plugin. The developed plugin is capable of automatically translating EXPRESS schemas and Part21 files into OWL so that a semantically enriched product data model called OntoSTEP is generated. As three benefits of this translation, consistency checking, knowledge reasoning and semantic queries can be performed on the generated OntoSTEP model. Since OntoSTEP is obtained through translating STEP product data model, only the semantics of geometric data are enriched in OntoSTEP. To represent the semantics of non-geometric data, NIST  [8] combined the OntoSTEP model with its core product model  [19,20] and open assembly model  [21,22]. By such combination, the semantics of the product data related to product development process (e.g. function data, behavior data and engineering analysis data) can also be enriched. To interpret the semantics of geometric dimensioning and tolerancing (GD&T) specifications for tolerance analysis, Sarigecili et al.  [9] combined the OntoSTEP model with a translated tolerance analysis oriented model. An integrated ontology was obtained by this combination. This ontology can help designers interpret the explicit semantics of the GD&T specifications of a product differently as needed in different phases of the life cycle of this product.

Process specification language (PSL), developed by NIST  [23] and published as an international standard by ISO  [24], defines a neutral ontology for capturing the semantics of the manufacturing process data. The PSL ontology is capable of facilitating correct and complete exchange of both the syntax and semantics of the process data among manufacturing systems. But the exchanged process data is limited to those related to product geometry  [25]. Patil et al.  [7] designed an ontology-based framework to enrich product data semantics and enable the exchange of these semantics. A product semantic representation language (PSRL) was developed in this framework. Since PSRL is encoded in formal description logic  [26], it has a capability in expressing and interpreting the explicit semantics of product data. Benefiting from this, the semantics of the product data in a system can be transferred to the semantics of PSRL and then the semantics of PSRL can also be transferred to another system. However, these transfers are restricted to transfer exactly equivalent semantics. In response to this problem, Patil  [27] presented a contrast model based approach to compute the semantic similarity of product data. Through this approach, the transfers are capable of transferring those inexactly equivalent semantics. But the approach does not take the computation of the similarity of OWL properties into account  [25]. Abdul-Ghafour et al.  [25] extended the approach by synthetically considering the computation of the similarity of both OWL classes and properties.

There are other relevant studies  [28–31] focusing on enriching the semantics of product data in the literature. Bock et al.  [28]designed an example product modeling language combining the benefits of ontology with expanded capabilities in conventional product modeling languages to improve support for collaborative design exploration. The language takes product models as ontological classifications of the total systems. It can support reliable semantic interpretation before and after model interchange. To improve the efficiency of product life cycle models, a semantically enriched model for representing and managing product life cycle data was developed in  [29]. Since the model uses description logic as its knowledge representation language, it can be well machine-understandable. Zhu et al.  [30] presented an approach to verify the semantic capturing and knowledge reasoning capabilities of OWL/SWRL ontologies in product assembly domain. A model containing semantic applications with multiple reasoning units was constructed in the approach. It has been demonstrated that the presented approach not only enables existing product data to be semantically queried but also enables new product data to be reasoned out. A product-driven ontology for product data management, named ONTO-PDM, was developed by Panetto et al.  [31] to implement the semantic interoperability among product data management systems, manufacturing execution systems and enterprise resource planning systems. In ONTO-PDM, product technical data is formalized by first order logic and embedded into the product itself. By this way, the data can be interoperable with applications and the loss of the semantics of the data can be minimized during exchange.

In the authors’ previous study  [32], a meta-model of the tolerance type data, one of the most important kinds of product data used for product tolerance design, was constructed using a description logic-based approach. This meta-model has rigorous logic-based semantics so that the tolerance type data is well computer-understandable. This lays a basis for further exchange of the semantics of the data among heterogeneous product development systems. As the benefits of the meta-model, consistency checking of the existing tolerance type data model and new knowledge inference based on the existing tolerance type data model can be performed through implementing the meta-model with the OWL/SWRL ontology based technologies  [33].

In addition to the tolerance type data, variational geometric constraint data is also an important kind of product data used for product tolerance design. These data describe the geometric variation information which is indispensable in tolerance analysis and synthesis. Hu et al.  [5] proposed an approach to use the data to generate the variational geometric constraint types to construct a tolerance chain for tolerance analysis and synthesis. This approach was implemented as a part of the FOCAT system  [6] later. Though FOCAT system provides many practical functions for tolerance design, the semantics of the variational geometric constraint data in the system cannot be expressed and interpreted explicitly. This is mainly because the variational geometric constraint data in FOCAT system is modeled in C++ language. C++ is only an implementation language. It is not based on formal semantics so that it does not enable computers to automatically distinguish the different meanings of a terminology in different contexts  [27]. The approach in  [5] and the FOCAT system are thus insufficient to satisfy the requirements of exchanging the semantics of variational geometric constraint data. To overcome this limitation, This paper extends the implemented meta-model of tolerance type data  [33] by adding the OWL 2 DL/SWRL description of variational geometric constraint data to achieve a semantically enriched ontology of the variational geometric constraint specification data in CAD systems. The semantically enriched ontology is capable of expressing and interpreting the semantics of variational geometric constraint data explicitly, which makes it possible to exchange these semantics among heterogeneous product development systems automatically. The theoretical basis and the detailed construction process and benefits of this ontology are explained in the following sections.

Variational geometric constraint network theory was proposed by Hu et al.  [5] to support the automatic design of the specification of geometrical tolerance types in the beginning. It was applied to design the specification of tolerance values for concurrent engineering soon afterwards  [34–36]. Recently the FOCAT system was developed based on the theory and its application  [6]. The OWL 2 DL/SWRL ontology for variational geometric constraint specifications in this paper is constructed through formalizing the variational geometric constraint specifications described in the theory. To make the paper self-contained, a brief introduction of these specifications is provided below.

A geometrical tolerance, by definition, is the allowable variation of a single feature or of the relative position and orientation between two features. In feature based CAD systems, a constraint between nominal features is called a geometric constraint. This can be formally defined as follow. 
                        Definition 1
                        Geometric Constraint


                        A geometric constraint is a constraint with nominal features as nodes and nominal parameter as arc: 
                              
                                 
                              
                           
                        

In feature based verification, a constraint between a real feature and its associated feature, two real features or two associated features is called a variational geometric constraint. This can be formally defined as follow. 
                        Definition 2
                        Variational Geometric Constraint


                        A variational geometric constraint (VGC) is a constraint with real and associated features as nodes and variation of parameters as arcs: 
                              
                                 
                              
                           
                        

In the perspective of assembly process, variation of parameter along six degrees of freedom (DOFs) includes three independent translations and three independent rotations. It is determined by the DOFs of the real feature. An illustration of the variations of parameter for the seven classes of real features  [37] is shown in Table 1
                     .

Generally, a VGC can be regarded as a triple group (
                        M
                        ,
                        N
                        ,
                        f
                     ), where 
                        M
                      is a referenced feature, 
                        N
                      is a constrained feature, and 
                        f
                      is a variation of parameter from 
                        M
                      to 
                        N
                     . Let 
                        M
                      be one of the associated derived features in Table 1, and 
                        N
                      be its corresponding real integral feature, seven kinds of VGCs called self-referenced VGCs (SVGCs) can be achieved and shown in Table 2
                     .

Similarly, let 
                        M
                      be one of the associated derived features of a part, and 
                        N
                      be another associated derived feature of the part, forty-nine kinds of VGCs called cross-referenced VGCs (CVGCs) are achieved. To simplify tolerance design, the values of 
                        M
                      and 
                        N
                      can only be a single associated derived point, associated derived line, or associated derived plane. Other complex situations can be decomposed into simple situations. As shown in Table 3
                     , there are twenty-seven kinds of CVGCs in total whose referenced features and constrained features are single associated derived point, associated derived line, or associated derived plane in the achieved forty-nine kinds of CVGCs. These twenty-seven kinds of CVGCs are called basic CVGCs.

For the seven classes of features in Table 1, let 
                        M
                      be one of the real integral features of a part, and 
                        N
                      be one of the real integral features of another part, where these two features have mating relation, forty-nine kinds of VGCs called mating VGCs (MVGCs) are achieved. As shown in Table 4
                     , there are six frequently-used MVGCs in practice, which are called lower-pair MVGCs.

To construct a variational geometric constraint network, two terminologies, mate feature tree and datum reference frame, should be defined first. 
                        Definition 3
                        Mate Feature Tree


                        A mate feature tree (MFT) is a graph with two mutual mating real integral features and their corresponding associated derived features as nodes and the corresponding SVGCs and MVGC as arcs: 
                              
                                 
                              
                            where rif(feature 1) is the real integral feature corresponding to feature 1, adf(feature 1) is the associated derived feature of feature 1, rif(feature 2) is the real integral feature corresponding to feature 2, adf(feature 2) is the associated derived feature of feature 2, and rif(feature 1) and rif(feature 2) have mating relation.


                     
                        Definition 4
                        Datum Reference Frame


                        A datum reference frame (DRF) is a Cartesian coordinate system constructed using datum features that serve to define the locations and orientations of tolerance zones associated with some features of a part.

A linkage of all mate feature trees and datum reference frames for an assembly forms a network, which is called as variational geometric constraint network. It can be formally defined as follow.


                     
                        Definition 5
                        Variational Geometric Constraint Network


                        A variational geometric constraint network (VGCN) is a looped graph with features as nodes and nominal parameters and variations of parameters as arcs: 
                              VGCN
                              =
                              
                                 Graph
                              
                              
                                 (
                                 V
                                 ;
                                 E
                                 )
                              
                            such that 
                              StartingNode
                              
                                 (
                                 VGCN
                                 )
                              
                              =
                              EndingNode
                              
                                 (
                                 VGCN
                                 )
                              
                            (the starting node of the VGCN is also its ending node), where 
                              V
                            is a set of nominal, real and associated features and 
                              E
                            is a set of nominal parameters and variations of parameters.

This section describes an approach to enrich the semantics of variational geometric constraint data. The schematic representation of this approach is illustrated in Fig. 1
                     . The first and second steps are to construct a set of terminology axioms (TBox) for VGC specifications and a set of role axioms (RBox) for VGC specifications according to the VGCN theory, respectively. Then some SWRL rules are designed to describe those specifications that cannot be described by OWL 2 DL in the third step. The last step is to extract the VGC data instances from CAD systems and translate these instances to OWL 2 DL individuals to construct a set of assertion axioms (ABox) for VGC data. Through these four steps, an OWL 2 DL/SWRL ontology for VGC specifications can be obtained by combining the constructed TBox, RBox and ABox, the designed SWRL rules and the OWL/SWRL ontology for tolerance type specifications in  [33]. Benefiting from the rigorous logic-based semantics of OWL 2 DL and SWRL, the semantics of VGC data are greatly enriched in the obtained OWL 2 DL/SWRL ontology. Consistency checking, knowledge reasoning and semantic queries, which are not currently available in FOCAT  [6] and CAD systems, can be performed on the obtained ontology. The details of the four steps and the benefits are discussed in the following sub-sections: (1) the construction of a TBox for VGC specifications; (2) the construction of an RBox for VGC specifications; (3) the design of SWRL rules for VGC specifications; (4) the construction of an ABox for VGC data; and (5) the benefits of the semantic enrichment approach.

OWL 2 DL, namely DL SROIQ(D)  [38], is an ontology representation and reasoning language recommended by W3C. This language is capable of describing domain specific concepts (classes), roles (properties) and individuals with a predefined and well understood formalism. Concepts describe the common attributes of a collection of domain individuals. Roles are defined as binary relations between concepts. Concepts, roles and individuals are three basic components of an OWL 2 DL statement. Starting from these components, an OWL 2 DL statement is recursively obtained with the use of a set of language constructs (i.e. negation (
                           ¬
                        ), existential restriction (
                           ∃
                        ), value restriction (
                           ∀
                        ), conjunction (
                           ⊓
                        ), disjunction (
                           ⊔
                        ), subsumption (
                           ⊑
                        ) and equivalence (
                           ≡
                        )).

The definitions of geometric constraint (Definition 1) and variational geometric constraint (Definition 2) are taken as two examples to illustrate the process to build OWL 2 DL statements. In Definition 1, a geometric constraint is defined as a constraint whose referenced feature is a nominal feature, constrained feature is also a nominal feature and geometric variation of the constrained feature with respect to the referenced feature is nominal parameter. The content of the definition can be seen as a statement in natural language which can only be interpreted by humans. To make this content be computer-interpretable, the statement in natural language needs to be translated into an OWL 2 DL statement. In this translation, geometric constraint, constraint, nominal feature and nominal parameter are defined as concepts and referenced feature, constrained feature and geometric variation are defined as roles. More specifically, the defined concepts and roles are as follows:
                           
                              •
                              
                                 GeometricConstraint is a composite concept (a concept that can be defined by other concepts) that represents a geometric constraint.


                                 Constraint is an atomic concept (a concept that cannot be defined by other concepts) that represents a constraint.


                                 NominalFeature is a composite concept that represents a nominal feature. This concept can be defined as:
                                    
                                       (1)
                                       
                                          
                                             NominalFeature
                                          
                                          ≡
                                          
                                             NominalIntegralFeature
                                          
                                          ⊔
                                          
                                             NominalDerivedFeature
                                          
                                       
                                    
                                  where NominalIntegralFeature and NominalDerivedFeature are all composite concepts that can be defined in a similar way according to Table 1.


                                 NominalParameter is an atomic concept that represents a nominal parameter. Its counterpart is a composite concept RealParameter that can be defined as the disjunction of VariationOfParameter and InvariantOfParameter: 
                                    
                                       (2)
                                       
                                          
                                             RealParameter
                                          
                                          ≡
                                          
                                             VariationOfParameter
                                          
                                          ⊔
                                          
                                             InvariantOfParameter
                                          
                                       
                                    
                                  where VariationOfParameter and InvariantOfParameter are atomic concepts that represent a variation of parameter (a degree of freedom) and an invariant of parameter (a degree of invariant), respectively.


                                 hasReferencedFeature is an atomic role (a role that has no sub-role) that represents a binary relation between Constraint and NominalFeature. It is used to specify the referenced feature of a constraint. The specified referenced feature is a nominal feature.


                                 hasConstrainedFeature is an atomic role that also represents a binary relation between Constraint and NominalFeature. It is used to specify the constrained feature of a constraint. The specified constrained feature is also a nominal feature.


                                 hasGeometricVariation is an atomic role that represents a binary relation between Constraint and NominalParameter. It is used to specify the geometric variation of a constraint. The specified geometric variation is a nominal parameter.

With the above concepts and roles, the translated OWL 2 DL statement can be represented as follow: 
                           
                              (3)
                              
                                 
                                    GeometricConstraint
                                 
                                 ≡
                                 
                                    Constraint
                                 
                                 ⊓
                                 ∃
                                 
                                 
                                    hasReferencedFeature
                                 
                                 .
                                 
                                    NominalFeature
                                 
                                 ⊓
                                 ∃
                                 
                                 
                                    hasConstrainedFeature
                                 
                                 .
                                 
                                    NominalFeature
                                 
                                 ⊓
                                 ∃
                                 
                                 
                                    hasGeometricVariation
                                 
                                 .
                                 
                                    NominalParameter
                                 
                              
                           
                        
                     

Similarly, Definition 2 states that a variational geometric constraint is defined as a constraint whose referenced feature is a real or associated feature, constrained feature is a real or associated feature and geometric variation of the constrained feature with respect to the referenced feature is variation of parameter. This statement can be represented in OWL 2 DL as follow:
                           
                              (4)
                              
                                 
                                    VariationalGeometricConstraint
                                 
                                 ≡
                                 
                                    Constraint
                                 
                                 ⊓
                                 ∃
                                 
                                 
                                    hasReferencedFeature
                                 
                                 .
                                 
                                    (
                                    
                                       RealFeature
                                    
                                    ⊓
                                    
                                       AssociatedFeature
                                    
                                    )
                                 
                                 ⊓
                                 ∃
                                 
                                 
                                    hasConstrainedFeature
                                 
                                 .
                                 
                                    (
                                    
                                       RealFeature
                                    
                                    ⊓
                                    
                                       AssociatedFeature
                                    
                                    )
                                 
                                 ⊓
                                 ∃
                                 
                                 
                                    hasGeometricVariation
                                 
                                 .
                                 
                                    VariationOfParameter
                                 
                              
                           
                         where RealFeature and AssociatedFeature are two composite concepts that represents a real feature and an associated feature, respectively. These two concepts can be defined as: 
                           
                              
                                 
                                    
                                       RealFeature
                                    
                                    ≡
                                    
                                       RealIntegralFeature
                                    
                                    ,
                                 
                              
                              
                                 (5)
                                 
                                    
                                       AssociatedFeature
                                    
                                    ≡
                                    
                                       AssociatedIntegralFeature
                                    
                                    ⊔
                                    
                                       AssociatedDerivedFeature
                                    
                                 
                              
                           
                         where RealIntegralFeature, AssociatedIntegralFeature and AssociatedDerivedFeature are all composite concepts that can be defined in a similar way according to Table 1.

Now a meaning can be assigned to the statements in Expressions (3) and (4) to make them computer-interpretable. This meaning is described through the notion of an interpretation 
                           I
                           =
                           
                              (
                              
                                 
                                    Δ
                                 
                                 
                                    I
                                 
                              
                              ,
                              
                                 
                                    
                                       ⋅
                                    
                                 
                                 
                                    I
                                 
                              
                              )
                           
                        , where 
                           
                              
                                 Δ
                              
                              
                                 I
                              
                           
                         is a non-empty universe of domain values and 
                           
                              
                                 
                                    ⋅
                                 
                              
                              
                                 I
                              
                           
                         is a mapping function that maps each concept 
                           
                              C
                           
                         to a subset 
                           
                              
                                 
                                    C
                                 
                              
                              
                                 I
                              
                           
                         of 
                           
                              
                                 Δ
                              
                              
                                 I
                              
                           
                         and each role 
                           
                              R
                           
                         to a subset 
                           
                              
                                 
                                    R
                                 
                              
                              
                                 I
                              
                           
                         of 
                           
                              
                                 Δ
                              
                              
                                 I
                              
                           
                           ×
                           
                              
                                 Δ
                              
                              
                                 I
                              
                           
                        . Details are illustrated in Table 5
                        .

Various logical decisions are defined based on the notion of the interpretation 
                           I
                         and related semantics. Along with well-defined semantics, an OWL 2 DL ontology has the capability to perform subsumption decision, equivalence decision, satisfiability decision and disjointness decision, where the later three ones can all be transformed into subsumption decision. In OWL 2 DL, a subsumption decision is defined as “A concept 
                           
                              
                                 
                                    C
                                 
                              
                              
                                 
                                    2
                                 
                              
                           
                         subsumes a concept 
                           
                              
                                 
                                    C
                                 
                              
                              
                                 
                                    1
                                 
                              
                           
                           
                           
                              (
                              
                                 
                                    
                                       C
                                    
                                 
                                 
                                    
                                       1
                                    
                                 
                              
                              ⊑
                              
                                 
                                    
                                       C
                                    
                                 
                                 
                                    
                                       2
                                    
                                 
                              
                              )
                           
                        , if and only if, for every interpretation 
                           I
                        , 
                           
                              
                                 
                                    C
                                 
                              
                              
                                 
                                    1
                                 
                              
                              
                                 I
                              
                           
                           ⊆
                           
                              
                                 
                                    C
                                 
                              
                              
                                 
                                    2
                                 
                              
                              
                                 I
                              
                           
                        ”. For example, to determine whether every variational geometric constraint is a type of constraint is equivalent to decide whether the concept Constraint subsumes the concept VariationalGeometricConstraint, i.e. whether
                           
                              (6)
                              
                                 
                                    VariationalGeometricConstraint
                                 
                                 ⊑
                                 
                                    Constraint
                                 
                              
                           
                         is true. Using the reasoning algorithm of OWL 2 DL  [38], this subsumption can be proved to be true.

So far, two kinds of OWL 2 DL statements have been introduced to describe the VGC specifications in VGCN theory. The first kind (e.g. Expressions (3) and (4)) is called concept definition axiom. This kind of axiom is used to define a composite concept. The second kind (e.g. Expression (6)) is named concept subsumption axiom. It is used to specify the inheritance relationships between concepts. In OWL 2 DL, a finite set of concept definition axioms and concept subsumption axioms is called a TBox.

As can be summarized from the above two examples (i.e. the representations of Definitions 1 and 2 in OWL 2 DL axioms), a TBox for VGC specifications is constructed according to the following steps: (1) Identify concepts and their inheritance relationships from VGCN theory. (2) Distinguish atomic concepts from the identified concepts. (3) Use the distinguished atomic concepts and concept definition axioms to define composite concepts. (4) Apply concept subsumption axioms to represent the identified inheritance relationships between concepts. (5) Gather all the axioms to achieve an axiom set (i.e. a TBox).

The construction of an RBox for the SVGC specifications in Table 2 is used as an example to illustrate the construction of an RBox for all VGC specifications in this sub-section. In Table 2, seven types of SVGCs, i.e. SVGC01, SVGC02, …, SVGC07, are listed. Intuitively, each SVGC represents a binary relation between a real integral feature and an associated derived feature, where the real integral feature is a constrained feature and the associated derived feature is a referenced feature. Hence, the seven types of SVGCs are all defined as roles. Similarly, constraint also represents a binary relation between a real integral feature and an associated derived feature and it is also defined as a role. To be more specific, the defined roles for Table 2 are as follows: 
                           
                              •
                              
                                 hasSVGC is a composite role (a role that has one or more sub-roles) that represents a SVGC. It has seven sub-roles: hasSVGC01, hasSVGC02, …, hasSVGC07. These seven sub-roles are all atomic roles that represent SVGC01, SVGC02, …, SVGC07 in Table 2, respectively. Seven OWL 2 DL statements are defined to specify the inheritance relationships between hasSVGC and its seven sub-roles. For example, the statement defined to specify the inheritance relationship between hasSVGC and hasSVGC01 is as follow: 
                                    
                                       (7)
                                       
                                          
                                             hasSVGC01
                                          
                                          ⊑
                                          
                                             hasSVGC
                                          
                                       
                                    
                                  Further, the type of an arbitrary SVGC can only be one of the seven types. This means that the seven sub-roles hasSVGC01, hasSVGC02, …, hasSVGC07 are mutually disjoint. This fact can be described by twenty-one OWL 2 DL statements. For instance, the fact “hasSVGC01 and hasSVGC02 are mutually disjoint” can be described by the following statement: 
                                    
                                       (8)
                                       
                                          
                                             Dis
                                          
                                          
                                             (
                                             
                                                hasSVGC01
                                             
                                             ,
                                             
                                                hasSVGC02
                                             
                                             )
                                          
                                       
                                    
                                 
                              


                                 hasConstraintRelation is a composite role that represents a constraint relation. hasConstraint is one of the nine sub-roles that represent a constraint relation between a real integral feature and an associated derived feature, two associated derived features or two real integral features. An OWL 2 DL statement is defined to specify the inheritance relationship between these two roles: 
                                    
                                       (9)
                                       
                                          
                                             hasConstraint
                                          
                                          ⊑
                                          
                                             hasConstraintRelation
                                          
                                       
                                    
                                 
                              

Now a meaning can be assigned to the statements in Expressions (7)–(9) to make them computer-interpretable. This meaning is also described by the notion of the interpretation 
                           I
                           =
                           
                              (
                              
                                 
                                    Δ
                                 
                                 
                                    I
                                 
                              
                              ,
                              
                                 
                                    
                                       ⋅
                                    
                                 
                                 
                                    I
                                 
                              
                              )
                           
                        . Details are illustrated in Table 6
                        .

By now, the binary relations and their relationships in Table 2 have been described by roles and another two kinds of OWL 2 DL statements, respectively. The first kind (e.g. Expressions (7) and (9)) is called role inclusion axiom. It is used to specify the inheritance relationships between roles. The second kind (e.g. Expression (8)) is named role assertion axiom and it is applied to express some specific relationships (e.g. disjoint relationship) between roles. In OWL 2 DL, a finite set of role inclusion axioms and role assertion axioms is called an RBox. Thus, the RBox for the SVGC specifications in Table 2 is obtained by gathering all the axioms in Expressions (7)–(9).

From the construction process of the RBox for the SVGC specifications in Table 2, the construction process of an RBox for VGC specifications can be obtained as follows: (1) Identify roles and their relationships from VGCN theory. (2) Use role inclusion axioms to define the inheritance relationships between roles. (3) Apply role assertion axioms to describe the specific relationships between roles. (4) Gather all the axioms to achieve an axiom set (i.e. an RBox).

This sub-section first explains that not all VGC specifications in VGCN theory can be represented by OWL 2 DL and then introduces some SWRL rules to describe these specifications. For sake of simplicity, VGC type specification is taken as an example of those VGC specifications that cannot be represented by OWL 2 DL.

A VGC can be considered as a constraint relation from a referenced feature to a constrained feature (for SVGC and CVGC) or a constraint relation between a referenced feature and a constrained feature (for MVGC). Hence, a VGC is essentially a binary relation. To determine the VGC type which this binary relation belongs to, some rules require to be designed. A direct method is to use OWL 2 DL axioms to define these rules. For example, let AssociatedDerivedLine, RealInnerCylindrical and RealOuterCylindrical be atomic concepts that represents an associated derived line, a real inner cylindrical and a real outer cylindrical, respectively. An axiom for determine SVGC02 in Table 2 can be written in a straightforward manner as follow:
                           
                              (10)
                              
                                 
                                    AssociatedDerivedLine
                                 
                                 ⊓
                                 ∃
                                 
                                 
                                    hasConstraint
                                 
                                 .
                                 
                                    (
                                    
                                       RealInnerCylindrical
                                    
                                    ⊔
                                    
                                    
                                       RealOuterCylindrical
                                    
                                    )
                                 
                                 ⊑
                                 
                                    hasSVGC02
                                 
                              
                           
                         This axiom is illegal in OWL 2 DL because OWL 2 DL does not allow a subsumption relationship between a concept (the left-hand side of “
                           ⊑
                        ” is a composite concept) and a role (the right-hand side of “
                           ⊑
                        ” is an atomic role).

To represent this kind of subsumption relationships, W3C has developed the SWRL rule description language  [14], which is tightly integrated with OWL since atoms in SWRL rules may include OWL concepts or roles. A SWRL rule has the form “
                           
                              antecedent
                           
                           
                           -
                           >
                           
                              consequent
                           
                        ”, where both 
                           
                              antecedent
                           
                         and 
                           
                              consequent
                           
                         are the conjunctions of atoms written “
                           
                              
                                 
                                    a
                                 
                              
                              
                                 
                                    1
                                 
                              
                           
                           ,
                           
                              
                                 
                                    a
                                 
                              
                              
                                 
                                    2
                                 
                              
                           
                           ,
                           …
                           ,
                           
                              
                                 
                                    a
                                 
                              
                              
                                 
                                    n
                                 
                              
                           
                           
                           
                              (
                              
                                 
                                    
                                       a
                                    
                                 
                                 
                                    
                                       1
                                    
                                 
                              
                              ∧
                              
                                 
                                    
                                       a
                                    
                                 
                                 
                                    
                                       2
                                    
                                 
                              
                              ∧
                              ⋯
                              ∧
                              
                                 
                                    
                                       a
                                    
                                 
                                 
                                    
                                       n
                                    
                                 
                              
                              )
                           
                        ”. Variables are marked through using the standard convention of prefixing them with a question mark (e.g.  
                           ?
                           x
                           ,
                           ?
                           y
                        ). For example, two SWRL rules for determining SVGC02 in Table 2 would be written as:
                           
                              
                                 
                                    
                                       AssociatedDerivedLine
                                    
                                    
                                       (
                                       ?
                                       x
                                       )
                                    
                                    ,
                                    
                                       RealInnerCylindrical
                                    
                                    
                                       (
                                       ?
                                       y
                                       )
                                    
                                    ,
                                    
                                       hasConstraint
                                    
                                    
                                       (
                                       ?
                                       x
                                       ,
                                       ?
                                       y
                                       )
                                    
                                    
                                    -
                                    >
                                    
                                       hasSVGC02
                                    
                                    
                                       (
                                       ?
                                       x
                                       ,
                                       ?
                                       y
                                       )
                                    
                                    ,
                                 
                              
                              
                                 (11)
                                 
                                    
                                       AssociatedDerivedLine
                                    
                                    
                                       (
                                       ?
                                       x
                                       )
                                    
                                    ,
                                    
                                       RealOuterCylindrical
                                    
                                    
                                       (
                                       ?
                                       y
                                       )
                                    
                                    ,
                                    
                                       hasConstraint
                                    
                                    
                                       (
                                       ?
                                       x
                                       ,
                                       ?
                                       y
                                       )
                                    
                                    
                                    -
                                    >
                                    
                                       hasSVGC02
                                    
                                    
                                       (
                                       ?
                                       x
                                       ,
                                       ?
                                       y
                                       )
                                    
                                 
                              
                           
                         The schematic representation of these two rules is shown in Fig. 2
                        . In this figure, the meanings of the two rules are obvious. i.e. If 
                           x
                         is an associated derived line, 
                           y
                         is a real inner (outer) cylindrical, there is a constraint relation from 
                           x
                         to 
                           y
                        , then there is a SVGC02 from 
                           x
                         to 
                           y
                        . These meanings can also be described through using the notion of the interpretation 
                           I
                           =
                           
                              (
                              
                                 
                                    Δ
                                 
                                 
                                    I
                                 
                              
                              ,
                              
                                 
                                    
                                       ⋅
                                    
                                 
                                 
                                    I
                                 
                              
                              )
                           
                         to achieve computer-interpretable semantics. The description is as follow: 
                           
                              (12)
                              
                                 
                                    (
                                    
                                       
                                          
                                             AssociatedDerivedLine
                                          
                                       
                                       
                                          I
                                       
                                    
                                    ∩
                                    
                                       (
                                       
                                          
                                             
                                                RealInnerCylindrical
                                             
                                          
                                          
                                             I
                                          
                                       
                                       ∪
                                       
                                       
                                          
                                             
                                                RealOuterCylindrical
                                             
                                          
                                          
                                             I
                                          
                                       
                                       )
                                    
                                    ∩
                                    
                                       
                                          
                                             hasConstraint
                                          
                                       
                                       
                                          I
                                       
                                    
                                    )
                                 
                                 ⊆
                                 
                                    
                                       
                                          hasSVGC02
                                       
                                    
                                    
                                       I
                                    
                                 
                              
                           
                         This description can be directly interpreted by computers, which makes it possible to automatically reason out SVGC02. Section  5 will provide an example to illustrate this reasoning process.

As can be seen from the example in Expression (11), a SWRL rule for determining a VGC type can be designed by taking the concepts representing referenced and constrained features and the role representing constraint relation as antecedent and the role representing the VGC type as consequent. Through this way, fifty-one SWRL rules for determining the VGC types in Tables 2–4 are designed in the constructed OWL 2 DL/SWRL ontology for VGC specifications.

This sub-section uses the example shown in Fig. 3
                           [5] to discuss the construction of an ABox for the VGC data extracted from CAD systems. In this example, a disassembled assembly consisting of two parts is described. To use OWL 2 DL statements to describe this assembly, the first step is to disassemble the assembly and to extract parts and mating relations among parts from the disassembled assembly. Using a CAD system, the assembly can be easily disassembled based on its mechanical structure. Then parts and mating relations among parts are extracted by the liaison table generator (LTG) algorithm  [39]. As shown in Fig. 3, the extracted nominal parts are 
                           
                              
                                 p
                              
                              
                                 1
                              
                           
                         and 
                           
                              
                                 p
                              
                              
                                 2
                              
                           
                         and the extracted mating relation among these nominal parts is a mating relation between 
                           
                              
                                 p
                              
                              
                                 1
                              
                           
                         and 
                           
                              
                                 p
                              
                              
                                 2
                              
                           
                        . Thus the real parts corresponding to these extracted nominal parts are 
                           r
                           p
                           
                              (
                              
                                 
                                    p
                                 
                                 
                                    1
                                 
                              
                              )
                           
                         and 
                           r
                           p
                           
                              (
                              
                                 
                                    p
                                 
                                 
                                    2
                                 
                              
                              )
                           
                         and the mating relation among these real parts is a mating relation between 
                           r
                           p
                           
                              (
                              
                                 
                                    p
                                 
                                 
                                    1
                                 
                              
                              )
                           
                         and 
                           r
                           p
                           
                              (
                              
                                 
                                    p
                                 
                                 
                                    2
                                 
                              
                              )
                           
                        . These can be represented by the following four statements:
                           
                              (13)
                              
                                 
                                    RealPart
                                 
                                 
                                    (
                                    r
                                    p
                                    
                                       (
                                       
                                          
                                             p
                                          
                                          
                                             1
                                          
                                       
                                       )
                                    
                                    )
                                 
                                 ,
                                 
                                    RealPart
                                 
                                 
                                    (
                                    r
                                    p
                                    
                                       (
                                       
                                          
                                             p
                                          
                                          
                                             2
                                          
                                       
                                       )
                                    
                                    )
                                 
                                 ,
                                 
                                    hasMating
                                 
                                 
                                    (
                                    r
                                    p
                                    
                                       (
                                       
                                          
                                             p
                                          
                                          
                                             1
                                          
                                       
                                       )
                                    
                                    ,
                                    r
                                    p
                                    
                                       (
                                       
                                          
                                             p
                                          
                                          
                                             2
                                          
                                       
                                       )
                                    
                                    )
                                 
                                 ,
                                 
                                    hasMating
                                 
                                 
                                    (
                                    r
                                    p
                                    
                                       (
                                       
                                          
                                             p
                                          
                                          
                                             2
                                          
                                       
                                       )
                                    
                                    ,
                                    r
                                    p
                                    
                                       (
                                       
                                          
                                             p
                                          
                                          
                                             1
                                          
                                       
                                       )
                                    
                                    )
                                 
                              
                           
                         where RealPart is a concept that represents a real part and hasMating is a role that represents a mating relation between two parts or two features.

Based on the extracted parts and mating relations among parts, the nominal integral features of each part and the mating relations among these features can be extracted by the assembly mate extraction (AME) algorithm  [40]. For example, the extracted nominal integral features of 
                           
                              
                                 p
                              
                              
                                 1
                              
                           
                         and 
                           
                              
                                 p
                              
                              
                                 2
                              
                           
                         and the mating relations among these nominal integral features are: (1) Nominal planar 
                           
                              
                                 s
                              
                              
                                 1
                              
                           
                           
                              (
                              
                                 
                                    p
                                 
                                 
                                    1
                                 
                              
                              )
                           
                        , nominal planar 
                           
                              
                                 s
                              
                              
                                 2
                              
                           
                           
                              (
                              
                                 
                                    p
                                 
                                 
                                    1
                                 
                              
                              )
                           
                        , nominal planar 
                           
                              
                                 s
                              
                              
                                 3
                              
                           
                           
                              (
                              
                                 
                                    p
                                 
                                 
                                    1
                                 
                              
                              )
                           
                        , nominal outer cylindrical 
                           
                              
                                 s
                              
                              
                                 4
                              
                           
                           
                              (
                              
                                 
                                    p
                                 
                                 
                                    1
                                 
                              
                              )
                           
                         and nominal outer cylindrical 
                           
                              
                                 s
                              
                              
                                 5
                              
                           
                           
                              (
                              
                                 
                                    p
                                 
                                 
                                    1
                                 
                              
                              )
                           
                         are the five nominal integral features of 
                           
                              
                                 p
                              
                              
                                 1
                              
                           
                        . (2) Nominal planar 
                           
                              
                                 s
                              
                              
                                 1
                              
                           
                           
                              (
                              
                                 
                                    p
                                 
                                 
                                    2
                                 
                              
                              )
                           
                        , nominal planar 
                           
                              
                                 s
                              
                              
                                 2
                              
                           
                           
                              (
                              
                                 
                                    p
                                 
                                 
                                    2
                                 
                              
                              )
                           
                        , nominal planar 
                           
                              
                                 s
                              
                              
                                 3
                              
                           
                           
                              (
                              
                                 
                                    p
                                 
                                 
                                    2
                                 
                              
                              )
                           
                        , nominal inner cylindrical 
                           
                              
                                 s
                              
                              
                                 4
                              
                           
                           
                              (
                              
                                 
                                    p
                                 
                                 
                                    2
                                 
                              
                              )
                           
                         and nominal inner cylindrical 
                           
                              
                                 s
                              
                              
                                 5
                              
                           
                           
                              (
                              
                                 
                                    p
                                 
                                 
                                    2
                                 
                              
                              )
                           
                         are the five nominal integral features of 
                           
                              
                                 p
                              
                              
                                 2
                              
                           
                        . (3) There are two mating relations among these nominal integral features, one is between 
                           
                              
                                 s
                              
                              
                                 4
                              
                           
                           
                              (
                              
                                 
                                    p
                                 
                                 
                                    1
                                 
                              
                              )
                           
                         and 
                           
                              
                                 s
                              
                              
                                 4
                              
                           
                           
                              (
                              
                                 
                                    p
                                 
                                 
                                    2
                                 
                              
                              )
                           
                         and the other is between 
                           
                              
                                 s
                              
                              
                                 5
                              
                           
                           
                              (
                              
                                 
                                    p
                                 
                                 
                                    1
                                 
                              
                              )
                           
                         and 
                           
                              
                                 s
                              
                              
                                 5
                              
                           
                           
                              (
                              
                                 
                                    p
                                 
                                 
                                    2
                                 
                              
                              )
                           
                        . Hence, the real integral features corresponding to the extracted nominal integral features and the relations among them can be determined as: (1) Real planar 
                           
                              rif
                           
                           
                              (
                              
                                 
                                    s
                                 
                                 
                                    1
                                 
                              
                              
                                 (
                                 
                                    
                                       p
                                    
                                    
                                       1
                                    
                                 
                                 )
                              
                              )
                           
                        , real planar 
                           
                              rif
                           
                           
                              (
                              
                                 
                                    s
                                 
                                 
                                    2
                                 
                              
                              
                                 (
                                 
                                    
                                       p
                                    
                                    
                                       1
                                    
                                 
                                 )
                              
                              )
                           
                        , real planar 
                           
                              rif
                           
                           
                              (
                              
                                 
                                    s
                                 
                                 
                                    3
                                 
                              
                              
                                 (
                                 
                                    
                                       p
                                    
                                    
                                       1
                                    
                                 
                                 )
                              
                              )
                           
                        , real outer cylindrical 
                           
                              rif
                           
                           
                              (
                              
                                 
                                    s
                                 
                                 
                                    4
                                 
                              
                              
                                 (
                                 
                                    
                                       p
                                    
                                    
                                       1
                                    
                                 
                                 )
                              
                              )
                           
                         and real outer cylindrical 
                           
                              rif
                           
                           
                              (
                              
                                 
                                    s
                                 
                                 
                                    5
                                 
                              
                              
                                 (
                                 
                                    
                                       p
                                    
                                    
                                       1
                                    
                                 
                                 )
                              
                              )
                           
                         are the five real integral features corresponding to 
                           
                              
                                 p
                              
                              
                                 1
                              
                           
                        . (2) Real planar 
                           
                              rif
                           
                           
                              (
                              
                                 
                                    s
                                 
                                 
                                    1
                                 
                              
                              
                                 (
                                 
                                    
                                       p
                                    
                                    
                                       2
                                    
                                 
                                 )
                              
                              )
                           
                        , real planar 
                           
                              rif
                           
                           
                              (
                              
                                 
                                    s
                                 
                                 
                                    2
                                 
                              
                              
                                 (
                                 
                                    
                                       p
                                    
                                    
                                       2
                                    
                                 
                                 )
                              
                              )
                           
                        , real planar 
                           
                              rif
                           
                           
                              (
                              
                                 
                                    s
                                 
                                 
                                    3
                                 
                              
                              
                                 (
                                 
                                    
                                       p
                                    
                                    
                                       2
                                    
                                 
                                 )
                              
                              )
                           
                        , real inner cylindrical 
                           
                              rif
                           
                           
                              (
                              
                                 
                                    s
                                 
                                 
                                    4
                                 
                              
                              
                                 (
                                 
                                    
                                       p
                                    
                                    
                                       2
                                    
                                 
                                 )
                              
                              )
                           
                         and real inner cylindrical 
                           
                              rif
                           
                           
                              (
                              
                                 
                                    s
                                 
                                 
                                    5
                                 
                              
                              
                                 (
                                 
                                    
                                       p
                                    
                                    
                                       2
                                    
                                 
                                 )
                              
                              )
                           
                         are the five real integral features corresponding to 
                           
                              
                                 p
                              
                              
                                 2
                              
                           
                        . (3) There are two mating relations among these real integral features, one is between 
                           
                              rif
                           
                           
                              (
                              
                                 
                                    s
                                 
                                 
                                    4
                                 
                              
                              
                                 (
                                 
                                    
                                       p
                                    
                                    
                                       1
                                    
                                 
                                 )
                              
                              )
                           
                         and 
                           
                              rif
                           
                           
                              (
                              
                                 
                                    s
                                 
                                 
                                    4
                                 
                              
                              
                                 (
                                 
                                    
                                       p
                                    
                                    
                                       2
                                    
                                 
                                 )
                              
                              )
                           
                         and the other is between 
                           
                              rif
                           
                           
                              (
                              
                                 
                                    s
                                 
                                 
                                    5
                                 
                              
                              
                                 (
                                 
                                    
                                       p
                                    
                                    
                                       1
                                    
                                 
                                 )
                              
                              )
                           
                         and 
                           
                              rif
                           
                           
                              (
                              
                                 
                                    s
                                 
                                 
                                    5
                                 
                              
                              
                                 (
                                 
                                    
                                       p
                                    
                                    
                                       2
                                    
                                 
                                 )
                              
                              )
                           
                        . These determined features and relations can be described by the following statements:
                           
                              
                                 
                                    
                                       RealPlanar
                                    
                                    
                                       (
                                       
                                          rif
                                       
                                       
                                          (
                                          
                                             
                                                s
                                             
                                             
                                                1
                                             
                                          
                                          
                                             (
                                             
                                                
                                                   p
                                                
                                                
                                                   1
                                                
                                             
                                             )
                                          
                                          )
                                       
                                       )
                                    
                                    ,
                                    
                                       RealPlanar
                                    
                                    
                                       (
                                       
                                          rif
                                       
                                       
                                          (
                                          
                                             
                                                s
                                             
                                             
                                                2
                                             
                                          
                                          
                                             (
                                             
                                                
                                                   p
                                                
                                                
                                                   1
                                                
                                             
                                             )
                                          
                                          )
                                       
                                       )
                                    
                                    ,
                                    
                                       RealPlanar
                                    
                                    
                                       (
                                       
                                          rif
                                       
                                       
                                          (
                                          
                                             
                                                s
                                             
                                             
                                                3
                                             
                                          
                                          
                                             (
                                             
                                                
                                                   p
                                                
                                                
                                                   1
                                                
                                             
                                             )
                                          
                                          )
                                       
                                       )
                                    
                                    ,
                                 
                              
                              
                                 
                                    
                                       RealOuterCylindrical
                                    
                                    
                                       (
                                       
                                          rif
                                       
                                       
                                          (
                                          
                                             
                                                s
                                             
                                             
                                                4
                                             
                                          
                                          
                                             (
                                             
                                                
                                                   p
                                                
                                                
                                                   1
                                                
                                             
                                             )
                                          
                                          )
                                       
                                       )
                                    
                                    ,
                                    
                                       RealOuterCylindrical
                                    
                                    
                                       (
                                       
                                          rif
                                       
                                       
                                          (
                                          
                                             
                                                s
                                             
                                             
                                                5
                                             
                                          
                                          
                                             (
                                             
                                                
                                                   p
                                                
                                                
                                                   1
                                                
                                             
                                             )
                                          
                                          )
                                       
                                       )
                                    
                                    ,
                                 
                              
                              
                                 
                                    
                                       RealPlanar
                                    
                                    
                                       (
                                       
                                          rif
                                       
                                       
                                          (
                                          
                                             
                                                s
                                             
                                             
                                                1
                                             
                                          
                                          
                                             (
                                             
                                                
                                                   p
                                                
                                                
                                                   2
                                                
                                             
                                             )
                                          
                                          )
                                       
                                       )
                                    
                                    ,
                                    
                                       RealPlanar
                                    
                                    
                                       (
                                       
                                          rif
                                       
                                       
                                          (
                                          
                                             
                                                s
                                             
                                             
                                                2
                                             
                                          
                                          
                                             (
                                             
                                                
                                                   p
                                                
                                                
                                                   2
                                                
                                             
                                             )
                                          
                                          )
                                       
                                       )
                                    
                                    ,
                                    
                                       RealPlanar
                                    
                                    
                                       (
                                       
                                          rif
                                       
                                       
                                          (
                                          
                                             
                                                s
                                             
                                             
                                                3
                                             
                                          
                                          
                                             (
                                             
                                                
                                                   p
                                                
                                                
                                                   2
                                                
                                             
                                             )
                                          
                                          )
                                       
                                       )
                                    
                                    ,
                                 
                              
                              
                                 
                                    
                                       RealInnerCylindrical
                                    
                                    
                                       (
                                       
                                          rif
                                       
                                       
                                          (
                                          
                                             
                                                s
                                             
                                             
                                                4
                                             
                                          
                                          
                                             (
                                             
                                                
                                                   p
                                                
                                                
                                                   2
                                                
                                             
                                             )
                                          
                                          )
                                       
                                       )
                                    
                                    ,
                                    
                                       RealInnerCylindrical
                                    
                                    
                                       (
                                       
                                          rif
                                       
                                       
                                          (
                                          
                                             
                                                s
                                             
                                             
                                                5
                                             
                                          
                                          
                                             (
                                             
                                                
                                                   p
                                                
                                                
                                                   2
                                                
                                             
                                             )
                                          
                                          )
                                       
                                       )
                                    
                                    ,
                                 
                              
                              
                                 
                                    
                                       hasMating
                                    
                                    
                                       (
                                       
                                          rif
                                       
                                       
                                          (
                                          
                                             
                                                s
                                             
                                             
                                                4
                                             
                                          
                                          
                                             (
                                             
                                                
                                                   p
                                                
                                                
                                                   1
                                                
                                             
                                             )
                                          
                                          )
                                       
                                       ,
                                       
                                          rif
                                       
                                       
                                          (
                                          
                                             
                                                s
                                             
                                             
                                                4
                                             
                                          
                                          
                                             (
                                             
                                                
                                                   p
                                                
                                                
                                                   2
                                                
                                             
                                             )
                                          
                                          )
                                       
                                       )
                                    
                                    ,
                                    
                                       hasMating
                                    
                                    
                                       (
                                       
                                          rif
                                       
                                       
                                          (
                                          
                                             
                                                s
                                             
                                             
                                                4
                                             
                                          
                                          
                                             (
                                             
                                                
                                                   p
                                                
                                                
                                                   2
                                                
                                             
                                             )
                                          
                                          )
                                       
                                       ,
                                       
                                          rif
                                       
                                       
                                          (
                                          
                                             
                                                s
                                             
                                             
                                                4
                                             
                                          
                                          
                                             (
                                             
                                                
                                                   p
                                                
                                                
                                                   1
                                                
                                             
                                             )
                                          
                                          )
                                       
                                       )
                                    
                                    ,
                                 
                              
                              
                                 (14)
                                 
                                    
                                       hasMating
                                    
                                    
                                       (
                                       
                                          rif
                                       
                                       
                                          (
                                          
                                             
                                                s
                                             
                                             
                                                5
                                             
                                          
                                          
                                             (
                                             
                                                
                                                   p
                                                
                                                
                                                   1
                                                
                                             
                                             )
                                          
                                          )
                                       
                                       ,
                                       
                                          rif
                                       
                                       
                                          (
                                          
                                             
                                                s
                                             
                                             
                                                5
                                             
                                          
                                          
                                             (
                                             
                                                
                                                   p
                                                
                                                
                                                   2
                                                
                                             
                                             )
                                          
                                          )
                                       
                                       )
                                    
                                    ,
                                    
                                       hasMating
                                    
                                    
                                       (
                                       
                                          rif
                                       
                                       
                                          (
                                          
                                             
                                                s
                                             
                                             
                                                5
                                             
                                          
                                          
                                             (
                                             
                                                
                                                   p
                                                
                                                
                                                   2
                                                
                                             
                                             )
                                          
                                          )
                                       
                                       ,
                                       
                                          rif
                                       
                                       
                                          (
                                          
                                             
                                                s
                                             
                                             
                                                5
                                             
                                          
                                          
                                             (
                                             
                                                
                                                   p
                                                
                                                
                                                   1
                                                
                                             
                                             )
                                          
                                          )
                                       
                                       )
                                    
                                 
                              
                           
                         where RealPlanar is an atomic concept that represents a real planar.

With the determined real integral features and mating relations among them, the associated derived features of these real integral features can be obtained from Table 1 and the constraint relation between each determined real integral feature and its associated derived feature or between two associated derived features can be determined according to the procedure developed in  [33]. For instance, the associated derived features of 
                           
                              rif
                           
                           
                              (
                              
                                 
                                    s
                                 
                                 
                                    1
                                 
                              
                              
                                 (
                                 
                                    
                                       p
                                    
                                    
                                       2
                                    
                                 
                                 )
                              
                              )
                           
                         and 
                           
                              rif
                           
                           
                              (
                              
                                 
                                    s
                                 
                                 
                                    4
                                 
                              
                              
                                 (
                                 
                                    
                                       p
                                    
                                    
                                       2
                                    
                                 
                                 )
                              
                              )
                           
                         are respectively an associated derived plane and an associated derived line according to Table 1. The constraint relations between 
                           
                              rif
                           
                           
                              (
                              
                                 
                                    s
                                 
                                 
                                    4
                                 
                              
                              
                                 (
                                 
                                    
                                       p
                                    
                                    
                                       2
                                    
                                 
                                 )
                              
                              )
                           
                         and its associated derived feature 
                           
                              adf
                           
                           
                              (
                              
                                 
                                    s
                                 
                                 
                                    4
                                 
                              
                              
                                 (
                                 
                                    
                                       p
                                    
                                    
                                       2
                                    
                                 
                                 )
                              
                              )
                           
                         and between 
                           
                              adf
                           
                           
                              (
                              
                                 
                                    s
                                 
                                 
                                    4
                                 
                              
                              
                                 (
                                 
                                    
                                       p
                                    
                                    
                                       2
                                    
                                 
                                 )
                              
                              )
                           
                         and the associated derived feature of 
                           
                              
                                 s
                              
                              
                                 1
                              
                           
                           
                              (
                              
                                 
                                    p
                                 
                                 
                                    2
                                 
                              
                              )
                           
                           
                           
                              (
                              
                                 adf
                              
                              
                                 (
                                 
                                    
                                       s
                                    
                                    
                                       1
                                    
                                 
                                 
                                    (
                                    
                                       
                                          p
                                       
                                       
                                          2
                                       
                                    
                                    )
                                 
                                 )
                              
                              )
                           
                         are respectively determined as constraint and perpendicular by the procedure developed in  [33]. These facts can be expressed through the following statements:
                           
                              
                                 
                                    
                                       AssociatedDerivedPlane
                                    
                                    
                                       (
                                       
                                          adf
                                       
                                       
                                          (
                                          
                                             
                                                s
                                             
                                             
                                                1
                                             
                                          
                                          
                                             (
                                             
                                                
                                                   p
                                                
                                                
                                                   2
                                                
                                             
                                             )
                                          
                                          )
                                       
                                       )
                                    
                                    ,
                                    
                                       AssociatedDerivedLine
                                    
                                    
                                       (
                                       
                                          adf
                                       
                                       
                                          (
                                          
                                             
                                                s
                                             
                                             
                                                4
                                             
                                          
                                          
                                             (
                                             
                                                
                                                   p
                                                
                                                
                                                   2
                                                
                                             
                                             )
                                          
                                          )
                                       
                                       )
                                    
                                    ,
                                 
                              
                              
                                 (15)
                                 
                                    
                                       hasConstraint
                                    
                                    
                                       (
                                       
                                          adf
                                       
                                       
                                          (
                                          
                                             
                                                s
                                             
                                             
                                                4
                                             
                                          
                                          
                                             (
                                             
                                                
                                                   p
                                                
                                                
                                                   2
                                                
                                             
                                             )
                                          
                                          )
                                       
                                       ,
                                       
                                          rif
                                       
                                       
                                          (
                                          
                                             
                                                s
                                             
                                             
                                                4
                                             
                                          
                                          
                                             (
                                             
                                                
                                                   p
                                                
                                                
                                                   2
                                                
                                             
                                             )
                                          
                                          )
                                       
                                       )
                                    
                                    ,
                                    
                                       hasPerpendicular
                                    
                                    
                                       (
                                       
                                          adf
                                       
                                       
                                          (
                                          
                                             
                                                s
                                             
                                             
                                                1
                                             
                                          
                                          
                                             (
                                             
                                                
                                                   p
                                                
                                                
                                                   2
                                                
                                             
                                             )
                                          
                                          )
                                       
                                       ,
                                       
                                          adf
                                       
                                       
                                          (
                                          
                                             
                                                s
                                             
                                             
                                                4
                                             
                                          
                                          
                                             (
                                             
                                                
                                                   p
                                                
                                                
                                                   2
                                                
                                             
                                             )
                                          
                                          )
                                       
                                       )
                                    
                                 
                              
                           
                         where AssociatedDerivedPlane is an atomic concept that represents an associated derived plane, hasPerpendicular is a role that represents a perpendicular relation between two associated derived features.

Now two kinds of OWL 2 DL statements (an example for the first kind is 
                           
                              Part
                           
                           
                              (
                              
                                 
                                    p
                                 
                                 
                                    1
                                 
                              
                              )
                           
                         and for the second kind is 
                           
                              hasMating
                           
                           
                              (
                              
                                 
                                    p
                                 
                                 
                                    1
                                 
                              
                              ,
                              
                                 
                                    p
                                 
                                 
                                    2
                                 
                              
                              )
                           
                        ) have been used to describe the VGC data. In OWL 2 DL, both the two kinds of statements are called individual assertion axioms and a finite set of these axioms is defined as an ABox. Thus an ABox for the VGC data extracted from the assembly in Fig. 3 can be obtained through gathering all the individuals in Expressions (13)–(15). From the construction process of this ABox, the construction process of an ABox for the VGC data in an arbitrary assembly is summarized as follows: 
                           
                              •
                              Disassembly the assembly in a CAD system.

Use LTG algorithm  [39] to extract nominal parts and mating relations among nominal parts from the disassembled assembly.

Determine and describe the real parts corresponding to the extracted nominal parts and the mating relations among these real parts by individual assertion axioms.

Use the AME algorithm  [40] to extract the nominal integral features of each nominal part and the mating relations among these features.

Determine and describe the real integral features corresponding to the extracted nominal integral features and the mating relations among these real integral features by individual assertion axioms.

Determine the associated derived features of the determined real integral features according to Table 1.

Determine the constraint relation between each determined real integral feature and its associated derived feature or between two determined associated derived features according to the procedure developed in  [33].

Describe these determined associated derived features and constraint relations by individual assertion axioms.

Gather all the individual assertion axioms to achieve the ABox.

OWL 2 DL, i.e. DL SROIQ(D)  [38], can provide the maximum expressive capability under the prerequisite of ensuring computational completeness (all conclusions are guaranteed to be computable) and computational decidability (all computations will be finished in finite time). More specifically, the complexity upper-bound for the computation performing on an OWL 2 DL ontology combining with DL-safe SWRL rules has been proven to be 2EXPTIME  [41]. Expressive capability and computational completeness and decidability enable reasoning mechanisms like consistency checking of the ontology, knowledge reasoning on the ontology and semantic queries from the ontology  [8,18]. Since the proposed semantic enrichment approach uses OWL 2 DL/SWRL to model VGC specifications and data, this approach mainly has the following benefits: 
                           
                              •
                              Consistency checking of the ontology. Consistency checking procedure can be applied at both concept and individual levels. This procedure determines whether an instantiation of a concept would create an inconsistency in the ontology at the concept level and checks whether an individual of a concept satisfies the definition of this concept at the individual level. Through using a DL reasoner (e.g. HermiT or Pellet), the consistency of the constructed OWL 2 DL/SWRL ontology for VGC specifications can be automatically checked at both concept and individual levels. A knowledge reasoning procedure on the constructed ontology can be applied if and only if this ontology is checked to be consistent.

Knowledge reasoning on the ontology. A knowledge reasoning procedure takes the explicit knowledge in a context as input and uses certain problem solving strategies to achieve the implicit knowledge in this context. It is a process to reach new conclusions. Knowledge reasoning procedure on the constructed OWL 2 DL/SWRL ontology for VGC specifications is also performed by a DL reasoner. The reasoner takes the constructed ABox for VGC data as input to reach new conclusions. A typical kind of new conclusions in the proposed approach is the implicit VGC types. Section  5 will give an example to illustrate the reasoning process of the implicit VGC types. After applying the knowledge reasoning procedures on the constructed ontology, the new knowledge included in an enriched version of this ontology will become available. Then a semantic query mechanism can be used to query this new knowledge.

Semantics queries from the ontology. Semantic queries aim to retrieve specific knowledge from a large amount of knowledge. The constructed OWL 2 DL/SWRL ontology for VGC specifications is first checked for consistency, then inferred upon and finally queried. One of the most widely used query methods for OWL 2 DL/SWRL ontologies is the DL query method. This method uses DL reasoning mechanism to implement semantic queries. An example for DL query will also be provided in Section  5.

The proposed semantic enrichment approach can be implemented conveniently by using the OWL 2 DL/SWRL ontology-based technologies. In this section, the implementation of the approach is presented and an example is provided to illustrate the benefits of the implemented approach.

@&#IMPLEMENTATION@&#

The TBox, RBox and SWRL rules for VGC specifications are manually developed using Protégé Desktop 4.3  [42], an ontology editor and knowledge acquisition system that provide an integration environment of creating, editing and saving ontologies in a visual way. The construction method of the ABox for VGC data is implemented using Protégé-OWL API and Java programming language. An ABox for the VGC data in an arbitrary assembly can be automatically constructed with this implemented method. Consistency checking, knowledge reasoning and semantics queries are all performed in Protégé Desktop 4.3.

The gear reducer in Fig. 4
                           [33,43] is taken as an example to illustrate the benefits of the implemented semantic enrichment approach. An initialization work for this illustration is to construct an ABox for the VGC data in the gear reducer. Using the implemented construction method, this ABox is automatically constructed in Protégé Desktop 4.3. This sub-section does not attempt to give all the details of the construction of the ABox and only provides the details that will be used for later illustration. To facilitate understanding, these details are shown graphically in Figs. 5–7
                        
                        
                           [33] (in fact, these details are stored in the ontology for VGC specifications in the form of individual assertion axioms), where Fig. 5 shows the nineteen nominal parts obtained by disassembling the transmission structure of the gear reducer, Fig. 6 depicts the nominal integral features extracted from parts 
                           
                              
                                 p
                              
                              
                                 03
                              
                           
                           ,
                           
                              
                                 p
                              
                              
                                 04
                              
                           
                           ,
                           
                              
                                 p
                              
                              
                                 05
                              
                           
                           ,
                           
                              
                                 p
                              
                              
                                 06
                              
                           
                           ,
                           
                              
                                 p
                              
                              
                                 07
                              
                           
                           ,
                           
                              
                                 p
                              
                              
                                 10
                              
                           
                         and 
                           
                              
                                 p
                              
                              
                                 16
                              
                           
                         and Fig. 7 describes the extracted mating relations among the nominal integral features of these seven nominal parts. Now the benefits can be illustrated as follows.

Consistency checking is performed to ensure that each concept in the ontology for VGC specifications is actually instantiable and each individual in the ontology is used as intended. This mechanism is a specific mechanism for OWL 2 DL ontology. The FOCAT system  [6] does not have such mechanism.

Consistency checking can be performed at both concept level and individual level. At concept level, it can check whether an instantiation of a concept would create an inconsistency in the ontology. For example, assume four individuals adf01, adl01, ric01 and rir01 have been respectively asserted as an AssociatedDerivedFeature, an AssociatedDerivedLine, a RealInnerCylindrical and a RealInnerRevolute (an atomic concept that represents a real inner revolute) adf01 has connected ric01 by hasSVGC and adl01 has connected rir01 by hasSVGC. If adf01 is further declared as the same individual as adl01 (this situation is possible since AssociatedDerivedLine is a sub-concept of AssociatedDerivedFeature), then an inconsistency will occur in the ontology because: (1) hasSVGC is a functional role (this means that hasSVGC cannot be used to connect two or more different individuals), (2) RealInnerCylindrical and RealInnerRevolute are two disjoint concepts and (3) ric01 and rir01 will never be asserted as the same individuals. These reasons are also shown in Fig. 8
                           .

At individual level, consistency checking has the capability to check whether an individual of a concept satisfies the definition of this concept. For instance, assume adf01 and adl01 are two different individuals in the above example. The inconsistency will not occur. If ric01 is further declared as the same individual as rir01, an inconsistency will reoccur since RealInnerCylindrical has been defined to be disjoint with RealInnerRevolute and the individual ric01 go against this definition.

When the ontology for VGC specifications is checked to be consistent, a knowledge reasoning procedure can be performed on it.

Once the DL reasoner has performed all the knowledge reasoning procedures on the ontology for VGC specifications, the new knowledge can be made available. For example, the reasoned new knowledge in Protégé Desktop 4.3 for the real outer cylindrical 
                              
                                 rif
                              
                              
                                 (
                                 
                                    
                                       s
                                    
                                    
                                       1
                                    
                                 
                                 
                                    (
                                    
                                       
                                          p
                                       
                                       
                                          10
                                       
                                    
                                    )
                                 
                                 )
                              
                            is shown in Fig. 9
                           . This figure is annotated to indicate the different components of the ontology. The window in the figure is split into six panels. Panel 1 contains the list of all the OWL 2 DL concepts (classes) and their hierarchies in the ontology. Here the concept AssociatedDerivedLine is selected. So all OWL 2 DL individuals of this concept are listed in Panel 2. In this panel, the associated derived feature of 
                              
                                 rif
                              
                              
                                 (
                                 
                                    
                                       s
                                    
                                    
                                       1
                                    
                                 
                                 
                                    (
                                    
                                       
                                          p
                                       
                                       
                                          10
                                       
                                    
                                    )
                                 
                                 )
                              
                            (the individual adf_s1p10) is selected and highlighted. This individual is annotated in Panel 3. The designed fifty-one SWRL rules for determining the VGC types are shown in Panel 4. Here the rule used for inferring the VGC type between adf_s1p10 and rif_s1p10 (rif_s1p10 is an OWL 2 DL individual that represents 
                              
                                 rif
                              
                              
                                 (
                                 
                                    
                                       s
                                    
                                    
                                       1
                                    
                                 
                                 
                                    (
                                    
                                       
                                          p
                                       
                                       
                                          10
                                       
                                    
                                    )
                                 
                                 )
                              
                           ) is highlighted. Panel 5 and Panel 6 show all the OWL 2 DL individual assertion axioms related to the individual adf_s1p10. In these two panels, the axioms in bold text have been automatically asserted by the implemented method for constructing ABox and the axioms in normal text are new axioms reasoned out by HermiT. In this example, adf_s1p10 and rif_s1p10 have been automatically declared as an AssociatedDerivedLine and a RealOuterCylindrical, respectively. Further, adf_s1p10 is automatically linked to rif_s1p10 by the role (object property) hasConstraint. After running HermiT, four new individual assertion axioms, i.e.  hasConstraintRelation(adf_s1p10, rif_s1p10), hasVGC(adf_s1p10, rif_s1p10), hasSVGC(adf_s1p10, rif_s1p10) and hasSVGC02(adf_s1p10, rif_s1p10), are reasoned out, where the last axiom is inferred by the highlighted SWRL rule in Panel 4. According to this axiom, the VGC type between 
                              
                                 adf
                              
                              
                                 (
                                 
                                    
                                       s
                                    
                                    
                                       1
                                    
                                 
                                 
                                    (
                                    
                                       
                                          p
                                       
                                       
                                          10
                                       
                                    
                                    )
                                 
                                 )
                              
                            and 
                              
                                 rif
                              
                              
                                 (
                                 
                                    
                                       s
                                    
                                    
                                       1
                                    
                                 
                                 
                                    (
                                    
                                       
                                          p
                                       
                                       
                                          10
                                       
                                    
                                    )
                                 
                                 )
                              
                            is determined as SVGC02.

Similarly, the VGC types between other pair of mutual constraint features in Fig. 7 have been also inferred in the ontology for VGC specifications. These VGC types and corresponding DOFs are shown in Table 7
                           . A VGCN is constructed in Fig. 10
                            based on this table. As has been implemented in the FOCAT system  [6], this VGCN can be translated into a tolerance chain for tolerance analysis and synthesis.

The use of OWL 2 DL ontologies enables semantic queries to be performed instead of common text search. For example, assume there is a constraint whose referenced feature is an associated derived line, constrained feature is also an associated derived line and geometric variation of the constrained feature with respect to the referenced feature is variation of parameter. Someone attempts to determine whether this constraint is a geometric constraint or a variational geometric constraint in the ontology for VGC specifications. If a common text search is used, no result will be returned because the text defining the constraint does not match any text annotated in the ontology. But if a semantic query is performed, situation will be completely differently.

In a semantic context, the text defining the constraint above is not only a text, but an OWL 2 DL concept that has rigorous logic-based semantics. It can be described by OWL 2 DL in a straightforward manner as follow: 
                              
                                 (16)
                                 
                                    
                                       Constraint
                                    
                                    ⊓
                                    ∃
                                    
                                    
                                       hasReferencedFeature
                                    
                                    .
                                    
                                       AssociatedDerivedLine
                                    
                                    ⊓
                                    ∃
                                    
                                    
                                       hasConstrainedFeature
                                    
                                    .
                                    
                                       AssociatedDerivedLine
                                    
                                    ⊓
                                    ∃
                                    
                                    
                                       hasGeometricVariation
                                    
                                    .
                                    
                                       VariationOfParameter
                                    
                                 
                              
                            If this description is taken as the input of a DL query in Protégé, the constraint will be inferred as a sub-concept (sub-class) of VariationalGeometricConstraint. Fig. 11
                            shows the details of this DL query. The window in the figure is horizontally split into two panels. The up panel shows the query expression as described in Expression (16). Once execute the query, the query results will be output in the down panel. According to these results, the constraint described above is determined as a variational geometric constraint.

The semantic mechanism shown in this example is useful for the exchange of VGC data among heterogeneous product development systems. In different systems, a terminology (concept) that has the same meaning (semantics) may always be written in different ways. If an exchange only uses a common text search method to determine the target terminology for a source terminology (in fact, STEP-based data exchange uses this method), the data that does not belong to those terminologies having the same names in both the source and target systems will be lost. But if this exchange uses a semantic query to implement the determination, the lost data could be successfully and automatically exchanged. That is why the study in this paper can form a basis for exchanging the explicit semantics of VGC data among heterogeneous product development systems.

@&#CONCLUSIONS@&#

It is difficult for existing product data exchange standards to exchange the semantics of product data among heterogeneous product development systems used at different phases of product life cycle. This paper discusses how to formalize the semantics of product data with an ontology based approach to lay a basis for further exchanging these semantics. In the paper, the formalization process of the semantics of VGC data is reported. This process requires constructing a TBox and an RBox and designing SWRL rules for VGC specifications and extracting the VGC data from CAD systems to construct an ABox. The benefits of this formalization are outlined and illustrated with an example. As can be seen in the example, these benefits can facilitate the discovery of VGC data with the archive and lay a foundation for further exchanging the semantics of VGC data.

In real world product data exchange, various standards are used, in which STEP  [1] is the most widely used one. STEP enables representing and exchanging the product data required at different phases of product life cycle. The STEP based product data models are described in EXPRESS  [16]. EXPRESS is capable of developing syntactically correct product data models. But it has great difficulty in formalizing the explicit semantics of product data. Thus, the semantics of product data cannot be correctly exchanged using STEP. This leads to the loss of the product data related to product development process during the exchange process. In response to this problem, many approaches have been proposed, where the ontology-based approach could be the most effective one  [11]. In this approach, product data is always modeled in OWL (DL) and SWRL. By this way, the data has rigorous semantics because of the logic-based semantics of OWL and SWRL, which makes it possible to automatically exchange these semantics. So from the perspective of semantic exchange, the ontology-based approach seems to be better than the STEP-based approach. However, the former one should not be seen as a replacement of the latter one but more as a complementary solution for representing and exchanging the semantics of product data since not all STEP based product data can be modeled by the ontology languages OWL and SWRL.

The wider application of the proposed approach is mainly limited by the expressive capability of OWL 2 DL and SWRL. A future work will focus on extending these two languages with some language constructs to support the representation and exchange of more product data. Another future work is to apply this approach to study and implement the automatic exchange of the semantics of VGC data. It is also a valuable work to develop an ontology-based software tool to facilitate the semantic exchange of product data on the basis of all these studies.

@&#ACKNOWLEDGMENTS@&#

The authors appreciate the extremely valuable contributions to the OWL 2 DL and SWRL ontology representation languages developed by DARPA DAML Program and OWL Working Group, the Protégé Desktop developed by Stanford Center for Biomedical Informatics Research, the variational geometric constraint network theory proposed by Prof. Jie Hu in Shanghai Jiao Tong University and the design of the engineering example in Section  5 made by Dr. Yi Zhang in Xi’an Jiaotong University. The authors also would like to acknowledge the financial supports by the National Natural Science Foundation of China (No. 51365009 and No. 51475190) and the National Basic Research Program of China  (No. 2014CB046705).


                  Disclaimer
               

Certain commercial software products are mentioned in this paper. These products were used only for citation and demonstration purposes. This use does not imply the approval or endorsement by Huazhong University of Science and Technology, Guilin University of Electronic Technology and the University of Huddersfield, nor does it imply that these products are necessarily the best available for the purpose.

@&#REFERENCES@&#

