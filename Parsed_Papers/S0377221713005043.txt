@&#MAIN-TITLE@&#A linear model for surface mining haul truck allocation incorporating shovel idle probabilities

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           Tractable linear integer allocation model in oil sands mining industry using query theory.


                        
                        
                           
                           Capturing the nonlinear relationship between throughput and number of trucks.


                        
                        
                           
                           Model is based on shovel productivity, which is derived from the shovel’s idle probability.


                        
                        
                           
                           Linearization of idle probabilities leads to an accurate, simple allocation model.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Queueing

OR in natural resources

Integer programming

Truck allocation

Oil sand mining

@&#ABSTRACT@&#


               
               
                  We present models of trucks and shovels in oil sand surface mines. The models are formulated to minimize the number of trucks for a given set of shovels, subject to throughput and ore grade constraints. We quantify and validate the nonlinear relation between a shovel’s idle probability (which determines the shovel’s productivity) and the number of trucks assigned to the shovel via a simple approximation, based on the theory of finite source queues. We use linearization to incorporate this expression into linear integer programs. We assume in our integer programs that each shovel is assigned a single truck size but we outline how one could account for multiple truck sizes per shovel in an approximate fashion. The linearization of shovel idle probabilities allows us to formulate more accurate truck allocation models that are easily solvable for realistic-sized problems.
               
            

@&#INTRODUCTION@&#

The province of Alberta, Canada, contains large oil sand deposits. Its proven bitumen reserve, which ranks third after Saudi Arabia and Venezuela, is estimated to be 169.3billion barrels of crude oil (Government of Alberta, 2012). The production cost of synthetic crude oil is considerably higher, however, than that of conventional oil and, therefore, the economic viability of oil sand mining is highly dependent on both the market price of oil and the cost of production. Recent high oil prices and reductions in production cost have led many large oil companies to open mines and oil sand processing plants in the oil sands around Fort McMurray, Alberta (Atkins & MacFadyen, 2008).

An oil sand mining operation is a complex process that produces synthetic crude oil from the processing of bitumen in ore. Fig. 1
                      illustrates how the ore is mined and subsequently transported by truck to a hopper from which the ore is crushed and stored in a surge pile, which feeds a downstream processing plant, wherein bitumen is extracted from the crushed ore and finally the bitumen is upgraded to synthetic crude oil. Mining is the most expensive part of the overall process. Oil sand can be mined using a variety of methods, but we focus on surface mines, in which shovels load ore onto trucks, which transport the ore to a processing system. Oil sand companies that use this mining method face the challenge of maintaining efficient truck utilization. The main objective is generally to maintain stable ore throughput at a target level with a required blended ore grade (the concentration of the material being mined in the ore) at the least possible cost. Although we focus on truck allocation in oil sand mines, the principles and the methodology that we discuss could be relevant in other industries that require efficient truck allocation, such as civic waste collection, earth-moving in the construction industry, and material handling in mining (Carmichael, 1987, Bhat, 1996; Eisenstein & Iyer, 1997; Nuortio, Kytöjoki, Niska, & Bräysy, 2006).

The surge pile in Fig. 1 consists of crushed ore and it acts as a buffer between the discrete mining process and the continuous extraction process. Smaller surge piles have lower capital and operating costs but they also increase the risk that truck and shovel breakdowns will affect ore throughput to the extraction plant. Frequent fluctuations in ore throughput can adversely affect ore recovery in the extraction process.

To mitigate the risks of not meeting ore demand due to operational uncertainties, mine operators often allocate more trucks to transport ore than necessary. This risk-averse approach can lead to inefficient truck usage, resulting in long truck queues at dump locations, at shovels, or both. Allocating more trucks to transport ore leaves fewer trucks for other tasks, such as transporting overburden (waste material), which is sometimes critical. Managers often resolve short-term truck shortages by truck rentals, but this resolution is costly.

Truck allocation and truck dispatching are two separate processes. We focus on truck allocation, which typically takes place at the beginning of a shift. Truck dispatching continually adjusts the initial allocation based on adherence to production targets, the number of waiting trucks at shovels and dumps, and possibly other factors. A good initial allocation greatly aids the effectiveness of truck dispatching. Truck allocation models are also useful to managers, to determine or justify an adequate budget for truck resources, given the required ore throughput.

Typically, truck dispatchers allocate trucks at the beginning of 12-hour shifts, based on past data and user experience. Efficiency of truck allocation relies on dispatchers’ experience, which varies between shifts. Ensuring that dispatchers have the skills required for efficient truck allocation requires thorough truck-dispatching training, but such training does not guarantee consistent or optimal truck allocation.

The remainder of the paper is organized as follows. Section 2 surveys related literature. Section 3 outlines our contributions and their significance. Section 4 develops a basic truck allocation model, in which we linearize the expression for the average shovel throughput, resulting in a linear integer program. Section 5 demonstrates how to extend the basic model to handle multiple truck sizes. Section 6 presents computational results. Section 7 concludes.

@&#LITERATURE REVIEW@&#


                     Newman, Rubio, Caro, Weintraub, and Eurek (2010) provide a recent and comprehensive review of operations research in mine planning and tactical operation. Munirathinam and Yingling (1994) and Alarie and Gamache (2002) review the narrower area of truck dispatching systems for open pit mines. Alarie and Gamache distinguish between single-stage and multistage systems, and mention that most multistage systems have an upper stage, which sets production targets for every shovel for some time period, and a lower stage, which assigns trucks to shovels in real time so as to stay close to the upper-stage production targets. Alarie and Gamache recommend that truck dispatching systems be based on the multistage approach, with the upper stage incorporating ore grade and other considerations, because of the difficulty of properly accounting for such considerations in lower-stage algorithms, which must run in real time.

Our truck allocation model corresponds to what Alarie and Gamache (2002) refer to as the upper stage. Soumis, Ethier, and Elbrond (1989), Li (1990), White and Olson (1992), Xi and Yegulalp (1994), Temeng, Otuonye, and Frendewey (1998), Ta, Kresta, Forbes, and Marquez (2005), and Burt, Caccetta, Hill, and Welgama (2005) describe other truck allocation, or upper-stage, models. These optimization models differ in terms of model type, whether trucks are assumed homogeneous, how ore grade is modeled, and whether congestion (trucks waiting to be loaded and shovels waiting for trucks) is modeled, as summarized in Table 1
                     . Soumis et al. (1989) is the only model that incorporates congestion, via a nonlinear function for truck waiting time, which is to be minimized.

We posit that it is important to incorporate congestion, specifically, the nonlinear relation between the number of trucks allocated to a shovel and the shovel’s throughput, in optimization models for truck allocation. Throughput increases initially, as trucks are added, but eventually reaches an asymptotic value corresponding to the capacity of the shovel. In its simplest form, the relationship between the number of trucks and throughput is captured by the “match factor” that mining engineers have used for decades (Morgan & Peterson, 1968; Burt & Caccetta, 2007). One can use queueing theory, particularly the theory of finite source queues and cyclic queues (Koenigsberg, 1960; Carmichael, 1987) or simulation (Bhat, 1996), to quantify this relationship in greater generality. We linearize this relationship, which allows us to incorporate it in a linear integer program for truck allocation, which has not been done previously, according to (Burt et al., 2005, p. 1733) and to our knowledge.

Nonlinear queueing expressions have been linearized and incorporated in linear integer programs in other contexts and based on different queueing systems than the one that we consider. For example, Thompson (1997) incorporated service level coefficients obtained from an Erlang C delay model into a linear integer program for labor staffing and scheduling and Erdogan, Erkut, Ingolfsson, and Laporte (2011) incorporated expected coverage coefficients obtained from the approximate hypercube queueing model (Larson, 1975) into a linear integer program for scheduling ambulance crews.

We make the following contributions: (1) We propose a simple approximation for the idle probability of a server in a G/G/1/-/y finite-source queueing system, (2) we validate the approximation using loading and back-cycle time data from an oil sand mine, (3) we use the shovel idle probability approximation to incorporate the nonlinear relationship between a shovel’s average throughput and the number of deployed trucks in a series of linear integer programs for allocating trucks to shovels, (4) we outline how to address heterogeneous truck types, and (5) we demonstrate that the linear integer programs can be solved quickly and produce accurate results for realistic problem instances. The only other truck allocation model that, to our knowledge, incorporates congestion is Soumis et al. (1989), via a nonlinear truck wait time expression. The nonlinear relation between throughput and the number of trucks allocated to a shovel is a first-order effect that is important to incorporate in a realistic truck allocation model. By linearizing this relation, we avoid potential problems with scaling and multiple local optima that are associated with nonlinear programs and we make it possible to incorporate a variety of operational constraints into the linear integer program. Our formulations include lower and upper limits on ore grade and costs for deploying individual trucks. One could incorporate additional linear constraints or cost terms into our formulations. The fast solution times (less than one second for realistic-sized problems) for our formulations make it feasible to re-solve the truck allocation problem repeatedly during a shift, whenever equipment breakdowns or other events cause major changes to the number and composition of available shovels and trucks.

Efficient truck allocation is important in the oil sand industry because it can result in a substantial cost saving in the mining operation. Haul trucks deployed in the oil sand industry are among the largest in the world (capacity up to 400-ton) and are very expensive to purchase ($3–5million per unit) and operate. (Consistent with industry conventions, we use US short tons (“tons”) for truck payload capacity but metric tons (“tonnes”) for throughput, for example, tonnes/hour. The conversion is 1 tonne ≈ 1.1ton) For example, oil sand companies such as Syncrude Canada, Ltd. or Suncor Energy, each with a production of around 350,000 barrels of oil per day, can employ up to 100 trucks in several mines on a daily basis. Saving 1 or 2 trucks per shift can save millions of dollars per year. There is a growing number of oil sand mining operators in northern Alberta and production from the region was 1.6million barrels of bitumen per day in 2010 (Government of Alberta, 2012).

We begin by formulating the problem of allocating a minimum total number of equal-sized trucks to a set of shovels, so as to satisfy a lower limit, R, on throughput and lower and upper limits, G
                     
                        l
                      and G
                        u
                     , respectively, on ore grade. We demonstrate how to linearize shovel throughput as a function of the number of trucks allocated to each shovel, resulting in a linear integer program. In Section 5, we use this model as a starting point to develop models that incorporate multiple truck sizes.

We formulate the operation of y trucks allocated to a shovel as a finite source G/G/1/-/y queueing system. In this context, the shovel (or server) is characterized by the shovel service time distribution with mean 1/μ and squared coefficient of variation 
                           
                              
                                 
                                    c
                                 
                                 
                                    s
                                 
                                 
                                    2
                                 
                              
                           
                        (variance/ mean2). The trucks (customers) are characterized by a back-cycle time distribution with mean 1/λ and squared coefficient of variation 
                           
                              
                                 
                                    c
                                 
                                 
                                    a
                                 
                                 
                                    2
                                 
                              
                           
                         (the back-cycle time is the truck cycle time minus shovel waiting and service times). The mean service time depends on both shovel capacity and truck capacity. The mean back-cycle time depends on travel distance, truck speed, and dump capacity. The steady state expected shovel throughput, T, depends, as follows, on the average service rate while busy, μ, the average truck payload, L, the number of allocated trucks, y, and the shovel idle probability, π
                        0(y):
                           
                              (1)
                              
                                 T
                                 =
                                 μ
                                 [
                                 1
                                 -
                                 
                                    
                                       π
                                    
                                    
                                       0
                                    
                                 
                                 (
                                 y
                                 )
                                 ]
                                 L
                                 .
                              
                           
                        Although the precise shape of the shovel idle probability function π
                        0(y) depends on the service time and back-cycle time distributions, in general, one expects the idle probability to decrease from one (when y
                        =0) to zero (as y approaches infinity). As the idle probability decreases, the throughput increases, and reaches the upper limit of μL when a sufficient number of trucks is assigned to the shovel to keep it busy at all times.


                        Fig. 2
                         illustrates how the idle probability decreases with population size (that is, the number of trucks) in G/M/1/-/y and D/D/1/-/y systems, with 1/μ
                        =5minute and 1/λ
                        =20minute. The idle probability for these two systems can be expressed as a function of r
                        =
                        λ/μ and y in closed form, as follows (Carmichael, 1987; Gross, Shortle, Thompson, & Harris, 2008):
                           
                              (2)
                              
                                 
                                    
                                       
                                       
                                          
                                             
                                                
                                                   π
                                                
                                                
                                                   0
                                                
                                                
                                                   G
                                                   /
                                                   M
                                                   /
                                                   1
                                                
                                             
                                             (
                                             y
                                             )
                                             =
                                             
                                                
                                                   
                                                      
                                                         r
                                                      
                                                      
                                                         -
                                                         y
                                                      
                                                   
                                                   /
                                                   y
                                                   !
                                                
                                                
                                                   
                                                      
                                                         ∑
                                                      
                                                      
                                                         i
                                                         =
                                                         0
                                                      
                                                      
                                                         y
                                                      
                                                   
                                                   
                                                      
                                                         r
                                                      
                                                      
                                                         -
                                                         i
                                                      
                                                   
                                                   /
                                                   i
                                                   !
                                                
                                             
                                             ,
                                          
                                       
                                    
                                    
                                       
                                       
                                          
                                             
                                                
                                                   π
                                                
                                                
                                                   0
                                                
                                                
                                                   D
                                                   /
                                                   D
                                                   /
                                                   1
                                                
                                             
                                             (
                                             y
                                             )
                                             =
                                             
                                                
                                                   
                                                      
                                                         
                                                            
                                                               1
                                                               -
                                                               
                                                                  
                                                                     y
                                                                  
                                                                  
                                                                     1
                                                                     +
                                                                     1
                                                                     /
                                                                     r
                                                                  
                                                               
                                                            
                                                            
                                                               y
                                                               ⩽
                                                               1
                                                               +
                                                               1
                                                               /
                                                               r
                                                            
                                                         
                                                         
                                                            
                                                               0
                                                            
                                                            
                                                               y
                                                               >
                                                               1
                                                               +
                                                               1
                                                               /
                                                               r
                                                               .
                                                            
                                                         
                                                      
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           
                        We show in Appendix A that the expression 
                           
                              
                                 
                                    π
                                 
                                 
                                    0
                                 
                                 
                                    D
                                    /
                                    D
                                    /
                                    1
                                 
                              
                              (
                              y
                              )
                           
                         for the idle probability in a D/D/1/-/y queueing system is consistent with the match factor formula that mining engineers use. The idle probability 
                           
                              
                                 
                                    π
                                 
                                 
                                    0
                                 
                                 
                                    G
                                    /
                                    M
                                    /
                                    1
                                 
                              
                              (
                              y
                              )
                           
                         in a G/M/1/-/y queueing system, with exponentially distributed service times, is insensitive to the shape of the back-cycle time distribution beyond its mean (Gross et al., 2008). Carmichael (1986) argues that the steady state characteristics are approximately insensitive to the shape of the back-cycle time distribution even if the service times are not exponentially distributed. This motivates the following approximation:
                           
                              (3)
                              
                                 
                                    
                                       π
                                    
                                    
                                       0
                                    
                                    
                                       G
                                       /
                                       G
                                       /
                                       1
                                    
                                 
                                 (
                                 y
                                 )
                                 =
                                 
                                    
                                       
                                          
                                             
                                                1
                                                +
                                                
                                                   
                                                      c
                                                   
                                                   
                                                      s
                                                   
                                                   
                                                      2
                                                   
                                                
                                             
                                             
                                                2
                                             
                                          
                                       
                                    
                                 
                                 
                                    
                                       π
                                    
                                    
                                       0
                                    
                                    
                                       G
                                       /
                                       M
                                       /
                                       1
                                    
                                 
                                 (
                                 y
                                 )
                                 +
                                 
                                    
                                       
                                          1
                                          -
                                          
                                             
                                                1
                                                +
                                                
                                                   
                                                      c
                                                   
                                                   
                                                      s
                                                   
                                                   
                                                      2
                                                   
                                                
                                             
                                             
                                                2
                                             
                                          
                                       
                                    
                                 
                                 
                                    
                                       π
                                    
                                    
                                       0
                                    
                                    
                                       D
                                       /
                                       D
                                       /
                                       1
                                    
                                 
                                 (
                                 y
                                 )
                                 .
                              
                           
                        We investigate the accuracy of this approximation in Section 6. Alternatively, the idle probability as a function of y can be computed numerically, for example in an E
                        
                           h
                        /E
                        
                           k
                        /1/-/y system, or estimated via simulation. All that is needed for our optimization model are the values w
                        
                           i
                        
                        =
                        π
                        0(i) for i
                        =0,…, m, where m is an upper limit on the number of trucks allocated to any shovel and w
                        0 is set to 1.

Setting the set of truck indices to I
                        ={0,…,m}, we linearize the idle probability as a function of the number of allocated trucks as follows:

For each shovel:
                           
                              (4)
                              
                                 
                                    
                                       π
                                    
                                    
                                       0
                                    
                                 
                                 (
                                 y
                                 )
                                 =
                                 
                                    
                                       
                                          ∑
                                       
                                       
                                          i
                                          ∈
                                          I
                                       
                                    
                                 
                                 
                                    
                                       w
                                    
                                    
                                       i
                                    
                                 
                                 
                                    
                                       x
                                    
                                    
                                       i
                                    
                                 
                                 ,
                              
                           
                        
                        
                           
                              (5)
                              
                                 
                                    
                                       
                                          ∑
                                       
                                       
                                          i
                                          ∈
                                          I
                                       
                                    
                                 
                                 
                                    
                                       x
                                    
                                    
                                       i
                                    
                                 
                                 =
                                 1
                                 ,
                              
                           
                        
                        
                           
                              (6)
                              
                                 y
                                 =
                                 
                                    
                                       
                                          ∑
                                       
                                       
                                          i
                                          ∈
                                          I
                                       
                                    
                                 
                                 
                                    
                                       ix
                                    
                                    
                                       i
                                    
                                 
                                 .
                              
                           
                        Here, y is the number of trucks, x
                        
                           i
                         is a binary indicator variable for the condition i
                        =
                        y, and w
                        
                           i
                         is the shovel idle probability with i assigned trucks. Constraint (5) ensures that only one solution of i∗ trucks is chosen (x
                        
                           i∗
                        =1). Constraint (6) relates the binary variables, x
                        
                           i
                        , to the number of trucks, y. For example, if m
                        =4 and one wishes to allocate i∗=2 trucks, then constraint (6) is expanded as y
                        =0×0+1×0+ 2×1+3×0+4×0=2. Shovel throughput is a linear function of the binary variables, x
                        
                           i
                        :
                           
                              (7)
                              
                                 T
                                 (
                                 y
                                 )
                                 =
                                 μ
                                 [
                                 1
                                 -
                                 
                                    
                                       
                                          ∑
                                       
                                       
                                          i
                                          ∈
                                          I
                                       
                                    
                                 
                                 
                                    
                                       w
                                    
                                    
                                       i
                                    
                                 
                                 
                                    
                                       x
                                    
                                    
                                       i
                                    
                                 
                                 ]
                                 L
                                 .
                              
                           
                        Next, we use the throughput expression to formulate a basic allocation model, which assumes that all trucks have the same capacity. We extend the model to multiple truck types in Section 5.


                        Table 2
                         lists the notation that we use in our optimization models. The Basic model has three sets of decision variables: binary linearization variables, x
                        
                           ij
                        , equal to 1 if i trucks are allocated to shovel j, integer variables, y
                        
                           j
                        , for the number of trucks allocated to shovel j, and continuous variables, T
                        
                           j
                        , for the throughput of shovel j.

We use J to denote a set of shovels and I
                        ={0, …, m} as a set of truck indices. Parameters specific to shovel j are the service rates (μ
                        
                           j
                        ), the ore grades at the shovel pit (g
                           j
                        ), and the shovel idle probabilities w
                           ij
                        , with i assigned trucks. The remaining parameters are the ore demand per time unit, R, an ore grade range, [G
                           l
                        , G
                           u
                        ], and the average truckload, L.
                           
                              (8)
                              
                                 
                                    
                                       
                                          
                                             Basic
                                             :
                                             
                                             Minimize
                                             
                                          
                                       
                                       
                                          
                                             
                                                
                                                   
                                                      ∑
                                                   
                                                   
                                                      j
                                                      ∈
                                                      J
                                                   
                                                
                                             
                                             
                                                
                                                   y
                                                
                                                
                                                   j
                                                
                                             
                                          
                                       
                                    
                                    
                                       
                                          
                                             Subject
                                             
                                             to
                                             
                                          
                                       
                                       
                                          
                                             
                                                
                                                   
                                                      ∑
                                                   
                                                   
                                                      j
                                                      ∈
                                                      J
                                                   
                                                
                                             
                                             
                                                
                                                   T
                                                
                                                
                                                   j
                                                
                                             
                                             ⩾
                                             R
                                          
                                       
                                    
                                 
                              
                           
                        
                        
                           
                              (9)
                              
                                 
                                    
                                       
                                          ∑
                                       
                                       
                                          j
                                          ∈
                                          J
                                       
                                    
                                 
                                 
                                    
                                       g
                                    
                                    
                                       j
                                    
                                 
                                 
                                    
                                       T
                                    
                                    
                                       j
                                    
                                 
                                 ⩽
                                 
                                    
                                       G
                                    
                                    
                                       u
                                    
                                 
                                 
                                    
                                       
                                          ∑
                                       
                                       
                                          j
                                          ∈
                                          J
                                       
                                    
                                 
                                 
                                    
                                       T
                                    
                                    
                                       j
                                    
                                 
                              
                           
                        
                        
                           
                              (10)
                              
                                 
                                    
                                       
                                          ∑
                                       
                                       
                                          j
                                          ∈
                                          J
                                       
                                    
                                 
                                 
                                    
                                       g
                                    
                                    
                                       j
                                    
                                 
                                 
                                    
                                       T
                                    
                                    
                                       j
                                    
                                 
                                 ⩾
                                 
                                    
                                       G
                                    
                                    
                                       l
                                    
                                 
                                 
                                    
                                       
                                          ∑
                                       
                                       
                                          j
                                          ∈
                                          J
                                       
                                    
                                 
                                 
                                    
                                       T
                                    
                                    
                                       j
                                    
                                 
                              
                           
                        
                        
                           
                              (11)
                              
                                 
                                    
                                       T
                                    
                                    
                                       j
                                    
                                 
                                 =
                                 
                                    
                                       μ
                                    
                                    
                                       j
                                    
                                 
                                 
                                    
                                       
                                          1
                                          -
                                          
                                             
                                                
                                                   ∑
                                                
                                                
                                                   i
                                                   ∈
                                                   I
                                                
                                             
                                          
                                          
                                             
                                                w
                                             
                                             
                                                ij
                                             
                                          
                                          
                                             
                                                x
                                             
                                             
                                                ij
                                             
                                          
                                       
                                    
                                 
                                 L
                                 
                                 ∀
                                 j
                                 ∈
                                 J
                              
                           
                        
                        
                           
                              (12)
                              
                                 
                                    
                                       y
                                    
                                    
                                       j
                                    
                                 
                                 =
                                 
                                    
                                       
                                          ∑
                                       
                                       
                                          i
                                          ∈
                                          I
                                       
                                    
                                 
                                 
                                    
                                       ix
                                    
                                    
                                       ij
                                    
                                 
                                 
                                 ∀
                                 j
                                 ∈
                                 J
                              
                           
                        
                        
                           
                              (13)
                              
                                 
                                    
                                       
                                          ∑
                                       
                                       
                                          i
                                          ∈
                                          I
                                       
                                    
                                 
                                 
                                    
                                       x
                                    
                                    
                                       ij
                                    
                                 
                                 =
                                 1
                                 
                                 ∀
                                 j
                                 ∈
                                 J
                              
                           
                        
                        
                           
                              (14)
                              
                                 
                                    
                                       x
                                    
                                    
                                       ij
                                    
                                 
                                 ∈
                                 {
                                 0
                                 ,
                                 1
                                 }
                                 
                                 ∀
                                 i
                                 ∈
                                 I
                                 ,
                                 
                                 ∀
                                 j
                                 ∈
                                 J
                              
                           
                        
                        
                           
                              (15)
                              
                                 
                                    
                                       T
                                    
                                    
                                       j
                                    
                                 
                                 ⩾
                                 0
                                 ,
                                 
                                 
                                    
                                       y
                                    
                                    
                                       j
                                    
                                 
                                 ⩾
                                 0
                                 
                                 ∀
                                 j
                                 ∈
                                 J
                              
                           
                        The objective is to minimize the total number of allocated trucks. Constraint (8) ensures that enough trucks are allocated to meet the ore demand. Constraints (9) and (10) guarantee that the blended ore grade is in the specified range. Equality constraints (11) enforce the shovel throughput definition and constraints (12) and (13) relate the binary variables, x
                        
                           ij
                        , to the number of allocated trucks, y
                        
                           j
                        . Note that the variables y
                        
                           j
                         can be declared as continuous, because constraints (12) and (14) ensure that y
                        
                           j
                         assumes integer values. For a mine with ∣J∣ shovels and m trucks, the model is small in size with m∣J∣ binary variables, 2∣J∣ real variables, and 3∣J∣+3 linear constraints.

The Basic model relies on the following assumptions:
                           
                              •
                              All trucks are of the same size.

Ore mixing is ideal at the dump locations, resulting in a consistent calculation of the blended ore grade.

Each shovel’s idle probability depends only on the number and size of trucks assigned to the shovel.

We relax the first assumption, of a single truck size, in the next section. The second assumption is standard in other published truck allocation models. The third assumption, which permits decomposition of the system by shovel, requires each truck to remain assigned to a single shovel for the time period during which the truck allocation solution is to be used. Note that the third assumption does not rule out the use of simulation instead of expression (3) to estimate the idle probability coefficients w
                        
                           ij
                        . A simulation model could incorporate “bunching effects” (Morgan & Peterson, 1968; Burt et al., 2005), which are caused by trucks not being able to overtake each other on the back cycle. What the third assumption does rule out are situations where the idle probability of one shovel is influenced by the number of trucks allocated to other shovels in the mine, which implies that it is not possible to view w
                        
                           ij
                         as input parameters for the optimization problem; rather, they become quantities whose values depend on the decision variables. This could happen, for example, if the capacity of shared dump locations or repair facilities becomes a bottleneck when the total number of trucks is sufficiently large.

One can augment the Basic model to give preference to certain trucks from the fleet I′≡
                        I⧹{0}={1,…, m} of available trucks, based on the cost h
                        
                           i
                         of deploying truck i
                        ∈
                        I′, which could incorporate the maintenance status or the current location of the truck, for example. To incorporate such preferences, we replace the objective function with a total cost 
                           
                              
                                 
                                    ∑
                                 
                                 
                                    i
                                    ∈
                                    
                                       
                                          I
                                       
                                       
                                          ′
                                       
                                    
                                 
                              
                              
                                 
                                    h
                                 
                                 
                                    i
                                 
                              
                              
                                 
                                    z
                                 
                                 
                                    i
                                 
                              
                           
                        , where z
                        
                           i
                         is a binary decision variable that indicates whether truck i
                        ∈
                        I′ is deployed, and we add a constraint to ensure that the total number of trucks assigned equals the total number of trucks allocated to the shovels, that is, 
                           
                              
                                 
                                    ∑
                                 
                                 
                                    i
                                    ∈
                                    
                                       
                                          I
                                       
                                       
                                          ′
                                       
                                    
                                 
                              
                              
                                 
                                    z
                                 
                                 
                                    i
                                 
                              
                              =
                              
                                 
                                    ∑
                                 
                                 
                                    j
                                    ∈
                                    J
                                 
                              
                              
                                 
                                    y
                                 
                                 
                                    j
                                 
                              
                           
                        .

In this section, we extend the Basic model to account for multiple truck sizes. With a single truck size, the expression for shovel throughput has two parts: the average throughput while busy, μL (measured in volume per time unit), and the busy probability, (1−
                     π
                     0(y)). As an example, suppose y
                     
                        j1 trucks of size L
                     1 and y
                     
                        j2 trucks of size L
                     2 are allocated to shovel j, with average service times of 1/μ
                     
                        j1 and 1/μ
                     
                        j2 for the two truck sizes. Then one can approximate the shovel’s average throughput while busy as follows:
                        
                           (16)
                           
                              Throughput
                              
                              while
                              
                              busy
                              =
                              
                                 
                                    
                                       
                                          μ
                                       
                                       
                                          j
                                          1
                                       
                                    
                                    
                                       
                                          L
                                       
                                       
                                          1
                                       
                                    
                                    
                                       
                                          y
                                       
                                       
                                          j
                                          1
                                       
                                    
                                    +
                                    
                                       
                                          μ
                                       
                                       
                                          j
                                          2
                                       
                                    
                                    
                                       
                                          L
                                       
                                       
                                          2
                                       
                                    
                                    
                                       
                                          y
                                       
                                       
                                          j
                                          2
                                       
                                    
                                 
                                 
                                    
                                       
                                          y
                                       
                                       
                                          j
                                          1
                                       
                                    
                                    +
                                    
                                       
                                          y
                                       
                                       
                                          j
                                          2
                                       
                                    
                                 
                              
                           
                        
                     
                     Burt and Caccetta (2007, Eq. (6)) use an equivalent expression to generalize match factors for heterogeneous truck fleets. Unfortunately, expression (16) is nonlinear in y
                     
                        j1 and y
                     
                        j2. The multiplication of this expression with the shovel j idle probability leads to further nonlinearity.

Rather than formulating a nonlinear model, we restrict each shovel to handling a single truck size, which allows us to maintain linearity. At the end of this section, we show how to relax this assumption in an approximate way.

We use three indices in the model: i
                     ∈
                     I
                     
                        k
                     
                     ={0,…, m
                     
                        k
                     } for the number of trucks assigned to a shovel, a shovel index j
                     ∈
                     J, and a truck type index k
                     ∈
                     K. The Enhanced model has four sets of decision variables: binary discretization variables (x
                     
                        ijk
                     ) equal to one if i type k trucks are assigned to shovel j, the number of type k trucks assigned to shovel j (y
                     
                        jk
                     ), binary variables for whether to assign type k trucks to shovel j (v
                     
                        jk
                     ), and the shovel throughputs (T
                     
                        jk
                     ) associated with shovel j and truck type k. Parameter m
                     
                        k
                      denotes the maximum number of type k trucks, each having a payload L
                     
                        k
                     . All other parameters are as before. The formulation is as follows:
                        
                           (17)
                           
                              Enhanced
                              :
                              
                              Minimize
                              
                              
                                 
                                    
                                       ∑
                                    
                                    
                                       j
                                       ∈
                                       J
                                    
                                 
                              
                              
                                 
                                    
                                       ∑
                                    
                                    
                                       k
                                       ∈
                                       K
                                    
                                 
                              
                              
                                 
                                    y
                                 
                                 
                                    jk
                                 
                              
                              +
                              α
                              
                                 
                                    
                                       ∑
                                    
                                    
                                       j
                                       ∈
                                       J
                                    
                                 
                              
                              
                                 
                                    
                                       ∑
                                    
                                    
                                       k
                                       ∈
                                       K
                                    
                                 
                              
                              
                                 
                                    T
                                 
                                 
                                    jk
                                 
                              
                           
                        
                     
                     
                        
                           (18)
                           
                              
                                 
                                    
                                       
                                          Subject
                                          
                                          to
                                          
                                       
                                    
                                    
                                       
                                          
                                             
                                                T
                                             
                                             
                                                jk
                                             
                                          
                                          =
                                          
                                             
                                                μ
                                             
                                             
                                                j
                                             
                                          
                                          
                                             
                                                
                                                   1
                                                   -
                                                   
                                                      
                                                         
                                                            ∑
                                                         
                                                         
                                                            i
                                                            ∈
                                                            
                                                               
                                                                  I
                                                               
                                                               
                                                                  k
                                                               
                                                            
                                                         
                                                      
                                                   
                                                   
                                                      
                                                         w
                                                      
                                                      
                                                         ij
                                                      
                                                   
                                                   
                                                      
                                                         x
                                                      
                                                      
                                                         ijk
                                                      
                                                   
                                                
                                             
                                          
                                          
                                             
                                                L
                                             
                                             
                                                k
                                             
                                          
                                       
                                    
                                 
                                 
                                    
                                    
                                       
                                          
                                          ∀
                                          j
                                          ∈
                                          J
                                          ,
                                          
                                          ∀
                                          k
                                          ∈
                                          K
                                       
                                    
                                 
                              
                           
                        
                     
                     
                        
                           (19)
                           
                              
                                 
                                    
                                       ∑
                                    
                                    
                                       j
                                       ∈
                                       J
                                    
                                 
                              
                              
                                 
                                    
                                       ∑
                                    
                                    
                                       k
                                       ∈
                                       K
                                    
                                 
                              
                              
                                 
                                    T
                                 
                                 
                                    jk
                                 
                              
                              ⩾
                              R
                           
                        
                     
                     
                        
                           (20)
                           
                              
                                 
                                    
                                       ∑
                                    
                                    
                                       j
                                       ∈
                                       J
                                    
                                 
                              
                              
                                 
                                    
                                       ∑
                                    
                                    
                                       k
                                       ∈
                                       K
                                    
                                 
                              
                              
                                 
                                    g
                                 
                                 
                                    j
                                 
                              
                              
                                 
                                    T
                                 
                                 
                                    jk
                                 
                              
                              ⩽
                              
                                 
                                    G
                                 
                                 
                                    u
                                 
                              
                              
                                 
                                    
                                       ∑
                                    
                                    
                                       j
                                       ∈
                                       J
                                    
                                 
                              
                              
                                 
                                    
                                       ∑
                                    
                                    
                                       k
                                       ∈
                                       K
                                    
                                 
                              
                              
                                 
                                    T
                                 
                                 
                                    jk
                                 
                              
                           
                        
                     
                     
                        
                           (21)
                           
                              
                                 
                                    
                                       ∑
                                    
                                    
                                       j
                                       ∈
                                       J
                                    
                                 
                              
                              
                                 
                                    
                                       ∑
                                    
                                    
                                       k
                                       ∈
                                       K
                                    
                                 
                              
                              
                                 
                                    g
                                 
                                 
                                    j
                                 
                              
                              
                                 
                                    T
                                 
                                 
                                    jk
                                 
                              
                              ⩾
                              
                                 
                                    G
                                 
                                 
                                    l
                                 
                              
                              
                                 
                                    
                                       ∑
                                    
                                    
                                       j
                                       ∈
                                       J
                                    
                                 
                              
                              
                                 
                                    
                                       ∑
                                    
                                    
                                       k
                                       ∈
                                       K
                                    
                                 
                              
                              
                                 
                                    T
                                 
                                 
                                    jk
                                 
                              
                           
                        
                     
                     
                        
                           (22)
                           
                              
                                 
                                    y
                                 
                                 
                                    jk
                                 
                              
                              =
                              
                                 
                                    
                                       ∑
                                    
                                    
                                       i
                                       ∈
                                       
                                          
                                             I
                                          
                                          
                                             k
                                          
                                       
                                    
                                 
                              
                              
                                 
                                    ix
                                 
                                 
                                    ijk
                                 
                              
                              
                              ∀
                              j
                              ∈
                              J
                              ,
                              
                              ∀
                              k
                              ∈
                              K
                           
                        
                     
                     
                        
                           (23)
                           
                              
                                 
                                    
                                       ∑
                                    
                                    
                                       j
                                       ∈
                                       J
                                    
                                 
                              
                              
                                 
                                    y
                                 
                                 
                                    jk
                                 
                              
                              ⩽
                              
                                 
                                    m
                                 
                                 
                                    k
                                 
                              
                              
                              ∀
                              k
                              ∈
                              K
                           
                        
                     
                     
                        
                           (24)
                           
                              
                                 
                                    
                                       ∑
                                    
                                    
                                       k
                                       ∈
                                       K
                                    
                                 
                              
                              
                                 
                                    
                                       ∑
                                    
                                    
                                       i
                                       ∈
                                       
                                          
                                             I
                                          
                                          
                                             k
                                          
                                       
                                    
                                 
                              
                              
                                 
                                    x
                                 
                                 
                                    ijk
                                 
                              
                              =
                              1
                              
                              ∀
                              j
                              ∈
                              J
                           
                        
                     
                     
                        
                           (25)
                           
                              
                                 
                                    
                                       ∑
                                    
                                    
                                       k
                                       ∈
                                       K
                                    
                                 
                              
                              
                                 
                                    v
                                 
                                 
                                    jk
                                 
                              
                              =
                              1
                              
                              ∀
                              j
                              ∈
                              J
                           
                        
                     
                     
                        
                           (26)
                           
                              
                                 
                                    y
                                 
                                 
                                    jk
                                 
                              
                              ⩽
                              
                                 
                                    v
                                 
                                 
                                    jk
                                 
                              
                              
                                 
                                    m
                                 
                                 
                                    k
                                 
                              
                              
                              ∀
                              j
                              ∈
                              J
                              ,
                              
                              ∀
                              k
                              ∈
                              K
                           
                        
                     
                     
                        
                           (27)
                           
                              
                                 
                                    x
                                 
                                 
                                    ijk
                                 
                              
                              ∈
                              {
                              0
                              ,
                              1
                              }
                              
                              ∀
                              i
                              ∈
                              
                                 
                                    I
                                 
                                 
                                    k
                                 
                              
                              ,
                              
                              ∀
                              j
                              ∈
                              J
                              ,
                              
                              ∀
                              k
                              ∈
                              K
                           
                        
                     
                     
                        
                           (28)
                           
                              
                                 
                                    v
                                 
                                 
                                    jk
                                 
                              
                              ∈
                              {
                              0
                              ,
                              1
                              }
                              
                              ∀
                              j
                              ∈
                              J
                              ,
                              
                              ∀
                              k
                              ∈
                              K
                           
                        
                     
                     
                        
                           (29)
                           
                              
                                 
                                    T
                                 
                                 
                                    jk
                                 
                              
                              ⩾
                              0
                              ,
                              
                                 
                                    y
                                 
                                 
                                    jk
                                 
                              
                              ⩾
                              0
                              
                              ∀
                              j
                              ∈
                              J
                              ,
                              
                              ∀
                              k
                              ∈
                              K
                           
                        
                     The primary objective (the first term in (17)) is to minimize the number of deployed trucks. The second term in (17) breaks ties between feasible solutions with an equal total number of trucks in favor of solutions with the least throughput surplus. The parameter α should be chosen so that the first term in (17) dominates; for example, α could be set to 1/R.

Constraints (18) define the ore throughput of type k trucks assigned to shovel j. Constraint (19) specifies the minimum total throughput while constraints (20) and (21) ensure that the ore blending is in the appropriate range. Constraints (22) link variables y
                     
                        jk
                     , the number of type k trucks assigned to shovel j, to the binary decision variables, x
                     
                        ijk
                     . Constraints (23) ensure that the total number of available type k trucks is not exceeded. Constraints (24) ensure that for any shovel j, there exists one pair of indices (i, k) such that x
                     
                        ijk
                     
                     =1(0⩽
                     i
                     ⩽
                     m
                     
                        k
                     ), meaning that i type k trucks are assigned to shovel j. Constraints (25) ensure that for each shovel j, only one of the binary variables v
                     
                        jk
                      equals one, and constraints (26) in turn ensure that the number of trucks assigned to shovel j is zero except for the truck type k for which v
                     
                        jk
                     
                     =1. The binary and non-negativity constraints (27)–(29) complete the formulation.

We close this section by outlining an approximate method to relax the assumption that each shovel can only be assigned a single truck type. This method involves the use of hypothetical truck types that represent different mixes of real truck types. To illustrate the method, suppose that there are two real truck types (k
                     =1, 2), with payloads L
                     1
                     =300tons and L
                     2
                     =400tons. Before solving the Enhanced model, we add one or more hypothetical truck types that correspond to different mixes of truck types 1 and 2. For example, truck type 3 could have a payload of L
                     3
                     =325tons, corresponding to a 3:1 mix of truck types 1 and 2, truck type 4 could have a payload of L
                     4
                     =350tons, corresponding to a 1:1 mix of truck types 1 and 2, and so on. After solving the Enhanced model, we solve separate subproblems for each shovel that is assigned a hypothetical truck type. For example, suppose that a shovel is assigned six trucks of type 3. It is not possible to divide six trucks among types 1 and 2 so as to achieve an exact 3:1 ratio, so one might settle for either a 4:2 ratio or a 5:1 ratio.

More formally, suppose that the set of truck types K consists of subsets K
                     1 of real truck types and K
                     2 of hypothetical truck types and that in the solution to the Enhanced model, shovel j is assigned y
                     
                        jq
                      trucks of hypothetical type q
                     ∈
                     K
                     2. Let L
                     
                        q
                      and L
                     
                        p
                      represent payloads of hypothetical truck type q and real truck type p, respectively, and let w
                     
                        p
                      denote the number of trucks of real truck type p
                     ∈
                     K
                     1 to be allocated to shovel j. The subproblem for shovel j is:
                        
                           (30)
                           
                              Subproblem
                              :
                              
                              Minimize
                              
                              
                                 
                                    d
                                 
                                 
                                    +
                                 
                              
                              +
                              
                                 
                                    d
                                 
                                 
                                    -
                                 
                              
                           
                        
                     
                     
                        
                           (31)
                           
                              Subject
                              
                              to
                              :
                              
                              
                                 
                                    
                                       ∑
                                    
                                    
                                       p
                                       ∈
                                       
                                          
                                             K
                                          
                                          
                                             1
                                          
                                       
                                    
                                 
                              
                              
                                 
                                    w
                                 
                                 
                                    p
                                 
                              
                              =
                              
                                 
                                    
                                       ∑
                                    
                                    
                                       q
                                       ∈
                                       
                                          
                                             K
                                          
                                          
                                             2
                                          
                                       
                                    
                                 
                              
                              
                                 
                                    y
                                 
                                 
                                    jq
                                 
                              
                           
                        
                     
                     
                        
                           (32)
                           
                              
                                 
                                    
                                       ∑
                                    
                                    
                                       q
                                       ∈
                                       
                                          
                                             K
                                          
                                          
                                             2
                                          
                                       
                                    
                                 
                              
                              
                                 
                                    L
                                 
                                 
                                    q
                                 
                              
                              
                                 
                                    y
                                 
                                 
                                    jq
                                 
                              
                              -
                              
                                 
                                    
                                       ∑
                                    
                                    
                                       p
                                       ∈
                                       
                                          
                                             K
                                          
                                          
                                             1
                                          
                                       
                                    
                                 
                              
                              
                                 
                                    L
                                 
                                 
                                    p
                                 
                              
                              
                                 
                                    w
                                 
                                 
                                    p
                                 
                              
                              =
                              
                                 
                                    d
                                 
                                 
                                    +
                                 
                              
                              -
                              
                                 
                                    d
                                 
                                 
                                    -
                                 
                              
                           
                        
                     
                     
                        
                           (33)
                           
                              
                                 
                                    d
                                 
                                 
                                    +
                                 
                              
                              ,
                              
                                 
                                    d
                                 
                                 
                                    -
                                 
                              
                              ⩾
                              0
                           
                        
                     
                     
                        
                           (34)
                           
                              
                                 
                                    w
                                 
                                 
                                    p
                                 
                              
                              ⩾
                              0
                              ,
                              
                              integer
                              
                              ∀
                              p
                              ∈
                              
                                 
                                    K
                                 
                                 
                                    1
                                 
                              
                           
                        
                     The objective function (30) minimizes the absolute difference between the total payload of real and hypothetical trucks, which is expressed in constraint (32) as the difference between two non-negative deviation variables d
                     + and d
                     −. Constraint (31) ensures that the total number of real trucks equals the total number of hypothetical trucks. Note that the number of trucks of hypothetical type q assigned to shovel j, y
                     
                        jq
                     , is an input parameter for the subproblem; it is not a decision variable. We solve this subproblem for all shovels that were assigned a hypothetical truck type. The subproblem does not include constraints on the number of remaining trucks for each of the real truck types (corresponding to constraints (23) in the Enhanced model) but one could add such constraints.

Under our assumptions, if the optimal value of every subproblem is zero, then the overall solution that is obtained with this method is guaranteed to be feasible with respect to the overall throughput and ore grade constraints (19)–(21) in the Enhanced model. To understand why, suppose that in the solution to the Enhanced model, shovel j is assigned y
                     
                        jq
                      trucks of hypothetical truck type q and no trucks of any other type, as guaranteed by constraints (25) and (26). Recall that the shovel j throughput can be expressed as
                        
                           (35)
                           
                              
                                 
                                    T
                                 
                                 
                                    j
                                 
                              
                              (
                              
                                 
                                    y
                                 
                                 
                                    jq
                                 
                              
                              )
                              =
                              
                                 
                                    μ
                                 
                                 
                                    j
                                 
                              
                              [
                              1
                              -
                              
                                 
                                    π
                                 
                                 
                                    0
                                 
                              
                              (
                              
                                 
                                    y
                                 
                                 
                                    jq
                                 
                              
                              )
                              ]
                              
                                 
                                    L
                                 
                                 
                                    q
                                 
                              
                              .
                           
                        
                     Consider the three components that determine the throughput: the service rate, the idle probability, and the payload. The service rate μ
                     
                        j
                      depends only on the shovel j, not on the mix of trucks that are assigned to the shovel. The idle probability π
                     0 is calculated using approximation (3), which requires as input the service rate μ
                     
                        j
                     , the number of trucks y
                     
                        jq
                     , the average back-cycle time 1/λ, and the service time squared coefficient of variation 
                        
                           
                              
                                 c
                              
                              
                                 s
                              
                              
                                 2
                              
                           
                        
                     . If the number of trucks assigned to the shovel does not change, as constraint (31) in the subproblem guarantees, and if we assume that 1/λ and 
                        
                           
                              
                                 c
                              
                              
                                 s
                              
                              
                                 2
                              
                           
                        
                      do not change when hypothetical truck type q is replaced with a mix of real truck types (as we do in our computational experiments), then the idle probability will not change. The last component in (35), the payload L
                     
                        q
                     , is the only component that might change, if one of the deviation variables d
                     + and d
                     − is positive. This is the primary reason why shovel j’s throughput might change as a result of solving the shovel j subproblem.

A secondary reason why shovel j’s throughput could change is that the assumption that the service rate μ
                     
                        j
                     , the average back-cycle time 1/λ, and the service time squared coefficient of variation 
                        
                           
                              
                                 c
                              
                              
                                 s
                              
                              
                                 2
                              
                           
                        
                      depend only on the shovel j and not on the mix of real truck types assigned to shovel j is not entirely realistic. If one were to allow these parameters to depend on the mix of real truck types, then shovel j’s throughput could change, but we expect that this impact would typically be smaller than the impact of the average truck payload being different from what is assumed in the Enhanced model.

We developed a discrete-event simulation model of the operation of a single shovel and the trucks assigned it, in order to validate the shovel idle probability approximation (3) and to independently verify the accuracy of results obtained from solving the Enhanced integer program. In the simulation, trucks wait in a first-come-first-served queue to be loaded (to their payload capacity) by the shovel, with a duration drawn from the service time distribution, after which a truck is delayed by a random amount (drawn from the back-cycle time distribution) before it joins the queue again. The simulation outputs are the average throughput per time unit and the shovel idle probability. We programmed the simulation model using C# in the Microsoft .NET environment, using the .NET random number generator. All simulation results reported below are based on 500 replications of 12-hour shifts, with a 3-hour warmup period.

Figs. 3 and 4 show empirical distributions for shovel service times (Fig. 3
                        ) and back-cycle times (Fig. 4
                        ) from an oil sand mine operator. Both distributions fit an Erlang distribution reasonably well. We use the fitted Erlang distributions shown in Figs. 3 and 4 in the simulation model and we vary the number of assigned trucks from 1 to 15. Fig. 5
                         compares the shovel idle probabilities estimated using simulation, approximation (3), and the component parts of approximation (3) (the expressions for the G/M/1 and D/D/1 models).


                        Fig. 5 indicates a good overall match between the approximate and simulated idle probabilities, justifying the use of approximation (3) to determine the coefficients, w
                        
                           ij
                        , which are required to linearize shovel idle probabilities. To use (3), one requires average service time, average back-cycle time, and the service time squared coefficient of variation; information that is readily available from production data in mines with which we are familiar.

A closer look at Fig. 5 reveals that when the number of trucks is small or large (for example, small enough for the idle probability to be above 0.50 or large enough for the idle probability to be below 0.05), then the differences in idle probabilities between the G/M/1 and D/D/1 models become small to negligible, demonstrating that systems with high or low shovel idle probabilities are less sensitive to assumptions about distributional characteristics. For moderately loaded systems (for idle probabilities between 0.05 and 0.50), the differences between G/M/1 and D/D/1 are magnified and both of these extreme models are likely to lead to inaccurate results. For example, with 10 trucks, the predicted idle probability is either 0% or 20%, depending on whether one uses the D/D/1 or the G/M/1 model, corresponding to a shovel utilization of either 100% or 80%; a substantial difference. For moderately loaded systems, which we expect to be common in practice, approximation (3) is a valuable tool to estimate the coefficients w
                        
                           ij
                        .

We used CPLEX 11.1 running on an AMD Turion 64 X2 Hewlett Packard laptop. We report results for a realistic-sized 4-shovel mine and for a 12-shovel mine that is larger than any real oil sand mine in existence today, in order to demonstrate the scalability of our models. We generated several problem instances based on the 4-shovel mine by varying the service and back-cycle time distributions (keeping the means of the distributions constant) and by varying the weight α for the throughput term in the objective function of the Enhanced formulation, from +1/R to −1/R. We solved the Enhanced formulation for all problem instances and we used the approximate method for some of the problem instances. All solution times were shorter than one second.

For the 4-shovel mine, we assumed a throughput requirement of R
                        = 15,000tonnes/hour, four truck types (240-ton, 320-ton, 360-ton, and 400-ton), and the mean service and back-cycle times that are shown in Table 3
                        . We varied the service time distribution from exponential, to Erlang-2, to Erlang-17 (as in Fig. 4), to deterministic, corresponding to squared coefficients of variation of 
                           
                              
                                 
                                    c
                                 
                                 
                                    s
                                 
                                 
                                    2
                                 
                              
                              =
                              1
                              ,
                              0.5
                              ,
                              0.06
                           
                        , and 0, to generate Problem Instances 1, 2, 3, and 4. The total number of trucks needed for the four problem instances was 19, 18, 17, and 17, demonstrating how decreased variability in the service time distribution decreases the number of trucks needed to satisfy the throughput requirement.


                        Table 3 shows the detailed truck allocation for Problem Instance 1, in which we assume exponential service and back-cycle time distributions. In this case, approximation (3) reduces to the G/M/1 expression, which is exact for this problem instance. Therefore, we expect the predicted shovel idle probabilities and throughputs to agree closely with estimates from our simulation model and the results in Table 3 confirm this. The truck allocation in Table 3 favors Shovels 1 and 3, which have shorter average service times.


                        Table 4
                         shows detailed truck allocation for Problem Instance 3, where we used Erlang distributions for the service and back-cycle times, with Erlang shape coefficients k = 17 and 18, respectively, consistent with the fitted distributions in Figs. 3 and 4. The resulting squared coefficient of variation for the service times is 
                           
                              
                                 
                                    c
                                 
                                 
                                    s
                                 
                                 
                                    2
                                 
                              
                              =
                              1
                              /
                              17
                              =
                              0.059
                           
                        . In this case, approximation (3) is not exact. Therefore, we do not expect perfect agreement between the optimization and simulation results, and indeed Table 4 shows that the predicted throughputs and idle probabilities are outside the 95% confidence intervals from the simulation for some of the shovels. The relative error is never greater than 1.4%, however.

Next, we generated Problem Instances 5 and 6 from Problem Instance 3 by varying the weight α of the throughput term in the objective function of the Enhanced model, from α
                        =1/R (penalty for exceeding the required total throughput), to 0, and to α
                        =−1/R (benefit from exceeding the required total throughput). The predicted total throughput increased as we decreased α, as expected, from 15,012, to 15,126, and 15,201tonnes (compared to R
                        =15,000tonnes). The total number of trucks remained constant at 17. For space reasons, we omit detailed tables and discussion of results for Problem Instances 2, 4, 5, and 6.

Returning to Problem Instance 1 to solve it with the approximate method that we described at the end of Section 5, we added hypothetical truck types, resulting in the combined set of truck sizes K
                        = {240, 260, 280, 300, 320, 340, 360, 370, 380, 390, 400} tons (real truck sizes are underlined). Adding the hypothetical truck types makes it possible to reduce the total number of trucks from 19 to 18, as shown in Table 5
                        . The simulation results in Table 5 are for the solution obtained after solving the Subproblem for Shovel 4. The predicted throughput and idle probabilities agree closely with the simulation estimates, except for a 1.5% relative throughput error for Shovel 4. The explanation is that the Enhanced model assigned three hypothetical 370-ton trucks to Shovel 4 but the Subproblem assigned one 320-ton truck and two 400-ton trucks, resulting in an average truck payload of (320+2×400)/3 =373.3tons, which is a 3.3-ton deviation from the desired payload. The overall solution satisfies all constraints in the Enhanced model. We obtained similar results (not shown in detail) when we used the approximate method for Problem Instance 3.

Problem Instances 1–6 have about 700 variables and 63 constraints. To investigate how the model size and solution time increase with mine size, we solve a problem instance (Problem Instance 7), which is based on a mine operation with 12 ore shovels, four truck types, and up to 140 trucks that can be allocated among the shovels to provide a total ore throughput of R
                        =60,000tonnes/hour. The resulting integer program has about 7,000 variables and 175 constraints. As shown in Table 6
                        , we need to deploy 77 ore trucks to produce the desired throughput. This ore demand and the required truck and shovel resources correspond to an oil sand mining operation that is larger than that of any single oil sand mine in the world to date (as of December 2012). An ore production of 60,000tonnes per hour is equivalent to production of about 760,000 barrels of crude oil per day, which is 2–3 times larger than the production of the largest current oil sand mining operation. Since we assume exponential service and back-cycle time distributions, approximation (3) is exact, and this is reflected in close agreement between the optimization model and simulation model estimates of throughput and idle probabilities.

When we used the approximate method to solve Problem Instance 7 (detailed results omitted), six of the 12 shovels were assigned more than one real truck type. The total number of trucks needed to produce the desired throughput changed from 77 to 78 and the simulated average throughput changed from 59,931 to 60,337. The average truck payload changed by at most 1.5% as a result of solving the Subproblem. The overall solution from the approximate method satisfied all constraints in the Enhanced model.

@&#DISCUSSION AND CONCLUSIONS@&#

We developed and validated an approximate expression (3) to quantify the probability that a shovel is idle, as a function of the number of trucks allocated to the shovel. We incorporated this expression into a linear integer program for minimizing the number of trucks needed to obtain a given throughput rate, while maintaining an ore grade in a specified range. The integer program is based on an assumption that a single truck size is allocated to each shovel but we outlined an approximate approach for relaxing this assumption, by using hypothetical truck types, representing different mixes of real truck types, and solving a set of auxiliary subproblems for shovels that are allocated a hypothetical truck type. We demonstrated that the integer program is easily solvable for mines that are larger than any real mine. Delasay, Kolfal, and Ingolfsson (2012) estimate the capital and operating cost per truck to be $1.6million per year for typical oil sand mines. Therefore, even small reductions in the total number of allocated trucks can translate into substantial savings.

The general principle that variability reduces efficiency holds true for surface mining operations. The shovel idle probability approximation (3) that we have introduced reveals that variability in truck loading times is far more important than variability in back-cycle times. Approximation (3) and our linear integer program make it possible to quantify the impact of reducing variability in loading times. Assuming deterministic loading times (as mining engineers do implicitly when using match factor calculations) is too optimistic. Assuming exponentially distributed loading times for tractability is too pessimistic; real surface mines have loading times that are less variable than implied by an exponential distribution. Approximation (3) provides a simple and effective way to interpolate between these two extremes. If greater accuracy is needed, then one can use simulation instead of approximation (3) without making the integer program more difficult to solve. We found the idle probabilities computed using (3) to be off by at most 3%, however, when compared with a simulation model that incorporates realistic loading and back-cycle time distributions.

Another general principle is that flexibility can increase efficiency. In the context of surface mining, having multiple truck sizes provides flexibility that can be exploited in order to reduce the total number of trucks and to better match the mine’s total throughput rate to the target throughput rate, enabling smoother downstream material flow. Our approximate approach for allocating a mix of different truck sizes to some or all shovels can be used to realize the benefits of truck-size flexibility.

The intended uses for our truck allocation model are (1) to provide a good initial allocation of trucks to shovels for the beginning of a shift and (2) to generate target production rates for each shovel, for use by real-time dispatching algorithms. Additional research is needed to investigate how to integrate our truck allocation model with previously proposed (or new) real-time dispatching algorithms.


                     
                        
                           
                              MF
                              =
                              
                                 
                                    (
                                    Number
                                    
                                    of
                                    
                                    trucks
                                    )
                                    (
                                    Loader
                                    
                                    cycle
                                    
                                    time
                                    )
                                 
                                 
                                    (
                                    Number
                                    
                                    of
                                    
                                    loaders
                                    )
                                    (
                                    Truck
                                    
                                    cycle
                                    
                                    time
                                    )
                                 
                              
                              .
                           
                        
                     In our notation, the loader cycle time is 1/μ and the truck cycle time is 1/μ
                     +1/λ. Setting the number of loaders (shovels) and MF equal to one and solving for the number of trucks, we obtain
                        
                           
                              y
                              =
                              Number
                              
                              of
                              
                              trucks
                              =
                              
                                 
                                    Truck
                                    
                                    cycle
                                    
                                    time
                                 
                                 
                                    Loader
                                    
                                    cycle
                                    
                                    time
                                 
                              
                              =
                              
                                 
                                    1
                                    /
                                    μ
                                    +
                                    1
                                    /
                                    λ
                                 
                                 
                                    1
                                    /
                                    μ
                                 
                              
                              =
                              1
                              +
                              μ
                              /
                              λ
                              =
                              1
                              +
                              1
                              /
                              r
                              ,
                           
                        
                     which is the number of trucks at which the shovel idle probability reaches zero (that is, the shovel is fully utilized) for a D/D/1/-/y system, as shown in expression (2).

@&#REFERENCES@&#

