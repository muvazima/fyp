@&#MAIN-TITLE@&#Diffuse interface method for fluid flow and heat transfer in cellular solids

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           Diffuse interface method for heat and mass transfer simulation of cellular solids.


                        
                        
                           
                           Method for realistic modelling of complex microscale structures of cellular solids.


                        
                        
                           
                           Novel tensorial mobility approach is employed for diffuse interface heat transfer.


                        
                        
                           
                           Pore scale level CFD simulation using diffuse interface lattice Boltzmann method.


                        
                        
                           
                           Validation on complex engineering type geometries show excellent agreement.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Phase-field

Lattice-Boltzmann

Segmented tensorial mobility

Heat-transfer

Cellular solids

Open cell metal foam

@&#ABSTRACT@&#


               
               
                  This work presents a contribution on the numerical modelling capabilities for the simulation of fluid flow and heat transfer in cellular solids – in particular we focus on open cell aluminium foams. Rather than applying one of the classical academical or commercial numerical finite volume (FV), finite difference (FD) or finite element (FE) interface tracking methods, we base our models on an interface capturing phase field method (Nestler, 2005). A coupled diffuse interface lattice Boltzmann fluid flow solver (Ettrich, 2014) and a diffuse interface heat transfer approach (Ettrich et al., 2014) are combined in view of dealing with even more convoluted geometries, incorporating the dynamics of interfaces and complex multiphysics applications. Numerical results for the combined fluid flow and heat transfer simulations in open cell metal foams are in very good agreement with experimental data (Ettrich and Martens, 2012; Ettrich et al., 2012).
               
            

@&#INTRODUCTION@&#

Due to the limitations of experimental measurements of fluid flow and heat transfer at the pore scale level of open cell foams, it appears likely to apply numerical methods. However, simulation does not come at zero cost. The task is not only to provide a feasible geometrical and topological model for the foam under consideration, but also in the numerical treatment of the complex structure. Today, computing power is falling in cost, which allows for the simulation of even bigger domains and more complex physics. However, the pre- and post-processing tasks are still challenging, and the rule of thumb of the early times of numerical modelling – which states that about 80% of the effort is spent on mesh generation, model specification and evaluation of the results – still holds.

Even though sophisticated mesh generation tools are available in the field of academic as well as commercial simulation tools, the discretisation of a complex cellular solid is still a challenging, time consuming and most interactive task. To this effect, the combination of an automated method for foam generation [6], within the context of an interface capturing phase field approach [1] with appropriate methods for fluid flow [2] and heat transfer [7] provides a promising alternative. Apart from that, to start with the geometry, a suitable representation of the foam structure is essential.

To the authors best knowledge, there are only few publications on the coupled fluid flow and heat transfer simulation in open cell metal foams. Actually, the greatest difficulty is the realistic modelling of the foam structure. For instance, this can be realised by conducting expensive and time consuming investigations using industrial computed tomography (CT) scanning. The CT technique provides voxel data that require careful post-treatment to reconstruct the three-dimensional foam structures, or that need the development of a simplified modelling approach.

A numerical model for fluid flow based on a fundamental periodic structure of eight unit cells is examined in the work of [8]. The foam geometry is spatially resolved by unstructured tetrahedral meshes with 2.2×105, 4.4×105 and 8.3×105 elements. Simulations are carried out using the flow solver CFD-ACE of CFDRC, whereas all pressure drop results are about 25% underestimated. The authors claim that the reason for the discrepancy is due to the lack of side wall effects.

Numerical analysis of the conduction heat transfer in high porosity foam structures is done in [9]. The effective thermal conductivity of porous structures is most commonly modelled by means of empirical or semi-empirical models, based on different assumptions regarding pore scale and unit cell topology, which reveals significant variations. Therefore, a finite volume method is applied for evaluation and assessment. Foams are generated from regular structures (unit cells) as well as from tomographic data. The results show, that the fraction of solid phase in the struts and in the lumps (intersections) is the key parameter for successful modelling, whereas the shape of the cells and struts has much less impact.

A completely different approach is pursued in [10], where a so called mesh-based microstructure representation algorithm (MBMRA) is employed for the modelling of cellular solids. In doing so, a reasonable fine mesh spans the whole simulation domain including fluid and solid regions. Random placed seed points are used for a rule based unstructured mesh growing algorithm for the solid matrix. The residual cellular structure depends on the predefined rules, and facilitates the generation of porous or fibrous structures for instance. Finally, the mesh provides a sharp interface representation of the fluid and solid domain, whereas a coupled Navier–Stokes solver for the fluid and a heat conduction code for the solid is used to simulate the conjugate heat transfer problem in a porous structure. Despite the interesting MBMRA-approach, the presented results lack of a comprehensive validation.

In [11] a multiple relaxation time lattice Boltzmann method is employed to simulate the flow field in a metallic foam sample. The geometry of the sample is gained from CT-scans conducted for a single cubic NiCr-foam sample of about 12.8mm edge length. Experimental pressure drop data is successfully recovered for a low to medium Reynolds number regime.

Foam structures based on a unit cell modelling are employed in [12] for the coupled simulation of fluid flow and heat transfer using an in-house solver for the Navier–Stokes and energy equations. Foam structures of 10ppi and 40ppi are generated from regular unit cells. Different unstructured computational grids with about 7×105, 1.5×106 and 2.8×106 tetrahedral elements are used, whereas the computational domain spans several pores in streamwise direction, in order to be representative. Pressure loss as well as heat transfer data is found to be reasonable with respect to experimental data. However, the authors in [12] consider, that the geometry and foam creation process is tedious and time consuming.

A commercial Navier–Stokes CFD-Software (Ansys FLUENT) is used in [13] for the simulation of pressure drop in foam structures of different pore densities but similar relative porosity. Similar to [11], the authors received two-dimensional images through computer tomographic X-ray measurements, which are then used to derive three-dimensional foam structures as a starting point for flow simulations. Computational domains of different sizes, covering a representative section of the foam with respect to the number of pores, are generated for the samples with pore densities 5ppi, 10ppi, 20ppi and 40ppi, ranging from about 3×106 to 27×106 mesh elements. The numerical results are in good agreement with measurement data, with deviations of about 5–15% in particular.

The solution of the Navier–Stokes equations is accompanied by several numerical difficulties, the treatment of nonlinear convective terms or the solution of the Poisson equation to evaluate the pressure [14]. In lattice Boltzmann methods, the pressure is obtained by the equation of state and the nonlinear convective terms reduce to an advection type problem [15].

In the present work we employ a coupled phase field, fluid flow and heat transfer method presented in [1–3,7] to real world foam structures, and compare the flow properties with experimental data [2,4,5]. Heat transfer and fluid flow performance is compared by means of macroscopic parameters such as pressure drop, pressure drop per unit length and Nusselt number. The fluid flow part within the combined approach is solved with a lattice Boltzmann method.

Making the complex geometric structures of cellular solids available to a numerical simulation requires the representation in a digitally, machine readable format. There are a couple of approaches for modelling foam structures, for example using representative elementary volumes (REV), ranging from simple cubic cell to regular dodecahedron [16] and even more complex tetrakaidecahedron [17,18], cf. Fig. 1
                     . These models describe the pore structure by means of a representative unit cell, characterising the structural configuration of the foam. The unit cell is a combination of nodes which are interconnected by edges. An open-cell metal foam can thus be described as a combination of nodes and edges. Within these models, mass is distributed along struts and at the knots of the regular structures, which are then used for an analytical derivation of foam characteristics like porosity or structure performance data such as thermal conductivity.

In [16] the foam structure is modelled using a simple cubic elementary cell, which allows a very simple representative structure, and is used to derive a theoretical model for pressure loss and heat transfer. An even more simplified approach is used in [19], presuming one-dimensional heat transfer and modelling foam structure by means of a batch of cylinders. The cross-sectional shape of the interconnected edges is studied in [16] using the dodecahedron with twelve flat pentagonal faces. Elementary cells with prisms shaped and round edges are modelled and compared in terms of porosity and pressure loss. The tetrakaidecahedron is a polyhedron with six quadratic and eight hexagonal faces [20], which allows to account for the imbalance of face and edge shape in a real foam structure. Among others it is used in [17,18,21–23] to model porosity, pressure loss and heat transfer in open cell metal foams.

However, detailed numerical investigations at pore scale level are either lacking in realistic structures due to a simplified representation by the above mentioned unit cells, or depend on a geometry which needs to be captured by a costly tomography, cf. [8,11,12].

In the course of this work a new algorithm is developed and described in detail in [6], that is capable of synthetically creating three dimensional cellular solids, foam or fabric like structures, with either open or closed cells. The workflow substantially follows three steps:
                        
                           •
                           First, the computational domain is gradually filled with a compact packing of spheres, which controls the scattering of the pores, cf. Fig. 2
                              (a).

Next, the basic topology of the structure is derived from a Voronoi-decomposition of the spatial domain, see Fig. 2(b).

Finally, the cellular structure is created from the boundaries of the Voronoi-diagram, see Fig. 2(c).

The struts of cellular structures are often different with regards to their cross-sectional shape. For example, aluminium foams often have a triangular cross-sectional shape and thickening in the vicinity of the knots. The latter can be re-sampled by relating the thickness of the struts to the distance to their knots. The triangular shape is re-sampled, by also considering the connections of two Voronoi-regions. Here, an additional criterion if material is set or not, is given by the distance to the nearest boundary region, see Fig. 2(d).

Historically, the phase field approach is developed to provide an alternate and computationally efficient method for solving free boundary problems. The elegance of the method lies in the fact that, compared to the classical front-tracking methods, the phase-field approach avoids the explicit treatment of phase boundaries, and the boundary conditions are implicitly applied at the interface. Originating from the simulation of microstructure evolution in materials, the phase field approach has established a powerful simulation alternative. Its elegant mathematical formulation of the interface capturing together with the possibility of multidisciplinary couplings to various physical models, is a unique characteristic and its main advantage compared to other methods. Consequently, the method has been applied to a wide variety of problems of phase transformations involving interfacial motion and complex geometrical evolution, also including catastrophic phase terminations.

The phase field method employed in the present work is based on the original formulation of [1] and is under continuous development. It is capable of solving simultaneously for mass diffusion, temperature and the interface propagation in multiphase and multicomponent materials. The full generality of the phase-field model including coupling with different physical fields has been implemented in a modular, massive parallel simulation package PACE3D [24]. In the scope of this work, we distinguish two different phases in the system, a solid and fluid phase. In the bulk solid phase, the respective order parameter reads 
                        
                           
                              
                                 ϕ
                              
                              
                                 solid
                              
                           
                           =
                           1
                        
                      whereas 
                        
                           
                              
                                 ϕ
                              
                              
                                 fluid
                              
                           
                           =
                           0
                        
                     , and vice versa in the bulk fluid phase. Furthermore, the condition 
                        
                           
                              
                                 ϕ
                              
                              
                                 solid
                              
                           
                           +
                           
                              
                                 ϕ
                              
                              
                                 fluid
                              
                           
                           =
                           1
                        
                      holds throughout the whole numerical domain at each time. Due to this constraint, the order parameter representation can be reduced to ϕ with 
                        
                           
                              
                                 ϕ
                              
                              
                                 fluid
                              
                           
                           =
                           ϕ
                        
                      and 
                        
                           
                              
                                 ϕ
                              
                              
                                 solid
                              
                           
                           =
                           1
                           -
                           ϕ
                        
                     .

The concerned cellular structures are described by the distribution of the order parameter, indicating regions of pure solid and pure fluid. A diffuse interface of finite width λ, where 
                        
                           0
                           <
                           
                              
                                 ϕ
                              
                              
                                 solid
                              
                           
                           ,
                           
                           
                              
                                 ϕ
                              
                              
                                 fluid
                              
                           
                           <
                           1
                        
                     , represents the interfaces between the two phase states. Since we do not consider phase changes in the present work, no phase dynamics is present, i.e. the phase states do not evolve. Consequently, the phase field equations are not solved in time. The diffuse interface profiles are purely utilized as an elegant way to describe complex microstructure geometries with a smooth surface. Accordingly, the diffuse interface representation conduces as a numerical approach to interpolate physical quantities, such as parameters of fluid flow and heat transfer across the boundary of adjacent phase states.

Applying the approximation of Bhatnagar–Gross–Krook [25], leads to the so called LBGK single-relaxation time lattice Boltzmann model [26,27]. Here, all moments of the distribution functions relax with the same time scale, and the complex collision operator reduces to a single relaxation parameter 
                           
                              1
                              /
                              τ
                           
                         applied on the collision term according to
                           
                              (1)
                              
                                 
                                    
                                       f
                                    
                                    
                                       i
                                    
                                 
                                 (
                                 x
                                 +
                                 
                                    
                                       e
                                    
                                    
                                       i
                                    
                                 
                                 
                                    
                                       δ
                                    
                                    
                                       t
                                    
                                 
                                 ,
                                 t
                                 +
                                 
                                    
                                       δ
                                    
                                    
                                       t
                                    
                                 
                                 )
                                 =
                                 
                                    
                                       f
                                    
                                    
                                       i
                                    
                                 
                                 (
                                 x
                                 ,
                                 t
                                 )
                                 -
                                 
                                    
                                       1
                                    
                                    
                                       τ
                                    
                                 
                                 
                                    
                                       
                                          
                                             
                                                f
                                             
                                             
                                                i
                                             
                                          
                                          -
                                          
                                             
                                                f
                                             
                                             
                                                i
                                             
                                             
                                                (
                                                eq
                                                )
                                             
                                          
                                       
                                    
                                 
                                 .
                              
                           
                        where the 
                           
                              
                                 
                                    f
                                 
                                 
                                    i
                                 
                              
                           
                        ’s are the particle distribution functions, 
                           
                              x
                           
                         is the spatial coordinate, t is the time and 
                           
                              δ
                              t
                           
                         a time increment. The particle distribution functions are allowed to follow q predefined directions represented by a set of unit velocity vectors 
                           
                              
                                 
                                    e
                                 
                                 
                                    i
                                 
                              
                           
                         with 
                           
                              i
                              =
                              0
                              ,
                              …
                              ,
                              q
                              -
                              1
                           
                        . The value of q depends on the specific lattice model. The equilibrium distribution function 
                           
                              
                                 
                                    f
                                 
                                 
                                    i
                                 
                                 
                                    (
                                    eq
                                    )
                                 
                              
                           
                         is defined by a Taylor expansion of the Maxwell–Boltzmann equation as
                           
                              (2)
                              
                                 
                                    
                                       f
                                    
                                    
                                       i
                                    
                                    
                                       (
                                       eq
                                       )
                                    
                                 
                                 =
                                 
                                    
                                       w
                                    
                                    
                                       i
                                    
                                 
                                 ρ
                                 
                                    
                                       
                                          1
                                          -
                                          
                                             
                                                
                                                   
                                                      e
                                                   
                                                   
                                                      i
                                                   
                                                
                                                ·
                                                u
                                             
                                             
                                                
                                                   
                                                      c
                                                   
                                                   
                                                      s
                                                   
                                                   
                                                      2
                                                   
                                                
                                             
                                          
                                          +
                                          
                                             
                                                
                                                   
                                                      (
                                                      
                                                         
                                                            e
                                                         
                                                         
                                                            i
                                                         
                                                      
                                                      ·
                                                      u
                                                      )
                                                   
                                                   
                                                      2
                                                   
                                                
                                             
                                             
                                                2
                                                
                                                   
                                                      c
                                                   
                                                   
                                                      s
                                                   
                                                   
                                                      4
                                                   
                                                
                                             
                                          
                                          -
                                          
                                             
                                                
                                                   
                                                      u
                                                   
                                                   
                                                      2
                                                   
                                                
                                             
                                             
                                                2
                                                
                                                   
                                                      c
                                                   
                                                   
                                                      s
                                                   
                                                   
                                                      2
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                                 ,
                              
                           
                        where 
                           
                              
                                 
                                    c
                                 
                                 
                                    s
                                 
                              
                              =
                              c
                              /
                              
                                 
                                    3
                                 
                              
                           
                         is the speed of sound, and c is the basic speed on the lattice according to the time and space step 
                           
                              
                                 
                                    δ
                                 
                                 
                                    t
                                 
                              
                              =
                              
                                 
                                    δ
                                 
                                 
                                    x
                                 
                              
                              =
                              1
                           
                         in lattice units, respectively. From requiring that the equilibrium distribution complies with the moments of the collision invariants mass, momentum and energy, as well as from symmetry considerations and from 
                           
                              ∑
                              
                                 
                                    w
                                 
                                 
                                    i
                                 
                              
                              =
                              1
                           
                        , the weights are derived as in [28].

The macroscopic values of density and momentum are given by means of the moments of the distribution functions, i.e.
                           
                              (3)
                              
                                 ρ
                                 =
                                 
                                    
                                       
                                          ∑
                                       
                                       
                                          i
                                       
                                    
                                 
                                 
                                    
                                       f
                                    
                                    
                                       i
                                    
                                 
                                 
                                 and
                                 
                                 ρ
                                 u
                                 =
                                 
                                    
                                       
                                          ∑
                                       
                                       
                                          i
                                       
                                    
                                 
                                 
                                    
                                       e
                                    
                                    
                                       i
                                    
                                 
                                 
                                    
                                       f
                                    
                                    
                                       i
                                    
                                 
                                 .
                              
                           
                        
                     

The numerical stability, accuracy and the physical limits of the method are significantly improved by applying the MRT model [29], where an independently adjustable relaxation time is used for each kinetic moment. Doing so, collision takes place in moment-space utilising different physically related relaxation parameters. Due to this, the bulk and shear viscosity are no longer coupled as in the BGK model, and spurious oscillations related to low shear viscosities can be dampened, and the stability of the model is improved.

Within this work, we employ the implementation of a single-relaxation time (SRT) as well as a multiple-relaxation time (MRT) framework within the context of a phase field method, which is given in full detail together with validations in [2].

Compared to other common fluid dynamics applications, the lattice Boltzmann method captivates by its simplicity in terms of modelling the physical process as well as the ease of implementation. Furthermore, the lattice Boltzmann scheme is highly appropriate for parallelisation, which is important with regard to exascale computing [30–34].

For the application of quasi-incompressible low speed flows (Ma≪0.3), the viscous effects as well as the pressure work term can be neglected in the energy equation. Accounting for these prerequisites and with respect to the segmented tensorial approach given in [3,7], the transient convection–diffusion equation for the temperature field reads
                           
                              (4)
                              
                                 
                                    
                                       C
                                    
                                    
                                       V
                                       ,
                                       ‖
                                    
                                 
                                 
                                    
                                       ∂
                                    
                                    
                                       t
                                    
                                 
                                 T
                                 +
                                 〈
                                 u
                                 ,
                                 ∇
                                 T
                                 〉
                                 =
                                 〈
                                 Q
                                 ∇
                                 ,
                                 ∇
                                 T
                                 〉
                                 +
                                 〈
                                 L
                                 ,
                                 ∇
                                 T
                                 〉
                                 ,
                              
                           
                        where 
                           
                              u
                           
                         is the fluid velocity, 
                           
                              
                                 
                                    C
                                 
                                 
                                    V
                                    ,
                                    ‖
                                 
                              
                           
                         is the interpolation function of the volumetric heat capacity parallel to the interface and 
                           
                              Q
                           
                         and 
                           
                              L
                           
                         are the quadratic and linear terms of the segmented tensorial approach [3]. While the thermal conductivity is modelled as a tensorial quantity, a modified divergence operator is applied with respect to the different interpolation schemes used for different directions according to the interface.

The segmented tensorial approach allows to distinguish between quadratic and linear terms, and a dedicated numerical discretisation owing to the physical and pseudo-physical nature of the different terms. Finally this results in a simple implementation and a significantly improved stability with respect to high ratios in mobility and capacity properties, as well as complex high curvature geometries.

The discrete lattice Boltzmann Eq. (1) can be viewed as a finite difference representation of the continuous Boltzmann equation with simple explicit forward Euler time discretisation. Discretisation of the spatial as well as the velocity space, for the formulation in a six dimensional phase-space is done utilising a three dimensional D3Q19 model, which requires a regular Cartesian equally spaced grid.

For the heat transfer calculation Eq. (4) is solved on the same structured, equally spaced Cartesian grid, by means of an explicit finite difference formulation. In the course of model development we are using a rather simple fully explicit finite difference framework, employing fully explicit forward Euler time discretisation. A central discretisation scheme and an upwind scheme as well as a total-variation diminishing (TVD) scheme [35] are used for the diffusive and the pseudo-advective parts, respectively.

All the used discretisation schemes are standard schemes, which are well documented in the open literature [36–39], hence a lengthy outline is omitted here. The grid resolution is chosen problem dependent, according to the rule of thumb that at least 6–10 cells should be used to represent the interfacial region. Timestep size is chosen with respect to the well known stability and quality criterions given in the literature [35,40].

Above fluid flow and heat transfer solvers are coupled with the phase field solver of the software package PACE3D, developed at the Karlsruhe University of Applied Sciences, Institute of Materials and Processes and the Karlsruhe Institute of Technology, Institute of Applied Materials. The software framework allows for the simulation, visualisation and analysis of problems subject to phase transitions or interface dynamics, based on the multicomponent multiphase phase field method of [1]. Besides the numerical solution of phase field, concentration and energy equations, the coupling of additional solvers for elasticity, magnetism of fluid flow allows the realisation of multiphysics simulations. However, in the course of this work, focus is given exclusively to the development of the fluid flow and heat transfer capabilities, whereas no phase transition or interface dynamics are considered. The software is parallelized with the OpenMPI standard using one-dimensional and three-dimensional domain decomposition. An extremely efficient performance on high performance computing (HPC) architectures is achieved, cf. [41].

Depending on the manufacturing process most cellular solids in general, and in particular open cell metal foams are intrinsically stochastic structures. Therefore, regular unit cell based structures most often lack from the true features of the microstructure and its effects.

The algorithm developed in [6] and described in Section 2 is employed to construct open cell metal foam structures. The method is controlled using statistical measures, mean and standard deviation of the pore and edge diameter, whereas the porosity and specific gravity are results of the final structure. Due to its heuristic nature, the presented algorithm reflects the stochastic nature of the foam structures and can hence reflect the flow and heat transfer properties in a realistic manner in accordance with experimental measurements, cf. Fig. 3
                        .

The domain initialization is done by executing the foam structure algorithm and running a phase-field type model to generate diffuse interface profiles of a finite width λ of 6–10 numerical cells.

The experimental data for foams of the same pore density consist of significant differences in pore scale measures and porosity. The numerically modelled foam structures are designed such that the porosity is as realistic as possible. Since the basic packing of spheres in the foam modelling algorithm is based on a heuristic but reproducible model, the same set of input parameters can lead to foam models of different porosities. Thus, the seed-point of the heuristic model is varied over a certain range, and the suitable porosity, with respect to the experimental values, are found by an automated trial and error procedure.

Open cell foams or cellular solids in general, come in a wide variety of structures and key features, the cause of which lies in the different material characteristics as well as the respective manufacturing processes. In the course of the present work, the algorithm of the foam generation process is especially matched with the characteristics and features of the foams used in the experimental studies [4,5]. These are open cell aluminium foams produced in AlSi7Mg (EN AC-42100) alloy with pore densities of 10ppi, 20ppi and 30ppi, manufactured by precision casting. The foam samples are supplied by m.pore GmbH, Dresden, Germany. A comparison of the porosities for exemplary real and artificial foam structures for 10ppi aluminium samples used in the experiments, are given in Table 1
                        , whereas three different artificial foam structures are depicted in Fig. 4
                        . This quality feature together with the above mentioned capturing of pore scale features is crucial for the usability of the artificial structures, since it defines whether the model will successfully reflect the physics of the flow and heat transfer. For the foams under consideration, the agreement in porosities given in Table 1 as well as the matching of the observed pore scale features is excellent. However, for other types of foams which exhibit different characteristic features, the agreement has to be reviewed and the foam generation algorithm will have to be adapted as necessary. The applicability over a broader range of foams is under examination and is subject of forthcoming publications.

We remark, that the process of foam generation is a matter of several seconds or minutes depending on the domain size. For a spatial resolution of 2003 cells, the foam generation including a couple of phase-field iterations for the development of a smooth interface, requires about 6min on an ordinary single CPU.

For both, the sharp as well as the diffuse interface simulations below, we consider a quarter of the cylindrical foam samples of dimensions 
                           
                              ø
                           
                        40mm×20mm, having a horizontal and vertical plane of symmetry in streamwise direction along the centerline. A suitable inlet and outlet length is modelled to provide a fully developed flow in front of the sample and to avoid boundary effects on the flow leaving the foam. For conjugate heat transfer simulation, the heat source with respect to the experimental setup is modelled by a cylindrical solid shroud, cf. Fig. 5
                        .

For comparison in terms of quantitative results as well as for the qualitative assessment of the modelling procedure, a number of selected comparative simulations are performed using the commercial simulation software StarCCM. The geometric modelling of a foam structure is far beyond the capabilities of the CAD kernel of the StarCCM framework. However, the foam structures generated in PACE3D are exported in Stereo Lithography (STL) format, and incorporated as input for the modelling in StarCCM. The generation of a feasible numerical model in terms of a mesh, boundary description and simulation setup, is not as straight forward as in PACE3D. Elaborate user interaction is necessary, and – which is the most critical point of view – mesh generation is still the most time consuming and difficult part. StarCCM employs an automatic unstructured mesh generation system, where either hexahedral, tetrahedral or polygonal element types can be used. The mesh generation is controlled by different criteria related to geometric elements or features and general mesh sizing and quality parameters, which should be selected carefully to obtain high quality numerical grids.

A high quality mesh is made from polyhedral cells, where prism layers are inserted in the vicinity of solid surfaces, resulting in 8.4×105 cells, 4.9×106 faces and 4.5×106 vertices. A longitudinal cross section is shown in Fig. 6
                        (a), whereas the solid surface of the foam and shroud is given in Fig. 6(b). Appropriate boundary conditions are applied on all faces of the computational domain, and material properties of aluminium and air are used for fluid and solid. Finally, the Navier–Stokes and energy equations are solved in StarCCM by means of a coupled implicit finite volume method.

A comparison of the simulated and experimental pressure loss is given in Fig. 7
                        (a) for a 10ppi aluminium foam sample of 20mm length. The simulated and measured pressure losses are in good agreement, whereas slightly higher deviation is observed in case of high Reynolds numbers. The numerical results are within a constant error band of about ±1.5%, except for the highest Reynolds number, where the difference is of the order of 4%. Despite of the excellent agreement of the foams in terms of porosities, structural and topological differences between the real and artificial foams may account for the deviations in pressure losses.


                        Fig. 7(b) and (c) display results of the thermal simulations for 10ppi aluminium foam structures. The temperature profile of the flow downstream of the sample is in reasonable agreement with the measurement, cf. Fig. 7(b). Furthermore, the integral heat transfer performance in terms of Nusselt number is given in Fig. 7(c) for three different foam samples with porosities 
                           
                              ψ
                              =
                              88.44
                              %
                           
                        , 87.7% and 87.89% compared to the measured values for the 10ppi aluminium sample of porosity 
                           
                              ψ
                              =
                              88.441
                              %
                           
                        . Whereas the simulation shows excellent agreement for the structure with almost identical porosity (
                           
                              
                                 
                                    ψ
                                 
                                 
                                    modelling
                                 
                              
                              =
                              88.44
                              %
                           
                         compared to 
                           
                              
                                 
                                    ψ
                                 
                                 
                                    exp
                                 
                              
                              =
                              88.441
                              %
                           
                        ), the computed results for two foams of smaller porosities yield slightly decreased Nusselt numbers. The overall agreement of experimental and numerical fluid flow and heat transfer features demonstrates that the artificial foam structures represent a suitable geometrical modelling approach.

In contrast to StarCCM the coupled solvers in PACE3D make use of a uniform and equally spaced Cartesian grid. Ensuing a resolution of the finite interfacial region between fluid and solid phases of 6–10 cells, different numerical grids ranging from 100×100 to 200×200 cells in lateral and 400–600 cells in streamwise direction are investigated. The geometrical representation of the foam as given in Fig. 5 shaded in light grey, whereas the outer solid tubular margin is indicated as dark grey region. The latter is an outer boundary not part of the computation. The amount of active cells for the numerical computation reduces from 24×106 to 18×106. At the inlet a velocity condition is used, whereas extrapolation boundary conditions are used at the outlet of the numerical domain for fluid flow and heat transfer.

The fluid flow simulations are only carried out in the fluid region of the computational domain, and the heat transfer calculations are seamlessly applied on both, the fluid and solid regions. Using the diffuse interface formulation, no explicit boundary or coupling conditions have to be defined at the fluid–solid interfaces. The interface between the outer boundary and the fluid or solid phases acts like an adiabatic solid wall. Since the outer boundary is not modelled as a diffuse interface, the tubular geometry results in a staircase representation (dark grey), whereas the cylindrical shroud of the foam is modelled as solid phase in a smooth cylindrical shape. However, since drag and friction of the foam by far exceeds those induced by the cylindrical inlet and outlet region we accept this shortcoming.


                        Fig. 8
                         depicts the experimental and numerical integral pressure loss for a foam probe with a pore density of 10ppi and a porosity of 88.44% for different Reynolds numbers. The accuracy of the pressure transducer of ±0.05% for a full scale of 25hPa is indicated by the upper and lower error limits (dashed lines) in the figure. The results of StarCCM are included for comparison, whereas two different simulation series are carried out using PACE3D. A coarse staircase mesh with dimensions 100×100×400 cells is used for the sharp interface solution, the finer mesh with dimensions 200×200×600 cells is used for the diffuse interface simulation, where the interface transforms from one phase state to the other over a region of 6–10 cells. While the results of StarCCM show slightly higher deviations for higher Reynolds number, the results obtained with PACE3D, for both sharp as well as diffuse interface setup, are all within the ±0.05% error margin.

Further numerical tests are performed on artificial foam structures with pore diameters of 4mm, 5mm and 6mm and a constant edge diameter of 0.6mm, which result in porosities of 
                           
                              ψ
                              =
                              76.08
                              %
                           
                        , 83.53% and 89.03%, respectively. The results of flow simulations with Reynolds numbers ranging from 150 to 3000 are compared with the experimental data of the most comparable foam structures in terms of porosity used in the experimental investigation, i.e. 10ppi copper 
                           
                              ψ
                              =
                              76.42
                              %
                           
                        , 10ppi aluminium 
                           
                              ψ
                              =
                              83.53
                              %
                           
                         and 10ppi aluminium 
                           
                              ψ
                              =
                              88.44
                              %
                           
                        . The results are depicted in Fig. 9
                        (a)–(c) in comparison to the extrapolated measurement fits.

Apart from comparing integral performance values in terms of pressure loss, the simulation of complex cellular structures provides a high level of details, which can hardly be accessed by experimental methods, if ever. In the following flow features are visualised and discussed. The distribution of velocity magnitude is given in Figs. 10 and 11
                        
                         on a lateral cross section up- and downstream of the foam sample for Reynolds numbers of 6000 and 26,000, respectively. There is an obvious difference in the velocity gradient next to the cylindrical wall for the velocity distributions upstream of the foam sample, that correctly corresponds to the Reynolds number. The flow that pertains to the higher Reynolds number shows a higher gradient, smaller boundary layer. Regarding the downstream velocity distribution, the flow with the smaller Reynolds number shows a vast region of low velocity, compared to more homogeneous flow structures to higher Reynolds numbers. Besides increasing turbulent effects, for higher Reynolds number, the mixing of the flow due to vortex shedding, detachment of wakes behind the foam edges and higher frequency of unsteady flow phenomena is more distinctive, thus leading to a more granular velocity distribution.

This is acknowledged by the secondary flow structure, depicted by the distribution of the magnitude of secondary flow given in Figs. 10(c) and 11(c). Downstream of the foam the secondary flow structure is likely to coincide with the topological features (pores and pore windows) of the foam. However, the flow structure referring to a higher Reynolds number shows higher magnitude in secondary flow and a more dispersed pattern.

The occurrence of unsteady flow phenomena like vortex shedding in the wake of the foam edges can be identified in Fig. 12
                        (a) and (b). The flow with Re
                        ≈6000 produces large wakes and detached flow regions. The regions of separated flow downstream of the foam is more pronounced, whereas for the higher Reynolds number, the separation is more dispersed. The complex interaction of the different effects leads to a heavily distorted, fluctuating flow structure in the downstream region, cf. Fig. 12(a) and (b). The longitudinal velocity distribution of the flow with higher Reynolds number forms unsteady flow features (vortex shedding) already downstream of the first foam edges. Besides the frictional losses due to the formation of boundary layers, the main source of irreversible dissipation of energy is due to the eddies formed by the wake flow. Since the applied lattice Boltzmann method solves for the transient flow field, the unsteadiness does not disappear or smeared as for a steady Reynolds Averaged Navier Stokes solver (RANS). However, for both Reynolds numbers under investigation, the fluctuating flow is mixed out not far downstream the foam – a well homogenised flow is identified just about two characteristic diameters downstream of the samples. Due to the unsteadiness of the flow, the analysis of the integral pressure loss as well as the thermal performance values in the subsequent section, are conducted as time averaged quantities.

Finally, a three dimensional visualisation of streamlines is given as an example for the level of details which is provided by a numerical simulation at pore scale level. Fig. 13
                         illustrates streamlines inside the foam structure, coloured with the local velocity magnitude. Whereas some of the streamlines pass through the structure on a straight path and without significant disturbance, some streamlines close to the wake of a foam edge give some idea of the separation and recirculation taking place in flow through cellular solids. Adjacent streamlines of high and low velocity magnitudes will form free shear layers; again a source of dissipative energy loss.

In this section we provide results for the simulation of forced convection inside a foam structure utilising the segmented tensorial approach mentioned in Section 3.2. A couple of validations for the segmented tensorial approach are performed in [3,7], which show that the segmented tensorial approach is suitable for the thermal simulation in complex convoluted three dimensional cellular structures. Especially from the numerical point of view, the approach is found to be robust and stable, no stability issues, spurious effects or oscillations are observed.

For measurements and related to ratios of Gr/Re
                        2
                        <1 (ratio of Grashof number and square of the Reynolds number), the forced flow dominates buoyancy effects, which can be neglected in the simulations. Since we operate in a moderate regime close to ambient conditions regarding temperature and pressure, and from the experimental results we know that the Prandtl number is constant at about 0.7. As a consequence, the thermal and momentum boundary layers are of the same order, i.e. no additional refinement of the mesh is required. However, the application of the segmented tensorial approach on such complex geometry is a challenging task.

A hybrid thermal lattice Boltzmann equation model (HTLBE-Model), where a lattice Boltzmann fluid flow method is coupled with a classical finite difference heat transfer algorithm, is already proposed e.g. in [42], and successfully applied in [43–45]. By decoupling mass and momentum from energy conservation [46], it is assumed that for a weak coupling of fluid flow with temperature allows for using an athermal lattice Boltzmann model for the solution of the flow field, whereas the temperature field is coupled by convective and buoyancy terms [47]. With respect to [44], the acoustic modes in the temperature equations that refer to real gases are neglected in the course of the present work. Thus, we solve for the incompressible energy equation and no scaling of the thermal diffusivity is required [42]. Due to the different stability criteria of an advection diffusion process, namely the Courant–Friedrichs–Lewy (CFL) condition the time step is evaluated accordingly and, if necessary, chosen differently for the fluid flow and heat transfer.

To validate the numerical solution of the coupled diffuse interface fluid flow and heat transfer models on a real world engineering type application, a 10ppi aluminium foam sample of 20mm length is simulated. The computational domain is equal to the one used for fluid flow simulation, cf. Fig. 5.


                        Fig. 14
                        (a) displays the heating of the foam structure, where the temperature distribution of the fluid is given in three cross sectional planes. On the outer cylindrical shroud (coloured red according to high temperature), the boundary condition applies, and is almost constant all over the shroud geometry due to the high thermal conductivity of the bulk solid material, whereas the foam structure establishes a smooth radial temperature gradient. Compared to this, the temperature gradient in axial direction inside the foam is small, due to the high thermal conductivity compared to the surrounding fluid.

We conduct a series of simulations in order to compare the integral thermal performance by means of the Nusselt number for different Reynolds numbers. Fig. 14(b) shows the results compared to the experimental reference values. According to the measurements, where the recorded physical quantities are time-averaged, the simulation results are averaged over a representative period. The results of the simulation are all within an error band ±5% of the full scale value. The overall agreement of the numerical and experimental reference values is excellent for the contemplated range of Reynolds numbers.

To demonstrate the transient evolution of the flow and temperature field, we provide a small series of consecutive images of the temperature filed in a longitudinal cross section, cf. Fig. 15
                        .

In the preceding sections we presented the numerical results of modelling the structure, fluid flow and heat transfer of open cell metal foams, employing a diffuse interface approach. More precisely we compare to characteristics and experimental results of foam samples of open cell aluminium foams, produced in AlSi7Mg (EN AC-42100) alloy by precision casting, provided by m.pore GmbH, Dresden, Germany. In the context of a phase field method, we focus on a two phase system (fluid—solid) with stationary steady interfaces. Thus, the numerical work claims to contribute to the continuous model development in the active and broad-ranging field of phase field methods.

Using the algorithm of [6], we are able to generate realistic geometries for the considered open cell aluminium foams. The artificial structures have shown to capture the topological and geometrical features found in real foam samples, and excellently match the porosities of corresponding experimental samples. However, since only one type of open cell aluminium foam is considered here, the applicability of the method for a broader variety of foam structures is subject to forthcoming examinations.

While the basic validation of the diffuse interface lattice Boltzmann method and the segmented tensorial mobility model are given in [2,3], simulations were performed for artificial counterparts of the real foam structures used in the experiments of [4,5]. The results in terms of pressure loss and heat transfer data are in good agreement with the measurements. Furthermore, the results show to provide vast information, which permits a detailed view on pore scale features of flow and temperature fields.

Concluding we can determine that the derived methods are able to recover the integral performance values of fluid flow and heat transfer for this single type of complex foam-structures, with satisfying and reasonable degree of accuracy. The successful application of this approach for other open cell foams or cellular solids, mainly depends on an effective modelling of the structure and capturing of geometric features, respectively. Thus, we will continue our promising efforts in that direction.

With a focus on high performance and exa-scale computing, the mentioned numerical methods have been implemented within the highly parallelized framework of PACE3D, employing a modern 3D domain decomposition approach combined with load balancing [41].

For the simulation methods, future efforts will concentrate on the extended formulation of the segmented tensorial mobility approach, the implementation of multigrid convergence acceleration and adaptive mesh refinement (AMR) methods. We therefore hope, to provide applications of the diffuse interface approach on more complex multiphysics applications, including phase transitions and phase dynamics, where the phase field method will show its full potential, in forthcoming writings.

@&#ACKNOWLEDGEMENTS@&#

The authors thank the scientific staff at the Institute of Materials and Processes at the University of Applied Sciences for their support and work on the PACE3D package. Support provided by the Federal Ministry of Education and Research (BMBF) through the FHProfUnt funding project SimFoam (FKZ 17029X10) is also greatly acknowledged. The work has further been supported by the Helmholtz programme EMR.

@&#REFERENCES@&#

