@&#MAIN-TITLE@&#A DEA based composite measure of quality and its associated data uncertainty interval for health care provider profiling and pay-for-performance

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           DEA is used to develop a composite measure of health care quality.


                        
                        
                           
                           An empirical study is carried in US Department of Veterans Affairs nursing homes.


                        
                        
                           
                           DEA identifies fewer high performers but more highly rewards the high performers.


                        
                        
                           
                           Advantages of DEA for developing composite measure make it worth pursuing further.


                        
                        
                           
                           Monte Carlo resampling with replacement is applied to reflect DEA data uncertainty.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Data Envelopment Analysis (DEA)

Health care quality

Monte Carlo

Bootstrapping

Performance

@&#ABSTRACT@&#


               
               
                  Composite measures calculated from individual performance indicators increasingly are used to profile and reward health care providers. We illustrate an innovative way of using Data Envelopment Analysis (DEA) to create a composite measure of quality for profiling facilities, informing consumers, and pay-for-performance programs. We compare DEA results to several widely used alternative approaches for creating composite measures: opportunity-based-weights (OBW, a form of equal weighting) and a Bayesian latent variable model (BLVM, where weights are driven by variances of the individual measures). Based on point estimates of the composite measures, to a large extent the same facilities appear in the top decile. However, when high performers are identified because the lower limits of their interval estimates are greater than the population average (or, in the case of the BLVM, the upper limits are less), there are substantial differences in the number of facilities identified: OBWs, the BLVM and DEA identify 25, 17 and 5 high-performers, respectively. With DEA, where every facility is given the flexibility to set its own weights, it becomes much harder to distinguish the high performers. In a pay-for-performance program, the different approaches result in very different reward structures: DEA rewards a small group of facilities a larger percentage of the payment pool than the other approaches. Finally, as part of the DEA analyses, we illustrate an approach that uses Monte Carlo resampling with replacement to calculate interval estimates by incorporating uncertainty in the data generating process for facility input and output data. This approach, which can be used when data generating processes are hierarchical, has the potential for wider use than in our particular application.
               
            

@&#INTRODUCTION@&#

Publicly profiling health care provider performance is seen by policy makers in many countries as a way of motivating provider improvements and increasing information available to consumers in order to encourage better decisions. In the United States, the Centers for Medicare and Medicaid Services (CMS) make available to the public, through its Hospital Compare (CMS, 2013a) and Nursing Home Compare (CMS, 2013b) websites, data on the performance of hospitals and nursing homes respectively. Other systems with metrics on hospital outpatient care, physician practices, and accountable care organizations are in the process of being tested and released. In the British National Health Service, NHS Choices (2013) has developed comparison websites at the procedure or treatment level reporting an array of patient experiences and outcome measures. Other European countries are beginning to make available comparable information as well, though much of their efforts have been at the country level working through the European Commission and the Organisation for Economic Co-operation and Development to standardize information for comparisons across countries (European Commission, 2013).

Not only is provider performance on many different metrics increasingly being made available to the public around the world, but performance is being used to adjust payments to providers. In the United States, CMS has implemented the Hospital Value-Based Purchasing program (CMS, 2013c), and other programs mandated by the Affordable Care Act, such as those to adjust payments to new accountable care organizations and physicians, are in the process of being implemented. Similar programs in Europe include more focus on economic evaluation related to measuring cost-effectiveness, since the Europeans are not as market oriented as the systems are in the United States. For example, in the United Kingdom, the National Institute for Health and Clinical Excellence (NICE) is using cost-effectiveness ratings to choose the quality metrics to implement pay-for-performance standards for general practitioners. In Germany, RAND Europe has worked with the German health insurance system to develop a system for incorporating quality indicators into the reimbursement system for their physicians (Nolte et al., 2013).

Most existing provider profiling and related research focuses on individual performance indicators. Individual performance indicators are useful in targeting specific areas for improvement and monitoring improvement progress. However, a multitude of individual performance indicators does not allow an easy assessment of how well a provider organization is performing in the aggregate, the level at which assessments for payment and reporting are focused. To assess overall performance, it is useful to aggregate individual indicators into a composite measure (Institute of Medicine, 2006). Our focus in this paper is on indicators of the quality of care provided by health care facilities, where patients may be affected by different attributes of organizational performance and where we can measure these effects at the patient level. In this context, composite measures of quality are a useful summary for management, consumers and other stakeholders of the extent to which the facility has created a culture of quality and designed structures and processes to ensure quality throughout the organization. Composite measures of quality allow senior leaders to better benchmark the quality performance of their organization against high-performing organizations and to monitor changes over time. They provide information useful to patients when they are selecting where to receive their care. They also can be aligned against other relevant measures of performance, such as costs, to help managers and policy makers understand the value organizations are delivering to their clients. And, perhaps most importantly, they provide a basis for facility profiling that focuses on the “big picture.”

In pay-for-performance (P4P) programs, performance on individual indicators is usually mapped into a payment adjustment and then the adjustments are added together to determine the overall impact on provider payment. As Shwartz et al. (2011) have shown in the context of hospitals, facilities that do best on a composite measure are often not in the group of highest performers on many of the individual measures. It seems as though facilities have two strategies: (1) to concentrate on some measures at the expense of others; or (2) to attempt to do pretty well on all of the measures, recognizing that as a result they may not be a top performer on very many of the individual measures. It seems reasonable that policies should be designed to recognize and reward both types of behavior. Our main focus in this paper is the composite measure component of a P4P program.

Our main innovation in methodology is to illustrate the use of Data Envelopment Analysis (DEA) (Charnes, Cooper, & Rhodes, 1978) to calculate a composite measure of quality and an associated uncertainty interval that exploits the hierarchical structure of the data generating process that leads to the inputs at each facility. To understand the implications of using DEA in this way, it is useful to compare the DEA composite measure we construct to composite measures calculated using other approaches. Specifically, we consider two other approaches: (1) Using opportunity-based weights (OBWs) to combine individual performance indicators into a composite measure. This is the approach used by CMS in its early P4P Demonstration Programs (Kahn, Ault, Isenstein, Potetz, & Gelder, 2006; Reeves et al., 2007) and is a commonly used way of calculating a composite measure from individual measures when the individual measures are proportions. We show later in the paper that OBWs are a form of equal weighting; and (2) Using a Bayesian latent variable model (BLVM) to estimate the “underlying” composite measure (Landrum, Bronskill, & Normand, 2000). The main questions we examine are the sensitivity of the resulting facility ranks and identification of high and low performers to the approach used to calculate the composite measure; and, in the context of a specific type of P4P program, the impact of the different approaches on the percentage of the pool of resources available in the program that are allocated to each facility. We identify high and low performers based on whether interval estimates of performance are below overall mean performance (high performers with lower likelihood of adverse events) or above (low performers with higher likelihood of adverse events). Interval estimates are easily determined for a Bayesian hierarchical latent variable model.

The most widely used approach for determining interval estimates in DEA uses bootstrapping with a kernel density estimator applied to the estimated frontier to approximate the DEA frontier data generating process (Simar & Wilson, 1998, 2000a, 2000b, 2011a, Chap. 10; Kneip, Léopold, & Wilson, 2008, 2015). These interval estimates reflect the error in estimating the frontier given the location of a specific set of facilities in multidimensional space. This approach as currently developed does not allow constraints on the DEA weights, something that is important in our context. Also, it takes as fixed each facility's input and output data. However, in our situation, there is uncertainty due to the fact that the inputs are calculated from patients at each facility, i.e., there is a hierarchical structure to our data. The particular set of patients at each facility can be viewed as a random sample from a population of “potential” patients that would use the facility if the health service need arose. Thus, in our situation, there is variation in the estimates of DEA efficiencies due to this source of uncertainty in the inputs. We capture this uncertainty in our interval estimates; they reflect how stable facility performance is likely to be in future periods with different realizations of patient arrivals. Because our approach may be useful in other situations with hierarchical data structures in which DEA is used, we describe the approach in a somewhat more general context than required by our application and provide details in Appendix A.

In order to motivate the different approaches to calculating a composite measure, we provide a little background on composite measures and an example that highlights the underlying conceptual distinctions.

Different approaches have been proposed to create composite measures of health care provider performance (e.g., Caldis 2007; Jacobs, Goddard, & Smith, 2005; Jha, Zhonghe, Orav, & Epstein, 2005; Landrum et al., 2000; Lied, Malsbary, Eisenberg, & Ranck, 2002; O'Brien et al., 2007; Reeves et al., 2007; Staiger, Dimick, Baser, Fan, & Birkmeyer, 2009; Shwartz, Peköz, Christiansen, Burgess, & Berlowitz, 2013; Werner & Bradlow, 2006; Zaslavsky, Shaul, Zaborski, Cioffi, & Clearly, 2002). In this paper, we step back from the specific ways in which these and other such approaches differ and focus on the bigger picture: what are the conceptual and philosophical differences that underlie several different approaches to profiling and what are the implications of these differences for profiles and payment under P4P programs and indirect incentive systems currently being expanded in the US and other countries.

A composite measure calculated from individual indicators is a construct, which can be conceptualized in two different ways: one, as a reflective construct and two, as a formative construct (Edwards & Bagozzi, 2000). The first conceptualization corresponds to what one usually has in mind when thinking of a construct – an underlying latent trait that is manifested in the particular indicators. This latent trait is called a reflective to indicate that the construct is reflected in the individual indicators (in the same sense that a student's underlying mathematics ability is reflected in her scores on a series of mathematics tests). When conceptualized as a reflective construct, the direction of causality is from the construct to the observed indicators, that is, the indicators are high or low because the underlying construct is good or bad. The implication of this conceptualization is that the indicators should be correlated. Traditional analytical approaches for estimating reflective constructs include factor analysis and structural equation modeling. The Bayesian latent variable model approach we use estimates a reflective construct “quality” which is manifested in the observed quality indicators.

Alternatively, a construct can be conceptualized as formative. In this case, the construct is formed from or defined by the individual indicators, usually by taking a weighted or un-weighted average of the indicators (Nardo et al., 2005). As an example, an individual's socio-economic status is defined by the particular set of variables used to measure the concept. There is no latent construct “socio-economic status” that “causes” or is reflected in an individual's level of education or income, common variables used to define socio-economic status. In a formative construct, the direction of causality is from the observed indicators to the construct. One would not necessarily expect individual indicators that comprise a formative construct to be highly correlated. In fact, individual indicators are often selected to broaden the definition of the construct and reflect its different dimensions, not to add indicators that are highly correlated with existing indicators. The challenge in creating a formative construct is how to determine the weights. Though there are guidelines that are helpful in deciding whether a construct is reflective or formative (Jarvis, MacKenzie, & Podsakoff, 2003), the decision is often based on perspective and judgment. Composite measures calculated using opportunity-based weights and DEA are examples of formative constructs.

Before turning to the specifics of the alternative approaches to creating a composite measure that we examine, it is usual to consider an analogy that highlights the distinctions. Assume you are a teacher and, to evaluate your students, you give 3 exams during a semester, each of which covers material from one-third of the course; you assign a team project done by small student groups; and you assign a score to each student based on their class participation throughout the semester. The “composite measure problem” is how to weight the individual indicators of student performance to arrive at a final score, which you can then use as the basis for ranking students and assigning a final grade. The standard approach is to use your judgment to assign a weight to each indicator, where the sum of the weights is 1. In the simplest case, you might assign equal weight to each indicator. Call these the “baseline” weights. In our example, opportunity-based weights might be thought of as the baseline weights. As an alternative, though not one without controversy, you might decide to give students some flexibility in modifying their particular weights, e.g., at the start of the semester each student is allowed to adjust the weight assigned to each indicator up or down by 25 percent from the baseline. A more radical way in which to provide student flexibility is to allow students to adjust the weights at the end of the semester once they know their scores on the various indicators. The assumption behind this end-of-the-semester approach is that actual performance on the indicators is a set of “revealed preferences” about the relative importance of the indicators to the student. In essence, we give students the “benefit-of-the-doubt” and allow them to assign more weight to those indicators on which they did better under the assumption that they did better because these indicators were more important to them. The DEA-determined weights are one way to operationalize this approach. Finally, we could use a statistically-based approach to solving this problem, for example by using weights derived from variances of the scores. The logic behind this approach is that when scores are more tightly clustered, the indicator provides less insight into who is doing well and who is not, that is, the scores are more likely to reflect noise than signal; when scores are more spread out, the indicator provides a better basis for distinguishing the high from the low performers. This approach might be implemented by using as the weights a rescaling (so the sum is 1) of the loadings of the first principal component in a principal components analysis (variables with higher variance have higher loadings); or, in our case, by a latent variable model. There is no gold standard for combining individual indicators into a final score and thus no basis for saying that one of these approaches is correct, or, even better than another. It really depends upon one's philosophy about grading and assumptions about the way in which alternative weighting schemes might change incentives.

@&#METHODS@&#

We use data from 112 Veterans Health Administration (VA) nursing homes (called Community Living Centers, CLCs) that in fiscal year 2007 (October 2006 through September 2007) had at least 10 long-stay residents (over 90 days) and in which at least one third of their residents were long-stay.

As part of the Omnibus Budget Reconciliation Act of 1987, nursing homes are required to use a standardized data collection instrument, the Resident Assessment Instrument (RAI), for quarterly patient assessments and care planning. The Minimum Data Set (MDS), a core component of the RAI, is a summary assessment of each long-stay resident. MDS data include a large number of variables describing the status of patients and scales have been created from subsets of these variables (Mor, 2005; Zimmerman et al., 2003). Using MDS 2.0 data on approximately 40,000 CLC residents from 2003 to 2007, we developed risk adjustment models to predict the likelihood that each resident experiences each of 4 types of adverse events for which, in a particular time period, the resident is eligible: development of pressure ulcers, functional decline, behavioral decline and mortality (see Appendix B
 for details on model development and on the models). Because these are adverse events, they are events that one wants to minimize. The c statistics for the risk adjustment models in the validation data set were 0.75, 0.67, 0.69 and 0.75 respectively. (The c statistic, a widely used measure of model performance when predicting a dichotomous outcome, is the proportion of all possible pairs of patients in which one experiences the event and one does not where the predicted probability of the event is higher for the patient experiencing the event. Though in general a c statistic of 0.70 is considered adequate, CMS uses risk adjustment models with c statistics only slightly above 0.60 (Keenan et al., 2008)).

Using FY 2007 data, we calculated from the risk adjustment model the predicted probability that a resident develops each type of adverse event for which the resident is eligible. For each type of adverse event, we then summed the predicted values for each resident in a facility to determine the expected number of cases of that type of adverse event given the risk profile of patients in the facility. From this, we calculated the ratio of the observed number of each type of adverse event to the expected (that is, O/E ratios) (Ash, Shwartz, Peköz, & Hanchate, 2013). Each ratio shows how well the facility did on the indicator relative to what would be expected given the risk characteristics of its residents. It is these ratios we combine into a variety of composite measures.

Traditionally, opportunity-based weights are calculated for process measures in which out of some number of people eligible for an intervention (the opportunities), some number receive the intervention. Our context is slightly different. For a given outcome i (the outcomes are the development of a pressure ulcer, functional decline, behavioral decline and mortality), let eijk
                        
                        =predicted probability from an outcome-specific risk adjustment model that resident k in facility j experiences outcome i and 
                           
                              
                                 E
                                 
                                    i
                                    j
                                 
                              
                              =
                              
                                 ∑
                                 k
                              
                              
                                 e
                                 
                                    i
                                    j
                                    k
                                 
                              
                           
                        . In our situation, Eij
                         is a facility measure corresponding to “opportunities” to experience the outcome i in facility j. In facility j, the opportunity-based weight associated with outcome i is the proportion of total opportunities across all outcomes that are associated with outcome i, that is, 
                           
                              
                                 E
                                 
                                    i
                                    j
                                 
                              
                              
                                 
                                    ∑
                                    i
                                 
                                 
                                    E
                                    
                                       i
                                       j
                                    
                                 
                              
                           
                        . The number of residents in facility j who actually experience outcome i is denoted as Oij
                        . For outcome i in facility j, 
                           
                              
                                 O
                                 
                                    i
                                    j
                                 
                              
                              
                                 E
                                 
                                    i
                                    j
                                 
                              
                           
                         is an indicator of how well facility j performs on outcome i. The composite measure for facility j
                        =

                           
                              
                                 
                                    
                                       ∑
                                       i
                                    
                                    
                                       (
                                       
                                          
                                             [
                                             
                                                
                                                   E
                                                   
                                                      i
                                                      j
                                                   
                                                
                                                
                                                   
                                                      ∑
                                                      i
                                                   
                                                   
                                                      E
                                                      
                                                         i
                                                         j
                                                      
                                                   
                                                
                                             
                                             ]
                                          
                                          
                                             [
                                             
                                                
                                                   O
                                                   
                                                      i
                                                      j
                                                   
                                                
                                                
                                                   E
                                                   
                                                      i
                                                      j
                                                   
                                                
                                             
                                             ]
                                          
                                       
                                       )
                                    
                                    =
                                    
                                       
                                          
                                             ∑
                                             i
                                          
                                          
                                             O
                                             
                                                i
                                                j
                                             
                                          
                                       
                                       
                                          
                                             ∑
                                             i
                                          
                                          
                                             E
                                             
                                                i
                                                j
                                             
                                          
                                       
                                    
                                 
                              
                           
                        
                     

Note that a reduction of one adverse event regardless of the type has the same impact on the composite. It is in this sense that opportunity-based weights are a form of equal weighting.

The flexibility weighting scheme for calculating a final grade described in the introduction, which is usually implemented using DEA, is a recognized approach for constructing composite measures (Nardo et al., 2005). As implied in the Introduction, it is called a “benefit-of-the-doubt” approach, a name well-justified by Cherchye, Moesen, Rogge, and Van Puyenbroeck (2007) in a clear discussion of the approach. To formalize somewhat our earlier discussion, assume relative performance on a set of indicators is a revealed preference by the organization of the relative importance the organization assigns to each of the indicators. A benefit-of-the-doubt approach recognizes these revealed preferences by assigning higher weights to those indicators on which the organization performs well and lower weights to those on which it performs less well. As Cherchye et al. (2007) note, benefit-of-the-doubt weights “can be connected to a game theoretic set-up: they can be conceived of as Nash equilibria in an evaluation game between a regulator and an organization.” (Semple, 1996). There have been a number of applications of DEA to composite measure construction, including Mahlberg and Obersteiner (2001), Cherchye and Kuosmanen (2004, Chap. 7), Depotis (2005) and Cherchye et al. (2008). There has been one application in the health care area of which we are aware (Shwartz et al., 2009).

Using the standard DEA structure, suppose we have n facilities or DMUs. Each DMUj, j
                           =1, 2, ..., n, has s different outputs, yrj
                            (r
                           =1, 2, ..., s), and m different inputs, xij
                            (i
                           =1, 2, ..., m). Based upon the input and output values, the basic DEA efficiency index can be calculated as (Charnes et al., 1978)

                              
                                 (1)
                                 
                                    
                                       
                                          
                                          
                                          
                                             
                                                
                                                   δ
                                                   o
                                                   *
                                                
                                                =
                                                min
                                                
                                                   δ
                                                   o
                                                
                                             
                                          
                                       
                                       
                                          
                                          
                                          
                                             
                                                s
                                                .
                                                t
                                                .
                                                
                                                   ∑
                                                   
                                                      j
                                                      =
                                                      1
                                                   
                                                   n
                                                
                                                
                                                   
                                                      λ
                                                      j
                                                   
                                                   
                                                      x
                                                      
                                                         i
                                                         j
                                                      
                                                   
                                                
                                                ≤
                                                
                                                   δ
                                                   o
                                                
                                                
                                                   x
                                                   
                                                      i
                                                      o
                                                   
                                                
                                                ,
                                                i
                                                =
                                                1
                                                ,
                                                2
                                                ,
                                                .
                                                .
                                                .
                                                ,
                                                m
                                             
                                          
                                       
                                       
                                          
                                          
                                          
                                             
                                                
                                                   ∑
                                                   
                                                      j
                                                      =
                                                      1
                                                   
                                                   n
                                                
                                                
                                                   
                                                      λ
                                                      j
                                                   
                                                   
                                                      y
                                                      
                                                         r
                                                         j
                                                      
                                                   
                                                
                                                ≥
                                                
                                                   y
                                                   
                                                      r
                                                      o
                                                   
                                                
                                                ,
                                                r
                                                =
                                                1
                                                ,
                                                2
                                                ,
                                                .
                                                .
                                                .
                                                ,
                                                s
                                             
                                          
                                       
                                       
                                          
                                          
                                          
                                             
                                                
                                                   λ
                                                   j
                                                
                                                ≥
                                                0
                                                ,
                                                j
                                                =
                                                1
                                                ,
                                                2
                                                ,
                                                .
                                                .
                                                .
                                                ,
                                                n
                                             
                                          
                                       
                                    
                                 
                              
                           
                        

This is a constant returns to scale (CRS) model since it fixes the scale relationship between the inputs and the outputs. In applications of DEA to composite measures, either the inputs or outputs are set to 1, so that we are not so much calculating efficiency as creating a composite to make each facility look as good as it can (benefit-of-the-doubt) within the constraints of the measures (Cherchye et al., 2007). In our case, in which the DMUs are the Community Living Center facilities, we treat the O/E ratios as input measures and assume a single constant output of 1. As shown in Seiford and Zhu (1998) and Lovell and Pastor (1999), model (1) is equivalent to the following model when all outputs are set to 1 across all DMUs

                              
                                 (2)
                                 
                                    
                                       
                                          
                                          
                                          
                                             
                                                
                                                   δ
                                                   *
                                                
                                                =
                                                min
                                                
                                                   δ
                                                   o
                                                
                                             
                                          
                                       
                                       
                                          
                                          
                                          
                                             
                                                s
                                                .
                                                t
                                                .
                                                
                                                   ∑
                                                   
                                                      j
                                                      =
                                                      1
                                                   
                                                   n
                                                
                                                
                                                   
                                                      λ
                                                      j
                                                   
                                                   
                                                      x
                                                      
                                                         i
                                                         j
                                                      
                                                   
                                                
                                                ≤
                                                
                                                   δ
                                                   o
                                                
                                                
                                                   x
                                                   
                                                      i
                                                      o
                                                   
                                                
                                                ,
                                                
                                                i
                                                =
                                                1
                                                ,
                                                2
                                                ,
                                                .
                                                .
                                                .
                                                ,
                                                m
                                             
                                          
                                       
                                       
                                          
                                          
                                          
                                             
                                                
                                                   ∑
                                                   
                                                      j
                                                      =
                                                      1
                                                   
                                                   n
                                                
                                                
                                                   λ
                                                   j
                                                
                                                =
                                                1
                                             
                                          
                                       
                                       
                                          
                                          
                                          
                                             
                                                
                                                   λ
                                                   j
                                                
                                                ≥
                                                0
                                                ,
                                                j
                                                =
                                                1
                                                ,
                                                2
                                                ,
                                                .
                                                .
                                                .
                                                ,
                                                n
                                             
                                          
                                       
                                    
                                 
                              
                           
                        

Note that it appears that the constraint 
                              
                                 
                                    ∑
                                    
                                       j
                                       =
                                       1
                                    
                                    n
                                 
                                 
                                    λ
                                    j
                                 
                              
                           
                           =1 ensures that the resulting DEA (2) frontier exhibits variable returns to scale (VRS) (Banker, Charnes, & Cooper, 1984). In other words, in our particular case, a CRS assumption in model (1) turns into a VRS model (2). If one imposes the VRS condition in model (1), one obtains the same DEA model (2) when all outputs are set to 1 across all DMUs. In other words, the condition of equal outputs (or without outputs) across all DMUs implicitly indicate 
                              
                                 
                                    ∑
                                    
                                       j
                                       =
                                       1
                                    
                                    n
                                 
                                 
                                    λ
                                    j
                                 
                              
                           
                           =1. Therefore, in the current study, the CRS vs VRS assumption is immaterial (see, for example, Liu, Zhang, Meng, Li, and Xu (2011)).

The O/E ratios are treated as input measures because they are adverse events. Alternatively, we could have treated the O/E ratios as bad outputs and assumed a single input of 1. In order to treat the bad outputs, we would have needed to use the inverse O/E ratios, namely, E/O ratios and use the output-oriented version of model (2) (Seiford & Zhu, 2002).

In our context, giving complete benefit-of-the-doubt is undesirable for policy reasons and so it is important to impose restrictions on the flexibility of the weights. In particular, we want to assign sufficient weight to all of the quality indicators (QIs) so that none are allowed to be ignored completely when setting priorities. To add weights to the DEA model, we consider the dual to (2), which can be expressed as

                              
                                 (3)
                                 
                                    
                                       
                                          
                                          
                                          
                                             
                                                
                                                   Max
                                                   
                                                   μ
                                                
                                             
                                          
                                       
                                       
                                          
                                          
                                          
                                             
                                                
                                                   Subject
                                                   
                                                   to
                                                
                                             
                                          
                                       
                                       
                                          
                                          
                                          
                                             
                                                
                                                   μ
                                                   −
                                                   
                                                      ∑
                                                      
                                                         i
                                                         =
                                                         1
                                                      
                                                      m
                                                   
                                                   
                                                      
                                                         v
                                                         i
                                                      
                                                      
                                                         x
                                                         
                                                            i
                                                            j
                                                         
                                                      
                                                   
                                                   ≤
                                                   
                                                   0
                                                   
                                                   for
                                                   
                                                   any
                                                   
                                                   j
                                                
                                             
                                          
                                       
                                       
                                          
                                          
                                          
                                             
                                                
                                                   
                                                      ∑
                                                      
                                                         i
                                                         =
                                                         1
                                                      
                                                      m
                                                   
                                                   
                                                      
                                                         v
                                                         i
                                                      
                                                      
                                                         x
                                                         
                                                            i
                                                            o
                                                         
                                                      
                                                   
                                                   =
                                                   1
                                                
                                             
                                          
                                       
                                       
                                          
                                          
                                          
                                             
                                                
                                                   μ
                                                   ≥
                                                   0
                                                   ,
                                                   and
                                                   
                                                   
                                                      v
                                                      i
                                                   
                                                   ≥
                                                   0
                                                   .
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           
                        

Note that based upon linear programming duality, μ should be a free variable. However, since μ
                           =0 is always a feasible solution to (3), μ must be non-negative.

Weight restrictions to limit benefit-of-the-doubt can be easily introduced into model (3). In our particular case, xij
                           
                           =
                           
                              
                                 
                                    O
                                    
                                       i
                                       j
                                    
                                 
                                 
                                    E
                                    
                                       i
                                       j
                                    
                                 
                              
                           . Therefore, model (3) can be expressed as

                              
                                 (4)
                                 
                                    
                                       
                                          
                                          
                                          
                                             
                                                
                                                   Max
                                                   
                                                   μ
                                                
                                             
                                          
                                       
                                       
                                          
                                          
                                          
                                             
                                                
                                                   Subject
                                                   
                                                   to
                                                
                                             
                                          
                                       
                                       
                                          
                                          
                                          
                                             
                                                
                                                   μ
                                                   −
                                                   
                                                      ∑
                                                      
                                                         i
                                                         =
                                                         1
                                                      
                                                      m
                                                   
                                                   
                                                      
                                                         v
                                                         i
                                                      
                                                      
                                                         
                                                            O
                                                            
                                                               i
                                                               j
                                                            
                                                         
                                                         
                                                            E
                                                            
                                                               i
                                                               j
                                                            
                                                         
                                                      
                                                   
                                                   ≤
                                                   0
                                                   
                                                      
                                                      for
                                                   
                                                   
                                                   any
                                                   
                                                   j
                                                
                                             
                                          
                                       
                                       
                                          
                                          
                                          
                                             
                                                
                                                   
                                                      ∑
                                                      
                                                         i
                                                         =
                                                         1
                                                      
                                                      m
                                                   
                                                   
                                                      
                                                         v
                                                         i
                                                      
                                                      
                                                         
                                                            O
                                                            
                                                               i
                                                               o
                                                            
                                                         
                                                         
                                                            E
                                                            
                                                               i
                                                               o
                                                            
                                                         
                                                      
                                                   
                                                   =
                                                   1
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           
                        

For each DMU
                              j
                           , the “baseline” weight wi
                            is the opportunity-based weight. For each DMU
                              j
                           , we specify the following weight restrictions

                              
                                 
                                    
                                       
                                          
                                             E
                                             
                                                i
                                                j
                                             
                                          
                                          
                                             
                                                ∑
                                                i
                                             
                                             
                                                E
                                                
                                                   i
                                                   j
                                                
                                             
                                          
                                       
                                       ·
                                       
                                          P
                                          L
                                       
                                       ≤
                                       
                                          v
                                          i
                                       
                                       ≤
                                       
                                          
                                             E
                                             
                                                i
                                                j
                                             
                                          
                                          
                                             
                                                ∑
                                                i
                                             
                                             
                                                E
                                                
                                                   i
                                                   j
                                                
                                             
                                          
                                       
                                       ·
                                       
                                          P
                                          H
                                       
                                    
                                 
                              
                           where PL
                            and PH
                            are adjusters to the baseline weights used to specify the weight constraints. Our weights are absolute weights because the weight restrictions are added directly to vi
                           . In our application, we set PL
                           
                           =0.5, that is, none of the weights can be lower than 50 percent of the opportunity-based weight. Experts in the long-term care area suggested 50 percent of the OBW as the lowest reasonable boundary to create relative weights between the QIs. To obtain a feasible solution, the smallest PH
                            could be 5, which was the value we use for PH
                            in the analyses that follow. We impose the upper constraint in order to ensure some balance in the weights applied across the quality measures and reduce the possibility of facilities achieving high performance levels by concentrating too much on a limited number of the quality measures. This balance is important in our context because a patient entering a nursing home does not know which of the adverse events he or she is likely to experience.

DEA is viewed largely as a non-parametric and deterministic approach for obtaining a measure from multidimensional data that does not model measurement and/or estimation errors. Banker (1993), however, provides a formal statistical foundation for DEA by identifying conditions under which DEA estimators are statistically consistent and maximize likelihood. Along with Banker's (1993) work, a number of other studies show that DEA is a full-fledged statistical methodology. Banker and Natarajan (2011, Chap. 11) provide a comprehensive discussion of statistical tests based upon DEA. On the other hand, Simar and Wilson (2011b, 2011c) and Kneip et al. (2008, 2015) posit that Banker and Natarajan's (2011, Chap. 11) tests are not correct.

Without any a priori information about the distributions of the DEA inputs and outputs, bootstrapping (Efron, 1979; Efron & Tibshirani, 1993) offers a sensible way to make statistical inferences in DEA. Simar and Wilson (1998) were the first to develop a consistent bootstrap method for DEA efficiency estimators using a kernel density approach that avoids the inconsistency of naïve bootstrapping approaches on the sample of given units, given that the true frontier is unknown (Simar & Wilson, 2000a, 2000b). This DEA bootstrapping approach allows one to correct DEA efficiency scores for bias and to determine interval estimates for the scores (Kneip et al., 2008, 2015). Simar and Wilson's (1998) approach assumes that the probability distribution of obtained DEA efficiencies mimics the data generating process (DGP) of the true but unknown parent population of units being evaluated.

To bootstrap DEA efficiency scores, one needs to generate a pseudo data set of decision making units (DMUs). To do this, one can resample from the original DEA efficiency scores (estimates) to form a “new” DEA frontier while the DMU under evaluation is fixed at the observed values (Simar & Wilson, 1998). An alternative approach is to resample from inputs-outputs pairs in the observed DMUs. However, in many real world DEA applications, there is only one observation for the inputs-outputs pair from each DMU. In this case, it appears that the only way to conduct DEA bootstrapping analysis is through resampling the original DEA efficiency scores, as in Simar and Wilson (1998). In the above bootstrap approach, the original DEA efficiency scores are repeatedly resampled and “adjusted” by a reflection kernel density process to construct an empirical sampling distribution for the DEA efficiencies. In that process, for each newly sampled set of efficiency scores, a set of DMUs’ inputs and outputs are constructed to form a DEA frontier and the related DEA efficiency scores for DMUs under evaluation are calculated. We denote this approach as DEA-SW-bootstrapping.

In standard DEA and DEA-SW-bootstrapping, it is assumed that the input and output values are observed and given, and that is all we know about the DGP for a particular observation. However, in our situation, there exists information about DMUs that exists below the input or output level, in particular on the patients on whom the performance measures are calculated, which are aggregated to obtain the observed inputs and/or outputs for each DMU. In this situation, one can resample this lower-level data, which are then aggregated to construct pseudo data sets of inputs and outputs for all DMUs. Then, using the pseudo data sets, we run the DEA model to generate a set of DEA efficiency scores. By doing so, we introduce randomness to all DMUs, including both the DEA frontier and the DMU under evaluation. This approach is very different from the existing DEA-SW-bootstrapping models because it takes advantage of the fact that we have lower-level data to generate data sets for all DMUs and focuses on uncertainty in the composition of the inputs and outputs rather than making statistical assumptions on the efficient frontier and working from a well-defined frontier DGP as is done in DEA-SW-bootstrapping. Our approach, drawing random samples with replacement from the original sample in each facility to create simulated samples of the same size as the original sample, is an application of bootstrapping as used in operations research (Friedman & Friedman, 2001), econometrics (Greene, 2003) and health services research (Steyerberg, 2010). However, to avoid confusion with DEA-SW-bootstrapping, we will refer to our approach as Monte Carlo Resampling with Replacement (MCRR) and the samples drawn as Monte Carlo resamples (MC resamples). In Appendix A
, we describe this approach using the standard DEA CRS model (2) to analyze our data and compare the interval estimates from this approach, which we call Data Uncertainty Interval Estimates (DUIEs), to the interval estimates resulting from the DEA-SW-bootstrap.

We apply the algorithm in Appendix A to model (4) to obtain interval estimates of the DEA scores. For each MC resample from the data, we also calculate the composite measure using opportunity-based weights. For both DEA and the opportunity-based weights approach, we calculate from 1000 MC resamples, the average of the efficiency scores and the lower and upper points of the 95 percent interval estimates, that is, the 2.5 and 97.5 percentiles of the 1000 MC resamples.

We initially used a model similar to that proposed by Landrum et al. (2000), though we used a logit model rather than a probit model. Similar to as defined above (Section 2.2), let eijk
                        
                        =predicted probability from the risk-adjustment model that resident k in facility j experiences outcome i. Let oijk
                         be a 0/1 variable that equals 1 if resident k in facility j experiences outcome i,pijk
                        
                        =risk-adjusted probability that resident k in facility j experiences outcome i, and θj
                        
                        =latent measure of quality at facility j. We assumeθj
                        ∼ N(0,1). Our model is

                           
                              
                                 
                                    
                                       
                                       
                                       
                                          
                                             
                                                
                                                   o
                                                   
                                                      i
                                                      j
                                                      k
                                                   
                                                
                                                
                                                   |
                                                
                                                
                                                   p
                                                   
                                                      i
                                                      j
                                                      k
                                                   
                                                
                                                ∼
                                                Bernoulli
                                                
                                                   (
                                                   
                                                      p
                                                      
                                                         i
                                                         j
                                                         k
                                                      
                                                   
                                                   )
                                                
                                                
                                                and
                                             
                                          
                                       
                                    
                                    
                                       
                                       
                                       
                                          
                                             
                                                logit
                                                
                                                   (
                                                   
                                                      p
                                                      
                                                         i
                                                         j
                                                         k
                                                      
                                                   
                                                   )
                                                
                                                
                                                   |
                                                
                                                
                                                   α
                                                   
                                                      0
                                                      i
                                                   
                                                
                                                ,
                                                
                                                   α
                                                   
                                                      1
                                                      i
                                                   
                                                
                                                ,
                                                
                                                   θ
                                                   j
                                                
                                                ,
                                                
                                                   e
                                                   
                                                      i
                                                      j
                                                      k
                                                   
                                                
                                                ∼
                                                
                                                   α
                                                   
                                                      0
                                                      i
                                                   
                                                
                                                +
                                                
                                                   α
                                                   
                                                      1
                                                      i
                                                   
                                                
                                                
                                                   θ
                                                   j
                                                
                                                +
                                                logit
                                                
                                                   (
                                                   
                                                      e
                                                      
                                                         i
                                                         j
                                                         k
                                                      
                                                   
                                                   )
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           
                        
                     

Note that the risk-adjusted probability that a resident experiences an outcome is a function of their inherent risk e from the risk adjustment model and the latent measure of quality at the facility. α
                        0i
                         is a scaling factor that reflects differences in the baseline values of each of the outcomes. α
                        1i
                         measures the strength of the relationship between the specific outcome i and the latent measure of quality at facility j. Differences in α
                        1i
                         reflect differences in the variation of the indicators across facilities.

Because of the large number of residents at each facility, this model can be slow to converge. Instead of the individual-level model, we use a facility-level model that Peköz, Shwartz, Christiansen, and Berlowitz (2010) have shown provides estimates of the θj
                        s that are a close approximation to estimates from the individual-level model. Let of
                           ij
                         and pf
                           ij
                         be the facility level counterparts of the similar variables defined above at the individual level. Thus, of
                           ij
                         is the total number of outcome i events observed at facility j and pf
                           ij
                         is the probability a resident at facility j experiences outcome i. The model is

                           
                              
                                 
                                    
                                       
                                       
                                       
                                          
                                             
                                                
                                                   o
                                                   
                                                      i
                                                      j
                                                   
                                                   f
                                                
                                                
                                                   |
                                                
                                                
                                                   p
                                                   
                                                      i
                                                      j
                                                   
                                                   f
                                                
                                                ,
                                                
                                                   n
                                                   
                                                      i
                                                      j
                                                   
                                                
                                                ∼
                                                Binomial
                                                
                                                
                                                   (
                                                   
                                                      p
                                                      
                                                         i
                                                         j
                                                      
                                                      f
                                                   
                                                   ,
                                                   
                                                      n
                                                      
                                                         i
                                                         j
                                                      
                                                   
                                                   )
                                                
                                                
                                                where
                                             
                                          
                                       
                                    
                                    
                                       
                                       
                                       
                                          
                                             
                                                logit
                                                
                                                   (
                                                   
                                                      p
                                                      
                                                         i
                                                         j
                                                      
                                                      f
                                                   
                                                   )
                                                
                                                
                                                   |
                                                
                                                
                                                   α
                                                   
                                                      0
                                                      i
                                                   
                                                
                                                ,
                                                
                                                   α
                                                   
                                                      1
                                                      i
                                                   
                                                
                                                ,
                                                
                                                   θ
                                                   j
                                                
                                                ,
                                                
                                                   e
                                                   
                                                      i
                                                      j
                                                   
                                                
                                                =
                                                
                                                   α
                                                   
                                                      0
                                                      i
                                                   
                                                
                                                +
                                                
                                                   α
                                                   
                                                      1
                                                      i
                                                   
                                                
                                                
                                                   θ
                                                   j
                                                
                                                +
                                                logit
                                                
                                                   (
                                                   
                                                      e
                                                      
                                                         i
                                                         j
                                                      
                                                   
                                                   )
                                                
                                             
                                          
                                       
                                    
                                    
                                       
                                       
                                       
                                          
                                             
                                                
                                                   e
                                                   
                                                      i
                                                      j
                                                   
                                                
                                                =
                                                
                                                   ∑
                                                   k
                                                
                                                
                                                   e
                                                   
                                                      i
                                                      j
                                                      k
                                                   
                                                   2
                                                
                                                /
                                                
                                                   ∑
                                                   k
                                                
                                                
                                                   e
                                                   
                                                      i
                                                      j
                                                      k
                                                   
                                                
                                                ,
                                                
                                                and
                                             
                                          
                                       
                                    
                                    
                                       
                                       
                                       
                                          
                                             
                                                
                                                   n
                                                   
                                                      i
                                                      j
                                                   
                                                
                                                =
                                                
                                                   (
                                                   
                                                      ∑
                                                      k
                                                   
                                                   
                                                      e
                                                      
                                                         i
                                                         j
                                                         k
                                                      
                                                   
                                                   )
                                                
                                                /
                                                
                                                   e
                                                   
                                                      i
                                                      j
                                                   
                                                
                                                .
                                             
                                          
                                       
                                    
                                 
                              
                           
                        
                     

Model parameters were estimated using Gibbs sampling as implemented in Spiegelhalter et al. (2003). This Markov Chain Monte Carlo (MCMC) estimation method generates samples of model parameters from the posterior distribution of the parameters, given the data and prior distributions of the parameters. We place non-informative priors on the parameters (α
                        0k
                         and α
                        1k
                        ), resulting in posterior distributions that are largely driven by the data. The mean of values from the Gibbs samples are used as point estimates of the parameters. Interval estimates of the model parameters are determined from the 2.5 percentile and 97.5 percentile of the posterior distribution of the parameters. These intervals, called credible intervals, are the range within which we are 95 percent certain the true value of the parameter lies.

@&#ANALYSIS@&#

We use OBW results as the baseline against which we compare the other two approaches. First, we consider differences in rankings, focusing on the extent to which facilities identified as being in the top decile (top 11 ranked facilities) or top quintile (top 23 ranked facilities) using OBWs are also in the top decile or quintile using DEA and the BLVM. We then consider facilities ranked in the bottom decile and quintile. Second, we do a similar analysis, but now focusing on facilities identified as high or low performers using OBWs. High performers and low performers are those whose 95 percent interval estimates of performance are entirely above or below the population average. Finally, we consider the extent to which differences in approach used impact payment under a P4P program. For this analysis, we use a modification of the approach used by CMS, adapted for directness and simplicity. To illustrate the CMS approach, let M
                        =median score on a measure, A
                        =average score of facilities in the top decile and Hi
                        
                        =score for facility i. The percentage of the available dollar pool awarded to facility i is a linear function of (Hi
                        
                        −
                        M)/(A
                        −
                        M). In our application, letting B
                        =best score and W
                        =worst score, we calculate (Hi
                        
                        −
                        W)/(B
                        −
                        W). The percentage of the pool awarded to facility i is (Hi
                        
                        −
                        W)/(B
                        −
                        W) divided by Σi
                         [(Hi
                        
                        −
                        W)/(B
                        −
                        W)].

Finally, we conducted a sensitivity analysis, examining less restrictive constraints on the weights, specifically that on the low side weights could be 25 percent of OBWs and on the high side 5000 percent of OBWs (compared to 50 percent and 500 percent used in the main analyses).

@&#RESULTS@&#


                     Fig. 1
                      compares the ranks of facilities using OBWs to the ranks using DEA (Fig. 1a) and a BLVM (Fig. 1b). In each figure, facilities are ranked from highest performer (rank 1) to lowest using OBWs (horizontal axis). The straight line shows the trivial relationship that the highest ranked facility using OBWs has rank 1 (vertical axis), the second highest has rank 2, etc. The jagged line shows the corresponding rank using DEA (Fig. 1a) and the BLVM (Fig. 1b). Thus, in Fig. 1a, one can see that the top 6 ranked facilities using OBWs are also the top 6 ranked facilities using DEA. Of the first 11 ranked facilities using OBWs (the top decile), 7 of them are in the top 11 ranked facilities using DEA; of the first 23 ranked facilities using OBWs (the top quintile), 20 of them are ranked in the top quintile using DEA. Considering the BLVM, 2 of the top 6 ranked facilities are not among the top 6 using OBWs. However, 10 of the top 11 ranked facilities using the BLVM are ranked in the top 11 using OBWs. Six of the top 23 facilities using a BLVM were not in the top 23 OBW facilities. Of the bottom 11 OBW facilities, only 7 are among the bottom 11 DEA facilities; 8 are among the bottom 11 BLVM facilities. When considering the bottom quintile, of the 23 OBW facilities, only 17 are among the bottom 23 DEA ranked facilities and 19 among the bottom 23 ranked BLVM facilities.


                     Fig. 2
                      shows the 95 percent interval estimates (IEs) for the composite measure of performance using OBWs (Fig. 2a) and DEA (Fig. 2b) and the 95 percent credible intervals (CIs) using the BLVM (Fig. 2c). Using OBWs, there are 25 high performers (their 95 percent IE is below 1, the average of the 112 facilities) and 20 low performers (their 95 percent IE is above 1). Most noticeable from Fig. 2b is the very wide IEs associated with the DEA estimates compared to the other approaches. DEA identifies only 5 high performers (in this case, their 95 percent IE is above 0.48, the average DEA score across all facilities) and 12 low performers. The 5 high performers are in the group of high performers identified using the OBW model, and all 12 low performers are in the OBW group of low performers. The BLVM identifies 17 high performers, all of which are in the group of high performers identified by the OBW model; and, 25 low performers, 18 of which are in the group of 20 OBW low performers.


                     Fig. 3
                      shows the implications of each method of calculating the composite measure of performance on the proportion of the pool of dollars set aside for a P4P program that would go to each facility. The range of payments is the smallest for OBWs (from 0 percent to 1.64 percent) and largest for DEA (from 0 percent to 2.87 percent). The BLVM range is 0–1.99 percent. Most striking is the relatively large percentage of the pool that would go to the 4 DEA highest performers, on average 2.7 percent per facility. This percentage is 26 percent higher than would go to the 5th best DEA performer, 34 percent higher than the percentage awarded to the best BLVM performer and 63 percent higher than the percentage awarded to the best OBW performer. Of the 23 facilities in the top quintile using OBWs, 20 of them would receive higher payments if DEA were used, sometimes substantially higher. Of course, the flip side of this is that the mid-range and low performing facilities receive a lower percentage of the payment pool. The pattern is similar when the BLVM is used. Of the 23 OBW top facilities, 17 would receive higher payments using the BLVM, though the differences are not as large as they are using DEA.

As shown in column 2 (col 2) of Table 1, with the less restrictive constraints on the DEA weights, efficiency scores for over 95 percent of the facilities are higher than with the more restrictive constraints; however, for over 75 percent of the facilities, the 95 percent CIs are smaller (col 3). Columns 4–7 compare percentiles of the distribution of the difference in ranks between DEA using the 2 sets of weight restrictions and each of the other approaches. For example, comparing DEA with weight restrictions 50L500H (i.e., DEA weights must be between 50 percent and 500 percent of OBWs) to OBWs, 5 percent of the facilities are ranked 26 or more ranks lower (5th percentile=−25.9) using DEA than OBWs. The divergence between the DEA rankings and rankings when using OBWs is larger with the less restrictive constraints (cols 4 and 5); the divergence between DEA rankings and the BLVM model is fairly similar for both sets of constraints. DEA with the more restrictive constraints identifies 5 high-performing facilities, all of which are identified when using OBWs or the BLVM. With the less restrictive constraints, an additional 9 facilities are identified, 3 of which are not high performers when using OBWs and 5 of which are not high performers using the BLVM model. Thus, allowing more flexibility in determining DEA weights does not increase agreement with results using OBWs or the BLVM.

@&#DISCUSSION@&#

Compared to using a fixed set of opportunity-based weights, using a DEA method that allows facilities flexibility to choose weights that optimize their composite measure of performance within some set of restricted but reasonable constraints has little impact on the identification of high performers based on facility ranks. For example, of the 23 top quintile performers using OBWs, 20 of them are in the top quintile using DEA. Differences are larger if one's interest is in identifying the poorest performers. For example, only 17 of the 23 facilities in the lowest quintile using OBWs are in the lowest quintile using DEA. It is worth noting, however, that the DEA low performers were identified from a model that assigned weights in a way designed to identify high performers and provide the benefit-of-the-doubt in that direction. If one was really interested in identifying the lowest performers, the DEA model could be rerun with this as the objective (see, for example, Paradi, Asmild, & Simak, 2004). We have not done that here because of our focus on identifying and financially rewarding the high performers rather than financially penalizing the low performers. It is worth noting, however, that both penalty and reward systems exist in the different countries around the world that have been implementing pay-for-performance programs.

In an environment in which policy makers or top management work collaboratively with providers, giving providers the benefit-of-the-doubt and allowing them flexibility in selecting weights has obvious appeal. It buys goodwill in the same way that in a classroom situation allowing students some flexibility in the weights assigned to different course assignments and exams buys student goodwill. And, it appears possible to “buy” this goodwill without substantially impacting those facilities identified as high performers based on their ranks. Anecdotally, we have heard from colleagues, including one of the co-authors, using a flexibility approach (though one in which the weighting decisions are made at the start of the semester) had little impact on final grades. Lowering the power of incentives in this way is well known in regulatory economics as being appropriate in situations where heterogeneous quality is present (Laffont & Tirole, 1991).


                     Shwartz et al. (2009), using a convenience sample of 32 VA nursing homes and somewhat older but fundamentally similar risk adjustment models to ours in this manuscript, found that mostly the same facilities were identified as high performers based on their ranks when opportunity-based weights and DEA were used to calculate a composite measure of quality. They also considered a second benefit-of-the-doubt approach, using a separate linear programming model for each facility to find weights for the facility that summed to 1 and that optimized performance subject to constraints. High performers were largely the same when using DEA or the separate linear programming models. The DEA structure, which captures interdependencies among facilities, has some nice theoretical properties (as noted earlier, the weights can be conceived of as Nash equilibria in a game theoretic formulation). However, it lacks the transparency of separate linear programming models.

One of the big disadvantages of both OBWs and DEA is that sample size differences underlying particular point estimates do not reflect differences in reliability across providers. That is, an O/E ratio whether based on 20 residents or 200 is treated the same. In our situation, the number of long stay residents at a nursing home varies from 10 to over 200, and so there are large differences in the reliability of estimates of the O/E ratios at the different facilities. In this situation, shrinkage estimators using Bayesian thinking can be of value (Efron & Morris, 1977; Goldstein & Spiegelhalter, 1996; Christiansen and Morris, 1997; Normand, Glickman, & Gatsonis, 1997; Burgess, Christiansen, Michalak, & Morris, 2000; Landrum et al. 2000; O'Brien et al., 2007; Staiger et al., 2009). To illustrate in a simple context, rather than estimating the “true” O/E ratio as the observed O/E ratio, a shrinkage estimator estimates the “true” O/E ratio at a facility as the weighted average of the observed O/E ratio at the facility and the average O/E ratio in the larger group of facilities from which the particular facility is selected. As a result, the estimate of the “true” O/E ratio is “shrunken” toward the overall average. The amount of shrinkage is determined largely by the sample size from which the observed estimator is calculated. In our latent variable model, the estimate of the latent construct “quality” is shrunken toward the prior mean, which is zero. If point estimates are the basis for profiling or determination of payments in a P4P program, one might well prefer results from the BLVM. However, an alternative approach is to use a model to determine shrunken estimates of the O/E ratios and then use either OBW or DEA to calculate the composite measure from these shrunken estimates. Shwartz et al. (2013) illustrate this approach and show that a composite measure treated as a formative construct but calculated using shrunken rates is better able to predict next year's rates than a composite score calculated from this year's observed rates. An important aspect of profiling health care facilities is this notion of persistance in the face of uncertainty in the data generating process of patient arrivals for health care at the DMUs.

We believe a major contribution of this paper is the illustration of how MCRR can be used to determine interval estimates of DMU efficiency that reflect uncertainty in the input and output data obtained from each DMU (though in our particular application the output is fixed at 1). This uncertainty is different than the uncertainty about location of the efficient frontier given the input data at each facility. This latter uncertainty is estimated by the DEA-SW-bootstrap. The key feature underlying our approach is that the data about the underlying units of observation aggregated to produce statistics at the DMU level are known (i.e., there is a known hierarchical data structure), and the underlying units are heterogeneous. In our situation, data at the lower level are the patients arriving for health care services at a particular facility. Uncertainty arises at this level because the patients at a particular facility at any point in time are assumed to be a realization of a random sample from a population of “potential” patients, i.e., patients who would use the facility if the need arose. This “random sampling” is our data generating process, though it is one less grounded in a basic theoretical data generating process construct than the DEA-SW-bootstrap. Because these potential patients are heterogeneous and because input data are calculated from these patients, there is variation in inputs from MC resample to MC resample. As a result, different DMUs may comprise the frontier in each DEA run of the MC resampled data.

It is important to note that although at each facility patients are assumed to be a random sample drawn from a “potential population” of patients that would use that facility if the need arose, this does not imply that changes in performance will not result in changes in either the number or type of patients at that facility. As a result of public profiling, the “potential population” may change for each facility, which will be reflected in differences between the particular patients in the facility pre-profiling and post-profiling.

To implement our MCRR approach, you need a situation in which there are data on underlying units that sensibly can be aggregated to compute statistics at the DMU level on which an aggregate performance measure is desired. In applications in the health services area you often do have information about personnel and patients that are not homogeneous and aggregated to the DMU level. There are other situations where DEA inputs and outputs are obtained from hierarchical structures. For example, in measuring efficiency of highway maintenance patrols (Cook, Roll, & Kazakov, 1990), one output, an area served factor, is calculated as a function of the two-lane equivalent of road section, length of road section, and shoulder width of road section, and one input, climatic factor, is calculated from sub-factors, snowfall, major temperature cycle, and minor temperature cycle, based upon data from weather stations. One could take MC resamples from the underlying distribution of the weather data that is unique to each location. Some other existing DEA studies look at DMUs with hierarchical structures, including power plants (see, e.g., Cook & Green, 2003) and bank branch offices (Cook, Hababou, & Tuenter, 2000). For example, bank or branch transactions usually include various types of depositor transactions such as opening a new account, processing a withdrawal, processing Visa cash advance, processing business deposits, and others. One also may be able to apply our proposed approach to universities, hospitals, financial services, and many other services where each DMU is gathering data from its sub-divisions, teams or individual clients. We leave such applications to future research.

As shown in Fig. 2b, the interval estimates of the DEA efficiencies are large (Fig. 2b). Since MCRR varies the sample of patients at the facility, this emphasizes that, unlike assembly line production, each patient is very different and hence there can be substantial variation across the MC samples. From Fig. 2b, it is apparent that one can be quite confident that one of the facilities, which has an average efficiency score 0.99, really is very efficient (the lower end of the interval estimate is 0.87, which would still place the facility among the top 4). However, the other 3 facilities with average efficiency scores above 0.90 (0.93, 0.92 and 0.92) have lower interval estimate values of 0.61, 0.60, and 0.56 (which would place them around the 20th ranked facility). A number of facilities with average efficiency scores in the 0.7 to 0.8 range, and some with efficiency scores much lower, have interval estimates with an upper value close to 1. Also, because of the large range of the intervals, there are large numbers of facilities for which it is impossible to determine if their efficiency scores really differ.

Because of these larger interval estimates, DEA finds far fewer outliers than either of the other approaches, 17 compared to 45 when using OBWs and 42 when using the BLVM. At an intuitive level, the DEA approach is essentially “saying” that because every facility is given flexibility to set its own weights, it then becomes much harder to distinguish high and low facilities. The same MC samples are used to generate the interval estimates for the OBW model, but these intervals are much narrower (Fig. 2a). We compared the range of the DEA and OBW interval estimate divided by the point estimates (to take account of the fact that the point estimates are on different scales). On average, the OBW interval estimates were 66 percent of the DEA interval estimatess, suggesting that the added uncertainty resulting from weight flexibility provided by DEA increases the DEA interval estimate about 50 percent above that due just to patient heterogeneity.

In the context of a P4P program (where results are based on point estimates), the DEA results are particularly interesting. Again, at an intuitive level, the approach is essentially “saying” that if every facility is given flexibility, the ones that are still able to do much better than the other facilities (and become the benchmark for the other facilities) really should be highly rewarded. This is reflected in the much higher percentage of the pool of resources allocated to these facilities compared to other high-ranked DEA facilities or high ranked facilities using the other approaches.

One of our goals in this paper is to highlight that there really are different philosophies associated with different approaches for calculating composite measures in the same sense that, although there is standard approach for grading (a fixed set of weights), there are very reasonable and perhaps preferable alternatives. Though we do believe that shrunken estimators are an improvement over using raw rates to calculate performance measures, there are many different ways to calculate shrunken rates and disagreement over the relevant average to which individual provider rates should be shrunken (Ash et al., 2012). We think flexibility-based approaches have some merit and are worthy of trial implementation. However, the idea of providing flexibility is a rather radical change from the top down way in which P4P programs are currently designed and, in our experience, can engender strong disagreement.

@&#ACKNOWLEDGMENT@&#

The authors are grateful to the comments and suggestions made by three anonymous reviewers.

Recall that our particular case involves a DEA model with only inputs. As a result, the CRS DEA model is equivalent to the VRS DEA model. Also, in what follows, it is worth noting that for nursing homes where inputs are quality indicators, since each patient may or may not be at risk for indicator i in each nursing home or DMU
                        j
                     , resampling is done within quality indicators among at-risk patients.

Let Ωij
                      represent the observed patient level source data (i.e., the data at the lower level of the hierarchy) for obtaining xij
                      (inputs) in Model (2). In other words, data in lower levels of Ωij
                      are used to construct each pair ofxij
                      and 1 (output). For each i and j, let

                        
                           (A1)
                           
                              
                                 
                                    x
                                    
                                       i
                                       j
                                    
                                 
                                 =
                                 f
                                 
                                    [
                                    (
                                    
                                       ω
                                       
                                          i
                                          j
                                       
                                       1
                                    
                                    ,
                                    …
                                    ,
                                    
                                       ω
                                       
                                          i
                                          j
                                       
                                       
                                          K
                                          j
                                          i
                                       
                                    
                                    )
                                    ]
                                 
                                 ,
                                 
                                    (
                                    
                                       ω
                                       
                                          i
                                          j
                                       
                                       1
                                    
                                    ,
                                    …
                                    ,
                                    
                                       ω
                                       
                                          i
                                          j
                                       
                                       
                                          K
                                          j
                                          i
                                       
                                    
                                    )
                                 
                                 ∈
                                 
                                    Ω
                                    
                                       i
                                       j
                                    
                                 
                              
                           
                        
                     where 
                        
                           K
                           j
                           i
                        
                      represents the sample size for observed data at lower levels, i.e., patients at risk for each quality indicator i in each DMU
                        j. For each DMU
                        j
                     , i and 
                        
                           K
                           j
                           i
                        
                      can be different, indicating different sample sizes for each quality indicator in each DMU. In what follows, 
                        
                           h
                           j
                           i
                        
                      (=1, 2, …, 
                        
                           K
                           j
                           i
                        
                     ) represents patients, j represents facilities and i represents quality indicators.

The above indicates that xij
                      are calculated based upon the data in Ωij
                     . 
                        f
                      () can be summed, an average, or any other possible functional forms of (
                        
                           ω
                           
                              i
                              j
                           
                           1
                        
                     , …, 
                        
                           ω
                           
                              i
                              j
                           
                           
                              K
                              j
                              i
                           
                        
                     ). In our situation, the observed data consist of 
                        
                           ω
                           
                              i
                              j
                           
                           
                              h
                              j
                              i
                           
                        
                     (O) and 
                        
                           ω
                           
                              i
                              j
                           
                           
                              h
                              j
                              i
                           
                        
                     (E) (
                        
                           h
                           j
                           i
                        
                     =1, …, 
                        
                           K
                           j
                           i
                        
                     ) representing the observed value and the expected (or predicted) value for each patient 
                        
                           h
                           j
                           i
                        
                     
                     . Then, xij
                      is the ratio of total observed quality indicator adverse events over total expected quality indicator adverse events, namely, xij
                     
                     =
                     
                        
                           
                              
                                 ∑
                                 
                                    h
                                    =
                                    1
                                 
                                 
                                    K
                                    j
                                    i
                                 
                              
                              
                                 
                                    ω
                                    
                                       i
                                       j
                                    
                                    
                                       h
                                       j
                                       i
                                    
                                 
                                 
                                    (
                                    O
                                    )
                                 
                              
                           
                           
                              
                                 ∑
                                 
                                    h
                                    =
                                    1
                                 
                                 
                                    K
                                    j
                                    i
                                 
                              
                              
                                 
                                    ω
                                    
                                       i
                                       j
                                    
                                    
                                       h
                                       j
                                       i
                                    
                                 
                                 
                                    (
                                    E
                                    )
                                 
                              
                           
                        
                     .

Here, viewing xij
                      as estimates of the true values of inputs for DMU
                        j
                     , it is then possible to develop a MCRR algorithm for each DMU. To do that, we first describe in more detail the probability mechanism behind the MCRR algorithm, focusing on a hierarchy of observed source information. Let (
                        
                           ω
                           
                              i
                              j
                           
                           1
                        
                     , …, 
                        
                           ω
                           
                              i
                              j
                           
                           
                              K
                              j
                              i
                           
                        
                     ) (or 
                        
                           ω
                           
                              i
                              j
                           
                           
                              h
                              j
                              i
                           
                        
                     (O) and 
                        
                           ω
                           
                              i
                              j
                           
                           
                              h
                              j
                              i
                           
                        
                     (E) in the above example) be a random sample drawn from an unknown population 
                        
                           F
                           
                              
                                 
                                 o
                              
                           
                           
                              i
                              j
                           
                        
                      ((
                        
                           ω
                           
                              i
                              j
                           
                           1
                        
                     , …, 
                        
                           ω
                           
                              i
                              j
                           
                           
                              K
                              j
                              i
                           
                        
                     ) 
                        
                           ∼
                           
                              i
                              i
                              d
                           
                        
                     
                     
                        
                           F
                           
                              
                                 
                                 o
                              
                           
                           
                              i
                              j
                           
                        
                     ), and xij
                     
                     =
                     
                        
                           
                              
                                 ∑
                                 
                                    h
                                    =
                                    1
                                 
                                 
                                    K
                                    j
                                    i
                                 
                              
                              
                                 
                                    ω
                                    
                                       i
                                       j
                                    
                                    
                                       h
                                       j
                                       i
                                    
                                 
                                 
                                    (
                                    O
                                    )
                                 
                              
                           
                           
                              
                                 ∑
                                 
                                    h
                                    =
                                    1
                                 
                                 
                                    K
                                    j
                                    i
                                 
                              
                              
                                 
                                    ω
                                    
                                       i
                                       j
                                    
                                    
                                       h
                                       j
                                       i
                                    
                                 
                                 
                                    (
                                    E
                                    )
                                 
                              
                           
                        
                      be the estimator of the inputs (parameter). We denote 
                        
                           F
                           1
                           
                              i
                              j
                           
                        
                      as the empirical distribution of (
                        
                           ω
                           
                              i
                              j
                           
                           1
                        
                     , …, 
                        
                           ω
                           
                              i
                              j
                           
                           
                              K
                              j
                              i
                           
                        
                     ), which is constructed by allocating 1/
                        
                           K
                           j
                           i
                        
                      probability mass to each 
                        
                           ω
                           
                              i
                              j
                           
                           
                              h
                              j
                              i
                           
                        
                      in the random sample. Now, let (
                        
                           
                              ω
                              ˜
                           
                           
                              i
                              j
                           
                           1
                        
                     , …, 
                        
                           
                              ω
                              ˜
                           
                           
                              i
                              j
                           
                           
                              K
                              j
                              i
                           
                        
                     ) represent a random sample from 
                        
                           F
                           1
                           
                              i
                              j
                           
                        
                      ((
                        
                           
                              ω
                              ˜
                           
                           
                              i
                              j
                           
                           1
                        
                     , …, 
                        
                           
                              ω
                              ˜
                           
                           
                              i
                              j
                           
                           
                              K
                              j
                              i
                           
                        
                     )
                        
                           ∼
                           
                              i
                              i
                              d
                           
                        
                     
                     
                        
                           F
                           1
                           
                              i
                              j
                           
                        
                     ). Using the sample drawn from 
                        
                           F
                           1
                           
                              i
                              j
                           
                        
                     , we can construct the MCRR values of 
                        
                           
                              x
                              ^
                           
                           
                              i
                              j
                           
                        
                     . Namely, 
                        
                           
                              x
                              ^
                           
                           
                              i
                              j
                           
                        
                      are estimators for the input values based upon the obtained samples (
                        
                           
                              ω
                              ˜
                           
                           
                              i
                              j
                           
                           1
                        
                     , …, 
                        
                           
                              ω
                              ˜
                           
                           
                              i
                              j
                           
                           
                              K
                              j
                              i
                           
                        
                     ).

The randomness of our model arises from the uncertainty of input values in all DMUs, which in turn is dependent on the particular risks and eligibility for those risks for each patient residing in the DMU. In other words, our DEA efficiency index (or score) is a function of stochastic inputs. Therefore, the DEA efficiency index can be characterized by a probability model. Chen and Zhu (2011) construct a stochastic DEA efficiency index that treats the multipliers (weights) as random variables. As such, our approach is different from existing DEA bootstrapping methods.

Applying the DEA model to 
                        
                           
                              x
                              ^
                           
                           
                              i
                              j
                           
                        
                     , we obtain a plug-in estimator of the DEA efficiency index 
                        
                           
                              E
                              ^
                           
                           j
                        
                      (
                        
                           
                              x
                              ^
                           
                           
                              i
                              j
                           
                        
                     ) for each DMU
                        j
                     . We use the realized values of (
                        
                           ω
                           
                              i
                              j
                           
                           1
                        
                     , …, 
                        
                           ω
                           
                              i
                              j
                           
                           
                              K
                              j
                              i
                           
                        
                     ) to construct the empirical distribution 
                        
                           F
                           1
                           
                              i
                              j
                           
                        
                     . Given 
                        
                           F
                           1
                           
                              i
                              j
                           
                        
                     , we can generate bootstrap samples (
                        
                           
                              ω
                              ˜
                           
                           
                              i
                              j
                           
                           1
                        
                     , …, 
                        
                           
                              ω
                              ˜
                           
                           
                              i
                              j
                           
                           
                              K
                              j
                              i
                           
                        
                     ) 
                        
                           ∼
                           
                              i
                              i
                              d
                           
                        
                      
                        
                           F
                           1
                           
                              i
                              j
                           
                        
                      which can be used to calculate the bootstrap input estimates 
                        
                           
                              x
                              ^
                           
                           
                              i
                              j
                           
                        
                     , and further the MCRR efficiency estimate 
                        
                           
                              E
                              ^
                           
                           j
                        
                     (
                        
                           
                              x
                              ^
                           
                           
                              i
                              j
                           
                        
                     ). Repeating this procedure, we obtain the MCRR distribution of efficiency scores 
                        
                           
                              E
                              ^
                           
                           j
                        
                      for all DMUs.

The following summarizes our algorithm:

                        
                           1.
                           For b
                              =1, …, B do

Sample with replacement from Ωij
                               to obtain samples of (
                                 
                                    
                                       ω
                                       ˜
                                    
                                    
                                       i
                                       j
                                    
                                    1
                                 
                              , …, 
                                 
                                    
                                       ω
                                       ˜
                                    
                                    
                                       i
                                       j
                                    
                                    
                                       K
                                       j
                                       i
                                    
                                 
                              ).

Calculate 
                                 
                                    
                                       x
                                       ^
                                    
                                    
                                       i
                                       j
                                    
                                    b
                                 
                               based upon the obtained samples (
                                 
                                    
                                       ω
                                       ˜
                                    
                                    
                                       i
                                       j
                                    
                                    1
                                 
                              , …, 
                                 
                                    
                                       ω
                                       ˜
                                    
                                    
                                       i
                                       j
                                    
                                    
                                       K
                                       j
                                       i
                                    
                                 
                              ) using (A.1), as estimators for the input values.

Compute DEA model (2) for each DMU
                                 j
                               with the above calculated input values, namely
                                 
                                    
                                       
                                          
                                             
                                                
                                                   
                                                      
                                                         E
                                                         ^
                                                      
                                                      o
                                                      b
                                                   
                                                   =
                                                   min
                                                   
                                                      θ
                                                      o
                                                      b
                                                   
                                                
                                             
                                          
                                          
                                             
                                                
                                                   s
                                                   .
                                                   t
                                                   .
                                                   
                                                      ∑
                                                      
                                                         j
                                                         =
                                                         1
                                                      
                                                      n
                                                   
                                                   
                                                      
                                                         λ
                                                         j
                                                      
                                                      
                                                         
                                                            x
                                                            ^
                                                         
                                                         
                                                            i
                                                            j
                                                         
                                                         b
                                                      
                                                   
                                                   ≤
                                                   
                                                      θ
                                                      o
                                                      b
                                                   
                                                   
                                                      
                                                         x
                                                         ^
                                                      
                                                      
                                                         i
                                                         o
                                                      
                                                      b
                                                   
                                                   ,
                                                   
                                                   i
                                                   =
                                                   1
                                                   ,
                                                   2
                                                   ,
                                                   .
                                                   .
                                                   .
                                                   ,
                                                   m
                                                
                                             
                                          
                                          
                                             
                                                
                                                   
                                                      ∑
                                                      
                                                         j
                                                         =
                                                         1
                                                      
                                                      n
                                                   
                                                   
                                                      λ
                                                      j
                                                   
                                                   =
                                                   1
                                                
                                             
                                          
                                          
                                             
                                                
                                                   
                                                      λ
                                                      j
                                                   
                                                   ≥
                                                   0
                                                   ,
                                                   j
                                                   =
                                                   1
                                                   ,
                                                   2
                                                   ,
                                                   .
                                                   .
                                                   .
                                                   ,
                                                   n
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           

Obtain a set of efficiency scores 
                                 
                                    
                                       E
                                       ^
                                    
                                    j
                                    b
                                 
                              
                           

End for.

Once the above procedure finishes, we can obtain DEA efficiency score interval estimates for all DMUs. We can construct a bias-corrected estimator for the efficiency index (Chen & Zhu, 2011). However, it is well known that these types of bias corrections introduce additional noise (Efron & Tibshirani, 1993).

In our particular case, we only consider inputs associated with the units that are resampled. However, in the more general case in which inputs and/or outputs are associated with the lower level data, we are able to randomly generate pairs of inputs and outputs data for all DMUs in model (1).

In Table A.1
                     , we show the Simar and Wilson interval estimates (IEs) and our data-based IEs for the 20 facilities with the highest efficiencies. For each approach, 1000 MCRR replications were run with no constraints on the weights. For the 92 DMUs not shown in Table A.1, the percentiles of the distribution of the ratio of the width of the DUIEs to the SW IEs are as follows: min – 0.67, 5th percentile – 1.00, 25th percentile – 2.84, 50th percentile – 4.65, 75th percentile – 7.56, 90th percentile – 14.43 and max – 19.13.

Candidate variables for risk adjustment were primarily from the Minimum Data Set 2.0 (MDS). However, physical conditions are unreliably coded in MDS data. Hence, we used the VA National Patient Care Database (NPCD) to identify from inpatient stays and outpatient visits, conditions present in the year prior to an index assessment. Death was determined from the VA Vital Status File.

Outcomes were defined as follows: (1) pressure ulcer development – a new stage two pressure ulcer on a follow-up assessment; (2) functional decline – worsening in late-loss ADL (activities of daily living) self-performance (defined using the definition on the CMS Nursing Home Compare website: http://www.cms.hhs.gov/NursingHomeQualityInits/Downloads/NHQIQMUUsersManual.pdf); (3) behavioral decline – decline on follow-up assessment of a scale consisting of being verbally abusive (MDS field E4Ba), physically abusive (E4Ca) and socially disruptive (E4Da). The scale had to be less than 9 at an index assessment.

Each routine MDS assessment was a candidate for an index assessment. To identify a follow-up assessment, we looked for the routine assessment closest to 90 days after an index assessment, but within 45 days to 135 days of the index assessment. If there was a hospitalization of 7 or more days between an index and follow-up assessment, the index assessment was eliminated.

Data used to develop the risk-adjustment models were from fiscal year 2003 to 2007. We split the data into a development and validation data set by randomly splitting eligible patients each year into two groups within each facility.

Clinical judgment about the appropriateness of variables for risk-adjustment was initially used to identify potential candidate variables. Extensive bi-variate analyses were then done of these variables and their transformations (if continuous variables) to identify those related to each of the outcomes (using a significance level of 0.10). Different combinations of variables and scales were considered. Final models were determined using stepwise logistic regression and a significance level of 0.05.

The final models are shown in the Table A.2
                     , along with relevant MDS fields. The Cognitive Performance Scale (Morris et al. (1994). MDS cognitive performance scale, Journal of Gerontology, 94(4), M174–M182) considers neurological diagnosis, short-term memory, cognitive skills for daily decision-making, extent understood by others, and ADL (activities of daily living) self-performance in eating. Depression consists of negative statements, persistent anger, unrealistic fears, repetitive health complaints, repetitive anxious complaints, sad/pained/worried facial expressions, crying/tearfulness. 3 ADLs refers to transfer, eating, toileting; 4 ADLs adds bed mobility.

Characteristics of the models include the following:

                        
                           
                              
                              
                              
                              
                              
                              
                                 
                                    Models
                                    Pressure ulcers
                                    Functional decline
                                    Behavioral decline
                                    6-month mortality
                                 
                                 
                                    # record
                                    159,309
                                    149,865
                                    172,158
                                    81,340
                                 
                                 
                                    # patients
                                    39,684
                                    39,408
                                    42,766
                                    38,017
                                 
                                 
                                    c statistic*
                                    
                                    0.754
                                    0.671
                                    0.694
                                    0.754
                                 
                                 
                                    Prevalence
                                    3.14 percent
                                    12.28 percent
                                    4.31 percent
                                    16.10 percent
                                 
                                 
                                    
                                       *c statistic in the development and validation sample were very similar.
                                 
                                 
                                    Here we report c statistic and prevalence for the full sample
                                 
                              
                           
                        
                     
                  

@&#REFERENCES@&#

