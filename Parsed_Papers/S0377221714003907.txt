@&#MAIN-TITLE@&#Survivable network design with shared-protection routing

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           We solve the survivable network design problem with shared-protection routing with and without capacity reuse.


                        
                        
                           
                           Solution of a global rerouting problem solution provides a very tight lower bound to the problem.


                        
                        
                           
                           In many cases in our computational tests, one or two additional links suffice to provide shared-protection routing.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Shared protection survivable network design

End-to-end restoration schemes

Column generation

Large scale optimization

@&#ABSTRACT@&#


               
               
                  In this paper we study the problem of designing a survivable telecommunication network with shared-protection routing. We develop a heuristic algorithm to solve this problem. Recent results in the area of global re-routing have been used to obtain very tight lower bounds for the problem. Our results indicate that in a majority of problem instances, the average gap between the heuristic solutions and the lower bounds is within 5%. Computational experience is reported on randomly generated problem instances with up to 35 nodes, 80 edges and 595 demand pairs and also on the instances available in SNDlib database.
               
            

@&#INTRODUCTION@&#

We study the problem of designing a survivable telecommunication network with shared-protection routing. The standard network design problem (NDP) is to find the minimum cost installation of capacities on the edges of a graph that will permit a feasible multi-commodity flow of a given set of traffic demands. In the survivable network design problem, the capacities must be installed so as to permit a feasible flow of all traffic under any single edge failure (hereafter referred to as a fault). This problem has several different versions depending on the permissible re-routing (restoration) schemes. The problem is of considerable applied importance to telecommunications industry and has been extensively studied in its different versions during the last two decades. However, very limited success has so far been reported in finding optimal or demonstrably close to optimal solutions of realistic size instances. Our key contribution in this work is towards addressing this gap.

There are two basic approaches to achieve survivability in telecom networks. On one hand, there are the “route-around-the-failure” approaches, in which the affected traffic is re-routed around the failed link, without disturbing its end-to-end path. On the other hand, we have the “end-to-end-restoration” approach, in which a completely different end-to-end path is used for the traffic affected by the fault. We are interested in the second approach. Within this approach too, several different restoration schemes are possible. The simplest but most expensive option is to provide, for each demand, a working path that is used when there is no fault (referred to as no-fault routing), and a dedicated edge-disjoint protection path, which is used in the event of a fault that disrupts the working path. This scheme is very expensive because separate restoration capacity is dedicated to each demand which remains completely unused unless the demand in question is disrupted.

At the other end of the spectrum, the most flexible routing scheme is one in which any arbitrary path may be used for any demand under any fault. All we require is that there should exist a feasible routing of all traffic under any fault, without any restrictions on the routing at all. This routing scheme has been called global re-routing by Atamturk and Rajan (2008). Accordingly, we call this model SND-G. While such a model is appropriate for packet-switched IP networks, there are two serious implications of this scheme which make it unsuitable for circuit-switched networks. First, it implies that for a given demand, a potentially different path may be used under each fault. This is not practical to implement because it is difficult to detect and convey the information about the exact fault that has occurred to all the network nodes in real time. Second, and perhaps a more serious, implication is that under a fault, even those demands, which are not affected by the fault, may be required to be re-routed. This second implication is considered highly unacceptable from a real-world perspective. Despite these practical limitations, this model is theoretically important because the solution set of this model contains the solution sets of all other survivability models. Therefore, the optimal solution of this model provides a valid lower bound for all other survivability models. Recently, Agarwal (2013) has derived several classes of 3- and 4-partition based facets and valid inequalities for this model, which result in very tight lower bounds, permitting optimal solutions for fairly large instances with 35 nodes, 80 edges, and fully dense traffic matrices.

Now we turn our attention to a routing scheme called shared-protection routing. Our results demonstrate that this scheme is only very slightly more expensive than global re-routing, but overcomes the practical difficulties associated with it. In this scheme, each traffic demand is assigned a working path, and an edge-disjoint protection path. The same protection path is used in the event of the working path being disrupted, irrespective of the specific fault that caused the disruption. Moreover, the network capacity used for the protection path is not dedicated, but is shared among various demands to the extent possible. Note that such sharing of protection path capacity is possible for two or more demands if their working paths are edge-disjoint, because these demands do not require the protection capacity simultaneously under the single edge failure assumption. We assume that the traffic demands are splittable, i.e. the total demand of a commodity is allowed to be split and routed along multiple paths. In the event of a fault, only that part of the split demand which is affected by the fault is re-routed. We address the single facility version of the problem. This means that capacity installed on each edge of the network is an integer multiple of a single base capacity (also referred to as the module capacity in the literature). The capacity as well as traffic demands are assumed to be undirected.

The shared-protection routing scheme can be implemented in two different ways, leading to two sub-cases, namely with and without working capacity reuse. In the former case, the working-path capacity that is freed up due to disruption of demands affected by a fault, can be used to route other demands which are also affected by that fault. For example, consider two demands, say D1 and D2, with working paths 1-2-3-4 and 5-2-3-6, respectively. If the edge 2-3 fails, both demands will be disrupted, and one unit of capacity each on the edges 1-2, 3-4, 5-2 and 3-6 will be freed up. Suppose that the protection path of D2 is 5-1-2-6. Then, under working-capacity reuse model, this demand can use the capacity freed up by the D1 on edge 1-2, and no additional capacity for restoration is required on this edge. On the other hand, if the reuse of working capacity is not permitted, an additional unit of spare capacity is needed on edge 1-2, because the capacity freed up by demand D1 cannot be used by D2. We call the two models with and without working capacity reuse SND-R and SND-NR, respectively. In this paper, we address the problem of designing survivable networks under both these models.

Our approach is as follows. An optimal solution of model SND-G is first obtained. A column-generation-based heuristic approach is used to find a feasible routing of all demands under SND-R (or SND-NR) model within this solution. If the heuristic succeeds in finding a feasible routing, then we have found the optimal solution for the SND-R/NR model. Otherwise, additional capacity is installed on one or more edges to make this solution feasible for model SND-R/NR. It is clear from the definition of these models that SND-NR will require more capacity than SND-R, which in turn will require more capacity than SND-G. Our computational results on randomly generated 35-node instances indicate that in a significant majority of cases, model SND-R requires no additional capacity over SND-G, while SND-NR requires about 3–4% additional capacity, on the average. On publicly available SNDlib (sndlib.zib.de) problem instances, we are able to achieve an average gap of less than 1% for model SND-R and slightly more than 2% for model SND-NR.

We note that the model studied by us is suitable for the lower (transmission) layers of the telecommunication networks, where a fault such as an optical fiber cut leads to a complete failure of a single link, leading to disruption of all traffic using that link. For the upper layers of the network, as in IP networks, a fault at the lower level may cause partial failure of multiple links, as a single lower level facility may be carrying several upper level facilities among different node-pairs. While it may be possible to extend the scope of our model to this latter case, we restrict ourselves to the lower layer in the present work. The model can also be easily extended to the case where some links are 100% reliable, by excluding such links from the set of faults, and permitting such links to be used on both the working as well as the protection paths of a demand, i.e. path-pair used by a demand is not required to be disjoint with respect to such links. Żotkiewicz, Ben-Ameur, and Pióro (2010) present an algorithm that can be used for column generation under such circumstances.

The rest of this paper is organized as follows. In Section 2 we describe our notation, and provide MIP formulations of the three models under consideration. In Section 3, we review the past work on this and related network design problems. We also briefly review recent advances in the design of SND-G which motivated the present work. Sections 4 and 5 provide the details of the overall approach. The column-generation subproblem and implementation issues are discussed. We provide computational results on randomly generated problems with 35 nodes, 80 edges and 595 demand pairs, and problems in SNDlib in Section 6. Some concluding remarks are made in Section 7.

In this section we provide the MIP formulations of the three models mentioned earlier, and make a few remarks about the differences among them, and some issues pertaining to the difficulty of solving them.

First, we list the notation and the MIP formulation for the model SND-G. This formulation is a flow-based formulation based on aggregate commodity definitions, where all traffic originating at a node is treated as a single commodity. We are given an undirected bi-connected graph 
                        
                           G
                           =
                           (
                           V
                           ,
                           E
                           )
                        
                      with 
                        
                           n
                           =
                           |
                           V
                           |
                        
                      and 
                        
                           m
                           =
                           |
                           E
                           |
                        
                     , called the supply graph, and K, a set of commodities. For each 
                        
                           k
                           ∈
                           K
                        
                     , let 
                        
                           
                              
                                 q
                              
                              
                                 i
                              
                              
                                 k
                              
                           
                        
                      be the demand of commodity k at node i. Note that for SND-G we define all traffic with a common source node as a single commodity, with 
                        
                           
                              
                                 q
                              
                              
                                 i
                              
                              
                                 k
                              
                           
                        
                      being negative for the source node, and non-negative for all other nodes. This, so-called aggregate commodity definition, leads to a substantial reduction in the number of flow variables compared to defining each origin–destination pair as a separate commodity. We note that it is not possible to use this aggregate commodity definition for models SND-R and SND-NR, where the traffic between each origin–destination pair must be treated as a separate commodity.

Let 
                        
                           
                              
                                 c
                              
                              
                                 e
                              
                           
                        
                      denote the cost of installing one module (facility) of C units of capacity on 
                        
                           e
                           ∈
                           E
                        
                     . Let 
                        
                           
                              
                                 y
                              
                              
                                 e
                              
                           
                        
                      be the number of facilities installed on edge 
                        
                           e
                           ∈
                           E
                        
                     , and 
                        
                           
                              
                                 g
                              
                              
                                 ij
                              
                              
                                 kt
                              
                           
                        
                      the (directed) flow of commodity k on edge 
                        
                           e
                           =
                           (
                           i
                           ,
                           j
                           )
                        
                      under fault t, i.e. when edge 
                        
                           t
                           ∈
                           E
                        
                      has failed. Note that for ease of notation, each edge 
                        
                           (
                           i
                           ,
                           j
                           )
                           ∈
                           E
                        
                      is mapped to a numeral 
                        
                           t
                           ∈
                           {
                           1
                           ,
                           2
                           ,
                           …
                           ,
                           m
                           }
                        
                     , which denotes the failure of edge 
                        
                           (
                           i
                           ,
                           j
                           )
                        
                     . The problem SND-G can be formulated as the following mixed integer program.
                        
                           (1)
                           
                              
                                 
                                    
                                       
                                          SND
                                          -
                                          G
                                          
                                          Minimize
                                          
                                       
                                    
                                    
                                       
                                          
                                             
                                                
                                                   ∑
                                                
                                                
                                                   e
                                                   ∈
                                                   E
                                                
                                             
                                          
                                          
                                             
                                                c
                                             
                                             
                                                e
                                             
                                          
                                          
                                             
                                                y
                                             
                                             
                                                e
                                             
                                          
                                       
                                    
                                 
                                 
                                    
                                       
                                          s
                                          .
                                          t
                                          .
                                          
                                       
                                    
                                    
                                       
                                          
                                             
                                                
                                                   ∑
                                                
                                                
                                                   i
                                                   ∈
                                                   δ
                                                   (
                                                   j
                                                   )
                                                
                                             
                                          
                                          
                                             
                                                g
                                             
                                             
                                                ij
                                             
                                             
                                                kt
                                             
                                          
                                          -
                                          
                                             
                                                
                                                   ∑
                                                
                                                
                                                   i
                                                   ∈
                                                   δ
                                                   (
                                                   j
                                                   )
                                                
                                             
                                          
                                          
                                             
                                                g
                                             
                                             
                                                ji
                                             
                                             
                                                kt
                                             
                                          
                                          =
                                          
                                             
                                                q
                                             
                                             
                                                j
                                             
                                             
                                                k
                                             
                                          
                                          
                                          ∀
                                          j
                                          ∈
                                          V
                                          ,
                                          ∀
                                          k
                                          ∈
                                          K
                                          ,
                                          ∀
                                          t
                                          ∈
                                          E
                                          ,
                                          t
                                          
                                          ≠
                                          
                                          (
                                          i
                                          ,
                                          j
                                          )
                                       
                                    
                                 
                              
                           
                        
                     
                     
                        
                           (2)
                           
                              
                                 
                                    
                                       ∑
                                    
                                    
                                       k
                                       ∈
                                       K
                                    
                                 
                              
                              (
                              
                                 
                                    g
                                 
                                 
                                    ij
                                 
                                 
                                    kt
                                 
                              
                              +
                              
                                 
                                    g
                                 
                                 
                                    ji
                                 
                                 
                                    kt
                                 
                              
                              )
                              ⩽
                              
                                 
                                    Cy
                                 
                                 
                                    e
                                 
                              
                              
                              ∀
                              e
                              =
                              (
                              i
                              ,
                              j
                              )
                              ∈
                              E
                              ,
                              ∀
                              t
                              ∈
                              E
                              ,
                              t
                              
                              ≠
                              
                              e
                           
                        
                     
                     
                        
                           
                              
                                 
                                    
                                    
                                       
                                          
                                             
                                                g
                                             
                                             
                                                ij
                                             
                                             
                                                kt
                                             
                                          
                                          =
                                          
                                             
                                                g
                                             
                                             
                                                ji
                                             
                                             
                                                kt
                                             
                                          
                                          =
                                          0
                                          
                                          ∀
                                          k
                                          ∈
                                          K
                                          ,
                                          ∀
                                          t
                                          =
                                          (
                                          i
                                          ,
                                          j
                                          )
                                          ∈
                                          E
                                       
                                    
                                 
                                 
                                    
                                    
                                       
                                          
                                             
                                                g
                                             
                                             
                                                ij
                                             
                                             
                                                kt
                                             
                                          
                                          ⩾
                                          0
                                          
                                          ∀
                                          i
                                          ∈
                                          V
                                          ,
                                          ∀
                                          j
                                          ∈
                                          V
                                          ,
                                          ∀
                                          k
                                          ∈
                                          K
                                          ,
                                          ∀
                                          t
                                          ∈
                                          E
                                       
                                    
                                 
                                 
                                    
                                    
                                       
                                          
                                             
                                                y
                                             
                                             
                                                e
                                             
                                          
                                          ∈
                                          
                                             
                                                Z
                                             
                                             
                                                +
                                             
                                          
                                          
                                          
                                          ∀
                                          e
                                          ∈
                                          E
                                       
                                    
                                 
                              
                           
                        
                     
                  

Constraints (1) are the flow conservation constraints at each node for each commodity under each fault, and (2) are capacity constraints. Here 
                        
                           δ
                           (
                           j
                           )
                        
                      denotes the set of nodes adjacent to node j in G. The number of constraints in set (1) is 
                        
                           O
                           (
                           
                              
                                 n
                              
                              
                                 2
                              
                           
                           m
                           )
                        
                      and that in (2) is 
                        
                           O
                           (
                           
                              
                                 m
                              
                              
                                 2
                              
                           
                           )
                        
                     . The problem has m capacity variables, and 
                        
                           2
                           (
                           n
                           -
                           1
                           )
                           
                              
                                 m
                              
                              
                                 2
                              
                           
                        
                      flow variables, i.e. 
                        
                           2
                           m
                        
                      variables for each of the 
                        
                           (
                           n
                           -
                           1
                           )
                        
                      commodities, and each of the m faults. Clearly, the size of this formulation is substantially larger than the standard NDP, because the flow variables and the flow-conservation constraints have to be replicated for each fault. However, this difficulty can be overcome by solving the problem in the space of capacity variables alone by projecting out the flow variables via Benders’ decomposition. See, for instance, Bienstock and Mattia (2007), Mattia (2012) and Agarwal (2013) for details.

Next, we present the formulations of models SND-R and SND-NR with an exponentially large number of columns. In such formulations, each column represents one complete source-to-destination routing option for a demand. It will be convenient, therefore, to let commodity k refer to the traffic demand for a given pair of nodes. Thus, the commodity set K contains all node-pairs with non-zero demand, i.e. in the worst case 
                        
                           |
                           K
                           |
                           =
                           n
                           (
                           n
                           -
                           1
                           )
                           /
                           2
                        
                     . Let 
                        
                           
                              
                                 d
                              
                              
                                 k
                              
                           
                        
                      be the traffic demand of commodity k. Suppose that the edges in E are numbered from 1 to 
                        
                           m
                           =
                           |
                           E
                           |
                        
                     . We define 
                        
                           F
                           =
                           E
                           ∪
                           {
                           0
                           }
                        
                      as the index set of faults, where index 0 denotes the no-fault scenario, i.e. the case where none of the edges have failed. We use 
                        
                           f
                           ∈
                           F
                        
                      as the index to denote a specific fault.

In the case of SND-R and SND-NR, for each commodity, all traffic will be assigned to one or more path-pairs; each pair consisting of a working path and an edge-disjoint protection path. We use the term routing-option to denote each such pair of disjoint paths. Let 
                        
                           
                              
                                 R
                              
                              
                                 k
                              
                           
                        
                      be the index set of all routing options for commodity k. For 
                        
                           r
                           ∈
                           
                              
                                 R
                              
                              
                                 k
                              
                           
                        
                      let 
                        
                           
                              
                                 A
                              
                              
                                 r
                              
                           
                           ⊂
                           E
                        
                      and 
                        
                           
                              
                                 B
                              
                              
                                 r
                              
                           
                           ⊂
                           E
                        
                     , respectively, be the sets of edges on the working- and protection-paths represented by routing option r. Given 
                        
                           k
                           ∈
                           K
                        
                      and 
                        
                           r
                           ∈
                           
                              
                                 R
                              
                              
                                 k
                              
                           
                        
                      we define:
                        
                           
                              
                                 
                                    θ
                                 
                                 
                                    fe
                                 
                                 
                                    kr
                                 
                              
                              =
                              
                                 
                                    
                                       
                                          
                                             
                                                1
                                                ,
                                             
                                             
                                                if
                                                
                                                f
                                                ∈
                                                
                                                   
                                                      A
                                                   
                                                   
                                                      r
                                                   
                                                
                                                
                                                and
                                                
                                                e
                                                ∈
                                                
                                                   
                                                      B
                                                   
                                                   
                                                      r
                                                   
                                                
                                             
                                          
                                          
                                             
                                                1
                                                ,
                                             
                                             
                                                if
                                                
                                                f
                                                
                                                ∉
                                                
                                                
                                                   
                                                      A
                                                   
                                                   
                                                      r
                                                   
                                                
                                                
                                                and
                                                
                                                e
                                                ∈
                                                
                                                   
                                                      A
                                                   
                                                   
                                                      r
                                                   
                                                
                                             
                                          
                                          
                                             
                                                0
                                                ,
                                             
                                             
                                                otherwise
                                             
                                          
                                       
                                    
                                 
                              
                           
                        
                     
                  

In other words, 
                        
                           
                              
                                 θ
                              
                              
                                 fe
                              
                              
                                 kr
                              
                           
                        
                      is 1 if routing option r for commodity k requires capacity on edge e under fault f, and 0 otherwise. Note that the above definition of capacity requirement is consistent with the model SND-R. On the other hand, for model SND-NR, the capacity requirement definition will be represented by 
                        
                           
                              
                                 γ
                              
                              
                                 fe
                              
                              
                                 kr
                              
                           
                        
                     , as defined below.
                        
                           
                              
                                 
                                    γ
                                 
                                 
                                    fe
                                 
                                 
                                    kr
                                 
                              
                              =
                              
                                 
                                    
                                       
                                          
                                             
                                                1
                                                ,
                                             
                                             
                                                if
                                                
                                                f
                                                ∈
                                                
                                                   
                                                      A
                                                   
                                                   
                                                      r
                                                   
                                                
                                                
                                                and
                                                
                                                e
                                                ∈
                                                
                                                   
                                                      A
                                                   
                                                   
                                                      r
                                                   
                                                
                                                ∪
                                                
                                                   
                                                      B
                                                   
                                                   
                                                      r
                                                   
                                                
                                             
                                          
                                          
                                             
                                                1
                                                ,
                                             
                                             
                                                if
                                                
                                                f
                                                
                                                ∉
                                                
                                                
                                                   
                                                      A
                                                   
                                                   
                                                      r
                                                   
                                                
                                                
                                                and
                                                
                                                e
                                                ∈
                                                
                                                   
                                                      A
                                                   
                                                   
                                                      r
                                                   
                                                
                                             
                                          
                                          
                                             
                                                0
                                                ,
                                             
                                             
                                                otherwise
                                             
                                          
                                       
                                    
                                 
                              
                           
                        
                     
                  

Given the above definitions, and letting 
                        
                           
                              
                                 x
                              
                              
                                 kr
                              
                           
                        
                      be the quantity of commodity k routed along routing option 
                        
                           r
                           ∈
                           
                              
                                 R
                              
                              
                                 k
                              
                           
                        
                     , model SND-R can be formulated as follows:
                        
                           (3)
                           
                              
                                 
                                    
                                       
                                          SND
                                          -
                                          R
                                          
                                          Minimize
                                          
                                       
                                    
                                    
                                       
                                          
                                             
                                                
                                                   ∑
                                                
                                                
                                                   e
                                                   ∈
                                                   E
                                                
                                             
                                          
                                          
                                             
                                                c
                                             
                                             
                                                e
                                             
                                          
                                          
                                             
                                                y
                                             
                                             
                                                e
                                             
                                          
                                       
                                    
                                 
                                 
                                    
                                       
                                          s
                                          .
                                          t
                                          .
                                          
                                       
                                    
                                    
                                       
                                          
                                             
                                                
                                                   ∑
                                                
                                                
                                                   k
                                                   ∈
                                                   K
                                                
                                             
                                          
                                          
                                             
                                                
                                                   ∑
                                                
                                                
                                                   r
                                                   ∈
                                                   
                                                      
                                                         R
                                                      
                                                      
                                                         k
                                                      
                                                   
                                                
                                             
                                          
                                          
                                             
                                                θ
                                             
                                             
                                                fe
                                             
                                             
                                                kr
                                             
                                          
                                          
                                             
                                                x
                                             
                                             
                                                kr
                                             
                                          
                                          ⩽
                                          
                                             
                                                Cy
                                             
                                             
                                                e
                                             
                                          
                                          
                                          ∀
                                          f
                                          ∈
                                          F
                                          ,
                                          ∀
                                          e
                                          ∈
                                          E
                                       
                                    
                                 
                              
                           
                        
                     
                     
                        
                           (4)
                           
                              
                                 
                                    
                                       ∑
                                    
                                    
                                       r
                                       ∈
                                       
                                          
                                             R
                                          
                                          
                                             k
                                          
                                       
                                    
                                 
                              
                              
                                 
                                    x
                                 
                                 
                                    kr
                                 
                              
                              ⩾
                              
                                 
                                    d
                                 
                                 
                                    k
                                 
                              
                              
                              ∀
                              k
                              ∈
                              K
                           
                        
                     
                     
                        
                           
                              
                                 
                                    
                                    
                                       
                                          
                                             
                                                x
                                             
                                             
                                                kr
                                             
                                          
                                          ⩾
                                          0
                                          
                                          ∀
                                          k
                                          ∈
                                          K
                                          ,
                                          ∀
                                          r
                                          ∈
                                          
                                             
                                                R
                                             
                                             
                                                k
                                             
                                          
                                       
                                    
                                 
                                 
                                    
                                    
                                       
                                          
                                             
                                                y
                                             
                                             
                                                e
                                             
                                          
                                          ∈
                                          
                                             
                                                Z
                                             
                                             
                                                +
                                             
                                          
                                          
                                          ∀
                                          e
                                          ∈
                                          E
                                       
                                    
                                 
                              
                           
                        
                     
                  

The objective is to minimize the total cost of installed facilities. Constraints (3) ensure that under any fault the total traffic flow on any link does not exceed the capacity installed on the link. Constraints (4) ensure that the entire demand of each commodity is routed in the solution. Model SND-NR is obtained simply by replacing 
                        
                           
                              
                                 θ
                              
                              
                                 fe
                              
                              
                                 kr
                              
                           
                        
                      with 
                        
                           
                              
                                 γ
                              
                              
                                 fe
                              
                              
                                 kr
                              
                           
                        
                      as given below.
                        
                           
                              
                                 
                                    
                                       
                                          SND
                                          -
                                          NR
                                          
                                          Minimize
                                          
                                       
                                    
                                    
                                       
                                          
                                             
                                                
                                                   ∑
                                                
                                                
                                                   e
                                                   ∈
                                                   E
                                                
                                             
                                          
                                          
                                             
                                                c
                                             
                                             
                                                e
                                             
                                          
                                          
                                             
                                                y
                                             
                                             
                                                e
                                             
                                          
                                       
                                    
                                 
                                 
                                    
                                       
                                          s
                                          .
                                          t
                                          .
                                          
                                       
                                    
                                    
                                       
                                          
                                             
                                                
                                                   ∑
                                                
                                                
                                                   k
                                                   ∈
                                                   K
                                                
                                             
                                          
                                          
                                             
                                                
                                                   ∑
                                                
                                                
                                                   r
                                                   ∈
                                                   
                                                      
                                                         R
                                                      
                                                      
                                                         k
                                                      
                                                   
                                                
                                             
                                          
                                          
                                             
                                                γ
                                             
                                             
                                                fe
                                             
                                             
                                                kr
                                             
                                          
                                          
                                             
                                                x
                                             
                                             
                                                kr
                                             
                                          
                                          ⩽
                                          
                                             
                                                Cy
                                             
                                             
                                                e
                                             
                                          
                                          
                                          ∀
                                          f
                                          ∈
                                          F
                                          ,
                                          ∀
                                          e
                                          ∈
                                          E
                                       
                                    
                                 
                                 
                                    
                                    
                                       
                                          
                                             
                                                
                                                   ∑
                                                
                                                
                                                   r
                                                   ∈
                                                   
                                                      
                                                         R
                                                      
                                                      
                                                         k
                                                      
                                                   
                                                
                                             
                                          
                                          
                                             
                                                x
                                             
                                             
                                                kr
                                             
                                          
                                          ⩾
                                          
                                             
                                                d
                                             
                                             
                                                k
                                             
                                          
                                          
                                          ∀
                                          k
                                          ∈
                                          K
                                       
                                    
                                 
                                 
                                    
                                    
                                       
                                          
                                             
                                                x
                                             
                                             
                                                kr
                                             
                                          
                                          ⩾
                                          0
                                          
                                          ∀
                                          k
                                          ∈
                                          K
                                          ,
                                          ∀
                                          r
                                          ∈
                                          
                                             
                                                R
                                             
                                             
                                                k
                                             
                                          
                                       
                                    
                                 
                                 
                                    
                                    
                                       
                                          
                                             
                                                y
                                             
                                             
                                                e
                                             
                                          
                                          ∈
                                          
                                             
                                                Z
                                             
                                             
                                                +
                                             
                                          
                                          
                                          ∀
                                          e
                                          ∈
                                          E
                                       
                                    
                                 
                              
                           
                        
                     
                  

Note that by treating variables 
                        
                           
                              
                                 x
                              
                              
                                 kr
                              
                           
                        
                      as continuous variables, we assume that the traffic demands are arbitrarily splittable on a continuous scale. In reality, this splitting is restricted to integer multiples of a some basic unit at which the switching equipment performs the cross-connections. For example, in a network consisting of DS1 (1536Kb/s) facilities, the unit of cross-connection is usually a DS0 (64Kb/s) signal, i.e. a ratio of 1:24. We note that as long as the cross-connect unit is a small fraction of the facility capacity, as in the above example, treating 
                        
                           
                              
                                 x
                              
                              
                                 kr
                              
                           
                        
                      as a continuous variable is a reasonable approximation. A suitable post-processing heuristic can usually convert the solution of the above model into a solution with discrete 
                        
                           
                              
                                 x
                              
                              
                                 kr
                              
                           
                        
                      values without requiring additional capacity.

@&#LITERATURE REVIEW@&#

We briefly review some recent developments which have opened up the possibility of optimally solving relatively large instances (35 nodes, and 80 edges) of problem SND-G. We reiterate, that it is these advances that have enabled us to find near-optimal solutions of shared-protection versions of the model.

Problem SND-G, formulated as an MIP in Section 2, can be reformulated as a pure integer program in the space of capacity variables by using Benders’ decomposition. Using this, the MIP polyhedron 
                        
                           P
                           ∈
                           
                              
                                 R
                              
                              
                                 m
                                 +
                                 2
                                 (
                                 n
                                 -
                                 1
                                 )
                                 
                                    
                                       m
                                    
                                    
                                       2
                                    
                                 
                              
                           
                        
                      is projected into polyhedron 
                        
                           Q
                           ∈
                           
                              
                                 R
                              
                              
                                 m
                              
                           
                        
                     . Although the projected problem has a much smaller number of variables, it has an exponential number of constraints, each corresponding to the extreme rays of the metric cone. Nevertheless, the linear relaxation of the problem can be solved via a constraint generation scheme. Avella, Mattia, and Sassano (2007) have shown that a metric inequality violated by a given solution can be generated by solving a linear programming problem.

The linear relaxation of SND-G solved in the projection space yields a rather weak bound, making it impractical to solve the problem by branch and bound. The work of Bienstock and Muratore (2000) and Agarwal (2013) serve to considerably strengthen this relaxation by introducing several families of valid inequalities and facets of Q. Bienstock and Muratore (2000) study the polyhedral structure of the cut polyhedron for SND-G and characterize all its facets, which are also valid inequalities of the larger SND-G. Agarwal (2013) has generalized this idea to a k-partition of the graph, and studied the polyhedral structure of k-node SND-G for k
                     =3 and 4. A key theorem presented in that work states that a facet inequality of the k-node problem derived from a k-partition of the original graph is also facet-defining for the original problem under mild conditions. The C-G inequalities derived from these 3- and 4-partitions lead to a significant additional improvement in the bound value. Owing to this improvement, and certain other computational shortcuts pertaining to generation of metric inequalities, problems with up to 35 nodes, 80 edges, and a fully dense traffic matrix were solved to optimality within 10–15min of cpu time, thus enabling the optimal solution of SND-G as a stepping stone for finding near-optimal solutions of SND-R and SND-NR in the present work.

A considerable amount of literature exists on the polyhedral structure of the standard network design problem. Magnanti, Mirchandani, and Vachani (1993) introduced the cut-set inequalities and 3-partition inequalities for this problem under the name of Network Loading Problem, and proved the facet-defining status of these inequalities. Magnanti, Mirchandani, and Vachani (1995) have derived cut-set based facets and some 3-partition inequalities for the two facility version of the problem. Atamturk (2002), has studied the cut-set polyhedra of several different type of network design problems. Agarwal (2006) presented a theorem which translates the facets of the k-partition problem to the original problem, and used this theorem to derive several 4-partition facets. Agarwal (2009) gave a complete polyhedral description of the 4-node network design problem.

The problem of designing survivable networks has received considerable research attention during the last two decades. The problem has been addressed in primarily three different broad versions. First, there is the problem of finding a minimum cost 2-connected networks without any traffic or capacity considerations. Some significant contributions on this version are: Monma and Shallcross (1989),Monma, Munson, and Pulleyblank (1990), Grötschel, Monma, and Stoer (1992) and Grötschel and Monma (1990). A very recent significant contribution on a similar problem is by Balakrishnan, Mirchandani, and Natarajan (2009).

In a second version of the problem, the no-fault routing of demands and the associated capacity network is assumed to be already given, and the problem is to find a minimum cost installation of spare capacity that will enable the restoration of traffic in case of any fault. Sakauchi, Nishimura, and Hasegawa (1990) use a cut-set based formulation to address the “route-around-the-failure” version of the problem, while Kennington and Lewis (2001) have addressed the problem with path-restoration version. Balakrishnan, Magnanti, Sokol, and Wang (2002) have used cutting planes and polyhedral approaches to solve the “end-to-end-restoration” version.

In the third, and perhaps most challenging version of the problem, the network is to be designed from scratch, and then deciding the no-fault routing is also a part of the design problem. This model has been called the Joint Capacity Planning Model in Kennington, Olinick, and Spiride (2007), where the authors have given mathematical programming models for various survivable network design problems. They refer to the work of Murakami and Kim (1998),Saito, Miyao, Komine, and Kubota (1998) and Iraschko, MacGregor, and Grover (1998) on this problem. A rather early work on this problem is by Agarwal (1989) where three priority levels of traffic were considered, and a Lagrangian approach was proposed. Dahl and Stoer (1998) have used cutting plane approaches to solve the multi-facility version of this problem. Atamturk and Rajan (2008) have considered the design of survivable networks that use p-cycle based restoration scheme, and have used partition-based facets along with a column-generation procedure to generate the p-cycles for their design.


                     Orlowski and Pióro (2012) describe many variants of the SND problem with end-to-end path protection mechanisms. All problems are formulated in the non-compact form with a column representing each working-protection path pair. The computational complexity of the resulting pricing problem is studied. Within the framework presented in Orlowski and Pióro (2012), our problem is equivalent to situation independent restoration of affected flows with/without stub release. In situation independent restoration problems, regardless of the link that has failed, each affected working path has a pre-determined set of restoration paths. In our case, different pairs of working and protection paths may have the same primary path establishing the equivalence. This equivalence is well known (see Pióro & Medhi (2004)). Other papers considering similar restoration approaches are Gruber and Kiese (2006) and Dzida, Zagozdzon, Pióro, Sliwinski, and Ogryczak (2008). Another type of problem considered in Orlowski and Pióro (2012) is Single Backup Path protection and Restoration. In such types of problems, while the primary flow can be bifurcated, any affected primary flow needs to be restored along a single backup path. Pióro and Medhi (2004) formulate this problem as an MIP by introducing binary variables that choose exactly one backup restoration path from amongst a set of edge disjoint candidate restoration paths for each primary path. The authors call this model “Path Restoration with Fixed Single Back-up Paths” and this model is an even more restrictive model than SND-R/NR that we consider. Stidsen et al. (2007) and Spoorendonk (2008) consider a continuous version of the problem considered in our paper where the underlying graph is directed. Capacity and flows can be fractional. The authors show that the pricing problem is a Quadratic Cost Disjoint Path Problem (QCDPP). The QCDPP can be formulated and solved as a Shortest Path Problem with Resource Constraints (SPPRC), which is NP-complete. Żotkiewicz, Pióro, and Tomaszewski (2009) prove NP-hardness of problems SND-R and SND-NR when the underlying graph is directed. To the best of our knowledge, when the underlying graph is undirected (as assumed in this paper), the question of hardness of SND-R and SND-NR is unresolved. Despite this, it is well known that the column-generation subproblem for non-compact LP formulations of SND-R and SND-NR when the underlying graph is undirected (as presented in Section 2) are NP-hard. See Orlowski and Pióro (2012).

A practical but approximate solution to the FIPP (failure-independent path-protecting) traffic engineering problem is studied by Laborczi et al. (2001) and Laborczi and Cinkler (2004). In their problem, the focus is on algorithms which can find pairs of disjoint paths, where the cost of backup paths is assumed to be some constant factor cheaper than the primary paths. The motivation is that because of the sharing possibility it is reasonable that the capacity costs for each arc of the backup path are less than the capacity costs for each arc of the primary path. Even this simplified problem is shown to be NP-hard and a number of different heuristics are suggested to find good, though not optimal, solutions to the problem. Note, however, that the cost model for backup paths used is approximate. In our work, we are able to use exact costs for the backup paths, though the algorithms for computing the paths are heuristic.

The complexity of the exact column generation subproblem for SND-R and SND-NR are well-understood. See, for instance, Orlowski and Pióro (2012). In this section, we provide details of our specific heuristic for solving the column-generation subproblem.

A smaller version of the linear programming relaxation of SND-NR called a restricted master problem (RMP) is solved over a smaller set 
                           
                              
                                 
                                    
                                       
                                          R
                                       
                                       
                                          ‾
                                       
                                    
                                 
                                 
                                    k
                                 
                              
                              ,
                              k
                              ∈
                              K
                           
                         of routes. This RMP can be initialized with dummy routes that satisfy all demand constraints at an arbitrarily high cost ensuring that it is driven out of a feasible solution. Let 
                           
                              
                                 
                                    α
                                 
                                 
                                    fe
                                 
                              
                              ≤
                              0
                           
                         and 
                           
                              
                                 
                                    β
                                 
                                 
                                    k
                                 
                              
                              ⩾
                              0
                           
                         denote the dual variables associated with the capacity constraints and the demand constraints respectively of the RMP. Then, the reduced cost of routing option r of commodity k is:
                           
                              
                                 
                                    
                                       RC
                                    
                                    
                                       kr
                                    
                                 
                                 =
                                 -
                                 
                                    
                                       
                                          ∑
                                       
                                       
                                          f
                                          ∈
                                          F
                                       
                                    
                                 
                                 
                                    
                                       
                                          ∑
                                       
                                       
                                          e
                                          ∈
                                          E
                                       
                                    
                                 
                                 
                                    
                                       α
                                    
                                    
                                       fe
                                    
                                 
                                 
                                    
                                       γ
                                    
                                    
                                       fe
                                    
                                    
                                       kr
                                    
                                 
                                 -
                                 
                                    
                                       β
                                    
                                    
                                       k
                                    
                                 
                              
                           
                        Partitioning F into three subsets 
                           
                              
                                 
                                    A
                                 
                                 
                                    kr
                                 
                              
                              ,
                              
                                 
                                    B
                                 
                                 
                                    kr
                                 
                              
                           
                        , and 
                           
                              F
                              ⧹
                              {
                              
                                 
                                    A
                                 
                                 
                                    kr
                                 
                              
                              ∪
                              
                                 
                                    B
                                 
                                 
                                    kr
                                 
                              
                              }
                           
                        , and observing the definition of 
                           
                              
                                 
                                    γ
                                 
                                 
                                    fe
                                 
                                 
                                    kr
                                 
                              
                           
                        , the above can be re-written as
                           
                              
                                 
                                    
                                       RC
                                    
                                    
                                       kr
                                    
                                 
                                 =
                                 -
                                 
                                    
                                       
                                          ∑
                                       
                                       
                                          f
                                          ∈
                                          F
                                       
                                    
                                 
                                 
                                    
                                       
                                          ∑
                                       
                                       
                                          e
                                          ∈
                                          
                                             
                                                A
                                             
                                             
                                                kr
                                             
                                          
                                       
                                    
                                 
                                 
                                    
                                       α
                                    
                                    
                                       fe
                                    
                                 
                                 -
                                 
                                    
                                       
                                          ∑
                                       
                                       
                                          f
                                          ∈
                                          
                                             
                                                A
                                             
                                             
                                                kr
                                             
                                          
                                       
                                    
                                 
                                 
                                    
                                       
                                          ∑
                                       
                                       
                                          e
                                          ∈
                                          
                                             
                                                B
                                             
                                             
                                                kr
                                             
                                          
                                       
                                    
                                 
                                 
                                    
                                       α
                                    
                                    
                                       fe
                                    
                                 
                                 -
                                 
                                    
                                       β
                                    
                                    
                                       k
                                    
                                 
                              
                           
                        Note that the first term in the expression is the path length of the working path, if 
                           
                              
                                 
                                    ∑
                                 
                                 
                                    f
                                    ∈
                                    F
                                 
                              
                              
                                 
                                    α
                                 
                                 
                                    fe
                                 
                              
                           
                         is taken as the distance of edge e. The second term is the path length of the protection path if 
                           
                              
                                 
                                    ∑
                                 
                                 
                                    f
                                    ∈
                                    
                                       
                                          A
                                       
                                       
                                          kr
                                       
                                    
                                 
                              
                              
                                 
                                    α
                                 
                                 
                                    fe
                                 
                              
                           
                         is taken as the distance associated with edge e. Thus, the problem of finding the path-pair reduces to two shortest path problems defined on two different distance matrices. Since the distance matrix for the protection path depends on the working path, the problem of finding the least cost path-pair cannot be decomposed into two independent problems. This is what makes the problem of minimizing 
                           
                              
                                 
                                    RC
                                 
                                 
                                    kr
                                 
                              
                           
                         difficult to solve. As an approximation, it is possible to use a sequential approach in which first we compute the working path, and then the protection path for the given working path. However, a path-pair so computed will not necessarily be optimal, because while computing the working path, its impact on the cost contribution of the protection path was completely ignored. This difficulty is at least partly corrected by an iterative process that alternately computes one of the paths, keeping the other fixed, until the path pair reaches an equilibrium.
                           
                              
                                 
                                 
                                    
                                       
                                          Algorithm 1
                                       
                                    
                                 
                                 
                                    
                                       
                                          Step 0. Compute the working path A using 
                                             
                                                
                                                   
                                                      
                                                         
                                                            c
                                                         
                                                         
                                                            e
                                                         
                                                      
                                                   
                                                   
                                                      ̃
                                                   
                                                
                                                =
                                                -
                                                
                                                   
                                                      ∑
                                                   
                                                   
                                                      f
                                                      ∈
                                                      F
                                                   
                                                
                                                
                                                   
                                                      α
                                                   
                                                   
                                                      fe
                                                   
                                                
                                             
                                           as the distance matrix.
                                    
                                    
                                       
                                          Step 1. Compute protection path B using the following distance matrix.
                                    
                                    
                                       
                                          
                                             
                                                
                                                   
                                                      
                                                         
                                                            
                                                               c
                                                            
                                                            
                                                               e
                                                            
                                                         
                                                      
                                                      
                                                         ̃
                                                      
                                                   
                                                   =
                                                   
                                                      
                                                         
                                                            
                                                               
                                                                  
                                                                     -
                                                                     
                                                                        
                                                                           
                                                                              ∑
                                                                           
                                                                           
                                                                              f
                                                                              ∈
                                                                              A
                                                                           
                                                                        
                                                                     
                                                                     
                                                                        
                                                                           α
                                                                        
                                                                        
                                                                           fe
                                                                        
                                                                     
                                                                  
                                                                  
                                                                     e
                                                                     ∈
                                                                     E
                                                                     ⧹
                                                                     A
                                                                  
                                                               
                                                               
                                                                  
                                                                     ∞
                                                                  
                                                                  
                                                                     e
                                                                     ∈
                                                                     A
                                                                  
                                                               
                                                            
                                                         
                                                      
                                                   
                                                
                                             
                                          
                                       
                                    
                                    
                                       
                                          Step 2. Compute working path 
                                             
                                                
                                                   
                                                      A
                                                   
                                                   
                                                      ′
                                                   
                                                
                                             
                                           using the following distance matrix:
                                    
                                    
                                       
                                          
                                             
                                                
                                                   
                                                      
                                                         
                                                            
                                                               c
                                                            
                                                            
                                                               e
                                                            
                                                         
                                                      
                                                      
                                                         ̃
                                                      
                                                   
                                                   =
                                                   
                                                      
                                                         
                                                            
                                                               
                                                                  
                                                                     -
                                                                     
                                                                        
                                                                           
                                                                              ∑
                                                                           
                                                                           
                                                                              f
                                                                              ∈
                                                                              F
                                                                           
                                                                        
                                                                     
                                                                     
                                                                        
                                                                           α
                                                                        
                                                                        
                                                                           fe
                                                                        
                                                                     
                                                                     -
                                                                     
                                                                        
                                                                           
                                                                              ∑
                                                                           
                                                                           
                                                                              t
                                                                              ∈
                                                                              B
                                                                           
                                                                        
                                                                     
                                                                     
                                                                        
                                                                           α
                                                                        
                                                                        
                                                                           et
                                                                        
                                                                     
                                                                  
                                                                  
                                                                     e
                                                                     ∈
                                                                     E
                                                                     ⧹
                                                                     B
                                                                  
                                                               
                                                               
                                                                  
                                                                     ∞
                                                                     ,
                                                                  
                                                                  
                                                                     e
                                                                     ∈
                                                                     B
                                                                  
                                                               
                                                            
                                                         
                                                      
                                                   
                                                
                                             
                                          
                                       
                                    
                                    
                                       
                                          Step 3. If the reduced cost of path-pair 
                                             
                                                (
                                                
                                                   
                                                      A
                                                   
                                                   
                                                      ′
                                                   
                                                
                                                ,
                                                B
                                                )
                                             
                                           is no less than that of 
                                             
                                                (
                                                A
                                                ,
                                                B
                                                )
                                             
                                          , return path-pair 
                                             
                                                (
                                                A
                                                ,
                                                B
                                                )
                                             
                                          , and STOP. Otherwise, replace A with 
                                             
                                                
                                                   
                                                      A
                                                   
                                                   
                                                      ′
                                                   
                                                
                                             
                                          , and go back to Step 1.
                                    
                                 
                              
                           
                        
                     

Note that in Step 2, the term 
                           
                              
                                 
                                    ∑
                                 
                                 
                                    t
                                    ∈
                                    B
                                 
                              
                              
                                 
                                    α
                                 
                                 
                                    et
                                 
                              
                           
                         in the expression of 
                           
                              
                                 
                                    
                                       
                                          c
                                       
                                       
                                          e
                                       
                                    
                                 
                                 
                                    ̃
                                 
                              
                           
                         measures the contribution of edge e towards the protection path B. This algorithm would always converge because in each iteration, the reduced cost decreases. In our computational tests, this algorithm helped produce improved routes in nearly 7% of the generated routes.

For the path-pair computed as above, if 
                           
                              
                                 
                                    RC
                                 
                                 
                                    kr
                                 
                              
                              <
                              0
                           
                        , then the column corresponding to the path-pair is added to the RMP. The RMP is then re-solved to get a new set of dual values and the process is continued until the 
                           
                              
                                 
                                    RC
                                 
                                 
                                    kr
                                 
                              
                           
                         is non-negative, at which point RMP is considered solved. We note that the solution of RMP thus obtained is only a heuristic solution, because there may still exist columns with negative reduced cost, which could not be found by the column-generation subproblem solution procedure due to its heuristic nature.

As noted earlier, the only difference between the two models is that 
                           
                              
                                 
                                    γ
                                 
                                 
                                    fe
                                 
                                 
                                    kr
                                 
                              
                           
                         is replaced with 
                           
                              
                                 
                                    θ
                                 
                                 
                                    fe
                                 
                                 
                                    kr
                                 
                              
                           
                         in SND-R. Accordingly, the reduced cost of variable 
                           
                              
                                 
                                    x
                                 
                                 
                                    kr
                                 
                              
                           
                         would be
                           
                              
                                 
                                    
                                       RC
                                    
                                    
                                       kr
                                    
                                 
                                 =
                                 -
                                 
                                    
                                       
                                          ∑
                                       
                                       
                                          f
                                          ∈
                                          F
                                       
                                    
                                 
                                 
                                    
                                       
                                          ∑
                                       
                                       
                                          e
                                          ∈
                                          E
                                       
                                    
                                 
                                 
                                    
                                       α
                                    
                                    
                                       fe
                                    
                                 
                                 
                                    
                                       θ
                                    
                                    
                                       fe
                                    
                                    
                                       kr
                                    
                                 
                                 -
                                 
                                    
                                       β
                                    
                                    
                                       k
                                    
                                 
                              
                           
                        Once again, partitioning F into three subsets 
                           
                              
                                 
                                    A
                                 
                                 
                                    kr
                                 
                              
                              ,
                              
                                 
                                    B
                                 
                                 
                                    kr
                                 
                              
                           
                        , and 
                           
                              F
                              ⧹
                              {
                              
                                 
                                    A
                                 
                                 
                                    kr
                                 
                              
                              ∪
                              
                                 
                                    B
                                 
                                 
                                    kr
                                 
                              
                              }
                           
                        , and observing the definition of 
                           
                              
                                 
                                    θ
                                 
                                 
                                    fe
                                 
                                 
                                    kr
                                 
                              
                           
                        , the above can be re-written as
                           
                              
                                 
                                    
                                       RC
                                    
                                    
                                       kr
                                    
                                 
                                 =
                                 -
                                 
                                    
                                       
                                          ∑
                                       
                                       
                                          f
                                          ∈
                                          F
                                          ⧹
                                          
                                             
                                                A
                                             
                                             
                                                kr
                                             
                                          
                                       
                                    
                                 
                                 
                                    
                                       
                                          ∑
                                       
                                       
                                          e
                                          ∈
                                          
                                             
                                                A
                                             
                                             
                                                kr
                                             
                                          
                                       
                                    
                                 
                                 
                                    
                                       α
                                    
                                    
                                       fe
                                    
                                 
                                 -
                                 
                                    
                                       
                                          ∑
                                       
                                       
                                          f
                                          ∈
                                          
                                             
                                                A
                                             
                                             
                                                kr
                                             
                                          
                                       
                                    
                                 
                                 
                                    
                                       
                                          ∑
                                       
                                       
                                          e
                                          ∈
                                          
                                             
                                                B
                                             
                                             
                                                kr
                                             
                                          
                                       
                                    
                                 
                                 
                                    
                                       α
                                    
                                    
                                       fe
                                    
                                 
                                 -
                                 
                                    
                                       β
                                    
                                    
                                       k
                                    
                                 
                              
                           
                        
                     

In this case, the distance matrix for the protection path is the same as in case of SND-NR, but for the working path it is 
                           
                              
                                 
                                    
                                       
                                          c
                                       
                                       
                                          e
                                       
                                    
                                 
                                 
                                    ̃
                                 
                              
                              =
                              -
                              
                                 
                                    ∑
                                 
                                 
                                    f
                                    ∈
                                    F
                                    ⧹
                                    
                                       
                                          A
                                       
                                       
                                          kr
                                       
                                    
                                 
                              
                              
                                 
                                    α
                                 
                                 
                                    fe
                                 
                              
                           
                         rather than 
                           
                              
                                 
                                    
                                       
                                          c
                                       
                                       
                                          e
                                       
                                    
                                 
                                 
                                    ̃
                                 
                              
                              =
                              -
                              
                                 
                                    ∑
                                 
                                 
                                    f
                                    ∈
                                    F
                                 
                              
                              
                                 
                                    α
                                 
                                 
                                    fe
                                 
                              
                           
                        . The distance of edge e is not a fixed number, but depends on the other links that are included in the path. However, we note that 
                           
                              
                                 
                                    
                                       
                                          c
                                       
                                       
                                          e
                                       
                                    
                                 
                                 
                                    ̃
                                 
                              
                              =
                              -
                              
                                 
                                    ∑
                                 
                                 
                                    f
                                    ∈
                                    F
                                 
                              
                              
                                 
                                    α
                                 
                                 
                                    fe
                                 
                              
                           
                         is a reasonably good approximation, particularly for large networks. Consider a network with 50 nodes and 100 edges. In a real world network of this size, a typical path between two nodes is unlikely to have more than 5–8 edges. The effect of this approximation is that 
                           
                              
                                 
                                    
                                       
                                          c
                                       
                                       
                                          e
                                       
                                    
                                 
                                 
                                    ̃
                                 
                              
                           
                         is the sum of all 100 
                           
                              
                                 
                                    α
                                 
                                 
                                    fe
                                 
                              
                           
                         values, while it should not include 
                           
                              
                                 
                                    α
                                 
                                 
                                    fe
                                 
                              
                           
                         value of the edges on the path. Since the number of edges on the path is a small fraction of the total number of edges in a large problem, the two values differ by a fairly small percentage, leading to the goodness of this approximation. Our computational experience also validates this observation, because we were able to get optimal solutions in an overwhelming majority of cases for this version of the problem.

Besides this observation, the rest of the details of column-generation subproblem solution procedure are exactly the same as in case of SND-NR.

After obtaining the optimal solution of problem SND-G, we first attempt to find a feasible routing within this solution. Let (
                        
                           
                              
                                 y
                              
                              
                                 e
                              
                              
                                 LB
                              
                           
                        
                     ) be the capacity installed on edge e in the optimal solution of SND-G, which is referred to as a lower bound network because the value of this solution is a lower bound for versions SND-R and SND-NR. A feasible routing within this capacity solution, if it exists, can be found by solving the following problem which minimizes the total unrouted demand. Note that formulation given below is for version SND-R. The formulation for version SND-NR is identical except that 
                        
                           
                              
                                 θ
                              
                              
                                 fe
                              
                              
                                 kr
                              
                           
                        
                      is replaced with 
                        
                           
                              
                                 γ
                              
                              
                                 fe
                              
                              
                                 kr
                              
                           
                        
                     .
                        
                           
                              
                                 
                                    
                                       
                                          RMP
                                          -
                                          Routing
                                          
                                          Minimize
                                          
                                       
                                    
                                    
                                       
                                          
                                             
                                                
                                                   ∑
                                                
                                                
                                                   k
                                                   ∈
                                                   K
                                                
                                             
                                          
                                          
                                             
                                                z
                                             
                                             
                                                k
                                             
                                          
                                       
                                    
                                 
                                 
                                    
                                       
                                          s
                                          .
                                          t
                                          .
                                          
                                       
                                    
                                    
                                       
                                          
                                             
                                                
                                                   ∑
                                                
                                                
                                                   k
                                                   ∈
                                                   K
                                                
                                             
                                          
                                          
                                             
                                                
                                                   ∑
                                                
                                                
                                                   r
                                                   ∈
                                                   
                                                      
                                                         
                                                            
                                                               R
                                                            
                                                            
                                                               k
                                                            
                                                         
                                                      
                                                      
                                                         ‾
                                                      
                                                   
                                                
                                             
                                          
                                          
                                             
                                                θ
                                             
                                             
                                                fe
                                             
                                             
                                                kr
                                             
                                          
                                          
                                             
                                                x
                                             
                                             
                                                kr
                                             
                                          
                                          ⩽
                                          
                                             
                                                Cy
                                             
                                             
                                                e
                                             
                                             
                                                LB
                                             
                                          
                                          
                                          ∀
                                          f
                                          ∈
                                          F
                                          ,
                                          ∀
                                          e
                                          ∈
                                          E
                                       
                                    
                                 
                                 
                                    
                                    
                                       
                                          
                                             
                                                
                                                   ∑
                                                
                                                
                                                   r
                                                   ∈
                                                   
                                                      
                                                         
                                                            
                                                               R
                                                            
                                                            
                                                               k
                                                            
                                                         
                                                      
                                                      
                                                         ‾
                                                      
                                                   
                                                
                                             
                                          
                                          
                                             
                                                x
                                             
                                             
                                                kr
                                             
                                          
                                          +
                                          
                                             
                                                z
                                             
                                             
                                                k
                                             
                                          
                                          ⩾
                                          
                                             
                                                d
                                             
                                             
                                                k
                                             
                                          
                                          
                                          ∀
                                          k
                                          ∈
                                          K
                                       
                                    
                                 
                                 
                                    
                                    
                                       
                                          
                                             
                                                x
                                             
                                             
                                                kr
                                             
                                          
                                          ⩾
                                          0
                                          
                                          ∀
                                          k
                                          ∈
                                          K
                                          ,
                                          ∀
                                          r
                                          ∈
                                          
                                             
                                                
                                                   
                                                      R
                                                   
                                                   
                                                      k
                                                   
                                                
                                             
                                             
                                                ‾
                                             
                                          
                                       
                                    
                                 
                                 
                                    
                                    
                                       
                                          
                                             
                                                z
                                             
                                             
                                                k
                                             
                                          
                                          ⩾
                                          0
                                          
                                          ∀
                                          k
                                          ∈
                                          K
                                       
                                    
                                 
                              
                           
                        
                     
                  

If the optimal solution value of the above problem turns out to be zero, then a feasible routing has been found as all demand have been routed. The lower bound network is indeed the optimal solution of SND-R/NR.

The column-generation subproblem is the same for both the network design problem (RMP) as well as the routing problem (RMP-Routing). While the basic framework for solving the column-generation subproblem was outlined in Sections 4.1 and 4.2, the detailed implementation goes beyond this framework. During each iteration of the column-generation subproblem, for each commodity 
                        
                           k
                           ∈
                           K
                        
                      Algorithm 1 (see Section 4.1) is run to find out an equilibrium pair of working/restoration paths. If this does not yield a column with a negative reduced cost, a few other options are tried.
                        
                           Option 1.
                           The working path of a previously generated routing option of the same commodity, if it exists, is chosen as the current working path. Given this, a new restoration path is attempted to be found. If found, an equilibrium pair of working/restoration paths is computed using the steps of Algorithm 1. If the reduced cost of this equilibrium pair is non-negative, a different working path is considered and the steps repeated until all previously generated routing options have been tried.

The restoration path of a previously generated routing option of the same commodity, if it exists, is chosen as the current working path. Given this, a new restoration path is attempted to be found. If found, an equilibrium pair of working/restoration paths is computed using the steps of Algorithm 1. If the reduced cost of this equilibrium pair is non-negative a different restoration path is considered and the steps repeated until all previously generated routing options have been tried.

The restoration path of a previously generated routing option of the same commodity, if it exists, is chosen as the current restoration path. Given this, a new working path is attempted to be found (using Step 2 of Algorithm 1). If the reduced cost of this pair is non-negative a different restoration path is considered and the steps repeated until all previously generated routing options have been tried.

A working path of a previously generated routing option of the same commodity, if it exists, is chosen as the current restoration path. Given this, a new working path is attempted to be found (using Step 2 of Algorithm 1). If the reduced cost of this pair is non-negative a different working path is considered and the steps repeated until all previously generated routing options have been tried.

In our computational experience, Algorithm 1 directly finds a column with negative reduced cost in about 95% of the cases, while the remaining 5% columns are generated after applying options 1 through 4 above.

If all demands get feasibly routed (that is, the objective function value in RMP-Routing is 0), the computation is complete, and the lower bound network is the optimal solution for SND-R/NR. Otherwise, we use all the routes generated in the process of solving RMP-Routing as inputs to problem RMP, proceed to find a heuristic solution as outlined in the algorithm described below.

Heuristic
                        
                           
                              Step 1.
                           The optimal SND-G solution 
                                 
                                    
                                       
                                          y
                                       
                                       
                                          LB
                                       
                                    
                                 
                               is used to impose lower bounds on edge capacities. That is, we impose constraints 
                                 
                                    
                                       
                                          y
                                       
                                       
                                          e
                                       
                                    
                                    ⩾
                                    
                                       
                                          y
                                       
                                       
                                          e
                                       
                                       
                                          LB
                                       
                                    
                                    ,
                                    ∀
                                    e
                                 
                               in model RMP.

Solve problem RMP.

Using the dual values of constraints, solve the column-generation subproblem. If a routing option with negative reduced cost is discovered, add the column to RMP and go back to Step 2.

Let the edge capacities be 
                                 
                                    
                                       
                                          y
                                       
                                       
                                          e
                                       
                                       
                                          LP
                                       
                                    
                                 
                               in the final RMP solution. Let set S contain edges with fractional capacity values. If S is empty, stop. Report the final RMP solution as the solution to problem SND-NR.

Solve the feasible routing problem, RMP-Routing, with edge capacities equal to 
                                 
                                    ⌈
                                    
                                       
                                          y
                                       
                                       
                                          e
                                       
                                       
                                          LP
                                       
                                    
                                    ⌉
                                 
                              . With these capacity values, a feasible routing will definitely exist. Let this network be the incumbent network solution.

If set S is empty, stop. Report the incumbent network solution as the solution to problem SND-NR. Otherwise, choose an edge 
                                 
                                    
                                       
                                          e
                                       
                                       
                                          ∗
                                       
                                    
                                    ∈
                                    S
                                 
                               which had a fractional value of 
                                 
                                    
                                       
                                          y
                                       
                                       
                                          e
                                       
                                       
                                          LP
                                       
                                    
                                    >
                                    1
                                 
                               in the final RMP solution with the least value of 
                                 
                                    
                                       
                                          
                                             
                                                y
                                             
                                             
                                                e
                                             
                                             
                                                LP
                                             
                                          
                                          -
                                          ⌊
                                          
                                             
                                                y
                                             
                                             
                                                e
                                             
                                             
                                                LP
                                             
                                          
                                          ⌋
                                       
                                       
                                          
                                             
                                                y
                                             
                                             
                                                e
                                             
                                             
                                                LP
                                             
                                          
                                       
                                    
                                 
                              . If no such edge exists, choose an edge 
                                 
                                    
                                       
                                          e
                                       
                                       
                                          ∗
                                       
                                    
                                    ∈
                                    S
                                 
                               which had a fractional value of 
                                 
                                    
                                       
                                          y
                                       
                                       
                                          e
                                       
                                       
                                          LP
                                       
                                    
                                    <
                                    1
                                 
                               in the final RMP solution with the least value of 
                                 
                                    
                                       
                                          y
                                       
                                       
                                          e
                                       
                                       
                                          LP
                                       
                                    
                                 
                              . Set all edge capacities equal to that of the incumbent solution except edge 
                                 
                                    
                                       
                                          e
                                       
                                       
                                          ∗
                                       
                                    
                                 
                               whose capacity is set to 
                                 
                                    ⌊
                                    
                                       
                                          y
                                       
                                       
                                          
                                             
                                                e
                                             
                                             
                                                ∗
                                             
                                          
                                       
                                       
                                          LP
                                       
                                    
                                    ⌋
                                 
                              .

Solve the feasible routing problem with the new edge capacities by generating additional routes if necessary. If a feasible routing exists, update the incumbent solution. Remove edge 
                                 
                                    
                                       
                                          e
                                       
                                       
                                          ∗
                                       
                                    
                                 
                               from S. Go back to Step 6.

To speed up the heuristic we employ a number of shortcuts. In Step 3, where new columns are added to RMP we add only the most negative reduced-cost column. We maintain a list of other negative reduced-cost columns discovered for other commodities. In the next iteration with the updated dual variable values, we first calculate the updated reduced cost for all columns in this list. We solve the column-generation subproblem afresh only for those commodities in the list whose updated reduced cost is non-negative. We terminate the solution procedure for RMP when 100 iterations of the column-generation subproblem have not yielded more than a 1% reduction in the cost. A variety of different rules for choice of order of candidate edges were tried in Step 6. We have reported the best performing of such rules.

The heuristic presented above is similar to the one proposed by Avella et al. (2007). They, however, make use of the heuristic in a completely different context. They consider the basic network design problem (without survivability requirements). Fractional capacity solutions are rounded up to obtain a heuristic upper bound. Some original fractional variables are rounded down in a successive fashion and an attempt is made to find a feasible solution by re-routing the flows. The main differences are the usage of the lower bound SND-G network and the application to survivable network design. As will be seen in Section 6, this approach has led solutions which are either optimal or very close to the lower bound.

In this section we report the performance of our algorithm on randomly generated problem instances as well as some problems available in the SNDlib database. All problem instances were solved using CPLEX 12.5 on a 2.93GHz Intel Core 2 Processor having 8GB of physical memory running Windows 7. All computer code was written in C++ and compiled using Microsoft Visual Studio 2008.

The results are reported on two sets of problems. The first is a set of randomly generated problems with 35 nodes and 80 edges. This is the same set of problems that was used in Agarwal (2013). The coordinates of the nodes were randomly picked from a 50 by 50 grid. The facility cost is computed using the formula 
                        
                           
                              
                                 c
                              
                              
                                 e
                              
                           
                           =
                           100
                           +
                           10
                           ∗
                           
                              
                                 d
                              
                              
                                 e
                              
                           
                        
                     , where 
                        
                           
                              
                                 d
                              
                              
                                 e
                              
                           
                        
                      is the Euclidian distance of edge e. The traffic demands between nodes were generated randomly from Uniform (1,10) distribution. Five of such instances were generated. For each of these five instances, three different values of facility capacity C were used, i.e. 400, 600 and 800 units, thus resulting in 15 instances.

The second set of problems is taken from SNDlib (sndlib.zib.de), a well-known repository of various network design instances. Most of these instances are defined for multiple facilities. Since we address the single facility version of the problem, we solved these instances with the largest facility capacity. This capacity value is mentioned in Table 6 which contains the results for these instances.

As far as we know, there is no readily available procedure in literature that has been developed in detail specifically to solve SND-R/NR against which our proposed heuristic can be compared against. As mentioned previously, the column-generation subproblems for SND-R/NR are NP-hard. In comparison to exact methods that can solve the subproblem, we would expect our heuristic column-generation subproblem solution procedure to perform significantly faster. As will be seen, in many cases the reported gaps are quite small despite usage of the heuristic procedure itself. As will also be seen, the most time-consuming part of the algorithm turns out to be the repeated re-solvings of the RMP as new columns are added. So, improvement in solution times are possibly going to be obtained by focussing on trying to solve the RMP faster rather than developing more efficient exact methods to solve the column-generation subproblem.


                     Tables 1–3
                     
                     
                      report the computational experience on randomly generated problem instances. The tables report the computational times required for solving the lower bound network design problem, SND-G and the associated lower bound network cost. Column “Gap” in these tables represents 
                        
                           
                              
                                 Heuristic
                                 
                                 Network
                                 
                                 Cost
                                 -
                                 SND
                                 -
                                 
                                 G
                                 
                                 Network
                                 
                                 Cost
                              
                              
                                 SND
                                 -
                                 G
                                 
                                 Network
                                 
                                 Cost
                              
                           
                           ∗
                           100
                           %
                        
                     . Column “Routes” lists the number of generated columns.

As expected, the gap is quite small for the SND-R cases when compared with the SND-NR cases. In fact, the lower bound network turns out to be optimal for 12 out of 15 cases for model SND-R. It is also noteworthy that the chances of the lower bound network being optimal tend to increase as the value of C is increased. The reason is that when C is large, the optimal network tends to have a greater amount of built-in spare capacity due to integrality. Presence of this spare capacity tends to permit a feasible routing of all demands despite the additional restriction of a single restoration path for each demand under shared-protection routing model. This observation also explains the fact that for model SND-NR, the average gap is only 1.7% for C
                     =800, while it is 4.3% for the other two cases. It is understandable that for this model the lower bound network turned out to be optimal in only 3 cases out of 15, because the reuse of working capacity is not permitted under this model.

It is also noteworthy that the time taken by the heuristic is much longer for model SND-NR than for SND-R. When a feasible routing of all demands is possible for a given network, the heuristic can find such a routing quickly. But it takes significantly longer time to determine that no feasible routing exists. Also, the heuristic takes much longer time as the value of C is decreased, because it becomes more difficult to find a feasible routing since there is very little built-in spare capacity in the lower bound network.

For the more challenging SND-NR problems, we analyzed the breakup of total computational time into the time spent in column generation and the remaining time which includes re-solving the RMP and other steps of the heuristic. Table 4
                      provides the total time spent in column generation (column headed CG Time) and the percentage of total time that is spent in column generation (column headed CG Time %). In a significant majority of problem instances, the time spent in column generation is less than half the total time. This result corroborates the results obtained by other authors as well. See, for instance, Dzida et al. (2008). This seems to suggest that further improvements in computational times, especially for larger problem instances, is likely to be obtained on being able to solve the RMP more efficiently rather than developing more efficient solution procedures for the column-generation subproblem.


                     Table 5
                      reports the number of edges in the networks designed as compared to the lower bound network. It is pertinent to note that all but two cases, addition of just one or two edges is sufficient to provide feasibility under model SND-NR. For model SND-R, twelve out of fifteen cases required no additional capacity at all, two cases required one addition edge, and only one case required two additional edges.


                     Figs. 1–3
                     
                     
                      indicate the original lower bound SND-G network and the corresponding SND-NR network for each of the three values of C in case of problem instance 4. The arrows indicate the edge(s) added to make the network feasible for model SND-NR. Note that the edges added by the algorithms tend to be relatively short ones.


                     Table 6
                      reports the computational experience on problems available in SNDlib. As before, the gaps as well as the computational times are greater for SND-NR as compared to SND-R. The most difficult problem instance was “germany” whose running time was around two hours. The lower bound network turned out to be optimal for a majority of problems under the SND-R model.

Our optimality criterion has been the cost of the designed network. We have shown that our heuristic is capable of providing near-optimal solutions (gaps within 5% on average) under shared-protection routing. Thus, the network costs, whether survivability is provided under SND-G or SND-NR, are fairly close to each other (within 5% on average). This seems to corroborate the results obtained by Orlowski and Wessäly (2005) that network costs are not highly sensitive to the specific mode of survivability provided. However, it appears that the costs are sensitive to the capacity of a single link. As our results show, lower the values of C higher is likely to be the cost difference between different restoration schemes and vice versa. Additional computational experiments would need to be conducted to test this hypothesis and compare different restoration schemes.

In this paper we developed a column-generation based heuristic to solve a survivable network design problem with shared-protection routing. Two versions were considered – with capacity reuse and without capacity reuse. The heuristic is able to solve problems of size 35 nodes, 80 edges and fully dense traffic demand patterns in short time. The heuristic was also tested with problems from SNDlib and for most problems the computational time is very small.

To evaluate the quality of the heuristic, we used a lower bound network based on global re-routing. The gap between the heuristic solution and the lower bound network in most cases is less than 5%.

Possible future avenues of research include developing similar column-generation-based heuristics that are able to address different types of shared-protection schemes. Yet another avenue of research would be the development of heuristics for the problem where the routing options denoted by variables x are discrete.

@&#ACKNOWLEDGEMENTS@&#

The authors would like to thank the three anonymous referees for their comments which helped improve the presentation of our work. This work was partially supported by the Research and Publications Committee of the Indian Institute of Management, Ahmedabad.

@&#REFERENCES@&#

