@&#MAIN-TITLE@&#A branch and price approach for routing and refueling station location model

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           We study the refueling station location problem with routing considerations.


                        
                        
                           
                           We propose a branch and price algorithm based on the notion of path-segments.


                        
                        
                           
                           The decrease in solution times with respect to existing works is significant.


                        
                        
                           
                           Our algorithm scales very efficiently to more realistic network dimensions.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Combinatorial optimization

Alternative fuel vehicles

Refueling station

Location

Branch and price

@&#ABSTRACT@&#


               
               
                  The deviation flow refueling location problem is to locate p refueling stations in order to maximize the flow volume that can be refueled respecting the range limitations of the alternative fuel vehicles and the shortest path deviation tolerances of the drivers. We first provide an enhanced compact model based on a combination of existing models in the literature for this relatively new operations research problem. We then extend this problem and introduce the refueling station location problem which adds the routing aspect of the individual drivers. Our proposed branch and price algorithm relaxes the simple path assumption generally adopted in the existing studies and implicitly takes into account deviation tolerances without the pregeneration of the routes. Therefore, the decrease in solution times with respect to existing models is significant and our algorithm scales very efficiently to more realistic network dimensions.
               
            

@&#INTRODUCTION@&#

Due to economic, security and environmental concerns associated with fossil fuels, the penetration of alternative fuel vehicles into the transportation network is on the rise. Alternative fuel vehicle (AFV) technologies aim at reducing the greenhouse gas emissions, the cost of transportation and the dependence on export oil. Introduction of these game-changing technologies bring about several opportunities for different players of the transportation sector. However, a widespread adoption of vehicles by the community is contingent upon the availability of refueling stations for alternative fuels. Lack of these stations is identified as one of the foremost barriers by several researchers (Bapna, Thakur, & Nair, 2002; Kuby & Lim, 2005; Melaina & Bremson, 2008; Melaina, 2003; Romm, 2006). On the other hand, establishing new refueling stations by the private sector necessitates a large number of vehicles on the road (Kuby & Lim, 2005; Melaina, 2003; 2007). This ‘chicken-egg’ problem (Kuby & Lim, 2005; Melaina, 2003; Wang & Wang, 2010) led to several studies flourish in the recent literature. Commonly assuming a government participation in the initial phase of refueling station establishment, the major concern has been to locate a given number of stations in a road network.

In the existing literature, different modeling approaches are used to locate the refueling stations. Early studies in this area (Goodchild & Noronha, 1987; Nicholas, Handy, & Sperling, 2004; Nicholas & Ogden, 2006) utilized the p-median model to minimize the sum of the travel times from the demand sites (i.e. homes) to the nearest refueling facilities. The motivation behind p-median models is that the vehicle owners usually prefer to refuel close to their homes (Kitamura & Sperling, 1987; Upchurch & Kuby, 2010). The p-median approach assumes that the demand is located at nodes. A different approach to the refueling station location problem considers path-based demand. This idea is initially presented in flow capturing location model (FCLM) by Hodgson (1990) and in flow intercepting location model (FILM) independently by Berman, Larson, and Fouska (1992). A path-based demand is considered to be ‘captured’ if the path contains a node with an open facility. In other words, a single facility is assumed to be enough to cover the whole flow on the path. The objective is to locate p facilities while capturing as much path flows as possible. Unfortunately, the single refueling stop assumption of FCLM is too restrictive to represent the real world cases in which the distance between an origin–destination (O–D) pair is larger than the range of the vehicle. This shortcoming of flow capturing approach is more severe when it comes to the AFVs which are infamous for their rather limited ranges. To handle this, Kuby and Lim (2005) introduced flow refueling location model (FRLM) that locates p refueling stations to maximize the total refueled flow volume while making sure that the vehicles never run out of fuel. Similar to FCLM, the demand is defined as a flow on the shortest path between an O–D pair. But this time, rather than a single facility, a certain set of stations enabling the round trip of the vehicle between an O–D pair is required. In other words, a ‘combination of facilities’ is needed to serve the demand so that the vehicles do not run out of fuel while traveling. In the initial phase of the two-stage solution methodology, feasible minimal combinations that can refuel the shortest path between each O–D pair are determined by a preprocessing algorithm. These combinations are given as input to a mixed integer linear programming (MILP) formulation in the second stage. In FRLM, at least a half-full tank of fuel is required at the final destination with no refueling station (Capar, Kuby, Leon, & Tsai, 2013; Kuby & Lim, 2005, 2007; Kuby, Lines, Schultz, Xie, Kim, & Lim, 2009; MirHassani & Ebrazi, 2013). This enables the vehicle to have enough fuel to complete a round trip. If a refueling station is located at the destination node, the half-full tank requirement is relaxed. This is a very realistic assumption since no AFV driver would like to reach the destination without enough fuel to visit a refueling station on the return trip. With the same reasoning, a similar assumption is made for the origin nodes. This basic FRLM formulation is extended from different aspects and some assumptions are relaxed in further studies. The objective function is modified to maximize the total vehicle-miles traveled (Kuby et al., 2009). The feasible set of candidate sites for refueling stations is extended from the node set to include the points on the arcs as possible location points by Kuby and Lim (2007). A multi-period planning for charging station infrastructure is proposed by Chung and Kwon (2015).

The FRLM requires the generation of all combinations for all the path-based demands. Thus, building the model for even medium-sized networks requires excessive time and memory. In order to overcome this drawback, Lim and Kuby (2010) propose three heuristic algorithms: greedy-adding, greedy-adding with substitution and genetic algorithm. In a similar line of efforts, a different refueling logic is embedded into the MILP model by Capar et al. (2013). The authors propose a simple, yet powerful formulation that solves the FRLM to optimality in a reasonable amount of time.

Different approaches such as set covering are also studied in the recent literature (MirHassani & Ebrazi, 2013; Wang & Lin, 2009, 2013; Wang & Wang, 2010). Rather than locating p facilities to serve the demand, a set covering approach finds the minimum-cost combination of facilities to serve all of the O–D demand pairs. MirHassani and Ebrazi (2013) approach this problem from a different perspective to increase the size of the problems that can be solved to optimality. Initially building an expanded network in which augmented arcs correspond to path segments of the shortest paths through which vehicles can bypass nodes without refueling, the need for combinations disappears. An effective mixed-integer linear programming (MILP) formulation based on the shortest path problem is provided. They do not consider flow deviation (driver preferences) and assume a fixed simple path, namely, the shortest path, between each O–D pair. With the fixed path assumption, the resulting MILP formulation can be directly solved by a commercial solver for realistic problem instances.

All of the aforementioned studies consider only a fixed number of simple paths to connect O–D pairs. Although fixing paths and using only simple paths make problems computationally tractable, they unnecessarily restrict the solution space. It is clear that considering only a small portion of all possible paths can result in a suboptimal solution. For the simple path case, consider the example depicted in Fig. 1
                     . In order to cover both demands between O–D pairs o1-d1 and o2-d2, two stations located at nodes A and C are required if we only consider simple paths. However, if non-simple paths are viable, a single refueling station located at node B would cover both demands. The presented example oversees capacity issues related to stations. Capacitated refueling stations are within the scope of recent studies such as Upchurch, Kuby, and Lim (2009b) and Jung, Chow, Jayakrishnan, and Park (2014). Though not within our scope, the flexibility provided by non-simple paths might prove useful in capacitated networks as well.

In the context of AFV routing, several studies flourished in the recent literature (Arslan, Yıldız, & Karaşan, 2014b; Artmeier, Haselmayr, Leucker, & Sachenbacher, 2010; Bektaş & Laporte, 2011; Erdoğan & Miller-Hooks, 2012; Schneider, Stenger, & Goeke, 2014). These studies consider routing of AFVs including electric vehicles. Kuby, Araz, Palmer, and Capar (2014) also provide a decision-support tool for finding the shortest feasible path in a road network given the vehicle’s driving range and station locations. However, there are very few studies in the refueling station location literature that incorporate the driver preferences into the location decisions. The effects of driver preferences such as deviating from the shortest paths is a significant factor on travel costs (Arslan, Yıldız, & Karaşan, 2014a). In this context, Kim and Kuby (2012) study simple-path deviations (i.e. cycles are excluded) from the shortest paths. The deviations are calculated by a k-shortest path algorithm before the model is solved until a predefined user tolerance deviation is reached. The deviation is defined as the percentage difference of the selected route and the shortest path. Similar to FRLM, the preprocessing time in this deviation flow refueling location model (DFRLM) is excessive when deviations are considered. Therefore Kim and Kuby (2013) propose a network transformation heuristic to solve realistic-sized problems. This transformation does allow for limited non-simple paths in the form of single cycles either at the start or end of the path. Huang, Li, and Qian (2015) also relax the commonly adopted assumption that travelers only take a shortest path between any O–D pair and study the multipath refueling location model, in which multiple deviation paths between O–D pairs can be simultaneously utilized.

In a similar context, routing is considered in a recent study by Kang and Recker (2014). In order to account for the routing decisions of the drivers, household activity pattern problem (HAPP) (Recker, 1995) is used, which is a variation of the pickup and delivery problem with time windows. The authors consider the routing decisions of the individuals in a metropolitan area and simultaneously optimize the scheduling and routing decisions of the households as well as the location of the refueling stations. The limited range of the vehicles is not considered in this study. Instead, it is presumed that each household visits a refueling station once in a day either on the way to another activity or as a single trip.

In this paper, we study the refueling station location problem with routing considerations as a generalization of the DFRLM by Kim and Kuby (2012) and propose a branch and price algorithm as an exact solution methodology. The methodology combines existing ideas from the literature such as avoiding the explicit pregeneration of the routes and adding the flexibility of the non-simple paths in a novel manner by incorporating a path-segment based expanded network. Our unifying solution approach can also handle multiple vehicle types. We conduct extensive numerical experiments to solve this theoretically challenging and practically important problem. Our contributions to the existing literature are as follows:

                           
                              •
                              We bring different state-of-the-art models in the literature together to enhance the solution of DFRLM and show that the solution times decrease dramatically.

We introduce the refueling location station problem with routing (RSLP-R) that generalizes DFRLM to handle the non-simple path deviations from the shortest path and present its complexity status.

We propose a branch and price algorithm for solving the RSLP-R. The solution time decrease is significant with respect to the original DFRLM model. Moreover, because the algorithm does not require the explicit enumeration of paths, it scales very well to more realistic network dimensions.

In Section 2, we unify the state-of-the-art models to improve the solution efficiency of DFRLM. In Section 3, we present RSLP-R, provide its complexity status and detail our proposed branch and price methodology. In Section 4, an extensive computational study is conducted to attest the computational efficiency of the enhanced DFRLM as well as the proposed branch and price methodology. Section 5 concludes the study.

In this part, we present two enhancements to improve the solution time of the DFRLM: the first one in the modeling logic and the second one in the data generation algorithm. The parameters and variables to be used in the formulations in this section are presented in Table 1.

The original FRLM presented by Kuby and Lim (2005) considers shortest path trips between each O–D pair. Since there is only one path for each O–D pair, the r subscript is dropped from the parameters and variables in the following FRLM formulation:

                           
                              (1)
                              
                                 
                                    
                                       
                                          
                                             maximize
                                             
                                             
                                                ∑
                                                
                                                   q
                                                   ∈
                                                   Q
                                                
                                             
                                             
                                                f
                                                q
                                             
                                             
                                                y
                                                q
                                             
                                          
                                       
                                       
                                    
                                 
                              
                           
                        
                        
                           
                              (2)
                              
                                 
                                    
                                       
                                          
                                             subject
                                             
                                             to
                                             
                                          
                                       
                                       
                                          
                                             
                                                ∑
                                                
                                                   
                                                      
                                                         
                                                            h
                                                            ∈
                                                            
                                                               H
                                                               q
                                                            
                                                         
                                                      
                                                   
                                                
                                             
                                             
                                                v
                                                h
                                             
                                             ≥
                                             
                                                y
                                                q
                                             
                                             
                                             ∀
                                             q
                                             ∈
                                             Q
                                          
                                       
                                    
                                 
                              
                           
                        
                        
                           
                              (3)
                              
                                 
                                    
                                       
                                          
                                             
                                                x
                                                k
                                             
                                             ≥
                                             
                                                v
                                                h
                                             
                                             
                                             ∀
                                             h
                                             ∈
                                             H
                                             ,
                                             k
                                             ∈
                                             
                                                K
                                                h
                                             
                                          
                                       
                                    
                                 
                              
                           
                        
                        
                           
                              (4)
                              
                                 
                                    
                                       
                                          
                                             
                                                ∑
                                                
                                                   
                                                      
                                                         
                                                            k
                                                            ∈
                                                            K
                                                         
                                                      
                                                   
                                                
                                             
                                             
                                                x
                                                k
                                             
                                             =
                                             p
                                          
                                       
                                    
                                 
                              
                           
                        
                        
                           
                              (5)
                              
                                 
                                    
                                       
                                          
                                             
                                                x
                                                k
                                             
                                             ,
                                             
                                                y
                                                q
                                             
                                             ,
                                             
                                                v
                                                h
                                             
                                             ∈
                                             
                                                {
                                                0
                                                ,
                                                1
                                                }
                                             
                                             
                                             ∀
                                             k
                                             ∈
                                             K
                                             ,
                                             q
                                             ∈
                                             Q
                                             ,
                                             h
                                             ∈
                                             H
                                          
                                       
                                    
                                 
                              
                           
                        
                     

The objective function maximizes the total flow refueled. Constraints (2) ensure that a path-based demand is satisfied only when a combination that can refuel the demand is selected. Constraints (3) ensure that whenever a combination is selected all the facilities in it are opened. Constraint (4) limits the number of facilities to be opened to p. Constraints (5) are the domain requirements. In FRLM, a shortest path for each O–D pair is considered as a demand. In the preprocessing phase, all of the facility combinations that can refuel these paths are generated. As previously mentioned, generation of these combinations require extensive amount of time, especially when the path is much longer with respect to the range of the vehicle. Capar et al. (2013) presented a different modeling logic that reduces not only the preprocessing times but also the model solution times. Without generating the feasible combinations for each path, this new logic models the ‘refuelability’ of the arcs. Instead of the Constraints (2) and (3) that enforce the refueling logic in the original model, the following constraints are added to the new formulation

                           
                              (6)
                              
                                 
                                    
                                       
                                          
                                             
                                                ∑
                                                
                                                   
                                                      
                                                         
                                                            i
                                                            ∈
                                                            
                                                               K
                                                               
                                                                  j
                                                                  ,
                                                                  k
                                                               
                                                               q
                                                            
                                                         
                                                      
                                                   
                                                
                                             
                                             
                                                x
                                                i
                                             
                                             ≥
                                             
                                                y
                                                q
                                             
                                             
                                             ∀
                                             q
                                             ∈
                                             Q
                                             ,
                                             
                                                (
                                                j
                                                ,
                                                k
                                                )
                                             
                                             ∈
                                             
                                                A
                                                q
                                             
                                          
                                       
                                    
                                 
                              
                           
                        
                     

where 
                           
                              K
                              
                                 j
                                 ,
                                 k
                              
                              q
                           
                         is the set of candidate sites that can refuel the directional arc (j, k) ∈ Aq
                         for the round trip between O–D pair q. This new set of constraints ensure that each arc on a given path is traversable by refueling at any of the possible candidate sites. Thus, rather than generating all feasible combinations for a given path, each arc on every path is processed once to make sure that it is traversable. Even though the new formulation also has a preprocessing part to generate the 
                           
                              K
                              
                                 j
                                 ,
                                 k
                              
                              q
                           
                         sets, generation is much faster especially for large networks.

The modeling logic extension to FRLM can also be applied to the deviation flow refueling location model (DFRLM) of Kim and Kuby (2012) which is presented below

                           
                              (7)
                              
                                 
                                    
                                       
                                          
                                             maximize
                                             
                                             
                                                ∑
                                                
                                                   q
                                                   ∈
                                                   Q
                                                
                                             
                                             
                                                ∑
                                                
                                                   r
                                                   ∈
                                                   
                                                      R
                                                      q
                                                   
                                                
                                             
                                             
                                                f
                                                q
                                             
                                             
                                                g
                                                
                                                   q
                                                   r
                                                
                                             
                                             
                                                y
                                                
                                                   q
                                                   r
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           
                        
                        
                           
                              (8)
                              
                                 
                                    
                                       
                                          
                                             subject
                                             
                                             to
                                             
                                             
                                                ∑
                                                
                                                   
                                                      
                                                         
                                                            r
                                                            ∈
                                                            
                                                               R
                                                               q
                                                            
                                                         
                                                      
                                                   
                                                
                                             
                                             
                                                y
                                                
                                                   q
                                                   r
                                                
                                             
                                             ≤
                                             1
                                             
                                             ∀
                                             q
                                             ∈
                                             Q
                                          
                                       
                                    
                                 
                              
                           
                        
                        
                           
                              (9)
                              
                                 
                                    
                                       
                                          
                                             
                                                ∑
                                                
                                                   
                                                      
                                                         
                                                            h
                                                            ∈
                                                            
                                                               H
                                                               
                                                                  q
                                                                  r
                                                               
                                                            
                                                         
                                                      
                                                   
                                                
                                             
                                             
                                                v
                                                h
                                             
                                             ≥
                                             
                                                y
                                                
                                                   q
                                                   r
                                                
                                             
                                             
                                             ∀
                                             q
                                             ∈
                                             Q
                                             ,
                                             r
                                             ∈
                                             
                                                R
                                                q
                                             
                                          
                                       
                                    
                                 
                              
                           
                        
                        
                           
                              (10)
                              
                                 
                                    
                                       
                                          
                                             
                                                x
                                                k
                                             
                                             ≥
                                             
                                                v
                                                h
                                             
                                             
                                             ∀
                                             h
                                             ∈
                                             H
                                             ,
                                             k
                                             ∈
                                             
                                                K
                                                h
                                             
                                          
                                       
                                    
                                 
                              
                           
                        
                        
                           
                              (11)
                              
                                 
                                    
                                       
                                       
                                          
                                             
                                                ∑
                                                
                                                   
                                                      
                                                         
                                                            k
                                                            ∈
                                                            K
                                                         
                                                      
                                                   
                                                
                                             
                                             
                                                x
                                                k
                                             
                                             =
                                             p
                                          
                                       
                                       
                                    
                                 
                              
                           
                        
                        
                           
                              (12)
                              
                                 
                                    
                                       
                                          
                                             
                                                x
                                                k
                                             
                                             ,
                                             
                                                y
                                                
                                                   q
                                                   r
                                                
                                             
                                             ,
                                             
                                                v
                                                h
                                             
                                             ∈
                                             
                                                {
                                                0
                                                ,
                                                1
                                                }
                                             
                                             
                                             ∀
                                             k
                                             ∈
                                             K
                                             ,
                                             q
                                             ∈
                                             Q
                                             ,
                                             h
                                             ∈
                                             H
                                             ,
                                             r
                                             ∈
                                             
                                                R
                                                q
                                             
                                          
                                       
                                    
                                 
                              
                           
                        
                     

In DFRLM model, the original FRLM model by Kuby and Lim (2005) is modified to account for the deviations. A new subscript r is introduced to refer to the path alternative of the path-based demand q. The model incorporates demand decays as a function of deviation percentage from the shortest path. The parameter gqr
                         in the objective function is the fraction of drivers traveling between O–D pair q who are willing to take alternative path r. It equals to 1 for the shortest paths, and changes in a nondecreasing fashion with respect to increasing deviation distance of the alternative paths. Due to the nature of the objective function, the shorter alternative is selected among the possible set of alternative paths between an O–D pair. In other words, the flow with the highest possible fractional value contributes to the objective function. Constraints (8) ensure that at most one of the alternative paths between an O–D pair can be selected to prevent double-counting.

Observe that, similar to the study by Capar et al. (2013), Constraints (9) and (10) can be replaced by the following constraints to handle the model more efficiently

                           
                              (13)
                              
                                 
                                    
                                       
                                          
                                             
                                                ∑
                                                
                                                   
                                                      
                                                         
                                                            i
                                                            ∈
                                                            
                                                               K
                                                               
                                                                  j
                                                                  ,
                                                                  k
                                                               
                                                               
                                                                  q
                                                                  r
                                                               
                                                            
                                                         
                                                      
                                                   
                                                
                                             
                                             
                                                x
                                                i
                                             
                                             ≥
                                             
                                                y
                                                
                                                   q
                                                   r
                                                
                                             
                                             
                                             ∀
                                             q
                                             ∈
                                             Q
                                             ,
                                             
                                                (
                                                j
                                                ,
                                                k
                                                )
                                             
                                             ∈
                                             
                                                A
                                                q
                                             
                                             ,
                                             r
                                             ∈
                                             
                                                R
                                                q
                                             
                                          
                                       
                                    
                                 
                              
                           
                        
                     

Next, we deal with the preprocessing part of these models.

The DFRLM model considers an upper-limit on the driver tolerance as a fraction of the shortest path distance. Therefore, besides generating data for combinations, it also generates all of the paths up to a predefined distance. In order to enumerate these paths, the authors propose to solve k-shortest paths algorithm, starting at k = 1 and increasing it one by one until the path distance exceeds the driver’s tolerance. Observe that generating these paths requires excessive amount of time and amounts to a big portion of the data preparation. However, more efficient algorithms such as ‘algorithm for loopless paths near shortest path’ (ANSPR0) algorithm by Carlyle and Wood (2005) exist in the literature to enumerate the paths up to a predefined distance value. Rather than solving the k-shortest paths for several times and keeping a sorted list of paths, the ANSPR0 algorithm processes arcs in a depth-first-search fashion and outputs a path if its length is less than or equal to the predefined distance. As it will be presented in the computational study section, this approach effectively reduces the preprocessing time of the model in orders of magnitude.

Within DFRLM context, it is typically assumed that the demand decays by increasing deviation from the shortest distance. In their study, Kim and Kuby (2012) define the decay as a function of the deviation. In a recent study, Kuby, Kelley, and Schoenemann (2013) report empirical data for deviation decay in the city of Los Angeles. We assume, for each potential deviation path alternative, that we have an associated penalty coefficient originating from an underlying demand decay model. Our proposed RSLP-R model, unlike current DFRLM studies in the literature, does not take as input a given set of alternative paths for a specific O–D pair. As such, in order to incorporate the penalty associated with a potential deviation path alternative, we transform the input data associated with the underlying demand decay model as follows: Consider a specific q ∈ Q with m potential deviation path alternatives, and let 
                           
                              
                                 g
                                 
                                    q
                                    1
                                 
                              
                              ≥
                              
                                 g
                                 
                                    q
                                    2
                                 
                              
                              ≥
                              ⋯
                              ≥
                              
                                 g
                                 
                                    q
                                    m
                                 
                              
                           
                         be the associated penalty coefficients. We can represent this particular O–D pair with m copies of it, say q
                        1,…, qm
                         originating from the same source and terminating in the same destination where 
                           
                              
                                 f
                                 
                                    q
                                    i
                                 
                              
                              =
                              
                                 f
                                 q
                              
                              ×
                              
                                 (
                                 
                                    g
                                    
                                       q
                                       i
                                    
                                 
                                 −
                                 
                                    g
                                    
                                       q
                                       
                                          i
                                          +
                                          1
                                       
                                    
                                 
                                 )
                              
                              ,
                              
                              ∀
                              i
                              <
                              m
                           
                         and 
                           
                              
                                 f
                                 
                                    q
                                    m
                                 
                              
                              =
                              
                                 f
                                 q
                              
                              ×
                              
                                 g
                                 
                                    q
                                    m
                                 
                              
                           
                        . Observe that, with this transformation, the same percentage of flow will be refueled as the original model. In particular, if the alternative path rth is refueled in the DFRLM model, then with this transformation, demands qr
                        …qm
                         will all be refueled. Thus, the cumulative flow equals to 
                           
                              
                                 ∑
                                 
                                    i
                                    =
                                    r
                                 
                                 m
                              
                              
                                 
                                    (
                                 
                                 
                                    f
                                    q
                                 
                                 
                                    ×
                                    (
                                 
                                 
                                    g
                                    
                                       q
                                       i
                                    
                                 
                                 −
                                 
                                    g
                                    
                                       q
                                       
                                          i
                                          +
                                          1
                                       
                                    
                                 
                              
                              
                                 )
                                 )
                              
                           
                         = fq
                         × gqr
                        .

With the above enhancements and modifications to the DFRLM model, we now propose the following DFRLM-E model that solves the same problem as DFRLM more efficiently. Note that the required path enumeration for the DFRLM-E is performed by the ANSPR0 algorithm by Carlyle and Wood (2005).

                           
                              (14)
                              
                                 
                                    
                                       
                                          
                                             maximize
                                             
                                             
                                                ∑
                                                
                                                   q
                                                   ∈
                                                   Q
                                                
                                             
                                             
                                                ∑
                                                
                                                   r
                                                   ∈
                                                   
                                                      R
                                                      q
                                                   
                                                
                                             
                                             
                                                f
                                                q
                                             
                                             
                                                y
                                                
                                                   q
                                                   r
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           
                        
                        
                           
                              (15)
                              
                                 
                                    
                                       
                                          
                                             subject
                                             
                                             to
                                             
                                             
                                                ∑
                                                
                                                   
                                                      
                                                         
                                                            r
                                                            ∈
                                                            
                                                               R
                                                               q
                                                            
                                                         
                                                      
                                                   
                                                
                                             
                                             
                                                y
                                                
                                                   q
                                                   r
                                                
                                             
                                             ≤
                                             1
                                             
                                             ∀
                                             q
                                             ∈
                                             Q
                                          
                                       
                                    
                                 
                              
                           
                        
                        
                           
                              (16)
                              
                                 
                                    
                                       
                                          
                                             
                                                ∑
                                                
                                                   
                                                      
                                                         
                                                            i
                                                            ∈
                                                            
                                                               K
                                                               
                                                                  j
                                                                  ,
                                                                  k
                                                               
                                                               
                                                                  q
                                                                  r
                                                               
                                                            
                                                         
                                                      
                                                   
                                                
                                             
                                             
                                                x
                                                i
                                             
                                             ≥
                                             
                                                y
                                                
                                                   q
                                                   r
                                                
                                             
                                             
                                             ∀
                                             q
                                             ∈
                                             Q
                                             ,
                                             
                                                (
                                                j
                                                ,
                                                k
                                                )
                                             
                                             ∈
                                             
                                                A
                                                q
                                             
                                             ,
                                             r
                                             ∈
                                             
                                                R
                                                q
                                             
                                          
                                       
                                    
                                 
                              
                           
                        
                        
                           
                              (17)
                              
                                 
                                    
                                       
                                          
                                             
                                                ∑
                                                
                                                   
                                                      
                                                         
                                                            k
                                                            ∈
                                                            K
                                                         
                                                      
                                                   
                                                
                                             
                                             
                                                x
                                                k
                                             
                                             =
                                             p
                                          
                                       
                                    
                                 
                              
                           
                        
                        
                           
                              (18)
                              
                                 
                                    
                                       
                                          
                                             
                                                x
                                                k
                                             
                                             ,
                                             
                                                y
                                                
                                                   q
                                                   r
                                                
                                             
                                             ∈
                                             
                                                {
                                                0
                                                ,
                                                1
                                                }
                                             
                                             
                                             ∀
                                             k
                                             ∈
                                             K
                                             ,
                                             ∀
                                             q
                                             ∈
                                             Q
                                             ,
                                             r
                                             ∈
                                             
                                                R
                                                q
                                             
                                          
                                       
                                    
                                 
                              
                           
                        
                     

In the computational study section, we present results showing that the solution times of the extended model are much faster than those of the classical one.

In this section we formally define the refueling station location problem with routing (RSLP-R).

An AFV trip has three components: vehicle, O–D pair and driver. For each trip, the fuel range (the maximum distance to be covered with a full fuel tank) is a function of vehicle specifications, the O–D pair indicates where the trip starts and ends and the driver preference determines how much extra driving can be tolerated by this driver. From a macroscopic view, those trips with the same vehicle, O–D pair and driver preference can be considered a single group which we call as a demand. The flow volume of a demand is given proportional to the amount of AFV trips. For each demand there is an associated traffic volume which is a function of the number of AFV trips in the considered time interval. Following the convention established in the literature, we assume that all the alternative fuel vehicle trips start with half full tank so that the driver can return on the same trip to the same station the next day with at least half full tank. A path is considered to be feasible for a given demand if it satisfies the following three conditions:

                           
                              •
                              It starts from the origin and ends in the destination node,

There are enough refueling stations positioned on the path such that it is possible to travel without running out of fuel and arrive to the destination with at least half full fuel tank,

Its length is not more than the threshold value that the AFV driver can tolerate.

A given demand is considered to be refueled if the designed station deployments enable a feasible path for it. In RSLP-R, the objective is to find the locations of a fixed number of refueling stations in the network such that the total volume of the refueled demand is maximized.

We now provide some basic notation. We assume the underlying physical network is represented by a weighted undirected graph with node set N = {1, 2, 3, … n} and edge set E where each edge can be traversed in either direction and thus the refueling stations to be located are dual accessible. Corresponding to our physical network instance, we construct a directed weighted graph G = (N, A) where A = {(i, j)∪(j, i): {i, j} ∈ E} and the length of each arc a ∈ A is l(a) ≥ 0 which is equal to the length of its corresponding edge.

Let O, W⊆N be the sets of origin and destination nodes, respectively. We define the expanded network 
                           
                              
                                 G
                                 ¯
                              
                              =
                              
                                 (
                                 
                                    N
                                    ¯
                                 
                                 ,
                                 
                                    A
                                    ¯
                                 
                                 )
                              
                           
                         where:

                           
                              •
                              
                                 
                                    
                                       N
                                       ¯
                                    
                                  contains nodes 
                                    
                                       i
                                       ¯
                                    
                                  for all i ∈ O and 
                                    
                                       j
                                       ¯
                                    
                                  for all j ∈ W in addition to the original set of nodes N.


                                 
                                    
                                       A
                                       ¯
                                    
                                  consists of all the arcs in A plus the zero-length arcs 
                                    
                                       (
                                       
                                          i
                                          ¯
                                       
                                       ,
                                       i
                                       )
                                    
                                  for all i ∈ O and 
                                    
                                       (
                                       j
                                       ,
                                       
                                          j
                                          ¯
                                       
                                       )
                                    
                                  for all j ∈ W.

Between two nodes 
                           
                              s
                              ,
                              t
                              ∈
                              
                                 N
                                 ¯
                              
                              ,
                           
                         the shortest distance in 
                           
                              G
                              ¯
                           
                         is denoted by 
                           
                              δ
                              
                                 s
                                 ,
                                 t
                              
                              ☆
                           
                        .

We define M as the set of vehicle types. The range of a vehicle μ ∈ M is denoted by r(μ). A demand q is a five tuple 
                           
                              〈
                              
                                 m
                                 q
                              
                              ,
                              S
                              
                                 (
                                 q
                                 )
                              
                              ,
                              T
                              
                                 (
                                 q
                                 )
                              
                              ,
                              
                                 λ
                                 q
                              
                              ,
                              
                                 f
                                 q
                              
                              〉
                              ,
                           
                         where mq
                         ∈ M is the vehicle type and 
                           
                              S
                              
                                 (
                                 q
                                 )
                              
                              =
                              
                                 i
                                 ¯
                              
                           
                         and 
                           
                              T
                              
                                 (
                                 q
                                 )
                              
                              =
                              
                                 j
                                 ¯
                              
                           
                         are the artificial origin and destination nodes associated with the O–D pair i ∈ O, j ∈ W. λq
                         ≥ 0 represents the maximum distance that the driver would accept to travel and fq
                         is the flow volume. The set of demands is denoted by Q.

A directed path is an alternating sequence of nodes and arcs (n
                        0, a
                        1, n
                        1, a
                        2, n
                        2, …, aη, nη
                        ) with 
                           
                              
                                 n
                                 i
                              
                              ∈
                              
                                 N
                                 ¯
                              
                              ,
                              ∀
                              i
                              =
                              0
                              ,
                              ⋯
                              ,
                              η
                           
                         and 
                           
                              
                                 a
                                 i
                              
                              =
                              
                                 (
                                 
                                    n
                                    
                                       i
                                       −
                                       1
                                    
                                 
                                 ,
                                 
                                    n
                                    i
                                 
                                 )
                              
                              ∈
                              
                                 A
                                 ¯
                              
                              ,
                              ∀
                              i
                              =
                              1
                              ,
                              ⋯
                              ,
                              η
                           
                        . A path is non-simple if it repeats nodes and is simple otherwise. Our formulation depends on the notion of path-segments introduced by Yıldız and Karasan (2014). Note that the idea of generating an artificial and reduced network among a fixed set of refueling locations where an edge is induced by a vehicle range dates back to a sequence of studies (including but perhaps not limited to Adler, Mirchandani, Xue, and Xia (2014); Khuller, Malekian, and Mestre (2007); Kim and Kuby (2013); Kuby et al. (2014); Lin, Gertsch, and Russell (2007); Soedarmadji and McEliece (2007); Suzuki (2008)). However, since the refueling locations are not fixed in our case, our path-segments are more flexible. In the particular case in which they correspond to shortest paths of the original network, they coincide with the MirHassani and Ebrazi (2013) definition given for fixed paths. In particular, a path-segment π is a directed simple path in 
                           
                              G
                              ¯
                           
                         with an associated demand d(π) ∈ Q. We denote the source and destination nodes of a path-segment π as s(π) and t(π), respectively. The length of a path-segment is the sum of the lengths of the arcs on this segment and is denoted by l(π). In our formulations, we only consider path-segments with total length less than the range of the vehicle type associated with it and call such path-segments feasible. More formally, a path-segment π is feasible if l(π) ≤ r(m
                        
                           d(π)). We define Πq
                         as the set of all those feasible-path-segments for a demand q ∈ Q and denote the set of all the feasible path segments as Π, i.e., Π = ∪
                           q ∈ Q
                        
                        Πq
                        .

Using the same definitions and notation with Yıldız and Karasan (2014), a trip Φ = (π
                        1…, πk
                        ) is an ordered union of feasible path-segments πi, i ∈ 1, …, k where t(πi
                        ) = s(π
                        
                           i + 1), ∀i = 1, …, k − 1. We call a trip feasible for a demand q ∈ Q, if 
                           
                              s
                              
                                 (
                                 
                                    π
                                    1
                                 
                                 )
                              
                              =
                              S
                              
                                 (
                                 q
                                 )
                              
                              ,
                              t
                              
                                 (
                                 
                                    π
                                    k
                                 
                                 )
                              
                              =
                              T
                              
                                 (
                                 q
                                 )
                              
                              ,
                           
                         
                        l(Φ) = ∑
                           i ∈ 1, …, k
                        
                        l(πi
                        ) ≤ λq
                         and a refueling station is located at t(πi
                        ), ∀i = 1, …, k − 1. We say an arc a ∈ π if a is an arc on path-segment π. Similarly for a trip Φ, we say π ∈ Φ if π is a path-segment of Φ.

For a given node set P⊆N, let 
                           
                              
                                 
                                    Q
                                    ¯
                                 
                                 P
                              
                              ⊆
                              Q
                           
                         be the set of demands for which there exists a feasible trip in 
                           
                              G
                              ¯
                           
                         when a refueling station is located at every node in P. Then, RSLP-R can be formally stated as follows:

                           Definition 1
                           The refueling station location problem with routing (RSLP-R) is defined as finding a set P
                              *⊆N with cardinality at most p such that the total amount of flow refueled 
                                 
                                    
                                       ∑
                                       
                                          q
                                          ∈
                                          
                                             
                                                Q
                                                ¯
                                             
                                             
                                                P
                                                *
                                             
                                          
                                       
                                    
                                    
                                       f
                                       q
                                    
                                 
                               is maximized.


                              RSLP-R is NP-Complete.
                           

Observe that for a given RSLP-R problem instance, the feasibility can be checked in polynomial time. In order to show that RSLP-R is NP-Complete, we now provide a transformation from the maximal covering location problem (MCLP) (Church & ReVelle, 1974) which is also NP-Complete (Megiddo, Zemel, & Hakimi, 1983). The MCLP is defined as selecting a combination of candidate facilities, with a cardinality less than or equal to p, such that the maximum demand is covered by the selected facilities. The parameters are the customers, i ∈ I, with a demand hi
                              ; the facilities, j ∈ J; binary parameters aij
                               to define the coverage of customer i ∈ I by candidate facility j ∈ J; and a fixed number p. For this MCLP instance, we now build a graph as input to RCLP-R using the following polynomial-time transformation. For each candidate facility j ∈ J, add a node j. For each demand i ∈ I with aij
                               = 1, add two nodes io
                               and id
                               that represent an O–D pair q with a flow of hi
                              . Add the arcs (io, j) and (j, id
                              ) to the graph, both with a length of 1 unit. Consider the corresponding RSLP-R instance with a driver tolerance equal to 1, and a vehicle range of 2 units. Observe that solving this RSLP-R instance is equivalent to solving the corresponding MCLP instance. Thus, RSLP-R is NP-Complete.□

In this subsection we present the path-segment formulation PS for RLSP-R and provide the details of the proposed branch and price algorithm to solve it. Recall that refueling a demand q requires to find a trip Φ = (π
                        1…, πk
                        ) such that a refueling station is located at the end of each path-segment π ∈ Φ∖{πk
                        } where 
                           
                              t
                              
                                 (
                                 
                                    π
                                    k
                                 
                                 )
                              
                              =
                              T
                              
                                 (
                                 q
                                 )
                              
                           
                        . As such, our path-segment formulation admits a very natural representation of vehicle refueling constraints. Since there is no refueling at the interval nodes of a path-segment, it is always best to choose the shortest path among all the path segments between two nodes for the RSLP-R problem. Thus, we only need to consider the shortest path between two nodes as a path-segment. This core property is also considered by MirHassani and Ebrazi (2013) to represent refueling constraints for a vehicle traveling on a fixed path. Our methodology generalizes this approach to the whole network to relax the fixed simple path assumption.

We define the following decision variables.

                           
                              
                                 
                                    
                                       
                                       
                                          
                                             
                                                y
                                                q
                                             
                                             =
                                             
                                                {
                                                
                                                   
                                                      
                                                         
                                                            1
                                                            ,
                                                         
                                                      
                                                      
                                                         
                                                            if
                                                            
                                                            a
                                                            
                                                            feasible
                                                            
                                                            trip
                                                            
                                                            is
                                                            
                                                            built
                                                            
                                                            for
                                                            
                                                            the
                                                            
                                                            demand
                                                            
                                                            q
                                                            ∈
                                                            Q
                                                         
                                                      
                                                   
                                                   
                                                      
                                                         
                                                            0
                                                            ,
                                                         
                                                      
                                                      
                                                         otherwise,
                                                      
                                                   
                                                
                                             
                                          
                                       
                                    
                                    
                                       
                                       
                                          
                                             
                                                x
                                                i
                                             
                                             =
                                             
                                                {
                                                
                                                   
                                                      
                                                         
                                                            1
                                                            ,
                                                         
                                                      
                                                      
                                                         
                                                            if
                                                            
                                                            there
                                                            
                                                            is
                                                            
                                                            a
                                                            
                                                            refueling
                                                            
                                                            station
                                                            
                                                            located
                                                            
                                                            at
                                                            
                                                            node
                                                            
                                                            i
                                                            ∈
                                                            N
                                                         
                                                      
                                                   
                                                   
                                                      
                                                         
                                                            0
                                                            ,
                                                         
                                                      
                                                      
                                                         otherwise,
                                                      
                                                   
                                                
                                             
                                          
                                       
                                    
                                    
                                       
                                       
                                          
                                             
                                                v
                                                
                                                   π
                                                
                                                q
                                             
                                             =
                                             
                                                {
                                                
                                                   
                                                      
                                                         
                                                            1
                                                            ,
                                                         
                                                      
                                                      
                                                         
                                                            if
                                                            
                                                            demand
                                                            
                                                            q
                                                            ∈
                                                            Q
                                                            
                                                            uses
                                                            
                                                            path-segment
                                                            
                                                            π
                                                         
                                                      
                                                   
                                                   
                                                      
                                                         
                                                            0
                                                            ,
                                                         
                                                      
                                                      
                                                         otherwise,
                                                      
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           
                        We call yq, q ∈ Q as the cover variables, xi, i ∈ N as the location variables and 
                           
                              
                                 v
                                 
                                    π
                                 
                                 q
                              
                              ,
                              q
                              ∈
                              Q
                              ,
                              π
                              ∈
                              Π
                           
                         as the path-segment variables. With these decision variables, PS can be stated as follows:

                           
                              (19)
                              
                                 
                                    
                                       
                                          
                                             max
                                             
                                                ∑
                                                
                                                   q
                                                   ∈
                                                   Q
                                                
                                             
                                             
                                                f
                                                q
                                             
                                             
                                                y
                                                q
                                             
                                          
                                       
                                       
                                    
                                 
                              
                           
                        
                        
                           
                              (20)
                              
                                 
                                    
                                       
                                          
                                             s.t.
                                             
                                          
                                       
                                       
                                          
                                             
                                                ∑
                                                
                                                   
                                                      
                                                         
                                                            π
                                                            ∈
                                                            
                                                               Π
                                                               q
                                                            
                                                            ,
                                                         
                                                      
                                                   
                                                   
                                                      
                                                         
                                                            s
                                                            (
                                                            π
                                                            )
                                                            =
                                                            i
                                                         
                                                      
                                                   
                                                
                                             
                                             
                                                v
                                                
                                                   π
                                                
                                                q
                                             
                                             −
                                             
                                                ∑
                                                
                                                   
                                                      
                                                         
                                                            π
                                                            ∈
                                                            
                                                               Π
                                                               q
                                                            
                                                            ,
                                                         
                                                      
                                                   
                                                   
                                                      
                                                         
                                                            t
                                                            (
                                                            π
                                                            )
                                                            =
                                                            i
                                                         
                                                      
                                                   
                                                
                                             
                                             
                                                v
                                                
                                                   π
                                                
                                                q
                                             
                                             =
                                             
                                                {
                                                
                                                   
                                                      
                                                         
                                                            
                                                               y
                                                               q
                                                            
                                                            ,
                                                         
                                                      
                                                      
                                                         
                                                            if
                                                            
                                                            i
                                                            =
                                                            S
                                                            (
                                                            q
                                                            )
                                                         
                                                      
                                                   
                                                   
                                                      
                                                         
                                                            −
                                                            
                                                               y
                                                               q
                                                            
                                                            ,
                                                         
                                                      
                                                      
                                                         
                                                            if
                                                            
                                                            i
                                                            =
                                                            T
                                                            (
                                                            q
                                                            )
                                                         
                                                      
                                                   
                                                   
                                                      
                                                         
                                                            
                                                            0
                                                            ,
                                                         
                                                      
                                                      
                                                         otherwise
                                                      
                                                   
                                                
                                             
                                          
                                       
                                       
                                       
                                          
                                             ∀
                                             i
                                             ∈
                                             
                                                N
                                                ¯
                                             
                                             ,
                                             q
                                             ∈
                                             Q
                                             ,
                                          
                                       
                                    
                                 
                              
                           
                        
                        
                           
                              (21)
                              
                                 
                                    
                                       
                                          
                                             
                                                ∑
                                                
                                                   
                                                      
                                                         
                                                            π
                                                            ∈
                                                            
                                                               Π
                                                               q
                                                            
                                                         
                                                      
                                                   
                                                
                                             
                                             l
                                             
                                                (
                                                π
                                                )
                                             
                                             
                                                v
                                                
                                                   π
                                                
                                                q
                                             
                                             ≤
                                             
                                                λ
                                                q
                                             
                                             
                                             ∀
                                             q
                                             ∈
                                             Q
                                             ,
                                          
                                       
                                    
                                 
                              
                           
                        
                        
                           
                              (22)
                              
                                 
                                    
                                       
                                          
                                             
                                                ∑
                                                
                                                   
                                                      
                                                         
                                                            π
                                                            ∈
                                                            
                                                               Π
                                                               q
                                                            
                                                            :
                                                         
                                                      
                                                   
                                                   
                                                      
                                                         
                                                            t
                                                            (
                                                            π
                                                            )
                                                            =
                                                            i
                                                         
                                                      
                                                   
                                                
                                             
                                             
                                                v
                                                
                                                   π
                                                
                                                q
                                             
                                             ≤
                                             
                                                x
                                                i
                                             
                                             
                                             ∀
                                             q
                                             ∈
                                             Q
                                             ,
                                             i
                                             ∈
                                             N
                                          
                                       
                                    
                                 
                              
                           
                        
                        
                           
                              (23)
                              
                                 
                                    
                                       
                                          
                                             
                                                ∑
                                                
                                                   i
                                                   ∈
                                                   N
                                                
                                             
                                             
                                                x
                                                i
                                             
                                             ≤
                                             p
                                          
                                       
                                    
                                 
                              
                           
                        
                        
                           
                              (24)
                              
                                 
                                    
                                       
                                          
                                             
                                                y
                                                q
                                             
                                             ∈
                                             
                                                {
                                                0
                                                ,
                                                1
                                                }
                                             
                                             
                                             ∀
                                             q
                                             ∈
                                             Q
                                             ,
                                          
                                       
                                    
                                 
                              
                           
                        
                        
                           
                              (25)
                              
                                 
                                    
                                       
                                          
                                             
                                                x
                                                i
                                             
                                             ∈
                                             
                                                {
                                                0
                                                ,
                                                1
                                                }
                                             
                                             
                                             ∀
                                             i
                                             ∈
                                             N
                                             ,
                                          
                                       
                                    
                                 
                              
                           
                        
                        
                           
                              (26)
                              
                                 
                                    
                                       
                                          
                                             
                                                v
                                                
                                                   π
                                                
                                                q
                                             
                                             ∈
                                             
                                                {
                                                0
                                                ,
                                                1
                                                }
                                             
                                             
                                             ∀
                                             q
                                             ∈
                                             Q
                                             ,
                                             π
                                             ∈
                                             Π
                                          
                                       
                                    
                                 
                              
                           
                        
                     

The objective function (19) is the total amount of the AFV flow volume to be captured. Constraints (20) are the flow balance equations that force a chosen demand to be carried from its source to its destination (covered) by the concatenation of feasible-path-segments. Constraints (21) are the maximum deviation constraints which ensure that the total length of any AFV trip is not longer than the maximum allowed. Constraints (22) enforce fuel range requirements by ensuring refueling at the end of each feasible path-segment that does not end in the destination node of the associated demand. Constraint (23) restricts the number of refueling stations to be at most p. Constraints (24)-(26) are the domain restrictions.

In order to strengthen the given formulation we can replace constraints (21) with the following constraints:

                           
                              (27)
                              
                                 
                                    
                                       
                                          
                                             
                                                ∑
                                                
                                                   
                                                      
                                                         
                                                            π
                                                            ∈
                                                            
                                                               Π
                                                               q
                                                            
                                                         
                                                      
                                                   
                                                
                                             
                                             l
                                             
                                                (
                                                π
                                                )
                                             
                                             
                                                v
                                                
                                                   π
                                                
                                                q
                                             
                                             ≤
                                             
                                                λ
                                                q
                                             
                                             
                                             
                                                y
                                                q
                                             
                                             
                                             ∀
                                             q
                                             ∈
                                             Q
                                          
                                       
                                    
                                 
                              
                           
                        This cut is very useful when solving the PS formulation. Indeed, as we will more formally present below, integrality of the location variables is sufficient to guarantee the integrality of the cover and path-segment variables with the inclusion of this cut in the model. A similar key result is established in FRLM context in Kuby and Lim (2005). We will call this stronger formulation as 
                           
                              
                                 P
                                 S
                              
                              ¯
                           
                        . We now present our branch and price algorithm (B&P) to solve 
                           
                              
                                 P
                                 S
                              
                              ¯
                           
                        . During B&P, the column generation technique is employed to solve the linear relaxation of 
                           
                              
                                 
                                    P
                                    S
                                 
                                 ¯
                              
                              ,
                           
                         say 
                           
                              
                                 P
                                 S
                              
                              ¯
                           
                        -LP and obtain an upper bound for each node of the branch and bound tree.

Let 
                              
                                 
                                    R
                                    P
                                    S
                                 
                                 ¯
                              
                            be the restricted 
                              
                                 
                                    P
                                    S
                                 
                                 ¯
                              
                            formulation with a subset of path-segment variables 
                              
                                 v
                                 π
                                 q
                              
                           . At every iteration we determine whether there exists a column with positive reduced cost such that including it to the 
                              
                                 
                                    R
                                    P
                                    S
                                 
                                 ¯
                              
                            might improve the objective function. If such columns are detected, we add them to the 
                              
                                 
                                    R
                                    P
                                    S
                                 
                                 ¯
                              
                            and repeat the procedure until there is no column left with a positive reduced cost.

Let 
                              
                                 ρ
                                 i
                                 q
                              
                            represent the unrestricted dual variables associated with constraints (20), and κq
                            and 
                              
                                 γ
                                 i
                                 q
                              
                            be the nonnegative dual variables associated with constraints (21) and (22), respectively. For a path-segment variable 
                              
                                 
                                    v
                                    π
                                    q
                                 
                                 ,
                              
                            the reduced cost 
                              
                                 
                                    c
                                    ¯
                                 
                                 π
                                 q
                              
                            is given as

                              
                                 (28)
                                 
                                    
                                       
                                          
                                          
                                             
                                                
                                                   
                                                      c
                                                      ¯
                                                   
                                                   π
                                                   q
                                                
                                                =
                                                
                                                   {
                                                   
                                                      
                                                         
                                                            
                                                               
                                                                  ρ
                                                                  
                                                                     t
                                                                     (
                                                                     π
                                                                     )
                                                                  
                                                                  q
                                                               
                                                               −
                                                               
                                                                  ρ
                                                                  
                                                                     s
                                                                     (
                                                                     π
                                                                     )
                                                                  
                                                                  q
                                                               
                                                               −
                                                               l
                                                               
                                                                  (
                                                                  π
                                                                  )
                                                               
                                                               
                                                                  κ
                                                                  q
                                                               
                                                               ,
                                                            
                                                         
                                                         
                                                            
                                                               if
                                                               
                                                               t
                                                               (
                                                               π
                                                               )
                                                               =
                                                               T
                                                               (
                                                               q
                                                               )
                                                            
                                                         
                                                      
                                                      
                                                         
                                                            
                                                               
                                                                  ρ
                                                                  
                                                                     t
                                                                     (
                                                                     π
                                                                     )
                                                                  
                                                                  q
                                                               
                                                               −
                                                               
                                                                  ρ
                                                                  
                                                                     s
                                                                     (
                                                                     π
                                                                     )
                                                                  
                                                                  q
                                                               
                                                               −
                                                               l
                                                               
                                                                  (
                                                                  π
                                                                  )
                                                               
                                                               
                                                                  κ
                                                                  q
                                                               
                                                               −
                                                               
                                                                  γ
                                                                  
                                                                     t
                                                                     (
                                                                     π
                                                                     )
                                                                  
                                                                  q
                                                               
                                                               ,
                                                            
                                                         
                                                         
                                                            
                                                               o.w.
                                                               
                                                            
                                                         
                                                      
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           
                           
                              Definition 2
                              An ordered node pair 
                                    
                                       
                                          (
                                          i
                                          ,
                                          j
                                          )
                                       
                                       ∈
                                       
                                          (
                                          
                                             N
                                             ¯
                                          
                                          ×
                                          N
                                          )
                                       
                                       ∪
                                       
                                          (
                                          N
                                          ×
                                          
                                             N
                                             ¯
                                          
                                          )
                                       
                                    
                                  is called a plausible-pair for a demand q if it satisfies the following conditions:

                                    
                                       •
                                       It is possible to transit from node i to node j without any refueling. More formally:

                                             
                                                (29)
                                                
                                                   
                                                      
                                                         
                                                         
                                                            
                                                               
                                                                  δ
                                                                  
                                                                     i
                                                                     ,
                                                                     j
                                                                  
                                                                  ☆
                                                               
                                                               ≤
                                                               
                                                                  {
                                                                  
                                                                     
                                                                        
                                                                           
                                                                              r
                                                                              (
                                                                              
                                                                                 m
                                                                                 q
                                                                              
                                                                              )
                                                                              ,
                                                                           
                                                                        
                                                                        
                                                                           
                                                                              if
                                                                              
                                                                              i
                                                                              ≠
                                                                              S
                                                                              (
                                                                              q
                                                                              )
                                                                              and
                                                                              
                                                                              j
                                                                              ≠
                                                                              T
                                                                              (
                                                                              q
                                                                              )
                                                                           
                                                                        
                                                                     
                                                                     
                                                                        
                                                                           
                                                                              r
                                                                              (
                                                                              
                                                                                 m
                                                                                 q
                                                                              
                                                                              )
                                                                              /
                                                                              2
                                                                              ,
                                                                           
                                                                        
                                                                        
                                                                           
                                                                              o.w.
                                                                              
                                                                           
                                                                        
                                                                     
                                                                  
                                                               
                                                            
                                                         
                                                      
                                                   
                                                
                                             
                                          
                                       

It is possible to visit nodes i and j without violating driver tolerance constraints. i.e.,

                                             
                                                (30)
                                                
                                                   
                                                      
                                                         
                                                            
                                                               
                                                                  δ
                                                                  
                                                                     S
                                                                     (
                                                                     q
                                                                     )
                                                                     ,
                                                                     i
                                                                  
                                                                  ☆
                                                               
                                                               +
                                                               
                                                                  δ
                                                                  
                                                                     i
                                                                     ,
                                                                     j
                                                                  
                                                                  ☆
                                                               
                                                               +
                                                               
                                                                  δ
                                                                  
                                                                     j
                                                                     ,
                                                                     T
                                                                     (
                                                                     q
                                                                     )
                                                                  
                                                                  ☆
                                                               
                                                               ≤
                                                               
                                                                  λ
                                                                  q
                                                               
                                                            
                                                         
                                                      
                                                   
                                                
                                             
                                          
                                       

The set of all the plausible-pairs for a demand q is denoted by Ωq
                                 .

In order to identify path-segment variables that price out, it is only required to check plausible-pairs for each demand q ∈ Q and see if there is a pair (i, j) ∈ Ωq
                            such that, the shortest path 
                              
                                 π
                                 
                                    i
                                    ,
                                    j
                                 
                                 *
                              
                            from node i to j satisfies the following condition:

                              
                                 (31)
                                 
                                    
                                       
                                          
                                          
                                             
                                                l
                                                
                                                   (
                                                   
                                                      π
                                                      
                                                         i
                                                         ,
                                                         j
                                                      
                                                      *
                                                   
                                                   )
                                                
                                                
                                                   κ
                                                   q
                                                
                                                <
                                                
                                                   {
                                                   
                                                      
                                                         
                                                            
                                                               
                                                                  ρ
                                                                  
                                                                     j
                                                                  
                                                                  q
                                                               
                                                               −
                                                               
                                                                  ρ
                                                                  
                                                                     i
                                                                  
                                                                  q
                                                               
                                                               ,
                                                            
                                                         
                                                         
                                                            
                                                               if
                                                               
                                                               j
                                                               =
                                                               T
                                                               (
                                                               q
                                                               )
                                                            
                                                         
                                                      
                                                      
                                                         
                                                            
                                                               
                                                                  ρ
                                                                  
                                                                     j
                                                                  
                                                                  q
                                                               
                                                               −
                                                               
                                                                  ρ
                                                                  
                                                                     i
                                                                  
                                                                  q
                                                               
                                                               −
                                                               
                                                                  γ
                                                                  
                                                                     j
                                                                  
                                                                  q
                                                               
                                                               ,
                                                            
                                                         
                                                         
                                                            o.w.
                                                         
                                                      
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           Note that if the shortest path between a plausible pair (i, j) does not satisfy the above condition, none of the other paths connecting node i to node j can. Thus, for a plausible pair (i, j) ∈ Ωq
                           , it is sufficient to check whether (31) is satisfied for the path segment 
                              
                                 π
                                 
                                    i
                                    ,
                                    j
                                 
                                 *
                              
                            and declare the variable 
                              
                                 v
                                 
                                    π
                                    
                                       i
                                       ,
                                       j
                                    
                                    *
                                 
                                 q
                              
                            as a positive reduced cost variable if this is the case.

Defining variables as the path-segments instead of whole paths diverts from the widely used path based formulations for which the column generation technique has been applied very successfully for a wide range of problems (Lübbecke & Desrosiers, 2005). Path-segments as variables necessitate a more careful approach to determine the initial variable pool of path-segment variables (Yıldız & Karasan, 2014).

Let path segment 
                              
                                 π
                                 
                                    i
                                    ,
                                    j
                                 
                                 *
                              
                            be the shortest path between nodes 
                              
                                 i
                                 ,
                                 j
                                 ∈
                                 
                                    N
                                    ¯
                                 
                              
                           . Then we can define the initial variable pool as 
                              
                                 
                                    V
                                    0
                                 
                                 =
                                 
                                    {
                                    
                                       v
                                       
                                          {
                                          
                                             π
                                             
                                                i
                                                ,
                                                j
                                             
                                             *
                                          
                                          }
                                       
                                       q
                                    
                                    |
                                    q
                                    ∈
                                    Q
                                    ,
                                    
                                       (
                                       i
                                       ,
                                       j
                                       )
                                    
                                    ∈
                                    
                                       Ω
                                       q
                                    
                                    ,
                                    
                                       (
                                       i
                                       ,
                                       j
                                       )
                                    
                                    ∈
                                    
                                       A
                                       ¯
                                    
                                    }
                                 
                              
                           . Note that, a solution for the 
                              
                                 
                                    
                                       R
                                       P
                                       S
                                    
                                    ¯
                                 
                                 −
                                 L
                                 P
                                 ,
                              
                            considering only the path-segment variables in V
                           0 contains enough information to derive all the needed dual variable values to properly construct the pricing problem.

In 
                           
                              
                                 
                                    P
                                    S
                                 
                                 ¯
                              
                              ,
                           
                         all the decision variables are defined as binary. However, due to (27), requiring only the location variables as binary is sufficient to obtain a solution in which both cover and path-segment variables are also binary. Before proceeding with the formal propositions and their proofs, we need the following definition:

                           Definition 3
                           For a given solution (y, x, v) of 
                                 
                                    
                                       P
                                       S
                                    
                                    ¯
                                 
                              -LP, we call 
                                 
                                    
                                       G
                                       v
                                       q
                                    
                                    =
                                    
                                       (
                                       
                                          N
                                          ¯
                                       
                                       ,
                                       
                                          A
                                          v
                                          q
                                       
                                       )
                                    
                                 
                               as the reduced graph of demand q ∈ Q, where 
                                 
                                    
                                       A
                                       v
                                       q
                                    
                                    :
                                    =
                                    
                                       {
                                       a
                                       ∈
                                       
                                          A
                                          ¯
                                       
                                       |
                                       a
                                       ∈
                                       π
                                       ,
                                       
                                          v
                                          π
                                          q
                                       
                                       >
                                       0
                                       }
                                    
                                 
                              .


                              Let
                              
                                 
                                    (
                                    
                                       y
                                       ^
                                    
                                    ,
                                    
                                       x
                                       ^
                                    
                                    ,
                                    
                                       v
                                       ^
                                    
                                    )
                                 
                               
                              be an optimal solution for the
                              
                                 
                                    
                                       P
                                       S
                                    
                                    ¯
                                 
                              
                              -LP where location variables
                              
                                 
                                    x
                                    ^
                                 
                               
                              are all binary. Then, the cover variables
                              
                                 
                                    y
                                    ^
                                 
                               
                              necessarily assume integral values.
                           

Let 
                                 
                                    (
                                    
                                       y
                                       ^
                                    
                                    ,
                                    
                                       x
                                       ^
                                    
                                    ,
                                    
                                       v
                                       ^
                                    
                                    )
                                 
                               be an optimal solution of 
                                 
                                    
                                       P
                                       S
                                    
                                    ¯
                                 
                              -LP, where 
                                 
                                    
                                       
                                          x
                                          ^
                                       
                                       i
                                    
                                    ∈
                                    
                                       {
                                       0
                                       ,
                                       1
                                       }
                                    
                                    ,
                                    ∀
                                    i
                                    ∈
                                    N
                                 
                               and 
                                 
                                    z
                                    ^
                                 
                               is the optimal solution value. Assume there exists 
                                 
                                    
                                       q
                                       ^
                                    
                                    ∈
                                    Q
                                 
                               such that 
                                 
                                    0
                                    <
                                    
                                       
                                          y
                                          ^
                                       
                                       
                                          q
                                          ^
                                       
                                    
                                    <
                                    1
                                 
                              . Let 
                                 
                                    U
                                    
                                       q
                                       ^
                                    
                                 
                               be the set of trips that connect 
                                 
                                    S
                                    (
                                    
                                       q
                                       ^
                                    
                                    )
                                 
                               to 
                                 
                                    T
                                    (
                                    
                                       q
                                       ^
                                    
                                    )
                                 
                               in 
                                 
                                    G
                                    
                                       v
                                       ^
                                    
                                    
                                       q
                                       ^
                                    
                                 
                              . Note that 
                                 
                                    U
                                    
                                       q
                                       ^
                                    
                                 
                               is not empty since 
                                 
                                    
                                       
                                          y
                                          ^
                                       
                                       
                                          q
                                          ^
                                       
                                    
                                    >
                                    0
                                 
                               and the solution 
                                 
                                    (
                                    
                                       y
                                       ^
                                    
                                    ,
                                    
                                       x
                                       ^
                                    
                                    ,
                                    
                                       v
                                       ^
                                    
                                    )
                                 
                               is feasible. Let u
                              * be the shortest trip in 
                                 
                                    U
                                    
                                       q
                                       ^
                                    
                                 
                              . Now consider the solution 
                                 
                                    
                                       y
                                       ¯
                                    
                                    ,
                                    
                                       x
                                       ^
                                    
                                    ,
                                    
                                       v
                                       ¯
                                    
                                 
                               where

                                 
                                    (32)
                                    
                                       
                                          
                                             
                                             
                                                
                                                   
                                                      
                                                         y
                                                         ¯
                                                      
                                                      q
                                                   
                                                   =
                                                   
                                                      {
                                                      
                                                         
                                                            
                                                               
                                                                  1
                                                                  ,
                                                               
                                                            
                                                            
                                                               
                                                                  if
                                                                  
                                                                  q
                                                                  =
                                                                  
                                                                     q
                                                                     ^
                                                                  
                                                               
                                                            
                                                         
                                                         
                                                            
                                                               
                                                                  
                                                                     
                                                                        y
                                                                        ^
                                                                     
                                                                     q
                                                                  
                                                                  ,
                                                               
                                                            
                                                            
                                                               o.w.
                                                            
                                                         
                                                      
                                                   
                                                
                                             
                                             
                                                
                                                   
                                                      
                                                         v
                                                         ¯
                                                      
                                                      π
                                                      q
                                                   
                                                   =
                                                   
                                                      {
                                                      
                                                         
                                                            
                                                               
                                                                  1
                                                                  ,
                                                               
                                                            
                                                            
                                                               
                                                                  if
                                                                  
                                                                  q
                                                                  =
                                                                  
                                                                     q
                                                                     ^
                                                                  
                                                                  
                                                                  and
                                                                  
                                                                  π
                                                                  ∈
                                                                  
                                                                     u
                                                                     *
                                                                  
                                                               
                                                            
                                                         
                                                         
                                                            
                                                               
                                                                  0
                                                                  ,
                                                               
                                                            
                                                            
                                                               
                                                                  if
                                                                  
                                                                  q
                                                                  =
                                                                  
                                                                     q
                                                                     ^
                                                                  
                                                                  
                                                                  and
                                                                  
                                                                  π
                                                                  ∉
                                                                  
                                                                     u
                                                                     *
                                                                  
                                                               
                                                            
                                                         
                                                         
                                                            
                                                               
                                                                  
                                                                     
                                                                        v
                                                                        ^
                                                                     
                                                                     π
                                                                     q
                                                                  
                                                                  ,
                                                               
                                                            
                                                            
                                                               o.w.
                                                            
                                                         
                                                      
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           

Observe that this new solution 
                                 
                                    (
                                    
                                       y
                                       ¯
                                    
                                    ,
                                    
                                       x
                                       ^
                                    
                                    ,
                                    
                                       v
                                       ¯
                                    
                                    )
                                 
                               is feasible since location variables are all integral and u
                              * ≤ λq
                              . Let 
                                 
                                    z
                                    ¯
                                 
                               be the objective function value for the solution 
                                 
                                    (
                                    
                                       y
                                       ¯
                                    
                                    ,
                                    
                                       x
                                       ^
                                    
                                    ,
                                    
                                       v
                                       ¯
                                    
                                    )
                                 
                              . Then, 
                                 
                                    
                                       z
                                       ¯
                                    
                                    −
                                    
                                       z
                                       ^
                                    
                                    =
                                    
                                       f
                                       q
                                    
                                    
                                       (
                                       1
                                       −
                                       
                                          y
                                          q
                                       
                                       )
                                    
                                    >
                                    0
                                 
                              . This concludes the proof.□


                              Let
                              
                                 
                                    z
                                    ^
                                 
                               
                              be the optimal solution value for
                              
                                 
                                    
                                       P
                                       S
                                    
                                    ¯
                                 
                              
                              -LP obtained by the solution
                              
                                 
                                    (
                                    
                                       y
                                       ^
                                    
                                    ,
                                    
                                       x
                                       ^
                                    
                                    ,
                                    
                                       v
                                       ^
                                    
                                    )
                                    ,
                                 
                               
                              where location variables
                              
                                 
                                    x
                                    ^
                                 
                               
                              and cover variables
                              
                                 
                                    y
                                    ^
                                 
                               
                              are all binary. Then the optimal solution value for
                              
                                 
                                    
                                       P
                                       S
                                    
                                    ¯
                                 
                               
                              is equal to
                              
                                 
                                    z
                                    ^
                                 
                              
                              .
                           

Let 
                                 
                                    (
                                    
                                       y
                                       ^
                                    
                                    ,
                                    
                                       x
                                       ^
                                    
                                    ,
                                    
                                       v
                                       ^
                                    
                                    )
                                 
                               be the optimal solution for 
                                 
                                    
                                       P
                                       S
                                    
                                    ¯
                                 
                              -LP where location variables 
                                 
                                    x
                                    ^
                                 
                               and cover variables 
                                 
                                    y
                                    ^
                                 
                               are all binary and assume that there exists a demand 
                                 
                                    
                                       q
                                       ^
                                    
                                    ∈
                                    Q
                                 
                               with a positive cover variable 
                                 
                                    
                                       
                                          v
                                          ^
                                       
                                       π
                                       
                                          q
                                          ^
                                       
                                    
                                    <
                                    1
                                 
                               (if there is no such path-segment variable, then the assertion is vacuously true). 
                                 
                                    U
                                    
                                       q
                                       ^
                                    
                                 
                               and u
                              * definitions are the same as their definitions in the previous proof. Now consider the solution 
                                 
                                    (
                                    
                                       y
                                       ^
                                    
                                    ,
                                    
                                       x
                                       ^
                                    
                                    ,
                                    
                                       v
                                       ¯
                                    
                                    )
                                 
                               where

                                 
                                    (33)
                                    
                                       
                                          
                                             
                                             
                                                
                                                   
                                                      
                                                         v
                                                         ¯
                                                      
                                                      π
                                                      q
                                                   
                                                   =
                                                   
                                                      {
                                                      
                                                         
                                                            
                                                               
                                                                  1
                                                                  ,
                                                               
                                                            
                                                            
                                                               
                                                                  if
                                                                  
                                                                  q
                                                                  =
                                                                  
                                                                     q
                                                                     ^
                                                                  
                                                                  
                                                                  and
                                                                  
                                                                  
                                                                  π
                                                                  ∈
                                                                  
                                                                     u
                                                                     *
                                                                  
                                                               
                                                            
                                                         
                                                         
                                                            
                                                               
                                                                  0
                                                                  ,
                                                               
                                                            
                                                            
                                                               
                                                                  if
                                                                  
                                                                  q
                                                                  =
                                                                  
                                                                     q
                                                                     ^
                                                                  
                                                                  
                                                                  and
                                                                  
                                                                  
                                                                  π
                                                                  ∉
                                                                  
                                                                     u
                                                                     *
                                                                  
                                                               
                                                            
                                                         
                                                         
                                                            
                                                               
                                                                  
                                                                     
                                                                        v
                                                                        ^
                                                                     
                                                                     π
                                                                     q
                                                                  
                                                                  ,
                                                               
                                                            
                                                            
                                                               o.w.
                                                            
                                                         
                                                      
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                              Observe that the integrality of location and cover variables and u
                              * being the shortest trip in 
                                 
                                    U
                                    
                                       q
                                       ^
                                    
                                 
                               ensure that the new solution 
                                 
                                    (
                                    
                                       y
                                       ^
                                    
                                    ,
                                    
                                       x
                                       ^
                                    
                                    ,
                                    
                                       v
                                       ¯
                                    
                                    )
                                 
                               is feasible with the same objective function value and strictly fewer fractional path-segment variables than the starting solution 
                                 
                                    (
                                    
                                       y
                                       ^
                                    
                                    ,
                                    
                                       x
                                       ^
                                    
                                    ,
                                    
                                       v
                                       ^
                                    
                                    )
                                 
                              . Since one can repeat this procedure as much as needed to obtain an integral solution, the proof is complete.□

Due to Propositions 2 and 3, we only need to consider the location variables in the branching phase.

Comparing the location variables xi, i ∈ N by the degrees of the associated node i ∈ N, we sort them in a descending order and obtain a priory list. Encountering a fractional solution, we select the fractional location variable highest in the list as the branching variable. Let xi
                               be the fractional location variable we chose to branch on.

                                 
                                    •
                                    
                                       Branching-cut-1 
                                       xi
                                        = 0 : In this case the set of path-segment variables 
                                          
                                             
                                                
                                                   V
                                                   i
                                                
                                                ̲
                                             
                                             =
                                             
                                                {
                                                
                                                   v
                                                   π
                                                   q
                                                
                                                |
                                                q
                                                ∈
                                                Q
                                                ,
                                                π
                                                ∈
                                                
                                                   Π
                                                   q
                                                
                                                
                                                and
                                                
                                                t
                                                
                                                   (
                                                   π
                                                   )
                                                
                                                =
                                                i
                                                }
                                             
                                          
                                        are implicitly set to 0. Thus, we must make sure that in the pricing problem any path-segment 
                                          
                                             
                                                v
                                                π
                                                q
                                             
                                             ∈
                                             
                                                
                                                   V
                                                   i
                                                
                                                ̲
                                             
                                          
                                        should not appear as a positive reduced cost column. This can be easily done by setting 
                                          
                                             
                                                γ
                                                
                                                   i
                                                
                                                q
                                             
                                             =
                                             ∞
                                             
                                             ∀
                                             q
                                             ∈
                                             Q
                                             ,
                                             T
                                             
                                                (
                                                q
                                                )
                                             
                                             ≠
                                             i
                                          
                                       .


                                       Branching-cut-2 
                                       xi
                                        = 1 : In this case the path-segment variables are not affected by the branching cut and the pricing problem stays the same except for the possible change in the value of the dual variables 
                                          
                                             γ
                                             i
                                             q
                                          
                                       .

Comprehensive numerical experiments are conducted to test the performance of the branch and price algorithm (B&P). Two particular network topologies are considered: 25-node road network in Fig. 2
                      (Simchi-Levi & Berman, 1988) and California (CA) road network in Fig. 3
                      (Arslan et al., 2014a). We implemented all the algorithms using Java under Linux and CPLEX 12.5 and all experiments are done on the same machine: AMD Opteron(tm) Processor 6282 SE with 2GB RAM. In the following, we first present the data and then the computational results in separate sections for each network considered.

Being a commonly used network in the literature (Capar et al., 2013; Hodgson, 1990; Kim & Kuby, 2012; Kuby & Lim, 2005; Lim & Kuby, 2010; MirHassani & Ebrazi, 2013; Wang & Wang, 2010), 25-node road network constitutes a suitable test bed for us to compare the performance of B&P with the benchmark studies in the literature. The CA road network on the other hand is a close representation of the actual California State road network and allows us to test B&P in realistic large problem instances. The main parameters of these networks are presented in Table 2
                        .

For the 25-node road network experiments, we generated the same test problems studied by Kim and Kuby (2012). All 25 nodes of the network are considered as O–D nodes and all the possible pairings between them are considered as O–D pairs. Note that we assume the same level of tolerances for all O–D pairs for a given setting. This can be further specified into distributions of tolerance levels by generating more demand types for the same OD pair. The flow is calculated by the gravity model proposed by Hodgson (1990). A total of 225 problem instances are obtained by considering

                           
                              •
                              3 vehicle ranges: 4, 8 and 12

3 levels of driver tolerance: 0 percent, 10 percent and 50 percent

25 different refueling station numbers: 1, …, 25

In order to study more realistic problem instances, CA road network with 339 nodes and 617 edges test problems are used. For this set of experiments, all the urban population centers in the California are considered as O–D nodes. There are a total of 57 such centers with population more than 50,000 according to recent reports (U.S. Census Bureau, 2010). All possible pairings of these population centers that are not closer than 30 kilometers are considered as O–D pairs (1167 in total) and the volume of the flow on each pair is calculated using the gravity model (Hodgson, 1990). Our experimental design contains 64 problem instances

                           
                              •
                              2 vehicle ranges: 100 and 150 kilometers,

4 levels of driver tolerance: 0 percent, 5 percent, 10 percent and 20 percent,

8 different refueling station limits: 1, 5, 10, …, 35.

We consider driver tolerances up to 20 percent in this realistic case study since higher tolerance values are hard to justify with economic or environmental concerns of the drivers.


                        Table 3 depicts the average CPU times in seconds of 25 runs (p = 1, …, 25) for different range and tolerance settings. For consistency with the available literature, we assumed a single vehicle type throughout our runs. The preprocessing time for DFRLM is the time it takes to generate the paths (by solving consecutive k-shortest path algorithms) and the minimal combination sets for these paths. The preprocessing time for DFRLM-E is for generating the paths using ANSPR0 algorithm and processing of each arc on each path, as explained in Section 2. The preprocessing time of B&P is for generating the plausible pairs for each demand. The right-most column, the solution time, shows the respective model solution time combined with the preprocessing time.

Results show that DFRLM-E runs an order of magnitude faster than its original version DFRLM in all the instances. Even though branch and price algorithms are not as famous for their speed as their capability to handle large problem instances, it is interesting to observe that the run times of B&P are comparable to those of DFRLM-E. Apparently, problems with longer vehicle range and higher driver tolerance take longer solution times. In those cases, the number of alternative feasible paths between O–D pairs increases which makes these problems harder to tackle. Notice that the computational performances of DFRLM and DFRLM-E quickly degrade as problem gets harder whereas the solution times for B&P are more stable.

All three algorithms: DFRLM, DFRLM-E and B&P are run on all problem instances. Table 4
                         shows the solutions obtained by the B&P algorithm. In the table, p stands for the number of refueling stations, Opt.Sol shows the percentage of the flow that could be refueled in the optimal solution, LP.sol indicates the solution value for the linear relaxation of the problem, BBN is the number of branch and bound nodes explored by the B&P algorithm, #Col. indicates the total number of columns generated and Time is the solution time in seconds. Table 4 shows that optimal values are quite close to those of the linear relaxation solutions. This indicates the strength of the path-segment formulation which helps to make B&P a competitive alternative to the state-of-the-art models in the literature. Our results also show that the computational performance of the B&P algorithm does not vary significantly across different problem instances.

All solution values for the DFRLM and DFRLM-E are the same with those resulting from B&P except for the three cases depicted in bold in Table 4. For those instances, B&P is able to generate a better solution by utilizing non-simple paths. One example is when range is 12, the tolerance is 50 percent and p = 6. The refueling stations are located at nodes {4, 10, 12, 17, 20, 22} in the optimal solution. Even though there does not exist a feasible simple path between nodes 10 and 11, a non-simple path can connect these two nodes and cover the flow in between. When traveling from node 11 to node 10 on a non-simple path, the vehicle first visits node 12, refuels there, and travels to node 10 by visiting node 11 again. The travel distance in total is 13 which is just less than the tolerable maximum 13.5. This is an example of a non-simple path occurrence. It is no surprise that all these three highlighted cases share the same high range and tolerance (range = 12, tolerance = 50 percent) parameters. This is because, for a non-simple path to be feasible, the range of the vehicle should be long enough to traverse two consecutive arcs without refueling and driver tolerance should be high enough to compensate for the extra mileage of such a detour. Emergence of non-simple paths even in a quite aggregate network such as 25-node road network is an interesting result which indicates that neglecting them could result in sub-optimal solutions especially in less aggregate and more realistic network instances.

For the problem instances in CA road network, DFRLM and DFRLM-E fail to solve the problem for even minor driver tolerances. These models cannot even keep the problem in the memory in these problem instances. This is due to the exponential growth in the number of paths as the driver tolerance level increases. Illustrating this fact, Fig. 4
                         shows the total number of alternative paths that connect O–D pairs for a given tolerance level. There are more than 3.5 million alternative paths for 5 percent driver tolerance and this number grows almost thirty times larger when the tolerance is increased to 8 percent. However, the B&P algorithm does not get overwhelmed by these large problem instances since it does not require the inclusion of all those paths, only a tiny fraction of which actually appear in the optimal solution.


                        Table 5 shows the results of the computational experiments with B&P on the CA road network. In the table, p stands for the number of refueling stations, Sol. is the percentage of the flow that could be refueled by the B&P algorithm solution, %Gap is the percentage of the optimality gap (with a time limit of 3  hours), BBN is the number of branch and bound nodes explored by the B&P algorithm and #Col. indicates the total number of columns generated and Time is the solution time in seconds. Empty rows indicate that the problem is not solved because 100 percent coverage is already established for less number of refueling stations.

As seen in the table, B&P is able to solve approximately 75 percent of the problems to optimality. For those instances, where B&P did not converge to the optimal solution in the given time limit of 3 hours, the maximum optimality gap is 0.506 percent and the average is below 0.007 percent. The results show that problems with small or large number of refueling stations are easier to solve and harder problems arise in between. Also problems with high tolerance values are naturally hard to solve since a higher number of columns are generated and considered in the solutions. The same claims and arguments are obviously true for the higher driving ranges.

Also note that higher driver tolerances make more significant differences in total flow for the medium values of p. For example consider the problem instances with p = 5, range = 100  kilometers in Table 5. For this set of problems just a 5 percent driver tolerance results in 9 percent increase in the total refuelable flow percentage. However, the gain for the same driver tolerance decreases when p increases or decreases. This is expected since, for small p, driver tolerance cannot compensate the scarcity of the refueling stations to generate a feasible path whereas in the case where the refueling stations are widespread, there is not so much need for a long refueling detour.

@&#CONCLUSIONS@&#

In this paper, we present the refueling station location problem with routing (RSLP-R) for locating a given number of refueling stations for alternative fuel vehicles in a road network so as to maximize the total flow covered. Driver deviations from the shortest path up to a certain tolerance value are considered as alternative paths including non-simple ones. The problem is practically important due to fact that the adoption of AFVs strongly depends on the availability of the refueling infrastructure and the high cost of this initial investment motivates the efforts for the best use of limited resources. It is theoretically challenging because the problem is NP-Complete and previous formulations of similar problems failed to handle large networks due to their modeling structures. The most important contribution of this paper to the literature is extending the size of the solvable problems. Rather than pregenerating all the path alternatives before solving the model, we apply a branch and price solution algorithm which enables us to handle problems that were not of manageable size by previous works on similar contexts. Our algorithm also decreased the solution times with respect to previous studies which is another major contribution to the literature. The efficiency of the solution technique is mainly due to the path-segment definition in our formulation. Such a formulation enables us to relax the simple path assumption and admits a very natural representation of the side constraints on the path. Observe that our path-segment formulation is general enough to accommodate a wide array of side constraints on the vehicle routes other than refueling and total distance. As such, our formulation could be quite useful to model more realistic and complex problems as well as problems in completely different contexts such as telecommunications and transportation (Yıldız & Karasan, 2014).

In its current form, our methodology does not accommodate for the capacities of the refueling stations which is in the scope of recent works such as Upchurch, Kuby, and Lim (2009a) and Jung et al. (2014). Driver’s different preferences such as stopping tolerance can also be accommodated into this framework and the number of refueling stops on a given path might also be limited by a constant. In the context of this study, we also consider only the refuelability of the O–D pairs, but the costs are not taken into account. With the help of efficient solution algorithms for RSLP-R and its variants, future research in this area might be directed towards handling the node and arc capacities in the network, the stopping tolerance of the drivers, and/or different nodal pricing between infrastructure setup costs. Each of these research directions will bring more realism at the expense of additional computational complexity.

@&#ACKNOWLEDGMENTS@&#

This work was supported by the Scientific and Technological Research Council of Turkey (TUBITAK) under the grant number 214M211. We would like to thank Dr. Michael Kuby of Arizona State University for providing the 25-Node network data for us. We also acknowledge the contribution of the editor and the reviewers in leading to this improved current form of the article.

@&#REFERENCES@&#

