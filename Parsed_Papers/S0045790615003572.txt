@&#MAIN-TITLE@&#Social-Spider Optimization-based Support Vector Machines applied for energy theft detection

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           Social-Spider Optimization for model selection in Support Vector Machines.


                        
                        
                           
                           Three distinct scenarios were evaluated.


                        
                        
                           
                           Proposed approach validated in the context of of theft detection in power distribution systems.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Nontechnical losses

Power distribution systems

Social-Spider Optimization

Support Vector Machines

@&#ABSTRACT@&#


               
               
                  The problem of Support Vector Machines (SVM) tuning parameters (i.e., model selection) has been paramount in the last years, mainly because of the high computational burden for SVM training step. In this paper, we address this problem by introducing a recently developed evolutionary-based algorithm called Social-Spider Optimization (SSO), as well as we introduce SSO for feature selection purposes. The model selection task has been handled in three distinct scenarios: (i) feature selection, (ii) tuning parameters and (iii) feature selection+tuning parameters. Such extensive set of experiments against with some state-of-the-art evolutionary optimization techniques (i.e., Particle Swarm Optimization and Novel Global-best Harmony Search) demonstrated SSO is a suitable approach for SVM model selection, since it obtained the top results in 8 out 10 datasets employed in this work (considering all three scenarios). Notice the best scenario seemed to be the combination of both feature selection and SVM tuning parameters. In addition, we validated the proposed approach in the context of theft detection in power distribution systems.
               
            

@&#INTRODUCTION@&#

Machine learning techniques have been actively pursued in the last decades, since to recognize patterns in different applications through a learning process is of great interest. Based on the statistical learning theory, Support Vector Machines (SVM) [1] are based on the maximal margin assumption, which considers a hyperplane that separates the dataset samples in a high dimensional feature space induced by a non-linear mapping using kernel functions. Although SVM have been considered one of the state-of-the-art pattern recognition techniques, they suffer from the high computational burden for training patterns. Some kernel functions are parameterized, which means there is a need for optimization techniques to find out a suitable set of values that are less prone for classification errors over a training/validating set.

Although the reader can face several works that deal with new approaches for SVM modeling and parameter optimization, in this work we focus on evolutionary strategies for the latter purpose. Friedrichs and Igel [2], for instance, presented an evolutionary-based approach for SVM parameter optimization using the Covariance Matrix Adaptation Evolution Strategy. Howley and Madden [3] proposed a kernel optimization method based on Genetic Programming, and Lessmann et al. [4] employed the well-known Genetic Algorithm for the same task. In regard to Particle Swarm Optimization (PSO)-based SVM training, one can be referred to several works: Liu et al. [5], for instance, proposed an integrated approach that aimed to optimize both features and the parameters of a Support Vector Machines classifier. Melgani and Bazi [6] presented an SVM model selection approach based on PSO for Electrocardiogram signal classification; in this work, only SVM parameters have been optimized. More recently, Pereira et al. [7] introduced the Harmony Search algorithm for training SVM classifiers in the context of theft detection in power distribution systems, and Cawley [8] proposed an approach based on Tabu Search for model selection in SVM classifiers.

Based on the social dynamics of spiders, Cuevas et al. [9] proposed the Social-Spider Optimization (SSO), which considers both male and female spiders as well as their cooperative behavior for solving optimization tasks. Such technique has demonstrated very promising results, being also as efficient as some state-of-the-art evolutionary-based approaches. The main contributions of this paper are two-fold: (i) to extend the work by Pereira et al. [10], which introduced SSO for SVM parameter estimation, and (ii) to apply feature selection by means of SSO together with SVM model selection. The proposed SSO-SVM technique is evaluated in public datasets, as well as in the context of theft detection in power distribution systems for the first time. For this latter purpose, we have employed two private datasets provided by a Brazilian electrical power company, which contain legal and illegal profiles from commercial and industrial consumers.

The remainder of this paper is organized as follows. Sections 2 and 3 present the theory background regarding SSO and the methodology employed in this work, respectively. Experiments are described in Section 4, and the conclusions are stated in Section 5.

Social-Spider Optimization is based on the cooperative behavior of social-spiders and it was proposed by Cuevas [9]. The algorithm takes into account two genders of search spiders: males and females. Depending on the gender, each agent is conducted by a set of different operators emulating a cooperative behavior in a colony. The search space is assumed as a communal web and a spider’s position represents an optimal solution.

An interesting characteristic of social-spiders is the female-biased population. The number of male spiders hardly reaches 30% of the total colony members. The number of females Nf
                      is randomly selected within a range of 65–90% of the entire population N, being calculated as follows:
                        
                           (1)
                           
                              
                                 
                                    N
                                    f
                                 
                                 =
                                 
                                    ⌊
                                    
                                       (
                                       0.9
                                       −
                                       r
                                       a
                                       n
                                       d
                                       *
                                       0.25
                                       )
                                    
                                    *
                                    N
                                    ⌋
                                 
                                 ,
                              
                           
                        
                     where rand is a random number between [0, 1], thus guaranteeing the aforementioned range considering the number of female spiders. The number of male spiders Nm
                      is given by:
                        
                           (2)
                           
                              
                                 
                                    N
                                    m
                                 
                                 =
                                 N
                                 −
                                 
                                    N
                                    f
                                 
                                 .
                              
                           
                        
                     
                  

Every spider receives a weight according to the fitness value of the solution:
                        
                           (3)
                           
                              
                                 
                                    w
                                    i
                                 
                                 =
                                 
                                    
                                       f
                                       i
                                       t
                                       n
                                       e
                                       s
                                       
                                          s
                                          i
                                       
                                       −
                                       w
                                       o
                                       r
                                       s
                                       t
                                    
                                    
                                       b
                                       e
                                       s
                                       t
                                       −
                                       w
                                       o
                                       r
                                       s
                                       t
                                    
                                 
                                 ,
                              
                           
                        
                     where fitnessi
                      is the fitness value obtained by the evaluation of the ith spider’s position 
                        
                           i
                           =
                           1
                           ,
                           2
                           ,
                           …
                           ,
                           N
                        
                     . The worst and best mean the worst fitness value and best fitness value of the entire population, respectively.

The communal web is used as a mechanism to transmit information among the colony members. The information is encoded as small vibrations and depends on the weight and distance of the spider which has generated them:
                        
                           (4)
                           
                              
                                 
                                    V
                                    
                                       i
                                       ,
                                       j
                                    
                                 
                                 =
                                 
                                    w
                                    j
                                 
                                 *
                                 
                                    e
                                    
                                       −
                                       
                                          d
                                          
                                             i
                                             ,
                                             j
                                          
                                          2
                                       
                                    
                                 
                                 ,
                              
                           
                        
                     where d
                     
                        i, j
                      is the Euclidean Distance between the spider i and j. We can consider three special relationships:
                        
                           •
                           Vibrations V
                              
                                 i, c
                               are perceived by the spider i as a result of the information transmited by the member c who is the nearest member to i, and possesses a higher weight wc
                               > wi
                              ;

The vibrations V
                              
                                 i, b
                               perceived by the spider i as a result of information transmitted by the spider b holding the best weight of the entire population;

The vibrations V
                              
                                 i, f
                               perceived by the spider i as a result of the information transmitted by the nearest female f.

Social-spiders perform cooperative interaction over other colony members depending on the gender. In order to emulate the cooperative behavior of the female spider, a new operator is defined in Eq. (5). The movement of attraction or repulsion is developed over other spiders according to their vibrations, which are emitted over the communal web:
                        
                           (5)
                           
                              
                                 
                                    
                                       
                                          
                                             f
                                             i
                                          
                                          =
                                          
                                             {
                                             
                                                
                                                   
                                                      
                                                         
                                                            f
                                                            i
                                                         
                                                         +
                                                         α
                                                         *
                                                         
                                                            V
                                                            
                                                               i
                                                               ,
                                                               c
                                                            
                                                         
                                                         *
                                                         
                                                            (
                                                            
                                                               s
                                                               c
                                                            
                                                            −
                                                            
                                                               f
                                                               i
                                                            
                                                            )
                                                         
                                                         +
                                                         β
                                                         *
                                                         
                                                            V
                                                            
                                                               i
                                                               ,
                                                               b
                                                            
                                                         
                                                         *
                                                      
                                                   
                                                
                                                
                                                   
                                                      
                                                         
                                                            (
                                                            
                                                               s
                                                               b
                                                            
                                                            −
                                                            
                                                               f
                                                               i
                                                            
                                                            )
                                                         
                                                         +
                                                         γ
                                                         *
                                                         
                                                            (
                                                            r
                                                            a
                                                            n
                                                            d
                                                            −
                                                            
                                                               
                                                                  1
                                                                  2
                                                               
                                                            
                                                            )
                                                         
                                                      
                                                   
                                                   
                                                
                                                
                                                   
                                                      
                                                         
                                                         if
                                                         
                                                         
                                                            r
                                                            m
                                                         
                                                         <
                                                         P
                                                         F
                                                         ;
                                                      
                                                   
                                                
                                                
                                                   
                                                      
                                                         
                                                            f
                                                            i
                                                         
                                                         −
                                                         α
                                                         *
                                                         
                                                            V
                                                            
                                                               i
                                                               ,
                                                               c
                                                            
                                                         
                                                         *
                                                         
                                                            (
                                                            
                                                               s
                                                               c
                                                            
                                                            −
                                                            
                                                               f
                                                               i
                                                            
                                                            )
                                                         
                                                         −
                                                         β
                                                         *
                                                         
                                                            V
                                                            
                                                               i
                                                               ,
                                                               b
                                                            
                                                         
                                                         *
                                                      
                                                   
                                                
                                                
                                                   
                                                      
                                                         
                                                            (
                                                            
                                                               s
                                                               b
                                                            
                                                            −
                                                            
                                                               f
                                                               i
                                                            
                                                            )
                                                         
                                                         +
                                                         γ
                                                         *
                                                         
                                                            (
                                                            r
                                                            a
                                                            n
                                                            d
                                                            −
                                                            
                                                               
                                                                  1
                                                                  2
                                                               
                                                            
                                                            )
                                                         
                                                      
                                                   
                                                   
                                                
                                                
                                                   
                                                      
                                                         
                                                         if
                                                         
                                                         
                                                            r
                                                            m
                                                         
                                                         ≥
                                                         P
                                                         F
                                                         ,
                                                      
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           
                        
                     where rm, α, β, γ and rand are uniform random numbers between [0, 1], and sc
                      and sb
                      represent the nearest member to i that holds a higher weight and the best spider of the entire population, respectively. The input variable PF ∈ [0, 1] is thus used to control whether the current spider’s position will be updated with a positive or negative direction.

The male spider population is divided into two classes: dominant and non-dominant. The dominant class spider has better fitness in comparison to non-dominant, and they are attracted to the closest female spider in the communal web. In the other hand, non-dominant male spiders tend to concentrate in the center of the male population as a strategy to take advantage of resources that are wasted by dominant males:
                        
                           (6)
                           
                              
                                 
                                    
                                       
                                          
                                             m
                                             i
                                          
                                          =
                                          
                                             {
                                             
                                                
                                                   
                                                      
                                                         
                                                            m
                                                            i
                                                         
                                                         +
                                                         α
                                                         *
                                                         
                                                            V
                                                            
                                                               i
                                                               ,
                                                               f
                                                            
                                                         
                                                         *
                                                         
                                                            (
                                                            
                                                               s
                                                               f
                                                            
                                                            −
                                                            
                                                               m
                                                               i
                                                            
                                                            )
                                                         
                                                         +
                                                         γ
                                                         *
                                                         
                                                            (
                                                            r
                                                            a
                                                            n
                                                            d
                                                            −
                                                            
                                                               
                                                                  1
                                                                  2
                                                               
                                                            
                                                            )
                                                         
                                                      
                                                   
                                                   
                                                
                                                
                                                   
                                                      
                                                         
                                                         if
                                                         
                                                         
                                                            w
                                                            
                                                               
                                                                  N
                                                                  f
                                                               
                                                               +
                                                               i
                                                            
                                                         
                                                         >
                                                         
                                                            w
                                                            
                                                               
                                                                  N
                                                                  f
                                                               
                                                               +
                                                               m
                                                            
                                                         
                                                         ;
                                                      
                                                   
                                                
                                                
                                                   
                                                      
                                                         
                                                            m
                                                            i
                                                         
                                                         +
                                                         α
                                                         *
                                                         
                                                            (
                                                            
                                                               
                                                                  
                                                                     
                                                                        ∑
                                                                        
                                                                           h
                                                                           =
                                                                           1
                                                                        
                                                                        
                                                                           N
                                                                           m
                                                                        
                                                                     
                                                                     
                                                                        m
                                                                        h
                                                                     
                                                                     *
                                                                     
                                                                        w
                                                                        
                                                                           
                                                                              N
                                                                              f
                                                                           
                                                                           +
                                                                           h
                                                                        
                                                                     
                                                                  
                                                                  
                                                                     
                                                                        ∑
                                                                        
                                                                           h
                                                                           =
                                                                           1
                                                                        
                                                                        
                                                                           N
                                                                           m
                                                                        
                                                                     
                                                                     
                                                                        w
                                                                        
                                                                           
                                                                              N
                                                                              f
                                                                           
                                                                           +
                                                                           h
                                                                        
                                                                     
                                                                  
                                                               
                                                            
                                                            )
                                                         
                                                      
                                                   
                                                   
                                                
                                                
                                                   
                                                      
                                                         
                                                         if
                                                         
                                                         
                                                            w
                                                            
                                                               
                                                                  N
                                                                  f
                                                               
                                                               +
                                                               i
                                                            
                                                         
                                                         ≥
                                                         
                                                            w
                                                            
                                                               
                                                                  N
                                                                  f
                                                               
                                                               +
                                                               m
                                                            
                                                         
                                                         .
                                                      
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           
                        
                     where sf
                      represents the nearest female spider to the male spider i.

Mating is performed by dominant males and female members in a social-spider colony. Considering r (calculated by Eq. 7) as being the radius, when a dominant male spider locates female members inside r, it mates, forming a new brood:
                        
                           (7)
                           
                              
                                 
                                    
                                       
                                          r
                                          =
                                          
                                             
                                                
                                                   ∑
                                                   
                                                      j
                                                      =
                                                      1
                                                   
                                                   n
                                                
                                                
                                                   p
                                                   j
                                                   
                                                      h
                                                      i
                                                      g
                                                      h
                                                   
                                                
                                                −
                                                
                                                   p
                                                   j
                                                   
                                                      l
                                                      o
                                                      w
                                                   
                                                
                                             
                                             
                                                2
                                                *
                                                n
                                             
                                          
                                          ,
                                       
                                    
                                 
                              
                           
                        
                     where n is the dimension of the problem. 
                        
                           p
                           j
                           
                              h
                              i
                              g
                              h
                           
                        
                      and 
                        
                           p
                           j
                           
                              l
                              o
                              w
                           
                        
                      are the upper and lower bounds, respectively. Once the new spider is formed, it is compared to the worst spider of the colony. If the new spider is better, the worst spider is replaced by the new one.

@&#METHODOLOGY@&#

In this section, we present the methodology used to assess the robustness and efficiency of SSO against with two others commonly used optimization methods: PSO and NGHS (Novel Global Harmony Search) [11]. Such approaches have been selected for comparison purposes since they have been already applied in the same context of this paper, as stated in Section 1.

The experimental setup has been divided in three different stages: (i) feature selection; (ii) parameters tuning; and (iii) parameters tuning combined with feature selection: this experiment has been conducted applying the SVM parameters tuning first, for further feature selection. Thus, the tuning step is performed prior to the feature selection one, which employs the optimum set of SVM parameters already computed. In addition, for each aforementioned experiment, we have executed the optimization approaches using two different SVM kernels: RBF and Polynomial.

In order to validate the experiments, we employed 10 public benchmarking datasets
                        1
                     
                     
                        1
                        
                           http://www.csie.ntu.edu.tw/~cjlin/libsvmtools/datasets/ .
                      that have been frequently used for the evaluation of different optimization methods. Table 1
                      presents the main characteristics of each dataset, which has been randomly partitioned in three sets: training (Z
                     1), evaluating (Z
                     2) and testing (Z
                     3) sets, with 40%, 30% and 30% of the total samples, respectively (such values have been empirically set). The datasets have been chosen in order to represent distinct scenarios, which comprise datasets with different number of features, sizes and classes.

In this work, we adopted the following procedure: SVM is trained over Z
                     1 and its accuracy over Z
                     2 is then used as the fitness value for each particle (spider, particle or harmonies). After the convergence process of the optimization algorithm, the final SVM classifier is employed over the unseen set Z
                     3. Such procedure is conducted using a cross-validation with 10 runnings. In order to compare the optimization methods, we computed the mean accuracy and execution times (seconds) for each of them. In addition, we employed the Wilcoxon test [12] to rank the techniques, as well as to provide a more robust statistical evaluation.

The parameters used by each meta-heuristic optimization algorithm are displayed in Table 2
                     . It is important to shed light over that such values have been empirically set and based on previous experiments [7,9,13], as well as such values are quite similar to the ones recommended by their proponents.

In regard to SVM source code, we used the well-known LibSVM [14] package, and for PSO and HS approaches we used our own implementation. In order to allow a fair comparison among all techniques, we have provided the results without feature selection and parameters tuning, denoted here as “Standard”. For this experiment, only the training (Z
                     1) and test (Z
                     3) sets have been used. The fixed parameters used for different kernels to obtain the “Standard” configuration are presented in Table 3
                     , being such values empirically chosen. Finally, we evaluated SSO in the context of theft detection in power distribution systems in the three aforementioned stages of the experimental setup.

@&#EXPERIMENTS@&#

In this section, we present the results obtained for the three different stages of the experimental setup.

This section presents the results obtained by PSO, NGHS and SSO for feature selection purposes. The following sections state the experimental results applied in two different SVM kernels: RBF and Polynomial. Notice for all optimization algorithms we used 20 agents and 200 iterations (such values have been empirically set).


                           Fig. 1
                            a and b shows the mean accuracy and execution times, respectively, considering the RBF kernel. Table 4
                            presents the Wilcoxon statistical evaluation for the feature selection experiment considering the RBF kernel.

From the accuracy and execution time experiments, we can conclude PSO has been the most accurate technique, followed by SSO and NGHS. However, NGSH has been the fastest technique, followed by SSO and PSO. Fig. 1c displays the feature selection ratio for all techniques, in which one can observe PSO has allowed a better reduction ratio, except for “australian” dataset (SSO has provided the best reduction ratio).

The lower recognition rates achieved by NGHS might be the result of a small number of iterations, which may halt the algorithm during its convergence process. Except for “sonar” dataset, NGHS did not perform well. Although it has been the fastest technique, since it updates one agent at each iteration only, approaches based on Harmony Search can be affected by a small number of iterations. Indeed, it is not straightforward to establish a fair number of iterations for all meta-heuristics that consider their shortcomings individually.


                           Fig. 2
                            a and b shows the mean accuracy and execution times, respectively, considering the Polynomial kernel. Table 5
                            presents the Wilcoxon statistical evaluation for the feature selection experiments in regard to the Polynomial kernel.

From the accuracy and execution times experiments, we can observe SSO has outperformed PSO and NGHS for “glass” dataset, and for the remaining datasets the best techniques have been PSO and NGHS. Once again, NGHS has been the fastest technique, followed by SSO. Fig. 2c displays the feature selection ratio for all techniques, in which one can observe SSO achieved the best reduction rate for “glass” dataset, being PSO the one with the best reduction rates for “fourclass”, “heart”, “liverdisorders”, “diabetes”, “australian” and “vehicle” datasets.

In regard to the feature selection experiment, PSO has been the most accurate technique for SVM with RBF kernel (for a considerable number of datasets), followed by SSO and NGHS. If we consider the computational load, NGHS is the fastest technique, followed by SSO and PSO. Notice this same behavior can be found for SVM with Polynomial kernel, with NGHS achieving best results than the ones obtained through RBF kernel.

This section presents the results obtained by PSO, NGHS and SSO for SVM tuning parameters. The following sections state the experimental results applied in two different SVM kernels: RBF and Polynomial. Notice for all optimization algorithms we used 20 agents and 200 iterations (such values have been empirically set).

The searching range of parameter C was defined within the interval 
                              
                                 [
                                 −
                                 32
                                 ,
                                 32
                                 ]
                                 ,
                              
                            while the searching range of parameter γ was within the interval [0, 32]. These ranges were chosen based on our previous experience. Fig. 3
                           a and b displays the mean accuracy and the mean execution time (seconds) for each optimization technique, respectively. Table 6
                            presents the Wilcoxon statistical evaluation for the SVM tuning parameters experiment considering RBF kernel.

If we consider the Wilcoxon statistical evaluation, it is possible to observe SSO has outperformed PSO and NGHS for “heart” and “ionosphere” datasets, and obtained similar results to PSO for “fourclass” dataset. In regard to “iris” and “live_disorders” datasets, all techniques have been similar each other. Therefore, we can observe SSO has obtained the top results in 7 out 10 datasets for SVM tuning parameters with RBF kernel. Once again, the computational load behavior has been the same as before, i.e., NGHS is the fastest approach, followed by SSO and PSO.

The searching range of parameters was defined within the intervals: C ∈ [0, 2], γ ∈ [0, 2], c ∈ [0, 10] and d ∈ [0, 2]. These ranges were chosen based on our previous experience. Fig. 4
                           a and b displays the mean accuracy and the mean execution time (seconds) for each optimization technique, respectively. Table 7
                            presents the Wilcoxon statistical evaluation for the SVM tuning parameters experiment considering the Polynomial kernel.

Considering the Wilcoxon test, SSO has outperformed PSO and NGHS for “iris” dataset. In regard to “ionosphere” and “diabetes” datasets, SSO has outperformed PSO and NGHS techniques, respectively. Considering the execution time, NGHS has been the fastest approach, followed by SSO and PSO.

In regard to the SVM tuning parameters experiment, SSO has obtained very interesting results considering RBF kernel: it has outperformed PSO and NGHS in 70% of the employed datasets considering the aforementioned kernel. If we consider the computational load, NGHS has been the fastest approach, followed by SSO and PSO.

This section presents the results obtained by PSO, NGHS and SSO for SVM tuning parameters combined with feature selection. The following sections state the experimental results applied in two different SVM kernels: RBF and Polynomial. Notice for all optimization algorithms we used 10 agents and 100 iterations (such values have been empirically set). It is important to highlight to the reader we have tried to use 20 agents and 200 iterations as before. However, the difference in accuracy did not justify the computational load for that.


                           Fig. 5
                            a and b shows the mean accuracy and execution times, respectively, considering the RBF kernel. Table 8
                            presents the Wilcoxon statistical evaluation for the SVM tuning parameters combined with feature selection experiments in regard to the RBF kernel.

If we consider the Wilcoxon statistical analysis, SSO has outperformed PSO and NGHS for “liver_disorders”, “australian” and “vehicle” datasets. In addition, SSO has achieved better results than NGHS for “glass”, “fourclass”, “heart” and “onosphere” datasets, being such results similar to the ones obtained by PSO in these datasets. Therefore, SSH has obtained the top results in 7 out 10 datasets. In regard to the computational load, NGHS has been the fastest technique, followed by SSO and PSO. It is interesting to stress that SSO feature selection ratios (Fig. 5c) have been much better than the ones obtained in the “single feature selection” experiment (Fig. 1c), which evidences the benefits of a combined optimization between feature selection and parameters tuning.


                           Fig. 6
                            a and b shows the mean accuracy and execution times, respectively, considering the Polynomial kernel. Table 9
                            presents the Wilcoxon statistical evaluation for the SVM tuning parameters combined with feature selection experiments in regard to the Polynomial kernel.

The experimental results combining SVM parameters tuning and feature selection does not seem to improve the original results obtained using only feature selection (Fig. 2) and only SVM parameter tuning (Fig. 4) considering the Polynomial kernel. Its seems Polynomial kernel cannot improve the results over these datasets, since its results are inferior to the ones obtained by RBF kernel, which has been the most accurate one.

The experiments using the Polynomial kernel did not seem to improve a lot the results for all three experiments, being the results using only SVM parameter tuning the best ones for almost all cases.

@&#DISCUSSION@&#

In this section, we presented a deeper analysis regarding all aforementioned experiments. Tables 10
                         and 11
                         show the mean accuracy obtained by “feature selection”, “parameters tuning” and “parameters tuning and feature selection” using RBF kernel. Notice the values in bold mean the best ones considering the kernel itself, and the “underlined” values marked stand for the best ones considering all kernels. It is possible to observe SSO has obtained the best results (sometimes similar) in 8 out 10 datasets (considering all sort of experiments, i.e., “feature selection”, “parameters tuning” and “parameters tuning and feature selection”). The results obtained with “parameters tuning” have been the best among the other two experiments, followed by “parameters tuning and feature selection” and “feature selection” itself. It seems the feature selection combined with SVM parameters tuning have enhanced the results of purely applying feature selection.


                        Tables 12
                         and 13
                         show the mean accuracy obtained by “Feature selection”, “parameters tuning” and “parameters tuning and feature selection” using the Polynomial kernel. In this case, SSH has outperformed PSO and NGHS in 2 out 10 datasets, being the results using only SVM parameter optimization the best ones.

If we consider the best results among all kernels (“underlined” values), it is possible to observe the RBF kernel has been the most accurate one, achieving the top results in 5 out 10 datasets. Considering such results, SSO has outperformed PSO and NGSH in 2 out 5 datasets, being also similar to PSO in one dataset (“liver_disorders”). A more careful look at the results can lead us to the following statement: SSO has obtained the best results in around 50% of the datasets (“heart/RBF kernel”, “liver_disorders/RBF kernel”, “ionosphere/RBF kernel”, “diabetes/RBF kernel” and Polynomial kernels”) considering the best global values, i.e., the ones which consider all kernels. Such fact, allied with the SSO efficiency (it has been consistently the second fastest approach in all experiments), makes it a very interesting evolutionary-based approach for SVM parameters tuning.

In this section, we present the performance of SSO in a real problem of theft detection. The main idea is to identify illegal consumers in power distribution systems using two private datasets from a Brazilian electrical power company containing commercial and industrial profiles. Each profile (industrial and commercial) is represented by eight numerical features, according to the work by Ramos et al. [15]: Demand Billed, Demand Contracted, Demand Measured or Maximum Demand, Reactive Energy, Power Transformer, Power Factor, Installed Power and Load Factor.

In regard to the “feature selection” experiment, we used 20 agents and 200 iterations for all optimization approaches. Table 14
                         displays the accuracy results. For sake of space, we have discussed here only the results considering RBF kernel, since they have been the most accurate ones. If we consider the standard deviation, it is possible to observe that SSO and PSO have obtained similar recognition rates for “Industrial” dataset.

With respect to the “SVM tuning parameters” experiment, we used 20 agents and 200 iterations for all optimization techniques. Table 15
                         displays the accuracy results. As the reader can observe, all techniques have achieve the same accuracies.

In regard to the “SVM tuning parameters combined with feature selection” experiment, we used 10 agents and 100 iterations for all optimization techniques. Table 16
                         displays the accuracy results . As the reader can observe, SSO has outperformed PSO and NGHS for “Industrial” dataset.

Roughly speaking, SSO has obtained very close results to the ones obtained by PSO, being sometimes better than it for “Industrial” dataset considering the three different experiments.

@&#CONCLUSIONS@&#

A considerable number of works have dealt with the problem of estimating SVM parameters, but only a few of them have employed evolutionary-based optimization techniques for this purpose. Very recently, a new optimization technique called Social-Spider Optimization was proposed based on the social dynamics of spiders considering both genres, i.e., male and female, which one with different functions and responsibilities. SSO has obtained very promising results in several applications, and as far as we known, it has never been applied to the context of this paper: feature selection and SVM parameters tuning. Therefore, the main goal of this paper is to provide an SSO-based framework to improve SVM classification results by means of feature selection and parameters optimization.

The experimental section comprised 10 public datasets with two different kernels (RBF and Polynomial), as well as three different approaches: “feature selection”, “SVM parameters tuning” and “SVM parameters tuning combined with feature selection”. SSO has been compared against with PSO and NGHS, being more accurate (sometimes similar) than them in 5 out 10 datasets. In regard to the computational load, NGHS was the fastest approach, followed by SSO and PSO.

We have also validated the proposed SSO-SVM in the context of non-technical (commercial) losses detection in power distribution systems, using two private datasets from a Brazilian electrical power company containing commercial and industrial profiles. The results demonstrated all techniques have achieved close results, being PSO the most accurate one for “Commercial” dataset, and SSO for “Industrial” dataset. If we consider the trade-off effectiveness/efficiency, we can consider SSO the preferable approach between PSO and NGHS.

@&#ACKNOWLEDGMENTS@&#

The authors are grateful to FAPESP Grants #2012/06472-9, #2013/20387-7 and #2014/16250-9, as well as CNPq Grants #303182/2011-3, #470571/2013-6 and #306166/2014-3.

@&#REFERENCES@&#

