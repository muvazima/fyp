@&#MAIN-TITLE@&#Multi-perspective workflow modeling for online surgical situation models

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           Multi-perspective representation of surgical processes.


                        
                        
                           
                           Pipeline-based network of different process model types.


                        
                        
                           
                           Online generation of a surgical situation description from low-level tasks.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Surgical workflow

Workflow modeling

Machine learning

@&#ABSTRACT@&#


               
               
                  Introduction
                  Surgical workflow management is expected to enable situation-aware adaptation and intelligent systems behavior in an integrated operating room (OR). The overall aim is to unburden the surgeon and OR staff from both manual maintenance and information seeking tasks. A major step toward intelligent systems behavior is a stable classification of the surgical situation from multiple perspectives based on performed low-level tasks.
               
               
                  Material and methods
                  The present work proposes a method for the classification of surgical situations based on multi-perspective workflow modeling. A model network that interconnects different types of surgical process models is described. Various aspects of a surgical situation description were considered: low-level tasks, high-level tasks, patient status, and the use of medical devices. A study with sixty neurosurgical interventions was conducted to evaluate the performance of our approach and its robustness against incomplete workflow recognition input.
               
               
                  Results
                  A correct classification rate of over 90% was measured for high-level tasks and patient status. The device usage models for navigation and neurophysiology classified over 95% of the situations correctly, whereas the ultrasound usage was more difficult to predict. Overall, the classification rate decreased with an increasing level of input distortion.
               
               
                  Discussion
                  Autonomous adaptation of medical devices and intelligent systems behavior do not currently depend solely on low-level tasks. Instead, they require a more general type of understanding of the surgical condition. The integration of various surgical process models in a network provided a comprehensive representation of the interventions and allowed for the generation of extensive situation descriptions.
               
               
                  Conclusion
                  Multi-perspective surgical workflow modeling and online situation models will be a significant pre-requisite for reliable and intelligent systems behavior. Hence, they will contribute to a cooperative OR environment.
               
            

@&#INTRODUCTION@&#

Surgical workflow management is expected to enable situation-aware adaptation and intelligent systems behavior in an integrated operating room (OR). The overall aim is to unburden the surgeon and OR staff from manual maintenance and information seeking tasks introduced by new technologies [1,2]. Therefore, a cooperative technical environment should be established [3–5]. The idea is to implement an automatic adaptation of assistance functions to the situation in the OR. For example, this might include the semi-automatic configuration and parameter adaptation of medical devices and the situation-dependent presentation of information. However, such applications of surgical workflow management essentially rely on an abstract understanding of the current situation. The desired technical assistance functionalities must be based on a symbolic representation of the surgical condition with information on various aspects of the ongoing surgical process. This necessity requires approaches to recognize the surgical activities on a fine-granular level, as well as methods for the stable classification of the surgical situation. Additionally, an infrastructure in the OR is required to manage and share process-related information for distributed adaptation of medical devices and systems.

The present work proposes a method for the classification of surgical situations based on multi-perspective workflow modeling. The method interconnected different types of surgical process models, and an intraoperative online model processing pipeline was implemented. Additionally, a study was conducted to evaluate the performance of the proposed approach.

@&#RELATED WORK@&#

The low-level activities of the surgical team form the base of the surgical progress. However, an intervention might also be described with high-level tasks, states of technical resources, or a patient status sequence, among other possibilities. These perspectives contribute to a comprehensive description of the surgical situation during an ongoing intervention. Each perspective might have specific requirements in modeling and processing that are fulfilled by different formalisms and methods. Hence, a combination of process modeling approaches is required.

In general, surgical process models can be generated from either the top-down or the bottom-up. Bottom-up modeling uses recordings of performed interventions to acquire data to generate surgical process models. For instance, patient-individual Surgical Process Models (iSPMs) describe actual surgical procedures with performed surgical tasks in a time-based manner. A set of iSPMs was compiled into a generalized Surgical Process Model (gSPM) [6,7] in the bottom-up modeling approach. The gSPMs for complex intervention types tended to contain more than one hundred tasks that each lasted for a few seconds. In contrast, top-down modeling devices process models by defining states based on surgical expertise. However, the high inter-process variability of surgical procedures limits the use of “manual modeling” to high-level perspectives.

Different approaches to modeling clinical workflows have been proposed in recent years. For instance, Vankipuram et al. [8] utilized recordings of motion of clinical teams that are gathered using radio identification tags and observations to recognize clinical activities in trauma care. An ontology based approach allowed further classification of derivations to distinguish between errors and innovative adaptations in the clinical workflow [9]. Most statistical approaches in the surgical domain have focused on workflow recognition by analysis of endoscopic or microscopic video [10,11]. New technical information sources have been made available for automatic processing in digital operating rooms [12–14]. Modeling and recognition of surgical workflows have been achieved with both low- and high-level tasks [15,16]. For example, Bouarfa et al. [15] proposed a framework with a Bayesian approach for sensor noise handling and task recognition based on Markov theory. Several new Markov models have been developed for surgical process modeling [16,17]. However, these approaches do not include an explicit model of duration. The time and duration of the activities are also important aspects of surgical process models. Different modifications to Markov models with explicit duration models have been proposed for handwriting and speech recognition. For instance, such Markov models consider the explicit modeling of state duration distributions depending solely on the state [18–20]. Applications of these modifications in the health care domain have focused on bio-signal processing, including the segmentation of heart sound recordings [21], and more general pattern recognition in vital signs [22]. A different approach toward situation interpretation for context awareness in augmented reality systems has been proposed; the aim of this approach is to provide dynamic systems behavior through the recognition of the surgical phases based on surgical events [23]. In contrast to other approaches using statistical modeling techniques, the interpretation is based on generic knowledge representation.

All of the aforementioned surgical process modeling approaches focused on the activities of the surgeon(s) in the modeled process. The low-level activities of the surgeon are a central information source but do not describe the context of a situation.

Various applications for workflow management in hospitals and perioperative environments have been proposed. Most such research has focused on assistance for maintenance tasks, such as patient treatment planning and telemedicine [24], as well as logistics and management [4,25]. However, these studies were directly applicable to intraoperative procedures.

In the OR, a Surgical Workflow Management System (SWFMS) coordinates and processes the surgical process models intraoperatively [26]. The SWFMS is a centralized unit that provides process-related information, including a symbolic description of the surgical situation. Any medical device or information system in the OR and perioperative management should have access to the information provided by the SWFMS. Previous studies have discussed the integration of OR-bus technologies and workflow management to enable dynamic systems behavior [27]. Intraoperatively available process information has been used for several assistance applications in surgical therapy. The concept of a centralized surgical display was utilized with an automatic situation-aware selection of the presented information. A workflow-driven surgical information source management system was also proposed [28]; this system automatically switches the attached video sources based on the current surgical low-level task.

Another field of application for surgical workflows is time and resource management. In 2008, Padoy et al. [29] used Hidden Markov models (HMMs) for intervention time prediction based on high-level tasks. Additional methods and frameworks for time and resource management based on surgical low-level tasks have also been proposed [30]. Resource management is also a common problem in business process modeling. Several approaches for multi-perspective modeling have been discussed in this research field. A survey of this literature is provided in [31]. However, business process models often have a normative character. These models are applied to actively structure processes in a company, which is contrary to the descriptive nature of surgical process models and their applications.

In contrast to existing approaches for intraoperative description of surgical situations, we aim to derive high-level information from surgical low-level activities and provide a flexible framework to integrate various classification approaches appropriate for the desired perspectives on the surgical process. The proposed method combines several process models in a network based on a pipeline concept. Thus, the representation of the process is not limited to surgical activities. The development of situation descriptions suitable for medical device adaptation in the OR requires a more general representation of the surgical situation. The low-level activities of the surgeon are a central information source but do not describe the context of a situation. The integration of various surgical process models into a network provides a comprehensive situation description that can support dynamic systems behavior.

The present work considered various aspects of a surgical situation description: low-level activities, high-level tasks, patient status, and the use of medical devices. Generating a symbolic representation of process information on different granularity levels and from different perspectives represents a classification problem; given data on the current activities must be mapped to abstract classes (process states) in the considered perspectives. The main characteristics of the task are the time dependency and causal linkage of the process states from one perspective and across different perspectives. Fig. 1
                      schematically depicts the considered perspectives and their main relations. The situation model only covers direct dependencies at the current situation. The low-level activities described with terms like cut the skin with a scalpel or remove tissue with forceps usually only take a few seconds. They are the fundamental representation of the process changing the patient status. They are also embedded in the context of a more abstract high-level task, such as skin incision or tumor tissue removal. The technical resource perspective is exceptional because it aims to provide qualitative information on projective device usage in categories like not likely to be required or in use. We propose a network of process models with a processing pipeline to represent the perspectives and these dependencies. The concrete implementation of the models and the states considered within highly depends on the clinical use case.

The subsequent sections describe the design of the perspective models and their processing following the information flow through the network from low-level to high-level perspectives. Finally, the connection between the perspectives and the overall processing strategy are described.

The proposed method is based on workflow recognition input. We assumed that changes in the current situation may be recognized at each second during the process (1Hz). A combination of workflow recognition techniques may provide low-level activity information either by video and signal processing [16,29,32] or a fusion of sensor data [33]. The present work is independent from a concrete workflow recognition approach. However, the recognized information must be mapped to surgical low-level tasks for further processing.

The surgical low-level tasks were represented by a graph-based model, namely, a gSPM with a surgical workflow trace, as described in [30]. These models were compiled from patient-individual Surgical Process Models. Briefly, a surgical low-level task was described by the actor, activity, used instrument, anatomical structure, and intervention phase. Each distinct combination of these information entities was represented as a node in the gSPM. Transitions between these nodes represented the course structure found in the iSPMs from which the model was compiled. Nodes and transitions were enriched with timing and frequency information. The tasks typically covered several seconds. The transition probabilities depended directly on the surgical workflow trace, which was a concise representation of the current low-level task and its history. The trace consisted of three parts: the current task, the previously performed task (parent part), and a prior task categorized as structurally relevant (ancestor part) [30]. Hence, the surgical workflow trace 
                           
                              α
                              =
                              (
                              
                                 
                                    α
                                 
                                 
                                    a
                                 
                              
                              ,
                              
                                 
                                    α
                                 
                                 
                                    p
                                 
                              
                              ,
                              
                                 
                                    α
                                 
                                 
                                    c
                                 
                              
                              )
                              ∈
                              
                                 
                                    (
                                    
                                       
                                          S
                                       
                                       
                                          LL
                                       
                                    
                                    ∪
                                    {
                                    ∗
                                    }
                                    )
                                 
                                 
                                    3
                                 
                              
                           
                         is a vector in the set of low-level states (nodes) 
                           
                              
                                 
                                    S
                                 
                                 
                                    LL
                                 
                              
                           
                         with 
                           
                              ∗
                           
                         representing any node. The incompleteness of the node set required the introduction of ambiguous trace parts 
                           
                              (
                              ∗
                              )
                           
                        . The model was also able to process such incomplete traces [30]. This ability allowed the model to handle high inter-process variability in fine-granular process representations. An ongoing procedure is tracked by constructing a subsequent workflow trace whenever a new low-level task had begun. This workflow trace was the output of processing the gSPM during the intervention.

The high-level representations of surgical procedures were modeled with a top-down approach. The identified high-level tasks were considered to be states of the intervention from an action perspective. The tasks represented the main work steps abstracting activity details. Those abstract work steps typically provided contextual information for the current low-level activity.

Additionally, the performed low-level activities generated changes in the patient status, which was represented on an abstract level with such terms as skin incision made, skull opened, or tumor tissue removed. Patient status changes, as well as high-level tasks, depend on recently performed low-level tasks. The states and changes themselves were not directly observable and occurred at random points in time. The timing aspect is essential to the description and projection of surgical workflows for intraoperative adaptation of the overall OR system. Consequently, Hidden semi-Markov models (HSMMs) with stepped time were used because of their ability to express the time-dependent aspects of the underlying surgical procedure. The explicit modeling of residence time within a state is described in the following subsection.

The modeling and calculation of the time dependency relied on a discrete time space with a frequency of 1Hz. The model considered each change in low-level activity as an observation. Thus, the probability distribution of the states in the model was updated with new information. We defined the model as 
                              
                                 λ
                                 =
                                 (
                                 S
                                 ,
                                 O
                                 ,
                                 A
                                 ,
                                 B
                                 ,
                                 π
                                 )
                              
                           , with a finite set of states S, a finite set of observations O, state transition probabilities A, observation probabilities B, and initial state probabilities 
                              
                                 π
                              
                           . The designed high-level model included an explicit start state; thus, 
                              
                                 π
                                 =
                                 (
                                 1
                                 ,
                                 0
                                 ,
                                 0
                                 ,
                                 …
                                 )
                              
                           .
                              
                                 
                                    
                                       
                                          p
                                       
                                       
                                          t
                                       
                                    
                                    (
                                    i
                                    )
                                    =
                                    
                                       
                                          
                                             ∑
                                          
                                          
                                             j
                                             =
                                             1
                                          
                                          
                                             |
                                             S
                                             |
                                          
                                       
                                    
                                    
                                       
                                          
                                             
                                                
                                                   p
                                                
                                                
                                                   t
                                                   -
                                                   1
                                                
                                             
                                             (
                                             j
                                             )
                                             ∗
                                             
                                                
                                                   a
                                                
                                                
                                                   ji
                                                
                                             
                                          
                                       
                                    
                                    ∗
                                    
                                       
                                          b
                                       
                                       
                                          i
                                       
                                    
                                    (
                                    
                                       
                                          o
                                       
                                       
                                          t
                                       
                                    
                                    )
                                    
                                    (
                                    i
                                    ,
                                    j
                                    ∈
                                    S
                                    ;
                                    t
                                    ∈
                                    T
                                    )
                                 
                              
                           No new low-level activity had begun or been recognized in between these recognizable observations. In a standard HMM configuration, the duration of the states can only be modeled implicitly using self-transitions [18]. Continuous update and robustness against recognition failures required explicit state duration modeling. We adapted duration modeling methods commonly used in handwriting and speech recognition applications [18–20] for our model. The residence time within a state (high level task) depends on the highly differing durations of the low-level activities. These activities were encoded in the observations via the trace 
                              
                                 
                                    
                                       α
                                    
                                    
                                       t
                                    
                                 
                              
                            of the low-level model at time t. Hence, we proposed a state duration model that depends on the hidden state, the elapsed time Δt and the last observation 
                              
                                 
                                    
                                       o
                                    
                                    
                                       t
                                    
                                 
                                 =
                                 
                                    
                                       α
                                    
                                    
                                       t
                                    
                                 
                              
                           . The implementation followed the basic idea of observations occurring at random points in stepped time, as presented in [34]. Empirical duration distributions 
                              
                                 
                                    
                                       
                                          
                                             P
                                          
                                          
                                             ∼
                                          
                                       
                                    
                                    
                                       d
                                    
                                 
                                 (
                                 i
                                 ,
                                 
                                    
                                       o
                                    
                                    
                                       t
                                    
                                 
                                 ,
                                 Δ
                                 t
                                 )
                              
                            were calculated from the training data and were applied in the case of a given last observation 
                              
                                 
                                    
                                       o
                                    
                                    
                                       t
                                    
                                 
                              
                           . If the last observation was not applicable, common geometric distributions 
                              
                                 
                                    
                                       P
                                    
                                    
                                       d
                                    
                                    
                                       ⌣
                                    
                                 
                                 (
                                 i
                                 )
                              
                            were used to update the state probabilities. The Both distributions were calculated from the training data and combined into a generalized state duration distribution 
                              
                                 
                                    
                                       p
                                    
                                    
                                       d
                                    
                                 
                                 (
                                 i
                                 ,
                                 
                                    
                                       o
                                    
                                    
                                       t
                                    
                                 
                                 ,
                                 Δ
                                 t
                                 )
                              
                           . The probability of the model’s states was recursively updated at each second.
                              
                                 
                                    
                                       
                                          p
                                       
                                       
                                          t
                                       
                                    
                                    (
                                    i
                                    )
                                    =
                                    
                                       
                                          p
                                       
                                       
                                          d
                                       
                                    
                                    (
                                    i
                                    ,
                                    
                                       
                                          o
                                       
                                       
                                          t
                                       
                                    
                                    ,
                                    Δ
                                    t
                                    )
                                    ∗
                                    
                                       
                                          p
                                       
                                       
                                          t
                                          -
                                          1
                                       
                                    
                                    (
                                    i
                                    )
                                    +
                                    
                                       
                                          
                                             ∑
                                          
                                          
                                             j
                                             =
                                             1
                                          
                                          
                                             |
                                             S
                                             |
                                          
                                       
                                    
                                    
                                       
                                          
                                             
                                                
                                                   
                                                      1
                                                      -
                                                      
                                                         
                                                            p
                                                         
                                                         
                                                            d
                                                         
                                                      
                                                      (
                                                      j
                                                      ,
                                                      
                                                         
                                                            o
                                                         
                                                         
                                                            t
                                                         
                                                      
                                                      ,
                                                      Δ
                                                      t
                                                      )
                                                   
                                                
                                             
                                             ∗
                                             
                                                
                                                   p
                                                
                                                
                                                   t
                                                   -
                                                   1
                                                
                                             
                                             (
                                             j
                                             )
                                             ∗
                                             
                                                
                                                   a
                                                
                                                
                                                   ji
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           The resulting model was founded on an empirical distribution after a given observation occurred, with subsequent step-by-step shifting to an exponential distribution.

The high-level models used the surgical workflow traces α generated by the gSPM as observations. The large inter-process variability in fine-granular process representation results in two special cases that must be considered when using the trace as an observation in HSMMs: observation incompleteness and model incompleteness. The following adaptations presented here focus on the robustness of the classification in those cases.

Observation incompleteness occurred if the observations were not completely available due to the incompleteness of the gSPM node set. Hence, the trace contained ambiguous parts. However, there was still partial information within these observations, at least in the fact that changes in the low-level task sequence occurred. The processing employed the internal structure of the workflow trace that was used as an observation. Whenever an observed trace contained ambiguous parts, e.g. 
                              
                                 
                                    
                                       o
                                    
                                    
                                       t
                                    
                                 
                                 =
                                 
                                    
                                       α
                                    
                                    
                                       t
                                    
                                 
                                 =
                                 (
                                 
                                    
                                       α
                                    
                                    
                                       a
                                    
                                 
                                 ,
                                 
                                    
                                       α
                                    
                                    
                                       p
                                    
                                 
                                 ,
                                 ∗
                                 )
                              
                           , all of the possible matching observations 
                              
                                 o
                                 ∼
                                 
                                    
                                       a
                                    
                                    
                                       t
                                    
                                 
                                 ∈
                                 O
                              
                            were considered when updating the model with respect to the observation probabilities 
                              
                                 
                                    
                                       b
                                    
                                    
                                       i
                                    
                                 
                                 (
                                 o
                                 ∼
                                 
                                    
                                       a
                                    
                                    
                                       t
                                    
                                 
                                 )
                              
                            within the corresponding states 
                              
                                 
                                    
                                       s
                                    
                                    
                                       i
                                    
                                 
                                 ∈
                                 
                                    
                                       S
                                    
                                    
                                       LL
                                    
                                 
                              
                           . This step was not applied for traces that were completely ambiguous or that only contained the ancestor part, as there were an excessive number of matching observations in these cases. Such incomplete observations were ignored when updating the model.

Model incompleteness was the second situation that prevented the direct use of the given trace as an observation. Whenever a trace was not contained within the training set, the given observation did not match any observation of the states in the high-level model. However, the aforementioned strategy for incomplete observations could be applied to use the observation. Again, the well-known trace structure was used. Parts of the observed trace were ignored (made ambiguous) based on a simple rule set. The rule set for observation matching was based on the assumption that the information content of the trace parts decreased with age. Hence, the ancestor part was the first to be made ambiguous 
                              
                                 (
                                 
                                    
                                       a
                                    
                                    
                                       a
                                    
                                 
                                 ,
                                 
                                    
                                       α
                                    
                                    
                                       p
                                    
                                 
                                 ,
                                 
                                    
                                       α
                                    
                                    
                                       c
                                    
                                 
                                 )
                                 →
                                 (
                                 ∗
                                 ,
                                 
                                    
                                       α
                                    
                                    
                                       p
                                    
                                 
                                 ,
                                 
                                    
                                       α
                                    
                                    
                                       c
                                    
                                 
                                 )
                              
                           , followed by the parent part 
                              
                                 (
                                 
                                    
                                       a
                                    
                                    
                                       a
                                    
                                 
                                 ,
                                 
                                    
                                       α
                                    
                                    
                                       p
                                    
                                 
                                 ,
                                 
                                    
                                       α
                                    
                                    
                                       c
                                    
                                 
                                 )
                                 →
                                 (
                                 
                                    
                                       a
                                    
                                    
                                       a
                                    
                                 
                                 ,
                                 ∗
                                 ,
                                 
                                    
                                       α
                                    
                                    
                                       c
                                    
                                 
                                 )
                              
                            and then both of them 
                              
                                 (
                                 
                                    
                                       a
                                    
                                    
                                       a
                                    
                                 
                                 ,
                                 
                                    
                                       α
                                    
                                    
                                       p
                                    
                                 
                                 ,
                                 
                                    
                                       α
                                    
                                    
                                       c
                                    
                                 
                                 )
                                 →
                                 (
                                 ∗
                                 ,
                                 ∗
                                 ,
                                 
                                    
                                       α
                                    
                                    
                                       c
                                    
                                 
                                 )
                              
                           . Subsequently to each modification, the partial observation was tested to be applicable as described above.

Finally, a probability distribution over the given model states was obtained for each time step. The state with the highest probability was taken as the output of the perspective processing.

Intraoperative information on technical resources, especially their usage, was another important aspect of the surgical situation. The low-level activities provided information on whether a technical resource (a medical device) was currently in use. However, it did not include information on whether a device had been used previously and, more importantly, whether the resource could be used during the remaining intervention course. Additional process models based on the HSMM were included to obtain qualitative information on device usage. Each device or technical resource was represented with its own model. The models included the following states of the device: not used yet, in use, likely to be required, not likely to be required, not required, and unused. Fig. 2
                         depicts the state transition graph for the technical resources.

All technical resources were considered not used yet at the beginning of the intervention. This state was maintained until the device was used for the first time. The resource was considered in use whenever it was used. For a certain time span, the resource could likely be used again during the remainder of the intervention (likely to be required). Later, another use of the same resource was less likely but still possible (not likely to be required). The states of likely to be required and not likely to be required could not be strictly defined. However, an assumption regarding the requirement could be established based on the course of intervention and thus provide qualitative information about the technical resource usage. Finally, for many resources, there was a point of progress at which no further application was possible or useful (not required). The unused state was introduced to explicitly represent cases in which the device was not used during the intervention, thus allowing the model to be applied even when the resource was not used in a given process. In contrast to the other perspectives, device usage information depended not only on past usage but also on the potential future course.

The model’s observations were built on the output of all of the previously described models to obtain as much information as possible for the desired partly predictive statement. However, the low-level process information was reduced to the current work step, omitting the remainder of the surgical workflow trace due to complexity issues. Thus, an adapted observation handling such as that described for high-level task models was not applicable to the device models.

The different perspective models had to be interconnected to obtain the summarizing situation description. Fig. 3
                         provides a schematic view of the proposed process model network.

The workflow recognition technique was assumed to provide the low-level work step whenever it changed. This information was processed with the low-level model as described above. The result, namely, a surgical workflow trace, was used directly as an observation to the high-level and patient status models. Then, the output of their update processing step was combined with the current low-level work step and again used as an observation to the device usage models. Fig. 3 presents the entire model processing network. The information was forwarded through the processing network only when a new low-level task was recognized. In the meantime, each process model was processed independently to allow for the use of individual time-dependency modeling approaches. Finally, the information generated by the models within the network was compiled in the surgical situation model. Thus, the approach provided a comprehensive intraoperative situation description.

@&#EVALUATION@&#

A study was conducted to evaluate the performance of the process models and pipeline-based interconnection approach.

Brain tumor removals were chosen as a neurosurgical use case. The intervention course was divided into four major phases: preparation, trepanation, resection, and closure. Sixty iSPMs of brain tumor removals were used in this study. The process instances were recorded by human observers using the ICCAS Workflow Editor [35]. The observers had a medical background and received a supervised training to be able to record the low-level work steps directly in the OR [1]. The interventions performed by six experienced neurosurgeons were chosen independently of the diagnoses according to the surgical procedure, a craniotomy and resection. A neurosurgical navigation system was used in 33 cases. In 36 cases, intraoperative ultrasound was used. The duration of the procedures ranged from 2h 23min 54s to 6h 37min 25s, with a mean duration of 3h 53min 59s±53min 19s.

The low-level modeling considered 168 different tasks with an average duration of 18.7±12.3s. A process instance consisted of a mean of 190.5±76.6 performed work steps. The structure of the high-level model was based on a performed top-down modeling. The considered high-level tasks were defined with clinical experts and manually annotated in the process recordings. Fig. 4
                            presents the process instances with color-coded performed high-level work steps (left) and lists the tasks with their mean duration (right).

The color-coded process instances shown in Fig. 4 represent the intervention courses in terms of the considered high-level tasks. The recorded instances highly differ in length and number of steps. Although they all include the linear sequence of the four intervention phases a significant variation in the occurrence, duration and sequencing of the high-level tasks including repetitions can be observed. The high-level tasks model generated from the training set contains 19 nodes (including a start node and an end node) and 79 transitions.

The patient status was expressed in abstract terms related to the intervention progress and included eleven states established with clinical experts. The model was constructed by top-down modeling and trained with the manually annotated iSPMs. Table 1
                            lists the considered states and their average duration.

All of the considered patient states were the result of a sequence of low-level tasks. For instance, skull opened was the result of drilling and milling cranial bone structures. Hence, the patient status provided another perspective on the current surgical situation and its history.

The technical resource perspective was designed to support resource management tasks. The medical systems that were potentially mobile and shared among multiple ORs were considered. In the brain tumor removal case, these systems included the neurosurgical navigation system, the ultrasound, and intraoperative monitoring with neurophysiology. A model for each of the three devices was constructed with their states as described above. The iSPM dataset contained the process instance with and without the use of these devices. Hence, the resulting models should be able to handle cases in which these technical resources are used as well as interventions without these devices.

A leave-one-out cross validation was performed to evaluate the performance of the situation classification. The descriptions of the situation generated by the system, including high-level task, patient status and the three resources, were compared to manually labeled situations in the iSPMs for each second. The approach was based on an assumed recognition of low-level tasks. The automatically obtained workflow recognition data always included errors. Hence, we included two different cases of recognition errors in the simulation: misinterpreting work steps and completely omitting work steps. The performance of the models was analyzed with combinations of both error types with rates ranging from 0% to 25% in 5% increments. The simulation randomly overwrote the work steps with unknown or completely ignored them according to the rates of the current study that was being performed. The calculations were performed twenty times for each of the sixty process instances in each of the error rate combinations except 0%, where repetition of a 0% error rate was not necessary. Hence, 42,060 runs and over fifty million points in time were analyzed.

@&#RESULTS@&#

The correct classification rate was calculated by comparing the automatic classification and manual labels for each second. Fig. 5
                      depicts the correct classification rates for each input distortion setting and model perspective. The rate at which the high-level task and patient status were simultaneously classified correctly is shown at the bottom.

A correct classification rate of over 90% was measured for high-level tasks and for patient status with full input data. Overall, the classification rate decreased with an increasing distortion of the inputs. Missing inputs had a slightly greater influence than modified inputs. The high-level task model initially performed better (94.7%) than the patient status model (93.7%) but declined faster with increasing input distortion rates. The high-level tasks were classified correctly in 83.8% of the cases, whereas the patient status classifications were correct in 87.7% of the cases with half of the input distorted (25% modified and 25% missing).

Some use cases might rely on both high-level tasks and patient status. The combined classification rate was lower than the single rates. A correct classification rate of 89.3% was measured without input distortion. The reaction to modified and missing inputs is depicted at the bottom of Fig. 5. Missing inputs led to a slightly greater decline in performance than modified inputs.

In each perspective, the method could be considered as a composition of classifiers for each single state. The classification rates of the state classifiers in the high-level perspective without input distortions are depicted in Fig. 6
                     . The high-level tasks that did not occur in all process instances are written in gray.

The classification rates in Fig. 6 demonstrate that most of the low-level tasks were categorized correctly over 90% of the time. However, the states of plan access, expose skull, and brain tissue treatment had significantly lower correct classification rates.

Furthermore, the classification rates for the technical resource states were analyzed (see Table 2
                     ). A neuro-navigation system, intraoperative ultrasound, and neurophysiological workstation were considered as the technical resources. Again, the classification was correct in over 90% of the intervention time for the full low-level task input. Similar to high-level tasks and patient status, the classification correctness decreased with increased distortion. The process model for the navigation system had a better classification rate (95.2%) than the ultrasound model (85.1%) and tended to be less robust with modified and missing input data. The classification of the neurophysiology usage performed best, with a 98.1% correct classification rate, and was highly robust against input distortion.

The calculations for a one-second time step depended solely on previously gathered information. Additionally, these calculations were performed in less than 50ms on standard hardware. Hence, the proposed method was fully suitable for on-line classification of the surgical situation.

@&#DISCUSSION@&#

We presented a novel approach for the on-line generation of comprehensive descriptions of a surgical situation from surgical low-level tasks. This proposed approach was based on multi-perspective process modeling with a network of surgical process models and provided different perspectives of the situation. The feasibility of the approach was demonstrated by an evaluation study conducted on brain tumor removal procedures. The evaluation considered six aspects of a surgical situation: the low-level task with a concise representation of its history in the form of a surgical workflow trace, the high-level task, the patient status, and three major technical resources. The perspectives are considered the most relevant for intraoperative (semi-)automatic device adaption. However, other relevant perspectives of a surgical procedure might be useful to consider for enabling dynamic systems behavior and context-aware adaptation in the OR and for department-wide resource management, such as surgical risks, anesthesia status or consumables and supplies. The pipeline-based network structure easily allows for the integration of additional process models and different classification approaches for additional purposes. Perspective interdependencies had to be handled during the modeling process in the design phase. The semantics of these dependencies between the perspectives cannot be expressed explicitly due to the use of probabilistic models. The derivation of information needs to rely on structural analysis rather than on clinical semantics of the performed work steps. This limitation might be overcome by integrating knowledge-based modeling approaches into the network of process models. Team communication and participant interaction might also be a valuable source of information. The performed study considered the surgeon’s low-level activities only. The low-level model contains the participant as an information entity. Hence, the activities of the team members could easily be included in further development.

The proposed method currently calculates the state distribution probability at each second during the intervention. The retrospective performance can be improved by calculating the most probable path (Viterbi) instead of the most probable current state. The forward and backward variables must be redefined with respect to the state duration distributions applied in our method. This redefinition will be useful for postoperative use cases because it allows for the reclassification of past work steps.

The online classification performance was evaluated with sixty brain tumor removal procedures. The cases were not limited to any specific tumor classification of the intracranial region. Additionally, the interventions were performed by six different neurosurgeons. Overall, the training set was extremely diverse, as it included a large span of intervention durations and a large number of low-level activities. An improvement in performance can be expected with a narrowing of the cases that are utilized. The use of a less diverse dataset would allow for the incorporation of more preoperative information and a reduction in variance. Greater input data uniformity tends to simplify the classification task. Nonetheless, the model must be able to handle inter-process variability. Finally, there is a trade-off between model specificity and sufficient training data.

The lengthy and complicated surgical procedure of brain tumor removal was chosen because of its high potential for surgical workflow management applications. The obtained classification rate of over 90% in each perspective with little to no input distortion is acceptable for a variety of applications, such as situation-aware information presentation or department-wide resource management. Hence, the present work contributes to workflow-driven assistance functionalities. It provides process-related information which can be used to develop assistance systems to reduce the surgeon’s workload during the intervention. The combined classification rate for high-level tasks and patient status was slightly lower (over 89%). Ultimately, the requirements and limitations depend on the concrete assistance application and its risk management.

Qualitative information on the current and potential future use of major medical devices was particularly valuable for department-wide resource management. The inclusion of states, such as likely to be required and not likely to be required, provided the models with a predictive character. The future usefulness of medical systems does not depend solely on the current low-level task. Instead, it requires a more general understanding of the situation. The resource models performed well, with a successful classification rate of over 90% with little to no input distortion based on low-level tasks, high-level tasks, and patient status. The classification obtained better results for the navigation system than for the ultrasound device. This result is likely due to more structured use of the navigation system and clearer indicators; for instance, a registration performed during the preparation phase. The classification of neurophysiology usage was highly robust because it depended largely on such usage in low-level tasks.

Most implementations of surgical workflow management are built on workflow recognition techniques [26,29,36]. Thus, the stability of recognition was crucial for classification of the on-line situation. The robustness of the intraoperatively generated process information against workflow recognition errors was analyzed in the evaluation. The perspectives were robust against missing or modified input. Reasonable results were obtained even with 25% of the input missing and an additional 25% of the input data being distorted. The observed robustness indicates that a limited number of low-level support points were sufficient for guiding abstract perspectives because each perspective model included its own representation of the time and course structure of the surgical procedure. The correct classification rate in high-level tasks and patient status declined less significantly for modified inputs than for missing inputs. The adapted handling of incomplete observations by those models allowed for an efficient use of distorted inputs. Logically, no such effect could be observed for technical resource models in which the approach could not be applied. However, the evaluation of robustness was limited because the workflow recognition task was simulated. Real sensor systems might produce false-positive outputs and might not have an error rate that is equally distributed over all classes of low-level tasks, as assumed in this study. Hence, a combination of workflow recognition techniques and the proposed method for situation classification must be evaluated in future work.

@&#CONCLUSIONS@&#

We proposed a framework for multi-perspective workflow modeling and on-line classification of a surgical situation based on low-level activity input. The method combined a fine-granular process representation with contextual information. Multi-perspective surgical workflow modeling will be a significant pre-requisite for reliable and intelligent systems behavior in the OR. However, the proposed principle might also be applied to other treatment and healthcare processes using different perspective.

The present work contributes to bridging the gap between the recognition of surgical activities and the need for contextual information in situation-aware medical devices. The long-term goal of future OR developments could apply the provided process-related information to support efficiency, effectiveness and patient safety with workflow-driven assistance technologies. The study also demonstrated the feasibility of the method for applications beyond the adaptation of medical devices to surgical situations. The resource models included in the process model network had a predictive character and provided qualitative information for department-wide resource management system. Hence, the present work represents an important step toward a managed OR with a cooperative technical environment.

@&#REFERENCES@&#

