@&#MAIN-TITLE@&#Prediction of facial deformation after complete denture prosthesis using BP neural network

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           BP neural network is used to predict feature positions on facial model.


                        
                        
                           
                           The deformation of facial model is simulated using Laplacian deformation technique.


                        
                        
                           
                           This method can predict facial deformation quickly and accurately.


                        
                        
                           
                           CT scan is not necessary.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

BP neural network

Laplacian deformation

Complete denture

Soft tissue simulation

Feature Template

@&#ABSTRACT@&#


               
               
                  With the accelerated aging of world population, complete denture prosthesis plays an increasingly important role in mouth rehabilitation. In addition to recovering stomatognathic system function, restoring the appearance of a third of the area under the face has become a great challenge in complete denture prosthesis. This study analyzes the interactive relationship between the appearance of a third of the area under the face and complete denture, and proposes a new method to predict facial deformation after complete denture prosthesis. Firstly, to improve computational efficiency, the feature template is constructed to replace the deformed facial region. Secondly, a forecast model of elastic deformation is constructed using BP neural network and predicts elastic deformation amount because of the inhomogeneous, anisotropic and nonlinear material properties of soft tissue. Finally, a new feature template is calculated using deformation amount, and the deformation of preoperative model is simulated using Laplacian deformation technique. The average error rates of different hidden layer nodes in the neural network are analysed. Deformation and postoperative models are superimposed for match analysis. Experimental results show that this method can predict facial soft tissue deformation quickly and accurately.
               
            

@&#INTRODUCTION@&#

The complex process of complete denture prosthesis includes many treatments and testing steps. Complete denture prosthesis mainly targets edentulous patients, which not only improves function but also restores the appearance of the face. The optimum operation scheme is developed before operation to produce the best results. Delicate surgeries require doctors to develop treatment plans, which integrate clinical examination, dental cast and cephalometry. The doctors must predict the facial aesthetic and facial soft tissue changes of the patients after operations. Currently, the prediction of facial deformation depends on the subjective judgments and experience of doctors, but this process lacks scientific quantitative analysis.

In the past years, many scholars employed quantitative facial analysis after maxillofacial surgery [1,2]. Many studies on facial soft tissue modelling have been conducted, and they are classified into three categories, namely, mass-spring model (MSM), finite-element model (FEM) and mass-tensor model (MTM). MSM was initially accepted for face animation because of its well-known physics and computational efficiency. Koch et al. [3] reconstructed facial model and skull model according to CT data. They constructed MSM between facial and skull models for deformation simulation. Keeve et al. [4] constructed MSM with prismatic element and compare its precision with FEM. Teschner et al. [5] computed the state of equilibrium of soft tissue by using multilayer nonlinear MSM. FEM has high precision, but requires long calculation time. Sarti et al. [6] used a super computer to compute voxel-based FEM. Zachow et al. [7] proposed fast tetrahedral elements for FEM and applied the model in clinical practise. Gladilin [8] applied FEM to the simulation of facial muscles. Chabanas et al. [9] reduced the pretreatment time with a mesh morphing algorithm to prepare FEM. Many studies optimised computing strategies and models [10â€“12] because of the substantial and long calculation time of FEM. MTM was developed to balance calculation speed and precision. Mollemans et al. [13] applied MTM to soft tissue simulation for maxillofacial surgery. They reconstructed the facial and skull models by using CT data and then simulated the displacement of skull and facial deformation. MTM is a combination of FEM and MSM. On the one hand, MTM has the biomechanical relevance of FEM. On the other hand, MTM retains the easy architecture of MSM. Patients require CT scans to analyse the soft tissue model to determine the boundary conditions of the model. This procedure could affect the health of patients.

Artificial neural networks (ANNs) have been widely applied to complex system modelling and are particularly suitable to problems that involve the manipulation of multiple parameters and nonlinear interpolation. BP neural network is a typical ANN, which can implement any complex nonlinear mapping functions. Scott et al. [14] predicted the material properties of ceramic using ANNs. Suganthi et al. [15] applied BP neural network to predict the multiple quality responses in micro-EDM operations. Oktem [16] constructed BP neural network model for surface roughness prediction. Models of the diffusion of oxygen through mixed ionic conductors have provided accurate predictions of the diffusion coefficient [17]. ANNs have provided accurate predictions in the performance of materials with highly complex behaviour [18,19]. However, ANNs have not been applied in facial deformation prediction research.

No current studies have analysed the prediction of facial deformation after complete denture prosthesis. This paper proposes a new facial deformation prediction method after complete denture prosthesis. This method has high computational efficiency and good predictive accuracy and does not require CT scan. Preoperative and postoperative models of 48 patients were obtained from doctors. The feature templates containing several feature points were designed to replace the deformed area of facial models. They also improved the computational efficiency. The transformation from preoperative to postoperative models must be examined with BP neural network. Then, BP neural network was applied to construct the nonlinear elastic prediction model of soft tissue. Forecast output data can be obtained through elastic prediction model. According to the forecast output data, the deformations of preoperative models were simulated using Laplacian deformation technique.

This study aims to predict the facial deformation of a patient after complete denture prosthesis and to provide the constraints related to the digital arrangement of artificial teeth in the complete denture. The proposed method in this paper is prepared for the digital design and manufacturing of complete denture. The traditional production of complete denture requires skilled technicians, high treatment costs, and long production cycle. A CAD/CAM (Computer Aided Design/Computer Aided Manufacturing) system can assist the completion of manual arrangement and wax production by using a computer and a rapid prototyping technology. A 3D model of the edentulous mould is obtained through scanning. Then critical features are very necessary to provide the basis of tooth-arrangement and the constraints on the spatial position and posture of complete denture. The fullness constraint surface is one of the most important features of complete denture production, as shown in 
                     Fig. 1. The completely arranged artificial articulation is related to the fullness surface and satisfies individualised needs. The fullness constraint surface, which is the inner surface of the skin, is ratiocinated by the prediction of facial deformation of a patient after complete denture prosthesis.

The models used in this paper were supplied by the Department of Orthodontics, School of Stomatology, Peking University. A total of 48 edentulous patients agreed to participate in this research. Preoperative and postoperative models of each patient were acquired. Face Scan (3D SHAPE, Germany) was used to obtain the models (scan time: 0.3/0.8s; scan accuracy: 0.1mm). Finally, preoperative and postoperative facial 3D point cloud data of 48 patients were collected.

The main work of this study is to predict the facial deformation of edentulous patients after complete denture prosthesis. The overview of our simulation pipeline is depicted in 
                     Fig. 2. The work flow includes the following steps:
                        
                           (1)
                           
                              Model matching. According to the positions of the eyes and nose, ICP-based registration can be performed between preoperative and postoperative models.


                              Constructing feature templates. Feature templates are constructed for the preoperative and postoperative models and consisted of several feature points.


                              Constructing elastic deformation prediction model. BP neural network can be trained using feature templates. Thereafter, BP neural network becomes an elastic deformation prediction model.


                              Prediction and simulation. According to the output data predicted by elastic deformation prediction model, the deformation of preoperative model can be simulated using Laplacian deformation technique.


                              Validation. The computed facial appearance is qualitatively and quantitatively compared with the real postoperative model. The average error rates of a different number of hidden layer nodes of neural network are analysed.

3D face scan data have considerable differences. The vertices among the models have no corresponding relationship and the number of vertices contradicts the number of triangle meshes. The feature template is constructed to replace the deformed facial region to allow manoeuvrability of data, to improve the calculation efficiency and to simplify the point cloud models.

Before constructing the feature template, ICP-based registration is performed between preoperative and postoperative models according to the positions of the eyes and nose, as shown in 
                        Fig. 3.

The feature template is constructed as shown in 
                        Fig. 4(b). The main steps include the following:
                           
                              (1)
                              The maximum point A (Fig. 4(a)) in the Z direction is founded in the coordinates, as shown in Fig. 3.

The vertical isoline across point A in the Y direction is shown in Fig. 4(a). According to the contour curvature, the feature points under the nose and on upper lip part are located and labelled as points 1, 3, 4 and 5. The contour curvature is expressed by mean curvature
                                    
                                       (1)
                                       
                                          
                                             H
                                             =
                                             
                                                1
                                                
                                                   n
                                                
                                             
                                             
                                                âˆ‘
                                                
                                                   i
                                                   =
                                                   1
                                                
                                                n
                                             
                                             
                                                
                                                   K
                                                
                                                
                                                   i
                                                
                                             
                                             
                                             i
                                             =
                                             1
                                             ,
                                             2
                                             ,
                                             
                                             â€¦
                                             ,
                                             
                                             n
                                             
                                          
                                       
                                    
                                 
                                 
                                    
                                       (2)
                                       
                                          
                                             
                                                
                                                   K
                                                
                                                
                                                   i
                                                
                                             
                                             =
                                             
                                                
                                                   
                                                      2
                                                      âˆ™
                                                      (
                                                   
                                                   
                                                      
                                                         p
                                                      
                                                      
                                                         j
                                                      
                                                   
                                                   âˆ’
                                                   
                                                      p
                                                      i
                                                   
                                                   
                                                      )
                                                      âˆ™
                                                   
                                                   
                                                      n
                                                      âƒ‘
                                                   
                                                
                                                
                                                   (
                                                   
                                                      p
                                                      j
                                                   
                                                   âˆ’
                                                   
                                                      p
                                                      i
                                                   
                                                   
                                                      )
                                                      âˆ™
                                                      (
                                                   
                                                   
                                                      p
                                                      j
                                                   
                                                   âˆ’
                                                   
                                                      p
                                                      i
                                                   
                                                   )
                                                
                                             
                                             
                                          
                                       
                                    
                                 where 
                                    
                                       H
                                    
                                  is the mean curvature; 
                                    
                                       n
                                    
                                  is the number of points in one ring neighbourhood of 
                                    
                                       
                                          p
                                       
                                       
                                          i
                                       
                                    
                                 ; 
                                    
                                       
                                          p
                                       
                                       
                                          i
                                       
                                    
                                  is the centre point; 
                                    
                                       
                                          p
                                       
                                       
                                          j
                                       
                                    
                                  is the point in one ring neighbourhood of 
                                    
                                       
                                          p
                                       
                                       
                                          i
                                       
                                    
                                 ; 
                                    
                                       
                                          K
                                       
                                       
                                          i
                                       
                                    
                                  is the curvature of the surface between 
                                    
                                       
                                          p
                                       
                                       
                                          i
                                       
                                    
                                  and 
                                    
                                       
                                          p
                                       
                                       
                                          j
                                       
                                    
                                 ; and 
                                    
                                       
                                          n
                                       
                                       âƒ‘
                                    
                                  is the normal vector at 
                                    
                                       
                                          p
                                       
                                       
                                          i
                                       
                                    
                                 . The middle point 2 between points 1 and 3 is computed, and the symmetric points 6 and 7 of points 1 and 2 are relative to point 4 in X and Y plane.

The horizontal isoline across point A in the X direction can be obtained. According to the contour curvature, the feature points E and F on both sides of the nose are located. Similar to the middle point G between points A and E, the middle point H between points A and F is computed.

Similar to step (2), the vertical isolines across points E, G, H, F in the Y direction are obtained. The feature points are located according to the contour curvature. Finally, the feature template comprising feature points 1â€“29 is collected (Fig. 4(b)).

Human skin tissue is a heterogeneous material. Its mechanical properties include nonlinearity and anisotropism. BP neural network can express complex, nonlinear and uncertain systems.

In this paper, BP neural network is used to obtain the relationship between elastic deformation and the feature template of the preoperative model. The facial elastic deformation prediction model can be constructed.

BP neural network is a feedforward neural network. The main characteristic of this network is that the signals are transmitted forward, and the errors are transmitted in reverse. Hecht-Nielsen [21] proved that three layers of feedforward network with one hidden layer can approach any multivariable polynomial function. Therefore, the three layers of BP neural network are used to predict the amount of elastic deformation in the preoperative model. The topology of BP neural network is shown in 
                        Fig. 5.


                        Fig. 5 shows that 
                           
                              {
                           
                           
                              
                                 X
                              
                              
                                 1
                              
                           
                           
                              ,
                           
                           
                              
                                 X
                              
                              
                                 2
                              
                           
                           
                              ,
                           
                           
                              â€¦
                           
                           
                              ,
                           
                           
                              
                                 
                                    X
                                 
                                 
                                    n
                                 
                              
                           
                           
                              }
                           
                         are the input data of BP neural network. 
                           
                              
                                 X
                              
                              
                                 i
                              
                           
                        (i=1,2,â€¦,n) preserves the coordinates of feature points on the preoperative model. 
                           
                              {
                           
                           
                              
                                 Y
                              
                              
                                 1
                              
                           
                           
                              ,
                           
                           
                              
                                 Y
                              
                              
                                 2
                              
                           
                           
                              ,
                           
                           
                              â€¦
                           
                           
                              ,
                           
                           
                              
                                 
                                    Y
                                 
                                 
                                    n
                                 
                              
                           
                           
                              }
                           
                         are the predicted values. 
                           
                              
                                 Y
                              
                              
                                 i
                              
                           
                        (i=1,2,â€¦,n) preserves the displacements of corresponding feature points from preoperative to postoperative model, also known as amount of elastic deformation. The number of neuron of input layer is the same as that of the output layer at 29. 
                           
                              
                                 Ï‰
                              
                              
                                 ij
                              
                           
                         and 
                           
                              
                                 Ï‰
                              
                              
                                 jk
                              
                           
                         are the weights of the BP neural network.

The node transfer function of neuron in the hidden layer is the tangent transfer function
                           
                              (3)
                              
                                 
                                    f
                                    
                                       (
                                       x
                                       )
                                    
                                    =
                                    
                                       
                                          1
                                          âˆ’
                                          
                                             
                                                e
                                             
                                             
                                                âˆ’
                                                x
                                             
                                          
                                       
                                       
                                          1
                                          +
                                          
                                             
                                                e
                                             
                                             
                                                âˆ’
                                                x
                                             
                                          
                                       
                                    
                                    
                                 
                              
                           
                        
                     

The space partition of different samples is achieved. The node transfer function of neuron in output layer is linear transfer function. The initial weights are the key trigger for the local minimum and the convergence in the training because of the nonlinear mapping relationship between input and output. Therefore, the initial weights are even-distributed empirical decimal. Lâ€“M algorithm (Levenbergâ€“Marquardt algorithm) is chosen to update and compute for 
                           
                              
                                 Ï‰
                              
                              
                                 ij
                              
                           
                         and 
                           
                              
                                 Ï‰
                              
                              
                                 jk
                              
                           
                         because Lâ€“M algorithm has fast convergence speed. Nonlinear mapping between input and output can be realized. The training of BP neural network is shown in 
                        Fig. 6.

The completely trained BP neural network is the prediction model of nonlinear facial elastic deformation and has the ability to predict the elastic deformation of preoperative model.

The required deformation is obtained by moving many control points in the facial point cloud data. If one control point is moved, then new coordinates for every point in the point cloud data must be computed, and the calculation burden is too heavy. The ideal method is to calculate the relevant points after moving all control points to the specified location.

Elastic deformation prediction model predicts the amount of elastic deformation, in which feature points in preoperative models move, that is 
                           
                              
                                 Y
                              
                              
                                 i
                              
                           
                        (i=1, 2,â€¦, n). The new coordinates of feature points are expressed as 
                           
                              
                                 
                                    
                                       Z
                                    
                                    
                                       i
                                    
                                 
                                 
                                    =
                                 
                                 
                                    
                                       X
                                    
                                    
                                       i
                                    
                                 
                                 
                                    +
                                 
                                 
                                    Y
                                 
                              
                              
                                 i
                              
                           
                        (i=1, 2,â€¦, n). The feature points in preoperative models are control points applied to deformation. When all control points are moved to their new positions, all points in the point cloud data are computed using Laplacian deformation technique.

Vertex p in the point cloud data is given as 
                           
                              
                                 v
                              
                              
                                 p
                              
                           
                        . The Laplacian coordinate corresponding to 
                           
                              
                                 v
                              
                              
                                 p
                              
                           
                         is shown as 
                           
                              
                                 Î´
                              
                              
                                 p
                              
                           
                        . The centre point of one ring neighbourhood of 
                           
                              
                                 v
                              
                              
                                 p
                              
                           
                         is expressed as
                           
                              (4)
                              
                                 
                                    
                                       
                                          v
                                          Â¯
                                       
                                       p
                                    
                                    =
                                    
                                       1
                                       
                                          
                                             d
                                             p
                                          
                                       
                                    
                                    
                                       âˆ‘
                                       
                                          q
                                          âˆˆ
                                          N
                                          (
                                          p
                                          )
                                       
                                    
                                    
                                       v
                                       q
                                    
                                    
                                 
                              
                           
                        where 
                           
                              
                                 
                                    
                                       v
                                    
                                    Ì…
                                 
                              
                              
                                 p
                              
                           
                         is the centre point and 
                           
                              
                                 d
                              
                              
                                 p
                              
                           
                         is the number of the neighbourhood points.

According to uniform weight, the Cartesian coordinate of the triangle mesh is transformed into Laplacian coordinate, as shown in 
                        Fig. 7 and expressed as
                           
                              (5)
                              
                                 
                                    
                                       Î´
                                       p
                                    
                                    =
                                    L
                                    
                                       (
                                       
                                          v
                                          p
                                       
                                       )
                                    
                                    =
                                    
                                       v
                                       p
                                    
                                    âˆ’
                                    
                                       1
                                       
                                          
                                             d
                                             p
                                          
                                       
                                    
                                    
                                       âˆ‘
                                       
                                          q
                                          âˆˆ
                                          N
                                          (
                                          p
                                          )
                                       
                                    
                                    
                                       v
                                       q
                                    
                                    
                                 
                              
                           
                        
                     

Based on discrete mathematics, the adjacent matrix A can be expressed as
                           
                              (6)
                              
                                 
                                    
                                       A
                                       pq
                                    
                                    =
                                    
                                       {
                                       
                                          
                                             
                                                
                                                   1
                                                   ,
                                                   
                                                   (
                                                
                                                p
                                                ,
                                                q
                                                
                                                   )
                                                   âˆˆ
                                                   edge
                                                
                                             
                                          
                                          
                                             
                                                0
                                                ,
                                                otherwise
                                             
                                          
                                       
                                    
                                    
                                 
                              
                           
                        
                     

The Laplacian coefficient matrix L can be expressed as
                           
                              (7)
                              
                                 
                                    L
                                    =
                                    I
                                    âˆ’
                                    
                                       
                                          D
                                       
                                       
                                          âˆ’
                                          1
                                       
                                    
                                    A
                                    
                                 
                              
                           
                        where D is the diagonal matrix, 
                           
                              
                                 
                                    D
                                 
                                 
                                    pp
                                 
                              
                              
                                 =
                              
                              
                                 
                                    d
                                 
                                 
                                    p
                                 
                              
                           
                         and 
                           
                              I
                           
                         contains the weights of control points.

The new coordinates of all points in the facial point cloud data can be computed by
                           
                              (8)
                              
                                 
                                    [
                                    
                                       L
                                       I
                                    
                                    ]
                                 
                                 
                                    
                                       V
                                    
                                    â€²
                                 
                                 =
                                 
                                    [
                                    
                                       Î´
                                       W
                                    
                                    ]
                                 
                                 
                              
                           
                        where 
                           
                              W
                           
                         is the coordinate of the control points and 
                           
                              
                                 V
                              
                              
                                 â€²
                              
                           
                         is the new coordinate of all points.

The new coordinates of all points in the facial point cloud data are computed based on the changes in the positions of the control points. The deformation of preoperative models is simulated.

@&#RESULTS@&#

Deformation simulation and the construction of the feature template were programmed using Visual C++, and the elastic deformation prediction model was constructed using MATLAB.

This paper first applied BP neural network to the facial model deformation prediction after complete denture prosthesis and constructed the nonlinear elastic prediction model because of the complexity of the skin tissue structure. A total of 48 patients participated in this study. The data from 43 patients were used as training sample, and the data from 5 patients were used as predicting sample.

Based on the network structure test, 20 nodes in the hidden layers of BP neural network resulted in minimum error and short calculation time. Prediction results such as the increments of three directions are listed in 
                     Table 1. Original and new coordinates after incremental iteration of feature points on the prediction model are shown in 
                     Fig. 8. The deformation of preoperative model was simulated using Laplacian deformation technique, employing feature points as control points. The results are shown in 
                     Fig. 9. The deformation model matches with the original model, as shown in 
                     Fig. 10. An additional 4 predicting samples are shown in 
                     Fig. 11.

@&#DISCUSSION@&#

Reports and literature of the relevant studies on deformation prediction of facial appearance are scarce. By combining BP neural network and Laplacian deformation technique, this paper proposed a new prediction method for facial appearance after complete denture prosthesis.

The training process of BP neural network is shown in 
                        
                        Figs. 12 and 13. The elastic deformation of model is mainly in the Z direction and smaller in the X and Y directions, as shown in Table 1. The distribution of sample points caused the deformation in the X and Y directions because of the variability of the curvatures on the face. Deformation in the X and Y directions was ignored. Average error rate was used to forecast the evaluation of the deformation in the Z direction. The calculation is expressed as
                           
                              (9)
                              
                                 
                                    Ep
                                    =
                                    
                                       
                                          
                                             âˆ‘
                                             
                                                i
                                                =
                                                1
                                             
                                             n
                                          
                                          |
                                          
                                             
                                                
                                                   Z
                                                   i
                                                
                                                âˆ’
                                                Z
                                                
                                                   `
                                                   i
                                                
                                             
                                             
                                                Z
                                                
                                                   `
                                                   i
                                                
                                             
                                          
                                          |
                                       
                                       n
                                    
                                    Ã—
                                    100
                                    %
                                    
                                 
                              
                           
                        where 
                           
                              Ep
                           
                         is the average error rate; 
                           
                              
                                 Z
                              
                              
                                 i
                              
                           
                         is the actual output; 
                           
                              
                                 
                                    Z
                                 
                                 
                                    â€²
                                 
                              
                              
                                 i
                              
                           
                         is the expected output and n is the number of sample points. The hidden layer plays a very important role in BP neural network. The average error rate of the deformation in the Z direction was computed for the different hidden layer nodes, as shown in 
                        Table 2.

The prediction results were collected by adjusting the number of hidden layer nodes in the experiment. The number of hidden layer nodes was fixed based on the comparison of prediction error. This study conclusively regarded the number of hidden layer nodes as 20, and the average error rate was 22.49%.

The postoperative model was acquired from the edentulous patient after complete denture prosthesis, as shown in 
                        Fig. 14. According to the positions of the eyes and nose, the deformation and postoperative models were superimposed for matching analysis. The relative deviations of the deformation model were analysed using the postoperative model as reference, as shown in 
                        Fig. 15. A third of the area under the face was the main deformation area, and the deviations of this area were from âˆ’2.021mm to 2.021mm in colour gradation. The deviations of more than 95% of the main deformation area were less than 2mm. The average deviations of all five prediction samples were less than 2mm, as shown in 
                        Fig. 16.

The total run time for the three programs, such as constructing feature template, elastic deformation prediction and deformation simulation, was less than 10s, and the run time in single mode was less than 3s. Chabanas et al. [20] presented a complete maxillofacial planning and the prediction of the new facial appearance. The computation times ranged from 2min to 7min. The differences were not more than 2mm. The accuracy was similar to this study, but the method used in this study was more efficient.

FEM and MTM are widely used in current facial soft tissue simulation. When the soft tissue model is analysed, patients need CT scans to determine the boundary conditions of the model [13]. Frequent CT scan could be very harmful to health. This research does not require skull model but uses facial models for prediction and simulation.

This method can predict facial soft tissue changes in patients after complete denture prosthesis, and shows the changes as 3D models for doctors and patients. The doctors and patients comprehend the changes of face intuitively. The doctors can make personalised tooth-arrangement scheme for the complete denture of patients.

@&#CONCLUSION@&#

Complex treatment and unpredictable results are some characteristics of complete denture restoration. Doctors need to predict the facial aesthetic and facial soft tissue changes in patients before treatment, leading to repeated treatment. This paper first applied BP neural network to facial model deformation prediction after complete denture prosthesis. This method used the properties of BP neural network, such as self-learning, self-adapting and nonlinearity. The elastic deformation prediction model was then constructed for the complicated soft tissue. The deformation of preoperative model was simulated using Laplacian deformation technique, and 3D model was intuitive. The comparison between the deformation and postoperative models showed that this method is feasible.

BP neural network is easy to converge to the local minimum, and accuracy has a considerable relationship to the number of samples. Future studies will focus on improving the structure of neural network and obtaining more samples to enhance prediction precision. The feature template should be further discussed. Many different forms of feature template will be tested to receive more accurate results.

The authors declare that there is no conflict of interests regarding the publication of this paper.

@&#ACKNOWLEDGEMENTS@&#

This study was supported by the National Natural Science Foundation of China (51205192, 51175248).

@&#REFERENCES@&#

