@&#MAIN-TITLE@&#Reconfiguration of satellite orbit for cooperative observation using variable-size multi-objective differential evolution


@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           A self-adaptive variable-size multi-objective DE for reconfiguration is proposed.


                        
                        
                           
                           The computations of coverage metrics, total fuel cost and maneuver time are detailed.


                        
                        
                           
                           Chromosome expression relies on fixed-length mechanism combined expression vector.


                        
                        
                           
                           Problem-specific operators are integrated into multi-objective DE.


                        
                        
                           
                           The algorithm optimizes the topology structure and component values simultaneously.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Satellite orbit reconfiguration

Variable-size optimization

Multi-objective differential evolution

Evolutionary computations

Estimation of Distribution Algorithm

@&#ABSTRACT@&#


               
               
                  A novel self-adaptive variable-size multi-objective differential evolution algorithm is presented to find the best reconfiguration of existing on-orbit satellites for some particular targets on the ground when an emergent requirement arises in a short period. The main contribution of this study is that three coverage metrics are designed to assess the performance of the reconfiguration. Proposed algorithm utilizes the idea of fixed-length chromosome encoding scheme combined with expression vector and the modified initialization, mutation, crossover and selection operators to search for optimal reconfiguration structure. Multi-subpopulation diversity initialization is adopted first, then the mutation based on estimation of distribution algorithm and adaptive crossover operators are defined to manipulate variable-length chromosomes, and finally a new selection mechanism is employed to generate well-distributed individuals for the next generation. The proposed algorithm is applied to three characteristically different case studies, with the objective to improve the performance with respect to specified targets by minimizing fuel consumption and maneuver time. The results show that the algorithm can effectively find the approximate Pareto solutions under different topological structures. A comparative analysis demonstrates that the proposed algorithm outperforms two other related multi-objective evolutionary optimization algorithms in terms of quality, convergence and diversity metrics.
               
            

@&#INTRODUCTION@&#

A distributed satellite system (DSS) may be needed to perform cooperative observation to satisfy the mission requirements in the case of emergency, because the characteristics of temporary reconnaissance missions, such as earthquake relief, flood monitoring and terrorism combat, launch of a new satellite may be uneconomic. Fortunately, there are hundreds of satellites carrying out various tasks in low Earth orbit. If necessary, the existing on-orbit satellites can be optimally reconfigured as a generalized DSS which performs cooperative observation of some particular targets during a specified time period. It is desirable in most cases to expand the performance of this generalized DSS by orbital maneuvers under affordable cost.

Observing some given targets within an assigned time frame is an orbit design problem. The initial orbit design can be solved from ground track points (Abdelkhalik, 2010; 
                     Abdelkhalik & Gad, 2011; 
                     Vtipil & Newman, 2010; 
                     Wall & Conway, 2009). An optimization problem in satellite constellation was constructed to pursue better revisit time (RT) or resolution according to the user requirements (Chen, Mahalec, Chen, He, & Liu, 2013; 
                     Williams, Crossley, & Lang, 2001). The number of satellites in the above orbit designs is predefined, but it may be a design variable in the satellite reconfiguration case. Therefore, it is necessary to optimize the number of satellites and specify which satellites from an alternative set to perform orbital maneuver. This is a variable-size optimization problem because the number of satellites defines the state vector length during optimization. Moreover, reconfiguration is a typical multi-objective optimization problem that requires a trade-off between the multi-mission metrics. In this study, the reconfiguration of on-orbit satellites aims to improve the coverage metrics during a short period. To avoid drastically shortening the lifetime of the satellites, the reconfiguration only relates to changing the relative locations of satellites on the initial orbit.

The contribution of this study is twofold. First, three types of coverage metric are designed to assess the performance of reconfiguration: the average revisit time (ART) for single target, the total coverage time (TCT) for multi-targets and the coverage statistics based on task scheduling (CSTS) which measures performance with respect to user requirements. Then satellite reconfiguration is formulated as a multi-objective optimization problem that considers coverage metrics, fuel consumption, and maneuver time. Second, the fixed-length encoding scheme combined with expression vector in chromosome building operator, multi-subpopulation diversity initialization, mutation based on estimation of distribution algorithm (EDA) (Ferringer & Spencer, 2006), adaptive crossover and modified selection operators are integrated into the multi-objective differential evolution to manipulate variable-length chromosomes and finally optimize the topological structure (satellite combination) and component values (maneuver variables of each satellite involved in reconfiguration) simultaneously.

The effectiveness of the proposed algorithm is verified by three case studies. The comparison with two other related multi-objective optimization algorithms demonstrates that the proposed algorithm performs better in terms of quality, convergence and diversity metrics defined on Pareto front.

@&#BACKGROUND@&#

Reconfiguration which is traditionally used in satellite constellation refers to implementing a series of essential maneuvers to maintain or improve the performance if some satellites fail (Larrañaga & Lozano, 2002). Various reconfiguration issues have been solved, such as optimal reconfiguration and formation-keeping for formation flying satellites (de Weck, Scialom, & Siddiqi, 2008); optimal reconfiguration of satellite formation to continue operation after loss of one satellite (Park, Park, & Choi, 2011); reconfiguration of GPS constellations after loss of capacity (Ahn & Spencer, 2002). A general framework was proposed to transform an initial constellation A into constellation B and was employed in communication satellites (Larrañaga & Lozano, 2002). In these examples, a reconfiguration is accomplished via orbital maneuvers of on-orbit satellites from a constellation with a known number of maneuvered satellites.

In this study, it is not required that the satellites involved in reconfiguration are from the same constellation. These satellites, which form a more generalized DSS for a temporary mission in a short period, may have been launched for performing specific tasks at different phases. They lie in different orbits with no active control to maintain relative positions. Although one or more classical orbital elements of a satellite can be changed to satisfy the mission requirements, the satellite in most cases is kept close to its initial orbit during the whole lifetime after it arrives at its mission orbit. Orbital maneuvers, especially non-coplanar maneuvers, are seldom carried out; otherwise the lifetime of the satellite will be drastically shortened.

An economic approach of reconfiguration is to rearrange the relative positions through phase changing in order to obtain a desired performance in a specified period. In the case of a modest transfer time, phase changing may require an acceptable fuel cost (Ferringer, Spencer, & Reed, 2009). Fig. 1
                        visualizes the concept of reconfiguration. It is assumed that there are four alternative satellites in different orbits providing the desired performance for some specific targets. The number of satellite combinations for orbital maneuver are 24. If satellites A, C and D are chosen to rearrange their relative positions from satellite B which is kept on its original orbit, the four satellites form a generalized DSS to perform cooperative observation.

In this study, satellite reconfiguration is defined as “adjusting the relative locations of multiple on-orbit satellites through changing the mean anomaly”. Not only the best combination but also the optimal maneuver values for each satellite should be computed with the design goal of maximizing the performance with minimum total fuel consumption and minimum maneuver time.

The following notations are defined prior to the presentation of the objective functions.


                        
                           Parameters
                        
                        
                           
                              atgt
                               semimajor axis of the target orbit
                        
                        
                           
                              aphase
                               semimajor axis of the phase orbit
                        
                        
                           
                              H orbit height
                        
                        
                           
                              K the number of satellites in reconfiguration
                        
                        
                           
                              
                                 
                                    K
                                    int
                                 
                               revolutions of satellite on phasing orbit
                        
                        
                           
                              Ktgt
                               revolutions of satellite on target orbit
                        
                        
                           
                              LatT, LongT
                               the target's latitude and longitude
                        
                        
                           
                              LatSSP, LongSSP
                               the sub-satellite point's latitude and longitude
                        
                        
                           
                              mi
                               the number of gap durations of satellite i
                           
                        
                        
                           
                              MTtotal
                               total maneuver time
                        
                        
                           
                              P the performance of the satellite system
                        
                        
                           
                              Re
                               equatorial radius of the Earth
                        
                        
                           
                              t
                              0 initial time of the scene
                        
                        
                           
                              wi
                               priority weight for target i
                           
                        
                        
                           
                              wp
                               penalty weight
                        
                        
                           
                              wtgt
                               angular velocity of the target orbit
                        
                        
                           
                              
                                 
                                    
                                       w
                                       s
                                       
                                          i
                                          ,
                                          j
                                       
                                    
                                    ,
                                    
                                       w
                                       e
                                       
                                          i
                                          ,
                                          j
                                       
                                    
                                 
                               
                              jth start and end time of coverage window for satellite i
                           
                        
                        
                           
                              
                                 
                                    
                                       t
                                       s
                                       
                                          i
                                          ,
                                          j
                                       
                                    
                                    ,
                                    
                                       t
                                       e
                                       
                                          i
                                          ,
                                          j
                                       
                                    
                                 
                               
                              jth start and end time of gap duration for satellite i
                           
                        
                        
                           
                              αi
                               the target i on the schedule (=1) or not (=0)
                        
                        
                           
                              λ Earth central angle
                        
                        
                           
                              
                                 
                                    η
                                    max
                                 
                               half maximum angle of field of view
                        
                        
                           
                              η half current angle of field of view
                        
                        
                           
                              ρ angular radius of the Earth
                        
                        
                           
                              μ gravitational parameter
                        
                        
                           
                              θ
                              0 angle of the target is ahead or behind of the interceptor
                        
                        
                           
                              ν true anomaly
                        
                        
                           
                              Δt step length of satellite propagation
                        
                        
                           
                              ΔVtotal
                               total velocity changes
                        
                     

Coverage metrics assess the satellite-provided performance for a set of targets. Three types of coverage metric are used in this study: average revisit time (ART), total coverage time (TCT) and coverage statistics based on task scheduling (CSTS). Visibility between satellites and targets need to be determined so as to compute these coverage metrics.

Visibility depends on many factors, such as the location of the target, the number of satellites in the DSS, and each satellite's orbit elements and field of view (FOV). ART and TCT are statistically distributed parameters that cannot be easily characterized (Ferringer et al., 2009), especially when the computation involves several satellites. Therefore, a numerical simulation considering the J2 perturbation (James, David, & Jeffery, 2011, chap. 10) is carried out to compute visibility. The target is visible to a satellite when it lies in the FOV (Fig. 2
                           ).

The Earth's angular radius ρ is defined as

                              
                                 (1)
                                 
                                    
                                       sin
                                       
                                       ρ
                                       =
                                       
                                          
                                             R
                                             e
                                          
                                          
                                             
                                                R
                                                e
                                             
                                             +
                                             H
                                          
                                       
                                    
                                 
                              
                           where Re
                            is the Earth's radius, and H is the orbit height. The half angle of FOV, 
                              
                                 η
                                 max
                              
                           , is measured at the satellite from sub-satellite point (SSP) to the acceptable fastest target restrained by the elevation angle. We define the geocentric coordinates of the target and SSP as (LatT, LongT
                           ) and (LatSSP, LongSSP
                           ) respectively, then λ can be given as (Ferringer et al., 2009)

                              
                                 (2)
                                 
                                    
                                       λ
                                       =
                                       acos
                                       
                                          [
                                          
                                             sin
                                             
                                             L
                                             a
                                             
                                                t
                                                T
                                             
                                             
                                             sin
                                             
                                             L
                                             a
                                             
                                                t
                                                
                                                   S
                                                   S
                                                   P
                                                
                                             
                                             
                                             +
                                             
                                             cos
                                             
                                             L
                                             a
                                             
                                                t
                                                T
                                             
                                             
                                             cos
                                             
                                             L
                                             a
                                             
                                                t
                                                
                                                   S
                                                   S
                                                   P
                                                
                                             
                                             
                                             cos
                                             
                                             Δ
                                             L
                                          
                                          ]
                                       
                                    
                                 
                              
                           where ΔL = LongT
                            − LongSSP
                           . If λ is >90
degrees, the target is invisible, and if λ is ≤
90 degrees
, the angle η which is measured at the satellite from the SSP to the current target is computed as follows (Ferringer et al., 2009)

                              
                                 (3)
                                 
                                    
                                       η
                                       =
                                       a
                                       
                                       tan
                                       
                                          [
                                          
                                             
                                                sin
                                                
                                                ρ
                                                
                                                sin
                                                
                                                λ
                                             
                                             
                                                (
                                                1
                                                −
                                                sin
                                                
                                                ρ
                                                
                                                cos
                                                
                                                λ
                                                )
                                             
                                          
                                          ]
                                       
                                    
                                 
                              
                           
                           
                              
                                 (1)
                                 Average revisit time (ART)

The revisit time measures the gap during which the coverage is not provided, and ART is the average duration of all gaps. For satellite i at time t, the SSP from the ground track is combined to check if 
                              
                                 
                                    η
                                    i
                                    t
                                 
                                 >
                                 
                                    η
                                    i
                                    max
                                 
                              
                           . If yes, the target is invisible current, and thus time t is considered as the start time of gap duration 
                              
                                 t
                                 s
                                 i
                              
                            of satellite i. At time t = t
                           0 + Δt, this process is repeated until the target lies in the satellite's FOV at time 
                              
                                 t
                                 e
                                 i
                              
                           . This time is considered as the end time of gap duration. If there are K satellites, ART is calculated by accumulation of the mi
                            gap durations 
                              
                                 
                                    [
                                    
                                       t
                                       s
                                       
                                          i
                                          ,
                                          j
                                       
                                    
                                    ,
                                    
                                       t
                                       e
                                       
                                          i
                                          ,
                                          j
                                       
                                    
                                    ]
                                 
                                 
                                    (
                                    
                                    j
                                    =
                                    1
                                    ,
                                    .
                                    .
                                    .
                                    ,
                                    
                                       m
                                       i
                                    
                                    )
                                 
                              
                            for satellite i:

                              
                                 (4)
                                 
                                    
                                       A
                                       R
                                       T
                                       =
                                       
                                          
                                             
                                                ∑
                                                
                                                   i
                                                   =
                                                   1
                                                
                                                K
                                             
                                             
                                                
                                                   ∑
                                                   
                                                      j
                                                      =
                                                      1
                                                   
                                                   
                                                      m
                                                      i
                                                   
                                                
                                                
                                                   (
                                                   
                                                      t
                                                      e
                                                      
                                                         i
                                                         ,
                                                         j
                                                      
                                                   
                                                   −
                                                   
                                                      t
                                                      s
                                                      
                                                         i
                                                         ,
                                                         j
                                                      
                                                   
                                                
                                                )
                                             
                                          
                                          
                                             
                                                ∑
                                                
                                                   i
                                                   =
                                                   1
                                                
                                                K
                                             
                                             
                                                m
                                                i
                                             
                                          
                                       
                                    
                                 
                              
                           
                           
                              
                                 (2)
                                 Total coverage time (TCT)

TCT measures the amount of time during which the targets are covered. For target i at time t, if 
                              
                                 
                                    η
                                    i
                                    t
                                 
                                 ≤
                                 
                                    η
                                    max
                                 
                              
                           , then t is marked as the start time of coverage window, ws
                           . At t = t + Δt, the position of a satellite is updated from the ground track and the computation is repeated until the target is out of FOV, and the corresponding time is marked as the end time of coverage window, we
                           . Accumulating pi
                            coverage windows yields the TCT for K satellites:

                              
                                 (5)
                                 
                                    
                                       T
                                       C
                                       T
                                       =
                                       
                                          ∑
                                          
                                             i
                                             =
                                             1
                                          
                                          K
                                       
                                       
                                          
                                             ∑
                                             
                                                j
                                                =
                                                1
                                             
                                             
                                                p
                                                i
                                             
                                          
                                          
                                             (
                                             
                                                w
                                                e
                                                
                                                   i
                                                   ,
                                                   j
                                                
                                             
                                             −
                                             
                                                w
                                                s
                                                
                                                   i
                                                   ,
                                                   j
                                                
                                             
                                          
                                          )
                                       
                                    
                                 
                              
                           
                           
                              
                                 (3)
                                 Coverage statistics based on task scheduling (CSTS)

In some cases, it is desirable that the reconfiguration satisfies more than one mission requirement, such as requirement that the higher priority targets should be observed for longer period, that observation time must be at least equal to the threshold observation time, or that each target can be observed at least once. The computation of this coverage metric needs to employ task scheduling (Vallado, 2007). Task scheduling is defined as “creating a schedule which selects exact start and stop observation time for each target based on 
                              
                                 [
                                 
                                    w
                                    s
                                    
                                       i
                                       ,
                                       j
                                    
                                 
                                 ,
                                 
                                    w
                                    e
                                    
                                       i
                                       ,
                                       j
                                    
                                 
                                 ]
                              
                           ”. In this study, priority dispatch (Vallado, 2007) is applied to create the schedule and then the objective function is defined as:

                              
                                 (6)
                                 
                                    
                                       C
                                       S
                                       T
                                       S
                                       =
                                       
                                          ∑
                                          
                                             i
                                             =
                                             1
                                          
                                          n
                                       
                                       
                                          [
                                          
                                             
                                                w
                                                i
                                             
                                             .
                                             
                                                α
                                                i
                                             
                                             
                                                (
                                                
                                                   
                                                      ∑
                                                      
                                                         j
                                                         =
                                                         1
                                                      
                                                      
                                                         n
                                                         i
                                                      
                                                   
                                                   
                                                      D
                                                      u
                                                      r
                                                      a
                                                      t
                                                      i
                                                      o
                                                      
                                                         n
                                                         
                                                            b
                                                            o
                                                            n
                                                            u
                                                            s
                                                         
                                                         
                                                            
                                                            j
                                                         
                                                      
                                                   
                                                
                                                )
                                             
                                             −
                                             
                                                w
                                                p
                                             
                                             
                                                (
                                                1
                                                −
                                                
                                                   α
                                                   i
                                                
                                                )
                                             
                                          
                                          ]
                                       
                                    
                                 
                              
                           where n is the number of original targets, and ni
                            is the number of the recurring observations of target i; wi
                            = [(largestPriority − smallestPriority + 1)/targeti
                           Priority] is the priority weight for target i; 
                              
                                 D
                                 u
                                 r
                                 a
                                 t
                                 i
                                 o
                                 
                                    n
                                    
                                       b
                                       o
                                       n
                                       u
                                       s
                                    
                                    j
                                 
                                 =
                                 D
                                 u
                                 r
                                 a
                                 t
                                 i
                                 o
                                 
                                    n
                                    
                                       a
                                       c
                                       t
                                       u
                                       r
                                       a
                                       l
                                    
                                    j
                                 
                                 /
                                 D
                                 u
                                 r
                                 a
                                 t
                                 i
                                 o
                                 
                                    n
                                    
                                       d
                                       e
                                       s
                                       i
                                       r
                                       e
                                       d
                                    
                                    j
                                 
                              
                            rewards the cases where the actual duration is longer than the threshold observation duration. A penalty term, wp
                           (1 − αi
                           ), aims to guarantee each target can be observed at least once; the penalty weight is wp
                            creates a high cost for the targets which are not on the schedule (αi
                            = 0, αi
                            ∈ {0, 1}).

Orbital maneuver in this study focuses on how to move a satellite back and forth in the same plane. This is a co-orbital rendezvous problem in which two satellites are located in the same orbit and one satellite maneuvers its orbit through two-impulse Hohmann transfer (James et al., 2011, chap. 10) to catch up with the other one. There are two cases of rendezvous: interceptor trailing target and interceptor leading target (James et al., 2011, chap. 10) (Fig. 3
                           ).

Co-orbital rendezvous only changes the mean anomaly of the satellite in a circular orbit. If there are several satellites, the performance can be effectively improved by reasonable arrangement of the satellites’ relative positions. In execution of an orbital maneuver, two important factors to be considered are the amount of energy consumption (or velocity changes, ΔV) and the total maneuver time. In the case of interceptor trailing target, the target is assumed to be ahead of the interceptor by an amount θ
                           0, so the target must travel an angle of θ in Ktgt
                            revolutions to arrive the interceptor's current position. θ is calculated as

                              
                                 (7)
                                 
                                    
                                       θ
                                       =
                                       
                                          K
                                          
                                             t
                                             g
                                             t
                                          
                                       
                                       
                                          (
                                          2
                                          π
                                          )
                                       
                                       −
                                       
                                          θ
                                          0
                                       
                                    
                                 
                              
                           
                        

If the interceptor is ahead of the target by an amount θ
                           0, then

                              
                                 (8)
                                 
                                    
                                       θ
                                       =
                                       
                                          K
                                          
                                             t
                                             g
                                             t
                                          
                                       
                                       
                                          (
                                          2
                                          π
                                          )
                                       
                                       +
                                       
                                          θ
                                          0
                                       
                                    
                                 
                              
                           
                        

In either case, the target orbit's angular velocity wtgt
                            is expressed as:

                              
                                 (9)
                                 
                                    
                                       
                                          w
                                          
                                             t
                                             g
                                             t
                                          
                                       
                                       =
                                       
                                          
                                             μ
                                             
                                                a
                                                
                                                   t
                                                   g
                                                   t
                                                
                                                3
                                             
                                          
                                       
                                    
                                 
                              
                           where μ is the Earth's gravitational parameter. The total maneuver time MTtotal
                            of the K satellites involved in reconfiguration is given by

                              
                                 (10)
                                 
                                    
                                       M
                                       
                                          T
                                          
                                             t
                                             o
                                             t
                                             a
                                             l
                                          
                                       
                                       =
                                       
                                          ∑
                                          
                                             i
                                             =
                                             1
                                          
                                          K
                                       
                                       
                                          M
                                          
                                             T
                                             i
                                          
                                       
                                       =
                                       
                                          ∑
                                          
                                             i
                                             =
                                             1
                                          
                                          K
                                       
                                       
                                          
                                             θ
                                             i
                                          
                                          
                                             w
                                             
                                                t
                                                g
                                                t
                                             
                                             i
                                          
                                       
                                    
                                 
                              
                           
                        

For satellite i, the maneuver time is equal to the 
                              
                                 K
                                 
                                    int
                                 
                                 i
                              
                            periods of the phase orbit, and thus the semimajor axis of the phase orbit can be defined as

                              
                                 (11)
                                 
                                    
                                       
                                          a
                                          
                                             p
                                             h
                                             a
                                             s
                                             e
                                          
                                          i
                                       
                                       =
                                       
                                          
                                             (
                                             
                                                μ
                                                
                                                   
                                                      
                                                         (
                                                         
                                                            
                                                               M
                                                               
                                                                  T
                                                                  i
                                                               
                                                            
                                                            
                                                               2
                                                               π
                                                               
                                                                  K
                                                                  
                                                                     int
                                                                  
                                                                  i
                                                               
                                                            
                                                         
                                                         )
                                                      
                                                   
                                                   2
                                                
                                             
                                             )
                                          
                                          
                                             1
                                             /
                                             3
                                          
                                       
                                    
                                 
                              
                           
                        

The phase orbit is elliptical. The necessary ΔVs for the rendezvous can be computed when the semimajor axis of the orbit is known. The first ΔV changes the orbit from the initial orbit to the phase orbit, and the second ΔV makes the satellite reenter the initial orbit. Regardless of θi
                            being ahead or behind the target point, the ΔVs of the two burns are of the same magnitude. Therefore, the velocity changes of orbital maneuver ΔVtotal
                            for all satellites can be given by (James et al., 2011, chap. 10)

                              
                                 (12)
                                 
                                    
                                       Δ
                                       
                                          V
                                          
                                             t
                                             o
                                             t
                                             a
                                             l
                                          
                                       
                                       =
                                       
                                          ∑
                                          
                                             i
                                             =
                                             1
                                          
                                          K
                                       
                                       
                                          Δ
                                          
                                             V
                                             i
                                          
                                       
                                       =
                                       
                                          ∑
                                          
                                             i
                                             =
                                             1
                                          
                                          K
                                       
                                       
                                          2
                                          
                                             |
                                             
                                                
                                                   
                                                      
                                                         
                                                            2
                                                            μ
                                                         
                                                         
                                                            a
                                                            
                                                               t
                                                               g
                                                               t
                                                            
                                                            i
                                                         
                                                      
                                                      −
                                                      
                                                         μ
                                                         
                                                            a
                                                            
                                                               p
                                                               h
                                                               a
                                                               s
                                                               e
                                                            
                                                            i
                                                         
                                                      
                                                   
                                                
                                                −
                                                
                                                   
                                                      μ
                                                      
                                                         a
                                                         
                                                            t
                                                            g
                                                            t
                                                         
                                                         i
                                                      
                                                   
                                                
                                             
                                             |
                                          
                                       
                                    
                                 
                              
                           
                        


                           Eqs. (10) and (12) reveal that if the integer value of Ktgt
                            or Kint
                            increases, then MTtotal
                            increases and ΔVtotal
                            decreases. Usually a large difference between Ktgt
                            and Kint
                            will lead to a long maneuver time. It is reasonable to assume that Ktgt
                            is equal to Kint
                           . Noticeably, the perigee radius of the phase orbit should not be smaller than the Earth's radius when adjusting Ktgt
                           (Kint
                           ).

Given some specified targets on the ground, the on-orbit satellites can be reconfigured by changing the mean anomaly (ν) and Ktgt
                         such that the DSS obtains the optimal performance with minimum ΔVtotal
                         and MTtotal
                        . Therefore, the multi-objective problem is formulated as follows:

                           
                              (13)
                              
                                 
                                    
                                       
                                          
                                             
                                                Maximize
                                                :
                                             
                                             
                                             P
                                             (
                                             ν
                                             )
                                          
                                       
                                    
                                    
                                       
                                          
                                             Minimize
                                             :
                                             
                                             
                                                {
                                                
                                                   Δ
                                                   
                                                      V
                                                      
                                                         t
                                                         o
                                                         t
                                                         a
                                                         l
                                                      
                                                   
                                                   
                                                      (
                                                      ν
                                                      ,
                                                      
                                                         K
                                                         
                                                            t
                                                            g
                                                            t
                                                         
                                                      
                                                      ,
                                                      
                                                         K
                                                         
                                                            i
                                                            n
                                                            t
                                                         
                                                      
                                                      )
                                                   
                                                   ,
                                                   M
                                                   
                                                      T
                                                      
                                                         t
                                                         o
                                                         t
                                                         a
                                                         l
                                                      
                                                   
                                                   
                                                      (
                                                      ν
                                                      ,
                                                      
                                                         K
                                                         
                                                            t
                                                            g
                                                            t
                                                         
                                                      
                                                      ,
                                                      
                                                         K
                                                         
                                                            i
                                                            n
                                                            t
                                                         
                                                      
                                                      )
                                                   
                                                
                                                }
                                             
                                          
                                       
                                    
                                    
                                       
                                          
                                             S
                                             .
                                             T
                                             .
                                             :
                                             
                                             
                                                K
                                                
                                                   t
                                                   g
                                                   t
                                                
                                             
                                             =
                                             
                                                K
                                                
                                                   i
                                                   n
                                                   t
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           
                        
                        where 
                        ν and Ktgt
                         are decision vectors; ν is a continuous variable and Ktgt
                         is a discrete variable; P(ν) is the performance of the reconfiguration, where maximizing P(ν) means minimizing ART(ν), or maximizing TCT(ν) and CSTS(ν). The reconfiguration optimization aims to investigate the effects of satellite combinations on cooperative observation. The three objective functions often conflict with one another, and thus a Pareto front should be identified, in which no candidate solution is dominated by other solutions.

Evolutionary algorithms have been shown to be effective in conventional satellite orbit design (Wolfe & Sorensen, 2000) or satellite reconfiguration (Ahn & Spencer, 2002;de Weck et al., 2008). DE is a population-based optimization algorithm introduced by Storn and Price (Kim, Bang, & Jung, 2008). The classical DE method consists of four basic steps:

(i) Randomly generate NP individuals (each individual is presented by a chromosome) in the design space. For example, the initial population ( g = 0) of dimension j in individual i is generated as:

                        
                           (14)
                           
                              
                                 
                                    X
                                    
                                       i
                                       ,
                                       j
                                    
                                 
                                 
                                    (
                                    0
                                    )
                                 
                                 =
                                 
                                    X
                                    
                                       i
                                       ,
                                       j
                                    
                                    L
                                 
                                 +
                                 r
                                 a
                                 n
                                 
                                    d
                                    j
                                 
                                 
                                    (
                                    0
                                    ,
                                    1
                                    )
                                 
                                 
                                    (
                                    
                                       
                                          X
                                          
                                             i
                                             ,
                                             j
                                          
                                          U
                                       
                                       −
                                       
                                          X
                                          
                                             i
                                             ,
                                             j
                                          
                                          L
                                       
                                    
                                    )
                                 
                                 
                                 i
                                 =
                                 1
                                 ,
                                 .
                                 .
                                 .
                                 ,
                                 N
                                 p
                              
                           
                        
                     
                  

(ii) Produce individual U
                     
                        i, j
                     ( g) by the mutation (Eq. (15)) and crossover (Eq. (16)) operations according to the scaling factor F and the crossover rate CR:

                        
                           (15)
                           
                              
                                 
                                    V
                                    i
                                 
                                 
                                    (
                                    
                                    g
                                    )
                                 
                                 =
                                 
                                    X
                                    
                                       i
                                       0
                                    
                                 
                                 
                                    (
                                    
                                    g
                                    )
                                 
                                 +
                                 F
                                 
                                    (
                                    
                                       X
                                       
                                          i
                                          1
                                       
                                    
                                    
                                       (
                                       
                                       g
                                       )
                                    
                                    −
                                    
                                       X
                                       
                                          i
                                          2
                                       
                                    
                                    
                                       (
                                       
                                       g
                                       )
                                    
                                    )
                                 
                                 ,
                                 
                                 
                                    (
                                    i
                                    0
                                    ≠
                                    i
                                    1
                                    ≠
                                    i
                                    2
                                    )
                                 
                              
                           
                        
                     
                     
                        
                           (16)
                           
                              
                                 
                                    U
                                    
                                       i
                                       ,
                                       j
                                    
                                 
                                 
                                    (
                                    
                                    g
                                    )
                                 
                                 =
                                 
                                    {
                                    
                                       
                                          
                                             
                                                
                                                   V
                                                   
                                                      i
                                                      ,
                                                      j
                                                   
                                                
                                                
                                                   (
                                                   
                                                   g
                                                   )
                                                
                                             
                                          
                                          
                                             
                                                i
                                                f
                                                (
                                                r
                                                a
                                                n
                                                d
                                                ≤
                                                C
                                                R
                                                
                                                o
                                                r
                                                
                                                j
                                                =
                                                
                                                   C
                                                   
                                                      r
                                                      a
                                                      n
                                                      d
                                                   
                                                
                                                )
                                             
                                          
                                       
                                       
                                          
                                             
                                                
                                                   X
                                                   
                                                      i
                                                      ,
                                                      j
                                                   
                                                
                                                
                                                   (
                                                   
                                                   g
                                                   )
                                                
                                             
                                          
                                          
                                             otherwise
                                          
                                       
                                    
                                 
                              
                           
                        
                     where Vi
                     ( g) is created by adding the scaled difference F between two randomly chosen vectors X
                     
                        i1( g) and X
                     
                        i2( g) to a randomly chosen base vector X
                     
                        i0( g); parameter Crand
                      in the Eq. (16) is a random index which avoids the trial individual is the duplicate of Xi
                     .

(iii) Employ a selection operator (17) to replace the current individual by a new individual that has a higher fitness function (for maximum problem):

                        
                           (17)
                           
                              
                                 
                                    X
                                    i
                                 
                                 
                                    (
                                    
                                    g
                                    +
                                    1
                                    )
                                 
                                 =
                                 
                                    {
                                    
                                       
                                          
                                             
                                                
                                                   U
                                                   i
                                                
                                                
                                                   (
                                                   
                                                   g
                                                   )
                                                
                                             
                                          
                                          
                                             
                                                i
                                                f
                                                (
                                                
                                                f
                                                
                                                   (
                                                   
                                                      U
                                                      
                                                         i
                                                         ,
                                                         g
                                                      
                                                   
                                                   )
                                                
                                                ≥
                                                f
                                                
                                                   (
                                                   
                                                      X
                                                      
                                                         i
                                                         ,
                                                         g
                                                      
                                                   
                                                   )
                                                
                                                )
                                             
                                          
                                       
                                       
                                          
                                             
                                                
                                                   X
                                                   i
                                                
                                                
                                                   (
                                                   
                                                   g
                                                   )
                                                
                                             
                                          
                                          
                                             otherwise
                                          
                                       
                                    
                                 
                              
                           
                        
                     
                  

(iv) Repeat this process until a stopping criterion is satisfied.

Experimental comparisons of DE with other evolutionary algorithms (genetic algorithms, and particle swarm optimization) have shown better performance both in robustness and convergence speed (Price, Storn, & Lampinen, 2005; Storn & Price, 1997). For reconfiguration optimization problem, multi-objective differential evolution (MODE) algorithms (Gong & Cai, 2009; Vesterstrom & Thomsen, 2004; Wang, Wu, & Yuan, 2010) are suitable search engines to obtain the Pareto front. An obvious manner of applying MODE for reconfiguration is to compare the difference between the optimal and the original values. If the difference is less than a threshold value, this satellite is not involved in the reconfiguration. However, this manner of application may raise problems, such as the limited exploring ability under different structures, or the difficulty in setting an appropriate threshold value in practice.

In the reconfiguration, the optimal number of satellites and the satellite to undergo orbital maneuver may be unknown. The problem hence involves a varying number of design variables and requires a search algorithm suitable for optimization on variable-length chromosomes. For a large satellite combination, it is inefficient and impractical to run the algorithm many times while changing the prescribed number of satellites until the optimal number is found.

A better solution is to synchronize the optimization of reconfiguration topology and component values. One way to deal with this issue is to adjust the length of chromosome by comparing the current function value with the current incumbent value (i.e. the best function value found so far) (Ali, Siarry, & Pant, 2012). For multi-objective optimization, however, it is difficult to decide whether to add or delete a component (a satellite need to maneuver in reconfiguration), because each combination may exist on the current Pareto front. A VSMODE algorithm containing problem-oriented operators is proposed to address this problem.

Since all components contain the same design variables, the fixed-length mechanism (Su et al., 2012) is employed to express variable-length chromosomes. Fixed-length does not mean the size of a problem is fixed, but that the population length is fixed to the maximum possible length of the problem. Then a K-dimensional expression vector f,  f = (f
                           1, f
                           2, ..., fK
                           ) with values of 0 or 1 is established. f determines the state of being expressed (=1) or unexpressed (=0) of the design variable, which finally determines the effective length of the solution. The general structure of chromosome building is shown in Fig. 4
                           .

Only the expressed (or effective) component is evaluated in the optimization. For example, if satellite 2 is an unexpressed genome (Fig. 4), its initial values are kept during function evaluation. Noticeably, a position unexpressed in the current generation may be expressed in the next generation. Fixed-length mechanism combined with the expression vector makes the individual have the same length in all populations.

The concept of multi-subpopulation diversity initialization is to initialize a population that consists of multiple subpopulations with different effective lengths. All of the individuals in each subpopulation have the same effective length. In the absence of a priori information, each subpopulation has the same size. The successive steps of initialization are listed as follows:

                              
                                 1)
                                 Divide the population (NP) into Nsub subpopulations (Nsub is equal to the number of satellites K). Create all subpopulations to be equal size of the individual: Nsubpop = NP / Nsub.

For i  = 1: NP, randomly generate design variables according to Eq. (14).

For j  = 1: Nsub, generate expression vector (0 or 1) in subpopulation j which enables the sum of the expression vector to be equal to the effective length j.

The above processes actually initialize two sets of variables: the design variables aim to optimize the values of each satellite, while the expression vector aims to optimize the structure of the reconfiguration. The subpopulations will change size during later stage to produce more fit members.

The mutation operator only deals with design variables. Classical mutation operator (Eq. (15)) is performed at the same position among the randomly selected vectors (X
                           
                              i1( g), X
                           
                              i2( g) and X
                           
                              i0( g)) and it is unable to extract or use the global information of the design space. In satellite reconfiguration, a novel and efficient adaptive mutation inspired by Estimation of Distribution Algorithm (EDA) for producing promising individual is employed. EDA directly extracts the global statistical knowledge from the current generation and builds a probability model to generate a new population. In this study, the K components or 2K design variables are independent. Then the optimal NP individuals from the current population are selected and the joint density function of the gth generation based on Gaussian mixture distribution is

                              
                                 (18)
                                 
                                    
                                       p
                                       
                                          (
                                          
                                             x
                                             (
                                             
                                             g
                                             )
                                          
                                          )
                                       
                                       =
                                       
                                          ∏
                                          
                                             i
                                             =
                                             1
                                          
                                          
                                             2
                                             K
                                          
                                       
                                       
                                          p
                                          (
                                          
                                             
                                                x
                                                i
                                             
                                             
                                                (
                                                
                                                g
                                                )
                                             
                                          
                                          )
                                       
                                    
                                 
                              
                           where p(xi
                           ( g)) is the margin density function of the ith dimension:

                              
                                 (19)
                                 
                                    
                                       p
                                       
                                          (
                                          
                                             x
                                             i
                                          
                                          
                                             (
                                             
                                             g
                                             )
                                          
                                          )
                                       
                                       =
                                       
                                          1
                                          
                                             N
                                             P
                                          
                                       
                                       
                                          ∑
                                          
                                             j
                                             =
                                             1
                                          
                                          
                                             N
                                             P
                                          
                                       
                                       
                                          N
                                          
                                             (
                                             
                                                μ
                                                
                                                   i
                                                   ,
                                                   j
                                                
                                                g
                                             
                                             ,
                                             
                                                σ
                                                
                                                   i
                                                   ,
                                                   j
                                                
                                                g
                                             
                                             )
                                          
                                       
                                    
                                 
                              
                           where 
                              
                                 N
                                 (
                                 
                                    μ
                                    
                                       i
                                       ,
                                       j
                                    
                                    g
                                 
                                 ,
                                 
                                    σ
                                    
                                       i
                                       ,
                                       j
                                    
                                    g
                                 
                                 )
                              
                            is normal distribution. The mean, 
                              
                                 μ
                                 
                                    i
                                    ,
                                    j
                                 
                                 g
                              
                           , and the standard deviation, 
                              
                                 σ
                                 
                                    i
                                    ,
                                    j
                                 
                                 g
                              
                            can be estimated as follows:

                              
                                 (20)
                                 
                                    
                                       
                                          μ
                                          
                                             i
                                             ,
                                             j
                                          
                                          g
                                       
                                       =
                                       
                                          1
                                          
                                             N
                                             P
                                          
                                       
                                       
                                          ∑
                                          
                                             i
                                             =
                                             1
                                          
                                          
                                             N
                                             P
                                          
                                       
                                       
                                          
                                             x
                                             
                                                i
                                                ,
                                                j
                                             
                                          
                                          
                                             (
                                             
                                             g
                                             )
                                          
                                       
                                       ,
                                       
                                       
                                          σ
                                          
                                             i
                                             ,
                                             j
                                          
                                          g
                                       
                                       =
                                       
                                          
                                             
                                                1
                                                
                                                   N
                                                   P
                                                
                                             
                                             
                                                
                                                   
                                                      ∑
                                                      
                                                         i
                                                         =
                                                         1
                                                      
                                                      
                                                         N
                                                         P
                                                      
                                                   
                                                   
                                                      (
                                                      
                                                         
                                                            x
                                                            
                                                               i
                                                               ,
                                                               j
                                                            
                                                         
                                                         
                                                            (
                                                            
                                                            g
                                                            )
                                                         
                                                         −
                                                         
                                                            μ
                                                            
                                                               i
                                                               ,
                                                               j
                                                            
                                                            g
                                                         
                                                      
                                                      )
                                                   
                                                
                                                2
                                             
                                          
                                       
                                    
                                 
                              
                           
                        

After the probability model is constructed, the adaptive mutation can be described as follows: if (r and (0, 1) < δ), the EDA scheme is employed to produce new vector, otherwise the classical scheme described in Eq. (15) is employed. The initial value of δ(0 ≤ δ ≤ 1) is 0.5, and then δ is equal to the proportion how many individuals on Pareto front are from the EDA scheme. The EDA-based adaptive mutation can combine differential information and global knowledge, thus avoiding the local convergence of one component and improving the exploration capability.

The crossover operator performs not only on design variables, but also on expression vector. The crossover on design variables determines whether the element of a trial vector is from the mutant vector or the target vector (Eq. (16)). The crossover on expression vector will change the effective length. A two-part adaptive strategy is adopted. First, the effective length set (L
                           
                              effecive
                           ) on the Pareto front is obtained. If the difference set K − L
                           
                              effecive
                           (K = {1, 2, ..., K}) is not null, one expression vector with effective length in the difference set is randomly generated to replace the original expression vector. Second, experiments show that it is difficult to find the optimal structure when the effective length is close to the maximum, because a subpopulation with longer effective length needs more individuals for better convergence. Hence, the adaptive crossover on expression vector is

                              
                                 (21)
                                 
                                    
                                       {
                                       
                                          
                                             
                                                
                                                   E
                                                   
                                                      (
                                                      
                                                         f
                                                         
                                                            
                                                               U
                                                               i
                                                            
                                                            
                                                               (
                                                               
                                                               g
                                                               )
                                                            
                                                         
                                                      
                                                      )
                                                   
                                                   
                                                      =
                                                      random
                                                      
                                                      k
                                                      
                                                      if
                                                      
                                                      (
                                                      K
                                                      −
                                                   
                                                   
                                                      L
                                                      
                                                         e
                                                         f
                                                         f
                                                         e
                                                         c
                                                         i
                                                         v
                                                         e
                                                      
                                                   
                                                   ≠
                                                   ∅
                                                   
                                                   and
                                                   
                                                   k
                                                   ∈
                                                   K
                                                   −
                                                   
                                                      L
                                                      
                                                         e
                                                         f
                                                         f
                                                         e
                                                         c
                                                         i
                                                         v
                                                         e
                                                      
                                                   
                                                   
                                                   and
                                                
                                             
                                          
                                          
                                             
                                                
                                                   
                                                   
                                                   
                                                   
                                                   
                                                   
                                                   r
                                                   a
                                                   n
                                                   
                                                      d
                                                      j
                                                   
                                                   ≤
                                                   C
                                                   
                                                      R
                                                      i
                                                   
                                                   
                                                      
                                                         (
                                                         
                                                         g
                                                         )
                                                      
                                                      )
                                                   
                                                
                                             
                                          
                                          
                                             
                                                
                                                   
                                                      f
                                                      
                                                         
                                                            U
                                                            
                                                               i
                                                               ,
                                                               j
                                                            
                                                         
                                                         
                                                            (
                                                            
                                                            g
                                                            )
                                                         
                                                      
                                                   
                                                   =
                                                   
                                                      {
                                                      
                                                         
                                                            
                                                               1
                                                            
                                                            
                                                               
                                                                  elseif
                                                                  
                                                                  r
                                                                  a
                                                                  n
                                                                  
                                                                     d
                                                                     j
                                                                  
                                                                  ≤
                                                                  C
                                                                  
                                                                     R
                                                                     i
                                                                  
                                                                  
                                                                     
                                                                        (
                                                                        
                                                                        g
                                                                        )
                                                                     
                                                                     )
                                                                  
                                                               
                                                            
                                                         
                                                         
                                                            
                                                               
                                                                  f
                                                                  
                                                                     
                                                                        X
                                                                        
                                                                           i
                                                                           ,
                                                                           j
                                                                        
                                                                     
                                                                     
                                                                        (
                                                                        
                                                                        g
                                                                        )
                                                                     
                                                                  
                                                               
                                                            
                                                            
                                                               otherwise
                                                            
                                                         
                                                      
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           where 
                              
                                 E
                                 (
                                 
                                    f
                                    
                                       
                                          U
                                          i
                                       
                                       
                                          (
                                          
                                          g
                                          )
                                       
                                    
                                 
                                 )
                              
                            is the effective length of expression vector for individual Ui
                           ( g), and 
                              
                                 f
                                 
                                    
                                       U
                                       
                                          i
                                          ,
                                          j
                                       
                                    
                                    
                                       (
                                       
                                       g
                                       )
                                    
                                 
                              
                            if the expression vector of individual Ui
                           ( g) on dimension j (j = 1, 2, ...K). The adaptive crossover rate is set as follows:

                              
                                 (22)
                                 
                                    
                                       C
                                       
                                          R
                                          i
                                       
                                       
                                          (
                                          
                                          g
                                          )
                                       
                                       =
                                       
                                          {
                                          
                                             
                                                
                                                   
                                                      2
                                                      
                                                         P
                                                         A
                                                      
                                                      C
                                                      R
                                                      
                                                         (
                                                         
                                                            
                                                               C
                                                               u
                                                               r
                                                               G
                                                               e
                                                               n
                                                            
                                                            
                                                               M
                                                               a
                                                               x
                                                               G
                                                               e
                                                               n
                                                            
                                                         
                                                         )
                                                      
                                                      −
                                                      C
                                                      R
                                                      ,
                                                   
                                                
                                                
                                                   
                                                      i
                                                      f
                                                      
                                                      C
                                                      u
                                                      r
                                                      G
                                                      e
                                                      n
                                                      >
                                                      
                                                         
                                                            M
                                                            a
                                                            x
                                                            G
                                                            e
                                                            n
                                                         
                                                         
                                                            P
                                                            A
                                                         
                                                      
                                                   
                                                
                                             
                                             
                                                
                                                   
                                                      C
                                                      R
                                                      ,
                                                   
                                                
                                                
                                                   
                                                      i
                                                      f
                                                      
                                                      C
                                                      u
                                                      r
                                                      G
                                                      e
                                                      n
                                                      <
                                                      
                                                         
                                                            M
                                                            a
                                                            x
                                                            G
                                                            e
                                                            n
                                                         
                                                         
                                                            P
                                                            A
                                                         
                                                      
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           where CR is the predefined crossover rate, CurGen is the current generation, MaxGen is the maximum generation number and a large PA
                            means the adaptive strategy is adopted in the early stage of optimization. The adaptive crossover which enables the algorithm to pay more attention to the missing effective length on the Pareto front or the individuals with longer effective length achieves the probability increasing as the optimization proceeds. The crossover operation on design variable enables the algorithm to explore the locality independently, while the expression vector concentrates more on the global optimal reconfiguration structure.

VSMODE enters theselection phase after the crossover. The idea of selection in VSMODE originates from the fast non-dominated sorting, ranking, and elitism techniques utilized in non-dominated sorting genetic algorithm-II (NSGA-II) (Ryerkerk, Averill, Deb, & Goodman, 2012) but with some differences. In VSMODE, the trial individual is compared to the target individual, and if target individual is dominated by trial individual, trial individual replaces target individual immediately in the current population. This comparison process creates two populations: current population and dominated population. The two populations are combined and called combined population. The newly created solution entering the population instantly takes part in the creation of new solutions. This is helpful to maintain the population diversity. Moreover, VSMODE also incorporates an effective elite-preserving and an explicit diversity-preserving strategy. The selected individuals are classified by the effective length (associated sub-population). The elite count, a small portion of the fittest individuals, is selected to be 10 percent in each sub-population, and guarantees that the fittest individuals of each effective length can survive to the next generation. Not all effective length can exist on the true Pareto front, so the elite-preserving strategy is only employed in the first half of generation.

The VSMODE is a heuristic algorithm, so the solutions obtained by the proposed algorithm are approximate Pareto solutions. The pseudo-codes of the proposed algorithm are listed as follows:

                           
                              1
                              Initialize the values of parameters: NP, F, CR, δ = 0.5, elite count, max Gen and the number of satellites K.

Generate NP individuals {X
                                 1(0), X
                                 2(0), ..., XNP
                                 (0)} in search space using multi-subpopulation diversity initialization method described in Section B.

Evaluate objective functions at the NP individuals, find f(Xi
                                 (0)), i = 1, 2, ..., NP, and build probability model p(X( g)).

Store NP solutions in the current population pop_1.


                                 currentGen ← 1

While (currentGen < max Gen)//Main loop of VSMODE

For(i = 1 to 
                                 NP)//Iteration loop starts here

Two generation schemes in an adaptive mutation are employed only on design variables.
                                    
                                       
                                          
                                             If
                                             
                                             
                                                (
                                                
                                                   r
                                                   a
                                                   n
                                                   d
                                                   (
                                                   0
                                                   ,
                                                   1
                                                   )
                                                   >
                                                   δ
                                                
                                                )
                                             
                                          
                                       
                                    
                                 
                                 
                                    
                                       
                                          
                                             
                                                V
                                                i
                                             
                                             
                                                (
                                                
                                                g
                                                )
                                             
                                          
                                       
                                    
                                  is produced using Eq. (15).

                                    
                                       
                                          Else
                                       
                                    
                                 
                                 
                                    
                                       
                                          
                                             
                                                V
                                                i
                                             
                                             
                                                (
                                                
                                                g
                                                )
                                             
                                             
                                             
                                                is
                                                
                                                sampled
                                                
                                                from
                                                
                                                the
                                                
                                                probability
                                                
                                                model
                                             
                                             
                                             p
                                             
                                                (
                                                
                                                   X
                                                   (
                                                   
                                                   g
                                                   )
                                                
                                                )
                                             
                                          
                                       
                                    
                                 
                                 
                                    
                                       
                                          EndIf
                                       
                                    
                                 
                              

Perform adaptive crossover both on design variable and expression vector using the operation described in Section D.

Perform selection on trial individual U
                                 
                                    i, j
                                 ( g) with target individual Xi
                                 ( g), If (U
                                 
                                    i, j
                                 ( g) dominates Xi
                                 ( g)), replace Xi
                                 ( g) by U
                                 
                                    i, j
                                 ( g) immediately.

EndFor

Select NP fittest solutions using fast non-dominated sorting, ranking, and elitism techniques from the combined population.

Update parameters δ, CR and probability model p(X( g)).

EndWhile

If the complexity is defined as the total number of function value comparisons, the overall computational complexity of latest versions of Multi-Objective Evolutionary Algorithms (MOEAs) or other popular multi-objective algorithms (e.g. NSGA-II) is O(Nobj
                         × 2(NP)2) (Wang et al., 2010) in which Nobj
                         is the number of objective functions. The increased complexity of one iteration in VSMODE caused by the problem-oriented operators (especially selection operation) is O(Nobj
                         × NP) which is smaller than O(Nobj
                         × 2(NP)2) when NP is large, so the overall complexity of VSMODE can be considered to be O(Nobj
                         × 2(NP)2). Although VSMODE needs some extra computational cost in performing the problem-specific operators, such as sorting the population based on EDA or generating individuals using mutation and crossover operators, most computational costs come from function evaluation.

This sectionpresents a series of case studies of reconfiguration optimization that investigate how coverage metrics can be improved by employing the proposed algorithm.

A summary of five alternative satellites categorizing the initial orbital elements in terms of semimajor axis a, inclination i, eccentricity e, argument of perigee ω, right ascension of the ascending node Ω, and mean anomaly are listed in Table 1 more details of satellite database can be found from webpage http://www.agi.com/products. η
                     max  is assumed to be 15 degrees
 for all satellites.

The design variables and ranges for each satellite in the following reconfiguration scenario are summarized in Table 2
                     . The bound of Ktgt
                      is based on the consideration that the fuel consumption is very large if Ktgt
                      is less than 4 revolutions, while the maneuver time is excessively long if Ktgt
                      is more than 12 revolutions.

To demonstrate the effectiveness of the optimization mechanism (fixed-length mechanism combined with expression vector) and modified operators, we compare the proposed algorithm with two related multi-objective variable-size algorithms: 1) MODE (Wang et al., 2010) with the pattern to compare the optimal and original ν to determine the topological structure (denoted as MODE-C). The satellite is not involved in reconfiguration if the difference is less than δ times of original value; 2) replace the initialization, mutation, crossover and selection operators in VSMODE with that in MODE (denoted as VSMODE-R). Three performance measures are used to quantitatively assess the performances of these algorithms.

The first performance measure is the number of solutions contained in set A that are not dominated by any solution contained in set B, denoted as NNS.

                        
                           (23)
                           
                              
                                 NNS
                                 =
                                 
                                    |
                                    
                                       {
                                       
                                          a
                                          ∈
                                          A
                                          
                                             |
                                             
                                                ∀
                                                b
                                                ∈
                                                B
                                                ,
                                                b
                                                
                                                
                                                   does
                                                   
                                                   not
                                                   
                                                   dominate
                                                   
                                                
                                                a
                                             
                                          
                                       
                                       }
                                    
                                    |
                                 
                              
                           
                        
                     
                  

NNS measures the quality of Pareto front. Obviously, the better algorithm produces more non-dominated solutions.

The second performance measure, denoted as CP
                     , is the convergence of solutions solved by each algorithm. If P
                     * is a set of uniformly distributed points along the ideal Pareto front in the objective space, the mathematical definition of CP
                      is (http://www.agi.com/products/):

                        
                           (24)
                           
                              
                                 
                                    C
                                    P
                                 
                                 
                                    (
                                    
                                       P
                                       a
                                    
                                    ,
                                    
                                       P
                                       *
                                    
                                    )
                                 
                                 =
                                 
                                    
                                       
                                          ∑
                                          
                                             Δ
                                             ∈
                                             
                                                P
                                                *
                                             
                                          
                                       
                                       
                                          d
                                          (
                                          
                                             Δ
                                             ,
                                             
                                                P
                                                a
                                             
                                          
                                          )
                                       
                                    
                                    
                                       
                                          |
                                       
                                       
                                          P
                                          *
                                       
                                       
                                          |
                                       
                                    
                                 
                              
                           
                        
                     where d(Δ, Pa
                     ) is the minimum Euclidean distance between Δ and the approximate Pareto front Pa
                     . The ideal Pareto front P
                     * can be created by merging all non-dominated solutions produced by the compared algorithms.

The last performance measure, denoted as DE
                     , is the diversity of solutions on the effective length of expression vector. If E = {ei
                     |ei
                      ∈ [1, 2, ..., K], i = 1, 2, ..., NP.} is the effective length of the approximate Pareto front, then the elements of E with the same effective length are counted, denoted as set 
                        
                           
                              E
                              j
                              s
                           
                           
                              (
                              j
                              =
                              1
                              ,
                              2
                              ,
                              .
                              .
                              .
                              ,
                              K
                              )
                           
                        
                     . DE
                      can be defined as the variance of 
                        
                           E
                           j
                           s
                        
                     . A smaller DE
                      means that the optimal solutions spread out over different numbers of satellites involved in reconfiguration.

The following three case studies are selected to represent different coverage metrics. The proposed algorithm and other two related algorithms are implemented and compared under equal condition in each case study. The algorithm settings are: NP 
= 
100 (case study 1), NP 
= 
150 (case study 2 and 3), MaxGen = 300 (maximum number of generation is considered as stopping criterion), CR 
= 
0.4, F 
= 
0.6, PA
                      = 
2 and δ = 0.5. The elite count of each sub-population is 10 percent
 in the first half of generation. The Matlab implementation of VSMODE and the supplementary material of the case studies can be downloaded from the webpage http://www.mongofiles.com/file/70108/VSMODE.zip#.

In this case study, three alternative satellites (No. 1 to No. 3) are reconfigured to reduce the ART of a specified target (N31 degree/E103 degree) in a short period (2014/05/01 to 2014/05/15, 15 days). This example is designed to investigate the effect of satellite reconfiguration on the revisit time of a single target.

The original revisit time of this target using all the alternative satellites without any orbital maneuvers is 76,670 
s. The goal of reconfiguration is to minimize the ART with the minimum total fuel consumption and maneuver time.

When the algorithm terminates after MaxGen generations (MaxGen = 300), the solutions from the final generation approximate the problem's Pareto front. The Pareto front, as well as the corresponding number of satellites involved in orbital maneuver, is shown in Fig. 5. Apparently, different satellite combinations can be found by the proposed algorithm to constitute the non-dominated designs.

Three clusters
                        are created if the approximate Pareto front is classified by the number of maneuvered satellites. Useful information can be obtained if we explore different satellite combinations: (1) the boundary is clear between different clusters; (2) each satellite has opportunity to join in reconfiguration in each cluster; (3) the solution with the minimum revisit time can usually be achieved by involving more satellites in reconfiguration, but at the cost of larger ΔV or maneuver time.

The problem has also been solved by MODE-C and VSMODE-R, and the comparative results on three performance metrics are shown in Table 3
                        .

Four alternative satellites (No. 1 to No. 4) are reconfigured to maximize the TCT of several point targets (listed in Table 4) in a period (2014/05/01 to 2014/05/7, 7 days).

The TCT of these targets is 2416 s without reconfiguration. The goal of reconfiguration is to maximize the TCT with the minimum total fuel consumption and maneuver time. The solutions from the final generation of the optimization, as well as the corresponding number of satellites involved in orbital maneuver, are shown in Fig. 6.

The results also indicate that the solutions providing the optimal TCT are achieved by involving more satellites in reconfiguration, but at the cost of larger ΔV or maneuver time. The solutions on the Pareto front are characterized by: (1) there are four clusters and the boundary is clear; (2) satellite 1 seldom performs maneuver in cluster 1 and 2; (3) satellite 2 always performs maneuver in cluster 3.

The problem has also been solved by MODE-C and VSMODE-R, and the comparative results with respect to three performance metrics are shown in Table 5
                        
                        
                        .

This case study reconfigures five alternative satellites (No. 1 to No. 5) to maximize the CSTS of multi-targets defined by different latitude, longitude, priority and minimal duration observation time (Table 6) in a short period (2014/05/01 to 2014/05/15, 15 days). This reconfiguration instance considers the task completion rate, the preference for higher priority targets and the user-specified duration.

The CSTS of these targets is 359.43 without reconfiguration. The solutions from the final generation of the optimization, as well as the corresponding number of satellites involved in orbital maneuver, are shown in Fig. 7.

The CSTS increases with the increase in the number of maneuvered satellites up to four satellites involved in reconfiguration while there are five alternative satellites. Moreover, the characteristics of these solutions are: (1) satellite 3 performs little to no maneuver; (2) although there are four clusters, most solutions that balance the three conflicting objectives are achieved by maneuvering two or three satellites; (3) there are total 25 combination patterns, and thus it is easy to understand the overlap between clusters.

The comparative results on three performance metrics are shown in Table 7
                        .

Three characteristically different scenarios are used to assess the proposed algorithm. Noticeably, the evaluation of coverage metrics is time-consuming and expensive. Hence, the goal of the proposed algorithm is to seek near-optimal solutions for a given problem. The results from above optimization indicate that different satellite combinations are found to balance the performance, propellant consumption and maneuver time. The improvement of performance is limited after a threshold value and even taking more propellant or maneuver time. Each cluster contains a set of solutions with the same effective length. The boundary between clusters is clear if the alternative satellites are limited. However, a large alternative set will result in overlap between clusters because the number of combinations increases exponentially.

The comparative results show that the proposed algorithm is generally more effective than other two algorithms. The key observations are:

                           
                              (1)
                              VSMODE produces more non-dominated solutions and provides a higher degree of convergence and diversification of solutions compared to MODE-C and VSMODE-R.

VSMODE-R also works much better in terms of the three performance measures compared to MODE-C.

MODE-C is almost ineffective for variable-size optimization. It cannot find the solutions spreading out on different effective lengths even we adjust the threshold value δ.

The significant difference between the proposed VSMODE and the other two algorithms originates from the optimization mechanism and modified operators. The high performance of VSMODE can be attributed to three reasons. First, the optimization mechanism provides a localized effect in exploring different effective lengths of the search space around the potential candidates. Second, the multi-subpopulation diversity initialization makes sure that each subpopulation has the same opportunity to take part in reconfiguration. Its random nature in each subpopulation also helps to preserve the diversity. Third, as the search procedure progresses, VSMODE can avoid the loss of diversity in the population owing to its modified mutation and selection operators. Finally, the adaptive crossover can potentially increase the explore opportunity at longer effective length.

An average ΔV below 2 
kilometers per second
 can be considered as a cheap reconfiguration. The above results show that the average ΔV in each solution is much less than 2 kilometers per second
, indicating satellite reconfiguration by adjusting mean anomaly is feasible and effective way to improve coverage metrics. From the above results, some typical combination patterns on the Pareto front can be found and used as knowledge to guide search in the future. If the maximum generation and population size are equal for different algorithms, the computation costs are almost the same, because the computation cost mainly comes from the fitness evaluation, rather than the modified operators. We have not focused on finding the best parameter setting for the algorithm and leave this task for a future study.

@&#CONCLUSIONS@&#

This work addresses the problem of reconfiguring on-orbit satellites for a temporary mission. Three objectives including coverage metrics, total fuel consumption and total maneuver time are considered. Since the reconfiguration topology and component values should be optimized simultaneously, a novel multi-objective optimization approach based on a fixed-length mechanism combined expression vector for implementing variable-size optimization has been constructed. This approach is based on multi-objective differential evolution (MODE) with three significant attributes:

                        
                           •
                           Initially, multi-subpopulation diversity initialization was employed to produce multiple subpopulations, and each subpopulation owns the same effective length.

Then, adaptive mutation operator based on EDA was adopted to improve the exploration capability.

Finally, the adaptive crossover was adopted with an increasing probability as the optimization proceeds, which performs not only on design variables, but also on expression vector to find the optimal component values under different topological structures.

Three case studies considering different coverage metrics were designed to evaluate the effectiveness of the proposed algorithm. The implementation demonstrated that VSMODE can effectively compute different satellite combinations to perform reconfiguration. The comparative results demonstrate that the proposed algorithm is better than other two variable-size algorithms. Moreover, the proposed algorithm not only provides a useful way to solve the reconfiguration problem, but also gives a framework for solving other variable-size problems.

@&#ACKNOWLEDGEMENTS@&#

This research has been supported by the National Natural Science Foundation of China (Grant No. 61473301 and 61203180) and Youth Foundation of China High Resolution Earth Observation (Grant No. GFZX04060103-5-18) and by McMaster University. The authors kindly thank the anonymous reviewers for the useful suggestions to improve the paper.

@&#REFERENCES@&#

