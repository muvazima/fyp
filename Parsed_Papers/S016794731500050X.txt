@&#MAIN-TITLE@&#Modelling discrete longitudinal data using acyclic probabilistic finite automata

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           We introduce APFA as graphical models for discrete longitudinal data.


                        
                        
                           
                           We propose a novel model selection algorithm based on penalized likelihood.


                        
                        
                           
                           We compare its rate of convergence and goodness-of-fit to Beagle.


                        
                        
                           
                           We use data from molecular genetics and social science in the comparisons.


                        
                        
                           
                           Our algorithm performs as least as well or better than the algorithm in Beagle.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Context-specific graphical model

Acyclic probabilistic finite automata

State merging

Discrete longitudinal data

@&#ABSTRACT@&#


               
               
                  Acyclic probabilistic finite automata (APFA) constitute a rich family of models for discrete longitudinal data. An APFA may be represented as a directed multigraph, and embodies a set of context-specific conditional independence relations that may be read off the graph. A model selection algorithm to minimize a penalized likelihood criterion such as AIC or BIC is described. This algorithm is compared to one implemented in Beagle, a widely used program for processing genomic data, both in terms of rate of convergence to the true model as the sample size increases, and a goodness-of-fit measure assessed using cross-validation. The comparisons are based on three data sets, two from molecular genetics and one from social science. The proposed algorithm performs at least as well as the algorithm in Beagle in both respects.
               
            

@&#INTRODUCTION@&#

Discrete longitudinal data consisting of an ordered sequence of discrete variables–often, repeated measurements of the same variable–arise in many and varied applications. Examples include randomized clinical studies, in which a categorical response is recorded at a series of visits to the clinic at pre-specified times; cohort studies, in which an outcome such as morbidity or employment status is followed over time for one or more groups of individuals; and molecular genetics studies employing DNA chips, which record the values of a large number of genetic markers located at a series of physical positions on a chromosome. Often the studies include explanatory variables, and there is interest in relating the pattern of responses to these.

The wide range of study designs and objectives is reflected in the wide range of statistical models that may be applied to such data. These may be (Diggle et al., 2013; Molenberghs and Verbeke, 2005) grouped into three broad classes: (i) marginal models, that seek to relate the marginal distribution of the response variable at each time point to explanatory variables; (ii) subject-specific or random effect models, which account for heterogeneity between individuals by adopting regression-type models with random subject effects; and (iii) conditional or transition models, that focus on the conditional distribution of the response at each time-point given prior responses and possibly explanatory variables.

For example, in randomized clinical trials the focus of interest is often on comparing the outcome between treatment groups at each point of time, and for these marginal modelling approaches may be appropriate. The approach that is studied in this paper is of the conditional type: the aim is to construct parsimonious models for the conditional distribution of the response at each time point given prior responses. Before we examine these models in detail, it is useful to give a brief sketch of their relations with other competitive models.

The transition models often used in the analysis of discrete longitudinal data specify conditional distributions that only involve the previous 
                        q
                      responses, where 
                        q
                      is called the order of the model. The 
                        q
                      prior responses and other covariates are treated on an equal footing as explanatory variables in a convenient parametric model, for example, a generalized linear model (Diggle et al., 2013, Chapter 10). Time-homogeneity is assumed, so that the conditional distributions are constant over the time interval spanned by the study. A simple example for binary data with no covariates is a 
                        q
                     th order Markov chain, in which the conditional distribution is specified by a 
                        
                           
                              2
                           
                           
                              q
                           
                        
                      table of conditional probabilities. Although Markov chains are very general models for time-homogeneous discrete processes, they suffer from the curse of dimensionality, since the number of parameters required increases exponentially with 
                        q
                     . In practice this hinders the use of Markov chains with long range dependences.

Variable length Markov chains (Bühlmann and Wyner, 1999) relax the assumption that the conditional distribution involves 
                        q
                      prior responses, instead allowing the number of previous variables that enter the conditioning to vary according to the values of these variables. This is an example of context-specificity, that is, allowing the dependence structure to vary locally depending on the values of the variables. Variable length Markov chains provide a rich model space and allow the choice of structured models that incorporate longer range dependences. Efficient model selection methods are available (Bühlmann, 2000). Other ways to construct parsimonious higher-order Markov chain models have been proposed (Raftery and Tavare, 1994).

In some applications the assumption of time-homogeneity may be unwarranted: for example, transition probabilities between morbidity outcomes may be age-dependent, and so vary over the course of the study. The Biofam and Duroc studies described in Section  5 provide two other examples where homogeneity is implausible. Directed graphical models (Bayesian networks) avoid the assumption. These models are represented by directed graphs, in which the nodes represent the variables, and the parents 
                        
                           pa
                        
                        
                           (
                           v
                           )
                        
                      of a node 
                        v
                      in the graph (the nodes 
                        u
                      such that there is a directed edge from 
                        u
                      to 
                        v
                     ) represent the determinants of 
                        v
                     . There is no requirement that the determinants of 
                        v
                      be immediately prior to 
                        v
                      in the ordering. An example concerning side-effect profiles in a clinical trial of neuroleptica is given in Edwards (2000, Section 7.1.3). Some recent work has extended Bayesian network methodology to support context-specific modelling (Boutilier et al., 1996; Myers and Troyanskaya, 2007).

In this paper we study a class of models due to Ron et al. (1998) called acyclic probabilistic finite automata. Note that we use the same acronym, APFA, for both singular and plural forms (automaton and automata). APFA combine aspects of Bayesian networks and variable length Markov chains, in that they are time-heterogeneous and involve context-specific dependences, in a way that is more general than simply varying the order of dependence. They provide a very rich class of models for discrete longitudinal data, allowing long-range dependences to be modelled, and may be represented as graphs. So an APFA can be regarded as a time-heterogeneous context-specific graphical model for discrete longitudinal data. See Edwards and Ankinakatte (in press, Section 10) for a more precise comparison of APFA with Bayesian and Markov networks.

APFA may be useful when there is interest in understanding the dependence structure between the variables, and when this structure is expected to vary over the time interval of the study. The methodology assumes that the variables are measured at common times (or, in the case of genomic data, at common spatial positions) and so is not appropriate when times between transitions vary. It has proven to be well-suited to highly-structured, high-dimensional data such as DNA chip data, but we believe that it may be of more general interest and utility. Note that here, except for a brief mention in Section  6, we do not include explanatory variables in the models; for a way to do this see Edwards and Ankinakatte (in press, Section 8).

The structure of the paper is as follows. Section  2 introduces APFA from a statistical perspective. Section  3 describes the model selection algorithm of Ron et al. (1998) which (in a modified form) forms the core of the haplotype clustering algorithm implemented in the Beagle program (Browning and Browning, 2007a,b) that is widely used for phasing and imputation of DNA chip data. Section  3.3 proposes a further modification to the algorithm based on a penalized likelihood criterion. The steps involved in building an APFA from a given discrete longitudinal data set are illustrated using an example. In the subsequent sections the performance of the proposed algorithm is compared to the one implemented in Beagle. Section  4 details the methods used to compare the algorithms; Section  5 describes the data sets used; Section  6 presents the results, and Section  7 describes the software used. Finally, Section  8 provides a brief discussion.

This section gives a brief introduction to APFA from a statistical perspective: see Edwards and Ankinakatte (in press) for a more detailed exposition. We first describe sample trees, that are closely related to APFA.

A set of discrete longitudinal data with 
                           N
                         observations of 
                           p
                         discrete variables 
                           
                              
                                 X
                              
                              
                                 1
                              
                           
                           ,
                           …
                           ,
                           
                              
                                 X
                              
                              
                                 p
                              
                           
                         can be represented as a tree in the following way. Starting with the root node, edges branch out to nodes at the first level or stage. (Previous papers Ron et al., 1998, Browning and Browning, 2007b and Edwards and Ankinakatte, in press use level. But since in statistics this term usually refers to the value of a discrete variable, we here choose to use stage.) The number of branches corresponds to the number of distinct values of 
                           
                              
                                 X
                              
                              
                                 1
                              
                           
                        , and the count on each edge corresponds to the frequency of occurrence of the respective value. An example is shown in Fig. 1
                        
                        . There are 36 observations with 
                           
                              
                                 X
                              
                              
                                 1
                              
                           
                           =
                           1
                         and 34 with 
                           
                              
                                 X
                              
                              
                                 1
                              
                           
                           =
                           2
                        . From each node at stage one, edges branch out to stage two, based on the distinct values of 
                           
                              
                                 X
                              
                              
                                 2
                              
                           
                         given 
                           
                              
                                 X
                              
                              
                                 1
                              
                           
                        . The process continues up to stage 
                           p
                        , and results in the construct called a sample tree. Sample trees are also known as prefix tree acceptors in machine learning (Carrasco and Oncina, 1994), and event trees in Bayesian decision theory (Smith and Anderson, 2008).

Automata are essentially finite state machines that output (or input) strings of symbols. Probabilistic finite automata (PFA) are automata in which strings are generated in a probabilistic manner (Vidal et al., 2005a,b), and APFA are the subclass of PFA that generate symbol strings of constant length, and so can be regarded as probability models for ordered sequences of discrete random variables.

An APFA is represented as a directed multigraph, that is, a directed graph in which there may be multiple edges between node pairs. Two examples are shown in Fig. 2
                        . The graph contains nodes (often called states) and directed edges between them. One node, the root or initial state, has only outgoing edges, and another, the sink or final state, has only incoming edges. All paths from the root to the sink have the same length, say 
                           p
                        . Each edge 
                           e
                         is associated with a probability 
                        
                           π
                           
                              (
                              e
                              )
                           
                         and a symbol 
                        
                           σ
                           
                              (
                              e
                              )
                           
                        . The outgoing edges from each node have distinct symbols and the sum of their probabilities is one. The stage of a node is its distance from the root.

The two APFA shown in Fig. 2 are both models for the data in Table 1. The first is derived from the sample tree in Fig. 1 by setting the edge probabilities to be the relative frequencies of the out-edges from each node, and contracting the leaves to a single node (the sink). We call this the sample APFA. The second is selected using an algorithm described below in Section  3.3 which starts off from the sample APFA and then performs a series of simplifications.

An APFA serves as a device to randomly generate strings of length 
                           p
                        , which it does in the following way. Starting from the root, an outgoing edge is chosen at random according to the edge probabilities, the corresponding symbol is generated and the edge is traversed to the next node. This process continues until it reaches the sink. In a statistical context, the 
                           p
                         symbols in an output string are regarded as realizations of 
                           p
                         discrete random variables, 
                           
                              
                                 X
                              
                              
                                 1
                              
                           
                           ,
                           …
                           ,
                           
                              
                                 X
                              
                              
                                 p
                              
                           
                        . Then the nodes in the graph correspond to sets of partial outcomes 
                           
                              (
                              
                                 
                                    x
                                 
                                 
                                    1
                                 
                              
                              ,
                              …
                              ,
                              
                                 
                                    x
                                 
                                 
                                    q
                                 
                              
                              )
                           
                         for 
                           0
                           ≤
                           q
                           ≤
                           p
                        , and the edges correspond to transitions between these. For example, in Fig. 2(b), A (the root) represents the null outcome, B represents 
                           
                              
                                 X
                              
                              
                                 1
                              
                           
                           =
                           1
                        , D represents the event 
                           
                              (
                              
                                 
                                    X
                                 
                                 
                                    1
                                 
                              
                              ,
                              
                                 
                                    X
                                 
                                 
                                    2
                                 
                              
                              )
                           
                           =
                           
                              (
                              1
                              ,
                              1
                              )
                           
                         or 
                           
                              (
                              2
                              ,
                              1
                              )
                           
                        , and similarly E represents 
                           
                              (
                              
                                 
                                    X
                                 
                                 
                                    1
                                 
                              
                              ,
                              
                                 
                                    X
                                 
                                 
                                    2
                                 
                              
                              )
                           
                           =
                           
                              (
                              1
                              ,
                              2
                              )
                           
                         or 
                           
                              (
                              2
                              ,
                              2
                              )
                           
                        . The edge from E to F represents the occurrence of 
                           
                              
                                 X
                              
                              
                                 3
                              
                           
                           =
                           1
                         following E. Thus F represents the event 
                           
                              (
                              
                                 
                                    X
                                 
                                 
                                    1
                                 
                              
                              ,
                              
                                 
                                    X
                                 
                                 
                                    2
                                 
                              
                              ,
                              
                                 
                                    X
                                 
                                 
                                    3
                                 
                              
                              )
                           
                           =
                           
                              (
                              1
                              ,
                              2
                              ,
                              1
                              )
                           
                         or 
                           
                              (
                              2
                              ,
                              2
                              ,
                              1
                              )
                           
                        . The significance of the two incoming edges meeting at D is that the distribution of 
                           
                              (
                              
                                 
                                    X
                                 
                                 
                                    3
                                 
                              
                              ,
                              
                                 
                                    X
                                 
                                 
                                    4
                                 
                              
                              )
                           
                         given 
                           
                              (
                              
                                 
                                    X
                                 
                                 
                                    1
                                 
                              
                              ,
                              
                                 
                                    X
                                 
                                 
                                    2
                                 
                              
                              )
                           
                           =
                           
                              (
                              1
                              ,
                              1
                              )
                           
                         is identical to that given 
                           
                              (
                              
                                 
                                    X
                                 
                                 
                                    1
                                 
                              
                              ,
                              
                                 
                                    X
                                 
                                 
                                    2
                                 
                              
                              )
                           
                           =
                           
                              (
                              2
                              ,
                              1
                              )
                           
                        , being in both cases determined by the probabilities on the edges downstream from D.

More formally, let 
                           A
                         be an APFA, 
                           p
                         be the length of the root-to-sink paths in 
                           A
                        , and let 
                           
                              X
                           
                         be a discrete random 
                           p
                        -vector 
                           
                              X
                           
                           =
                           
                              (
                              
                                 
                                    X
                                 
                                 
                                    1
                                 
                              
                              ,
                              …
                              ,
                              
                                 
                                    X
                                 
                                 
                                    p
                                 
                              
                              )
                           
                        , where 
                           
                              
                                 X
                              
                              
                                 i
                              
                           
                         has sample space 
                           
                              
                                 X
                              
                              
                                 i
                              
                           
                        . The 
                           
                              
                                 X
                              
                              
                                 i
                              
                           
                         are not required to be identical. Given a root-to-sink path 
                           
                              e
                           
                           =
                           
                              (
                              
                                 
                                    e
                                 
                                 
                                    1
                                 
                              
                              ,
                              
                                 
                                    e
                                 
                                 
                                    2
                                 
                              
                              ,
                              …
                              ,
                              
                                 
                                    e
                                 
                                 
                                    p
                                 
                              
                              )
                           
                        , we equate the associated 
                           p
                        -vector of symbols 
                           σ
                           
                              (
                              
                                 e
                              
                              )
                           
                           =
                           
                              (
                              σ
                              
                                 (
                                 
                                    
                                       e
                                    
                                    
                                       1
                                    
                                 
                                 )
                              
                              ,
                              σ
                              
                                 (
                                 
                                    
                                       e
                                    
                                    
                                       2
                                    
                                 
                                 )
                              
                              ,
                              …
                              ,
                              σ
                              
                                 (
                                 
                                    
                                       e
                                    
                                    
                                       p
                                    
                                 
                                 )
                              
                              )
                           
                         with a realization of 
                           
                              X
                           
                        . Distinct root-to-sink paths generate distinct realizations of 
                           
                              X
                           
                        . The sample space of 
                           
                              X
                           
                         is given by 
                           X
                           
                              (
                              A
                              )
                           
                           =
                           
                              {
                              σ
                              
                                 (
                                 
                                    e
                                 
                                 )
                              
                              :
                              
                                 e
                              
                              ∈
                              E
                              
                                 (
                                 A
                                 )
                              
                              }
                           
                        , where 
                           E
                           
                              (
                              A
                              )
                           
                         is the set of root-to-sink paths in 
                           A
                        . Here 
                           X
                           
                              (
                              A
                              )
                           
                         is some subspace of the product space 
                           X
                           =
                           ∏
                           
                              
                                 X
                              
                              
                                 i
                              
                           
                        . For any 
                           
                              x
                           
                           ∈
                           X
                           
                              (
                              A
                              )
                           
                         we can find the unique root-to-sink path 
                           
                              e
                           
                         such that 
                           
                              x
                           
                           =
                           σ
                           
                              (
                              
                                 e
                              
                              )
                           
                        : we write this as 
                           
                              e
                           
                           =
                           
                              
                                 σ
                              
                              
                                 −
                                 1
                              
                           
                           
                              (
                              
                                 x
                              
                              )
                           
                        . The sample space 
                           
                              
                                 X
                              
                              
                                 i
                              
                           
                         corresponds to the set of symbols generated by incoming edges to a stage 
                           i
                         node.

The edge probabilities 
                           π
                           
                              (
                              e
                              )
                           
                         specify the marginal and conditional probabilities appearing in the standard factorization of the joint density of 
                           
                              X
                           
                        
                        
                           
                              (1)
                              
                                 Pr
                                 
                                    (
                                    
                                       X
                                    
                                    =
                                    
                                       x
                                    
                                    )
                                 
                                 =
                                 Pr
                                 
                                    (
                                    
                                       
                                          X
                                       
                                       
                                          1
                                       
                                    
                                    =
                                    
                                       
                                          x
                                       
                                       
                                          1
                                       
                                    
                                    )
                                 
                                 
                                    
                                       ∏
                                    
                                    
                                       i
                                       =
                                       2
                                       …
                                       p
                                    
                                 
                                 Pr
                                 
                                    (
                                    
                                       
                                          X
                                       
                                       
                                          i
                                       
                                    
                                    =
                                    
                                       
                                          x
                                       
                                       
                                          i
                                       
                                    
                                    |
                                    
                                       
                                          X
                                       
                                       
                                          <
                                          i
                                       
                                    
                                    =
                                    
                                       
                                          x
                                       
                                       
                                          <
                                          i
                                       
                                    
                                    )
                                 
                                 ,
                              
                           
                         where here and throughout we use shorthand expressions such as 
                           
                              
                                 
                                    X
                                 
                              
                              
                                 <
                                 i
                              
                           
                           =
                           
                              (
                              
                                 
                                    X
                                 
                                 
                                    1
                                 
                              
                              ,
                              …
                              ,
                              
                                 
                                    X
                                 
                                 
                                    i
                                    −
                                    1
                                 
                              
                              )
                           
                        , 
                           
                              
                                 
                                    x
                                 
                              
                              
                                 ≥
                                 i
                              
                           
                           =
                           
                              (
                              
                                 
                                    x
                                 
                                 
                                    i
                                 
                              
                              ,
                              …
                              ,
                              
                                 
                                    x
                                 
                                 
                                    p
                                 
                              
                              )
                           
                        , 
                           
                              
                                 
                                    Y
                                 
                              
                              
                                 ≥
                                 i
                                 ;
                                 ≤
                                 j
                              
                           
                           =
                           
                              (
                              
                                 
                                    Y
                                 
                                 
                                    i
                                 
                              
                              ,
                              …
                              ,
                              
                                 
                                    Y
                                 
                                 
                                    j
                                 
                              
                              )
                           
                         and so forth.

By construction, when the process arrives at node 
                           w
                         at stage 
                           i
                        , the distribution of the future observations 
                           
                              
                                 
                                    X
                                 
                              
                              
                                 >
                                 i
                              
                           
                         does not depend on the path the process took to arrive at 
                           w
                        . This implies a conditional independence constraint on the joint distribution of 
                           
                              X
                           
                         that can be written as 
                           
                              (2)
                              
                                 
                                    
                                       
                                          X
                                       
                                    
                                    
                                       >
                                       i
                                    
                                 
                                 ⫫
                                 
                                    
                                       
                                          X
                                       
                                    
                                    
                                       ≤
                                       i
                                    
                                 
                                 |
                                 
                                    
                                       
                                          X
                                       
                                    
                                    
                                       ≤
                                       i
                                    
                                 
                                 ∈
                                 C
                                 
                                    (
                                    w
                                    )
                                 
                                 ,
                              
                           
                         where 
                           C
                           
                              (
                              w
                              )
                           
                           =
                           
                              {
                              σ
                              
                                 (
                                 
                                    e
                                 
                                 )
                              
                              :
                              
                                 e
                              
                              ∈
                              P
                              
                                 (
                                 w
                                 )
                              
                              }
                           
                        , and 
                           P
                           
                              (
                              w
                              )
                           
                         is the set of paths from the root to 
                           w
                        . We might express this loosely by saying that the future is independent of the past in a certain context, namely that the past is in a given set of pasts. We call this a context-specific conditional independence relation. Thus for any node with multiple incoming edges, a conditional independence statement of the form (2) can be read off the graph.

In Fig. 2(b), for example, the two incoming blue edges to node E imply that given 
                           
                              
                                 X
                              
                              
                                 2
                              
                           
                           =
                           2
                        , 
                           
                              (
                              
                                 
                                    X
                                 
                                 
                                    3
                                 
                              
                              ,
                              
                                 
                                    X
                                 
                                 
                                    4
                                 
                              
                              )
                           
                         is independent of 
                           
                              
                                 X
                              
                              
                                 1
                              
                           
                        , which we write as 
                           
                              (
                              
                                 
                                    X
                                 
                                 
                                    3
                                 
                              
                              ,
                              
                                 
                                    X
                                 
                                 
                                    4
                                 
                              
                              )
                           
                           ⫫
                           
                              
                                 X
                              
                              
                                 1
                              
                           
                           |
                           
                              
                                 X
                              
                              
                                 2
                              
                           
                           =
                           2
                        .

No such conditional independence constraints hold in sample APFA, since no nodes in these have multiple incoming edges.

Thus an APFA expresses a set of context-specific conditional independence constraints on the distribution of 
                           
                              X
                           
                        , and in this respect it resembles the dependence graph of a traditional graphical model (Lauritzen, 1996; Edwards, 2000).

Maximum likelihood estimation in APFA is very straightforward. Suppose that 
                           A
                         is an APFA whose edge probabilities 
                           π
                           
                              (
                              e
                              )
                           
                         are unknown, and that independent samples 
                           
                              
                                 
                                    x
                                 
                              
                              
                                 
                                    (
                                    v
                                    )
                                 
                              
                           
                           =
                           
                              (
                              
                                 
                                    x
                                 
                                 
                                    1
                                 
                                 
                                    
                                       (
                                       v
                                       )
                                    
                                 
                              
                              ,
                              …
                              ,
                              
                                 
                                    x
                                 
                                 
                                    p
                                 
                                 
                                    
                                       (
                                       v
                                       )
                                    
                                 
                              
                              )
                           
                         for 
                           v
                           =
                           1
                           …
                           N
                         are drawn from 
                           A
                        . We wish to estimate the 
                           π
                           
                              (
                              e
                              )
                           
                        . We know that for any 
                           
                              x
                           
                           ∈
                           X
                           
                              (
                              A
                              )
                           
                        , the probability of drawing 
                           
                              x
                           
                         is 
                           Pr
                           
                              (
                              
                                 x
                              
                              )
                           
                           =
                           
                              
                                 ∏
                              
                              
                                 i
                                 =
                                 1
                                 …
                                 p
                              
                           
                           π
                           
                              (
                              
                                 
                                    e
                                 
                                 
                                    i
                                 
                              
                              )
                           
                         where 
                           
                              e
                           
                           =
                           
                              
                                 σ
                              
                              
                                 −
                                 1
                              
                           
                           
                              (
                              
                                 x
                              
                              )
                           
                        , so that the likelihood of the sample is 
                           
                              
                                 (3)
                                 
                                    
                                       
                                          ∏
                                       
                                       
                                          v
                                          =
                                          1
                                          …
                                          N
                                       
                                    
                                    Pr
                                    
                                       (
                                       
                                          
                                             
                                                x
                                             
                                          
                                          
                                             
                                                (
                                                v
                                                )
                                             
                                          
                                       
                                       ∣
                                       
                                          π
                                       
                                       )
                                    
                                    =
                                    
                                       
                                          ∏
                                       
                                       
                                          v
                                          =
                                          1
                                          …
                                          N
                                       
                                    
                                    
                                       
                                          ∏
                                       
                                       
                                          i
                                          =
                                          1
                                          …
                                          p
                                       
                                    
                                    π
                                    
                                       (
                                       
                                          
                                             e
                                          
                                          
                                             i
                                          
                                          
                                             
                                                (
                                                v
                                                )
                                             
                                          
                                       
                                       )
                                    
                                 
                              
                              
                                 (4)
                                 
                                    =
                                    
                                       
                                          ∏
                                       
                                       
                                          e
                                          ∈
                                          E
                                          
                                             (
                                             A
                                             )
                                          
                                       
                                    
                                    π
                                    
                                       
                                          
                                             (
                                             e
                                             )
                                          
                                       
                                       
                                          n
                                          
                                             (
                                             e
                                             )
                                          
                                       
                                    
                                    ,
                                 
                              
                           
                         where 
                           
                              
                                 
                                    e
                                 
                              
                              
                                 
                                    (
                                    v
                                    )
                                 
                              
                           
                           =
                           
                              
                                 σ
                              
                              
                                 −
                                 1
                              
                           
                           
                              (
                              
                                 
                                    
                                       x
                                    
                                 
                                 
                                    
                                       (
                                       v
                                       )
                                    
                                 
                              
                              )
                           
                        , 
                           
                              π
                           
                           =
                           
                              {
                              π
                              
                                 (
                                 e
                                 )
                              
                              :
                              e
                              ∈
                              E
                              
                                 (
                                 A
                                 )
                              
                              }
                           
                         is the parameter vector, and 
                           n
                           
                              (
                              e
                              )
                           
                         is the edge count, i.e. the number of observations in the sample whose root-to-sink path traverses the edge 
                           e
                        . We similarly define the node counts 
                        
                           n
                           
                              (
                              v
                              )
                           
                         to be the number of observations in the sample whose root-to-sink path passes through 
                           v
                           ∈
                           V
                        . The likelihood of the model is simply maximized by setting edge probabilities 
                           π
                           
                              (
                              e
                              )
                           
                         to be the relative frequencies of the corresponding counts, that is, 
                           
                              
                                 π
                              
                              
                                 ˆ
                              
                           
                           
                              (
                              e
                              )
                           
                           =
                           n
                           
                              (
                              e
                              )
                           
                           /
                           n
                           
                              (
                              v
                              )
                           
                        , where 
                           v
                         is the source node of 
                           e
                        . The maximized log-likelihood under 
                           A
                         is then 
                           
                              
                                 ℓ
                              
                              
                                 ˆ
                              
                           
                           
                              (
                              A
                              )
                           
                           =
                           
                              
                                 ∑
                              
                              
                                 e
                                 ∈
                                 E
                                 
                                    (
                                    A
                                    )
                                 
                              
                           
                           n
                           
                              (
                              e
                              )
                           
                           log
                           
                              
                                 π
                              
                              
                                 ˆ
                              
                           
                           
                              (
                              e
                              )
                           
                        .

Section  3 describes an algorithm in which the sample APFA is simplified in a series of state merging operations. The idea is to merge two nodes 
                           v
                         and 
                           w
                         at stage 
                           i
                         whenever the sample distributions of the future 
                           
                              
                                 X
                              
                              
                                 >
                                 i
                              
                           
                        , given that the data generating process has passed through 
                           v
                         or 
                           w
                        , are similar. The decision may be based on a likelihood ratio test (LRT) of the hypothesis that the corresponding true, unknown distributions are identical. The merging operation is illustrated in Fig. 3
                        (b), which shows the result of merging nodes labelled 3 and 5 in Fig. 3(a). Note that since APFA require that all outgoing edges from each node have distinct symbols, merging 
                           v
                         and 
                           w
                         may require that further node-pairs are merged: in the example, merging nodes 3 and 5 induces the merging of nodes 7 and 10, and of nodes 8 and 11.

The state merging operation and corresponding LRTs are studied in detail in Edwards and Ankinakatte (in press). It is shown that the tests are closely related to standard LRTs of independence (
                           
                              
                                 G
                              
                              
                                 2
                              
                           
                        ) in two-way contingency tables. In particular, it is shown that the LRT associated with merging 
                           v
                         and 
                           w
                         is equal to the sum of the deviance statistics for 
                           v
                           ,
                           w
                         and the induced descendent node-pairs. The computation of the deviance and the corresponding degrees of freedom associated with merging nodes 3 and 5 in Fig. 3(a) is illustrated in Table 2
                        .

The algorithm proposed by Ron et al. (1998) to select an APFA given a data sample proceeds as follows. The sample APFA is constructed and then simplified in a series of state merging operations. As mentioned above, the idea is to merge two nodes 
                           v
                         and 
                           w
                         at stage 
                           i
                         whenever the distributions of the future 
                           
                              
                                 X
                              
                              
                                 >
                                 i
                              
                           
                        , given that the process has passed through 
                           v
                         or 
                           w
                        , are similar. To assess this (Ron et al., 1998) proposed a dissimilarity score between nodes 
                           v
                         and 
                           w
                        , written 
                           δ
                           
                              (
                              v
                              ,
                              w
                              )
                           
                        , and a fixed threshold, 
                           μ
                        . When 
                           δ
                           
                              (
                              v
                              ,
                              w
                              )
                           
                         is small the conditional distributions of 
                           
                              
                                 
                                    X
                                 
                              
                              
                                 >
                                 i
                              
                           
                        , given that the process has passed through 
                           v
                         and 
                           w
                         respectively, are similar. More precisely, 
                           v
                         and 
                           w
                         are called similar if 
                           δ
                           
                              (
                              v
                              ,
                              w
                              )
                           
                           <
                           μ
                        : otherwise they are called dissimilar. Dissimilar nodes are not merged.

The algorithm proceeds from stages 1 to 
                           p
                           −
                           1
                        . At each stage, similar nodes are merged, the process continuing until all the resulting nodes at the stage are pairwise dissimilar: these form a partition of the original nodes at the stage. The algorithm then proceeds to the next stage.

The dissimilarity score proposed by Ron et al. (1998) was 
                           
                              
                                 
                                    
                                       
                                          δ
                                       
                                       
                                          R
                                       
                                    
                                    
                                       (
                                       v
                                       ,
                                       w
                                       )
                                    
                                    =
                                    
                                       
                                          max
                                       
                                       
                                          k
                                          =
                                          i
                                          +
                                          1
                                          …
                                          p
                                       
                                    
                                    
                                       
                                          max
                                       
                                       
                                          
                                             
                                                
                                                   x
                                                
                                             
                                             
                                                i
                                                +
                                                1
                                                ,
                                                …
                                                ,
                                                k
                                             
                                          
                                       
                                    
                                 
                              
                              
                                 
                                    
                                       |
                                       
                                          
                                             Pr
                                          
                                          
                                             ˆ
                                          
                                       
                                       
                                          (
                                          
                                             
                                                
                                                   X
                                                
                                             
                                             
                                                i
                                                +
                                                1
                                                ,
                                                …
                                                ,
                                                k
                                             
                                          
                                          =
                                          
                                             
                                                
                                                   x
                                                
                                             
                                             
                                                i
                                                +
                                                1
                                                ,
                                                …
                                                ,
                                                k
                                             
                                          
                                          |
                                       
                                       
                                          
                                             
                                                X
                                             
                                          
                                          
                                             ≤
                                             i
                                          
                                       
                                       ∈
                                       C
                                       
                                          (
                                          v
                                          )
                                       
                                       )
                                    
                                    −
                                    
                                       
                                          Pr
                                       
                                       
                                          ˆ
                                       
                                    
                                    
                                       (
                                       
                                          
                                             
                                                X
                                             
                                          
                                          
                                             i
                                             +
                                             1
                                             ,
                                             …
                                             ,
                                             k
                                          
                                       
                                       =
                                       
                                          
                                             
                                                x
                                             
                                          
                                          
                                             i
                                             +
                                             1
                                             ,
                                             …
                                             ,
                                             k
                                          
                                       
                                       
                                          |
                                          
                                             
                                                
                                                   X
                                                
                                             
                                             
                                                ≤
                                                i
                                             
                                          
                                          ∈
                                          C
                                          
                                             (
                                             w
                                             )
                                          
                                          )
                                       
                                       |
                                    
                                    .
                                 
                              
                           
                         Note that the estimated conditional probability differences here take the form 
                           
                              (5)
                              
                                 
                                    |
                                    
                                       
                                          n
                                          
                                             (
                                             e
                                             )
                                          
                                       
                                       
                                          n
                                          
                                             (
                                             v
                                             )
                                          
                                       
                                    
                                    −
                                    
                                       
                                          n
                                          
                                             (
                                             f
                                             )
                                          
                                       
                                       
                                          n
                                          
                                             (
                                             w
                                             )
                                          
                                       
                                    
                                    |
                                 
                                 ,
                              
                           
                         where 
                           e
                         and 
                           f
                         are corresponding descendent edges of 
                           v
                         and 
                           w
                         respectively, that is to say, for which there exists paths from 
                           v
                         and 
                           w
                         to their respective targets 
                           t
                           
                              (
                              e
                              )
                           
                         and 
                           t
                           
                              (
                              f
                              )
                           
                         with the same symbol sequence.

In Browning (2006) the same dissimilarity score is used but the algorithm is modified in two ways. In Ron et al. (1998) the order in which nodes within a stage are compared and possibly merged was unspecified. Instead, Browning (2006) describes a greedy approach in which dissimilarities between all pairs of nodes at the stage are computed, and the most similar pair 
                           
                              (
                              v
                              ,
                              w
                              )
                           
                         is merged. The scores are re-computed as necessary, and the process is repeated until the resulting nodes are pairwise dissimilar. The second modification is to allow the threshold to depend on the nodes counts 
                           n
                           
                              (
                              v
                              )
                           
                         and 
                           n
                           
                              (
                              w
                              )
                           
                        , using 
                           
                              
                                 μ
                                 
                                    (
                                    v
                                    ,
                                    w
                                    )
                                 
                                 =
                                 
                                    
                                       n
                                       
                                          
                                             
                                                (
                                                v
                                                )
                                             
                                          
                                          
                                             −
                                             1
                                          
                                       
                                       +
                                       n
                                       
                                          
                                             
                                                (
                                                w
                                                )
                                             
                                          
                                          
                                             −
                                             1
                                          
                                       
                                    
                                 
                                 .
                              
                           
                         The rationale is that the variability of (5) depends on the node counts 
                           n
                           
                              (
                              v
                              )
                           
                         and 
                           n
                           
                              (
                              w
                              )
                           
                        , and is greatest when these are small. Consequently when a constant threshold is used, nodes with small counts tend to be judged dissimilar by chance. The proposed threshold is twice the maximum of the asymptotic standard deviation under the null hypothesis. In Browning and Browning (2007a) the threshold was further modified to take the form 
                           
                              
                                 μ
                                 
                                    (
                                    v
                                    ,
                                    w
                                    )
                                 
                                 =
                                 m
                                 
                                    
                                       n
                                       
                                          
                                             
                                                (
                                                v
                                                )
                                             
                                          
                                          
                                             −
                                             1
                                          
                                       
                                       +
                                       n
                                       
                                          
                                             
                                                (
                                                w
                                                )
                                             
                                          
                                          
                                             −
                                             1
                                          
                                       
                                    
                                 
                                 +
                                 b
                                 ,
                              
                           
                         where 
                           m
                         and 
                           b
                         are scale and shift tuning parameters, respectively. Increasing the threshold results in simpler partitions: since the number of nodes at higher stages is reduced accordingly this also increases the efficiency of the selection process. The values 
                           m
                           =
                           4
                         and 
                           b
                           =
                           0.2
                         were recommended in Browning and Browning (2007a), based on unpublished simulation studies.

We propose instead to base model selection on the penalized likelihood criterion 
                           
                              (6)
                              
                                 I
                                 C
                                 
                                    (
                                    A
                                    )
                                 
                                 =
                                 −
                                 2
                                 
                                    
                                       ℓ
                                    
                                    
                                       ˆ
                                    
                                 
                                 
                                    (
                                    A
                                    )
                                 
                                 +
                                 α
                                 dim
                                 
                                    (
                                    A
                                    )
                                 
                                 ,
                              
                           
                         where 
                           dim
                           
                              (
                              A
                              )
                           
                         is the number of free parameters under 
                           A
                        , and 
                           α
                         is a tuning parameter. For the Akaike information criterion (Akaike, 1973), 
                           α
                           =
                           2
                         and for the Bayesian information criterion (Schwarz et al., 1978), 
                           α
                           =
                           log
                           
                              (
                              N
                              )
                           
                        . The criteria are often abbreviated to AIC and BIC, respectively. The latter penalizes parameters more heavily and so selects simpler models. Under suitable regularity conditions, minimizing the BIC is consistent in the sense that for large 
                           N
                         it selects the simplest model consistent with the data (Ripley, 1996, Section 2.6).

To do this, we introduce a new dissimilarity score 
                           
                              (7)
                              
                                 
                                    
                                       δ
                                    
                                    
                                       I
                                       C
                                    
                                 
                                 
                                    (
                                    v
                                    ,
                                    w
                                    )
                                 
                                 =
                                 I
                                 C
                                 
                                    (
                                    
                                       
                                          A
                                       
                                       
                                          0
                                       
                                    
                                    )
                                 
                                 −
                                 I
                                 C
                                 
                                    (
                                    A
                                    )
                                 
                                 =
                                 
                                    
                                       G
                                    
                                    
                                       2
                                    
                                 
                                 
                                    (
                                    A
                                    ,
                                    
                                       
                                          A
                                       
                                       
                                          0
                                       
                                    
                                    )
                                 
                                 −
                                 α
                                 k
                                 ,
                              
                           
                         where 
                           
                              
                                 G
                              
                              
                                 2
                              
                           
                         is the deviance statistic, given by 
                           
                              (8)
                              
                                 
                                    
                                       G
                                    
                                    
                                       2
                                    
                                 
                                 
                                    (
                                    A
                                    ,
                                    
                                       
                                          A
                                       
                                       
                                          0
                                       
                                    
                                    )
                                 
                                 =
                                 −
                                 2
                                 
                                    [
                                    
                                       
                                          ℓ
                                       
                                       
                                          ˆ
                                       
                                    
                                    
                                       (
                                       A
                                       )
                                    
                                    −
                                    
                                       
                                          ℓ
                                       
                                       
                                          ˆ
                                       
                                    
                                    
                                       (
                                       
                                          
                                             A
                                          
                                          
                                             0
                                          
                                       
                                       )
                                    
                                    ]
                                 
                                 ,
                              
                           
                         where 
                           
                              
                                 A
                              
                              
                                 0
                              
                           
                         is the APFA obtained after merging 
                           v
                         and 
                           w
                         in 
                           A
                        , and 
                           k
                         is the corresponding degrees of freedom. We apply the greedy approach just described and set the threshold 
                           μ
                           =
                           0
                        , so that two nodes are judged to be dissimilar whenever merging them would increase 
                           
                              
                                 δ
                              
                              
                                 I
                                 C
                              
                           
                        . Thus the selection algorithm seeks to minimize (6).

To illustrate the method we apply it to the data in Table 1. There are 
                           N
                           =
                           70
                         observations and 
                           p
                           =
                           4
                         variables. The algorithm proceeds from stage 1 to 
                           p
                           −
                           1
                        . The calculations are shown in Table 3
                        , and the graphs passed through are shown in Fig. 3. We use the BIC tuning parameter, 
                           α
                           =
                           log
                           
                              (
                              N
                              )
                           
                        . The algorithm starts with the sample APFA (Fig. 3(a)). At stage 1, no merging occurs. At stage 2, 
                           
                              
                                 δ
                              
                              
                                 I
                                 C
                              
                           
                         for nodes labelled 3 and 5 are negative and minimal, so we merge these nodes to get a single node labelled 3, resulting in Fig. 3(b). The algorithm continues to search for stage 2 nodes to merge, which results in merging nodes 4 and 6, giving Fig. 3(c). At each merging, the corresponding descendent nodes are also merged, and the edge counts are summed. Here the algorithm labels the resultant node with the smaller number among the merged nodes. At stage three, nodes 9 and 7 are merged, and the resulting model is shown in Fig. 3(d).

We compare the model selection algorithm described in the previous section with that described by Browning and Browning (2007a) and implemented in Beagle in two ways: firstly, by comparing their rate of convergence as the sample size increases using simulation, and secondly by assessing the goodness-of-fit of the selected model using ten-fold cross-validation. In both cases we use the three data sets described in Section  5.

We compare the performance of the proposed model selection algorithm based on penalized likelihood criteria (both AIC and BIC) to that implemented in Beagle. Here we use both the settings suggested in Browning and Browning (2007a) (
                           m
                           =
                           4
                         and 
                           b
                           =
                           0.2
                        ) and the settings implicit in Browning (2006) (
                           m
                           =
                           1
                         and 
                           b
                           =
                           0
                        ). We compare the algorithms in respect to the rate at which the selected model converges to the true model as the sample size increases.

For various values of 
                           
                              
                                 N
                              
                              
                                 ∗
                              
                           
                        , we take 
                           
                              
                                 N
                              
                              
                                 ∗
                              
                           
                         independent samples from a given APFA 
                           
                              
                                 A
                              
                              
                                 0
                              
                           
                        , using the data generating process described in Section  2. The simulated data sets of varying sizes are then used to build the APFA, 
                           A
                        , using the model selection methods under comparison. Then we compute the dissimilarity of the selected model 
                           A
                         to the true model 
                           
                              
                                 A
                              
                              
                                 0
                              
                           
                        , using two measures: the Kullback–Leibler divergence (KLD), and the Kullback–Leibler increment (KLI) (see Appendix A). This is replicated ten times, and the average KL-divergence 
                           
                              KLD
                           
                           
                              (
                              A
                              ,
                              
                                 
                                    A
                                 
                                 
                                    0
                                 
                              
                              )
                           
                         and KL-increment 
                           
                              KLI
                           
                           
                              (
                              A
                              ,
                              
                                 
                                    A
                                 
                                 
                                    0
                                 
                              
                              )
                           
                         are reported.

This process is performed three times: once for each of the three data sets described in Section  5. The “true” model 
                           
                              
                                 A
                              
                              
                                 0
                              
                           
                         is constructed by applying the minimal AIC selection procedure described above to the data set. But note that since computation of the KL-divergence is computationally demanding (see Appendix A), only the first 10 variables were used to construct 
                           
                              
                                 A
                              
                              
                                 0
                              
                           
                         for the Biofam and Duroc data sets for the KL-divergence computations. For the KL-increment comparisons, all the variables were used.

Suppose we are given an APFA 
                           A
                         with known edge probabilities 
                           π
                           
                              (
                              e
                              )
                           
                        , and a commensurate data set 
                           D
                         of the form 
                           
                              
                                 
                                    x
                                 
                              
                              
                                 
                                    (
                                    v
                                    )
                                 
                              
                           
                           =
                           
                              (
                              
                                 
                                    x
                                 
                                 
                                    1
                                 
                                 
                                    
                                       (
                                       v
                                       )
                                    
                                 
                              
                              ,
                              …
                              ,
                              
                                 
                                    x
                                 
                                 
                                    p
                                 
                                 
                                    
                                       (
                                       v
                                       )
                                    
                                 
                              
                              )
                           
                         for 
                           v
                           =
                           1
                           …
                           m
                        . As a measure of how well the model 
                           A
                         fits the data set, 
                           D
                        , Thollard et al. (2000) and others suggest using a quantity called the per symbol log likelihood (psLL) for this purpose. It is defined as 
                           
                              (9)
                              
                                 psLL
                                 =
                                 −
                                 
                                    
                                       1
                                    
                                    
                                       m
                                       p
                                    
                                 
                                 
                                    
                                       ∑
                                    
                                    
                                       e
                                       ∈
                                       E
                                       
                                          (
                                          A
                                          )
                                       
                                    
                                 
                                 n
                                 
                                    (
                                    e
                                    )
                                 
                                 log
                                 
                                    (
                                    π
                                    
                                       (
                                       e
                                       )
                                    
                                    )
                                 
                                 ,
                              
                           
                         where 
                           n
                           
                              (
                              e
                              )
                           
                         is the number of observations in 
                           D
                         whose root-to-sink path in 
                           A
                         passes through 
                           e
                        , and 
                           π
                           
                              (
                              e
                              )
                           
                         are the known edge probabilities. Note that since each observation in 
                           D
                         passes through 
                           p
                         edges in 
                           A
                        , psLL is the average value of 
                           −
                           log
                           
                              (
                              π
                              
                                 (
                                 e
                                 )
                              
                              )
                           
                         obtained when 
                           A
                         generates 
                           D
                        . Thus psLL is a measure of how well 
                           A
                         fits 
                           D
                        .

For ease of interpretation we prefer to use a slightly modified measure we call the mean edge probability (meP) defined as
                           
                              (10)
                              
                                 meP
                                 =
                                 
                                    
                                       e
                                    
                                    
                                       −
                                       
                                          psLL
                                       
                                    
                                 
                                 =
                                 
                                    
                                       
                                          [
                                          
                                             
                                                ∏
                                             
                                             
                                                e
                                                ∈
                                                E
                                                
                                                   (
                                                   A
                                                   )
                                                
                                             
                                          
                                          π
                                          
                                             
                                                
                                                   (
                                                   e
                                                   )
                                                
                                             
                                             
                                                n
                                                
                                                   (
                                                   e
                                                   )
                                                
                                             
                                          
                                          ]
                                       
                                    
                                    
                                       
                                          
                                             1
                                          
                                          
                                             m
                                             p
                                          
                                       
                                    
                                 
                                 .
                              
                           
                        
                     

This is the geometric mean of the 
                           π
                           
                              (
                              e
                              )
                           
                         obtained when 
                           A
                         generates 
                           D
                        . This is easier to interpret since like a probability it lies between 0 and 1: the higher the value, the better the fit.

We assess the goodness-of-fit of the models selected by the algorithms as applied to a given data set using 10-fold cross validation. First the data are divided randomly into 10 subsets of approximately the same size. For each data subset we then 
                           
                              1.
                              Take the subset as the test data,

Take the remaining subsets as the training data,

Apply the model selection algorithm to the training data,

Compute the 
                                    meP
                                  of the selected model as applied to the test data.

We report the average 
                           meP
                         over the ten subsets for the different model selection algorithms applied to the data sets described in Section  5.

The procedure described in Section  4 was applied to the following three data sets.

The mildew data stem from a cross between two isolates of the barley powdery mildew fungus (Christiansen and Giese, 1990). For each of 
                        N
                        =
                        70
                      offspring, 
                        p
                        =
                        6
                      binary markers, each corresponding to a single locus, were recorded. One objective of the analysis is to determine the order of the loci along the chromosome. The data were obtained from the experimenters, are analysed in Edwards (1992) and are available from the Comprehensive R Archive Network (CRAN), being supplied along with the package gRapfa.

The Duroc SNP data come from a study in which 4239 pigs of the Duroc breed were genotyped using the Illumina Porcine SNP60 BeadChip. In all approximately 60000 single nucleotide polymorphisms (SNPs) were recorded for each pig. The data and its preprocessing are further described in Edwards (2013). The data analysed here consist of 
                        N
                        =
                        4239
                      observations of 
                        p
                        =
                        100
                      SNPs (the first 100 SNPs on chromosome 1). From a statistical point of view, SNPs are trichotomous variables (two homozygotes and a heterozygote).

To illustrate application of the methodology to data outside of genetics, we consider the analysis of a social science data set. The Biofam data set is derived from data obtained in a retrospective biographical survey carried out by the Swiss Household Panel in 2002. The data are freely available to the scientific community, and can be downloaded from CRAN as part of the package TraMineR (Gabadinho et al., 2011). They contain sequences of family life states recorded once a year from age 15 to 30 for 
                        N
                        =
                        2000
                      individuals born between 1909 and 1972, including only individuals who were at least 30 years old at the time of the survey. Family life state is classified into 8 categories: (i) living with parents, (ii) left home, (iii) married, (iv) left home and married, (v) have children, (vi) left home and have children, (vii) left home, married and have children, and (viii) divorced. In addition, a large number of covariates were recorded. Here for the sake of simplicity we only include sex and religion, the latter coded as ‘catholic’, ‘protestant’ or ‘other’. We combine these into one factor with six levels, i.e. the six combinations of sex and religion, and we organize the data so that this variable is placed prior to the family life state variables.

@&#RESULTS@&#

The results of applying the model selection procedure (using the AIC) to the Duroc SNP data set and the Biofam data set are shown in Fig. 4
                     . In Fig. 4(a) it is seen that the APFA for the Duroc SNP data is highly structured, with relatively few, long blocks (particularly for the first 50 or 60 SNPs). This reflects the relatively low haplotype diversity in this region (Edwards, 2013). In contrast, the APFA for the Biofam data in Fig. 4(b) shows a more diffuse structure. In this context it is of interest to display the relative frequencies of the different life courses and this is done here by setting the width of the edges proportional to the edge counts. The red edges represent children staying with their parents. We observe that a large number of children live with their parents till the age of 20 and then the number gradually decreases. The number of those who left home (blue edges) increase correspondingly. The different parts of the plot show the life courses of those that left home without getting married (blue edges), got married (green edges), got divorced (purple edges) and got married, left home and had children (orange edges).

Note also that all six covariate nodes at stage one in the sample tree are merged into one node at stage one in Fig. 4(b), implying that sex and religion do not affect the future life courses. However, as we discuss below, the tests for merging at the initial stages may suffer from low power: it would be interesting to examine this with other methods (Edwards and Ankinakatte, in press, Section 8), but we do not attempt this here.


                        Table 4
                         shows the goodness-of-fit, as assessed by the mean edge probability 
                           meP
                        , of the selected model obtained using the proposed method and using Beagle with different tuning parameter settings. We observe that for all three data sets the goodness-of-fit of the proposed method is comparable to that of Beagle, when the settings implicit in Browning (2006) (
                           m
                           =
                           1
                         and 
                           b
                           =
                           0
                        ) are used, and superior to Beagle, when the settings suggested in Browning and Browning (2007a) (
                           m
                           =
                           4
                         and 
                           b
                           =
                           0.2
                        ) are used. For all three data sets, setting 
                           m
                           =
                           1
                         and 
                           b
                           =
                           0
                         gives the best fit. The performance of AIC is observed to be better than that of BIC for all data sets, and as good as or better than that of Beagle.


                        Fig. 5
                         compares the four model selection procedures in terms of rate of convergence to the true model as the sample size increases for the three data sets. The AIC-based procedure and that in Beagle with tuning parameters 
                           m
                           =
                           1
                         and 
                           b
                           =
                           0
                         appear to have very similar convergence patterns. The BIC-based procedure is slightly slower, and Beagle with the settings suggested in Browning and Browning (2007a) (
                           m
                           =
                           4
                         and 
                           b
                           =
                           0.2
                        ) performs substantially worse than the alternatives, particularly at smaller sample sizes.

The computations were run under Redhat Fedora 10 Linux on a Intel i7 quad-core 2.93 GHz machine with 48 GB RAM. Beagle version 3.3.2 was used to perform the model selection algorithm of Browning and Browning (2007a,b). The remaining computations were performed in R. An R package (named gRapfa) implementing the methods described in this paper has been prepared by the authors and is available on CRAN.

@&#DISCUSSION AND CONCLUSION@&#

In this paper we have given a brief introduction to the use of APFA to model discrete longitudinal data, and adapted an algorithm proposed by Ron et al. (1998) and implemented (with modifications) by Browning and Browning (2007a), so that this seeks to minimize a penalized likelihood criterion, for example AIC or BIC. We also compared the algorithms by assessing the rate of convergence to the true model as 
                        N
                        →
                        ∞
                      as well as their goodness-of-fit. The algorithm proposed here using the AIC performs at least as well as that implemented in Beagle in both respects. The improvement over Beagle is substantial when the settings suggested in Browning and Browning (2007a) (
                        m
                        =
                        4
                      and 
                        b
                        =
                        0.2
                     ) are used, but when the settings implicit in Browning (2006) (
                        m
                        =
                        1
                      and 
                        b
                        =
                        0
                     ) are chosen the performance of the two algorithms was very similar.

It is not clear whether our modified algorithm is computationally more or less efficient than that implemented in Beagle: a detailed analysis of this would be beyond the scope of this paper. As we noted above, a property of the model selection algorithm is that tuning parameter settings that lead to simpler models also lead to faster computations. For some purposes, it may be preferred to sacrifice goodness-of-fit in order to obtain simpler models and in so doing improve the speed of the computations.

A further advantage of the likelihood-based approach is that is easily extended: for example, selection algorithms may consider steps in which more than two nodes are merged. As described in Edwards and Ankinakatte (in press, Section 10), first order Markov models correspond to APFA in which, for each stage, all incoming edges with the same symbol are merged. Thus a variant of the algorithm could be devised, based on as far as possible ‘same colour’ merging, that favourizes conceptually simpler models: this deserves further study.

The tests for state merging described above compare the distribution of the entire future given two nodes. When 
                        p
                      is large, the entire future follows a high dimensional discrete distribution and so the tests may be expected to have low power to detect short ranges differences. Methods to remedy this also deserve further study. For example, it may be advantageous to restrict the range over which the distributions are compared.

APFA comprise a rich and expressive family of models for discrete longitudinal data, and we believe that they may be useful to model complex data in areas outside of genomics, such as life course analysis. However for high-dimensional applications the graphs are often huge and difficult to interpret. Further work could help here. For example, it might be useful to derive the simplest (conventional) directed graphical model of which a given APFA is a submodel. The APFA could then be interpreted in terms of constraints to this graphical model.

@&#ACKNOWLEDGEMENTS@&#

The Duroc SNP data were kindly provided by the Danish Pig Research Centre and in particular Tage Ostersen.

We here describe and compare two measures of dissimilarity between two APFA, the Kullback–Leibler divergence (KLD) and the KL increment (KLI). In the present context the KLD (also called the information gain or relative entropy) is defined as 
                        
                           
                              KLD
                              
                                 (
                                 A
                                 ,
                                 B
                                 )
                              
                              =
                              
                                 
                                    ∑
                                 
                                 
                                    
                                       x
                                    
                                    ∈
                                    X
                                    
                                       (
                                       A
                                       )
                                    
                                 
                              
                              
                                 
                                    p
                                 
                                 
                                    ˆ
                                 
                              
                              
                                 (
                                 
                                    x
                                 
                                 )
                              
                              log
                              
                                 
                                    
                                       
                                          p
                                       
                                       
                                          ˆ
                                       
                                    
                                    
                                       (
                                       
                                          x
                                       
                                       )
                                    
                                 
                                 
                                    
                                       
                                          q
                                       
                                       
                                          ˆ
                                       
                                    
                                    
                                       (
                                       
                                          x
                                       
                                       )
                                    
                                 
                              
                              ,
                           
                        
                      where 
                        A
                      and 
                        B
                      are two APFA (defined on the same variable set), and 
                        
                           
                              p
                           
                           
                              ˆ
                           
                        
                        
                           (
                           
                              x
                           
                           )
                        
                      and 
                        
                           
                              q
                           
                           
                              ˆ
                           
                        
                        
                           (
                           
                              x
                           
                           )
                        
                      are the maximum-likelihood (ML) estimates of the probabilities of 
                        
                           x
                        
                      under 
                        A
                      and 
                        B
                     . In other words, it is the expectation of 
                        log
                        
                           
                              p
                           
                           
                              ˆ
                           
                        
                        
                           (
                           
                              x
                           
                           )
                        
                        /
                        
                           
                              q
                           
                           
                              ˆ
                           
                        
                        
                           (
                           
                              x
                           
                           )
                        
                      under 
                        
                           
                              A
                           
                           
                              ˆ
                           
                        
                     . This can be shown to non-negative, and equal to zero only when the distributions are identical. It is commonly used to compare non-nested models (Kent, 1986). It is not a true distance, since it is asymmetric in 
                        A
                      and 
                        B
                      and does not fulfil the triangle inequality.

As a measure of dissimilarity between two APFA, KLD has two drawbacks. Firstly, when the sample space 
                        X
                        
                           (
                           A
                           )
                        
                      is very large, as will be the case when the number of variables 
                        p
                      is large, the computation of KLD may be prohibitive. Secondly, when there exist 
                        
                           x
                        
                        ∈
                        X
                        
                           (
                           A
                           )
                        
                      with 
                        
                           
                              q
                           
                           
                              ˆ
                           
                        
                        
                           (
                           
                              x
                           
                           )
                        
                        =
                        0
                      and 
                        
                           
                              p
                           
                           
                              ˆ
                           
                        
                        
                           (
                           
                              x
                           
                           )
                        
                        ≠
                        0
                     , it is undefined. When 
                        B
                      is derived from 
                        A
                      by a series of state mergers this will not happen, but when comparing selected models with true models as in Section  4 it may occur quite frequently. To avoid this problem we use a modified definition of KLD, namely 
                        
                           
                              KLD
                              
                                 (
                                 A
                                 ,
                                 B
                                 )
                              
                              =
                              
                                 
                                    ∑
                                 
                                 
                                    
                                       x
                                    
                                    ∈
                                    X
                                    
                                       (
                                       A
                                       )
                                    
                                    ∩
                                    X
                                    
                                       (
                                       B
                                       )
                                    
                                 
                              
                              
                                 
                                    p
                                 
                                 
                                    ̃
                                 
                              
                              
                                 (
                                 
                                    x
                                 
                                 )
                              
                              log
                              
                                 
                                    
                                       
                                          p
                                       
                                       
                                          ̃
                                       
                                    
                                    
                                       (
                                       
                                          x
                                       
                                       )
                                    
                                 
                                 
                                    
                                       
                                          q
                                       
                                       
                                          ˆ
                                       
                                    
                                    
                                       (
                                       
                                          x
                                       
                                       )
                                    
                                 
                              
                              ,
                           
                        
                      where 
                        
                           
                              p
                           
                           
                              ̃
                           
                        
                        
                           (
                           
                              x
                           
                           )
                        
                      is 
                        
                           
                              p
                           
                           
                              ˆ
                           
                        
                        
                           (
                           
                              x
                           
                           )
                        
                      re-normalized to sum to unity over 
                        X
                        
                           (
                           A
                           )
                        
                        ∩
                        X
                        
                           (
                           B
                           )
                        
                     . This quantity compares the distributions over the intersection of the sample spaces 
                        X
                        
                           (
                           A
                           )
                        
                        ∩
                        X
                        
                           (
                           B
                           )
                        
                     .

As an alternative to KLD, Thollard et al. (2000) proposed to compare two PFA using a quantity they called the KL-increment, defined as 
                        
                           
                              KLI
                              
                                 (
                                 A
                                 ,
                                 B
                                 )
                              
                              =
                              KLD
                              
                                 (
                                 
                                    
                                       A
                                    
                                    
                                       
                                          max
                                       
                                    
                                 
                                 ,
                                 B
                                 )
                              
                              −
                              KLD
                              
                                 (
                                 
                                    
                                       A
                                    
                                    
                                       
                                          max
                                       
                                    
                                 
                                 ,
                                 A
                                 )
                              
                              ,
                           
                        
                      where 
                        
                           
                              A
                           
                           
                              
                                 max
                              
                           
                        
                      is the unrestricted model. To relate this to (7), note that under 
                        
                           
                              A
                           
                           
                              
                                 max
                              
                           
                        
                     , 
                        
                           
                              p
                           
                           
                              ˆ
                           
                        
                        
                           (
                           
                              x
                           
                           )
                        
                        =
                        n
                        
                           (
                           
                              x
                           
                           )
                        
                        /
                        N
                     , where 
                        n
                        
                           (
                           
                              x
                           
                           )
                        
                        =
                        
                           |
                           v
                           :
                           
                              
                                 
                                    x
                                 
                              
                              
                                 
                                    (
                                    v
                                    )
                                 
                              
                           
                           =
                           
                              x
                           
                           |
                        
                     . Hence 
                        
                           (A.1)
                           
                              KLD
                              
                                 (
                                 
                                    
                                       A
                                    
                                    
                                       
                                          max
                                       
                                    
                                 
                                 ,
                                 A
                                 )
                              
                              =
                              
                                 
                                    ∑
                                 
                                 
                                    
                                       x
                                    
                                    ∈
                                    X
                                    
                                       (
                                       
                                          
                                             A
                                          
                                          
                                             
                                                max
                                             
                                          
                                       
                                       )
                                    
                                 
                              
                              
                                 
                                    p
                                 
                                 
                                    ˆ
                                 
                              
                              
                                 (
                                 
                                    x
                                 
                                 )
                              
                              log
                              
                                 
                                    
                                       
                                          p
                                       
                                       
                                          ˆ
                                       
                                    
                                    
                                       (
                                       
                                          x
                                       
                                       )
                                    
                                 
                                 
                                    
                                       
                                          q
                                       
                                       
                                          ˆ
                                       
                                    
                                    
                                       (
                                       
                                          x
                                       
                                       )
                                    
                                 
                              
                              =
                              
                                 
                                    1
                                 
                                 
                                    N
                                 
                              
                              
                                 
                                    ∑
                                 
                                 
                                    
                                       x
                                    
                                    ∈
                                    X
                                    
                                       (
                                       
                                          
                                             A
                                          
                                          
                                             
                                                max
                                             
                                          
                                       
                                       )
                                    
                                 
                              
                              n
                              
                                 (
                                 
                                    x
                                 
                                 )
                              
                              log
                              
                                 
                                    
                                       
                                          p
                                       
                                       
                                          ˆ
                                       
                                    
                                    
                                       (
                                       
                                          x
                                       
                                       )
                                    
                                 
                                 
                                    
                                       
                                          q
                                       
                                       
                                          ˆ
                                       
                                    
                                    
                                       (
                                       
                                          x
                                       
                                       )
                                    
                                 
                              
                              =
                              
                                 
                                    1
                                 
                                 
                                    N
                                 
                              
                              
                                 [
                                 
                                    
                                       ℓ
                                    
                                    
                                       ˆ
                                    
                                 
                                 
                                    (
                                    
                                       
                                          A
                                       
                                       
                                          
                                             max
                                          
                                       
                                    
                                    )
                                 
                                 −
                                 
                                    
                                       ℓ
                                    
                                    
                                       ˆ
                                    
                                 
                                 
                                    (
                                    A
                                    )
                                 
                                 ]
                              
                              ,
                           
                        
                      and so 
                        
                           (A.2)
                           
                              KLI
                              
                                 (
                                 A
                                 ,
                                 B
                                 )
                              
                              =
                              
                                 
                                    1
                                 
                                 
                                    N
                                 
                              
                              
                                 [
                                 
                                    
                                       ℓ
                                    
                                    
                                       ˆ
                                    
                                 
                                 
                                    (
                                    
                                       
                                          A
                                       
                                       
                                          
                                             max
                                          
                                       
                                    
                                    )
                                 
                                 −
                                 
                                    
                                       ℓ
                                    
                                    
                                       ˆ
                                    
                                 
                                 
                                    (
                                    A
                                    )
                                 
                                 −
                                 
                                    
                                       ℓ
                                    
                                    
                                       ˆ
                                    
                                 
                                 
                                    (
                                    
                                       
                                          A
                                       
                                       
                                          
                                             max
                                          
                                       
                                    
                                    )
                                 
                                 +
                                 
                                    
                                       ℓ
                                    
                                    
                                       ˆ
                                    
                                 
                                 
                                    (
                                    B
                                    )
                                 
                                 ]
                              
                              =
                              
                                 
                                    1
                                 
                                 
                                    N
                                 
                              
                              
                                 [
                                 
                                    
                                       ℓ
                                    
                                    
                                       ˆ
                                    
                                 
                                 
                                    (
                                    B
                                    )
                                 
                                 −
                                 
                                    
                                       ℓ
                                    
                                    
                                       ˆ
                                    
                                 
                                 
                                    (
                                    A
                                    )
                                 
                                 ]
                              
                              ,
                           
                        
                      the scaled difference in log-likelihood between 
                        B
                      and 
                        A
                     . When 
                        B
                      is a submodel of 
                        A
                      this is equal to 
                        
                           
                              G
                           
                           
                              2
                           
                        
                        
                           (
                           A
                           ,
                           B
                           )
                        
                        /
                        2
                        N
                     , where 
                        
                           
                              G
                           
                           
                              2
                           
                        
                        
                           (
                           A
                           ,
                           B
                           )
                        
                      is the deviance test between 
                        A
                      and 
                        B
                     . To compare this with the KL-divergence, note that the KL-increment may be negative, and if the distributions are identical it will be zero. However the converse does not hold.


                     
                        
                           
                              
                              
                              
                                 
                                    List of symbols
                                 
                              
                              
                                 
                                    
                                       
                                          
                                             X
                                          
                                          =
                                          
                                             {
                                             
                                                
                                                   X
                                                
                                                
                                                   1
                                                
                                             
                                             ,
                                             
                                                
                                                   X
                                                
                                                
                                                   2
                                                
                                             
                                             ,
                                             …
                                             ,
                                             
                                                
                                                   X
                                                
                                                
                                                   p
                                                
                                             
                                             }
                                          
                                       
                                    
                                    Set of discrete variables
                                 
                                 
                                    
                                       
                                          V
                                       
                                    
                                    Set of vertices
                                 
                                 
                                    
                                       
                                          E
                                       
                                    
                                    Set of directed edges
                                 
                                 
                                    
                                       
                                          Σ
                                       
                                    
                                    Set of symbols
                                 
                                 
                                    
                                       
                                          s
                                          :
                                          E
                                          →
                                          V
                                       
                                    
                                    Map assigning to each edge its source node
                                 
                                 
                                    
                                       
                                          t
                                          :
                                          E
                                          →
                                          V
                                       
                                    
                                    Map assigning to each edge its target node
                                 
                                 
                                    
                                       
                                          σ
                                          :
                                          E
                                          →
                                          Σ
                                       
                                    
                                    Map assigning to each edge its symbol
                                 
                                 
                                    
                                       
                                          π
                                          :
                                          E
                                          →
                                          
                                             [
                                             0
                                             ,
                                             1
                                             ]
                                          
                                       
                                    
                                    Map assigning to each edge its probability
                                 
                                 
                                    
                                       
                                          A
                                       
                                    
                                    An APFA
                                 
                                 
                                    
                                       
                                          
                                             
                                                X
                                             
                                             
                                                i
                                             
                                          
                                          ∈
                                          
                                             
                                                X
                                             
                                             
                                                i
                                             
                                          
                                          
                                          i
                                          =
                                          1
                                          ,
                                          2
                                          ,
                                          …
                                          ,
                                          p
                                       
                                    
                                    
                                       
                                          
                                             
                                                X
                                             
                                             
                                                i
                                             
                                          
                                        is a discrete random variable with sample space 
                                          
                                             
                                                X
                                             
                                             
                                                i
                                             
                                          
                                       .
                                 
                                 
                                    
                                       
                                          X
                                          
                                             (
                                             A
                                             )
                                          
                                       
                                    
                                    The sample space of 
                                          
                                             X
                                          
                                        under 
                                          A
                                       .
                                 
                                 
                                    
                                       
                                          
                                             e
                                          
                                          =
                                          
                                             (
                                             
                                                
                                                   e
                                                
                                                
                                                   1
                                                
                                             
                                             ,
                                             
                                                
                                                   e
                                                
                                                
                                                   2
                                                
                                             
                                             ,
                                             …
                                             ,
                                             
                                                
                                                   e
                                                
                                                
                                                   p
                                                
                                             
                                             )
                                          
                                       
                                    
                                    A root to sink path in 
                                          A
                                       
                                    
                                 
                                 
                                    
                                       
                                          
                                             e
                                          
                                          =
                                          
                                             
                                                σ
                                             
                                             
                                                −
                                                1
                                             
                                          
                                          
                                             (
                                             
                                                x
                                             
                                             )
                                          
                                       
                                    
                                    The unique root to sink path corresponding to some 
                                          
                                             x
                                          
                                          ∈
                                          X
                                          
                                             (
                                             A
                                             )
                                          
                                       .
                                 
                                 
                                    
                                       
                                          π
                                          
                                             (
                                             e
                                             )
                                          
                                       
                                    
                                    Edge probability
                                 
                                 
                                    
                                       
                                          σ
                                          
                                             (
                                             e
                                             )
                                          
                                       
                                    
                                    Edge symbol
                                 
                                 
                                    
                                       
                                          σ
                                          
                                             (
                                             
                                                e
                                             
                                             )
                                          
                                          =
                                          
                                             (
                                             σ
                                             
                                                (
                                                
                                                   
                                                      e
                                                   
                                                   
                                                      1
                                                   
                                                
                                                )
                                             
                                             ,
                                             …
                                             ,
                                             σ
                                             
                                                (
                                                
                                                   
                                                      e
                                                   
                                                   
                                                      p
                                                   
                                                
                                                )
                                             
                                             )
                                          
                                       
                                    
                                    The vector of symbols associated with a root to sink path 
                                          
                                             e
                                          
                                       .
                                 
                                 
                                    
                                       
                                          n
                                          
                                             (
                                             e
                                             )
                                          
                                       
                                    
                                    Edge count
                                 
                                 
                                    
                                       
                                          n
                                          
                                             (
                                             v
                                             )
                                          
                                       
                                    
                                    Node count
                                 
                              
                           
                        
                     
                  

@&#REFERENCES@&#

