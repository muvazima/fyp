@&#MAIN-TITLE@&#Mathematical programming strategies for solving the minimum common string partition problem

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           We propose an ILP model for the minimum common string partition problem.


                        
                        
                           
                           This is the first ILP model for this problem in the literature.


                        
                        
                           
                           We could solve 11 out of 45 problem instances from the literature to optimality.


                        
                        
                           
                           For the remaining instances we were able to find new best-known solutions.


                        
                        
                           
                           We present a heuristic based on the ILP model, applicable to larger instances.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Minimum common string partition

Integer linear programming

Heuristic

@&#ABSTRACT@&#


               
               
                  The minimum common string partition problem is an NP-hard combinatorial optimization problem with applications in computational biology. In this work we propose the first integer linear programming model for solving this problem. Moreover, on the basis of the integer linear programming model we develop a deterministic 2-phase heuristic which is applicable to larger problem instances. The results show that provenly optimal solutions can be obtained for problem instances of small and medium size from the literature by solving the proposed integer linear programming model with CPLEX. Furthermore, new best-known solutions are obtained for all considered problem instances from the literature. Concerning the heuristic, we were able to show that it outperforms heuristic competitors from the related literature.
               
            

@&#INTRODUCTION@&#

Optimization problems related to strings—such as protein or DNA sequences—are very common in bioinformatics. Examples include string selection problems (Meneses et al., 2005; Mousavi et al., 2012; Pappalardo, 2013), the longest common subsequence problem and its variants (Hsu and Du, 1984; Smith and Waterman, 1981), alignment problems (Gusfield, 1997; Rajasekaran et al., 2001), and similarity search (Rajasekaran et al., 2001). These problems are often computationally very hard, if not even NP-hard (Garey and Johnson, 1979). In this work we deal with the minimum common string partition (MCSP) problem, which can be described as follows. We are given two related input strings that have to be partitioned each into the same collection of substrings. The size of the collection is subject to minimization. A formal description of the problem will be provided in Section 1.1. The MCSP problem has applications, for example, in the bioinformatics field. Chen et al. (2005) point out that the MCSP problem is closely related to the problem of sorting by reversals with duplicates, a key problem in genome rearrangement.

In this paper we introduce the first integer linear program (ILP) for solving the MCSP problem. An experimental evaluation on problem instances from the related literature shows that this ILP can be efficiently solved, for example, by using any version of IBM ILOG CPLEX. However, a study on new instances of larger size demonstrates the limitations of the model. Therefore, we additionally introduce a deterministic 2-phase heuristic which is strongly based on the original ILP. The experimental evaluation shows that the heuristic is applicable to larger problem instances than the original ILP. Moreover, it is shown that the heuristic outperforms competitor algorithms from the related literature on known problem instances.

The MCSP problem can technically be described as follows. Given are two input strings s
                        1 and s
                        2, both of length n over a finite alphabet Σ. These two strings are required to be related, which means that each letter appears the same number of times in each of them. Note that this definition implies that s
                        1 and s
                        2 have the same length. A valid solution to the MCSP problem is obtained by partitioning s
                        1 into a set P
                        1 of non-overlapping substrings, and s
                        2 into a set P
                        2 of non-overlapping substrings, such that P
                        1 = P
                        2. Moreover, we are interested in finding a valid solution such that |P
                        1| = |P
                        2| is minimal.

Consider the following example. Given are DNA sequences s
                        1 = AGACTG and s
                        2 = ACTAGG. Obviously, s
                        1 and s
                        2 are related because A and G appear twice in both input strings, while C and T appear once. A trivial valid solution can be obtained by partitioning both strings into substrings of length 1, that is, P
                        1 = P
                        2 = {A, A, C, T, G, G}. The objective function value of this solution is 6. However, the optimal solution, with objective function value 3, is P
                        1 = P
                        2 = {ACT, AG, G}.

@&#RELATED WORK@&#

The MCSP problem has been introduced by Chen et al. (2005) due to its relation to genome rearrangement. More specifically, it has applications in biological questions such as: May a given DNA string possibly be obtained by rearrangements of another DNA string? The general problem has been shown to be NP-hard even in very restrictive cases (Goldstein et al., 2005). Other papers concerning problem hardness consider, for example, the k-MCSP problem, which is the version of the MCSP problem in which each letter occurs at most k times in each input string. The 2-MCSP problem was shown to be APX-hard in Goldstein et al. (2005). When the input strings are over an alphabet of size c, the corresponding problem is denoted as MCSP
                           c
                        . Jiang et al. proved that the decision version of the MCSP
                           c
                         problem is NP-complete when c ≥ 2 (Jiang et al., 2012).

The MCSP has been considered quite extensively by researchers dealing with the approximability of the problem. Cormode and Muthukrishnan (2007), for example, proposed an O(lognlog*n)-approximation for the edit distance with moves problem, which is a more general case of the MCSP problem. Shapira and Storer (2002) extended on this result. Other approximation approaches for the MCSP problem have been proposed in Kolman and Waleń (2007). In this context, Chrobak et al. (2004) studied a simple greedy approach for the MCSP problem, showing that the approximation ratio concerning the 2-MCSP problem is 3, and for the 4-MCSP problem the approximation ratio is Ω(log(n)). In the case of the general MCSP problem, the approximation ratio is between Ω(n
                        0.43) and O(n
                        0.67), assuming that the input strings use an alphabet of size O(log(n)). Kaplan and Shafrir (2006) raised the lower bound to Ω(n
                        0.46). Kolman proposed a modified version of the simple greedy algorithm with an approximation ratio of O(k
                        2) for the k-MCSP (Kolman, 2005). Recently, Goldstein and Lewenstein proposed a greedy algorithm for the MCSP problem that runs in O(n) time (see Goldstein and Lewenstein, 2011). He (2007) introduced a greedy algorithm with the aim of obtaining better average results.


                        Damaschke (2008) was the first one to study the fixed-parameter tractability (FPT) of the problem. Later, Jiang et al. (2012) showed that both the k-MCSP and MCSP
                           c
                         problems admit FPT algorithms when k and c are constant parameters. Finally, Fu et al. (2011) and Ding and Fu (2013) proposed an 
                           
                              O
                              (
                              
                                 2
                                 
                                    n
                                    
                                       n
                                       
                                          O
                                          (
                                          1
                                          )
                                       
                                    
                                 
                              
                              )
                           
                         time algorithm for the general case and an O(n(logn)2) time algorithm applicable under some constraints.

To our knowledge, the only metaheuristic approaches that have been proposed in the related literature for the MCSP problem are (1) the 
                           
                              M
                              A
                              X
                           
                        -
                           
                              M
                              I
                              N
                           
                         Ant System by Ferdous and Sohel Rahman (2013); 2014) and (2) the probabilistic tree search algorithm by Blum et al. (2014). Both works applied their algorithm to a range of artificial and real DNA instances from Ferdous and Sohel Rahman (2013).

The remaining part of the paper is organized as follows. In Section 2, the ILP model for solving the MCSP is outlined. Moreover, an experimental evaluation is provided. The deterministic heuristic, together with an experimental evaluation, is described in Section 3. Finally, in Section 4 we provide conclusions and an outlook to future work.

In the following we present the first ILP model for solving the MCSP. For this, the definitions provided in the following are required. Note that an illustrative example is provided in Section 2.3.

Henceforth, a common block bi
                         of input strings s
                        1 and s
                        2 is denoted as a triple (ti, k1
                           i
                        , k2
                           i
                        ) where ti
                         is a string which can be found starting at position 1 ≤ k1
                           i
                         ≤ n in string s
                        1 and starting at position 1 ≤ k2
                           i
                         ≤ n in string s
                        2. Moreover, let B = {b
                        1, …, bm
                        } be the (ordered) set of all possible common blocks of s
                        1 and s
                        2.
                           1
                        
                        
                           1
                           The way in which B is ordered is of no importance.
                         Given the definition of B, any valid solution 
                           S
                         to the MCSP problem is a subset of B—that is, 
                           
                              S
                              ⊂
                              B
                           
                        —such that:

                           
                              1.
                              
                                 
                                    
                                       
                                          ∑
                                          
                                             
                                                b
                                                i
                                             
                                             ∈
                                             S
                                          
                                       
                                       
                                          |
                                          
                                             t
                                             i
                                          
                                          |
                                       
                                       =
                                       n
                                       ,
                                    
                                  that is, the sum of the length of the strings corresponding to the common blocks in 
                                    S
                                  is equal to the length of the input strings.

For any two common blocks 
                                    
                                       
                                          b
                                          i
                                       
                                       ,
                                       
                                          b
                                          j
                                       
                                       ∈
                                       S
                                    
                                  it holds that their corresponding strings overlap neither in s
                                 1 nor in s
                                 2.

Moreover, any (valid) partial solution 
                           
                              S
                              partial
                           
                         is a subset of B fulfilling the following conditions: (1) 
                           
                              
                                 ∑
                                 
                                    
                                       b
                                       i
                                    
                                    ∈
                                    
                                       S
                                       partial
                                    
                                 
                              
                              
                                 |
                                 
                                    t
                                    i
                                 
                                 |
                              
                              <
                              n
                           
                         and (2) for any two common blocks 
                           
                              
                                 b
                                 i
                              
                              ,
                              
                                 b
                                 j
                              
                              ∈
                              
                                 S
                                 partial
                              
                           
                         it holds that their corresponding strings overlap neither in s
                        1 nor in s
                        2. Note that any valid partial solution can be extended to be a valid solution. Furthermore, given a partial solution 
                           
                              
                                 S
                                 partial
                              
                              ,
                           
                         set 
                           
                              B
                              (
                              
                                 S
                                 partial
                              
                              )
                              ⊂
                              B
                           
                         denotes the set of common blocks that may be used in order to extend 
                           
                              S
                              partial
                           
                         such that the result is again a valid (partial) solution.

First, two binary m × n matrices M1 and M2 are defined as follows. In both matrices, row 1 ≤ i ≤ m corresponds to common block bi
                         ∈ B. Moreover, a column 1 ≤ j ≤ n corresponds to position j in input string s
                        1, respectively s
                        2. In general, the entries of matrix M1 are set to zero. However, in each row i, the positions that string ti
                         (of common block bi
                        ) occupies in input string s
                        1 are set to one. Correspondingly, the entries of matrix M2 are set to zero, apart from the fact that in each row i the positions occupied by string ti
                         in input string s
                        2 are set to one. Henceforth, the position (i, j) of a matrix M is denoted by M
                        
                           i, j
                        . Finally, we introduce for each common block bi
                         ∈ B a binary variable xi
                        . With these definitions we can express the MCSP in form of the following integer linear program, henceforth referred to by 
                           
                              
                                 I
                                 l
                                 p
                              
                              orig
                           
                        .

                           
                              (1)
                              
                                 
                                    
                                       
                                       
                                       
                                          
                                             min
                                             
                                                ∑
                                                
                                                   i
                                                   =
                                                   1
                                                
                                                m
                                             
                                             
                                                x
                                                i
                                             
                                          
                                       
                                    
                                 
                              
                           
                        
                        
                           
                              (2)
                              
                                 
                                    
                                       
                                       
                                       
                                          
                                             
                                                subject
                                                
                                                to
                                                :
                                             
                                          
                                       
                                    
                                    
                                       
                                       
                                       
                                          
                                             
                                                ∑
                                                
                                                   i
                                                   =
                                                   1
                                                
                                                m
                                             
                                             M
                                             
                                                1
                                                
                                                   i
                                                   ,
                                                   j
                                                
                                             
                                             ·
                                             
                                                x
                                                i
                                             
                                             =
                                             1
                                             
                                             for
                                             
                                             
                                             j
                                             =
                                             1
                                             ,
                                             …
                                             ,
                                             n
                                          
                                       
                                    
                                 
                              
                           
                        
                        
                           
                              (3)
                              
                                 
                                    
                                       
                                       
                                       
                                          
                                             
                                                ∑
                                                
                                                   i
                                                   =
                                                   1
                                                
                                                m
                                             
                                             M
                                             
                                                2
                                                
                                                   i
                                                   ,
                                                   j
                                                
                                             
                                             ·
                                             
                                                x
                                                i
                                             
                                             =
                                             1
                                             
                                             for
                                             
                                             
                                             j
                                             =
                                             1
                                             ,
                                             …
                                             ,
                                             n
                                          
                                       
                                    
                                    
                                       
                                       
                                       
                                          
                                             
                                             
                                                x
                                                i
                                             
                                             ∈
                                             
                                                {
                                                0
                                                ,
                                                1
                                                }
                                             
                                             
                                             for
                                             
                                             
                                             i
                                             =
                                             1
                                             ,
                                             …
                                             ,
                                             m
                                          
                                       
                                    
                                 
                              
                           
                        Hereby, the objective function minimizes the number of selected common blocks. Constraints (2) make sure that the strings corresponding to the selected common blocks do not overlap in input string s
                        1, while constraints (3) make sure that the strings corresponding to the selected common blocks do not overlap in input string s
                        2. Moreover, note that constraints (2) and (3) implicitly ensure that the sum of the length of the strings corresponding to the selected common blocks is equal to n.

As an example, consider the small problem instance from Section 1.1. The complete set of common blocks (B) as induced by input strings s
                        1 = AGACTG and s
                        2 = ACTAGG is as follows:

                           
                              
                                 
                                    
                                       
                                          
                                             B
                                             =
                                             
                                                {
                                                
                                                   
                                                      
                                                         
                                                            b
                                                            1
                                                         
                                                      
                                                      
                                                         =
                                                      
                                                      
                                                         
                                                            (
                                                            ACT
                                                            ,
                                                            3
                                                            ,
                                                            1
                                                            )
                                                         
                                                      
                                                   
                                                   
                                                      
                                                         
                                                            b
                                                            2
                                                         
                                                      
                                                      
                                                         =
                                                      
                                                      
                                                         
                                                            (
                                                            AG
                                                            ,
                                                            1
                                                            ,
                                                            4
                                                            )
                                                         
                                                      
                                                   
                                                   
                                                      
                                                         
                                                            b
                                                            3
                                                         
                                                      
                                                      
                                                         =
                                                      
                                                      
                                                         
                                                            (
                                                            AC
                                                            ,
                                                            3
                                                            ,
                                                            1
                                                            )
                                                         
                                                      
                                                   
                                                   
                                                      
                                                         
                                                            b
                                                            4
                                                         
                                                      
                                                      
                                                         =
                                                      
                                                      
                                                         
                                                            (
                                                            CT
                                                            ,
                                                            4
                                                            ,
                                                            2
                                                            )
                                                         
                                                      
                                                   
                                                   
                                                      
                                                         
                                                            b
                                                            5
                                                         
                                                      
                                                      
                                                         =
                                                      
                                                      
                                                         
                                                            (
                                                            A
                                                            ,
                                                            1
                                                            ,
                                                            1
                                                            )
                                                         
                                                      
                                                   
                                                   
                                                      
                                                         
                                                            b
                                                            6
                                                         
                                                      
                                                      
                                                         =
                                                      
                                                      
                                                         
                                                            (
                                                            A
                                                            ,
                                                            1
                                                            ,
                                                            4
                                                            )
                                                         
                                                      
                                                   
                                                   
                                                      
                                                         
                                                            b
                                                            7
                                                         
                                                      
                                                      
                                                         =
                                                      
                                                      
                                                         
                                                            (
                                                            A
                                                            ,
                                                            3
                                                            ,
                                                            1
                                                            )
                                                         
                                                      
                                                   
                                                   
                                                      
                                                         
                                                            b
                                                            8
                                                         
                                                      
                                                      
                                                         =
                                                      
                                                      
                                                         
                                                            (
                                                            A
                                                            ,
                                                            3
                                                            ,
                                                            4
                                                            )
                                                         
                                                      
                                                   
                                                   
                                                      
                                                         
                                                            b
                                                            9
                                                         
                                                      
                                                      
                                                         =
                                                      
                                                      
                                                         
                                                            (
                                                            C
                                                            ,
                                                            4
                                                            ,
                                                            2
                                                            )
                                                         
                                                      
                                                   
                                                   
                                                      
                                                         
                                                            b
                                                            10
                                                         
                                                      
                                                      
                                                         =
                                                      
                                                      
                                                         
                                                            (
                                                            T
                                                            ,
                                                            5
                                                            ,
                                                            3
                                                            )
                                                         
                                                      
                                                   
                                                   
                                                      
                                                         
                                                            b
                                                            11
                                                         
                                                      
                                                      
                                                         =
                                                      
                                                      
                                                         
                                                            (
                                                            G
                                                            ,
                                                            2
                                                            ,
                                                            5
                                                            )
                                                         
                                                      
                                                   
                                                   
                                                      
                                                         
                                                            b
                                                            12
                                                         
                                                      
                                                      
                                                         =
                                                      
                                                      
                                                         
                                                            (
                                                            G
                                                            ,
                                                            2
                                                            ,
                                                            6
                                                            )
                                                         
                                                      
                                                   
                                                   
                                                      
                                                         
                                                            b
                                                            13
                                                         
                                                      
                                                      
                                                         =
                                                      
                                                      
                                                         
                                                            (
                                                            G
                                                            ,
                                                            6
                                                            ,
                                                            5
                                                            )
                                                         
                                                      
                                                   
                                                   
                                                      
                                                         
                                                            b
                                                            14
                                                         
                                                      
                                                      
                                                         =
                                                      
                                                      
                                                         
                                                            (
                                                            G
                                                            ,
                                                            6
                                                            ,
                                                            6
                                                            )
                                                         
                                                      
                                                   
                                                
                                                }
                                             
                                          
                                       
                                    
                                 
                              
                           
                        Given set B, matrices M1 and M2 are the following ones:

                           
                              
                                 
                                    
                                       
                                          
                                             M
                                             1
                                             =
                                             
                                                (
                                                
                                                   
                                                      
                                                         0
                                                      
                                                      
                                                         0
                                                      
                                                      
                                                         1
                                                      
                                                      
                                                         1
                                                      
                                                      
                                                         1
                                                      
                                                      
                                                         0
                                                      
                                                   
                                                   
                                                      
                                                         1
                                                      
                                                      
                                                         1
                                                      
                                                      
                                                         0
                                                      
                                                      
                                                         0
                                                      
                                                      
                                                         0
                                                      
                                                      
                                                         0
                                                      
                                                   
                                                   
                                                      
                                                         0
                                                      
                                                      
                                                         0
                                                      
                                                      
                                                         1
                                                      
                                                      
                                                         1
                                                      
                                                      
                                                         0
                                                      
                                                      
                                                         0
                                                      
                                                   
                                                   
                                                      
                                                         0
                                                      
                                                      
                                                         0
                                                      
                                                      
                                                         0
                                                      
                                                      
                                                         1
                                                      
                                                      
                                                         1
                                                      
                                                      
                                                         0
                                                      
                                                   
                                                   
                                                      
                                                         1
                                                      
                                                      
                                                         0
                                                      
                                                      
                                                         0
                                                      
                                                      
                                                         0
                                                      
                                                      
                                                         0
                                                      
                                                      
                                                         0
                                                      
                                                   
                                                   
                                                      
                                                         1
                                                      
                                                      
                                                         0
                                                      
                                                      
                                                         0
                                                      
                                                      
                                                         0
                                                      
                                                      
                                                         0
                                                      
                                                      
                                                         0
                                                      
                                                   
                                                   
                                                      
                                                         0
                                                      
                                                      
                                                         0
                                                      
                                                      
                                                         1
                                                      
                                                      
                                                         0
                                                      
                                                      
                                                         0
                                                      
                                                      
                                                         0
                                                      
                                                   
                                                   
                                                      
                                                         0
                                                      
                                                      
                                                         0
                                                      
                                                      
                                                         1
                                                      
                                                      
                                                         0
                                                      
                                                      
                                                         0
                                                      
                                                      
                                                         0
                                                      
                                                   
                                                   
                                                      
                                                         0
                                                      
                                                      
                                                         0
                                                      
                                                      
                                                         0
                                                      
                                                      
                                                         1
                                                      
                                                      
                                                         0
                                                      
                                                      
                                                         0
                                                      
                                                   
                                                   
                                                      
                                                         0
                                                      
                                                      
                                                         0
                                                      
                                                      
                                                         0
                                                      
                                                      
                                                         0
                                                      
                                                      
                                                         1
                                                      
                                                      
                                                         0
                                                      
                                                   
                                                   
                                                      
                                                         0
                                                      
                                                      
                                                         1
                                                      
                                                      
                                                         0
                                                      
                                                      
                                                         0
                                                      
                                                      
                                                         0
                                                      
                                                      
                                                         0
                                                      
                                                   
                                                   
                                                      
                                                         0
                                                      
                                                      
                                                         1
                                                      
                                                      
                                                         0
                                                      
                                                      
                                                         0
                                                      
                                                      
                                                         0
                                                      
                                                      
                                                         0
                                                      
                                                   
                                                   
                                                      
                                                         0
                                                      
                                                      
                                                         0
                                                      
                                                      
                                                         0
                                                      
                                                      
                                                         0
                                                      
                                                      
                                                         0
                                                      
                                                      
                                                         1
                                                      
                                                   
                                                   
                                                      
                                                         0
                                                      
                                                      
                                                         0
                                                      
                                                      
                                                         0
                                                      
                                                      
                                                         0
                                                      
                                                      
                                                         0
                                                      
                                                      
                                                         1
                                                      
                                                   
                                                
                                                )
                                             
                                          
                                       
                                       
                                       
                                          
                                             
                                             M
                                             2
                                             =
                                             
                                                (
                                                
                                                   
                                                      
                                                         1
                                                      
                                                      
                                                         1
                                                      
                                                      
                                                         1
                                                      
                                                      
                                                         0
                                                      
                                                      
                                                         0
                                                      
                                                      
                                                         0
                                                      
                                                   
                                                   
                                                      
                                                         0
                                                      
                                                      
                                                         0
                                                      
                                                      
                                                         0
                                                      
                                                      
                                                         1
                                                      
                                                      
                                                         1
                                                      
                                                      
                                                         0
                                                      
                                                   
                                                   
                                                      
                                                         1
                                                      
                                                      
                                                         1
                                                      
                                                      
                                                         0
                                                      
                                                      
                                                         0
                                                      
                                                      
                                                         0
                                                      
                                                      
                                                         0
                                                      
                                                   
                                                   
                                                      
                                                         0
                                                      
                                                      
                                                         1
                                                      
                                                      
                                                         1
                                                      
                                                      
                                                         0
                                                      
                                                      
                                                         0
                                                      
                                                      
                                                         0
                                                      
                                                   
                                                   
                                                      
                                                         1
                                                      
                                                      
                                                         0
                                                      
                                                      
                                                         0
                                                      
                                                      
                                                         0
                                                      
                                                      
                                                         0
                                                      
                                                      
                                                         0
                                                      
                                                   
                                                   
                                                      
                                                         0
                                                      
                                                      
                                                         0
                                                      
                                                      
                                                         0
                                                      
                                                      
                                                         1
                                                      
                                                      
                                                         0
                                                      
                                                      
                                                         0
                                                      
                                                   
                                                   
                                                      
                                                         1
                                                      
                                                      
                                                         0
                                                      
                                                      
                                                         0
                                                      
                                                      
                                                         0
                                                      
                                                      
                                                         0
                                                      
                                                      
                                                         0
                                                      
                                                   
                                                   
                                                      
                                                         0
                                                      
                                                      
                                                         0
                                                      
                                                      
                                                         0
                                                      
                                                      
                                                         1
                                                      
                                                      
                                                         0
                                                      
                                                      
                                                         0
                                                      
                                                   
                                                   
                                                      
                                                         0
                                                      
                                                      
                                                         1
                                                      
                                                      
                                                         0
                                                      
                                                      
                                                         0
                                                      
                                                      
                                                         0
                                                      
                                                      
                                                         0
                                                      
                                                   
                                                   
                                                      
                                                         0
                                                      
                                                      
                                                         0
                                                      
                                                      
                                                         1
                                                      
                                                      
                                                         0
                                                      
                                                      
                                                         0
                                                      
                                                      
                                                         0
                                                      
                                                   
                                                   
                                                      
                                                         0
                                                      
                                                      
                                                         0
                                                      
                                                      
                                                         0
                                                      
                                                      
                                                         0
                                                      
                                                      
                                                         1
                                                      
                                                      
                                                         0
                                                      
                                                   
                                                   
                                                      
                                                         0
                                                      
                                                      
                                                         0
                                                      
                                                      
                                                         0
                                                      
                                                      
                                                         0
                                                      
                                                      
                                                         0
                                                      
                                                      
                                                         1
                                                      
                                                   
                                                   
                                                      
                                                         0
                                                      
                                                      
                                                         0
                                                      
                                                      
                                                         0
                                                      
                                                      
                                                         0
                                                      
                                                      
                                                         1
                                                      
                                                      
                                                         0
                                                      
                                                   
                                                   
                                                      
                                                         0
                                                      
                                                      
                                                         0
                                                      
                                                      
                                                         0
                                                      
                                                      
                                                         0
                                                      
                                                      
                                                         0
                                                      
                                                      
                                                         1
                                                      
                                                   
                                                
                                                )
                                             
                                          
                                       
                                    
                                 
                              
                           
                        
                     

The optimal solution to this instance is 
                           
                              S
                              =
                              {
                              
                                 b
                                 1
                              
                              ,
                              
                                 b
                                 2
                              
                              ,
                              
                                 b
                                 14
                              
                              }
                           
                        . It can easily be verified that this solution respects constraints (2)–(4) of the ILP model.

In the following we will provide an experimental evaluation of model 
                           
                              
                                 I
                                 l
                                 p
                              
                              orig
                           
                        . The model was implemented in ANSI C + + using GCC 4.7.3 for compiling the software. Moreover, the model was solved with IBM ILOG CPLEX V12.1. The experimental results that we outline in the following were obtained on a cluster of PCs with “Intel(R) Xeon(R) CPU 5130” CPUs of 4 nuclei of 2000 megahertz and 4 gigabytes of RAM.

For testing model 
                              
                                 
                                    I
                                    l
                                    p
                                 
                                 orig
                              
                            we chose the same set of benchmark instances that was used by in Ferdous and Sohel Rahman (2013) for the experimental evaluation of their ant colony optimization approach. This set contains, in total, 30 artificial instances and 15 real-life instances consisting of DNA sequences. Remember, in this context, that each problem instance consists of two related input strings. Moreover, the benchmark set consists of four subsets of instances. The first subset (henceforth labeled Group1) consists of 10 artificial instances in which the input strings are maximally of length 200. The second set (Group2) consists of 10 artificial instances with input string lengths between 201 and 400. In the third set (Group3) the input strings of the 10 artificial instances have lengths between 401 and 600. Finally, the fourth set (Real) consists of 15 real-life instances of various lengths from [200, 600].

@&#RESULTS@&#

The results are shown in Tables 1
                           
                           
                           
                           , in terms of one table per instance set. The structure of these tables is as follows. The first column provides the instance identifiers. The second column contains the results of the greedy algorithm from Chrobak et al. (2004) (results were taken from Ferdous and Sohel Rahman (2013)). The third column provides the value of the best solution found in four independent runs per problem instance (with a CPU time limit of 7200 seconds per run) by the Aco approach by Ferdous and Sohel Rahman (2013); 2014).
                              2
                           
                           
                              2
                              In this context, note that the experiments for Aco were performed on a computer with an “Intel(R) 2 Quad” CPU with 2.33 gigahertz and 4 gigabytes of RAM.
                            The fourth column provides the value of the best solution found in 10 independent runs per problem instance (with a CPU time limit of 1000 seconds per run) by the probabilistic tree search algorithm (henceforth labeled TreSea) by Blum et al. (2014). TreSea was run on the same machines as the ones used for the current work. Finally, the last four table columns are dedicated to the presentation of the results provided by solving model 
                              
                                 
                                    I
                                    l
                                    p
                                 
                                 orig
                              
                           . The first one of these columns provides the value of the best solution found within 3600 CPU seconds. In case the optimality of the corresponding solution was proved by CPLEX, the value is marked by an asterisk. The second column dedicated to 
                              
                                 
                                    I
                                    l
                                    p
                                 
                                 orig
                              
                            provides the computation time (in seconds). In case of having solved the corresponding problem to optimality, this column only displays one value indicating the time needed by CPLEX to solve the problem. Otherwise, this column provides two values in the form X/Y, where X corresponds to the time at which CPLEX was able to find the first valid solution, and Y corresponds to the time at which CPLEX found the best solution within 3600 CPU seconds. The third one of the columns dedicated to 
                              
                                 
                                    I
                                    l
                                    p
                                 
                                 orig
                              
                            shows the optimality gap, which refers to the gap between the value of the best valid solution and the current lower bound at the time of stopping a run. Finally, the last column indicates the size of set B, that is, the size of the complete set of common blocks. Note that this value corresponds to the number of variables used by 
                              
                                 
                                    I
                                    l
                                    p
                                 
                                 orig
                              
                           . The best result (among all algorithms) for each problem instance is marked by a grey background, and the last row of each table provides averages over the whole table.


The following conclusions can be drawn when analyzing the results. First, CPLEX is able to solve all instances of Group1 to optimality. This is done, on average, in about 13 seconds. Moreover, none of the existing algorithms was able to find any of these optimal solutions. Second, CPLEX was also able to find new best-known solutions for all remaining 35 problem instances, even though it was not able to prove optimality within 3600 CPU seconds, which is indicated by the positive optimality gaps. An exception is instance 1 of set Real which also could be solved to optimality. Third, the improvements over the competitor algorithms obtained by solving 
                              
                                 
                                    I
                                    l
                                    p
                                 
                                 orig
                              
                            with CPLEX are remarkable. In particular, the average improvement (in percent) over TreSea, the best competitor from the literature, is 4.8 percent in the case of Group1, 9.2 percent in the case of Group2, 9.7 percent in the case of Group3, and 9.9 percent in the case of Real.

In order to study the limits of solving 
                              
                                 
                                    I
                                    l
                                    p
                                 
                                 orig
                              
                            with CPLEX we randomly generated larger DNA instances. In particular, we generated one random instance for each input string size from {800, 1000, 1200, 1400, 1600, 1800, 2000}. CPLEX was stopped when at least 3600 CPU seconds had passed and at least one feasible solution had been found. However, if after 12 CPU hours still no feasible solution was found, the execution was stopped as well. The results are shown in Table 5
                           . The first column of this table provides the length of the corresponding random instance. The remaining four columns contain the same information as already explained in the context of Tables 1–4, just that column Time (seconds) simply provides the computation time (in seconds) at which the best solution was found. Analyzing the results we can observe that the application of CPLEX to 
                              
                                 
                                    I
                                    l
                                    p
                                 
                                 orig
                              
                            quickly becomes unpractical with growing input string size. For example, the first valid solution for the instance with string length 1600 was found after 10987 seconds. Concerning the largest problem instance, no valid solution was found within 12 CPU hours.

As shown at the end of the previous section, the application of CPLEX to 
                        
                           
                              I
                              l
                              p
                           
                           orig
                        
                      reaches its limits starting from an input string size of about 1200. However, if it were possible to considerably reduce the size of the set of common blocks (B), mathematical programming might still be an option to obtain good (heuristic) solutions. With this idea in mind we studied the distribution of the lengths of the strings of the common blocks in B for all 45 problem instances. This distribution is shown—averaged over the instances of each of the four instance sets—in Fig. 1
                     . Analyzing these distributions it can be observed, first of all, that the distribution does not seem to depend on instance size.
                        3
                     
                     
                        3
                        Most probably the distribution would change in some way when changing the size of the alphabet.
                      However, the important aspect to observe is that around 75 percent of all the common blocks contain strings of length 1. Moreover, only a very small portion of these common blocks will form part of an optimal solution. In comparison, it is reasonable to assume that a much larger percentage of the blocks corresponding to large strings will form part of an optimal solution. These observations gave rise to the heuristic which is outlined in the following.

The proposed heuristic works in two phases. In the first phase, a subset of B (the complete set of common blocks) must be chosen. For this purpose, let B
                        ≥ l
                         (where l ≥ 1) denote the subset of B that contains all common blocks bi
                         from B with |ti
                        | ≥ l, that is, all blocks whose corresponding string is longer or equal than l. Note, in this context, that B
                        ≥ 1 = B. Moreover, note that |B
                        ≥ 1| ≥ |B
                        ≥ 2| ≥ |B
                        ≥ 3| ≥ ⋅⋅⋅ ≥ |B
                        ≥ ∞|. Let l
                        max be the smallest value for l such that 
                           
                              
                                 |
                              
                              
                                 B
                                 
                                    ≥
                                    
                                       l
                                       max
                                    
                                 
                              
                              
                                 |
                                 >
                                 0
                              
                           
                        . Observe that 
                           
                              B
                              
                                 ≥
                                 
                                    l
                                    max
                                 
                              
                           
                         only contains the common blocks with the longest strings. Having chosen a specific value for l from [2, l
                        max], the following ILP, henceforth referred to as 
                           
                              
                                 
                                    I
                                    l
                                    p
                                 
                                 
                                    ph
                                    1
                                 
                              
                              ,
                           
                         may be solved.

                           
                              (4)
                              
                                 
                                    
                                       
                                       
                                       
                                          
                                             min
                                             
                                                ∑
                                                
                                                   
                                                      b
                                                      i
                                                   
                                                   ∈
                                                   
                                                      B
                                                      
                                                         ≥
                                                         l
                                                      
                                                   
                                                
                                             
                                             
                                                x
                                                i
                                             
                                             +
                                             y
                                          
                                       
                                    
                                 
                              
                           
                        
                        
                           
                              (5)
                              
                                 
                                    
                                       
                                       
                                       
                                          
                                             
                                                subject
                                                
                                                to
                                                :
                                             
                                          
                                       
                                    
                                    
                                       
                                       
                                       
                                          
                                             
                                                ∑
                                                
                                                   
                                                      b
                                                      i
                                                   
                                                   ∈
                                                   
                                                      B
                                                      
                                                         ≥
                                                         l
                                                      
                                                   
                                                
                                             
                                             M
                                             
                                                1
                                                
                                                   i
                                                   ,
                                                   j
                                                
                                             
                                             ·
                                             
                                                x
                                                i
                                             
                                             ≤
                                             1
                                             
                                             for
                                             
                                             j
                                             =
                                             1
                                             ,
                                             …
                                             ,
                                             n
                                          
                                       
                                    
                                 
                              
                           
                        
                        
                           
                              (6)
                              
                                 
                                    
                                       
                                       
                                       
                                          
                                             
                                                ∑
                                                
                                                   
                                                      b
                                                      i
                                                   
                                                   ∈
                                                   
                                                      B
                                                      
                                                         ≥
                                                         l
                                                      
                                                   
                                                
                                             
                                             M
                                             
                                                2
                                                
                                                   i
                                                   ,
                                                   j
                                                
                                             
                                             ·
                                             
                                                x
                                                i
                                             
                                             ≤
                                             1
                                             
                                             for
                                             
                                             j
                                             =
                                             1
                                             ,
                                             …
                                             ,
                                             n
                                          
                                       
                                    
                                 
                              
                           
                        
                        
                           
                              (7)
                              
                                 
                                    
                                       
                                       
                                       
                                          
                                             
                                                ∑
                                                
                                                   
                                                      b
                                                      i
                                                   
                                                   ∈
                                                   
                                                      B
                                                      
                                                         ≥
                                                         l
                                                      
                                                   
                                                
                                             
                                             
                                                |
                                                
                                                   t
                                                   i
                                                
                                                |
                                             
                                             ·
                                             
                                                x
                                                i
                                             
                                             =
                                             n
                                             −
                                             y
                                          
                                       
                                    
                                    
                                       
                                       
                                       
                                          
                                             
                                             
                                                x
                                                i
                                             
                                             ∈
                                             
                                                {
                                                0
                                                ,
                                                1
                                                }
                                             
                                             
                                             for
                                             
                                             
                                                b
                                                i
                                             
                                             ∈
                                             
                                                B
                                                
                                                   ≥
                                                   l
                                                
                                             
                                          
                                       
                                    
                                    
                                       
                                       
                                       
                                          
                                             
                                             y
                                             ∈
                                             {
                                             0
                                             ,
                                             1
                                             ,
                                             …
                                             ,
                                             n
                                             }
                                          
                                       
                                    
                                 
                              
                           
                        
                     


                        
                           
                              
                                 I
                                 l
                                 p
                              
                              
                                 ph
                                 1
                              
                           
                         is based on a binary variable xi
                         for each common block bi
                         ∈ B
                        ≥ l
                        , and an additional variable y ∈ {0, 1, …, n} that counts the number of positions that are not covered by any chosen block. Moreover, matrices M1 and M2 are the same as the ones introduced in Section 2.2, that is, they are defined over the whole set B. The objective function minimizes the number of chosen blocks plus the number of uncovered positions. The constraints (5)–(6) are the same as in 
                           
                              
                                 I
                                 l
                                 p
                              
                              orig
                           
                         (see Section 2.2), apart from the fact that all equality symbols are replaced by the ≤ -symbol. Moreover, in constraints (7) variable y is added to the right-hand side in order to account for the number of uncovered positions. In short, the idea of 
                           
                              
                                 I
                                 l
                                 p
                              
                              
                                 ph
                                 1
                              
                           
                         is to produce a partial solution for the original MCSP that covers as much as possible of both input strings, while choosing as few common blocks as possible.

Solving 
                           
                              
                                 I
                                 l
                                 p
                              
                              
                                 ph
                                 1
                              
                           
                         will henceforth be referred to as phase 1 of the proposed heuristic. Let us denote by 
                           
                              S
                              
                                 p
                                 h
                                 1
                              
                           
                         the solution provided by phase 1.
                           4
                        
                        
                           4
                           Remember that solutions are subsets of B.
                         Due to the constraints of 
                           
                              
                                 I
                                 l
                                 p
                              
                              
                                 ph
                                 1
                              
                           
                         this solution is a valid partial solution to the original MCSP problem. The idea of the second phase is then to produce the best complete solution possible that contains 
                           
                              S
                              
                                 p
                                 h
                                 1
                              
                           
                        . This is done by solving the following ILP, henceforth referred to as 
                           
                              
                                 I
                                 l
                                 p
                              
                              
                                 ph
                                 2
                              
                           
                        .

                           
                              (8)
                              
                                 
                                    
                                       
                                       
                                       
                                          
                                             min
                                             
                                                ∑
                                                
                                                   
                                                      b
                                                      i
                                                   
                                                   ∈
                                                   
                                                      B
                                                      
                                                         p
                                                         h
                                                         2
                                                      
                                                   
                                                   ∪
                                                   
                                                      S
                                                      
                                                         p
                                                         h
                                                         1
                                                      
                                                   
                                                
                                             
                                             
                                                x
                                                i
                                             
                                          
                                       
                                    
                                 
                              
                           
                        
                        
                           
                              (9)
                              
                                 
                                    
                                       
                                       
                                       
                                          
                                             
                                                subject
                                                
                                                to
                                                :
                                             
                                          
                                       
                                    
                                    
                                       
                                       
                                       
                                          
                                             
                                                ∑
                                                
                                                   
                                                      b
                                                      i
                                                   
                                                   ∈
                                                   
                                                      B
                                                      
                                                         p
                                                         h
                                                         2
                                                      
                                                   
                                                   ∪
                                                   
                                                      S
                                                      
                                                         p
                                                         h
                                                         1
                                                      
                                                   
                                                
                                             
                                             M
                                             
                                                1
                                                
                                                   i
                                                   ,
                                                   j
                                                
                                             
                                             ·
                                             
                                                x
                                                i
                                             
                                             =
                                             1
                                             
                                             for
                                             
                                             j
                                             =
                                             1
                                             ,
                                             …
                                             ,
                                             n
                                          
                                       
                                    
                                 
                              
                           
                        
                        
                           
                              (10)
                              
                                 
                                    
                                       
                                       
                                       
                                          
                                             
                                                ∑
                                                
                                                   
                                                      b
                                                      i
                                                   
                                                   ∈
                                                   
                                                      B
                                                      
                                                         p
                                                         h
                                                         2
                                                      
                                                   
                                                   ∪
                                                   
                                                      S
                                                      
                                                         p
                                                         h
                                                         1
                                                      
                                                   
                                                
                                             
                                             M
                                             
                                                2
                                                
                                                   i
                                                   ,
                                                   j
                                                
                                             
                                             ·
                                             
                                                x
                                                i
                                             
                                             =
                                             1
                                             
                                             for
                                             
                                             j
                                             =
                                             1
                                             ,
                                             …
                                             ,
                                             n
                                          
                                       
                                    
                                 
                              
                           
                        
                        
                           
                              (11)
                              
                                 
                                    
                                       
                                       
                                       
                                          
                                             
                                             
                                                x
                                                i
                                             
                                             =
                                             1
                                             
                                             for
                                             
                                             
                                                b
                                                i
                                             
                                             ∈
                                             
                                                S
                                                
                                                   p
                                                   h
                                                   1
                                                
                                             
                                          
                                       
                                    
                                    
                                       
                                       
                                       
                                          
                                             
                                             
                                                x
                                                i
                                             
                                             ∈
                                             
                                                {
                                                0
                                                ,
                                                1
                                                }
                                             
                                             
                                             for
                                             
                                             
                                                b
                                                i
                                             
                                             ∈
                                             
                                                B
                                                
                                                   p
                                                   h
                                                   2
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           
                        
                     

Hereby, 
                           
                              
                                 B
                                 
                                    p
                                    h
                                    2
                                 
                              
                              :
                              =
                              B
                              
                                 (
                                 
                                    S
                                    
                                       p
                                       h
                                       1
                                    
                                 
                                 )
                              
                              ⊂
                              B
                           
                         is the set of common blocks that may be added to 
                           
                              S
                              
                                 p
                                 h
                                 1
                              
                           
                         without violating any constraints.
                           5
                        
                        
                           5
                           See Section 2.1 for the definition of B( · ).
                         Note that model 
                           
                              
                                 I
                                 l
                                 p
                              
                              
                                 ph
                                 2
                              
                           
                         is the same as model 
                           
                              
                                 
                                    I
                                    l
                                    p
                                 
                                 orig
                              
                              ,
                           
                        just that 
                           
                              
                                 I
                                 l
                                 p
                              
                              
                                 ph
                                 2
                              
                           
                         only considers common blocks from B
                        
                           ph2 and that it forces any solution to contain all common blocks from 
                           
                              S
                              
                                 p
                                 h
                                 1
                              
                           
                        ; see constraints (11). This completes the description of the heuristic.

Just like model 
                           
                              
                                 
                                    I
                                    l
                                    p
                                 
                                 orig
                              
                              ,
                           
                         the heuristic was implemented in ANSI C + + using GCC 4.7.3 for compiling the software. The two ILP models were solved with IBM ILOG CPLEX V12.1, and the same machines as for the experimental evaluation of 
                           
                              
                                 I
                                 l
                                 p
                              
                              orig
                           
                         were used for running the experiments.

As mentioned before, the heuristic may be applied for any value of l from the interval [2, l
                        max]. In fact, we applied the heuristic to each of the 45 problem instances from sets Group1, Group2, Group3, and Real, with all possible values for l. In order not to spend too much computation time the following stopping criterion was used for each call to CPLEX concerning any of the two involved ILP models. CPLEX was stopped (1) in case a provenly optimal solution was obtained or (2) in case at least 50 CPU seconds were spent and the first valid solution was obtained. The overall result of the heuristic for a specific problem instance is the value of the best solution found for any value of l. Moreover, as computation time we provide the sum of the computation times spend for all applications for different values of l.

The results are shown in Table 6
                        , which contains one subtable for each of the four instance sets. Each subtable has the following format. The first column provides the instance identifier. The second column contains the value of the best heuristic solution found in the literature. Finally, the last two table columns present the results of our heuristic. The first one of these columns contains the value of the best solution generated by the heuristic, while the second column provides the total computation time (in seconds). The last row of each subtable presents averages over the whole subtable. Moreover, the best result for each instance is indicated in bold font, and those cases in which the result of applying CPLEX to 
                           
                              
                                 I
                                 l
                                 p
                              
                              orig
                           
                         could be matched are marked by a “ + ” symbol.

The results allow to make the following observations. First, our heuristic is able to improve the best-known heuristic result from the literature in all 45 cases. Overall, the heuristic improves by 6.5 percent (on average) over the best known heuristic results from the literature. On the downside, the heuristic is only able to match the results of applying CPLEX to model 
                           
                              
                                 I
                                 l
                                 p
                              
                              orig
                           
                         in 15 out of 45 cases. However, this changes with growing instance size, as we will show later in Section 3.4.

With the aim of gaining more insight into the behavior of the heuristic with respect to the choice of a value for parameter l, the following information is presented in graphical form in Fig. 2
                        . Two graphics are shown for each of the four chosen problem instances. More precisely, we chose to present information for the largest problem instances from each of the four instance sets (see subfigures (a) to (d) of Fig. 2). The left graphic of each subfigure has to be read as follows. The x-axis ranges over the possible values for l, while the y-axis indicates the size of the set of common blocks that is used for solving models 
                           
                              
                                 I
                                 l
                                 p
                              
                              
                                 ph
                                 1
                              
                           
                         and 
                           
                              
                                 I
                                 l
                                 p
                              
                              
                                 ph
                                 2
                              
                           
                        . The graphic shows two curves. The one with a black line concerns solving model 
                           
                              
                                 I
                                 l
                                 p
                              
                              
                                 ph
                                 1
                              
                           
                         in phase 1 of the heuristic, while the other one (shown by means of a grey line) concerns solving model 
                           
                              
                                 I
                                 l
                                 p
                              
                              
                                 ph
                                 2
                              
                           
                         in phase two of the heuristic. The dots indicate for each value of l the size of the set of common blocks used by the corresponding models. Moreover, in case the interior of a dot is light-grey (yellow in the online version) this means that the corresponding model could not be solved to optimality within 50 CPU seconds, while a black interior of a dot indicates that the corresponding model was solved to optimality. Finally, the bars in the background of the graphic present the values of the solutions that were generated with different values of l. The graphics on the right hand side present the corresponding computation times required by solving the different models.

The following observations can be made. When the value of l is close to the lower or the upper bound—that is, either close to 2 or close to l
                        max—one of the two involved sets of common blocks is quite large, and, therefore, the computation time needed for solving the corresponding ILP may be large, in particular when the input instance is rather large. On the contrary, for intermediate values of l, the size of both involved sets of common blocks is moderate, and, therefore, CPLEX is rather fast in providing solutions, even if the optimal solution is not found (or cannot be proven) within 50 CPU seconds. Moreover, the value of l with which the best results are obtained seems difficult to be predicted. While rather small values of l are required for the first three of the chosen problem instances, an intermediate value of l is best in case of instance 13 of Real.

With the aim of reducing the required computation time as much as possible, the heuristic was applied with an intermediate value of l = 5 to all problem instances from the set of larger instances described at the end of Section 2.4.2. The results are shown in Table 7
                        . The first table column provides the length of the input strings of the corresponding random instance. The second column indicates the result of applying CPLEX with a computation time limit of 3600 CPU seconds to 
                           
                              
                                 I
                                 l
                                 p
                              
                              orig
                           
                        .
                           6
                        
                        
                           6
                           Remember that the results of applying CPLEX to 
                                 
                                    
                                       I
                                       l
                                       p
                                    
                                    orig
                                 
                               were described in detail in Section 2.4.2.
                         The remaining five columns contain the results of heuristic. The first one of these columns provides the value of the solution generated by the heuristic, while the second column shows the corresponding computation time. The next two columns provide the size of the sets of common blocks used in phase 1, respectively phase 2, of the heuristic. Finally, the last column gives information about the number of common blocks considered by the heuristic in comparison to the size of the complete set of common blocks (which can be found in Table 5). In particular, summing the common block set sizes from phases 1 and 2 of the heuristic and comparing this number with the size of the complete set of common blocks, the percentage of the common blocks considered by the heuristic can easily be calculated. This percentage is given in the last table column. As before, the best result per table row is indicated by a grey background.

The following observations can be made. First, apart from the smallest problem instance, the heuristic outperforms the application of CPLEX to model 
                           
                              
                                 I
                                 l
                                 p
                              
                              orig
                           
                        . Moreover, this is achieved in a fraction of the time needed by CPLEX. Finally, it is reasonable to assume that the success of the heuristic is due to an important reduction of the common blocks that are considered (see last table column). In general, the heuristic only considers between 2.5 percent and 6.1 percent of all common blocks. This is why the computation times are rather low in comparison to CPLEX.

@&#CONCLUSIONS AND FUTURE WORK@&#

In this paper we considered a problem with applications in bioinformatics known as the minimum common string partition problem. First, we introduced an integer linear programming model for this problem. By applying the IBM ILOG CPLEX solver to this model we were able to improve all best-known solutions from the literature for a problem instance set consisting of 45 instances of different sizes. The smallest ones of these problem instances could even be solved to optimality in very short computation time. The second contribution of the paper concerned a 2-phase heuristic which is strongly based on the developed integer linear programming model. The results have shown that, first, the heuristic outperforms competitor algorithms from the literature, and second, that it is applicable to larger problem instances.

Concerning future work, we aim at studying the incorporation of mathematical programming strategies based on the introduced integer linear programming model into metaheuristic techniques such as GRASP and iterated greedy algorithms. Moreover, we aim at identifying other string-based optimization problems for which a 2-phase strategy such as the one introduced in this paper might work well.

@&#ACKNOWLEDGEMENTS@&#

C. Blum was supported by project TIN2012-37930 of the Spanish Government. In addition, support is acknowledged from Ikerbasque, Basque Foundation for Science. J. A. Lozano was partially supported by the Saiotek and IT609-13 programs (Basque Government), TIN2013-41272-P (Spanish Ministry of Science and Innovation), COMBIOMED network in computational bio-medicine (Carlos III Health Institute). Our experiments have been executed in the High Performance Computing environment managed by RDlab (http://rdlab.lsi.upc.edu
) and we would like to thank them for their support.

@&#REFERENCES@&#

