@&#MAIN-TITLE@&#Multi-objective particle swarm optimization for mechanical harvester route planning of sugarcane field operations


@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           This is the first report of the sugarcane harvester path planning involving field accessibility and split harvesting constraints.


                        
                        
                           
                           Multi-objective particle swarm optimization was applied.


                        
                        
                           
                           A new particle encoding with four decoding schemes were constructed to solve the problem.


                        
                        
                           
                           The seven movement strategies for Multi-objective particle swarm optimization were applied.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Sugarcane

Harvester planning

Particle swarm optimization

Multi-objective

@&#ABSTRACT@&#


               
               
                  One of the important aspects to increasing sugarcane mechanical harvesting efficiency is the path planning of the harvester, involving direction and field accessibility constraints. Moreover, in real-life applications, the two objective functions pertaining to minimization of harvested distance and maximization of sugarcane yield are conflicting and must be considered simultaneously. This paper presents a multi-objective with the variant of the particle swarm optimization combined gbest, lbest and nbest social structures (MO-GLNPSO), to solve sugarcane mechanical harvester route planning (MHRP). A new particle encoding/decoding scheme has been devised for combining the path planning with the accessibility and split harvesting constraints. Numerical computation results on several networks with sugarcane field topologies illustrate the efficiency of the proposed MO-GLNPSO method for computation of MHRP, which is compared with other methods such as the traditional particle swarm optimization (PSO) and Non-dominated Sorting Genetic Algorithm-II (NSGAII) by the values of 
                        
                           C
                           ˜
                        
                      metric indicator. The solutions found in this work can offer a decision maker a choice of trade-off solutions, providing sufficient options to give planners the power to make an informed choice that balances the important objectives.
               
            

@&#INTRODUCTION@&#

Sugarcane, which is one of the world's largest crops (FAO, 2012), has therefore increased infield machinery use, particularly in harvesting operations, because labor wages have risen greatly and less labor is available for manual infield work. In many parts of the world where sugarcane production is steadily increasing, the harvesting mode has switched from manual harvesting to mechanical harvesting (Salassi & Champagne, 1998). Mechanical harvesting of sugarcane is performed by cutting the sugarcane at the base of the stalk, stripping the leaves, chopping the sugarcane into short sticks (billets) and depositing it into a transporter following alongside. It is likely to be the most important factor in reducing future sugarcane production costs (Ahmed & Alam-Eldin, 2014), since it can complete the harvest faster with more sugarcane harvested per unit of time than manual cutting and loading. However, mechanical harvesting is quite capital and machine intensive. The fuel prices have over the past many years risen significantly faster than the growth in the sugarcane price paid to growers for delivered sugarcane. Moreover, particular movement of a harvester between different directions of sugarcane planting groves will be too time-consuming and cause cane damage. The harvester turning to another direction should be performed at the termination of the plantation boundary. For a directed graph, the definition of path requires that consecutive vertices (fields) be connected by an appropriate directed edge. Mechanical harvesting has less flexibility to access between fields. Field preparation becomes stricter, as mechanical harvesters require the same direction of sugarcane planting groves to plan the movement properly (see Fig. 1:
                      the mechanical harvester can move between Field 1 and Field 2, due to their planting groves being in the same direction but cannot move between Field 1 and Field 3 since it results in sugarcane damage). It can therefore be useful to identify suitable path routing in field operations and the field accessibility will make realistic implementation achievable. Furthermore, sugarcane is continuously sourced in diverse quantities and qualities from hundreds of geographically dispersed haciendas. The harvesting of sugarcane at a proper time, i.e. peak maturity, is necessary to realize increased average commercial cane sugar (CCS) yields. The yield values were different in accordance with the harvesting in each field, depending on many factors such as sugarcane variety, crop class, and climatic conditions, therefore, the field accessibility constraint can be the main obstacle to harvesting a field that is at its maturation peak. This is the contribution of split harvesting, that a harvester can partially harvest some field to access the inside fields that have higher cane yield. The optimal MHRP of sugarcane field operations which considers both traveling distance and sugarcane quantity is the most efficient.

This study has first proposed a multi-objective particle swarm optimization with multiple social structures, called MO-GLNPSO to identify an appropriate route for mechanical harvester path planning. To enhance diversity of particles for exploring in the global and local search space, modifying the particle position representation can be obviously improved by a heuristic-based method. This encoding/decoding exploits the sub-optimality feature of the path planning. Moreover, one reason for the success of MO-GLNPSO is the movement behavior, which allows the swarm to effectively explore the search space. Seven movement strategies are discussed for MO-GLNPSO. The next section provides a review of the relevant literature. The overview of the model is described in Section 3 and the methodology is presented in Section 4. Section 5 outlines simulation results. Finally, a summary is given in Section 6.

@&#LITERATURE REVIEW@&#

The sugarcane supply operations can comprise a large percent of the overall production costs as discussed in Iannoni and Morabito (2006). Several studies have pointed out the development of advanced methods to manage the supply system for transporting the harvested crops from rural fields to the processing plant which assures continuous feeding and low operation costs (such as in the research work of Díaz & Pérez, 2002; Higgins, 2006). However, previous works almost exclusively address road or railway transportation where the solution space is not covered for the sugarcane in-field and inter-field transporting operations, especially when applying the mechanical harvesting mode.

The route planning of mechanical harvester in the sugarcane supply system has many similarities with the shortest path problem (SPP); this is the same idea as discussed in the research work about in-field and inter-field path planning for agricultural transport units that has been presented by Bochtis, Sørensen, and Vougioukas (2010) and Jensen, Bochtis, Sørensen, Blas, and Lykkegaard (2012). The SPP is one of the most fundamental computations in graph theory. In our problem, we can assume that a sugarcane field is geometrically described by a 2D polygon that is defined by vertices (points) given in metric co-ordinates. Therefore, the MHRP of sugarcane field operations can be considered as a directed graph with positive weights to model one-way routing. Each edge of the graph is associated with a road segment or path between two vertices (e.g. sugar mill, sugarcane fields). The weight of an edge corresponds to the length of the associated road segment or path distance. There are several research fields such as earth observing satellite (Gabrel & Vanderpooten, 2002), ship routing (Azaron & Kianfar, 2003) and road networks (Duque, Lozano, & Medaglia, 2015) that have implemented practical use of the SPP concept (as reviewed in Deo & Pang, 1984). Regarding the route planning for agricultural field operations, advanced methods based on combinatorial optimization have recently been introduced (Hameed, Bochtis, Sørensen, & Nøremark, 2010). For example, Søgaard and Sørensen (2004) proposed a heuristic approach for optimizing vehicle routes in agricultural field operations by defining the field nodes as a graph and formulating the routing problem as the Chinese Postman Problem and the Rural Postman Problem. However, with the exception of work on SPP or path planning, far fewer references could be found for computing the mechanical harvester route in agriculture, especially, in the sugarcane supply system. Most previous research has focused on minimizing the total traveling distance, but the quality of product (such as sugar content or CCS in sugarcane) is not included. Moreover, the consideration of field accessibility to achieve realistic implementation has been not proposed in any papers before.
                  

To solve the SPP, the deterministic algorithms such as Dijkstra's algorithm, Bellman–Ford algorithms and Gabow's algorithm are most commonly used. With the developments of computer sciences, more variants of shortest path oriented problems have appeared. Some of these problems are the K-shortest paths, constraints SPP, multi-objective SPP, etc. These problems are mostly NP-hard, thereby polynomial-time algorithms for these problems have difficulty in finding the optimal solution. Thus, the evolutionary and/or heuristic algorithms are potential alternatives to be examined and investigated. The PSO method is becoming very popular because of its simplicity of implementation as well as its ability to swiftly converge to a good solution. The basic philosophy behind PSO is based on the social behavior of a bird flock and was first proposed by Kennedy and Eberhart (1995). Network graphs and SPPs are problems that have been successfully solved using PSO (Mohemmed, Sahoo, & Geok, 2008). Moreover, in most real-world decision problems the multi-objective optimization (MOO) is a very important research topic in optimization and computing disciplines (Gen & Lin, 2014). Srinivas and Deb (1994) introduced the Non-dominated Sorting Genetic Algorithm (NSGA), which can be considered as one of the first Evolutionary algorithm (EA) methods to deal with MOO problems. The drawbacks of this method are the high computational complexity and the use of the predetermined sharing parameter. Deb, Pratap, Agarwal, and Meyarivan (2002) introduced NSGA-II which could eliminate the problems with the old version by adopting an elitism structure and a measurement of the crowdedness. Similar to the Genetic Algorithm (GA), recently, PSO has been successfully used to solve both single and multi-objective optimization problems, from the domain of operations research (Tasgetiren, Liang, Sevkli, & Gencyilmaz, 2007; Xu, Yang, & Gao, 2010; Zheng & Chen, 2013; Boonmee & Sethanan, 2016). The recent literature survey indicates PSO is a potential competitor of GA or other soft computing techniques which has mostly been used for solving MOO (as reported in Goh, Tan, Liu, & Chiam, 2010; Lalwani, Singhal, Kumar, & Gupta, 2013). Although it cannot draw the conclusion that PSO outperforms the other soft computing techniques, PSO has many advantages, for example, easy implementation, effective memory, efficient maintenance of the solution diversity (Dai, Wang, & Ye, 2015), etc. Moreover, there exist many variants and combinations of this type of method to enhance the global search ability. The PSO with multiple social structures, called GLNPSO in the studies of Pongchairerks and Kachitvichyanukul (2009), is one of the most popular techniques to enhance diversity of particles for exploring. Moreover, the one technique is to use an external archive to store the non-dominated solutions via the search of the swarm and to perform a selection procedure to choose the candidates to guide the search of each particle. Nguyen and Kachitvichyanukul (2010) proposed three movement strategies of PSO in order to obtain high quality pareto fronts (PF). From the previous research, there is no reported work on the use of PSO to determine the optimal mechanical harvester route planning for sugarcane field operations. Because of the attractive features of PSO, it is the proposed method for solving the path planning in our paper.

The sugarcane supply planning is performed for two planning horizons, tactical planning (TP) and operational planning (OP) as concluded in Fig. 2. The TP comprises the entire harvest season. In this time-step, the mill aims at controlling supplies in order to fully utilize their industrial capacities, while adjusting to the market demands. At present, the sampled factory harvested cane with mechanical harvesting numbers 70–75 percent, with manual harvesting at 25–30 percent. This study focuses on a short-term horizon for mechanical harvested planning. A given harvesting plan from TP is broken down into separate days. The planning then focuses on OP, which will consider the way by which capacities are spread on a daily basis and emphasize the path planning of each harvester. Presently, the most of harvesters in the system are owned by the mill factory, because the sugarcane growers in Thailand cannot normally afford owning an expensive harvester. In each crop year, the mill operator/planner needs to set up a harvester utilization plan. The sugarcane fields will be clustered corresponding to the capacity of each mechanical harvester throughout the harvesting season before routing, because fields in Thailand are quite small and social factors are different. Then, the factory would assign the harvester for growers in each group (a set of fields) to conform to production capacity of each machine. Harvesters are privately operated and eligible to harvest only a set of cane fields in a specified region. The factory would let growers manage each cane harvester in both ordering and path planning by themselves. Each group contains 2–10 individual growers. Each individual usually has between 1 and 10 fields, therefore each group usually contains between 20 and 100 fields. The size of fields varies from 2 to 5 rai (1 rai=0.16 hectare), that can produce about 10 tons/rai of sugarcane. A sugarcane mechanical harvester can harvest 100–200 tons/harvester/day. Therefore, the harvester will be assigned to harvest each day in the range of 2–10 fields. However, the harvest managing of growers may not be effective enough as such path planning requires skill, experience, or expertise in the work area. Therefore, it is necessary to develop tools to help in making decisions to support and give more effective result.

A directed graph G ∈ {V, E} comprises a set of nodes V
                        ={0,1,…,n, 0′} and a set of edges E. Nodes 0 and 0′ correspond to the depot (mill factory), while the remaining node set N
                        =
                        V\{0, 0′} corresponds to the customers (sugarcane fields). Corresponding to each arc (i, j) ∈ E, there is a nonnegative number dij
                         representing the distance of the edge from node i to node j which is the network distance calculated from ArcGIS (a commercial geographical information system that is used as the database in geographic format by the sampled factory). We have used ArcGIS as a platform to store the problem data such as sugarcane identification, harvester locations, quantity of sugarcane, and also to structure the network of a set of cane fields in each sub-region. For example, in Fig. 3
                        , the SPP of the mechanical harvester is to find a path between two given nodes, that is the mill factory or Node 0 and after harvest completion it will return back to the mill factory or Node 0′. The path from Node 0 must be followed by a set of nodes that are adjacent to a road (Nodes 1, 2 and 3). Moreover, the staring node (mill) and the dummy ending node (mill) are assigned to share the same position and function similarly as a depot.

Based on the characteristics of the SPP of the mechanical harvester, the mathematical model will be constructed based on the following assumptions:

                           
                              A1.
                              The amount of sugarcane in field i (ai
                                 ) is estimated, i
                                 =1,2,…,n.

Each field can be split harvested.

The quantity of sugarcane in the considered supply round must be satisfied.

The path starts and ends at the mill factory.

The solution is considered in one time period (supply round) and single harvester.

The details of indices, parameters, decision variables, objective functions and constraints are as follows.

                           Indices


                           
                              i,j:
                           
                              node index (i,j
                                 =0, 1, 2,…, n, 0′)

set of directed edges between node i and node j (i, j ∈ E)

total number of sugarcane fields

quantity of sugarcane in the ith sugarcane field [tons]

sugar yield or CCS of sugarcane in field i
                              

distance between nodes i and j
                              

quantity of sugarcane demand that must be satisfied [tons]

ratio of sugarcane quantity that is harvested from field i
                              

if harvester moves from node i to node j (i, j ∈ E), otherwise 0


                        Objective functions
                        
                           
                              (1)
                              
                                 
                                    
                                       f
                                       1
                                    
                                    
                                       (
                                       y
                                       )
                                    
                                    =
                                    max
                                    
                                       {
                                       
                                          
                                             ∑
                                             i
                                          
                                          
                                             
                                                a
                                                i
                                             
                                             ×
                                             
                                                e
                                                i
                                             
                                             ×
                                             
                                                y
                                                i
                                             
                                          
                                       
                                       }
                                    
                                 
                              
                           
                        
                        
                           
                              (2)
                              
                                 
                                    
                                       f
                                       2
                                    
                                    
                                       (
                                       x
                                       )
                                    
                                    =
                                    min
                                    
                                       {
                                       
                                          
                                             ∑
                                             
                                                i
                                                ,
                                                j
                                                ∈
                                                
                                                   A
                                                   
                                                      i
                                                      j
                                                   
                                                
                                             
                                          
                                          
                                             
                                                d
                                                
                                                   i
                                                   j
                                                
                                             
                                             ×
                                             
                                                x
                                                
                                                   i
                                                   j
                                                
                                             
                                          
                                       
                                       }
                                    
                                 
                              
                           
                        
                     

The first objective (f
                        1) tries to maximize the sugarcane yield. The second objective (f
                        2) is to minimize the total distance of optimal path.


                        Constraints
                        
                           
                              (3)
                              
                                 
                                    
                                       ∑
                                       
                                          j
                                          ∈
                                          N
                                       
                                    
                                    
                                       x
                                       
                                          0
                                          ,
                                          j
                                       
                                    
                                    =
                                    1
                                 
                              
                           
                        
                        
                           
                              (4)
                              
                                 
                                    
                                       
                                    
                                    
                                       
                                          
                                             
                                                ∑
                                                
                                                   i
                                                   ∈
                                                   N
                                                
                                             
                                             
                                                
                                                   x
                                                   
                                                      i
                                                      ,
                                                      0
                                                      ′
                                                   
                                                
                                                =
                                                1
                                             
                                          
                                       
                                    
                                 
                              
                           
                        
                        
                           
                              (5)
                              
                                 
                                    
                                       ∑
                                       
                                          j
                                          ∈
                                          N
                                       
                                    
                                    
                                       x
                                       
                                          i
                                          j
                                       
                                    
                                    =
                                    
                                       ∑
                                       
                                          j
                                          ∈
                                          N
                                       
                                    
                                    
                                       x
                                       
                                          j
                                          i
                                       
                                    
                                    
                                    ;
                                    
                                    
                                    
                                    
                                    i
                                    ∈
                                    V
                                 
                              
                           
                        
                        
                           
                              (6)
                              
                                 
                                    
                                       ∑
                                       
                                          j
                                          ∈
                                          N
                                       
                                    
                                    
                                       x
                                       
                                          j
                                          i
                                       
                                    
                                    ≥
                                    
                                       y
                                       i
                                    
                                    ;
                                    
                                    i
                                    ∈
                                    N
                                 
                              
                           
                        
                        
                           
                              (7)
                              
                                 
                                    
                                       ∑
                                       
                                          i
                                          ∈
                                          N
                                       
                                    
                                    
                                       
                                          a
                                          i
                                       
                                       ×
                                       
                                          y
                                          i
                                       
                                    
                                    =
                                    q
                                 
                              
                           
                        
                        
                           
                              (8)
                              
                                 
                                    
                                       y
                                       i
                                    
                                    ≥
                                    0
                                    ;
                                    
                                    i
                                    ∈
                                    N
                                 
                              
                           
                        
                        
                           
                              (9)
                              
                                 
                                    
                                       x
                                       
                                          i
                                          j
                                       
                                    
                                    =
                                    0
                                    
                                    
                                    or
                                    
                                    1
                                    ;
                                    
                                    
                                    
                                    
                                    
                                    
                                    
                                    
                                    
                                    
                                    
                                    
                                    
                                    i
                                    ,
                                    j
                                    ∈
                                    V
                                 
                              
                           
                        
                     

Constraints (3) and (4) are used to ensure that there is a route which leaves depot 0 for harvesting in some fields and then returns back to the depot 0′. The role of constraints (5) is to ensure that when a harvesting route arrives at a field i, it also leaves that field. Constraints (6) forces there to be a flow from any field j to field i (∑
                           j ∈ N
                        
                        xji
                         ≥ 1) in the case when the ratio of sugarcane quantity that is harvested from field i is more than 0 (if yi
                         > 0). Constraints (7) ensure that the sugarcane demand must be satisfied. The model has 2n
                        +5 constraints and n
                        +|Aij
                        | variables.

The PSO algorithm starts with a population of particles whose positions represent the potential solutions in search space of the studied problem. Mostly, the group of particles or swarm is randomly initialized to generate the velocity and position of each particle. Each position of a particle has a fitness value which is evaluated by the fitness function to be optimized, and has its velocity which directs the flying. In each iteration, all particles are updated by following two best values. The first one is the best solution (fitness) it has achieved and this value is called the personal best position or pbest. Another best value is tracked by the particle swarm optimizer, and is that obtained so far by any particle in the population. This best value is a global best position or gbest. A particle's velocity and position are updated until the convergence criterion is met (i.e. maximum iteration number), then the best particle found so far is taken as the solution (near optimal solution) to the problem. However, in the standard PSO algorithm, the global best position is used as the only source of communication among particles, leading to swarm clustering very quickly and it may be easily trapped in a local optimal solution. Therefore, our proposed method for the main PSO algorithm is developed based on GLNPSO with multiple social structures (Pongchairerks & Kachitvichyanukul, 2009).

For a specific problem solution, a swarm of L particles serves as the searching agent. A particle's position
(Θl
                        ), which consists of H dimensions, represents a solution of the problem, where Z(Θl
                        ) is the fitness value of Θl
                        . The ability of a particle to search for a solution is based on its velocity vector (Ωl
                        ). The personal best of each particle (Ψl
                        ) is defined as the position that gives the best objective function among the positions that have been visited by the particle (Z(Ψl
                        )). The global best
(Ψg) is the position that gives the best objective function of the swarm (Z(Ψg
                        )). The local best (ΨlL
                        ) or lbest is the best position among several adjacent particles. The near neighbor best (ΨlN
                        ) or nbest is a social learning behavior which is determined based on the fitness-distance-ratio (FDR). The outline of the proposed algorithm is presented in the following:


                        Procedure GLNPSO algorithm
                        
                           
                              
                                 
                                 
                                    
                                       
                                          Begin
                                       
                                    
                                    
                                       1. Initialize L particles as a swarm
                                    
                                    
                                       2. Generate the initial particles with random position using priority-based encoding
                                    
                                    
                                       3. Decode each particle into a harvester route
                                    
                                    
                                       4. Evaluate the fitness function
                                    
                                    
                                       
                                          While
                                          
                                             
                                                τ
                                                ≤
                                                Γ
                                             
                                           
                                          Do //
                                          
                                             τ
                                           is iteration index; 
                                             
                                                τ
                                                =
                                                1
                                                ,
                                                …
                                                ,
                                                Γ
                                             
                                           (
                                             Γ
                                           is maximum iteration)
                                    
                                    
                                       5. Update pbest, If
                                          
                                             
                                                Z
                                                
                                                   (
                                                   
                                                      Θ
                                                      l
                                                   
                                                   )
                                                
                                                <
                                                Z
                                                
                                                   (
                                                   
                                                      Ψ
                                                      l
                                                   
                                                   )
                                                
                                             
                                           
                                          Then
                                          
                                             
                                                
                                                   Ψ
                                                   l
                                                
                                                ←
                                                
                                                   Θ
                                                   l
                                                
                                             
                                           
                                          Endif
                                       
                                    
                                    
                                       6. Update gbest, If
                                          
                                             
                                                Z
                                                
                                                   (
                                                   
                                                      Ψ
                                                      l
                                                   
                                                   )
                                                
                                                <
                                                Z
                                                
                                                   (
                                                   
                                                      Ψ
                                                      g
                                                   
                                                   )
                                                
                                             
                                           
                                          Then
                                          
                                             
                                                
                                                   Ψ
                                                   g
                                                
                                                ←
                                                
                                                   Ψ
                                                   l
                                                
                                             
                                           
                                          Endif
                                       
                                    
                                    
                                       7. Update lbest, 
                                             
                                                Ψ
                                                
                                                   l
                                                   L
                                                
                                                ←
                                             
                                          
                                          the pbest from K neighbors of 
                                             
                                                l
                                                th
                                             
                                           particle which has the least fitness value
                                    
                                    
                                       8. Update nbest
                                          , set
                                          
                                             
                                                
                                                   ψ
                                                   
                                                      l
                                                      h
                                                   
                                                   N
                                                
                                                ←
                                                
                                                   ψ
                                                   
                                                      o
                                                      h
                                                   
                                                
                                             
                                           that maximizes FDR for o
                                          =1, 2,…, L where
                                    
                                    
                                       
                                          
                                             
                                                ψ
                                                
                                                   l
                                                   h
                                                
                                                N
                                             
                                           is the near neighbor best position (nbest) of the 
                                             
                                                l
                                                th
                                             
                                           particle at the 
                                             
                                                h
                                                th
                                             
                                           dimension
                                    
                                    
                                       
                                          
                                             
                                                ψ
                                                
                                                   o
                                                   h
                                                
                                             
                                           is the position of the 
                                             
                                                o
                                                th
                                             
                                          particle in the 
                                             
                                                h
                                                th
                                             
                                           dimension
                                    
                                    
                                       
                                          
                                             
                                                F
                                                D
                                                R
                                                =
                                                
                                                   
                                                      Z
                                                      
                                                         (
                                                         
                                                            Θ
                                                            l
                                                         
                                                         )
                                                      
                                                      −
                                                      Z
                                                      
                                                         (
                                                         
                                                            Ψ
                                                            o
                                                         
                                                         )
                                                      
                                                   
                                                   
                                                      
                                                         |
                                                      
                                                      
                                                         
                                                            θ
                                                            
                                                               l
                                                               h
                                                            
                                                         
                                                         −
                                                         
                                                            ψ
                                                            
                                                               o
                                                               h
                                                            
                                                         
                                                      
                                                      
                                                         |
                                                      
                                                   
                                                
                                                ,
                                                l
                                                ≠
                                                o
                                                
                                                
                                                
                                                   (
                                                   10
                                                   )
                                                
                                             
                                          
                                       
                                    
                                    
                                       
                                          
                                             
                                                Z
                                                (
                                                
                                                   Ψ
                                                   o
                                                
                                                )
                                             
                                           fitness value of 
                                             
                                                Ψ
                                                o
                                             
                                          
                                       
                                    
                                    
                                       
                                          
                                             
                                                θ
                                                
                                                   l
                                                   h
                                                
                                             
                                           position of the 
                                             
                                                l
                                                th
                                             
                                           particle in the 
                                             
                                                h
                                                th
                                             
                                           dimension
                                    
                                    
                                       
                                          
                                             
                                                ψ
                                                
                                                   l
                                                   l
                                                   h
                                                
                                             
                                           
                                          pbest position of the 
                                             
                                                l
                                                th
                                             
                                           particle in the 
                                             
                                                h
                                                th
                                             
                                           dimension
                                    
                                    
                                       9. Update the velocity and the position of each particle:
                                    
                                    
                                       
                                          
                                             
                                                w
                                                
                                                   (
                                                   τ
                                                   )
                                                
                                                =
                                                w
                                                
                                                   (
                                                   Γ
                                                   )
                                                
                                                +
                                                
                                                   
                                                      τ
                                                      −
                                                      Γ
                                                   
                                                   
                                                      1
                                                      −
                                                      Γ
                                                   
                                                
                                                
                                                   [
                                                   
                                                      w
                                                      (
                                                      1
                                                      )
                                                      −
                                                      w
                                                      (
                                                      Γ
                                                      )
                                                   
                                                   ]
                                                
                                                
                                                
                                                
                                                   (
                                                   11
                                                   )
                                                
                                             
                                          
                                       
                                    
                                    
                                       
                                          
                                             
                                                
                                                   ω
                                                   
                                                      l
                                                      h
                                                   
                                                
                                                
                                                   (
                                                   
                                                      τ
                                                      +
                                                      1
                                                   
                                                   )
                                                
                                                =
                                                w
                                                
                                                   (
                                                   τ
                                                   )
                                                
                                                
                                                   ω
                                                   
                                                      l
                                                      h
                                                   
                                                
                                                
                                                   (
                                                   τ
                                                   )
                                                
                                                +
                                                
                                                   c
                                                   p
                                                
                                                u
                                                
                                                   (
                                                   
                                                      
                                                         ψ
                                                         
                                                            l
                                                            h
                                                         
                                                      
                                                      −
                                                      
                                                         θ
                                                         
                                                            l
                                                            h
                                                         
                                                      
                                                      
                                                         (
                                                         τ
                                                         )
                                                      
                                                   
                                                   )
                                                
                                                +
                                                
                                                   c
                                                   g
                                                
                                                u
                                                
                                                   (
                                                   
                                                      
                                                         ψ
                                                         
                                                            g
                                                            h
                                                         
                                                      
                                                      −
                                                      
                                                         θ
                                                         
                                                            l
                                                            h
                                                         
                                                      
                                                      
                                                         (
                                                         τ
                                                         )
                                                      
                                                   
                                                   )
                                                
                                             
                                          
                                       
                                    
                                    
                                       
                                          
                                             
                                                
                                                +
                                                
                                                
                                                   
                                                      c
                                                      l
                                                   
                                                   u
                                                   
                                                      (
                                                      
                                                         
                                                            ψ
                                                            
                                                               l
                                                               h
                                                            
                                                            L
                                                         
                                                         −
                                                         
                                                            θ
                                                            
                                                               l
                                                               h
                                                            
                                                         
                                                         
                                                            (
                                                            τ
                                                            )
                                                         
                                                      
                                                      )
                                                   
                                                   +
                                                   
                                                      c
                                                      n
                                                   
                                                   u
                                                   
                                                      (
                                                      
                                                         
                                                            ψ
                                                            
                                                               l
                                                               h
                                                            
                                                            N
                                                         
                                                         −
                                                         
                                                            θ
                                                            
                                                               l
                                                               h
                                                            
                                                         
                                                         
                                                            (
                                                            τ
                                                            )
                                                         
                                                      
                                                      )
                                                   
                                                   
                                                   
                                                   
                                                      (
                                                      12
                                                      )
                                                   
                                                
                                             
                                          
                                       
                                    
                                    
                                       
                                          
                                             
                                                
                                                   θ
                                                   
                                                      l
                                                      h
                                                   
                                                
                                                
                                                   (
                                                   
                                                      τ
                                                      +
                                                      1
                                                   
                                                   )
                                                
                                                =
                                                
                                                   θ
                                                   
                                                      l
                                                      h
                                                   
                                                
                                                
                                                   (
                                                   τ
                                                   )
                                                
                                                +
                                                
                                                   ω
                                                   
                                                      l
                                                      h
                                                   
                                                
                                                
                                                   (
                                                   
                                                      τ
                                                      +
                                                      1
                                                   
                                                   )
                                                
                                                
                                                
                                                
                                                   (
                                                   13
                                                   )
                                                
                                             
                                          
                                       
                                    
                                    
                                       where 
                                             
                                                w
                                                (
                                                τ
                                                )
                                             
                                           is the inertia weight in the 
                                             
                                                τ
                                                th
                                             
                                           iteration
                                    
                                    
                                       
                                          
                                             
                                                
                                                   ω
                                                   
                                                      l
                                                      h
                                                   
                                                
                                                
                                                   (
                                                   τ
                                                   )
                                                
                                             
                                           is the velocity of the 
                                             
                                                l
                                                th
                                             
                                           particle at the 
                                             
                                                h
                                                th
                                             
                                           dimension in the 
                                             
                                                τ
                                                th
                                             
                                           iteration
                                    
                                    
                                       
                                          
                                             
                                                
                                                   θ
                                                   
                                                      l
                                                      h
                                                   
                                                
                                                
                                                   (
                                                   τ
                                                   )
                                                
                                             
                                           is the position of the 
                                             
                                                l
                                                th
                                             
                                           particle at the 
                                             
                                                h
                                                th
                                             
                                           dimension in the 
                                             
                                                τ
                                                th
                                             
                                           iteration
                                    
                                    
                                       
                                          
                                             
                                                ψ
                                                
                                                   g
                                                   h
                                                
                                             
                                           is the global best position (gbest) at the 
                                             
                                                h
                                                th
                                             
                                           dimension
                                    
                                    
                                       
                                          
                                             
                                                ψ
                                                
                                                   l
                                                   h
                                                
                                                L
                                             
                                           is the local best position (lbest) of the 
                                             
                                                l
                                                th
                                             
                                           particle at the 
                                             
                                                h
                                                th
                                             
                                           dimension
                                    
                                    
                                       
                                          
                                             u
                                           as a uniform random number [0,1]
                                    
                                    
                                       
                                          
                                             
                                                
                                                   c
                                                   p
                                                
                                                ,
                                                
                                                   c
                                                   g
                                                
                                                ,
                                                
                                                   c
                                                   l
                                                
                                                ,
                                                
                                                   c
                                                   n
                                                
                                             
                                           as acceleration constants
                                    
                                    
                                       10. If
                                          
                                             
                                                
                                                mod
                                                
                                                (
                                                τ
                                                ,
                                                R
                                                
                                                   I
                                                   max
                                                
                                                )
                                                =
                                                0
                                             
                                           
                                          Then Generate the L particles with random position 
                                             
                                                
                                                   Θ
                                                   l
                                                
                                                
                                                   (
                                                   τ
                                                   )
                                                
                                             
                                          , velocity 
                                             
                                                
                                                   Ω
                                                   l
                                                
                                                =
                                                0
                                             
                                           and 
                                             
                                                
                                                   Ψ
                                                   l
                                                
                                                =
                                                
                                                   Θ
                                                   l
                                                
                                             
                                           
                                          EndIf//
                                          
                                             
                                                R
                                                
                                                   I
                                                   max
                                                
                                             
                                           is the re-initialization's iteration
                                    
                                    
                                       11. 
                                             
                                                τ
                                                ←
                                                τ
                                                +
                                                1
                                             
                                           
                                          Endwhile
                                       
                                    
                                    
                                       
                                          End
                                       
                                    
                                 
                              
                           
                        
                     

Our paper employs priority-based encoding which was proposed by Gen, Runwei, and Wang (1997). In this encoding, the position of the gene in the chromosome (or locus) represents the node ID, while its value (or allele) is used to represent the priority of the node for constructing a path among candidates. Moreover, in our paper, we have improved this encoding to match our problem that includes the splitting constraint by incorporating the number of splitting nodes of a path. The PSO particles, n numbers of dimensions with a randomly generated real number between 0 and 1, are presented as the priority of n sugarcane fields for constructing a path among candidates. Moreover, the last dimension (n
                        +1th) of each particle involves the number of sugarcane fields that are split harvested (Sp). The particle representation of our problem is shown in Fig. 4.
                     

To help the particle convergence and increase diversity in the search space, in this paper, we have four methods of decoding scheme. In the first method or Dc1, the path is constructed by a path growth procedure by appending nodes starting from the source (Node 0 or the mill factory). At each step, the next node with the higher priority is chosen from those which have a direct link or edge with the currently considered node. The procedures continue until the destination node (Node 0’ or turn back to the mill factory) is reached. For other decoding methods, choosing the next node to build the path is not only based on the priority of the node but also on the distance of each edge (second decoding or Dc2), the sugarcane yield in each sugarcane node (third decoding or Dc3), and the ratio between sugarcane yield and distance between the current node and the next node (fourth decoding or Dc4). Each decoding method is explained by example as follows. For the network topology of Fig. 5
                        
                        , a particle has the priority values shown in Fig. 4. Initially the path consists of the source node {0}. From this node three candidate nodes (Node 1, 2 and 3) can be considered to be appended to the path.

                           
                              -
                              For the Dc1 method, Node 1 is selected because it has the maximum value of priority (0.968), so the growing path becomes {0, 1}. In the same way, from nodes 2, 4 and 9 can be appended to the path and Node 2 is selected. When a next node is selected to the path, its priority is assigned a value (
                                    
                                       −
                                       
                                          N
                                          ∞
                                       
                                    
                                 ) such that it will not be considered again, preventing formulation of a loop. Finally the path goes through to the destination or Node 0′; the procedure returns with the decoded path.

For the Dc2 method, Node 3 is selected because it has the minimum distance (9.99 kilometer) of the directed links from the source node, so the growing path becomes {0, 3}. In the same way, nodes 5 and 7 can be appended to the path and Node 5 is selected (with minimum distance 0.53 kilometer).

For the Dc3 method, Node 2 is selected because it has the maximum CCS (13.3), so the growing path becomes {0, 2}. In the same way, nodes 4 and 5 can be appended to the path. Since they have the same CCS value, the next node is selected randomly.

For the Dc4 method, for each candidate node (Nodes 1, 2 and 3) the ratio value between CCS and the distance from the precedent node (Node 0) must be calculated. From the example, Node 1 has a ratio value equal to 12.3/10.3=1.194; Node 2 has the ratio value equal to 13.3/10=1.33; Node 3 has the ratio value equal to 12.7/9.99=1.271 and the node that has the maximum ratio value is selected. So the growing path becomes {0, 2}.

However, there may be a situation when all the adjacent nodes for the current node have been already appended to the path, but the total quantity of sugarcane supply is not be satisfied. The path is considered an invalid path, and the particle fitness will be penalized. Repeat these steps until the sugarcane supply requirements are equal or more than the requirement or the destination node (mill) is inserted. The example of a decoded path with Dc1 is shown in Fig. 6.
                     

From the previous research of SPP, each node in the path is not considered to split. But in our problem each node or sugarcane field can be assigned to split harvesting. The standard heuristic procedure for the split demand case in order to obtain feasible solutions uses the Lin and Kernighan (1973) heuristic to build a giant tour through the clients and the depot. However, in this algorithm only the last selected node (sugarcane fields) is chosen for split harvesting (Fig. 7
                        ). Even though the solution from the giant tour can be improved by the local search phase such as 1–0 exchange, 2-opt, or 1–1 interchanges, with the constraint of accessibility and directed graph conditions applied, the local search in our problem will easily lead to an infeasible solution. This result in time-wasting, especially when the problem is involved with complex constraints or the problem is large. Hence, research to determine better and more efficient constraint-handling methods should be carried out in this work. A new particle encoding/decoding scheme has been devised for encountering path planning with the accessibility and split harvesting constraint. From the example in Fig. 6, the total quantity of sugarcane in the first phase is 159t. In the second phase, the Sp sugarcane fields are split harvested based on the integer value in the last dimension of the particle. From the example Sp
                        =1, the sugarcane fields are randomly selected to split harvest. Field 5 is selected, therefore, it will be split harvested until all the demand is satisfied. The complete path is shown in Fig. 8.
                        
                     

The framework of the MOPSO proposed is shown in Fig. 9
                        . In this framework, the swarm experience is stored in an external archive as a set of non-dominated solutions.

                           
                              (1)
                              
                                 Evaluation: After each movement, the objective values corresponding to the position of each particle are re-evaluated and the non-dominated sorting procedure is used to identify the group of new non-dominated solutions. The fitness of the particle is the two criteria that are the total sugarcane yield following Eq. (1) and the path length following Eq. (2).


                                 Elite structure of candidate guidance: The non-dominated sorting procedure is applied to the group of new solutions and current solutions in the external archive, and only the non-dominated solutions via the trajectories of all particles are stored in the external archive, similar to the Elitist structure of NSGA-II. A parameter-free method is proposed in NSGA-II which measures the crowding distance (CD) for each member in the population (see Fig. 10). This approach estimates the density of solutions surrounding a specific solution by calculating the average distance of two points on either side of this point along each of the objectives (see Deb et al., 2002 for more details).


                                 Movement strategy: Similar to the traditional PSO algorithm, the learning terms must be determined. However, it is not trivial in this case because of the existence of multiple global non-dominated positions in the external archive. It is important to mention that the movement of particles is a very critical attribute of the algorithm to enhance the quality of the PF. In multi-objective problems, the existence of multiple candidates in the archive provides a large number of reference options for the movement of particles. Several potential movement strategies are proposed in MOPSO framework to utilize the non-dominated solutions in the Elite group as the movement guidance. From the study of Wisittipanich and Kachitvichyanukul (2013), the four movement strategies (Ms*:Ms1, Ms2, Ms3, and Ms4) are proposed. In the first strategy, Ms1, a particle will not directly use the global knowledge but will explore the search space gradually based on its own experience. As a result, these particles do not change their movement abruptly every time the global trend changes. This feature helps them to better explore the local region. The formula for updating the position of a particle in Ms1 is shown in Eq. (14).

                                    
                                       (14)
                                       
                                          
                                             
                                                
                                                
                                                
                                                   
                                                      Ms
                                                      1
                                                      
                                                      :
                                                      
                                                      
                                                         ω
                                                         
                                                            l
                                                            h
                                                         
                                                      
                                                      
                                                         (
                                                         
                                                            τ
                                                            +
                                                            1
                                                         
                                                         )
                                                      
                                                      =
                                                      w
                                                      
                                                         (
                                                         τ
                                                         )
                                                      
                                                      
                                                         ω
                                                         
                                                            l
                                                            h
                                                         
                                                      
                                                      
                                                         (
                                                         τ
                                                         )
                                                      
                                                      +
                                                      
                                                         c
                                                         p
                                                      
                                                      u
                                                      
                                                         (
                                                         
                                                            
                                                               ψ
                                                               
                                                                  l
                                                                  h
                                                               
                                                            
                                                            −
                                                            
                                                               θ
                                                               
                                                                  l
                                                                  h
                                                               
                                                            
                                                            
                                                               (
                                                               τ
                                                               )
                                                            
                                                         
                                                         )
                                                      
                                                   
                                                
                                             
                                             
                                                
                                                
                                                
                                                   
                                                      
                                                      +
                                                      
                                                      
                                                         c
                                                         l
                                                      
                                                      u
                                                      
                                                         (
                                                         
                                                            
                                                               ψ
                                                               
                                                                  l
                                                                  h
                                                               
                                                               L
                                                            
                                                            −
                                                            
                                                               θ
                                                               
                                                                  l
                                                                  h
                                                               
                                                            
                                                            
                                                               (
                                                               τ
                                                               )
                                                            
                                                         
                                                         )
                                                      
                                                      +
                                                      
                                                         c
                                                         n
                                                      
                                                      u
                                                      
                                                         (
                                                         
                                                            
                                                               ψ
                                                               
                                                                  l
                                                                  h
                                                               
                                                               N
                                                            
                                                            −
                                                            
                                                               θ
                                                               
                                                                  l
                                                                  h
                                                               
                                                            
                                                            
                                                               (
                                                               τ
                                                               )
                                                            
                                                         
                                                         )
                                                      
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                              

On the other hand, the remaining particle strategies utilize the global knowledge from the Elite group as the guidance to move to new positions. In the second strategy (Ms2), the particles are guided to the less crowded areas of the non-dominated front. Thus, the movement of those particles will mainly depend on how the solutions are distributed in the current Elite group (see Fig. 11(a)). Although the first two strategies have tried to explore the search in many different directions, they may still leave some unexplored gaps because of their convergence at some segments on the PF. For that reason, the task of particles in the third group (Ms3) is to fill these gaps so that the final front can have a better distribution (see Fig. 11(b)). Finally, the responsibility of particles in the fourth strategy (Ms4) is to explore around the endpoints of the front to increase the spread of the non-dominated fronts (Wisittipanich & Kachitvichyanukul, 2013). The formula for updating new positions with the global term of a particle in Ms2, Ms3 and Ms4 are shown in the following equations:

                           
                              (15)
                              
                                 
                                    Ms
                                    2
                                    
                                    :
                                    
                                    
                                       ω
                                       
                                          l
                                          h
                                       
                                    
                                    
                                       (
                                       
                                          τ
                                          +
                                          1
                                       
                                       )
                                    
                                    =
                                    
                                       c
                                       g
                                    
                                    u
                                    
                                       (
                                       
                                          
                                             y
                                             
                                                R
                                                1
                                                ,
                                                h
                                             
                                          
                                          −
                                          
                                             θ
                                             
                                                l
                                                h
                                             
                                          
                                          
                                             (
                                             τ
                                             )
                                          
                                       
                                       )
                                    
                                 
                              
                           
                        
                        
                           
                              (16)
                              
                                 
                                    Ms
                                    3
                                    
                                    :
                                    
                                    
                                       ω
                                       
                                          l
                                          h
                                       
                                    
                                    
                                       (
                                       
                                          τ
                                          +
                                          1
                                       
                                       )
                                    
                                    =
                                    
                                       c
                                       g
                                    
                                    u
                                    
                                       [
                                       
                                          
                                             (
                                             
                                                
                                                   E
                                                   
                                                      1
                                                      ,
                                                      d
                                                   
                                                
                                                −
                                                
                                                   θ
                                                   
                                                      l
                                                      h
                                                   
                                                
                                                
                                                   (
                                                   τ
                                                   )
                                                
                                             
                                             )
                                          
                                          +
                                          
                                             (
                                             
                                                
                                                   E
                                                   
                                                      1
                                                      ,
                                                      d
                                                   
                                                
                                                −
                                                
                                                   E
                                                   
                                                      2
                                                      ,
                                                      d
                                                   
                                                
                                             
                                             )
                                          
                                       
                                       ]
                                    
                                    
                                 
                              
                           
                        
                        
                           
                              (17)
                              
                                 
                                    Ms
                                    4
                                    
                                    :
                                    
                                    
                                       ω
                                       
                                          l
                                          h
                                       
                                    
                                    
                                       (
                                       
                                          τ
                                          +
                                          1
                                       
                                       )
                                    
                                    =
                                    
                                       c
                                       g
                                    
                                    u
                                    
                                       (
                                       
                                          
                                             y
                                             
                                                R
                                                1
                                                ,
                                                h
                                             
                                          
                                          −
                                          
                                             y
                                             
                                                R
                                                2
                                                ,
                                                h
                                             
                                          
                                       
                                       )
                                    
                                    
                                 
                              
                           
                        
                        where y
                        
                           R1, h
                         and y
                        
                           R2, h
                         are the position of particle R1 and R2 from the top (percent) and bottom (percent) of the Elite group respectively, r is a uniform random number in the range (0, 1), E
                        1, d
                         and E
                        2, d
                         are a pair of particle positions selected from the unexplored list in the Elite group.

Moreover, it is important to achieve an effective balance between exploration and exploitation for the success of MO-GLNPSO. Multi-swarm systems with different movement behaviors can provide a new approach to improve this balance. The various movement behaviors can help to focus on either exploitation (individual sub-swarms) or exploration (diversification method). Therefore, to enhance the quality and increase the diversity of the PF, this study proposed a different mixture of particles features (Ms5–Ms7).


                        Ms5 (Sub-swarm selection): As the studies in Wisittipanich and Kachitvichyanukul (2013) show, the Ms* use a single swarm with a mixture of particles with different movement behaviors with the ratio of numbers of particles in each group of 1:1:1:1, and all of them will use the old movement strategies until the last iteration (see Fig. 11(c)).


                        Ms6 (Random-selection): This movement strategy uses the policy that each particle in a swarm can select the movement strategy among Ms1–Ms4 randomly. This means that in each iteration the particle can change the movement strategy and the number of particles that uses each movement strategy (Ms1–Ms4) will be also changed (see Fig. 11(d)).


                        Ms7 (Mixed-selection): This movement strategy uses the mixed policies that the swarm is divided into four subgroups in the ratio a:b:c:d (such as Ms1:Ms2:Ms3:Ms4→10 percent: 20 percent: 50 percent: 30 percent) which means that the number of particles that uses each movement strategy (Ms1–Ms4) will be not changed like Ms6. The difference from Ms5 is that in each iteration a particle can change its movement strategy.

This section presents the results of extensive computational experiments performed to assess the performance of MO-GLNPSO in solving MHRP of sugarcane field operations. The experiments are implemented using Matlab version 7.9.0.529 on Intel Core™ i5 processor (2.4-gigahertz clock).
                     
                     
                  

To identify the performance of the proposed method, it is employed to solve 7 sample problems following the actual situation of general sugarcane fields in Thailand. The problem sizes of each instance are given in Table 1 
                        . The size of fields are varied from 2 to 5 rai (1 rai=0.16 hectare). The sugarcane yield and distance parameters used in the sample problem are also simulated following the real geographic data. Additionally, we assume that a field is geometrically described by a 2D polygon that is defined by vertices (points) given in metric co-ordinates. Since there are very large numbers of geographically dispersed fields in the mill area, they often partition the geographical region served by a harvester into zones. Each zone is assigned to a single harvester.

In order to evaluate the capability of the algorithm in achieving optimal or near optimal value, the sugarcane MHRP model will be validated by comparing the optimal solution obtained in each individual objective function by the MPL/CPLEX software. To solve the problem, single objective optimization techniques, which consist of the GLNPSO algorithm (Pongchairerks & Kachitvichyanukul, 2009) with a new particle encoding/decoding scheme proposed in this paper, the traditional PSO (Kennedy & Eberhart, 1995), and the GA algorithm (Ahn & Ramakrishna, 2002), were implemented in Matlab and ten runs per instance tested. In order to determine the suitable control parameters of the algorithm (i.e., GLNPSO), the values of these parameters were initially set with respect to the empirical schemes from the study of Ai and Kachitvichyanukul (2007). After performing the experiments, parameters are set as K neighbors=5, 
                           
                              
                                 c
                                 p
                              
                              =
                              1
                           
                        , 
                           
                              
                                 c
                                 p
                              
                              =
                              1
                           
                        , 
                           
                              
                                 c
                                 l
                              
                              =
                              1
                           
                        , 
                           
                              
                                 c
                                 n
                              
                              =
                              1
                           
                         and the inertia weight (w) is set to linearly decrease from 0.9 to 0.4. Additionally, other control parameters used in the GLNPSO algorithm are presented in Table 1.
                     

The following Table 2 shows the solution quality in terms of the first objective function (f
                        1) that tries to maximize the sugarcane yield. Table 3 shows the solution quality in terms of the second objective function (f
                        2), which is to minimize the total distance of the optimal path. From these tables, we can see that the GLNPSO yield low standard deviation for Problems 1 and 2,
                        
                        
                         since the number of nodes (n) is small resulting to no various solutions. Therefore, the solution obtained in each run is close to the optimal solution. For the larger size problems (Problems 3–7), since the number of nodes is increased, there are diverse solutions in search space. Hence, in some runs, the solutions obtained are close to optimal solutions, while the other swarms move far away. For the traditional PSO and GA, they yield lower standard deviation since they have not included a new particle encoding/decoding scheme, resulting in the solution may get trapped in a local optimum. From the solution quality in terms of f
                        1, it can be seen that the proposed GLNPSO algorithm can find the optimal solution for 3 out of the 7 problem numbers, and 14 out of 70 replicated runs. The traditional PSO and GA can find the optimal solution for 1 out of the 7 problem numbers, and 1 out of 70 replicated runs. In terms of f
                        2, it can be seen that the proposed GLNPSO algorithm can find the optimal solution for 5 out of the 7 problem numbers, and 26 out of 70 replicated runs. The traditional PSO and GA can find the optimal solution for 2 out of the 7 problem numbers, and 3 out of 70 replicated runs and 2 out of 70 replicated runs, respectively. It is observed that proposed GLNPSO outperforms other algorithm. Moreover, to address this issue, participative research was undertaken with a sugar milling company (denoted by Current Practice). The result indicates that the proposed GLNPSO yielded better solutions than the current practice and can achieve the optimal solution and near optimal solution. The solutions found in this work leading to potential cost savings versus schedules produced manually by the mill officer. Fig. 12, for instance, shows the convergence behavior of the GLNPSO, traditional PSO and GA algorithm in the iteration of solutions for problem number 7. The results indicate that the proposed GLNPSO with a new particle encoding/decoding scheme yields better solutions and has better convergence than those of the traditional PSO and GA. This indicates that to enhance diversity of particles for exploring the global and local search space, modifying the particle position representation can obviously be improved by a new particle encoding/decoding scheme. This encoding/decoding exploits the sub-optimality feature of the path planning.

The performance assessment of techniques in MOO is less straightforward than in single objective optimization (Demir, Bektaş, & Laporte, 2014). As reviewed in Zitzler, Thiele, Laumanns, Fonseca, and da Fonseca (2003) there are many existing quality assessment indicators. In some problems, the true PF may not be available. Therefore, in this work use the coverage concept to assess our proposed method, namely 
                           
                              C
                              ˜
                           
                         
                        metric indicator. The 
                           
                              C
                              ˜
                           
                         metric was proposed by Zitzler, Deb, and Thiele (2000), which is used to compare two sets of non-dominated solutions (Fig. 13). Let A and B be two approximations to the PF of MOO, 
                           
                              
                                 C
                                 ˜
                              
                              
                                 (
                                 A
                                 ,
                                 B
                                 )
                              
                           
                         is defined as the fractions of members of B that are dominated by members of A as given by equation (18):

                           
                              (18)
                              
                                 
                                    
                                       C
                                       ˜
                                    
                                    
                                       (
                                       A
                                       ,
                                       B
                                       )
                                    
                                    =
                                    
                                       
                                          |
                                          
                                             {
                                             
                                                b
                                                ∈
                                                B
                                                :
                                                ∃
                                                a
                                                ∈
                                                A
                                                ,
                                                
                                                   a
                                                   1
                                                
                                                ≻
                                                
                                                   b
                                                   1
                                                
                                                &
                                                
                                                   a
                                                   1
                                                
                                                ≺
                                                
                                                   b
                                                   1
                                                
                                             
                                             }
                                          
                                          |
                                       
                                       
                                          |
                                          B
                                          |
                                       
                                    
                                 
                              
                           
                        
                     

The function 
                           
                              
                                 C
                                 ˜
                              
                              
                                 (
                                 A
                                 ,
                                 
                                 B
                                 )
                              
                           
                         maps the ordered pair (A,B) into the interval [0,1]. Therefore, 
                           
                              
                                 C
                                 ˜
                              
                              
                                 (
                                 A
                                 ,
                                 B
                                 )
                              
                              =
                              1
                           
                         means that each solution in B is dominated by some solutions in A. On the other hand, 
                           
                              
                                 C
                                 ˜
                              
                              
                                 (
                                 A
                                 ,
                                 B
                                 )
                              
                              =
                              0
                           
                         indicates that all solutions in B are non-dominated by any solution in A. The lower the ratio 
                           
                              
                                 C
                                 ˜
                              
                              
                                 (
                                 A
                                 ,
                                 B
                                 )
                              
                           
                         is, the better the solution set in B is.

Two criteria (decoding methods and movement strategies) are taken into account for enhancing the ability of searching for non-dominant solutions of MO-GLNPSO. For the performance test in the different decoding methods and movement strategies as proposed in this paper, the experiment is divided into three parts; (1) the performance test in the different decoding methods, (2) the performance test in the different movement strategies, and (3) the performance test when comparing different methods. The experiment has parameters as shown in Table 4, while Table 5 shows the symbols and details of each method. The experiment has 6×7×7=294 combinations, with each combination tested by three replications (the number of replication runs was initially set with respect to the empirical schemes from the study of Wisittipanich & Kachitvichyanukul, 2013). Based on this set coverage concept (
                           
                              C
                              ˜
                           
                         metric), we can define a measure to indicate the overall strength of an algorithm with respect to other algorithms. This measure should have a larger value when the algorithm can obtain more non-dominated and less dominated solutions than other algorithms. Moreover, to compare the algorithm with the different environments (such as the different decoding methods comparing in each movement strategy as shown in Table 7, or the different movement strategies comparing in each decoding method as shown in Table 9), the number of the ranking of each decoding method or each movement strategy was counted. Therefore, fore evaluating each criterion we sum the values of 
                           
                              C
                              ˜
                           
                         metric (based on the similar method in Miandoabchi, Daneshzand, Szeto, & Farahani, 2013; Wisittipanich & Kachitvichyanukul, 2013 that represent the fraction of solutions which dominate the solutions of other algorithms. The score were summed up for all run tests in each criterion, which are shown in Tables 6 and 8.
                     


                           Table 6 shows the sum of 
                              
                                 
                                    C
                                    ˜
                                 
                                 
                                    (
                                    A
                                    ,
                                    B
                                    )
                                 
                              
                            in three replications when comparing between two different decoding methods in each movement strategy. Table 7 shows the comparison of each decoding method. Tables 6 and 7 inform us that Dc 1 and Dc5 have solutions that are non-dominated by other decoding methods. The Dc3 that is decoding based on the maximum sugarcane yield seems worst, since most of its solutions in the PF are dominated by most solutions of other decoding methods.


                           Table 8
                            shows the sum of 
                              
                                 
                                    C
                                    ˜
                                 
                                 
                                    (
                                    A
                                    ,
                                    B
                                    )
                                 
                              
                            in three replications when comparing between two different methods of movement strategy in each decoding. According to the comparison of each movement strategy as shown in Tables 8 and 9
                           
                           , therefore, inform us that Ms5 and Ms7 have the solutions that are non-dominated by other decoding methods. This can be explained by the existence of a delicate balance to maintain between exploitation (local search) and exploration (global search) by applying a mixture of particles with different movement behaviors. Moreover, the performance test in the different decoding methods indicates that the two best decoding methods Dc1 and Dc5 have good performance when applying the Ms7 (see Table 9). Even so, Dc1 has overall performance better than Dc, as the results show in Table 7. However, when we focus on the results that use MS7 in the decoding methods Dc1 and Dc5 (Fig. 14
                           ), it found that all solutions in Dc5 are non-dominated by any solution in another decoding method, while some solutions in Dc1 are dominated by some solutions in Dc5. The results in Table 7 and Fig. 14 show that the four decoding methods; Dc1: Based-ROV, Dc2: Based-minimum distance, Dc3: Based maximum sugarcane yield or CCS, Dc4: Based maximum ratio between sugarcane yield and distance can be ranked from the best performance to the worst performance as Dc1>Dc4>Dc2>Dc3. Therefore, we assign the Dc5(a) with the ratio of particles to use Dc1:Dc2:Dc3:Dc4 equal to 50:50:50:50, while Dc5(b) is assigned with the ratio of particles to use Dc1:Dc2:Dc3:Dc4 equal to 170:10:5:15 and also compare with Dc1. The result are shown in Fig. 15
                           
                            indicates that all of the solutions in Dc5(b) are non-dominated by solutions in Dc1 and Dc5(a).

In order to evaluate the performance of the proposed method, it was compared with well-known methods such as NSGA-II and the traditional MOPSO. Table 10 gives the details of five test problems. The MOPSO parameters used in this experiment are shown in Table 11
                           . Table 12
                            shows the comparison results between the proposed method and GLNPSO_SP, NSGA-II, and MOPSO with giant tour decoding or GLNPSO_Giant. It is noted that P, G, and R are represented for MOPSO with splitting point decoding, NSGA-II, and MOPSO with giant tour decoding correspondingly. As can be seen in Table 12, MOPSO with splitting point decoding outperforms NSGA-II and MOPSO with giant tour decoding in most cases. MOPSO obtains lower value of 
                              
                                 C
                                 ˜
                              
                            metric than NSGA-II and MOPSO with giant tour decoding for all instances. Fig. 16 shows the non-dominated solutions of five problem tests.

@&#CONCLUSIONS@&#

This study presents an application of the MO-GLNPSO algorithm for solving MHRP of sugarcane field operations with accessibility constraints, with the objective to simultaneously minimize distance and maximize total sugarcane yield. The MO-GLNPSO framework uses an elite group to store solutions and utilizes those solutions as the guidance for particle movement. A single swarm with a mixture of four groups of particles with different movement strategies is adopted to search for a PF. MO-GLNPSO with the new encoding/decoding scheme, called GLNPSO_SP, was proposed to find a solution to the model, which offer a decision maker a choice of trade-off solutions, providing sufficient options to give planners the power to make an informed choice that balances the important objectives In order to evaluate the capability of the algorithms (proposed GLNPSO, PSO and GA) in achieving optimal or near optimal value, the sugarcane MHRP model will be validated by comparing the optimal solution obtained in each individual objective function. It is observed that proposed GLNPSO outperforms other algorithm. Moreover, the result indicates that the proposed GLNPSO yielded better solutions than the current practice. The solutions found in this work leading to potential cost savings versus schedules produced manually by the mill officer. A measure based on the set coverage concepts as the 
                        
                           C
                           ˜
                        
                      metric indicator was also applied to illustrate the quality of the non-dominated solution sets obtained by (1) comparing in the different decoding methods (2) comparing in the different movement strategies, and (3) comparing in the different methods (proposed GLNPSO_SP, GLNPSO_Giant and NSGA-II. The results show that the proposed GLNPSO_SP outperforms other algorithm, in the terms of values of the 
                        
                           C
                           ˜
                        
                      metric indicators. Finally, we propose some suggestions that were not considered in this paper but can be regarded in future research. For example, the dynamic graph approach by automatically updating an existing structure after some modifications (after harvested in each period) were not taken into account in this problem, in order to obtain the global path planning entire the sugarcane harvesting season.

@&#ACKNOWLEDGMENTS@&#

This research was supported by the Thailand Research Fund and Research Unit on System Modeling for Industry, Khon Kaen University, Thailand (Grant no. SMI.KKU 1/2559).

@&#REFERENCES@&#

