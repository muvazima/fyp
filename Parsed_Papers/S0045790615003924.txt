@&#MAIN-TITLE@&#Digital hardware implementation of a radial basis function neural network

@&#HIGHLIGHTS@&#


               

               
                  
                     
                        
                           
                           A high accuracy method to compute the Gaussian function in the radial basis function neural network (RBF NN) is proposed.


                        
                        
                           
                           The computational accuracy of the propose method in the Gaussian function and the overall RBF NN can reach up10−6–10−7.


                        
                        
                           
                           Fast computational ability for a complicated RNF NN is presented by using the digital hardware implementation.


                        
                        
                           
                           Succeed in making the co-simulation environment between Simulink and ModelSim to verify the correctness and the effectiveness of the VHDL (Very high-speed IC Hardware Description Language) code for a 3-5-1 RBF NN.


                        
                        
                           
                           The application of the VHDL code for a 3-5-1 RBF NN to the dynamic identification in the linear system and the PMSM drive system are successfully demonstrated.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Radial basis function neural network (RBF NN)

Stochastic gradient descent (SGD)

Very high-speed IC hardware description language (VHDL)

Simulink and ModelSim co-simulation

Electronic design automation (EDA)

Permanent magnet synchronous motor (PMSM) drive

@&#ABSTRACT@&#


               Graphical abstract
               
                  
                     
                        
                           Image, graphical abstract
                           
                        
                     
                  
               
            

@&#INTRODUCTION@&#

Differing from other conventional computing, neural networks have the capability of capturing unnecessarily deterministic nonlinear and take the advantages of the fast, highly accurate computation for the non-parametric model. Radial basis function (RBF) becomes a very powerful tool in neural network architecture due to its faster learning and higher nonlinear activated function used in hidden layer, compared with back propagation topology [1]. In particular, RBF neural networks process the information responds to inputs according to a defined learning rule and then the trained network can be used to perform certain tasks depending on the application. Many certain problems such as human face recognition [2], functional approximation, nonlinear system identification, motor control [3] etc. are considered to solve in the practical applications of neural networks. Due to their vigorous approximation properties, RBF neural networks can present a good mapping on the complex models [4].

The RBF NN is specified by a three-layer with a simple topology, where the hidden unit implements a radial basis activated function. These networks have a good ability to identify or approximate the function of unconventional systems with the given set of inputs and their corresponding outputs. To fit the network outputs to the given inputs, the networks need to be trained to optimize their parameters. If the parameters of the RBF are fixed, in other words, the position of neurons and the “bell curve” of exponential function could not be changed, the RBF effectiveness reduces gradually to the linear problem solving. To cover the highly nonlinear problems, the sufficient learning algorithm that allows modifying the parameters of RBF neural network [5] is introduced, called a stochastic gradient descent (SGD) method. The SGD [6] method is a popular algorithm for training a wide range of models by following the negative gradient of the objective after using only a single or a few training examples and computes the next updated parameters at each iteration. It tends to converge very well to global optima when the objective function is convex or pseudo convex, otherwise converge to local optima [7]. Therefore, its adaptability due to the ability of adjustable network parameters may lead to improving the accuracy and the stability of approximations.

As the preliminary survey on several papers, some studies give the various methods for the implementation of artificial neural networks (ANN) in a digital system. One of the basic problems in the research [8–10] is how to implement the ANN in fixed-point arithmetic as well as floating point behavior due to the nonlinear characteristic of exponential activation functions and perform the good responses undergoing the associated training algorithm for the particular task. Although the floating point number formats are more precise in computation [11–13] but they spend much hardware resources in the FPGA (Field programmable gate array) than the fixed-point number formats. To solve this problem, a 32-bit Q24 fixed-point number is firstly adopted to reduce the hardware resources and still assure high numerical accuracy. The next, this work proposes an efficient algorithm by combining the Taylor series expansion and a look-up table (LUT) to calculate the exponential activation function in RBF NN. For a 32-bit Q24 numerical type, the 24-bit length in the fraction part (Q24) can make the RNF NN or nonlinear Gaussian function have a good numerical precision. Although the range of the integer part (8-bit) is only between +127 to –128, it still can cover the data operation to avoid the numerical overflow condition occurred if the normalized/de-normalized operation in input/output data is applied.

In realization, to speed up the computing performance of RBF NN, FPGA [14–16] gives the best solution for this application due to its characteristics of the programmable hard-wired feature, fast computation power, higher density, etc. However, to describe the behavior of computing the RBF NN in FPGA implementation, VHDL, and Open computing language (OpenCL) [17–19] provide two possible programming tools. VHDL uses in electronic design automation (EDA) to describe digital and mixed-signal systems such as FPGA and integrated circuits [20]. VHDL can also be used as a general purpose parallel programming language. OpenCL is a framework for writing programs that execute across heterogeneous platforms consisting of central processing units (CPUs), graphics processing units (GPUs), digital signal processors (DSPs), FPGAs and other processors [20]. OpenCL provides parallel computing using task-based and data-based parallelism. In this study, VHDL is adopted to describe the behavior of computing the RBF NN, and finite state machine (FSM) is applied. Due to the FSM belongs to the sequential processing method; the FPGA resources usage can be greatly reduced.

Recently, a co-simulation work by electronic design automation (EDA) Simulator Link has been applied to verify the effectiveness of the VHDL code in a digital system [21]. The EDA Simulator Link provides a co-simulation interface between Simulink and ModelSim [22]. This work intends to verify the performance of RBF NN function in a co-simulation work constructed by Simulink and ModelSim based on EDA simulator link. This sufficient correlative tools strongly provide the obvious results for comparing with the floating point results in Matlab. Therefore, in this paper, a co-simulation by EDA Simulator Link is applied to design and verify the proposed computation algorithm for RBF NN. The input stimuli and output results are performed in Simulink and the algorithm to compute the RBF NN is executed in ModelSim.

The remainder of this paper is organized as follows: Section 2 introduces the architecture of RNF NN with SGD-based learning mechanism. Section 3 describes the digital hardware implementation of RBF NN. Section 4 illustrates the simulation results to evaluate the performance of the proposed method. Section 5 gives a summary of the contribution in this work.

This section aims to give a brief introduction of the structure and specifically orient to the mathematical analysis of RBF NN [23]. However, the RBF NN adopted here is a three-layer architecture that is shown in Fig. 1
                     . It comprises of one input layer, one hidden layer, one output layer and one supervising learning machine using stochastic gradient descent method.

In neural architecture, the input layer is mapped on hidden layer via the nonlinear activated function or radial basis functions (known as neurons), whereas the connection from the hidden layer to output layer performs a linear transformation. The input layer has n
                     1 inputs by x
                     1, 
                        
                           
                              x
                              2
                           
                           ,
                           …
                           ,
                           
                              x
                              
                                 n
                                 1
                              
                           
                        
                     and its vector form is represented by

                        
                           (1)
                           
                              
                                 X
                                 =
                                 
                                    
                                       [
                                       
                                          x
                                          1
                                       
                                       
                                       
                                          x
                                          2
                                       
                                       …
                                       
                                          x
                                          
                                             n
                                             1
                                          
                                       
                                       ]
                                    
                                    T
                                 
                              
                           
                        
                     
                  

In hidden layer, the multivariate Gaussian function is chosen as the activated function, and its formulation is shown as follows.

                        
                           (2)
                           
                              
                                 
                                    φ
                                    i
                                 
                                 =
                                 exp
                                 
                                    (
                                    
                                       −
                                       
                                          
                                             
                                                
                                                   ∥
                                                   
                                                      X
                                                      −
                                                      
                                                         C
                                                         i
                                                      
                                                   
                                                   ∥
                                                
                                             
                                             2
                                          
                                          
                                             2
                                             
                                                σ
                                                i
                                                2
                                             
                                          
                                       
                                    
                                    )
                                 
                                 ,
                                 
                                 i
                                 =
                                 1
                                 ,
                                 2
                                 ,
                                 …
                                 ,
                                 
                                    n
                                    2
                                 
                              
                           
                        
                     where n
                     2 is the number of neuron in hidden layer, 
                        
                           
                              C
                              i
                           
                           =
                           
                              
                                 [
                                 
                                    c
                                    
                                       i
                                       1
                                    
                                 
                                 
                                 
                                    c
                                    
                                       i
                                       2
                                    
                                 
                                 …
                                 
                                    c
                                    
                                       i
                                       
                                          n
                                          1
                                       
                                    
                                 
                                 ]
                              
                              T
                           
                        
                     ,σi
                      denote the node center of radial basis function and node variance (or width) of ith neuron, and 
                        
                           
                              ∥
                           
                           
                              X
                              −
                              
                                 C
                                 i
                              
                           
                           
                              ∥
                           
                        
                      is the norm value (Euclidean distance) which is measured by the inputs and the node center at each neuron. Finally, the network output in Fig. 1 can be written as

                        
                           (3)
                           
                              
                                 
                                    y
                                    j
                                 
                                 =
                                 
                                    ∑
                                    
                                       i
                                       =
                                       1
                                    
                                    
                                       n
                                       2
                                    
                                 
                                 
                                    
                                       w
                                       
                                          j
                                          i
                                       
                                    
                                    
                                       φ
                                       i
                                    
                                 
                                 ,
                                 
                                 j
                                 =
                                 1
                                 ,
                                 2
                                 ,
                                 …
                                 ,
                                 
                                    n
                                    3
                                 
                              
                           
                        
                     where yj
                      is the jth output value, wji
                      is the weight from the jth output to the ith neuron, φ
                        i
                      is the output of the ith neuron, and n
                     3 is the output number.

In RBF NN, learning algorithm plays an important role for determining the optimal cost function that lets the specified error between the output of the neural network and the desired output become minimize. The learning algorithm herein is based on the stochastic gradient descent (SGD) method that has an advantage of being faster computation than the others. This approach is for training RBF NN by tuning the network's parameters, such as the weights, node centers and node variances of the radial basis function, to get a good convergence. For the SGD-based supervised learning process, the error instantaneous cost function is firstly defined as

                        
                           (4)
                           
                              
                                 J
                                 =
                                 
                                    1
                                    2
                                 
                                 
                                    ∑
                                    
                                       j
                                       =
                                       1
                                    
                                    
                                       n
                                       3
                                    
                                 
                                 
                                    e
                                    j
                                    2
                                 
                                 =
                                 
                                    1
                                    2
                                 
                                 
                                    ∑
                                    
                                       j
                                       =
                                       1
                                    
                                    
                                       n
                                       3
                                    
                                 
                                 
                                    
                                       (
                                       
                                          y
                                          
                                             j
                                             d
                                          
                                       
                                       −
                                       
                                          y
                                          j
                                       
                                       )
                                    
                                    2
                                 
                              
                           
                        
                     where the error ej
                      is the difference between the desired output yjd
                      and the jth output yj
                      in RNF NN. Secondly, the updated equations for the parameters of RBF NN based on SGD method are given by

                        
                           (5)
                           
                              
                                 
                                    w
                                    
                                       j
                                       i
                                    
                                 
                                 
                                    (
                                    k
                                    +
                                    1
                                    )
                                 
                                 =
                                 
                                    w
                                    
                                       j
                                       i
                                    
                                 
                                 
                                    (
                                    k
                                    )
                                 
                                 −
                                 
                                    μ
                                    w
                                 
                                 
                                    
                                       ∂
                                       J
                                    
                                    
                                       ∂
                                       
                                          w
                                          
                                             j
                                             i
                                          
                                       
                                       
                                          (
                                          k
                                          )
                                       
                                    
                                 
                                 ,
                                 
                                 i
                                 =
                                 1
                                 ,
                                 2
                                 ,
                                 …
                                 ,
                                 
                                    n
                                    2
                                 
                                 
                                    
                                    and
                                    
                                 
                                 j
                                 =
                                 1
                                 ,
                                 2
                                 ,
                                 …
                                 ,
                                 
                                    n
                                    3
                                 
                              
                           
                        
                     
                     
                        
                           (6)
                           
                              
                                 
                                    c
                                    
                                       i
                                       r
                                    
                                 
                                 
                                    (
                                    k
                                    +
                                    1
                                    )
                                 
                                 =
                                 
                                    c
                                    
                                       i
                                       r
                                    
                                 
                                 
                                    (
                                    k
                                    )
                                 
                                 −
                                 
                                    μ
                                    c
                                 
                                 
                                    
                                       ∂
                                       J
                                    
                                    
                                       ∂
                                       
                                          c
                                          
                                             i
                                             r
                                          
                                       
                                       
                                          (
                                          k
                                          )
                                       
                                    
                                 
                                 ,
                                 
                                 i
                                 =
                                 1
                                 ,
                                 2
                                 ,
                                 …
                                 ,
                                 
                                    n
                                    2
                                 
                                 
                                    
                                    and
                                    
                                 
                                 r
                                 =
                                 1
                                 ,
                                 2
                                 ,
                                 …
                                 ,
                                 
                                    n
                                    1
                                 
                              
                           
                        
                     
                     
                        
                           (7)
                           
                              
                                 
                                    σ
                                    i
                                 
                                 
                                    (
                                    k
                                    +
                                    1
                                    )
                                 
                                 =
                                 
                                    σ
                                    i
                                 
                                 
                                    (
                                    k
                                    )
                                 
                                 −
                                 
                                    μ
                                    σ
                                 
                                 
                                    
                                       ∂
                                       J
                                    
                                    
                                       ∂
                                       
                                          σ
                                          i
                                       
                                       
                                          (
                                          k
                                          )
                                       
                                    
                                 
                                 ,
                                 
                                 i
                                 =
                                 1
                                 ,
                                 2
                                 ,
                                 …
                                 ,
                                 
                                    n
                                    2
                                 
                              
                           
                        
                     where μw,μc,μσ
                      are the learning rate. Thirdly, applying the chain rule,

                        
                           (8)
                           
                              
                                 
                                    
                                       ∂
                                       J
                                    
                                    
                                       ∂
                                       
                                          w
                                          
                                             j
                                             i
                                          
                                       
                                    
                                 
                                 =
                                 
                                    
                                       ∂
                                       J
                                    
                                    
                                       ∂
                                       
                                          e
                                          j
                                       
                                    
                                 
                                 
                                    
                                       ∂
                                       
                                          e
                                          j
                                       
                                    
                                    
                                       ∂
                                       
                                          y
                                          j
                                       
                                    
                                 
                                 
                                    
                                       ∂
                                       
                                          y
                                          j
                                       
                                    
                                    
                                       ∂
                                       
                                          w
                                          
                                             j
                                             i
                                          
                                       
                                    
                                 
                              
                           
                        
                     
                     
                        
                           (9)
                           
                              
                                 
                                    
                                       ∂
                                       J
                                    
                                    
                                       ∂
                                       
                                          c
                                          
                                             i
                                             r
                                          
                                       
                                    
                                 
                                 =
                                 
                                    ∑
                                    
                                       j
                                       =
                                       1
                                    
                                    
                                       n
                                       3
                                    
                                 
                                 
                                    (
                                    
                                       
                                          ∂
                                          J
                                       
                                       
                                          ∂
                                          
                                             e
                                             j
                                          
                                       
                                    
                                    
                                       
                                          ∂
                                          
                                             e
                                             j
                                          
                                       
                                       
                                          ∂
                                          
                                             y
                                             j
                                          
                                       
                                    
                                    
                                       
                                          ∂
                                          
                                             y
                                             j
                                          
                                       
                                       
                                          ∂
                                          
                                             φ
                                             i
                                          
                                       
                                    
                                    )
                                 
                                 
                                    
                                       ∂
                                       
                                          φ
                                          i
                                       
                                    
                                    
                                       ∂
                                       
                                          c
                                          
                                             i
                                             r
                                          
                                       
                                    
                                 
                              
                           
                        
                     
                     
                        
                           (10)
                           
                              
                                 
                                    
                                       ∂
                                       J
                                    
                                    
                                       ∂
                                       
                                          σ
                                          i
                                       
                                    
                                 
                                 =
                                 
                                    ∑
                                    
                                       j
                                       =
                                       1
                                    
                                    
                                       n
                                       3
                                    
                                 
                                 
                                    (
                                    
                                       
                                          ∂
                                          J
                                       
                                       
                                          ∂
                                          
                                             e
                                             j
                                          
                                       
                                    
                                    
                                       
                                          ∂
                                          
                                             e
                                             j
                                          
                                       
                                       
                                          ∂
                                          
                                             y
                                             j
                                          
                                       
                                    
                                    
                                       
                                          ∂
                                          
                                             y
                                             j
                                          
                                       
                                       
                                          ∂
                                          
                                             φ
                                             i
                                          
                                       
                                    
                                    )
                                 
                                 
                                    
                                       ∂
                                       
                                          φ
                                          i
                                       
                                    
                                    
                                       ∂
                                       
                                          σ
                                          i
                                       
                                    
                                 
                              
                           
                        
                     
                  

Furthermore, from (3) and (4), we can get

                        
                           (11)
                           
                              
                                 
                                    
                                       ∂
                                       J
                                    
                                    
                                       ∂
                                       
                                          e
                                          j
                                       
                                    
                                 
                                 
                                    
                                       ∂
                                       
                                          e
                                          j
                                       
                                    
                                    
                                       ∂
                                       
                                          y
                                          j
                                       
                                    
                                 
                                 
                                    
                                       ∂
                                       
                                          y
                                          j
                                       
                                    
                                    
                                       ∂
                                       
                                          w
                                          
                                             j
                                             i
                                          
                                       
                                    
                                 
                                 =
                                 −
                                 
                                    e
                                    j
                                 
                                 
                                    φ
                                    i
                                 
                              
                           
                        
                     
                  

and

                        
                           (12)
                           
                              
                                 
                                    
                                       ∂
                                       J
                                    
                                    
                                       ∂
                                       
                                          e
                                          j
                                       
                                    
                                 
                                 
                                    
                                       ∂
                                       
                                          e
                                          j
                                       
                                    
                                    
                                       ∂
                                       
                                          y
                                          j
                                       
                                    
                                 
                                 
                                    
                                       ∂
                                       
                                          y
                                          j
                                       
                                    
                                    
                                       ∂
                                       
                                          φ
                                          i
                                       
                                    
                                 
                                 =
                                 −
                                 
                                    e
                                    j
                                 
                                 
                                    w
                                    
                                       j
                                       i
                                    
                                 
                              
                           
                        
                     
                  

Also, from (2), it can be obtained

                        
                           (13)
                           
                              
                                 
                                    
                                       ∂
                                       
                                          φ
                                          i
                                       
                                    
                                    
                                       ∂
                                       
                                          c
                                          
                                             i
                                             r
                                          
                                       
                                    
                                 
                                 =
                                 
                                    φ
                                    i
                                 
                                 
                                    
                                       
                                          x
                                          r
                                       
                                       −
                                       
                                          c
                                          
                                             i
                                             r
                                          
                                       
                                    
                                    
                                       σ
                                       i
                                       2
                                    
                                 
                              
                           
                        
                     
                  

and

                        
                           (14)
                           
                              
                                 
                                    
                                       ∂
                                       
                                          φ
                                          i
                                       
                                    
                                    
                                       ∂
                                       
                                          σ
                                          i
                                       
                                    
                                 
                                 =
                                 
                                    φ
                                    i
                                 
                                 
                                    
                                       
                                          
                                             ∥
                                             
                                                X
                                                −
                                                
                                                   C
                                                   i
                                                
                                             
                                             ∥
                                          
                                       
                                       2
                                    
                                    
                                       σ
                                       i
                                       3
                                    
                                 
                              
                           
                        
                     
                  

Finally, substituting (11)–(14) into (8)–(10) then into (5)–(7), the updated equations for the parameters of the weights, node centers and node variances in RBF NN can be shown as follows

                        
                           (15)
                           
                              
                                 
                                    w
                                    
                                       j
                                       i
                                    
                                 
                                 
                                    (
                                    k
                                    +
                                    1
                                    )
                                 
                                 =
                                 
                                    w
                                    
                                       j
                                       i
                                    
                                 
                                 
                                    (
                                    k
                                    )
                                 
                                 +
                                 μ
                                 
                                    e
                                    j
                                 
                                 
                                    φ
                                    i
                                 
                                 ,
                                 
                                 i
                                 =
                                 1
                                 ,
                                 2
                                 ,
                                 …
                                 ,
                                 
                                    n
                                    2
                                 
                                 
                                    
                                    and
                                    
                                 
                                 j
                                 =
                                 1
                                 ,
                                 2
                                 ,
                                 …
                                 ,
                                 
                                    n
                                    3
                                 
                              
                           
                        
                     
                     
                        
                           (16)
                           
                              
                                 
                                    c
                                    
                                       i
                                       r
                                    
                                 
                                 
                                    (
                                    k
                                    +
                                    1
                                    )
                                 
                                 =
                                 
                                    c
                                    
                                       i
                                       r
                                    
                                 
                                 
                                    (
                                    k
                                    )
                                 
                                 +
                                 μ
                                 
                                    (
                                    
                                       
                                          ∑
                                          
                                             j
                                             =
                                             1
                                          
                                          
                                             n
                                             3
                                          
                                       
                                       
                                          
                                             e
                                             j
                                          
                                          
                                             w
                                             
                                                j
                                                i
                                             
                                          
                                          
                                             φ
                                             i
                                          
                                          
                                             
                                                
                                                   x
                                                   r
                                                
                                                −
                                                
                                                   c
                                                   
                                                      i
                                                      r
                                                   
                                                
                                                
                                                   (
                                                   k
                                                   )
                                                
                                             
                                             
                                                σ
                                                i
                                                2
                                             
                                          
                                       
                                    
                                    )
                                 
                                 ,
                                 
                                 i
                                 =
                                 1
                                 ,
                                 2
                                 ,
                                 …
                                 ,
                                 
                                    n
                                    2
                                 
                                 
                                    
                                    and
                                    
                                 
                                 r
                                 =
                                 1
                                 ,
                                 2
                                 ,
                                 …
                                 ,
                                 
                                    n
                                    1
                                 
                              
                           
                        
                     
                     
                        
                           (17)
                           
                              
                                 
                                    σ
                                    i
                                 
                                 
                                    (
                                    k
                                    +
                                    1
                                    )
                                 
                                 =
                                 
                                    σ
                                    i
                                 
                                 
                                    (
                                    k
                                    )
                                 
                                 +
                                 μ
                                 
                                    (
                                    
                                       
                                          ∑
                                          
                                             j
                                             =
                                             1
                                          
                                          
                                             n
                                             3
                                          
                                       
                                       
                                          
                                             e
                                             j
                                          
                                          
                                             w
                                             
                                                j
                                                i
                                             
                                          
                                          
                                             )
                                          
                                          
                                             φ
                                             i
                                          
                                          
                                             
                                                
                                                   
                                                      ∥
                                                      
                                                         X
                                                         −
                                                         
                                                            C
                                                            i
                                                         
                                                      
                                                      ∥
                                                   
                                                
                                                2
                                             
                                             
                                                
                                                   σ
                                                   i
                                                   3
                                                
                                                
                                                   (
                                                   k
                                                   )
                                                
                                             
                                          
                                       
                                    
                                    )
                                 
                                 ,
                                 
                                 i
                                 =
                                 1
                                 ,
                                 2
                                 ,
                                 …
                                 ,
                                 
                                    n
                                    2
                                 
                              
                           
                        
                     where 
                        
                           μ
                           =
                           
                              μ
                              w
                           
                           =
                           
                              μ
                              c
                           
                           =
                           
                              μ
                              σ
                           
                        
                      is a learning rate.

This section shows a detailed digital hardware implementation of RBF NN. However, we firstly introduce the concept of finite state machine (FSM). Then use FSM to design the RBF NN.

To reduce the use of the FPGA resource, FSM is adopted to describe the complicated control algorithm. Herein, the computation of a sum of product (SOP) shown below is considered as a case study to present the advantage of FSM.

                           
                              (18)
                              
                                 
                                    Y
                                    =
                                    
                                       a
                                       1
                                    
                                    *
                                    
                                       x
                                       1
                                    
                                    +
                                    
                                       a
                                       2
                                    
                                    *
                                    
                                       x
                                       2
                                    
                                    +
                                    
                                       a
                                       3
                                    
                                    *
                                    
                                       x
                                       3
                                    
                                 
                              
                           
                        
                     

Two kinds of the design method that one is parallel processing method and the other is FSM method are introduced to realize the computation of SOP. In the former method, the designed SOP circuit is shown in Fig. 2(
                        a), and it will operate continuously and simultaneously. The circuit needs two adders and three multipliers, but only one clock time can complete the overall computation. Although the parallel processing method has fast computation ability, it consumes much more FPGA resources. To reduce the resource usage in FPGA, the designed SOP circuit adopted by using the FSM method is proposed and shown in Fig. 2(b), which uses one adder, one multiplier and manipulates 5 steps (or 5 clocks time) machine to carry out the overall computation of SOP. Although the FSM method needs more operation time (if one clock time is 20ns, the 5 clocks needs 0.1 microseconds) than the parallel processing method in executing SOP circuit, it does not lose any computation power. Therefore, the more complicated computation in the algorithm, the more FPGA resources can have economized if the FSM is applied. Further, VHDL code with 32-bit Q24 data type to implement the computation of SOP is shown in Fig. 3.
                        
                     

The random selection of the number of neurons in hidden layer might cause either overfitting or underfitting problems. However, using many neurons in the hidden layer can give much information processing capacity but increase the training time in artificial neural networks and spend many hardware resources in FPGA. There are some rules for determining the suitable number of neurons to use in the hidden layer [24], as follows:

                           
                              -
                              The number of hidden neurons should be between the size of the input layer and the size of the output layer.

The number of hidden neurons should be 2/3 the size of the input layer, plus the size of the output layer.

The number of hidden neurons should be less than twice the size of the input layer.

According to the suggestion as mentioned above, a basic scheme of a 3-5-1 RBF NN is considered as a developed example in this paper.

In realization, a 3-5-1 RBF NN with three inputs, five neurons and one output structure in Fig. 4(
                        a) is used as a designed example to evaluate the proposed method, and its corresponding digital hardware component is shown in Fig. 4(b). In this Figure, the whole network is specified by two main components. One component performs the function of the forward computation, and the other component performs the function of the learning algorithm based on SGD method. To reduce the digital hardware resource usage, a finite state machine (FSM) is employed, and VHDL is applied to model the behavior of these two components. Further, the data type adopts 32-bit length with Q24 format and 2’s complement operation in the numerical system.

In the forward computation component, the main inputs are the network inputs X, weights wji
                        , node centers Ci
                         and node variances σi
                        , as well as the outputs are the network out yi
                         and the neuron outputs φ
                           i
                        . The internal circuit design of the forward computation component in Fig. 4(b) is presented in Fig. 5
                         which uses five neuron components, two adders, and two multipliers and manipulates 25 steps machine to carry out the overall forward computation. In Fig. 3, the steps s0–s19 execute the parallel calculation of five neuron components which perform the Gaussian function in (2); and s20–s24 perform the computation of network output in (3). The operation of each step in Fig. 5 is 20 ns (50 MHz); therefore total 25 steps need only 500 ns operation time.

The neuron component in Fig. 3 performs the Gaussian function in (2). The digital hardware implementation of the Gaussian function is very complicated due to it needs to execute the exponential function. To solve this problem, the combination of Taylor series expansion technique and look-up table (LUT) technique is conduced. Firstly, the exponential formula 
                           
                              e
                              
                                 −
                                 x
                              
                           
                         is computed by using Taylor series expansion. The equation is shown as follows.

                           
                              (19)
                              
                                 
                                    f
                                    
                                       (
                                       x
                                       )
                                    
                                    =
                                    f
                                    
                                       (
                                       
                                          x
                                          0
                                       
                                       )
                                    
                                    +
                                    
                                       f
                                       ′
                                    
                                    
                                       (
                                       
                                          x
                                          0
                                       
                                       )
                                    
                                    
                                       (
                                       x
                                       −
                                       
                                          x
                                          0
                                       
                                       )
                                    
                                    +
                                    
                                       
                                          
                                             f
                                             
                                                ′
                                                ′
                                             
                                          
                                          
                                             (
                                             
                                                x
                                                0
                                             
                                             )
                                          
                                       
                                       
                                          2
                                          !
                                       
                                    
                                    
                                       
                                          (
                                          x
                                          −
                                          
                                             x
                                             0
                                          
                                          )
                                       
                                       2
                                    
                                    +
                                    
                                       
                                          
                                             f
                                             
                                                (
                                                3
                                                )
                                             
                                          
                                          
                                             (
                                             
                                                x
                                                0
                                             
                                             )
                                          
                                       
                                       
                                          3
                                          !
                                       
                                    
                                    
                                       
                                          (
                                          x
                                          −
                                          
                                             x
                                             0
                                          
                                          )
                                       
                                       3
                                    
                                    +
                                    
                                       
                                          
                                             f
                                             
                                                (
                                                4
                                                )
                                             
                                          
                                          
                                             (
                                             
                                                x
                                                0
                                             
                                             )
                                          
                                       
                                       
                                          4
                                          !
                                       
                                    
                                    
                                       
                                          (
                                          x
                                          −
                                          
                                             x
                                             0
                                          
                                          )
                                       
                                       4
                                    
                                    +
                                    
                                       
                                          
                                             f
                                             
                                                (
                                                5
                                                )
                                             
                                          
                                          
                                             (
                                             
                                                x
                                                0
                                             
                                             )
                                          
                                       
                                       
                                          5
                                          !
                                       
                                    
                                    
                                       
                                          (
                                          x
                                          −
                                          
                                             x
                                             0
                                          
                                          )
                                       
                                       5
                                    
                                    +
                                    ⋯
                                 
                              
                           
                        
                     

The fifth order polynomial equation within the vicinity of x
                        0is considered to expand as follows.

                           
                              (20)
                              
                                 
                                    f
                                    
                                       (
                                       x
                                       )
                                    
                                    =
                                    
                                       e
                                       
                                          −
                                          x
                                       
                                    
                                    ≅
                                    
                                       a
                                       0
                                    
                                    +
                                    
                                       a
                                       1
                                    
                                    
                                       (
                                       x
                                       −
                                       
                                          x
                                          0
                                       
                                       )
                                    
                                    +
                                    
                                       a
                                       2
                                    
                                    
                                       
                                          (
                                          x
                                          −
                                          
                                             x
                                             0
                                          
                                          )
                                       
                                       2
                                    
                                    +
                                    
                                       a
                                       3
                                    
                                    
                                       
                                          (
                                          x
                                          −
                                          
                                             x
                                             0
                                          
                                          )
                                       
                                       3
                                    
                                    +
                                    
                                       a
                                       4
                                    
                                    
                                       
                                          (
                                          x
                                          −
                                          
                                             x
                                             0
                                          
                                          )
                                       
                                       4
                                    
                                    +
                                    
                                       a
                                       5
                                    
                                    
                                       
                                          (
                                          x
                                          −
                                          
                                             x
                                             0
                                          
                                          )
                                       
                                       5
                                    
                                 
                              
                           
                        
                     

with

                           
                              (21)
                              
                                 
                                    
                                       a
                                       0
                                    
                                    =
                                    f
                                    
                                       (
                                       
                                          x
                                          0
                                       
                                       )
                                    
                                    =
                                    
                                       e
                                       
                                          −
                                          
                                             x
                                             0
                                          
                                       
                                    
                                 
                              
                           
                        
                        
                           
                              (22)
                              
                                 
                                    
                                       a
                                       1
                                    
                                    =
                                    
                                       f
                                       ′
                                    
                                    
                                       (
                                       
                                          x
                                          0
                                       
                                       )
                                    
                                    =
                                    −
                                    
                                       e
                                       
                                          −
                                          
                                             x
                                             0
                                          
                                       
                                    
                                 
                              
                           
                        
                        
                           
                              (23)
                              
                                 
                                    
                                       a
                                       2
                                    
                                    =
                                    
                                       f
                                       
                                          ′
                                          ′
                                       
                                    
                                    
                                       (
                                       
                                          x
                                          0
                                       
                                       )
                                    
                                    =
                                    
                                       e
                                       
                                          −
                                          
                                             x
                                             0
                                          
                                       
                                    
                                    /
                                    2
                                 
                              
                           
                        
                        
                           
                              (24)
                              
                                 
                                    
                                       a
                                       3
                                    
                                    =
                                    
                                       f
                                       
                                          (
                                          3
                                          )
                                       
                                    
                                    
                                       (
                                       
                                          x
                                          0
                                       
                                       )
                                    
                                    =
                                    −
                                    
                                       e
                                       
                                          −
                                          
                                             x
                                             0
                                          
                                       
                                    
                                    /
                                    6
                                 
                              
                           
                        
                        
                           
                              (25)
                              
                                 
                                    
                                       a
                                       4
                                    
                                    =
                                    
                                       f
                                       
                                          (
                                          4
                                          )
                                       
                                    
                                    
                                       (
                                       
                                          x
                                          0
                                       
                                       )
                                    
                                    =
                                    
                                       e
                                       
                                          −
                                          
                                             x
                                             0
                                          
                                       
                                    
                                    /
                                    24
                                 
                              
                           
                        
                        
                           
                              (26)
                              
                                 
                                    
                                       a
                                       5
                                    
                                    =
                                    
                                       f
                                       
                                          (
                                          5
                                          )
                                       
                                    
                                    
                                       (
                                       
                                          x
                                          0
                                       
                                       )
                                    
                                    =
                                    −
                                    
                                       e
                                       
                                          −
                                          
                                             x
                                             0
                                          
                                       
                                    
                                    /
                                    120
                                 
                              
                           
                        
                     

In computation, only fifth order expansion in (20) is not enough to obtain an accuracy approximation due to the reason that the large error will be occurred when the input x is far from x
                        0. Therefore, in this paper, the combination of look-up table (LUT) technique and Taylor series expansion technique is proposed. To set up the LUT, several specific values for x
                        0 within the range 1 ≤ x ≤ 0 are firstly chosen; then the parameters of a
                        0 to a
                        5 in (21) to (26) are computed. Those data included by x
                        0, a
                        0 to a
                        5 will be stored in LUT. At the next, when it needs to compute 
                           
                              e
                              
                                 −
                                 x
                              
                           
                         in (20), x
                        0 which the most approximate to input x, and the related a
                        0 to a
                        5 will be selected from LUT then perform the computing task. Secondly, under the aforementioned design method, the internal circuit design of the neuron component in Fig. 5 is shown in Fig. 6
                         which uses two adders, two multipliers, one divider, seven look-up tables and manipulates 20 steps machine to carry out the overall computation. The computation equations to design the circuit in Fig. 6 are listed in (2) and (20) to (26). However, total 20 steps need 400 ns operation time for computing the Gaussian function in (2).

In the learning algorithm component in Fig. 4(b), the main inputs are previous weight wji
                        (k), previous node centers Ci
                        (k), previous node variances σi
                        (k), learning rate μ, error ej
                         and the neuron outputs φ
                           i
                         as well as the outputs are the current weight 
                           
                              
                                 w
                                 
                                    j
                                    i
                                 
                              
                              
                                 (
                                 k
                                 +
                                 1
                                 )
                              
                           
                        , current node centers 
                           
                              
                                 C
                                 i
                              
                              
                                 (
                                 k
                                 +
                                 1
                                 )
                              
                           
                         and current node variances 
                           
                              
                                 σ
                                 i
                              
                              
                                 (
                                 k
                                 +
                                 1
                                 )
                              
                           
                        . The internal circuit design of the learning algorithm component in Fig. 4(b) is presented in Fig. 7
                         which uses five multipliers, three adders, three dividers and manipulates 46 steps machine to carry out the overall SGD-based learning algorithm. In Fig. 7, the steps s0–s4 execute the weights update in (15); the steps s5–s28 perform the tuning of node centers in (16); the steps s27–s45 indicate the process of the perform the node variances adjustment in (17). However, total 46 steps need 920 ns operation time for computing the SGD-based learning algorithm in (15)–(17).

Furthermore, based on Altera FPGA kit (DE2-Cyclone IV– EP4CE115F29C7) which has 114,480 logic elements and 532 Embedded Multiplier 9-bit elements, the hardware resource usages in implementing the overall 3-5-1 RBF NN are listed as follows:

                           
                              (1)
                              For the forward computation component:

Total logic elements: 14,067/114,480 (12%).

Embedded Multiplier 9-bit elements: 64/532 (12%)

For the SGD learning algorithm component:

Total logic elements: 17,309/114,480 (15%).

Embedded Multiplier 9-bit elements: 40/532 (8%)

To verify the effectiveness of the proposed VHDL code of the 3-5-1 RBF NN (three inputs, five neurons, and one output) in Fig. 4(b), the co-simulation architecture by using Simulink and ModelSim is applied. In this architecture, the input stimuli and output responses are run in Simulink, and the function of the RBF NN is executed in ModelSim. However, the VHDL code of the 3-5-1 RBF NN is firstly tested, and the applications of the 3-5-1 RBF NN to the system dynamic identification (ID) in the general linear system and PMSM drive system are further evaluated.

The accuracy and performance of the forward computation function and the overall function with learning algorithm for a 3-5-1 RBF NN are separately evaluated. In the former case, the co-simulation architecture using Simulink and ModelSim is built up and shown in Fig. 8
                        . The input stimuli are generated, and output responses are displayed in Simulink, as well as the computation of the RBF NN is performed in ModelSim. Those input signals are also sent to the embedded Matlab function which executive the computation of a 3-5-1 RBF NN using the floating numerical system and the results will be sent back to Fig. 8 and further make a comparison with the output from Modelsim. To evaluate the computational accuracy, two tested cases with different weighting values are considered.

Case-1:

                           
                              (27)
                              
                                 
                                    
                                       w
                                       11
                                    
                                    =
                                    −
                                    0.23
                                    ,
                                    
                                       w
                                       12
                                    
                                    =
                                    0.35
                                    ,
                                    
                                       w
                                       13
                                    
                                    =
                                    0.65
                                    ;
                                    
                                       w
                                       14
                                    
                                    =
                                    −
                                    0.48
                                    ,
                                    
                                       w
                                       15
                                    
                                    =
                                    0.36
                                 
                              
                           
                        
                     

Case-2:

                           
                              (28)
                              
                                 
                                    
                                       w
                                       11
                                    
                                    =
                                    0.45
                                    ,
                                    
                                       w
                                       12
                                    
                                    =
                                    −
                                    0.23
                                    ,
                                    
                                       w
                                       13
                                    
                                    =
                                    0.45
                                    ;
                                    
                                       w
                                       14
                                    
                                    =
                                    0.62
                                    ,
                                    
                                       w
                                       15
                                    
                                    =
                                    −
                                    0.12
                                 
                              
                           
                        
                     

Also, the centers and variances in five neurons are set by

                           
                              (29)
                              
                                 
                                    Neuron--1
                                    :
                                    
                                       c
                                       11
                                    
                                    =
                                    0.55
                                    ,
                                    
                                       c
                                       12
                                    
                                    =
                                    −
                                    0.7
                                    ,
                                    
                                       c
                                       13
                                    
                                    =
                                    0.32
                                    ,
                                    =
                                    0.6
                                 
                              
                           
                        
                        
                           
                              (30)
                              
                                 
                                    Neuron--2
                                    :
                                    
                                       c
                                       21
                                    
                                    =
                                    0.5
                                    ,
                                    
                                       c
                                       22
                                    
                                    =
                                    0.3
                                    ,
                                    
                                       c
                                       23
                                    
                                    =
                                    −
                                    0.52
                                    ,
                                    =
                                    0.7
                                 
                              
                           
                        
                        
                           
                              (31)
                              
                                 
                                    Neuron--3
                                    :
                                    
                                       c
                                       31
                                    
                                    =
                                    0.5
                                    ,
                                    
                                       c
                                       32
                                    
                                    =
                                    0.3
                                    ,
                                    
                                       c
                                       33
                                    
                                    =
                                    0.4
                                    ,
                                    =
                                    0.65
                                 
                              
                           
                        
                        
                           
                              (32)
                              
                                 
                                    Neuron--4
                                    :
                                    
                                       c
                                       41
                                    
                                    =
                                    0.4
                                    ,
                                    
                                       c
                                       42
                                    
                                    =
                                    0.35
                                    ,
                                    
                                       c
                                       43
                                    
                                    =
                                    −
                                    0.43
                                    ,
                                    =
                                    0.8
                                 
                              
                           
                        
                        
                           
                              (33)
                              
                                 
                                    Neuron--5
                                    :
                                    
                                       c
                                       51
                                    
                                    =
                                    0.55
                                    ,
                                    
                                       c
                                       52
                                    
                                    =
                                    −
                                    0.35
                                    ,
                                    
                                       c
                                       53
                                    
                                    =
                                    0.44
                                    ,
                                    =
                                    0.85
                                 
                              
                           
                        
                     

With two selected cases in (27) and (28), the simulation results by the specific inputs are listed in Table 1
                        . This table also displays the output from Modelsim and Matlab, and the error between them. The results show that the output of y from Modelsim and y’ from Matlab is very close in these two cases. The maximum error between them is 3.422351 × 10−7. It presents that the forward computation function of the proposed VHDL code for a 3-5-1 RBF NN is correct and effective.

In the latter case, the overall function with forward computation and the learning algorithm for a 3-5-1 RBF NN in Fig. 4(b) is evaluated. The test condition is designed as follows. Constant values set the inputs, and the desired output y
                        1d
                         is varied with time. In addition, the initial parameters of RBF NN are set by a random number and the SGD learning algorithm will continuously tune those parameters according to the error of the desired output and the output of RBF NN. In this test condition, it is expected that the output of RBF NN can quickly track the desired output. Therefore, in simulation, the inputs value are set with 
                           
                              
                                 x
                                 1
                              
                              =
                              0.7
                           
                        , 
                           
                              
                                 x
                                 2
                              
                              =
                              0.8
                           
                         and 
                           
                              
                                 x
                                 3
                              
                              =
                              0.9
                           
                        , the learning rate is chosen by 0.25, and the desired output is a square wave with 10 ms period and with a varied magnitude of 0.65→1→-1→2.5→-2.5→1.5→-0.85→0.8→2→0.5. Finally, the simulation result is shown in Fig. 9
                        . It demonstrates that the output of RBF NN can not track the desired output at the initial condition, but after the parameters of RBF NN is tuned to the suitable values, it can track the desired output very well. Even the value of the desired output change, the output of RBF NN can quickly track it within 5 ms, and the steady-state tracking error can keep less than 10−6. The simulation result presents that the forward computation and the learning algorithm of the proposed VHDL code for a 3-5-1 RBF NN are correct and effective.

After confirming the correctness and effectiveness of the designed VHDL code for 3-5-1 RBF NN, we apply it to the system dynamic ID issue. Two cases with a general linear system and a PMSM drive system are tested as follows. However, choosing a suitable learning rate is not only an important but also a difficult issue because it depends on the system characteristics. In this paper, a try-and-error method is adopted to choose the learning rate in all simulation cases.

                           
                              -
                              In the first case, the 3-5-1 RBF NN is applied to identify the dynamic of a linear system and its identification block diagram is shown in Fig. 10
                                 . In the linear plant, a dynamic model [25] is determined by the follows
                                    
                                       (34)
                                       
                                          
                                             
                                                y
                                                p
                                             
                                             
                                                (
                                                k
                                                +
                                                1
                                                )
                                             
                                             =
                                             0.5
                                             
                                                y
                                                p
                                             
                                             
                                                (
                                                k
                                                )
                                             
                                             +
                                             0.3
                                             
                                                y
                                                p
                                             
                                             
                                                (
                                                k
                                                −
                                                1
                                                )
                                             
                                             +
                                             u
                                             
                                                (
                                                k
                                                )
                                             
                                          
                                       
                                    
                                 
                              

In addition, the inputs of RBF NN are the previous plant output (yp
                        (k),
                           
                              
                                 y
                                 p
                              
                              
                                 (
                                 k
                                 −
                                 1
                                 )
                              
                           
                        ) and the plant input u(k) as well as the output is the neural network output 
                           
                              
                                 y
                                 
                                    r
                                    b
                                    f
                                 
                              
                              
                                 (
                                 k
                                 +
                                 1
                                 )
                              
                           
                        . It is expected that the neural network output 
                           
                              
                                 y
                                 
                                    r
                                    b
                                    f
                                 
                              
                              
                                 (
                                 k
                                 +
                                 1
                                 )
                              
                           
                         can quickly track the current plant output 
                           
                              
                                 y
                                 p
                              
                              
                                 (
                                 k
                                 +
                                 1
                                 )
                              
                           
                         in this design. In the simulation, the input signal is firstly designed by the following equation:

                           
                              (35)
                              
                                 
                                    u
                                    
                                       (
                                       k
                                       )
                                    
                                    =
                                    
                                       1
                                       25
                                    
                                    
                                       (
                                       
                                          sin
                                          (
                                          10
                                          π
                                          k
                                          /
                                          100
                                          )
                                          +
                                          sin
                                          (
                                          25
                                          π
                                          k
                                          /
                                          100
                                          +
                                          0.5
                                          )
                                       
                                       )
                                    
                                 
                              
                           
                        
                     

Considering the different learning rate by 0.1, 0.25 and 0.5, the simulation results for the plant output and neural network output between them are shown in Fig. 11
                        . It apparently reveals that the small learning rate gives slow tracking response, but the large learning rate causes unstable tracking response with oscillation phenomenon. In addition, a mean square error (MSE) is defined in (36) which will be taken as the evaluation index for the tracking performance in the different learning rate.

                           
                              (36)
                              
                                 
                                    M
                                    S
                                    E
                                    =
                                    
                                       
                                          
                                             
                                                ∑
                                                i
                                                N
                                             
                                             
                                                
                                                   (
                                                   
                                                      y
                                                      d
                                                   
                                                   −
                                                   
                                                      y
                                                      
                                                         r
                                                         b
                                                         f
                                                      
                                                   
                                                   )
                                                
                                                2
                                             
                                          
                                          N
                                       
                                    
                                 
                              
                           
                        where N is the number of sampling data. Therefore, based on (36), the MSE in Fig. 11 are calculated by 0.064348, 0.034982 and 0.139052 for the different learning rate at 0.1, 0.25 and 0.5, respectively. It presents that the learning rate chosen by 0.25 appears better-tracking response in this case. Finally, the simulation result demonstrates that the proposed VHDL code for a 3-5-1 RBF NN can be applied well to identify the dynamic of a linear system.

                           
                              -
                              In the second case, it is considered to focus on identifying the dynamic of the PMSM drive system. The block diagram regarding as the dynamic identification of PMSM drive system [22] is shown in Fig. 12
                                  and the Simulink/ModelSim co-simulation architecture is presented in Fig. 13
                                 . The PMSM, IGBT-based inverter, and speed command are performed in Simulink, and the speed/current controllers and the identification (ID) system based on a 3-5-1 RBF NN are executed in ModelSim by three works. The work-1, work-2 and work-3 of ModelSim in Figs. 12 and 13, respectively performs the function of the PI speed controller, the function of the current controller, coordinate transformation and space vector pulse width modulation (SVPWM), as well as the function of identifying the dynamic of PMSM drive. The numerical data type in work-1 and work-2 are specified in 16-bit length with Q15 format and 2’s complement operation, but in work-3 adopts 32-bit length with Q24 format. The inputs in RBF NN are the previous rotor speed (
                                    
                                       
                                          ω
                                          r
                                       
                                       
                                          (
                                          k
                                          −
                                          1
                                          )
                                       
                                    
                                 ,
                                    
                                       
                                          ω
                                          r
                                       
                                       
                                          (
                                          k
                                          −
                                          2
                                          )
                                       
                                    
                                 ) and the current command iq
                                 (k) as well as the output is the estimated rotor speed 
                                    
                                       
                                          
                                             ω
                                             ^
                                          
                                          r
                                       
                                       
                                          (
                                          k
                                          )
                                       
                                    
                                 . In addition, the inputs to and the output from RBF NN both need to be normalized and de-normalized process that assures that the values of input and output data for RBF NN can keep within –1 to 1 and can avoid the numerical overflow condition occurred during the computation in RBF NN. Therefore, a normalized process for input data (current command) from –1.5A to 1.5A mapping to –1 to +1 is considered and a de-normalized process for output data (rotor speed) from –1 to +1 mapping to –2000 to 2000 rpm is applied. In this test condition, it is expected that the estimated rotor speed 
                                    
                                       
                                          
                                             ω
                                             ^
                                          
                                          r
                                       
                                       
                                          (
                                          k
                                          )
                                       
                                    
                                  can quickly track the current rotor speed ωr
                                 (k). In the simulation, the three works in Fig. 13 are implemented in digital hardware design using VHDL. The learning rate is chosen by 0.25. The PI controller gains designed in work-1 are chosen by 0.367 (Q15 format) and 0.0036 (Q15 format), respectively. The sampling frequency for the speed control, the current control, and the identification (ID) system are designed with 2 KHz, 16 KHz, and 16 KHz, respectively. The clocks of 50 MHz and 12.5 MHz will supply all works of ModelSim. Further, the designed PMSM parameters used in Fig. 13 are that pole pairs is 4, stator phase resistance is 1.3 Ω, stator inductance is 6.3 mH, inertia is J = 0.000054 kg*m2 and friction factor is F = 0.00065 N*m*s. When the speed command is step speed values varied from 200→400→600→400→200 rpm with the 0.05 s period, the simulation results for the rotor speed response, the output of RBF NN and the tracking error between them are shown in Fig. 14
                                 . When the speed command is a sinusoidal wave with the following equation,

                                    
                                       (37)
                                       
                                          
                                             
                                                ω
                                                r
                                                *
                                             
                                             
                                                (
                                                k
                                                )
                                             
                                             =
                                             200
                                             sin
                                             
                                                (
                                                10
                                                π
                                                
                                                   (
                                                   k
                                                   /
                                                   100
                                                   )
                                                
                                                )
                                             
                                             +
                                             350
                                             sin
                                             
                                                (
                                                10
                                                π
                                                
                                                   (
                                                   k
                                                   /
                                                   100
                                                   )
                                                
                                                +
                                                0.5
                                                )
                                             
                                          
                                       
                                    
                                 
                              

@&#CONCLUSIONS@&#

This study successfully presents a digital hardware implementation of an RBF NN with SGD-based learning mechanism and demonstrates the results of an excellent accurate and fast computation characteristic based on EDA simulation environment. The contribution of this work can be summarized as follows

                        
                           (1)
                           A high accuracy method, which combines Taylor series expansion technique and look-up table (LUT) technique to compute the Gaussian function in RBF NN, is proposed. Via to the co-simulation from the Simulink/ModelSim, the computational accuracy of the proposed method in Gaussian function and overall RBF NN can reach up10−6–10−7.

Fast computational ability for a complicated RNF NN is presented by using the digital hardware implementation. For an example, an RBF NN with three inputs, five neurons, one output and one learning mechanism structure that the computational time only needs 500 ns in performing the function of the forward computation and 920 ns in performing the function of the learning algorithm.

Succeed in making the co-simulation environment between Simulink and ModelSim verify the correctness and the effectiveness of the VHDL code for a 3-5-1 RBF NN. In addition, the application of the VHDL code for a 3-5-1 RBF NN to the dynamic ID in the linear system and the PMSM drive system are also successfully demonstrated

@&#ACKNOWLEDGMENT@&#

This work was supported by the Ministry of Science and Technology in R.O.C. under Grant no. MOST 104-3113-E-218-001.

Supplementary material associated with this article can be found, in the online version, at doi:10.1016/j.compeleceng.2015.11.017.


                     
                        
                           Image
                           application 1
                           
                        
                     
                     
                        
                           Image
                           application 2
                           
                        
                     
                     
                        
                           Image
                           application 3
                           
                        
                     
                  

@&#REFERENCES@&#

