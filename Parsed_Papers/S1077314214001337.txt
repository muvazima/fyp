@&#MAIN-TITLE@&#Exploiting local linear geometric structure for identifying correct matches

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           We focus on identifying correct matches from a set of tentative correspondences.


                        
                        
                           
                           A subset of correct matches is first obtained for identifying all correct matches.


                        
                        
                           
                           We test the method on both matching image pairs and re-ranking images.


                        
                        
                           
                           The performance of the method is satisfactory compared with the state-of-the-art.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Local geometric structure

Image matching

Image re-ranking

@&#ABSTRACT@&#


               
               
                  Selecting correct matches from a set of tentative feature point correspondences plays a vital important role in many tasks, such as structure from motion (SfM), wide baseline stereo and image search. In this paper, we propose an efficient and effective method for identifying correct matches from an initial batch of feature correspondences. The proposed method first obtains a subset of correct matches based on the assumption that the local geometric structure among a feature point and its nearest neighbors in an image cannot be easily affected by both geometric and photometric transformations, and thus should be observed in the matched images. For efficiency, we model this local geometric structure by a set of linear coefficients that reconstruct the point from its neighbors. After obtaining a portion of correct matches, we then provide two ways to accurately estimate the correctness of each match and to efficiently estimate the number of correct matches, respectively. The proposed method is evaluated on both applications including image matching and image re-ranking. Experimental results on several public datasets show that our method outperforms state-of-the-art techniques in terms of speed and accuracy.
               
            

@&#INTRODUCTION@&#

Establishing consistent point correspondences between a pair of images is important in many computer vision tasks, including structure from motion (SfM) [1–3], wide baseline stereo [4,5], and image retrieval [6,7]. For a pair of images, corresponding points are the projections of a same 3D point in a scene [8]. Though finding point correspondences across images is involved in many vision tasks, it needs to meet with different requirements. For example, image retrieval considers efficiency first, while SfM needs to obtain correct correspondences as accurate as possible. In the re-ranking phase of an image retrieval system, in order to perform geometric verification fast, the similarity between two images can be computed simply by counting the number of correct correspondences [9]. Therefore, there is no need to determine the correctness of each correspondence accurately. However, in SfM, one must use correct matches to estimate camera parameters and 3D structure, because any incorrect correspondence may lead to errors in the estimation of camera parameters and 3D structure.

Accuracy and efficiency are two aspects of an algorithm for identifying correct matches from a set of tentative correspondences. Though this problem has been extensively studied, many proposed methods focus on only one aspect, i.e., the accuracy or the efficiency. For example, RANSAC (RANdom SAmple Consensus) [10], and its variants MLESAC [11], PROSAC [12] can accurately reject mismatches by estimating a given parametric model. However, these methods often have poor performances in both of speed and accuracy when the ratios of correct matches are low. Another problem of these methods is that they cannot work if we do not know the form of the parametric model. On the other hand, many methods [9,6,13] for geometric verification in image retrieval are indeed very fast. However, the correct matches established by these methods may not be genuine correct as they only consider weak geometric constraints. Therefore it is difficult to apply these methods directly to tasks which need accurate matching.

In this paper, we propose a method that cannot only determine the correctness of each match accurately, but also estimate the number of correct matches between two images efficiently. The proposed method proceeds in two steps. In the first step, we identify correct matches by checking whether they maintain local geometric structure. Specifically, a feature point and its nearest K neighbors in an image 
                        
                           
                              
                                 I
                              
                              
                                 1
                              
                           
                        
                      formulate a local geometric structure, and if this local geometric structure is maintained among their respective points in another image 
                        
                           
                              
                                 I
                              
                              
                                 2
                              
                           
                        
                     , then these 
                        
                           K
                           +
                           1
                        
                      matches are considered to be correct; otherwise, the correctness of these 
                        
                           K
                           +
                           1
                        
                      matches is determined in the second step. We do this for each match, and then obtain a subset of correct matches after processing all matches. In the second step, we identify matches whose correctness is not sure in the first step by using the identified correct matches. In fact, the identified correct matches reflect the relationship between images 
                        
                           
                              
                                 I
                              
                              
                                 1
                              
                           
                        
                      and 
                        
                           
                              
                                 I
                              
                              
                                 2
                              
                           
                        
                     , and we use a vector valued function f to characterize this relationship. An unknown match whether it is correct or not can be identified by checking its consistency with f. Furthermore, we also provide a fast algorithm which can estimate the number of correct matches efficiently without determining the correctness of each match. Experimental results show that the proposed method is effective in identifying correct matches from tentative correspondences, and is also efficient in determining the similarity of an image pair.

Vector Field Consensus (VFC) [14] and Identifying Correspondence Function (ICF) [8] also use a function or a function pair to obtain correct matches. VFC formulates identifying correct matches as maximum a posteriori problem and uses Expectation Maximization (EM) algorithm to solve it. At each iteration, VFC needs to solve a linear system of size 
                        
                           2
                           N
                           ×
                           2
                           N
                        
                     , where N is the number of tentative correspondences. Though the method is robust to mismatches, it is extremely slow when N is large and inlier ratio is low. While our method estimates f only once by a subset of correct matches, and the experimental results show that our method can also apply to challenging image pairs with low correct match percentages. During the manuscript preparing, a sparse version of VFC, SparseVFC is proposed in [15]. At each iteration, SparseVFC estimates f with randomly selected tentative correspondences. Though SparseVFC reduces the complexity of VFC, it still needs to estimate f many times. ICF uses support vector regression to learn a correspondence function pair, and then rejects mismatches by checking whether they are consistent with the estimated correspondence function pair. Similar to VFC, ICF still needs many times of iterations to get a sound correspondence function pair, and finally obtain the set of correct matches. Furthermore, experimental results in [14] show that ICF has a much poorer performance than VFC on public datasets, while our method performs better than VFC.

The remainder of this paper is organized as follows. Section 2 briefly reviews the most significant related works available in the literature. The proposed method is presented in Section 3, and supported by the experiments in Section 4. We conclude this paper in Section 5.

@&#RELATED WORKS@&#

Many excellent works on identifying correct matches are based on local feature extraction. In this section, we will first introduce some works on interest points detection and description, and then review some works related to us.

Local feature extraction is the first step in establishing correspondences between a pair of images. It usually involves two steps, i.e. interest point detection and feature description. Feature detectors and descriptors have been reported in many works and are well reviewed in [16,17]. Among many emerging local feature detectors, Difference of Gaussian (DoG) [18], Harris corner [19], Hessian Affine [19] and Maximally Stable Extremal Regions (MSER) [5] often outperform others, and are widely used. Once the interest point is detected, a descriptor is then extracted to represent the visual appearance of the local region centered at the interest point. The highly cited and widely used feature descriptors include the Scale Invariant Feature Transform (SIFT) [18], Gradient Location and Orientation Histogram (GLOH) [17] and Speeded Up Robust Features (SURF) [20].

There are usually two categories of methods for obtaining tentative correspondences. Methods belonging to the first category directly match descriptors of interest points between a pair of images. Given a feature point 
                           
                              u
                           
                         in image 
                           
                              
                                 
                                    I
                                 
                                 
                                    1
                                 
                              
                           
                        , and a feature point 
                           
                              v
                           
                         in image 
                           
                              
                                 
                                    I
                                 
                                 
                                    2
                                 
                              
                           
                        , and denote their descriptors as 
                           
                              
                                 
                                    d
                                 
                                 
                                    u
                                 
                              
                           
                         and 
                           
                              
                                 
                                    d
                                 
                                 
                                    v
                                 
                              
                           
                        , respectively. A tentative correspondence is often computed by the following three strategies [17]: (a) threshold based matching, 
                           
                              u
                           
                         and 
                           
                              v
                           
                         are matched if the distance between their descriptors is below a threshold. (b) Nearest neighbor distance ratio matching, 
                           
                              u
                           
                         and 
                           
                              v
                           
                         are matched if 
                           
                              
                                 
                                    d
                                 
                                 
                                    v
                                 
                              
                           
                         is the nearest neighbor to 
                           
                              
                                 
                                    d
                                 
                                 
                                    u
                                 
                              
                           
                         and if the distance between them multiplied by a ratio is not greater than the distance of 
                           
                              
                                 
                                    d
                                 
                                 
                                    u
                                 
                              
                           
                         to all other descriptors in 
                           
                              
                                 
                                    I
                                 
                                 
                                    2
                                 
                              
                           
                        . (c) Nearest neighbor matching, 
                           
                              u
                           
                         and 
                           
                              v
                           
                         are initially matched if 
                           
                              
                                 
                                    d
                                 
                                 
                                    v
                                 
                              
                           
                         is the nearest neighbor to 
                           
                              
                                 
                                    d
                                 
                                 
                                    u
                                 
                              
                           
                        . Then, nearest neighbor matching starts by sorting all matches according to a similarity measure, and at each step the best match extracted from the queue is used if it does not share any common point with any previous extracted match. Although these three strategies have been often adopted, they are computationally expensive when dealing with a large corpora, and therefore they are more suitable for applications that do not involve too many images, such as 3D reconstruction and image stitching.

Methods belonging to the second category devise efficient matching algorithms [6,7,21] with an indexing structure, and are typically used in image retrieval. These algorithms generally have two steps: (a) Bag of Words (BoW) representation of images, i.e., representing each image as histograms of visual words. The idea is to use k-means [6] or alternative techniques [7,21] to cluster descriptors into a vocabulary of visual words (a visual word is the centroid of a cluster). After this step, each descriptor is quantized to a visual word, and a match means that the corresponding descriptors are quantized to a same visual word. (b) Inverted file structure [22] construction. The inverted file structure pre-computes an inverted index between individual words and the images where they occur. With this structure, one can perform matching fast. A drawback of these methods [6,7,21] is that the obtained tentative correspondences are often with low inlier ratios.

The methods for identifying correct matches or rejecting mismatches can be classified into three categories [8]: statistical robust regression methods [23–25], resampling methods [10–12,26], and case diagnostic methods [24,27,28]. A comprehensive review of these methods can be found in [8]. RANSAC [10] is widely used for mismatch removing among these methods. It selects a minimum number of random samples from a tentative correspondence set to fit a geometric model. After a number of trials, the largest consensus is selected as the set of correct matches. A survey and performance analysis on RANSAC and its descendants are presented in [29]. Despite their popularity, RANSAC like algorithms cannot be used if we do not know the form of the parametric model in advance.

Being different with the aforementioned methods, the latest methods ICF [8] and VFC [14,30] identify correct matches by learning a correspondence function pair and a vector field, respectively. Compared with ICF, VFC is more robust to mismatches. Similar to VFC, we also learn a vector valued function f for mismatch removing. The difference between our method and VFC is that, we first identify a portion of correct matches by exploiting local geometric structure and then learn f only with these identified correct matches, while VFC estimates f with all matches.

Recently, many efficient algorithms for removing mismatches have been proposed to improve the accuracy of image retrieval. By exploiting shape information in the Hessian Affine regions, Fast Spatial Matching (FSM) [21] generates hypotheses with only a single pair of corresponding feature points. By enumerating all hypotheses, FSM removes the randomness of RANSAC. Unfortunately, FSM is quadratic in the number of correspondences and therefore is not fast enough. A local spatial consistency, which requires that neighboring matches in the query image lie in a surrounding area in the retrieved image, is proposed in [6]. Weak geometric consistency on scale and orientation [9] is imposed on selecting correct matches. Based on the assumption that duplicated patches in two images share the same or very similar spatial layout, Zhou et al. [13] propose a spatial coding scheme which encodes the relative orientations between each pair of feature points in an image for geometric verification. Though methods in [9,6,13] are efficient, the obtained matches only satisfy weak geometric constraints and they may not be genuine correct. In other words, they are designed only for image retrieval task.

The proposed method first identifies a subset of correct matches by geometric structure. In fact, many works have been exploited the properties of geometric structure for different purposes. For example, SCRAMSAC [31] and GroupSAC [32] improve the performance of RANSAC by a spatial check and grouping the match set, respectively. The method in [33] describes a local affine frame by a relative location of other local affine frames in its neighborhood. Some object based image matching methods [34–36] also use different geometric information as constraints of their respective object functions.

The second step of the proposed method is somewhat similar to methods based on match propagation [37–39] as they also use a subset of matches to “densify” matches. The difference between our method and these propagation based methods is that, our method only determines the correctness of unknown matches using the identified matches and does not generate new matches, while new matches are generated in propagation based methods.

In this section, we present our method for identifying correct matches from tentative correspondences. In Section 3.1, we show how to identify a subset of correct matches with a reconstruction step (Lines 1–8, Algorithm 1). In Section 3.2, we present an accurate algorithm for identifying all correct matches. It achieves the goal with the REconstruction step presented in Section 3.1 and a Vector Valued Function and is termed REVVF. In Section 3.3, we propose a fast algorithm called REMLE which uses the REconstruction step and Maximum Likelihood Estimation to efficiently estimate the number of correct matches.

Given N tentative matches obtained from two images 
                           
                              
                                 
                                    I
                                 
                                 
                                    1
                                 
                              
                           
                         and 
                           
                              
                                 
                                    I
                                 
                                 
                                    2
                                 
                              
                           
                        , and we assume a match is comprised by a pair 
                           
                              (
                              
                                 
                                    u
                                 
                                 
                                    i
                                 
                              
                              ,
                              
                                 
                                    v
                                 
                                 
                                    i
                                 
                              
                              )
                           
                        , where 
                           
                              
                                 
                                    u
                                 
                                 
                                    i
                                 
                              
                              =
                              
                                 
                                    (
                                    
                                       
                                          x
                                       
                                       
                                          i
                                       
                                    
                                    ,
                                    
                                       
                                          y
                                       
                                       
                                          i
                                       
                                    
                                    )
                                 
                                 
                                    T
                                 
                              
                           
                         and 
                           
                              
                                 
                                    v
                                 
                                 
                                    i
                                 
                              
                              =
                              
                                 
                                    (
                                    
                                       
                                          x
                                       
                                       
                                          i
                                       
                                       
                                          ′
                                       
                                    
                                    ,
                                    
                                       
                                          y
                                       
                                       
                                          i
                                       
                                       
                                          ′
                                       
                                    
                                    )
                                 
                                 
                                    T
                                 
                              
                           
                         are positions of the two matched feature points in 
                           
                              
                                 
                                    I
                                 
                                 
                                    1
                                 
                              
                           
                         and 
                           
                              
                                 
                                    I
                                 
                                 
                                    2
                                 
                              
                           
                        , respectively. For convenience, we use a set 
                           
                              T
                           
                         to store these N matches.

For a point 
                           
                              
                                 
                                    u
                                 
                                 
                                    i
                                 
                              
                           
                        , we find its 
                           
                              K
                              (
                              K
                              ⩾
                              2
                              )
                           
                         nearest neighbors 
                           
                              
                                 
                                    u
                                 
                                 
                                    i
                                 
                                 
                                    1
                                 
                              
                              ,
                              …
                              ,
                              
                                 
                                    u
                                 
                                 
                                    i
                                 
                                 
                                    K
                                 
                              
                           
                         in image 
                           
                              
                                 
                                    I
                                 
                                 
                                    1
                                 
                              
                           
                        . Thus, 
                           
                              
                                 
                                    u
                                 
                                 
                                    i
                                 
                              
                           
                         and its K neighbors formulate a local geometric structure, and this structure can be efficiently described by linear coefficients that reconstruct 
                           
                              
                                 
                                    u
                                 
                                 
                                    i
                                 
                              
                           
                         from 
                           
                              
                                 
                                    u
                                 
                                 
                                    i
                                 
                                 
                                    1
                                 
                              
                              ,
                              …
                              ,
                              
                                 
                                    u
                                 
                                 
                                    i
                                 
                                 
                                    K
                                 
                              
                           
                        . That is,
                           
                              (1)
                              
                                 
                                    
                                       u
                                    
                                    
                                       i
                                    
                                 
                                 =
                                 
                                    
                                       
                                          ∑
                                       
                                       
                                          j
                                          =
                                          1
                                       
                                       
                                          K
                                       
                                    
                                 
                                 
                                    
                                       w
                                    
                                    
                                       ij
                                    
                                 
                                 
                                    
                                       u
                                    
                                    
                                       i
                                    
                                    
                                       j
                                    
                                 
                                 ,
                              
                           
                        where 
                           
                              
                                 
                                    w
                                 
                                 
                                    ij
                                 
                              
                           
                         is a coefficient, and can be obtained by solving the following problem
                           
                              (2a)
                              
                                 
                                    min
                                 
                                 |
                                 |
                                 
                                    
                                       u
                                    
                                    
                                       i
                                    
                                 
                                 -
                                 
                                    
                                       
                                          ∑
                                       
                                       
                                          j
                                          =
                                          1
                                       
                                       
                                          K
                                       
                                    
                                 
                                 
                                    
                                       w
                                    
                                    
                                       ij
                                    
                                 
                                 
                                    
                                       u
                                    
                                    
                                       i
                                    
                                    
                                       j
                                    
                                 
                                 |
                                 
                                    
                                       |
                                    
                                    
                                       2
                                    
                                    
                                       2
                                    
                                 
                                 ,
                              
                           
                        
                        
                           
                              (2b)
                              
                                 s
                                 .
                                 t
                                 .
                                 
                                 
                                    
                                       
                                          ∑
                                       
                                       
                                          j
                                          =
                                          1
                                       
                                       
                                          K
                                       
                                    
                                 
                                 
                                    
                                       w
                                    
                                    
                                       ij
                                    
                                 
                                 =
                                 1
                                 ,
                              
                           
                        where 
                           
                              |
                              |
                              ∗
                              |
                              
                                 
                                    |
                                 
                                 
                                    2
                                 
                              
                           
                         is the 
                           
                              
                                 
                                    L
                                 
                                 
                                    2
                                 
                              
                           
                        -norm of a vector, and in the following we use 
                           
                              |
                              |
                              ∗
                              |
                              |
                           
                         to represent 
                           
                              |
                              |
                              ∗
                              |
                              
                                 
                                    |
                                 
                                 
                                    2
                                 
                              
                           
                         for simplicity. The solution of Eq. (2) is obtained as follows: we first minimize Eq. (2a) to obtain 
                           
                              
                                 
                                    w
                                 
                                 
                                    i
                                 
                              
                              =
                              
                                 
                                    (
                                    
                                       
                                          w
                                       
                                       
                                          i
                                          1
                                       
                                    
                                    ,
                                    …
                                    ,
                                    
                                       
                                          w
                                       
                                       
                                          iK
                                       
                                    
                                    )
                                 
                                 
                                    T
                                 
                              
                           
                        , then apply the constraint of Eq. (2b) to 
                           
                              
                                 
                                    w
                                 
                                 
                                    i
                                 
                              
                           
                        . Eq. (2a) has a closed form solution for 
                           
                              K
                              =
                              2
                           
                        . The solution of Eq. (2a) is not unique, and there is a whole space of solutions for 
                           
                              K
                              ⩾
                              3
                           
                        . In practice, we use the note 7 in [40] to obtain a consistent solution. It should be noted that Eq. (1) reflects the relative location relationship among 
                           
                              
                                 
                                    u
                                 
                                 
                                    i
                                 
                              
                           
                         and 
                           
                              
                                 
                                    u
                                 
                                 
                                    i
                                 
                                 
                                    j
                                 
                              
                              (
                              j
                              =
                              1
                              ,
                              …
                              ,
                              K
                              )
                           
                        . One can prove that the local geometric structure described by Eq. (1) is invariant to rotations, re-scalings and translations of the point 
                           
                              
                                 
                                    u
                                 
                                 
                                    i
                                 
                              
                           
                         and its neighbors 
                           
                              
                                 
                                    u
                                 
                                 
                                    i
                                 
                                 
                                    j
                                 
                              
                           
                        . Similarly, we describe the relative location relationship among 
                           
                              
                                 
                                    v
                                 
                                 
                                    i
                                 
                              
                           
                         and 
                           
                              
                                 
                                    v
                                 
                                 
                                    i
                                 
                                 
                                    j
                                 
                              
                           
                         in 
                           
                              
                                 
                                    I
                                 
                                 
                                    2
                                 
                              
                           
                         by
                           
                              (3)
                              
                                 
                                    
                                       v
                                    
                                    
                                       i
                                    
                                 
                                 =
                                 
                                    
                                       
                                          ∑
                                       
                                       
                                          j
                                          =
                                          1
                                       
                                       
                                          K
                                       
                                    
                                 
                                 
                                    
                                       w
                                    
                                    
                                       ij
                                    
                                    
                                       ′
                                    
                                 
                                 
                                    
                                       v
                                    
                                    
                                       i
                                    
                                    
                                       j
                                    
                                 
                                 ,
                              
                           
                        where 
                           
                              
                                 
                                    v
                                 
                                 
                                    i
                                 
                                 
                                    j
                                 
                              
                           
                         is the location of a feature point in 
                           
                              
                                 
                                    I
                                 
                                 
                                    2
                                 
                              
                           
                         and it corresponds to 
                           
                              
                                 
                                    u
                                 
                                 
                                    i
                                 
                                 
                                    j
                                 
                              
                           
                        .

Based on that 
                           
                              
                                 
                                    u
                                 
                                 
                                    i
                                 
                                 
                                    j
                                 
                              
                              (
                              j
                              =
                              1
                              ,
                              …
                              ,
                              K
                              )
                           
                         are neighbors of 
                           
                              
                                 
                                    u
                                 
                                 
                                    i
                                 
                              
                           
                        , and the invariance of 
                           
                              
                                 
                                    w
                                 
                                 
                                    ij
                                 
                              
                           
                         to similarity transformations, we can conclude that if 
                           
                              (
                              
                                 
                                    u
                                 
                                 
                                    i
                                 
                              
                              ,
                              
                                 
                                    v
                                 
                                 
                                    i
                                 
                              
                              )
                           
                         and 
                           
                              (
                              
                                 
                                    u
                                 
                                 
                                    i
                                 
                                 
                                    j
                                 
                              
                              ,
                              
                                 
                                    v
                                 
                                 
                                    i
                                 
                                 
                                    j
                                 
                              
                              )
                           
                         are all correct, then coefficients 
                           
                              
                                 
                                    w
                                 
                                 
                                    ij
                                 
                              
                           
                         and 
                           
                              
                                 
                                    w
                                 
                                 
                                    ij
                                 
                                 
                                    ′
                                 
                              
                           
                         should be the same. However, due to noise, 
                           
                              
                                 
                                    w
                                 
                                 
                                    ij
                                 
                              
                           
                         and 
                           
                              
                                 
                                    w
                                 
                                 
                                    ij
                                 
                                 
                                    ′
                                 
                              
                           
                         cannot be equal exactly, and we use quasi-invariance [41] instead. That is,
                           
                              (4)
                              
                                 |
                                 |
                                 
                                    
                                       w
                                    
                                    
                                       i
                                    
                                 
                                 -
                                 
                                    
                                       w
                                    
                                    
                                       i
                                    
                                    
                                       ′
                                    
                                 
                                 |
                                 
                                    
                                       |
                                    
                                    
                                       2
                                    
                                 
                                 <
                                 
                                    
                                       ∊
                                    
                                    
                                       1
                                    
                                 
                                 ,
                              
                           
                        where 
                           
                              
                                 
                                    w
                                 
                                 
                                    i
                                 
                                 
                                    ′
                                 
                              
                              =
                              
                                 
                                    (
                                    
                                       
                                          w
                                       
                                       
                                          i
                                          1
                                       
                                       
                                          ′
                                       
                                    
                                    ,
                                    …
                                    ,
                                    
                                       
                                          w
                                       
                                       
                                          iK
                                       
                                       
                                          ′
                                       
                                    
                                    )
                                 
                                 
                                    T
                                 
                              
                           
                         and 
                           
                              
                                 
                                    ∊
                                 
                                 
                                    1
                                 
                              
                           
                         is a threshold. We set the predefined threshold 
                           
                              
                                 
                                    ∊
                                 
                                 
                                    1
                                 
                              
                              =
                              0.01
                              ∗
                              
                                 
                                    χ
                                 
                                 
                                    K
                                 
                                 
                                    -
                                    1
                                 
                              
                              (
                              0.99
                              )
                           
                         in the experiments, where 
                           
                              
                                 
                                    χ
                                 
                                 
                                    K
                                 
                                 
                                    -
                                    1
                                 
                              
                              (
                              ·
                              )
                           
                         is the inverse cumulative chi-square distribution with K degrees of freedom. By analogy, if Eq. (4) holds, we can safely think that matches 
                           
                              (
                              
                                 
                                    u
                                 
                                 
                                    i
                                 
                              
                              ,
                              
                                 
                                    v
                                 
                                 
                                    i
                                 
                              
                              )
                           
                         and 
                           
                              (
                              
                                 
                                    u
                                 
                                 
                                    i
                                 
                                 
                                    j
                                 
                              
                              ,
                              
                                 
                                    v
                                 
                                 
                                    i
                                 
                                 
                                    j
                                 
                              
                              )
                              (
                              j
                              =
                              1
                              ,
                              …
                              ,
                              K
                              )
                           
                         are all correct; otherwise, at least one match is false, though we do not know which match is incorrect. Fig. 1
                         illustrates the idea intuitively.

We repeat the aforementioned process until all matches 
                           
                              (
                              
                                 
                                    u
                                 
                                 
                                    i
                                 
                              
                              ,
                              
                                 
                                    v
                                 
                                 
                                    i
                                 
                              
                              )
                              (
                              i
                              =
                              1
                              ,
                              …
                              ,
                              N
                              )
                           
                         are processed. After processing all matches, the matches that satisfy Eq. (4) are collected, and we use a set 
                           
                              
                                 
                                    S
                                 
                                 
                                    0
                                 
                              
                           
                         to store them. It is easy to know that there are both positive and negative matches in set 
                           
                              T
                              -
                              
                                 
                                    S
                                 
                                 
                                    0
                                 
                              
                           
                        . We then need to identify the correctness of each match in 
                           
                              T
                              -
                              
                                 
                                    S
                                 
                                 
                                    0
                                 
                              
                           
                        , and we provide two different ways to solve this problem in Sections 3.2 and 3.3, separately.

The purpose of REVVF is to estimate the correctness of each match accurately. Without loss of generality, we assume the matches that have been collected in 
                           
                              
                                 
                                    S
                                 
                                 
                                    0
                                 
                              
                           
                         are 
                           
                              (
                              
                                 
                                    u
                                 
                                 
                                    i
                                 
                              
                              ,
                              
                                 
                                    v
                                 
                                 
                                    i
                                 
                              
                              )
                              (
                              i
                              =
                              1
                              ,
                              …
                              ,
                              n
                              )
                           
                        . Consequently, the relationship between 
                           
                              
                                 
                                    I
                                 
                                 
                                    1
                                 
                              
                           
                         and 
                           
                              
                                 
                                    I
                                 
                                 
                                    2
                                 
                              
                           
                         can be characterized by matches in 
                           
                              
                                 
                                    S
                                 
                                 
                                    0
                                 
                              
                           
                        . In fact, a correct match 
                           
                              (
                              
                                 
                                    u
                                 
                                 
                                    i
                                 
                              
                              ,
                              
                                 
                                    v
                                 
                                 
                                    i
                                 
                              
                              )
                           
                         means that there exists a function f
                        
                           1
                           If the photographed scene is a plane, then f is a homography that we are familiar with.
                        
                        
                           1
                         which maps point 
                           
                              
                                 
                                    u
                                 
                                 
                                    i
                                 
                              
                           
                         to point 
                           
                              
                                 
                                    v
                                 
                                 
                                    i
                                 
                              
                           
                        ,
                           
                              (5)
                              
                                 f
                                 (
                                 
                                    
                                       u
                                    
                                    
                                       i
                                    
                                 
                                 )
                                 =
                                 
                                    
                                       v
                                    
                                    
                                       i
                                    
                                 
                                 ,
                                 
                                 i
                                 =
                                 1
                                 ,
                                 …
                                 ,
                                 n
                                 .
                              
                           
                        In order to achieve accuracy and be robust to noise, we use the method proposed in [42] to estimate f. That is, we solve the following minimization problem
                           
                              (6)
                              
                                 
                                    
                                       
                                          min
                                       
                                       
                                          f
                                          ∈
                                          H
                                       
                                    
                                 
                                 
                                    
                                       
                                          
                                             
                                                1
                                             
                                             
                                                n
                                             
                                          
                                          
                                             
                                                
                                                   ∑
                                                
                                                
                                                   i
                                                   =
                                                   1
                                                
                                                
                                                   n
                                                
                                             
                                          
                                          |
                                          |
                                          
                                             
                                                v
                                             
                                             
                                                i
                                             
                                          
                                          -
                                          f
                                          (
                                          
                                             
                                                u
                                             
                                             
                                                i
                                             
                                          
                                          )
                                          |
                                          
                                             
                                                |
                                             
                                             
                                                2
                                             
                                          
                                          +
                                          λ
                                          |
                                          |
                                          f
                                          |
                                          
                                             
                                                |
                                             
                                             
                                                H
                                             
                                             
                                                2
                                             
                                          
                                       
                                    
                                 
                                 ,
                              
                           
                        where 
                           
                              λ
                              >
                              0
                           
                         is a regularization parameter, 
                           
                              H
                           
                         is a reproducing kernel Hilbert space (RKHS), and 
                           
                              |
                              |
                              ·
                              |
                              
                                 
                                    |
                                 
                                 
                                    H
                                 
                                 
                                    2
                                 
                              
                           
                         denotes the norm in the RKHS 
                           
                              H
                           
                        . The solution of Eq. (6) is given by 
                           
                              f
                              (
                              u
                              )
                              =
                              
                                 
                                    ∑
                                 
                                 
                                    i
                                    =
                                    1
                                 
                                 
                                    n
                                 
                              
                              Φ
                              (
                              u
                              ,
                              
                                 
                                    u
                                 
                                 
                                    i
                                 
                              
                              )
                              
                                 
                                    c
                                 
                                 
                                    i
                                 
                              
                           
                        , with coefficients 
                           
                              
                                 
                                    c
                                 
                                 
                                    i
                                 
                              
                              ∈
                              
                                 
                                    R
                                 
                                 
                                    2
                                    ×
                                    1
                                 
                              
                              (
                              i
                              =
                              1
                              ,
                              …
                              ,
                              n
                           
                        ) determined by
                           
                              (7)
                              
                                 (
                                 
                                    
                                       Γ
                                    
                                    
                                       ∼
                                    
                                 
                                 +
                                 λ
                                 n
                                 
                                    
                                       I
                                    
                                    
                                       2
                                       n
                                       ×
                                       2
                                       n
                                    
                                 
                                 )
                                 
                                    
                                       C
                                    
                                    
                                       ∼
                                    
                                 
                                 =
                                 
                                    
                                       V
                                    
                                    
                                       ∼
                                    
                                 
                                 ,
                              
                           
                        where 
                           
                              Φ
                              (
                              u
                              ,
                              
                                 
                                    u
                                 
                                 
                                    i
                                 
                              
                              )
                              ∈
                              
                                 
                                    R
                                 
                                 
                                    2
                                    ×
                                    2
                                 
                              
                           
                         is a kernel matrix, 
                           
                              
                                 
                                    Γ
                                 
                                 
                                    ∼
                                 
                              
                           
                         is an 
                           
                              n
                              ×
                              n
                           
                         block matrix with the 
                           
                              (
                              i
                              ,
                              j
                              )
                           
                        th block 
                           
                              Φ
                              (
                              
                                 
                                    u
                                 
                                 
                                    i
                                 
                              
                              ,
                              
                                 
                                    u
                                 
                                 
                                    j
                                 
                              
                              )
                           
                        , 
                           
                              
                                 
                                    C
                                 
                                 
                                    ∼
                                 
                              
                              =
                              
                                 
                                    (
                                    
                                       
                                          c
                                       
                                       
                                          1
                                       
                                       
                                          T
                                       
                                    
                                    ,
                                    
                                       
                                          c
                                       
                                       
                                          2
                                       
                                       
                                          T
                                       
                                    
                                    ,
                                    …
                                    ,
                                    
                                       
                                          c
                                       
                                       
                                          n
                                       
                                       
                                          T
                                       
                                    
                                    )
                                 
                                 
                                    T
                                 
                              
                           
                         and 
                           
                              
                                 
                                    V
                                 
                                 
                                    ∼
                                 
                              
                              =
                              
                                 
                                    (
                                    
                                       
                                          v
                                       
                                       
                                          1
                                       
                                       
                                          T
                                       
                                    
                                    ,
                                    
                                       
                                          v
                                       
                                       
                                          2
                                       
                                       
                                          T
                                       
                                    
                                    ,
                                    …
                                    ,
                                    
                                       
                                          v
                                       
                                       
                                          n
                                       
                                       
                                          T
                                       
                                    
                                    )
                                 
                                 
                                    T
                                 
                              
                           
                         are column vectors.

To solve Eq. (7) efficiently, we choose a simple diagonal kernel 
                           
                              Φ
                              (
                              
                                 
                                    u
                                 
                                 
                                    i
                                 
                              
                              ,
                              
                                 
                                    u
                                 
                                 
                                    j
                                 
                              
                              )
                              =
                              
                                 
                                    e
                                 
                                 
                                    -
                                    β
                                    |
                                    |
                                    
                                       
                                          u
                                       
                                       
                                          i
                                       
                                    
                                    -
                                    
                                       
                                          u
                                       
                                       
                                          j
                                       
                                    
                                    |
                                    
                                       
                                          |
                                       
                                       
                                          2
                                       
                                    
                                 
                              
                              
                                 
                                    I
                                 
                                 
                                    2
                                    ×
                                    2
                                 
                              
                           
                         (where 
                           
                              β
                              >
                              0
                           
                         is a scalar parameter) as our choice. With this kernel, each component of f is learned independently, which means Eq. (7) can be simplified as
                           
                              (8)
                              
                                 (
                                 Γ
                                 +
                                 λ
                                 n
                                 
                                    
                                       I
                                    
                                    
                                       n
                                       ×
                                       n
                                    
                                 
                                 )
                                 C
                                 =
                                 V
                                 ,
                              
                           
                        where 
                           
                              
                                 
                                    Γ
                                 
                                 
                                    ij
                                 
                              
                              =
                              
                                 
                                    e
                                 
                                 
                                    -
                                    β
                                    |
                                    |
                                    
                                       
                                          u
                                       
                                       
                                          i
                                       
                                    
                                    -
                                    
                                       
                                          u
                                       
                                       
                                          j
                                       
                                    
                                    |
                                    
                                       
                                          |
                                       
                                       
                                          2
                                       
                                    
                                 
                              
                           
                        , 
                           
                              C
                              =
                              
                                 
                                    (
                                    
                                       
                                          c
                                       
                                       
                                          1
                                       
                                    
                                    ,
                                    
                                       
                                          c
                                       
                                       
                                          2
                                       
                                    
                                    ,
                                    …
                                    ,
                                    
                                       
                                          c
                                       
                                       
                                          n
                                       
                                    
                                    )
                                 
                                 
                                    T
                                 
                              
                           
                        , and 
                           
                              V
                              =
                              
                                 
                                    (
                                    
                                       
                                          v
                                       
                                       
                                          1
                                       
                                    
                                    ,
                                    
                                       
                                          v
                                       
                                       
                                          2
                                       
                                    
                                    ,
                                    …
                                    ,
                                    
                                       
                                          v
                                       
                                       
                                          n
                                       
                                    
                                    )
                                 
                                 
                                    T
                                 
                              
                           
                        .

In the process of computing f, there are two parameters 
                           
                              β
                           
                         and 
                           
                              λ
                           
                         which both reflect the amount of smoothness regularization. Parameter 
                           
                              β
                           
                         determines how wide the range of interaction between feature points. Parameter 
                           
                              λ
                           
                         controls the trade off between the closeness to the data and the smoothness of the solution. A detailed description of them can be found in [43]. In practice, we find that REVVF is not sensitive to 
                           
                              β
                           
                         and 
                           
                              λ
                           
                        , and we set 
                           
                              β
                              =
                              0.01
                           
                         and 
                           
                              λ
                              =
                              
                                 
                                    10
                                 
                                 
                                    -
                                    5
                                 
                              
                           
                         in all the experiments.

In theory, correct matches should be consistent with the function f, and we use the Sampson error 
                        [44] to reflect the consistency of a match 
                           
                              (
                              
                                 
                                    u
                                 
                                 
                                    i
                                 
                              
                              ,
                              
                                 
                                    v
                                 
                                 
                                    i
                                 
                              
                              )
                           
                         with f. The Sampson error 
                        
                           
                              |
                              |
                              
                                 
                                    δ
                                 
                                 
                                    i
                                 
                                 
                                    f
                                 
                              
                              |
                              
                                 
                                    |
                                 
                                 
                                    2
                                 
                              
                           
                         of 
                           
                              (
                              
                                 
                                    u
                                 
                                 
                                    i
                                 
                              
                              ,
                              
                                 
                                    v
                                 
                                 
                                    i
                                 
                              
                              )
                           
                         is computed by
                           
                              (9)
                              
                                 |
                                 |
                                 
                                    
                                       δ
                                    
                                    
                                       i
                                    
                                    
                                       f
                                    
                                 
                                 |
                                 
                                    
                                       |
                                    
                                    
                                       2
                                    
                                 
                                 =
                                 
                                    
                                       (
                                       
                                          
                                             v
                                          
                                          
                                             i
                                          
                                       
                                       -
                                       f
                                       (
                                       
                                          
                                             u
                                          
                                          
                                             i
                                          
                                       
                                       )
                                       )
                                    
                                    
                                       T
                                    
                                 
                                 
                                    
                                       (
                                       
                                          
                                             JJ
                                          
                                          
                                             T
                                          
                                       
                                       )
                                    
                                    
                                       -
                                       1
                                    
                                 
                                 (
                                 
                                    
                                       v
                                    
                                    
                                       i
                                    
                                 
                                 -
                                 f
                                 (
                                 
                                    
                                       u
                                    
                                    
                                       i
                                    
                                 
                                 )
                                 )
                                 ,
                                 
                                 i
                                 =
                                 1
                                 ,
                                 …
                                 ,
                                 N
                                 ,
                              
                           
                        where 
                           
                              J
                              =
                              
                                 
                                    ∂
                                    (
                                    v
                                    -
                                    f
                                    (
                                    u
                                    )
                                    )
                                 
                                 
                                    ∂
                                    (
                                    x
                                    ,
                                    y
                                    ,
                                    
                                       
                                          x
                                       
                                       
                                          ′
                                       
                                    
                                    ,
                                    
                                       
                                          y
                                       
                                       
                                          ′
                                       
                                    
                                    )
                                 
                              
                              
                                 
                                    |
                                 
                                 
                                    (
                                    
                                       
                                          x
                                       
                                       
                                          i
                                       
                                    
                                    ,
                                    
                                       
                                          y
                                       
                                       
                                          i
                                       
                                    
                                    ,
                                    
                                       
                                          x
                                       
                                       
                                          i
                                       
                                       
                                          ′
                                       
                                    
                                    ,
                                    
                                       
                                          y
                                       
                                       
                                          i
                                       
                                       
                                          ′
                                       
                                    
                                    )
                                 
                              
                           
                        . In practice, we consider a typical assumption that the measurement error for correct matches is Gaussian, with zero mean and variance 
                           
                              
                                 
                                    σ
                                 
                                 
                                    2
                                 
                              
                           
                        . Thus, 
                           
                              (
                              
                                 
                                    u
                                 
                                 
                                    i
                                 
                              
                              ,
                              
                                 
                                    v
                                 
                                 
                                    i
                                 
                              
                              )
                           
                         is considered as correct if
                           
                              (10)
                              
                                 |
                                 |
                                 
                                    
                                       δ
                                    
                                    
                                       i
                                    
                                    
                                       f
                                    
                                 
                                 |
                                 
                                    
                                       |
                                    
                                    
                                       2
                                    
                                 
                                 <
                                 
                                    
                                       χ
                                    
                                    
                                       2
                                    
                                    
                                       -
                                       1
                                    
                                 
                                 (
                                 α
                                 )
                                 
                                    
                                       σ
                                    
                                    
                                       2
                                    
                                 
                                 ,
                              
                           
                        where 
                           
                              α
                           
                         is the fraction of correct matches that we want to recover and we set 
                           
                              α
                              =
                              0.99
                           
                         in all the experiments. Intuitively, we can estimate 
                           
                              
                                 
                                    σ
                                 
                                 
                                    2
                                 
                              
                              =
                              
                                 
                                    1
                                 
                                 
                                    2
                                    n
                                 
                              
                              
                                 
                                    ∑
                                 
                                 
                                    i
                                    ∈
                                    
                                       
                                          S
                                       
                                       
                                          0
                                       
                                    
                                 
                              
                              |
                              |
                              
                                 
                                    δ
                                 
                                 
                                    i
                                 
                                 
                                    f
                                 
                              
                              |
                              
                                 
                                    |
                                 
                                 
                                    2
                                 
                              
                           
                        . However, as matches in 
                           
                              
                                 
                                    S
                                 
                                 
                                    0
                                 
                              
                           
                         fit f very well, the estimated 
                           
                              
                                 
                                    σ
                                 
                                 
                                    2
                                 
                              
                           
                         with this method is often very small which leads to the recall of REVVF is not satisfactory. In practice, we estimate 
                           
                              
                                 
                                    σ
                                 
                                 
                                    2
                                 
                              
                           
                         as follows: (1) first estimate 
                           
                              
                                 
                                    σ
                                 
                                 
                                    2
                                 
                              
                              =
                              
                                 
                                    max
                                 
                                 
                                    i
                                    ∈
                                    
                                       
                                          S
                                       
                                       
                                          0
                                       
                                    
                                 
                              
                              |
                              |
                              
                                 
                                    δ
                                 
                                 
                                    i
                                 
                                 
                                    f
                                 
                              
                              |
                              
                                 
                                    |
                                 
                                 
                                    2
                                 
                              
                           
                         and then we can obtain a correct match set 
                           
                              S
                           
                         by Eq. (10); (2) reestimate 
                           
                              
                                 
                                    σ
                                 
                                 
                                    2
                                 
                              
                              =
                              
                                 
                                    1
                                 
                                 
                                    |
                                    S
                                    ⧹
                                    
                                       
                                          S
                                       
                                       
                                          0
                                       
                                    
                                    |
                                 
                              
                              
                                 
                                    ∑
                                 
                                 
                                    i
                                    ∈
                                    S
                                    ⧹
                                    
                                       
                                          S
                                       
                                       
                                          0
                                       
                                    
                                 
                              
                              |
                              |
                              
                                 
                                    δ
                                 
                                 
                                    i
                                 
                                 
                                    f
                                 
                              
                              |
                              
                                 
                                    |
                                 
                                 
                                    2
                                 
                              
                           
                         and finally determine the correct match set 
                           
                              S
                           
                        .
                           Algorithm 1
                           
                              
                                 
                                    
                                       The proposed matching method
                                    
                                    
                                       
                                       
                                          
                                             
                                                Input:
                                             
                                          
                                          
                                             
                                                the set of N tentative matches, 
                                                   
                                                      T
                                                   
                                                
                                             
                                          
                                          
                                             
                                                Output:
                                             
                                          
                                          
                                             
                                                the number of correct matches M, or the set of correct matches 
                                                   
                                                      S
                                                   
                                                
                                             
                                          
                                          
                                             
                                                Initialization:
                                             
                                          
                                          
                                             
                                                initialize 
                                                   
                                                      
                                                         
                                                            S
                                                         
                                                         
                                                            0
                                                         
                                                      
                                                      ,
                                                      S
                                                   
                                                 to be two empty sets, and let 
                                                   
                                                      L
                                                      =
                                                      0
                                                   
                                                
                                             
                                          
                                          
                                             1: for 
                                                
                                                
                                                   
                                                      i
                                                      =
                                                      1
                                                      :
                                                      N
                                                   
                                                 
                                                
                                                do
                                             
                                          
                                          
                                             2: Find K nearest neighbors 
                                                   
                                                      
                                                         
                                                            u
                                                         
                                                         
                                                            i
                                                         
                                                         
                                                            1
                                                         
                                                      
                                                      ,
                                                      …
                                                      ,
                                                      
                                                         
                                                            u
                                                         
                                                         
                                                            i
                                                         
                                                         
                                                            K
                                                         
                                                      
                                                   
                                                 of 
                                                   
                                                      
                                                         
                                                            u
                                                         
                                                         
                                                            i
                                                         
                                                      
                                                   
                                                
                                             
                                          
                                          
                                             3: Reconstruct 
                                                   
                                                      
                                                         
                                                            u
                                                         
                                                         
                                                            i
                                                         
                                                      
                                                   
                                                 and 
                                                   
                                                      
                                                         
                                                            v
                                                         
                                                         
                                                            i
                                                         
                                                      
                                                   
                                                 by Eqs. (1) and (3), respectively
                                          
                                          
                                             4: 
                                                if Eq. (4) holds then
                                             
                                          
                                          
                                             5: 
                                                
                                                
                                                   
                                                      
                                                         
                                                            S
                                                         
                                                         
                                                            0
                                                         
                                                      
                                                      =
                                                      
                                                         
                                                            S
                                                         
                                                         
                                                            0
                                                         
                                                      
                                                      ∪
                                                      {
                                                      (
                                                      
                                                         
                                                            u
                                                         
                                                         
                                                            i
                                                         
                                                      
                                                      ,
                                                      
                                                         
                                                            v
                                                         
                                                         
                                                            i
                                                         
                                                      
                                                      )
                                                      ,
                                                      (
                                                      
                                                         
                                                            u
                                                         
                                                         
                                                            i
                                                         
                                                         
                                                            1
                                                         
                                                      
                                                      ,
                                                      
                                                         
                                                            v
                                                         
                                                         
                                                            i
                                                         
                                                         
                                                            1
                                                         
                                                      
                                                      )
                                                      ,
                                                      …
                                                      ,
                                                      (
                                                      
                                                         
                                                            u
                                                         
                                                         
                                                            i
                                                         
                                                         
                                                            K
                                                         
                                                      
                                                      ,
                                                      
                                                         
                                                            v
                                                         
                                                         
                                                            i
                                                         
                                                         
                                                            K
                                                         
                                                      
                                                      )
                                                      }
                                                   
                                                
                                             
                                          
                                          
                                             6:
                                                
                                                
                                                   
                                                      L
                                                      =
                                                      L
                                                      +
                                                      1
                                                   
                                                
                                             
                                          
                                          
                                             7:
                                                end 
                                                
                                                if
                                             
                                          
                                          
                                             8: end for
                                             
                                          
                                          
                                             9: if REVVF 
                                                then
                                             
                                          
                                          
                                             10:Estimate f using matches in 
                                                   
                                                      
                                                         
                                                            S
                                                         
                                                         
                                                            0
                                                         
                                                      
                                                   
                                                 by Eq. (8)
                                             
                                          
                                          
                                             11:Determine 
                                                   
                                                      S
                                                   
                                                 according to Eq. (10)
                                             
                                          
                                          
                                             12: else 
                                                
                                                if 
                                                REMLE 
                                                then
                                             
                                          
                                          
                                             13:Compute M by Eq. (12)
                                             
                                          
                                          
                                             14: end 
                                                
                                                if
                                             
                                          
                                       
                                    
                                 
                              
                           

The goal of REMLE is to perform geometric verification efficiently. It is indeed a coarse approach, and only estimates the number of correct matches between 
                           
                              
                                 
                                    I
                                 
                                 
                                    1
                                 
                              
                           
                         and 
                           
                              
                                 
                                    I
                                 
                                 
                                    2
                                 
                              
                           
                        . Assume at the reconstruction step, we have found L columns between 
                           
                              W
                           
                         and 
                           
                              
                                 
                                    W
                                 
                                 
                                    ′
                                 
                              
                           
                         satisfying Eq. (4), where 
                           
                              W
                              =
                              (
                              
                                 
                                    w
                                 
                                 
                                    1
                                 
                              
                              ,
                              …
                              ,
                              
                                 
                                    w
                                 
                                 
                                    N
                                 
                              
                              )
                           
                         and 
                           
                              
                                 
                                    W
                                 
                                 
                                    ′
                                 
                              
                              =
                              (
                              
                                 
                                    w
                                 
                                 
                                    1
                                 
                                 
                                    ′
                                 
                              
                              ,
                              …
                              ,
                              
                                 
                                    w
                                 
                                 
                                    N
                                 
                                 
                                    ′
                                 
                              
                              )
                           
                        . In addition, assume that M out of N matches are correct, and with a common assumption, suppose the probability of a match being correct obeys an i.i.d. Bernoulli distribution. Thus, by maximum likelihood estimation, we can get
                           
                              (11)
                              
                                 
                                    
                                       (
                                       M
                                       /
                                       N
                                       )
                                    
                                    
                                       K
                                       +
                                       1
                                    
                                 
                                 =
                                 L
                                 /
                                 N
                                 .
                              
                           
                        This means that M is approximately equal to
                           
                              (12)
                              
                                 M
                                 =
                                 N
                                 ×
                                 
                                    
                                       (
                                       L
                                       /
                                       N
                                       )
                                    
                                    
                                       1
                                       /
                                       (
                                       K
                                       +
                                       1
                                       )
                                    
                                 
                                 .
                              
                           
                        Though this method does not explicitly determine which match is correct, it is effective for purpose of image re-ranking since the similarity score between two images can be fast computed by counting the number of correct matches [9]. Moreover, this method has 
                           
                              O
                              (
                              N
                              )
                           
                         time complexity, so it is suitable for geometric verification in image retrieval.

It is easy to know that the reconstruction step is vital for the proposed method. If this step cannot find correct matches, then the method fails. To guarantee the success of our method, we need to find out how low the percentage of correct matches that the reconstruction step can process with. Suppose r is the percentage of correct matches, then all N reconstructions do not satisfy Eq. (4) with the probability 
                           
                              p
                              =
                              
                                 
                                    (
                                    1
                                    -
                                    
                                       
                                          r
                                       
                                       
                                          K
                                          +
                                          1
                                       
                                    
                                    )
                                 
                                 
                                    N
                                 
                              
                           
                         (p is empirically chosen at 0.1%). That is
                           
                              (13)
                              
                                 r
                                 =
                                 
                                    
                                       (
                                       1
                                       -
                                       
                                          
                                             p
                                          
                                          
                                             1
                                             /
                                             N
                                          
                                       
                                       )
                                    
                                    
                                       1
                                       /
                                       (
                                       K
                                       +
                                       1
                                       )
                                    
                                 
                                 .
                              
                           
                        Give a typical example of 
                           
                              N
                              =
                              1
                              ,
                              000
                              ,
                              
                              K
                              =
                              3
                           
                        , we can get 
                           
                              r
                              =
                              28.8
                              %
                           
                        . This result is based on the assumption that the probability of a match being correct obeys an i.i.d. Bernoulli distribution. In fact, it is conservative, and r can be much smaller in practice. According to the grouping assumption in [32]: (1) r is not necessarily the same for different matches and there exists a grouping of the set of matches in which some of the large groups have a much higher correct match percentage than r; (2) a point and its neighbors are often in the same group. Based on these facts, we can easily find matches satisfying Eq. (4) in some groups even though with small value of r. This explains why our method can deal with image pairs with low inlier ratios, and this has been further demonstrated by our experimental results.

@&#IMPLEMENTATION DETAILS@&#

The proposed method can be implemented according to the summary in Algorithm 1. To improve the performance of our method, we add three extra measures in practice. First, for numerical stability, the normalization strategy in [44] is used to estimate f. Specifically, the centroid of points in 
                           
                              
                                 
                                    I
                                 
                                 
                                    1
                                 
                              
                           
                         is at the origin and the mean distance from points to the origin is 
                           
                              
                                 
                                    2
                                 
                              
                           
                        . Points in 
                           
                              
                                 
                                    I
                                 
                                 
                                    2
                                 
                              
                           
                         are normalized in the same way.

Second, when N is larger than a threshold, say 1,000, we randomly select 1,000 tentative matches to reconstruct at the reconstruction step for efficiency. On the other hand, N may be small due to the large viewpoint change or shape deformation. This causes a problem to REMLE as it is a statistical method, and N should be large enough to make the number of the estimated correct matches M be approximate to the true value. To solve this problem, we find 
                           
                              K
                              +
                              1
                           
                         nearest neighbors (in practice, we do this when 
                           
                              N
                              <
                              50
                           
                        ) for each point 
                           
                              
                                 
                                    u
                                 
                                 
                                    i
                                 
                              
                           
                        . Thus, we can reconstruct 
                           
                              
                                 
                                    u
                                 
                                 
                                    i
                                 
                              
                           
                         with 
                           
                              
                                 
                                    
                                       
                                          
                                             
                                                K
                                                +
                                                1
                                             
                                          
                                          
                                             
                                                K
                                             
                                          
                                       
                                    
                                 
                              
                           
                         (
                           
                              K
                              +
                              1
                           
                         choose K) times by its K neighbors.
                           2
                           For example, if we choose 
                                 
                                    K
                                    =
                                    2
                                 
                              , and denote 
                                 
                                    K
                                    +
                                    1
                                 
                               neighbors of 
                                 
                                    
                                       
                                          u
                                       
                                       
                                          i
                                       
                                    
                                 
                               as 
                                 
                                    
                                       
                                          u
                                       
                                       
                                          i
                                       
                                       
                                          1
                                       
                                    
                                    ,
                                    
                                    
                                       
                                          u
                                       
                                       
                                          i
                                       
                                       
                                          2
                                       
                                    
                                    ,
                                    
                                    
                                       
                                          u
                                       
                                       
                                          i
                                       
                                       
                                          3
                                       
                                    
                                 
                              . Then we use {
                                 
                                    
                                       
                                          u
                                       
                                       
                                          i
                                       
                                       
                                          1
                                       
                                    
                                    ,
                                    
                                    
                                       
                                          u
                                       
                                       
                                          i
                                       
                                       
                                          2
                                       
                                    
                                 
                              }, {
                                 
                                    
                                       
                                          u
                                       
                                       
                                          i
                                       
                                       
                                          2
                                       
                                    
                                    ,
                                    
                                    
                                       
                                          u
                                       
                                       
                                          i
                                       
                                       
                                          3
                                       
                                    
                                 
                              } and {
                                 
                                    
                                       
                                          u
                                       
                                       
                                          i
                                       
                                       
                                          3
                                       
                                    
                                    ,
                                    
                                    
                                       
                                          u
                                       
                                       
                                          i
                                       
                                       
                                          1
                                       
                                    
                                 
                              } to reconstruct 
                                 
                                    
                                       
                                          u
                                       
                                       
                                          i
                                       
                                    
                                 
                              , separately.
                        
                        
                           2
                         By this measure, the number of reconstructions increases from N to 
                           
                              (
                              K
                              +
                              1
                              )
                              ×
                              N
                           
                        . Consequently, M is computed by
                           
                              (14)
                              
                                 M
                                 =
                                 N
                                 ×
                                 
                                    
                                       (
                                       L
                                       /
                                       (
                                       (
                                       K
                                       +
                                       1
                                       )
                                       N
                                       )
                                       )
                                    
                                    
                                       1
                                       /
                                       (
                                       K
                                       +
                                       1
                                       )
                                    
                                 
                                 .
                              
                           
                        Third, sometimes we reconstruct 
                           
                              
                                 
                                    u
                                 
                                 
                                    i
                                 
                              
                           
                         not with its K nearest neighbors. In practice, 
                           
                              
                                 
                                    u
                                 
                                 
                                    i
                                 
                              
                           
                         is reconstructed with K points 
                           
                              
                                 
                                    u
                                 
                                 
                                    i
                                    ,
                                    1
                                 
                              
                              ,
                              …
                              ,
                              
                                 
                                    u
                                 
                                 
                                    i
                                    ,
                                    K
                                 
                              
                           
                         satisfying
                           
                              (15)
                              
                                 |
                                 |
                                 
                                    
                                       u
                                    
                                    
                                       i
                                    
                                 
                                 -
                                 
                                    
                                       u
                                    
                                    
                                       i
                                       ,
                                       j
                                    
                                 
                                 |
                                 |
                                 <
                                 
                                    
                                       ∊
                                    
                                    
                                       2
                                    
                                 
                                 ,
                                 
                                 |
                                 |
                                 
                                    
                                       v
                                    
                                    
                                       i
                                    
                                 
                                 -
                                 
                                    
                                       v
                                    
                                    
                                       i
                                       ,
                                       j
                                    
                                 
                                 |
                                 |
                                 <
                                 2
                                 ∗
                                 
                                    
                                       ∊
                                    
                                    
                                       2
                                    
                                 
                                 ,
                                 
                                 j
                                 =
                                 1
                                 ,
                                 …
                                 ,
                                 K
                                 ,
                              
                           
                        where 
                           
                              
                                 
                                    ∊
                                 
                                 
                                    2
                                 
                              
                              >
                              0
                           
                         is a scalar parameter, and 
                           
                              
                                 
                                    v
                                 
                                 
                                    i
                                    ,
                                    1
                                 
                              
                              ,
                              …
                              ,
                              
                                 
                                    v
                                 
                                 
                                    i
                                    ,
                                    K
                                 
                              
                           
                         are the corresponding points of 
                           
                              
                                 
                                    u
                                 
                                 
                                    i
                                    ,
                                    1
                                 
                              
                              ,
                              …
                              ,
                              
                                 
                                    u
                                 
                                 
                                    i
                                    ,
                                    K
                                 
                              
                           
                        , respectively. In the experiments, we find the proposed method is insensitive to 
                           
                              
                                 
                                    ∊
                                 
                                 
                                    2
                                 
                              
                           
                        , and we empirically set 
                           
                              
                                 
                                    ∊
                                 
                                 
                                    2
                                 
                              
                           
                         to be one fifth of the image size. If we cannot find K points satisfying Eq. (15), we give up reconstructing 
                           
                              
                                 
                                    u
                                 
                                 
                                    i
                                 
                              
                           
                         and simply consider that the corresponding matches are false at the reconstruction step. Intuitively, this measure can increase the probability of finding more correct matches at the reconstruction step.

@&#EXPERIMENTAL RESULTS@&#

We evaluate the proposed method on several public datasets. The proposed method is implemented in Matlab. All experiments are done on a PC with 2.8GHz Intel quad core and 4GB RAM. In Section 4.1, we first describe the datasets and experimental settings used for validating the proposed method, and then report the performances of REVVF and REMLE in Sections 4.2 and 4.3, separately.

The Homography Estimation (HE) dataset [16] and the Epipolar Geometry (EG) dataset [45], and several challenging image pairs [45,46,37,47,4] are used to evaluate REVVF. The HE dataset contains 40 image pairs, and some example image pairs are shown in Fig. 2
                        . All image pairs in this dataset are either of planar scenes or the camera position was fixed during acquisition. The images are, therefore, always related by a homography. The ground truth homographies are provided by the dataset. We use all image pairs in this dataset to test REVVF. The EG dataset does not contain purely planar scenes, and images in this dataset are related by a fundamental matrix. Fig. 3
                         shows some image pairs. Similarly, all image pairs except Graff pair (which is also included in the HE dataset) are used to test REVVF. The challenging image pairs contain many challenges such as repetitive structures, small overlapping regions, many small objects and non-rigid deformations. We use these pairs to further test REVVF.

We use the open source VLFeat toolbox [48] to determine the tentative matches of SIFT features [18]. All parameters are set as the default values except the ratio test threshold t. The default value of t is 1.5 and the smallest possible value is 1.0.

The correctness of a match is determined by the Sampson error (Eq. (9)). Specifically, for an image pair in the HE dataset, a match 
                           
                              (
                              
                                 
                                    u
                                 
                                 
                                    i
                                 
                              
                              ,
                              
                                 
                                    v
                                 
                                 
                                    i
                                 
                              
                              )
                           
                         is regarded as correct if its Sampson error is smaller than 
                           
                              
                                 
                                    ε
                                 
                                 
                                    3
                                 
                              
                           
                         (where 
                           
                              
                                 
                                    ε
                                 
                                 
                                    3
                                 
                              
                              >
                              0
                           
                         is a threshold). We find that a match with the Sampson error less than 
                           
                              0.006
                           
                         is consistent with human’s perception. Therefore, we set 
                           
                              
                                 
                                    ε
                                 
                                 
                                    3
                                 
                              
                              =
                              0.006
                           
                         in the experiments. For an image pair in the EG dataset, we first select matches with Sampson errors smaller than 
                           
                              
                                 
                                    ε
                                 
                                 
                                    4
                                 
                              
                           
                         (where 
                           
                              
                                 
                                    ε
                                 
                                 
                                    4
                                 
                              
                              >
                              0
                           
                         is a threshold), and we set 
                           
                              
                                 
                                    ε
                                 
                                 
                                    4
                                 
                              
                              =
                              0.001
                           
                        . These selected matches are further subjectively confirmed by removing matches that are obviously not consistent with subjective visual appearance. For wide baseline image pairs in the challenging dataset, the correct match set is determined as that for pairs in the EG dataset. For image pairs with non-rigid deformations in this dataset, the correct match set is determined manually.

REMLE can estimate the number of correct matches efficiently and therefore can measure similarity between an image pair fast, so we evaluate it on an image retrieval dataset Oxford 5 K 
                        [21] for image re-ranking. This dataset contains 5,062 images with more than 16M local features, and it provides 55 queries of 11 Oxford landmarks with their ground truth similar images.

We evaluate the performance of REVVF in identifying correct matches in terms of efficiency and accuracy, where accuracy is measured with F-score (in Supplementary material, we provide more detailed results, including the number of final output matches, the number of false negative matches and the number of false positive matches for each pair). To the end, we first use 11 image pairs in the EG dataset to experimentally study REVVF, including parameter effects, the symmetric problem, the effectiveness of the reconstruction step, and the time complexity. The naming convention of an image pair in this dataset is as follows: first image nameA.ext, second image nameB.ext. In the experiments, we use the image named nameA.ext as 
                           
                              
                                 
                                    I
                                 
                                 
                                    1
                                 
                              
                           
                         by default.


                        The effect of parameter 
                        K
                        : The value of K determines the number of neighbors to check the relative spatial positions among points 
                           
                              
                                 
                                    u
                                 
                                 
                                    i
                                 
                              
                              ,
                              
                                 
                                    u
                                 
                                 
                                    i
                                 
                                 
                                    1
                                 
                              
                              ,
                              …
                              ,
                              
                                 
                                    u
                                 
                                 
                                    i
                                 
                                 
                                    K
                                 
                              
                           
                        . We test the performance of REVVF using different K values. With 
                           
                              K
                              =
                              2
                              ,
                              
                              3
                           
                         and 4, the average F-scores are 
                           
                              93.2
                              %
                              ,
                              
                              95.5
                              %
                           
                         and 
                           
                              94.8
                              %
                           
                        , and the average time costs per image pair are 249ms, 197ms and 209ms, respectively. These figures show that REVVF is insensitive to K. 
                           
                              K
                              =
                              3
                           
                         gives a little higher F-score than 
                           
                              K
                              =
                              2
                           
                         and 4, so we set 
                           
                              K
                              =
                              3
                           
                         in the experiments.


                        The symmetric problem: Apparently, the reconstruction step of the proposed method is not symmetric. That is, due to the fact that the corresponding points of the neighbors of 
                           
                              
                                 
                                    u
                                 
                                 
                                    i
                                 
                              
                           
                         may not be neighbors of 
                           
                              
                                 
                                    v
                                 
                                 
                                    i
                                 
                              
                           
                         (vice versa), it would result that matches in 
                           
                              
                                 
                                    S
                                 
                                 
                                    0
                                 
                              
                           
                         are different and thus it would return different results finally if the order of images was changed. As shown in Table 1
                        , n may be indeed quite different for some image pairs (Box, Corr and Head) when changing the order of images. However, this impacts the F-scores little. With the order of images changed, the average F-score changes from 
                           
                              95.5
                              %
                           
                         to 
                           
                              95.3
                              %
                           
                        , a very slight change. Moreover, for each image pair, one can easily find that the differences between the two corresponding F-scores are all smaller than 
                           
                              4
                              %
                           
                        . We think the reason for this is that, though the reconstruction step produces two different subsets of correct matches, both of them can characterize the unique relationship between two images, and the correctness of each match can be determined with this unique relationship.


                        The effectiveness of the reconstruction step: 
                        Table 1 also confirms the main assumption of the reconstruction step. As shown in this table, the numbers of false positive matches produced by this step are often equal to zero. In the experiments, we find that the reconstruction step produces two kinds of false positive matches: (1) one is that the produced false positive matches with the small Sampson errors are close to be correct (the left image pair in Fig. 4
                        ); (2) the other is that they accidentally satisfy the main assumption of our method (the right image pair in Fig. 4). Fortunately, no matter which kind the produced false positive matches belong to, they have a little impact on REVVF (see Table 1) since n is very small in practice.


                        The time complexity: The solution of f is found by solving Eq. (8). The time complexity of Eq. (8) unfortunately is 
                           
                              O
                              (
                              
                                 
                                    n
                                 
                                 
                                    3
                                 
                              
                              )
                           
                        . However, from Table 1, one can find that n is usually smaller than 200 in most cases, and the largest value of n is smaller than 500. This means REVVF can be efficient in practice, and we will demonstrate it in the following sections.

We compare REVVF with RANSAC [10], SCRAMSAC [31], GroupSAC [32], VFC [14], and SCV [47]. SCRAMSAC and GroupSAC are the two latest variants of RANSAC. Compared with RANSAC and it variants, VFC is a non-parametric method, which is demonstrated to outperform the latest two other methods ICF [8] and Graph Shift (GS) [49] in mismatch removing. SCV verifies the correctness of a given match by cosegmentation. We use the publicly available Matlab code [50,32,47] to implement RANSAC, GroupSAC and SCV, respectively. We implement SCRAMSAC and VFC ourselves and set all parameters according to the authors’ experimental settings. For RANSAC based methods, the correctness of a match is determined by its Sampson error. We set the maximum number of iterations to 5,000 (the same as in [32]), and we require the probability that at least one of the random samples is free from outliers is larger than 
                              
                                 0.99
                              
                           . At each iteration, we update the estimated inlier ratio according to the best inlier set found and thus the number of iterations is determined adaptively. For GroupSAC, matches are grouped by mean shift [51], and the threshold corresponding to the non-randomness condition is set to 
                              
                                 0.05
                              
                           . Furthermore, for RANSAC based methods, we average all the reporting results over 100 runs to achieve meaningful results.

Besides the methods mentioned above, we also implement two other methods based on REVVF. The first method, which is called RESAC, combines the reconstruction step and RANSAC. Specifically, RESAC is a RANSAC based algorithm, which uses the n matches obtained from the reconstruction step for model generation and all N matches for model verification. As for other RANSAC based methods, we also run RESAC 100 times in the experiments. The second method, called DT for short, uses the Delaunay triangulation to “densify” sparse set of matches. DT works as follows: It first applies the Delaunay triangulation to the matches in 
                              
                                 
                                    
                                       S
                                    
                                    
                                       0
                                    
                                 
                              
                            in both images 
                              
                                 
                                    
                                       I
                                    
                                    
                                       1
                                    
                                 
                              
                            and 
                              
                                 
                                    
                                       I
                                    
                                    
                                       2
                                    
                                 
                              
                           . Then, for each match 
                              
                                 (
                                 
                                    
                                       u
                                    
                                    
                                       i
                                    
                                 
                                 ,
                                 
                                    
                                       v
                                    
                                    
                                       i
                                    
                                 
                                 )
                                 ∈
                                 T
                                 -
                                 
                                    
                                       S
                                    
                                    
                                       0
                                    
                                 
                              
                            where corresponding points lie inside the corresponding triangles, it computes 
                              
                                 
                                    
                                       w
                                    
                                    
                                       i
                                    
                                 
                              
                            and 
                              
                                 
                                    
                                       w
                                    
                                    
                                       i
                                    
                                    
                                       ′
                                    
                                 
                              
                            with Eq. (2) and decides to retain the match according to Eq. (4), i.e., it applies the reconstruction step with 
                              
                                 K
                                 =
                                 3
                              
                            using the triangle vertexes as the nearest neighbors and optionally updates the Delaunay triangulation with the new matches added. We compare REVVF with DT to demonstrate the effectiveness of the second step (Lines 9–12, Algorithm 1) of REVVF.

In the HE dataset, images with and without geometric distortions are evenly split. To test REVVF with different correct match percentages, we set t as 
                              
                                 1.0
                                 ,
                                 
                                 1.3
                                 ,
                                 
                                 1.5
                              
                            for each image pair, respectively. For image pairs with (without) geometric distortions, we show their statistics in the left (right) of Fig. 5
                           . The initial average correct match percentage of all these 120 image pairs is 66.9%. From Fig. 5, one can find that correct match percentages of some image pairs are below 40%, so the dataset is challenging for identifying correct matches.

For image pairs with geometric distortions, the F-score plots and the time costs for all methods are shown in Fig. 6
                           . For all methods, we also list the average F-scores and the average time costs per image pair in Table 2
                           . Compared with VFC, REVVF is much faster (the speed up ratio is 37.2) with nearly no performance degradation. As shown in the top of Fig. 6, REVVF and VFC have consistent performances for most image pairs, while REVVF outperforms VFC significantly in speed (the bottom of Fig. 6) for each image pair. Though SCRAMSAC and GroupSAC improve the speed of RANSAC, they both hurt the performance of RANSAC more or less. We think the reason for this is that, the reduced sets which are used in SCRAMSAC and GroupSAC are not sufficient for sampling and verification. Table 2 shows that REVVF has a better performance than RANSAC based methods on the whole. Specifically, while obtaining an 2.1% (2.5%) improvement in performance, REVVF is 
                              
                                 11.1
                              
                            (
                              
                                 4.7
                              
                           ) times faster than RANSAC (GroupSAC), simultaneously. Though REVVF is slightly slower than SCRAMSAC, it obtains an 5% improvement in performance. REVVF also outperforms SCV, especially in terms of efficiency. Overall, of all these methods, REVVF has the best tradeoff between the accuracy and the speed.

Due to more strictly spatial constraint in RESAC than that in SCRAMSAC, the number of matches used for sampling in RESAC is usually smaller than that in SCRAMSAC. However, to our surprise, RESAC performs slightly better than SCRAMSAC. This is possibly because the matches collected by the reconstruction step of REVVF are almost correct. Thus, the probability of generating an incorrect model by RESAC is small. For some image pairs, the match sets used for sampling in SCRAMSAC may still contain many mismatches, which can increase the probability of generating incorrect models. Though for some image pairs, the obtained matches from the reconstruction step are not sufficient for RESAC to generate a good model, they are sufficient for REVVF to estimate f, and this is why REVVF outperforms RESAC. We show an example in Fig. 7
                           .

DT performs worst of all methods on these image pairs. As shown in Fig. 6, DT performs poorly when correct match percentages are low, and it performs consistently well when correct match percentages are high. The reason for this is obviously, matches collected by the reconstruction step are too few to produce dense triangles when correct match percentages are low. While, when correct match percentages are high, DT can produce dense triangles to well estimated the correctness of an unknown match.

For each image pair without geometric distortions, the F-score plots and the time costs for all methods are shown in Fig. 8
                           . Furthermore, Table 3
                            also lists the average F-scores and the average time costs for all methods. From Table 3, we can find that the performances of all methods except SCV and DT are perfectly on these image pairs. Moreover, from Fig. 8, one can find that the performance differences for most image pairs among these methods except SCV and DT are minimal. To our surprise, SCV is significantly inferior to RANSAC, SCRAMSAC, GroupSAC, VFC, REVVF and RESAC, and it performs even worse than DT for most image pairs. Except for some pairs with low correct match percentages, DT performs almost as well as RANSAC, SCRAMSAC, GroupSAC, VFC, REVVF and RESAC. This again demonstrates the effectiveness of the reconstruction step.


                           Fig. 8 and Table 3 show that REVVF is still much faster than VFC on these image pairs, and the speed up ratio is about 29.9. Meanwhile, REVVF is also still faster than SCV. The differences among RANSAC based methods and REVVF are smaller than those on image pairs with geometric distortions. GroupSAC becomes the most efficient method of all RANSAC based methods, and RANSAC is still the slowest. However, the speed up ratio of GroupSAC over RANSAC is only 1.9. SCRAMSAC is still faster than REVVF, which is still faster than RANSAC in average. But in contrast, REVVF becomes slightly slower than GroupSAC. This is mainly because the ratios of correct matches on these pairs are often high. Thus, REVVF usually obtains large numbers of correct matches from the reconstruction step, and consequently, it needs to solve relatively large linear systems.

Image pairs named Kyoto, Plant, Valbonne and Wash in the EG dataset are besides wide baseline, they also contain many non-planar scenes. We report the performances of all algorithms on these 4 image pairs in the next section. In this section, we report the performances of all algorithms on the other 11 image pairs. Compared with image pairs in the HE dataset, image pairs in the EG dataset usually have larger viewpoint changes which lead to smaller ratios of correct matches with the same ratio test threshold t, so we set the smallest value of t as 
                              
                                 1.1
                              
                            instead of 
                              
                                 1.0
                              
                           . Even with 
                              
                                 t
                                 =
                                 1.1
                              
                           , the average correct match percentage is smaller than 
                              
                                 50
                                 %
                              
                           , and the smallest correct match percentage reaches 
                              
                                 7.2
                                 %
                              
                           . Furthermore, about two thirds of image pairs have correct match percentages below 60%. All of these explain that the EG dataset is more challenging than the HE dataset. The statistics of image pairs in this dataset are shown in Fig. 9
                           .

The results of all methods are shown in Fig. 10
                            and Table 4
                           . From Table 4, one can find that REVVF has the best performance overall, and the improvements over RANSAC, SCRAMSAC, GroupSAC, VFC, SCV, RESAC and DT are 
                              
                                 12
                                 %
                                 ,
                                 
                                 4.7
                                 %
                                 ,
                                 
                                 14.3
                                 %
                                 ,
                                 
                                 15.4
                                 %
                              
                           , 8.7%, 
                              
                                 6.4
                                 %
                              
                            and 
                              
                                 9.2
                                 %
                              
                           , respectively. Benefitting from the spatial constraints, REVVF, SCRAMSAC and RESAC perform better on some image pairs than RANSAC and GroupSAC (Fig. 10). As described in Section 4.2.1, the reason why the average F-score for REVVF is higher than SCRAMSAC and RESAC may be that the reduced subsets used for sampling in SCRAMSAC and RESAC are not sufficient for some image pairs. Though the performance of SCV is inferior to REVVF, SCRAMSAC and RESAC, it outperforms RANSAC, GroupSAC, VFC and DT overall. Compared with RNASAC, GroupSAC and VFC, DT performs consistently better almost for each pair on this dataset. For VFC, extremely poor performances on some image pairs with inlier ratios result in its lowest average F-score of all methods.

Again from Table 4, one can easily get the results that the speed up ratios of REVVF over RANSAC, SCRAMSAC, GroupSAC, VFC, SCV, RESAC and DT are 37.5, 0.7, 88.2, 178, 8.7, 0.5 and 41.3, respectively. As that on the HE dataset, SCV is still less efficient than REVVF. Compared with RANSAC, GroupSAC and VFC, REVVF demonstrates the significant speed advantage on this dataset. This is mainly because though the dataset is more challenging than the HE dataset, REVVF still solves a linear system only once, while RANSAC, GroupSAC and VFC need more iterations. SCRAMSAC outperforms REVVF in speed on this datset, but with a narrow margin. Being different with that on the HE dataset, RESAC becomes slightly faster than SCRAMSAC. We think the reason for this is that, for some image pairs, the subset used for sampling in SCRAMSAC still contains a large number of mismatches, while the subset used for sampling in RESAC contains few mismatches, and thus SCRAMSAC needs many more iterations than RESAC.

We further test the robustness of REVVF with several wide baseline image pairs (Asia, Detenice, Kyoto, Mex, Plant, Valbonne and Wash) and non-rigid deformation image pairs (Bulletin,
                              3
                              Made in this paper.
                           
                           
                              3
                            Michelle and Rd). For these ten image pairs, we list their statistics in Table 5
                           , and we show schematic results of REVVF on them in Fig. 11
                           .

Performance comparisons of all algorithms are shown in Table 6
                           . The geometry model used in RANSAC based methods is epipolar geometry. Table 6 clearly shows that REVVF outperforms SCV and RANSAC based methods for all image pairs. For Rd and Valbonne, VFC slightly outperforms REVVF, while for other pairs, VFC is inferior to REVVF, especially for Detenice and Wash. Compared to other RANSAC based methods, RESAC reaches comparable results except for Valbonne and Wash. The performance of DT on Valbonne and Wash is also much poorer compared with that on the other image pairs. This is still because that, the reconstruction step of REVVF cannot find enough matches for both pairs of Valbonne and Wash.

On these ten image pairs, the average time costs per image pair for RANSAC, SCRAMSAC, GroupSAC, VFC, REVVF, RESAC and DT are 11,480ms, 140ms, 19,610ms, 20,460ms, 1,607ms, 270ms, 160ms and 14,246ms. This means REVVF is faster than RANSAC, GroupSAC, VFC, SCV and DT. Though REVVF is not as fast as SCRAMSAC and RESAC, it performs consistently better than SCRAMSAC and RESAC.

We test REMLE to perform re-ranking images in an image retrieval engine on the Oxford 5 K dataset. To ensure the compatibility of the experiments, we use the descriptors provided by [21] on its dataset web pages. We evaluate the performance of REMLE on the three important factors: speed, memory usage and retrieval accuracy (via mean Average Precision (mAP)). We compare REMLE with a state-of-the-art method, 5-dof FSM
                           4
                           In [21], the author implements 3-dof, 4-dof and 5-dof transformations, and 5-dof affine transformation is the best of them.
                        
                        
                           4
                         (translation and vertical shear). This is because FSM also improves retrieval accuracy by geometric verification.

We use the approximate k-means (AKM) [21] to create vocabularies. In AKM, 8kd trees and 30 iterations are used. We create vocabularies with sizes of 500K, 750K and 1M to evaluate the performance of REMLE.

We build an inverted file for searching similar images. To perform geometric verification, it is sufficient to store the location and the image ID of each feature in our inverted file. Image search can be interpreted as a voting scheme [9]. Each visual word in the query image contributes the similarity scores between the query and its matched images. After processing all words in the query, an initial ranking of the retrieved images is generated.

Geometric verification is performed on a number of top ranked images. That is, we use REMLE to match them to the query image once more, and obtain new similarity scores for purpose of re-ranking. In the experiments, top 
                              
                                 100
                                 ,
                                 
                                 200
                                 ,
                                 
                                 400
                              
                            and 800 images are used for geometric verification.

In the process of calculating similarity scores, it is standard to use tf-idf weighting scheme [22] to distinguish different matched features. Though REMLE cannot use this scheme as it does not determine the correctness of each match explicitly, we find tf-idf scheme has little effect in improving retrieval accuracy from experimental results. For example, with a 1M vocabulary, simply counting the number of matches yields the mAP 0.611. Using tf-idf weighting scheme only increases the mAP to 0.618, hence the improvement is negligible. This observation is also described in [13]. In practice, REMLE calculates the similarity between two images by counting the number of matches with 
                              
                                 
                                    
                                       L
                                    
                                    
                                       2
                                    
                                 
                              
                            normalization. While to be fair, FSM uses the tf-idf scheme.

@&#RESULTS@&#

The impact of parameter K to the performance of REMLE is also first studied as in REVVF. When re-ranking top 800 images on the Oxford 5
                           
                           K dataset with a 1M vocabulary, the mAP of REMLE is 0.725, 0.708, 0.714 with 
                              
                                 K
                                 =
                                 2
                                 ,
                                 
                                 3
                                 ,
                                 
                                 4
                              
                           , respectively. 
                              
                                 K
                                 =
                                 2
                              
                            gives the best results and is used in the following report results.


                           Speed: REMLE has a linear time complexity, while FSM is quadratic in the number of N. In the experiments, with re-ranking top 800 images for each query image, the total time costs of REMLE and FSM are 92.2s and 417.6s, respectively. This means REMLE is about 
                              
                                 4.5
                              
                            times faster than FSM.


                           Memory usage: In the inverted file, REMLE only stores image ID (2 bytes) and the location (4 bytes) of each feature, and thus REMLE needs about 93MB memory. Compared with REMLE, FSM needs 4 bytes to store the tf-idf weight and another 12 bytes to store the shape information of each feature. Thus, FSM needs about 343MB memory in total, which means REMLE can save about 250MB memory.


                           Retrieval accuracy: 
                           Table 7
                            compares mAP of REMLE with FSM under different vocabulary sizes on the Oxford 5
                           
                           K dataset. It clearly shows that REMLE has superior performance than FSM. Compared with FSM, when re-ranking top 800 images with a 1M visual vocabulary, REMLE increases the mAP from 0.664 to 0.725, an 9% improvement can be obtained. There are also clear improvements with vocabulary sizes of 750K and 500K. Again, from Table 7, when re-ranking 800 images, our best score increases the mAP from 0.658 (0.654) to 0.721 (0.700) with a 750K (500K) vocabulary.

@&#CONCLUSION@&#

In this article, we present a new matching method with wide applicability. By exploiting the local geometric structure, the proposed method can first identify a subset of correct matches. The effects of these identified correct matches are twofold. The first is a function f can be learned and then the remaining correct matches can be identified accurately with f, and the second is the number of correct matches can be estimated efficiently. The experimental results on 4 public datasets show that our method outperforms the state-of-the-art techniques on both identifying correct matches and image re-ranking.

More detailed results of RANSAC, SCRAMSAC, GroupSAC, VFC, SCV, REVVF, RESAC and DT are provided in the supplementary material. Supplementary data associated with this article can be found, in the online version, at http://dx.doi.org/10.1016/j.cviu.2014.06.006.


                     
                        
                           
                              More detailed results of RANSAC, SCRAMSAC, GroupSAC, VFC, SCV, REVVF, RESAC and DT.
                           
                           
                        
                     
                  

@&#REFERENCES@&#

