@&#MAIN-TITLE@&#Large-scale spectral clustering based on pairwise constraints

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           We face the real-world problem of having a limited set of pairwise constraints.


                        
                        
                           
                           Using pairwise constraints connected components (CC) are generated.


                        
                        
                           
                           The points’ local neighborhoods of the same CC are dynamically adapted.


                        
                        
                           
                           Constraints propagation to CC neighborhoods to increase the clustering accuracy.


                        
                        
                           
                           Scalability is ensured by following a landmark strategy.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Spectral clustering

Semi-supervised

Sparse coding

@&#ABSTRACT@&#


               
               
                  In this paper, we present an efficient spectral clustering method for large-scale data sets, given a set of pairwise constraints. Our contribution is threefold: (a) clustering accuracy is increased by injecting prior knowledge of the data points’ constraints to a small affinity submatrix; (b) connected components are identified automatically based on the data points’ pairwise constraints, generating thus isolated “islands” of points; furthermore, local neighborhoods of points of the same connected component are adapted dynamically, and constraints propagation is performed so as to further increase the clustering accuracy; finally (c) the complexity is preserved low, by following a sparse coding strategy of a landmark spectral clustering. In our experiments with three benchmark shape, face and handwritten digit image data sets, we show that the proposed method outperforms competitive spectral clustering methods that either follow semi-supervised or scalable strategies.
               
            

@&#INTRODUCTION@&#

Spectral Clustering (SC) is a popular approach for solving clustering problems in a wide range of non-Euclidean spaces, linearly non-separable clusters and detecting non-convex patterns (Filippone, Camastra, Masulli, & Rovetta, 2008). SC methods are used in numerous real-world applications such as image segmentation (Tung, Wong, & Clausi, 2010), face recognition (Cevikalp & Triggs, 2010), feature fusion (Huang, Chuang, & Chen, 2012), speech recognition (Iso, 2010), 3D shape retrieval (Tatsuma & Aono, 2009) and protein sequences clustering (Paccanaro, Chennubhotla, Casbon, & Saqi, 2003). The key idea in SC is to achieve graph partitioning by performing eigendecomposition of a graph Laplacian matrix. The SC approach is formulated as follows: given a set of d-dimensional data points
                        1
                        Following standard notations, we use capital italic letters for matrices (e.g. A), lower-case bold letters for vectors (e.g. 
                              
                                 a
                              
                           ) and calligraphic fonts for sets (e.g. 
                              
                                 A
                              
                           ).
                     
                     
                        1
                      
                     
                        
                           {
                           
                              
                                 x
                              
                              
                                 1
                              
                           
                           ,
                           
                              
                                 x
                              
                              
                                 2
                              
                           
                           ,
                           …
                           ,
                           
                              
                                 x
                              
                              
                                 N
                              
                           
                           }
                           ∈
                           
                              
                                 R
                              
                              
                                 d
                              
                           
                        
                     , SC methods construct an undirected graph 
                        
                           G
                           =
                           (
                           V
                           ,
                           E
                           )
                        
                     , represented by the 
                        
                           W
                           ∈
                           
                              
                                 R
                              
                              
                                 n
                                 ×
                                 n
                              
                           
                        
                      affinity matrix (or the respective adjacency), where 
                        
                           V
                        
                      and 
                        
                           E
                        
                      are the sets of vertices and edges, respectively. The goal is to find a k-way partitioning, i.e. k disjoint data subsets whose union is the whole data set, to minimize a particular objective. SC methods firstly calculate the degree matrix 
                        
                           D
                           =
                           
                              
                                 ∑
                              
                              
                                 j
                              
                           
                           
                              
                                 W
                              
                              
                                 ji
                              
                           
                           ∈
                           
                              
                                 R
                              
                              
                                 n
                                 ×
                                 n
                              
                           
                        
                     , a diagonal matrix whose entries are column (or row, since W is symmetric) sums of W. Then, a Laplacian matrix is constructed and its eigenvectors are used as the low k-th dimensional representation of the data. Finally, the k-means algorithm is applied to generate the clusters.

Spectral clustering methods differ in how they define and construct the Laplacian matrix and thus which eigenvectors are selected to represent the partitioning, aiming to exploit special properties of different matrix formulations (Filippone et al., 2008; Luxburg, 2007). For the interested reader, Ulrike von Luxburg’s tutorial (Luxburg, 2007) includes examples of different Laplacians’ constructions. Moreover, different objective functions are used to derive the best cut. For example, Ratio Cut (Chan, Schlag, & Zien, 1993) tries to minimize the total cost of the edges crossing the cluster boundaries, normalized by the size of the k clusters, to encourage balanced cluster sizes. Normalized Cut (NCut) (Shi & Malik, 1997) uses the same objective criterion as Ratio Cut, normalized by the total degree of each cluster, making thus the clusters having similar degrees.

However, irrespective of the selected approach, there are two important factors for applying a SC method to a real world application: (a) the scalability of the method to large datasets; and (b) the high clustering accuracy.

Baseline SC methods (Chan et al., 1993; Shi & Malik, 1997) require (a) 
                           
                              O
                              (
                              
                                 
                                    n
                                 
                                 
                                    2
                                 
                              
                              )
                           
                         time to calculate the W affinity matrix and consequently to construct the graph 
                           
                              G
                           
                         and the Laplacian matrix L; and (b) 
                           
                              O
                              (
                              
                                 
                                    n
                                 
                                 
                                    3
                                 
                              
                              )
                           
                         time to calculate the eigendecomposition of L. Both complexities prohibit the direct application of SC for generating clusters in large-scale data sets. Several accelerated methods (Cao, Chen, Dai, & Ling, 2014; Chen & Cai, 2011; Fowlkes, Belongie, Chung, & Malik, 2004; Liu, Wang, Danilevsky, & Han, 2013; Yan, Huang, & Jordan, 2009) have been proposed in the literature trying to reduce the initial problem size of n data points by selecting p (
                           
                              ≪
                              n
                           
                        ) samples of the data set.
                           2
                           Additionally, several methods perform parallel SC in distributed systems (Chen, Song, Bai, Lin, & Chang, 2011; Kang, Meeder, Papalexakis, & Faloutsos, 2014) to reduce the computational time of SC.
                        
                        
                           2
                         Accelerated methods in their approximations calculate 
                           
                              n
                              ×
                              p
                           
                         distances to construct 
                           
                              G
                           
                         and perform the eigendecomposition to a highly reduced 
                           
                              L
                              ∈
                              
                                 
                                    R
                                 
                                 
                                    p
                                    ×
                                    p
                                 
                              
                           
                         Laplacian matrix. Consequently, accelerated methods significantly decrease the high complexity of the baseline SC methods (Chung, 1997; Ng, Jordan, & Weiss, 2002).

Nevertheless, with respect to the clustering accuracy, accelerated methods either fail in their approximations for a low number of p samples, or do not overcome the limited accuracy of the baseline SC methods. Baseline SC methods tend to unbalanced clusters, i.e. single nodes are separated from the rest of the graph. As a result they are noise-sensitive, i.e. few isolated points can easily draw the cuts away from the global partitions (Chang & Yeung, 2008). Additionally, baseline SC methods cannot exploit the information of a set of data points’ pairwise constraints, in order to increase the clustering accuracy, since they function in an unsupervised manner. Several works have extended SC in a semi-supervised way (Chen & Feng, 2012; Kulis, Basu, Dhillon, & Mooney, 2009; Wagstaff, Cardie, Rogers, & Schroedl, 2001), where the goal is to incorporate prior information into the algorithm, in order to improve the clustering results. This is achieved by adding a preprocessing step, where pairwise must-link (pairs of points that should belong to the same cluster) and cannot-link constraints (pairs of points that should belong to different clusters) are added to the 
                           
                              W
                              ∈
                              
                                 
                                    R
                                 
                                 
                                    n
                                    ×
                                    n
                                 
                              
                           
                         affinity matrix. Semi-supervised SC methods achieve higher clustering accuracy compared to conventional SC methods. However, existing semi-supervised SC methods preserve the high complexity of the baseline SC methods and thus are not scalable.

The contribution of the proposed method is threefold: (a) the clustering accuracy is increased by injecting prior knowledge of the data points’ constraints to a small affinity submatrix; (b) according to the Tarjan’s algorithm (Tarjan, 1972) connected components (CC) are automatically identified from the data points’ constraints, generating thus isolated “islands” of points. Then, for each CC the local neighborhood of points is adapted dynamically and constraints propagation is performed so as to increase the clustering accuracy; finally (c) the complexity is preserved low, by following a landmark spectral clustering strategy to ensure scalability. In our experiments with three benchmark face, shape and handwritten image data sets, we show that the proposed method outperforms state-of-the-art spectral clustering methods that either follow semi-supervised or scalable strategies in terms of clustering accuracy and computational cost.

The rest of the paper is organized as follows: in Section 2 the proposed method is described in detail. In Section 3 the experimental results are presented and discussed, finally, in Section 4 the conclusions of this study are drawn.

@&#PROPOSED METHOD@&#

Given a set of p points that participate in the pairwise constraints, the proposed method consists of the following steps: (a) generate a sparse representation of an affinity submatrix 
                        
                           
                              
                                 Z
                              
                              
                                 ^
                              
                           
                           ∈
                           
                              
                                 R
                              
                              
                                 p
                                 ×
                                 n
                              
                           
                        
                     , expressing the similarities between the p points that participate in the pairwise constraints and the whole data set n; (b) compute a temporal 
                        
                           p
                           ×
                           p
                        
                     similarity/adjacency matrix based only on the p points that participate in the pairwise constraints to extract the connected components automatically, generating thus isolated “islands” of the p points; (c) update the sparse affinity submatrix 
                        
                           
                              
                                 Z
                              
                              
                                 ^
                              
                           
                        
                      based on the p points co-appearances to the same or different connected components; (d) perform dynamical adaptation of the p data points’ local neighborhood in each connected component; (e) propagate constraints to the local neighboring points in the connected component; and (f) perform eigedecomposition of a highly reduced matrix and apply k-means to generate the final k clusters.

Formally, given a set of d-dimensional data points 
                        
                           {
                           
                              
                                 x
                              
                              
                                 1
                              
                           
                           ,
                           
                              
                                 x
                              
                              
                                 2
                              
                           
                           ,
                           …
                           ,
                           
                              
                                 x
                              
                              
                                 n
                              
                           
                           }
                           ∈
                           
                              
                                 R
                              
                              
                                 d
                              
                           
                        
                     , denoted by a 
                        
                           X
                           ∈
                           
                              
                                 R
                              
                              
                                 d
                                 ×
                                 n
                              
                           
                        
                      matrix; and a subset 
                        
                           T
                        
                      of p points, with (
                        
                           p
                           ≪
                           n
                        
                     ) denoting the points that participate in the sets of 
                        
                           M
                        
                      must-link or 
                        
                           C
                        
                      cannot-link constraints (with the constraints’ pool being equal to 
                        
                           M
                           ∪
                           C
                        
                     ), the goal is to partition the n points into k discrete clusters, with the boundaries of the k clusters lying afar. The final goal is to design the 
                        
                           W
                           ∈
                           
                              
                                 R
                              
                              
                                 n
                                 ×
                                 n
                              
                           
                        
                      affinity matrix as 
                        
                           W
                           =
                           
                              
                                 
                                    
                                       Z
                                    
                                    
                                       ^
                                    
                                 
                              
                              
                                 T
                              
                           
                           
                              
                                 Z
                              
                              
                                 ^
                              
                           
                        
                     , where 
                        
                           
                              
                                 Z
                              
                              
                                 ^
                              
                           
                           ∈
                           
                              
                                 R
                              
                              
                                 p
                                 ×
                                 n
                              
                           
                        
                      is the p-th dimensional representation of the n data points, expressed as similarities/affinities of the n data points to the p points that participate in the pairwise constraints. The 
                        
                           X
                           ∈
                           
                              
                                 R
                              
                              
                                 d
                                 ×
                                 n
                              
                           
                        
                      matrix can be approximated as 
                        
                           X
                           ≈
                           UZ
                        
                     , where the columns of matrix 
                        
                           U
                           ∈
                           
                              
                                 R
                              
                              
                                 d
                                 ×
                                 p
                              
                           
                        
                      are called basis vectors, i.e. the d-dimensional vectors of the p points. Therefore, the goal is to minimize the approximation error 
                        
                           
                              
                                 min
                              
                              
                                 U
                                 ,
                                 Z
                              
                           
                           ‖
                           X
                           -
                           UZ
                           
                              
                                 ‖
                              
                              
                                 2
                              
                           
                        
                     , where 
                        
                           ‖
                           ·
                           ‖
                        
                      denotes the Frobenius norm of a matrix.

Following the sparse coding strategy of (Chen & Cai, 2011), based on the Nadaraya-Watson kernel regression (Härdle, 1992), for any data point 
                           
                              
                                 
                                    x
                                 
                                 
                                    i
                                 
                              
                           
                         its 
                           
                              
                                 
                                    
                                       
                                          x
                                       
                                       
                                          ^
                                       
                                    
                                 
                                 
                                    i
                                 
                              
                           
                         approximation is calculated as:
                           
                              (1)
                              
                                 
                                    
                                       
                                          
                                             x
                                          
                                          
                                             ^
                                          
                                       
                                    
                                    
                                       i
                                    
                                 
                                 =
                                 
                                    
                                       
                                          ∑
                                       
                                       
                                          j
                                          =
                                          1
                                       
                                       
                                          p
                                       
                                    
                                 
                                 
                                    
                                       z
                                    
                                    
                                       ji
                                    
                                 
                                 
                                    
                                       u
                                    
                                    
                                       j
                                    
                                 
                              
                           
                        where 
                           
                              
                                 
                                    u
                                 
                                 
                                    j
                                 
                              
                           
                         is the j-th column vector of U and 
                           
                              
                                 
                                    z
                                 
                                 
                                    ji
                                 
                              
                           
                         is the ji-th element of Z. Then, to create the sparse representation of the Z affinity sparse matrix, the 
                           
                              
                                 
                                    z
                                 
                                 
                                    ji
                                 
                              
                           
                         value is set to 0, if 
                           
                              
                                 
                                    u
                                 
                                 
                                    j
                                 
                              
                           
                         is not among the 
                           
                              r
                              ⩽
                              p
                           
                         nearest points.
                           3
                           This holds because 
                                 
                                    
                                       
                                          z
                                       
                                       
                                          ji
                                       
                                    
                                 
                               should be larger if 
                                 
                                    
                                       
                                          x
                                       
                                       
                                          i
                                       
                                    
                                 
                               is closer to 
                                 
                                    
                                       
                                          u
                                       
                                       
                                          j
                                       
                                    
                                 
                              .
                        
                        
                           3
                         Let 
                           
                              〈
                              I
                              〉
                              ∈
                              
                                 
                                    R
                                 
                                 
                                    d
                                    ×
                                    r
                                 
                              
                           
                         denote a submatrix of U, composed of r nearest constrained points of 
                           
                              
                                 
                                    x
                                 
                                 
                                    i
                                 
                              
                           
                        . Then, each element 
                           
                              
                                 
                                    z
                                 
                                 
                                    ji
                                 
                              
                           
                         is computed as:
                           
                              (2)
                              
                                 
                                    
                                       z
                                    
                                    
                                       ji
                                    
                                 
                                 =
                                 
                                    
                                       Φ
                                       (
                                       
                                          
                                             x
                                          
                                          
                                             i
                                          
                                       
                                       ,
                                       
                                          
                                             u
                                          
                                          
                                             j
                                          
                                       
                                       )
                                    
                                    
                                       
                                          
                                             ∑
                                          
                                          
                                             
                                                
                                                   j
                                                
                                                
                                                   ′
                                                
                                             
                                             ∈
                                             〈
                                             I
                                             〉
                                          
                                       
                                       Φ
                                       (
                                       
                                          
                                             x
                                          
                                          
                                             i
                                          
                                       
                                       ,
                                       
                                          
                                             u
                                          
                                          
                                             
                                                
                                                   j
                                                
                                                
                                                   ′
                                                
                                             
                                          
                                       
                                       )
                                    
                                 
                                 ,
                                 
                                 
                                 
                                 
                                 
                                 
                                 i
                                 ∈
                                 1
                                 …
                                 n
                                 
                                 and
                                 
                                 j
                                 ∈
                                 〈
                                 I
                                 〉
                              
                           
                        where 
                           
                              Φ
                              (
                              ·
                              )
                           
                         is a kernel function with bandwidth 
                           
                              σ
                           
                        . The Gaussian kernel 
                           
                              Φ
                              (
                              
                                 
                                    x
                                 
                                 
                                    i
                                 
                              
                              ,
                              
                                 
                                    u
                                 
                                 
                                    j
                                 
                              
                              )
                              =
                              exp
                              (
                              -
                              ‖
                              
                                 
                                    x
                                 
                                 
                                    i
                                 
                              
                              -
                              
                                 
                                    u
                                 
                                 
                                    j
                                 
                              
                              ‖
                              /
                              2
                              
                                 
                                    σ
                                 
                                 
                                    2
                                 
                              
                              )
                           
                         is one of the most commonly used, where 
                           
                              σ
                           
                         controls the local scale of each data point’s neighborhood. Therefore, based on (2), the 
                           
                              Z
                              ∈
                              
                                 
                                    R
                                 
                                 
                                    p
                                    ×
                                    n
                                 
                              
                           
                         sparse representation is calculated. Consequently, for the W affinity matrix it holds that 
                           
                              W
                              =
                              
                                 
                                    
                                       
                                          Z
                                       
                                       
                                          ^
                                       
                                    
                                 
                                 
                                    T
                                 
                              
                              
                                 
                                    Z
                                 
                                 
                                    ^
                                 
                              
                           
                        , where 
                           
                              
                                 
                                    Z
                                 
                                 
                                    ^
                                 
                              
                              =
                              
                                 
                                    D
                                 
                                 
                                    -
                                    1
                                    /
                                    2
                                 
                              
                              Z
                           
                         is the normalized Z by the 
                           
                              D
                              =
                              
                                 
                                    ∑
                                 
                                 
                                    j
                                 
                              
                              
                                 
                                    Z
                                 
                                 
                                    ji
                                 
                              
                           
                         degree matrix.

Next, we retrieve all the p distinct points that participate in the 
                           
                              M
                           
                         must-link and the 
                           
                              C
                           
                         cannot-link sets of constraints. We generate a 
                           
                              p
                              ×
                              p
                           
                         adjacency matrix, with 1s and 0s for the must-link 
                           
                              M
                           
                         and cannot-link 
                           
                              C
                           
                         constraints, respectively. According the calculated 
                           
                              p
                              ×
                              p
                           
                         adjacency matrix the Tarjan’s algorithm
                           4
                           The Tarjan’s algorithm (Tarjan, 1972) generates connected components automatically from an affinity/adjacency matrix.
                        
                        
                           4
                         is used to detect the 
                           
                              H
                           
                         strongly connected components of the p points that participate in the pairwise constraints, generating thus 
                           
                              H
                           
                         isolated “islands” of the p points. The identified connected components are used to set the initial constraints to the 
                           
                              
                                 
                                    Z
                                 
                                 
                                    ^
                                 
                              
                           
                         affinity submatrix.

Let 
                           
                              T
                              ≡
                              {
                              
                                 
                                    T
                                 
                                 
                                    1
                                 
                              
                              ∪
                              
                                 
                                    T
                                 
                                 
                                    2
                                 
                              
                              ,
                              …
                              ,
                              ∪
                              
                                 
                                    T
                                 
                                 
                                    a
                                 
                              
                              ∪
                              ,
                              …
                              ,
                              ∪
                              
                                 
                                    T
                                 
                                 
                                    |
                                    H
                                    |
                                 
                              
                              }
                           
                        , where 
                           
                              
                                 
                                    T
                                 
                                 
                                    a
                                 
                              
                           
                         is the set of points of the a-th connected component, with 
                           
                              a
                              ∈
                              {
                              1
                              ,
                              …
                              ,
                              |
                              H
                              |
                              }
                           
                         and 
                           
                              |
                              T
                              |
                              =
                              p
                           
                        . Let 
                           
                              
                                 
                                    T
                                 
                                 
                                    a
                                 
                                 
                                    ′
                                 
                              
                           
                         be the relative complement of 
                           
                              
                                 
                                    T
                                 
                                 
                                    a
                                 
                              
                           
                         in 
                           
                              T
                           
                         with 
                           
                              
                                 
                                    T
                                 
                                 
                                    a
                                 
                                 
                                    ′
                                 
                              
                              ≡
                              T
                              ⧹
                              
                                 
                                    T
                                 
                                 
                                    a
                                 
                              
                              ≡
                              {
                              
                                 
                                    p
                                 
                                 
                                    a
                                 
                                 
                                    ′
                                 
                              
                              ∈
                              T
                              |
                              
                                 
                                    p
                                 
                                 
                                    a
                                 
                                 
                                    ′
                                 
                              
                              
                              ∉
                              
                              
                                 
                                    T
                                 
                                 
                                    a
                                 
                              
                              }
                           
                        . Since the similarities between the 
                           
                              
                                 
                                    p
                                 
                                 
                                    a
                                 
                              
                              ∈
                              
                                 
                                    T
                                 
                                 
                                    a
                                 
                              
                           
                         points of the a-th connected component should be maximum and the similarities between the 
                           
                              
                                 
                                    p
                                 
                                 
                                    a
                                 
                                 
                                    ′
                                 
                              
                              ∈
                              
                                 
                                    T
                                 
                                 
                                    a
                                 
                                 
                                    ′
                                 
                              
                           
                         and 
                           
                              
                                 
                                    p
                                 
                                 
                                    a
                                 
                              
                              ∈
                              
                                 
                                    T
                                 
                                 
                                    a
                                 
                              
                           
                         points of different connected components should be minimum, we set the 
                           
                              
                                 
                                    
                                       
                                          
                                             |
                                             T
                                             |
                                          
                                          
                                             2
                                          
                                       
                                    
                                 
                              
                           
                         constraints to the 
                           
                              
                                 
                                    Z
                                 
                                 
                                    ^
                                 
                              
                           
                         affinity submatrix as follows:
                           
                              (3)
                              
                                 
                                    
                                       Z
                                    
                                    
                                       ^
                                    
                                 
                                 (
                                 
                                    
                                       p
                                    
                                    
                                       i
                                    
                                 
                                 ,
                                 
                                    
                                       p
                                    
                                    
                                       j
                                    
                                 
                                 )
                                 =
                                 
                                    
                                       
                                          
                                             
                                                
                                                   1
                                                   ,
                                                
                                                
                                                   {
                                                   
                                                      
                                                         p
                                                      
                                                      
                                                         i
                                                      
                                                   
                                                   ∈
                                                   
                                                      
                                                         T
                                                      
                                                      
                                                         a
                                                      
                                                   
                                                   |
                                                   
                                                      
                                                         p
                                                      
                                                      
                                                         j
                                                      
                                                   
                                                   ∈
                                                   
                                                      
                                                         T
                                                      
                                                      
                                                         a
                                                      
                                                   
                                                   }
                                                
                                             
                                             
                                                
                                                   0
                                                   ,
                                                
                                                
                                                   
                                                      
                                                         
                                                            
                                                               
                                                                  p
                                                               
                                                               
                                                                  i
                                                               
                                                            
                                                            ∈
                                                            
                                                               
                                                                  T
                                                               
                                                               
                                                                  a
                                                               
                                                            
                                                            |
                                                            
                                                               
                                                                  p
                                                               
                                                               
                                                                  j
                                                               
                                                            
                                                            ∈
                                                            
                                                               
                                                                  T
                                                               
                                                               
                                                                  a
                                                               
                                                               
                                                                  ′
                                                               
                                                            
                                                         
                                                      
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           
                        In other words, we set the affinity matrix elements to 1 when points belong to the same connected component or 0 if points are in different connected components.

Then, we generate 
                           
                              |
                              H
                              |
                           
                         different adjacency submatrices 
                           
                              
                                 
                                    L
                                 
                                 
                                    
                                       
                                          T
                                       
                                       
                                          a
                                       
                                    
                                 
                              
                              ∈
                              
                                 
                                    R
                                 
                                 
                                    l
                                    ×
                                    |
                                    
                                       
                                          T
                                       
                                       
                                          a
                                       
                                    
                                    |
                                 
                              
                           
                        , where for each distinct connected component a each submatrix 
                           
                              
                                 
                                    L
                                 
                                 
                                    
                                       
                                          T
                                       
                                       
                                          a
                                       
                                    
                                 
                              
                           
                         contains a subset 
                           
                              |
                              
                                 
                                    T
                                 
                                 
                                    a
                                 
                              
                              |
                              <
                              p
                           
                         of points that participate in the pairwise constraints and the l neighbors of the 
                           
                              |
                              
                                 
                                    T
                                 
                                 
                                    a
                                 
                              
                              |
                           
                         points based on the affinity submatrix 
                           
                              
                                 
                                    Z
                                 
                                 
                                    ^
                                 
                              
                           
                        . Then, 
                           
                              ∀
                              
                              
                                 
                                    L
                                 
                                 
                                    
                                       
                                          T
                                       
                                       
                                          a
                                       
                                    
                                 
                              
                           
                         we calculate the appearances (
                           
                              
                                 
                                    freq
                                 
                                 
                                    i
                                 
                              
                           
                        ) of each neighbor i, with 
                           
                              i
                              ∈
                              {
                              1
                              ,
                              …
                              ,
                              l
                              }
                           
                        . The calculated 
                           
                              
                                 
                                    freq
                                 
                                 
                                    i
                                 
                              
                           
                         frequencies are sorted in ascending order to create a m-th dimensional vector 
                           
                              degreeVec
                              =
                              (
                              
                                 
                                    freq
                                 
                                 
                                    
                                       
                                          1
                                       
                                       
                                          ′
                                       
                                    
                                 
                              
                              ,
                              
                                 
                                    freq
                                 
                                 
                                    
                                       
                                          2
                                       
                                       
                                          ′
                                       
                                    
                                 
                              
                              ,
                              …
                              ,
                              
                                 
                                    freq
                                 
                                 
                                    
                                       
                                          m
                                       
                                       
                                          ′
                                       
                                    
                                 
                              
                              )
                           
                        , with 
                           
                              
                                 
                                    freq
                                 
                                 
                                    
                                       
                                          1
                                       
                                       
                                          ′
                                       
                                    
                                 
                              
                              ⩽
                              
                                 
                                    freq
                                 
                                 
                                    
                                       
                                          2
                                       
                                       
                                          ′
                                       
                                    
                                 
                              
                              ⩽
                              ⋯
                              
                                 
                                    freq
                                 
                                 
                                    
                                       
                                          m
                                       
                                       
                                          ′
                                       
                                    
                                 
                              
                           
                        , where m is the number of unique frequencies of the neighbors of 
                           
                              
                                 
                                    L
                                 
                                 
                                    
                                       
                                          T
                                       
                                       
                                          a
                                       
                                    
                                 
                              
                           
                         and 
                           
                              
                                 
                                    freq
                                 
                                 
                                    
                                       
                                          i
                                       
                                       
                                          ′
                                       
                                    
                                 
                              
                           
                         is a sorted 
                           
                              
                                 
                                    freq
                                 
                                 
                                    i
                                 
                              
                           
                         frequency. The neighbors in 
                           
                              
                                 
                                    L
                                 
                                 
                                    
                                       
                                          T
                                       
                                       
                                          a
                                       
                                    
                                 
                              
                           
                         with high appearances in the local neighborhood should be the closest neighbors of the 
                           
                              
                                 
                                    p
                                 
                                 
                                    a
                                 
                              
                              ∈
                              
                                 
                                    T
                                 
                                 
                                    a
                                 
                              
                           
                         points of the a-th component. Following a linear interpolation strategy, we generate a m-th dimensional vector 
                           
                              lookupVec
                           
                         as follows:
                           
                              (4)
                              
                                 
                                    
                                       lookupVec
                                    
                                    
                                       
                                          
                                             i
                                          
                                          
                                             ′
                                          
                                       
                                    
                                 
                                 =
                                 
                                    
                                       
                                          
                                             
                                                
                                                   
                                                      min
                                                   
                                                   +
                                                   
                                                      
                                                         freq
                                                      
                                                      
                                                         
                                                            
                                                               i
                                                            
                                                            
                                                               ′
                                                            
                                                         
                                                      
                                                   
                                                   ×
                                                   
                                                      
                                                         
                                                            max
                                                         
                                                         -
                                                         
                                                            min
                                                         
                                                      
                                                      
                                                         m
                                                         -
                                                         1
                                                      
                                                   
                                                   ,
                                                
                                                
                                                   m
                                                   
                                                   ≠
                                                   
                                                   1
                                                
                                             
                                             
                                                
                                                   
                                                      max
                                                   
                                                   ,
                                                
                                                
                                                   m
                                                   =
                                                   1
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           
                        where 
                           
                              min
                           
                         and 
                           
                              max
                           
                         are the minimum and maximum similarities in 
                           
                              
                                 
                                    L
                                 
                                 
                                    
                                       
                                          T
                                       
                                       
                                          a
                                       
                                    
                                 
                              
                           
                        , respectively and 
                           
                              
                                 
                                    i
                                 
                                 
                                    ′
                                 
                              
                              ∈
                              {
                              1
                              ,
                              …
                              ,
                              m
                              }
                           
                        . Neighbors of low appearances should lie far (
                           
                              min
                           
                        ) from the 
                           
                              
                                 
                                    p
                                 
                                 
                                    a
                                 
                              
                              ∈
                              
                                 
                                    T
                                 
                                 
                                    a
                                 
                              
                           
                         points of component a and close (
                           
                              max
                           
                        ) in case of high appearances.

Let 
                           
                              
                                 
                                    L
                                 
                                 
                                    pi
                                 
                              
                           
                         and 
                           
                              
                                 
                                    L
                                 
                                 
                                    pj
                                 
                              
                           
                         be respectively the set of the l nearest neighbors of 
                           
                              
                                 
                                    p
                                 
                                 
                                    i
                                 
                              
                           
                         and 
                           
                              
                                 
                                    p
                                 
                                 
                                    j
                                 
                              
                           
                        , with 
                           
                              
                                 
                                    p
                                 
                                 
                                    i
                                 
                              
                              ,
                              
                                 
                                    p
                                 
                                 
                                    j
                                 
                              
                              ∈
                              
                                 
                                    T
                                 
                                 
                                    a
                                 
                              
                           
                         and 
                           
                              i
                              ,
                              j
                              ∈
                              {
                              1
                              ,
                              …
                              ,
                              |
                              
                                 
                                    T
                                 
                                 
                                    a
                                 
                              
                              |
                              }
                           
                        . Due to the extreme sparsity in the 
                           
                              
                                 
                                    Z
                                 
                                 
                                    ^
                                 
                              
                           
                         affinity submatrix, the following problem arises: in many cases it holds 
                           
                              
                                 
                                    L
                                 
                                 
                                    pi
                                 
                              
                              ∩
                              
                                 
                                    L
                                 
                                 
                                    pj
                                 
                              
                              ≡
                              ∅
                           
                        , i.e. points 
                           
                              
                                 
                                    p
                                 
                                 
                                    i
                                 
                              
                           
                         and 
                           
                              
                                 
                                    p
                                 
                                 
                                    j
                                 
                              
                           
                         of the same a-th connected component do not have common neighbors. Therefore, 
                           
                              ∀
                              
                              
                                 
                                    p
                                 
                                 
                                    i
                                 
                              
                              ∈
                              
                                 
                                    T
                                 
                                 
                                    a
                                 
                              
                           
                         we propagate the neighbors of the rest 
                           
                              
                                 
                                    p
                                 
                                 
                                    j
                                 
                              
                              ∈
                              
                                 
                                    T
                                 
                                 
                                    a
                                 
                              
                           
                         points as follows:
                           
                              (5)
                              
                                 
                                    
                                       L
                                    
                                    
                                       pi
                                    
                                 
                                 =
                                 {
                                 
                                    
                                       L
                                    
                                    
                                       p
                                       1
                                    
                                 
                                 ∪
                                 
                                    
                                       L
                                    
                                    
                                       p
                                       2
                                    
                                 
                                 ∪
                                 …
                                 ∪
                                 
                                    
                                       L
                                    
                                    
                                       p
                                       |
                                       T
                                       a
                                       |
                                    
                                 
                                 }
                                 ,
                                 
                                 with
                                 
                                 i
                                 ∈
                                 1
                                 ,
                                 …
                                 ,
                                 |
                                 
                                    
                                       T
                                    
                                    
                                       a
                                    
                                 
                                 |
                              
                           
                        
                     

Then, based on (4) and (5) we propagate the constraints to the 
                           
                              
                                 
                                    Z
                                 
                                 
                                    ^
                                 
                              
                           
                         affinity submatrix as follows:
                           
                              (6)
                              
                                 
                                    
                                       Z
                                    
                                    
                                       ^
                                    
                                 
                                 (
                                 i
                                 ,
                                 
                                    
                                       p
                                    
                                    
                                       j
                                    
                                 
                                 )
                                 =
                                 
                                    
                                       lookupVec
                                    
                                    
                                       
                                          
                                             i
                                          
                                          
                                             ′
                                          
                                       
                                    
                                 
                              
                           
                        where 
                           
                              i
                              ∈
                              
                                 
                                    L
                                 
                                 
                                    pj
                                 
                              
                              ,
                              
                                 
                                    p
                                 
                                 
                                    j
                                 
                              
                              ∈
                              
                                 
                                    T
                                 
                                 
                                    a
                                 
                              
                           
                         and 
                           
                              
                                 
                                    freq
                                 
                                 
                                    i
                                 
                              
                              =
                              
                                 
                                    freq
                                 
                                 
                                    
                                       
                                          i
                                       
                                       
                                          ′
                                       
                                    
                                 
                              
                           
                        , with i being neighbor of 
                           
                              
                                 
                                    p
                                 
                                 
                                    j
                                 
                              
                           
                        ; point 
                           
                              
                                 
                                    p
                                 
                                 
                                    j
                                 
                              
                           
                         belonging to the a-th connected component according to the 
                           
                              M
                              ∪
                              C
                           
                         constraints pool; and frequency (
                           
                              
                                 
                                    freq
                                 
                                 
                                    i
                                 
                              
                           
                        ) of neighbor i (lying into the local neighborhood of points 
                           
                              
                                 
                                    p
                                 
                                 
                                    j
                                 
                              
                              ∈
                              
                                 
                                    T
                                 
                                 
                                    a
                                 
                              
                           
                        ) being equal to the sorted frequency 
                           
                              
                                 
                                    freq
                                 
                                 
                                    
                                       
                                          i
                                       
                                       
                                          ′
                                       
                                    
                                 
                              
                           
                        , stored in vector 
                           
                              degreeVec
                           
                        .

Next, we present an example of the constraints propagation method. Let 
                           
                              
                                 
                                    T
                                 
                                 
                                    a
                                 
                              
                              =
                              {
                              
                                 
                                    p
                                 
                                 
                                    1
                                 
                              
                              ,
                              
                                 
                                    p
                                 
                                 
                                    2
                                 
                              
                              }
                           
                         be a connected component, with 
                           
                              
                                 
                                    Z
                                 
                                 
                                    ^
                                 
                              
                              (
                              
                                 
                                    p
                                 
                                 
                                    1
                                 
                              
                              ,
                              
                                 
                                    p
                                 
                                 
                                    2
                                 
                              
                              )
                              =
                              1
                           
                         and 
                           
                              |
                              
                                 
                                    T
                                 
                                 
                                    a
                                 
                              
                              |
                              =
                              2
                           
                        . Also, let 
                           
                              
                                 
                                    L
                                 
                                 
                                    
                                       
                                          p
                                       
                                       
                                          1
                                       
                                    
                                 
                              
                              =
                              {
                              
                                 
                                    x
                                 
                                 
                                    1
                                 
                              
                              ,
                              
                                 
                                    x
                                 
                                 
                                    2
                                 
                              
                              }
                           
                         and 
                           
                              
                                 
                                    L
                                 
                                 
                                    
                                       
                                          p
                                       
                                       
                                          2
                                       
                                    
                                 
                              
                              =
                              {
                              
                                 
                                    x
                                 
                                 
                                    1
                                 
                              
                              ,
                              
                                 
                                    x
                                 
                                 
                                    3
                                 
                              
                              }
                           
                         be the sets of neighbors of 
                           
                              
                                 
                                    p
                                 
                                 
                                    1
                                 
                              
                           
                         and 
                           
                              
                                 
                                    p
                                 
                                 
                                    2
                                 
                              
                           
                        , with l
                        =2. Given 
                           
                              
                                 
                                    Z
                                 
                                 
                                    ^
                                 
                              
                              (
                              
                                 
                                    x
                                 
                                 
                                    1
                                 
                              
                              ,
                              
                                 
                                    p
                                 
                                 
                                    1
                                 
                              
                              )
                              =
                              0.4
                           
                        , 
                           
                              
                                 
                                    Z
                                 
                                 
                                    ^
                                 
                              
                              (
                              
                                 
                                    x
                                 
                                 
                                    2
                                 
                              
                              ,
                              
                                 
                                    p
                                 
                                 
                                    1
                                 
                              
                              )
                              =
                              0.6
                           
                         and 
                           
                              
                                 
                                    Z
                                 
                                 
                                    ^
                                 
                              
                              (
                              
                                 
                                    x
                                 
                                 
                                    1
                                 
                              
                              ,
                              
                                 
                                    p
                                 
                                 
                                    2
                                 
                              
                              )
                              =
                              0.5
                           
                        , 
                           
                              
                                 
                                    Z
                                 
                                 
                                    ^
                                 
                              
                              (
                              
                                 
                                    x
                                 
                                 
                                    3
                                 
                              
                              ,
                              
                                 
                                    p
                                 
                                 
                                    2
                                 
                              
                              )
                              =
                              0.7
                           
                        , we have 3 unique neighbors in the connected component 
                           
                              
                                 
                                    T
                                 
                                 
                                    a
                                 
                              
                           
                        , with 
                           
                              
                                 
                                    x
                                 
                                 
                                    1
                                 
                              
                           
                         appearing 2 times and 
                           
                              
                                 
                                    x
                                 
                                 
                                    2
                                 
                              
                              ,
                              
                                 
                                    x
                                 
                                 
                                    3
                                 
                              
                           
                         1 time. In this example, we have m
                        =2 unique frequencies, generating thus vector 
                           
                              degreeVec
                              =
                              (
                              1
                              ,
                              2
                              )
                           
                        . Then, based on 
                           
                              degreeVec
                           
                         and (4) with min=0.4 and max=0.7, i.e. the minimum and the maximum similarities of the neighbors of 
                           
                              
                                 
                                    p
                                 
                                 
                                    1
                                 
                              
                           
                         and 
                           
                              
                                 
                                    p
                                 
                                 
                                    2
                                 
                              
                           
                         in the connected component 
                           
                              
                                 
                                    T
                                 
                                 
                                    a
                                 
                              
                           
                        , we generate the 
                           
                              lookupVec
                           
                         vector as follows:
                           
                              
                                 lookupVec
                                 =
                                 
                                    
                                       
                                          0.4
                                          +
                                          
                                             
                                                degreeVec
                                             
                                             
                                                1
                                             
                                          
                                          ×
                                          
                                             
                                                (
                                                0.7
                                                -
                                                0.4
                                                )
                                             
                                             
                                                2
                                                -
                                                1
                                             
                                          
                                          ,
                                          0.4
                                          +
                                          
                                             
                                                degreeVec
                                             
                                             
                                                2
                                             
                                          
                                          ×
                                          
                                             
                                                (
                                                0.7
                                                -
                                                0.4
                                                )
                                             
                                             
                                                2
                                                -
                                                1
                                             
                                          
                                       
                                    
                                 
                                 ⇔
                                 lookupVec
                                 =
                                 (
                                 0.7
                                 ,
                                 1
                                 )
                              
                           
                        According to (5), we propagate the neighbors of 
                           
                              
                                 
                                    p
                                 
                                 
                                    1
                                 
                              
                           
                         and 
                           
                              
                                 
                                    p
                                 
                                 
                                    2
                                 
                              
                           
                         as follows: 
                           
                              
                                 
                                    L
                                 
                                 
                                    
                                       
                                          p
                                       
                                       
                                          1
                                       
                                    
                                 
                              
                              ≡
                              
                                 
                                    L
                                 
                                 
                                    
                                       
                                          p
                                       
                                       
                                          2
                                       
                                    
                                 
                              
                              ≡
                              {
                              
                                 
                                    x
                                 
                                 
                                    1
                                 
                              
                              ,
                              
                                 
                                    x
                                 
                                 
                                    2
                                 
                              
                              ,
                              
                                 
                                    x
                                 
                                 
                                    3
                                 
                              
                              }
                           
                        . Finally, based on the new sets of neighbors 
                           
                              
                                 
                                    L
                                 
                                 
                                    
                                       
                                          p
                                       
                                       
                                          1
                                       
                                    
                                 
                              
                              ,
                              
                                 
                                    L
                                 
                                 
                                    
                                       
                                          p
                                       
                                       
                                          2
                                       
                                    
                                 
                              
                           
                         and Eq. (6), the 
                           
                              
                                 
                                    Z
                                 
                                 
                                    ^
                                 
                              
                           
                         affinity submatrix is updated: 
                           
                              
                                 
                                    Z
                                 
                                 
                                    ^
                                 
                              
                              (
                              
                                 
                                    x
                                 
                                 
                                    1
                                 
                              
                              ,
                              
                                 
                                    p
                                 
                                 
                                    1
                                 
                              
                              )
                              =
                              1
                           
                        , 
                           
                              
                                 
                                    Z
                                 
                                 
                                    ^
                                 
                              
                              (
                              
                                 
                                    x
                                 
                                 
                                    2
                                 
                              
                              ,
                              
                                 
                                    p
                                 
                                 
                                    1
                                 
                              
                              )
                              =
                              0.7
                           
                        , 
                           
                              
                                 
                                    Z
                                 
                                 
                                    ^
                                 
                              
                              (
                              
                                 
                                    x
                                 
                                 
                                    3
                                 
                              
                              ,
                              
                                 
                                    p
                                 
                                 
                                    1
                                 
                              
                              )
                              =
                              0.7
                           
                         and 
                           
                              
                                 
                                    Z
                                 
                                 
                                    ^
                                 
                              
                              (
                              
                                 
                                    x
                                 
                                 
                                    1
                                 
                              
                              ,
                              
                                 
                                    p
                                 
                                 
                                    2
                                 
                              
                              )
                              =
                              1
                           
                        , 
                           
                              
                                 
                                    Z
                                 
                                 
                                    ^
                                 
                              
                              (
                              
                                 
                                    x
                                 
                                 
                                    2
                                 
                              
                              ,
                              
                                 
                                    p
                                 
                                 
                                    2
                                 
                              
                              )
                              =
                              0.7
                           
                        , 
                           
                              
                                 
                                    Z
                                 
                                 
                                    ^
                                 
                              
                              (
                              
                                 
                                    x
                                 
                                 
                                    3
                                 
                              
                              ,
                              
                                 
                                    p
                                 
                                 
                                    2
                                 
                              
                              )
                              =
                              0.7
                           
                        .

Let the Singular Value Decomposition (SVD) of 
                           
                              
                                 
                                    Z
                                 
                                 
                                    ^
                                 
                              
                              =
                              A
                              Σ
                              
                                 
                                    B
                                 
                                 
                                    T
                                 
                              
                           
                        , where 
                           
                              Σ
                              =
                              diag
                              (
                              
                                 
                                    σ
                                 
                                 
                                    1
                                 
                              
                              ,
                              …
                              ,
                              
                                 
                                    σ
                                 
                                 
                                    p
                                 
                              
                              )
                           
                         and 
                           
                              
                                 
                                    σ
                                 
                                 
                                    1
                                 
                              
                              ⩾
                              
                                 
                                    σ
                                 
                                 
                                    2
                                 
                              
                              ⩾
                              …
                              ⩾
                              
                                 
                                    σ
                                 
                                 
                                    p
                                 
                              
                              ⩾
                              0
                           
                         are the singular values of 
                           
                              
                                 
                                    Z
                                 
                                 
                                    ^
                                 
                              
                              ,
                              A
                              =
                              [
                              
                                 
                                    a
                                 
                                 
                                    1
                                 
                              
                              ,
                              …
                              ,
                              
                                 
                                    a
                                 
                                 
                                    p
                                 
                              
                              ]
                              ∈
                              
                                 
                                    R
                                 
                                 
                                    p
                                    ×
                                    p
                                 
                              
                           
                         and 
                           
                              
                                 
                                    a
                                 
                                 
                                    i
                                 
                              
                           
                        ’s are called left singular vectors, 
                           
                              B
                              =
                              [
                              
                                 
                                    b
                                 
                                 
                                    1
                                 
                              
                              ,
                              …
                              ,
                              
                                 
                                    b
                                 
                                 
                                    p
                                 
                              
                              ]
                              ∈
                              
                                 
                                    R
                                 
                                 
                                    n
                                    ×
                                    p
                                 
                              
                           
                         and 
                           
                              
                                 
                                    b
                                 
                                 
                                    i
                                 
                              
                           
                        ’s are called right singular eigenvectors. It is easy to verify that B are the eigenvectors of matrix 
                           
                              
                                 
                                    
                                       
                                          Z
                                       
                                       
                                          ^
                                       
                                    
                                 
                                 
                                    T
                                 
                              
                              
                                 
                                    Z
                                 
                                 
                                    ^
                                 
                              
                           
                         and A are the eigenvectors of matrix 
                           
                              
                                 
                                    Z
                                 
                                 
                                    ^
                                 
                              
                              
                                 
                                    
                                       
                                          Z
                                       
                                       
                                          ^
                                       
                                    
                                 
                                 
                                    T
                                 
                              
                           
                        . Since the size of 
                           
                              
                                 
                                    Z
                                 
                                 
                                    ^
                                 
                              
                              
                                 
                                    
                                       
                                          Z
                                       
                                       
                                          ^
                                       
                                    
                                 
                                 
                                    T
                                 
                              
                           
                         is 
                           
                              p
                              ×
                              p
                           
                        , we can compute A in 
                           
                              O
                              (
                              
                                 
                                    p
                                 
                                 
                                    3
                                 
                              
                              )
                           
                         and then B can be computed as 
                           
                              B
                              =
                              
                                 
                                    Σ
                                 
                                 
                                    -
                                    1
                                 
                              
                              
                                 
                                    A
                                 
                                 
                                    T
                                 
                              
                              
                                 
                                    Z
                                 
                                 
                                    ^
                                 
                              
                           
                        . The overall time is 
                           
                              O
                              (
                              
                                 
                                    p
                                 
                                 
                                    3
                                 
                              
                              +
                              
                                 
                                    p
                                 
                                 
                                    2
                                 
                              
                              n
                              )
                           
                        , significantly reduced than 
                           
                              O
                              (
                              
                                 
                                    n
                                 
                                 
                                    3
                                 
                              
                              )
                           
                         since 
                           
                              p
                              ≪
                              n
                           
                        . In order to obtain the final k clusters the traditional k-means method is applied to the n right singular eigenvectors 
                           
                              
                                 
                                    b
                                 
                                 
                                    i
                                 
                              
                           
                        ’s, i.e. the rows of B.

The algorithmic steps of the proposed Spectral Clustering method based on Pairwise Constraints (SC-PC) are described in Algorithm 1 with reference to the corresponding equations.

Given n data points with dimensionality d, we use 
                           
                              p
                              ≪
                              n
                           
                         pairwise-constrained points that form 
                           
                              |
                              H
                              |
                           
                         different connected components based on the constraints pool 
                           
                              M
                              ∪
                              C
                           
                        . The total complexity of the proposed method is the sum of: (a) 
                           
                              O
                              (
                              |
                              M
                              |
                              +
                              |
                              C
                              |
                              )
                           
                         to compute the connected components of the p points participating in the 
                           
                              |
                              M
                              |
                           
                         must-link and 
                           
                              |
                              C
                              |
                           
                         cannot link constraints; (b) 
                           
                              O
                              (
                              pnd
                              )
                           
                         to compute the 
                           
                              
                                 
                                    Z
                                 
                                 
                                    ^
                                 
                              
                           
                         affinity submatrix (graph construction); (c) 
                           
                              O
                              (
                              l
                              |
                              H
                              |
                              )
                           
                         to create the 
                           
                              |
                              H
                              |
                           
                         adjacency submatrices and to perform the constraints propagation to the local neighborhoods of each component; (d) 
                           
                              O
                              (
                              
                                 
                                    p
                                 
                                 
                                    3
                                 
                              
                              +
                              
                                 
                                    p
                                 
                                 
                                    2
                                 
                              
                              n
                              )
                           
                         to compute the eigenvectors of B; and (e) 
                           
                              O
                              (
                              tknp
                              )
                           
                         to perform the traditional k-means to the n right singular p-dimensional eigenvectors 
                           
                              
                                 
                                    b
                                 
                                 
                                    i
                                 
                              
                           
                        ’s, where t is the number of iterations in k-means.
                           Algorithm 1
                           SC-PC algorithm 
                                 
                                    
                                       
                                       
                                          
                                             
                                                Require: dataset 
                                                   
                                                      X
                                                      ∈
                                                      
                                                         
                                                            R
                                                         
                                                         
                                                            d
                                                            ×
                                                            n
                                                         
                                                      
                                                   
                                                , set of pairwise constraints 
                                                   
                                                      M
                                                      ∪
                                                      C
                                                   
                                                , points 
                                                   
                                                      p
                                                      ∈
                                                      T
                                                   
                                                 that participate in the pairwise constraints (
                                                   
                                                      p
                                                      ≪
                                                      n
                                                   
                                                )
                                          
                                          
                                             
                                                Ensure: 
                                                k clusters
                                          
                                          
                                             
                                                Compute 
                                                   
                                                      
                                                         
                                                            Z
                                                         
                                                         
                                                            ^
                                                         
                                                      
                                                      ∈
                                                      
                                                         
                                                            R
                                                         
                                                         
                                                            p
                                                            ×
                                                            n
                                                         
                                                      
                                                   
                                                 (Eqs. (2) and (3))
                                          
                                          
                                             
                                                Compute Connected Components (CC) of points 
                                                   
                                                      p
                                                      ∈
                                                      T
                                                      ⊂
                                                      X
                                                   
                                                
                                             
                                          
                                          
                                             
                                                
                                                for each CC do
                                             
                                          
                                          
                                             
                                                Generate the respective adjacency submatrix 
                                                   
                                                      
                                                         
                                                            L
                                                         
                                                         
                                                            
                                                               
                                                                  T
                                                               
                                                               
                                                                  a
                                                               
                                                            
                                                         
                                                      
                                                   
                                                 for the a-th CC
                                          
                                          
                                             
                                                Build lookup table with neighbor frequencies (Eq. (4))
                                          
                                          
                                             
                                                Constraints propagation to points of the same CC (Eq. (5))
                                          
                                          
                                             
                                                Update of 
                                                   
                                                      
                                                         
                                                            Z
                                                         
                                                         
                                                            ^
                                                         
                                                      
                                                   
                                                 matrix with lookup table values (Eq. (6))
                                          
                                          
                                             
                                                
                                                end for
                                             
                                          
                                          
                                             
                                                Compute the first k eigenvectors of 
                                                   
                                                      Z
                                                      
                                                         
                                                            Z
                                                         
                                                         
                                                            ^
                                                         
                                                      
                                                   
                                                , denoted by 
                                                   
                                                      A
                                                      =
                                                      [
                                                      
                                                         
                                                            a
                                                         
                                                         
                                                            1
                                                         
                                                      
                                                      ,
                                                      …
                                                      ,
                                                      
                                                         
                                                            a
                                                         
                                                         
                                                            p
                                                         
                                                      
                                                      ]
                                                      ∈
                                                      
                                                         
                                                            R
                                                         
                                                         
                                                            p
                                                            ×
                                                            p
                                                         
                                                      
                                                   
                                                
                                             
                                          
                                          
                                             
                                                Compute 
                                                   
                                                      B
                                                      =
                                                      [
                                                      
                                                         
                                                            b
                                                         
                                                         
                                                            1
                                                         
                                                      
                                                      ,
                                                      …
                                                      ,
                                                      
                                                         
                                                            b
                                                         
                                                         
                                                            p
                                                         
                                                      
                                                      ]
                                                      ∈
                                                      
                                                         
                                                            R
                                                         
                                                         
                                                            n
                                                            ×
                                                            p
                                                         
                                                      
                                                   
                                                
                                             
                                          
                                          
                                             
                                                Each row of B is a data point and apply k-means to get the clusters
                                          
                                       
                                    
                                 
                              
                           

@&#EXPERIMENTAL RESULTS@&#

In our experiments we used three high-dimensional benchmark data sets,
                           5
                           All data sets were downloaded in the.mat format, publicly available at http://www.cad.zju.edu.cn/home/dengcai/Data/data.html.
                        
                        
                           5
                         including a shape image data set (COIL100, Nene, Nayar, & Murase, 1996), a face data set (CMU PIE, Bsat, Baker, & Sim, 2001) and a handwritten digit data set (MNIST, Cun, Bottou, Bengio, & Haffner, 1998). Table 1
                         summarizes the details of the data sets.

The proposed Spectral Clustering method based on Pairwise Constraints (SC-PC), was compared against (a) the baseline NCut method (Ng et al., 2002); (b) the semi-supervised method of Near Strangers or Distant Relatives (NSDR) (Chen & Feng, 2012); the accelerated methods of (c) Nyström approximation-based SC (Fowlkes et al., 2004); (d) LSC-K (Chen & Cai, 2011); (e) LSC-R (Chen & Cai, 2011); and (f) LSC-WPR (Rafailidis et al., 2014).

In (Chen & Feng, 2012), Chen and Feng proposed the semi-supervised method of NSDR. Provided a set of per class must-link and cannot-link constraints to a 
                           
                              n
                              ×
                              n
                           
                         affinity matrix, distortion measures were defined to measure the closeness of the data with the criteria that l neighbors of dissimilar data are dissimilar, while l neighbors of similar data are also similar. Then, in the calculated 
                           
                              n
                              ×
                              n
                           
                         affinity matrix, the NCut (Shi & Malik, 1997) method was applied to generate the final k clusters. Despite the fact that NSDR’s clustering accuracy is high, scalability is not ensured since NSDR preserves the high complexity of the NCut method.

In (Fowlkes et al., 2004), p sample points/landmarks were selected randomly out of the initial n data points and eigendecomposition was performed to a highly reduced 
                           
                              p
                              ×
                              p
                           
                         submatrix. Then, the calculated p eigenvectors were used to estimate the original n eigenvectors based on the Nyström method (Nyström, 1930). In (Chen & Cai, 2011), the Landmark-based representation SC method (LSC) was proposed. By selecting p landmarks, a 
                           
                              n
                              ×
                              p
                           
                         affinity submatrix was created based on a sparse coding technique (Section 2.1), expressing the pairwise similarities between the p landmarks and the n data points. Two variations of LSC were proposed, LSC-R with the p landmarks being randomly selected; and LSC-K, where the preprocessing step of k-means is added into LSC, selecting thus p centroids as landmarks. In (Rafailidis et al., 2014), the Weighted PageRank algorithm was considered as a landmark selection strategy for LSC (LSC-WPR), outperforming LSC-R and LSC-K, by selecting more representative landmarks. However, all the accelerated methods work in an unsupervised way, by not exploiting pairwise constraints and thus preserving the accuracy of the unsupervised baseline methods, e.g. (Ng et al., 2002).

The implementation of NCut is publicly available.
                           6
                           
                              http://vision.ucsd.edu/∼sagarwal/clustering.html.
                        
                        
                           6
                         By extending NCut we implemented the semi-supervised SC method of NSDR. Note that for the NSDR method, given a set 
                           
                              T
                           
                         of 
                           
                              p
                              =
                              |
                              T
                              |
                           
                         points in the pairwise constraints, the number of must-link and cannot-link constraints equals 
                           
                              (
                              |
                              M
                              |
                              +
                              |
                              C
                              |
                              )
                           
                        . For the Nyström approximation based SC we choose the Matlab implementation with orthogonalization, which is publicly available.
                           7
                           
                              alumni.cs.ucsb.edu/∼wychen/sc.html.
                        
                        
                           7
                         The matlab codes of LSC-K and LSC-R are also publicly available
                           8
                           
                              http://www.cad.zju.edu.cn/home/dengcai/Data/Clustering.html.
                        
                        
                           8
                         by the authors of (Chen & Cai, 2011). For LSC-WPR, we used the Gephi toolkit
                           9
                           
                              http://gephi.github.io/.
                        
                        
                           9
                         to calculate the weighted PageRank values for the landmark selection step.

Regarding the parameter tuning, in k-means we set the default value of t
                        =100 iterations, for all methods. Following (Chen & Feng, 2012), for the NSDR method the l number of nearest neighbors is set to 5. For the proposed SC-PC method we also set l to 5, i.e. the l neighbors of the 
                           
                              |
                              
                                 
                                    T
                                 
                                 
                                    a
                                 
                              
                              |
                           
                         points based on the affinity submatrix 
                           
                              
                                 
                                    Z
                                 
                                 
                                    ^
                                 
                              
                           
                         (Section 2.3). Finally, following (Chen & Cai, 2011; Rafailidis et al., 2014) for LSC-K, LSC-R, LSC-WPR and SC-PC, we varied the number of r nearest landmarks (Section 2.1) from 2 to 10, where we concluded to 6, 4 and 3 for COIL100, CMU PIE and MNIST, respectively, with the exceptional case of r
                        =3 for LSC-K and LSC-R in CMU-PIE.

@&#RESULTS@&#

In our experiments we varied the number of 
                           
                              p
                              =
                              |
                              T
                              |
                           
                         points that participate in the pairwise constraints from 5% to 20% at a 5% step, expressed as a percentage of the n total size. The main reasons for limiting our p variation are (a) for the accelerated methods it must hold 
                           
                              p
                              ≪
                              n
                           
                         to preserve the computational cost low; and (b) in real-world applications it is easy to acquire raw data, while pairwise must-link and cannot-link constraints are expensive to generate (and thus to retrieve the respective p points that participate in the pairwise constraints). In the MNIST data set, to preserve the computational cost low we varied the p points from 300 to 1200, using a step of 300 points. Since in the NSDR and the proposed SC-PC methods, additional information is used by considering the set 
                           
                              T
                           
                        , with 
                           
                              p
                              =
                              |
                              T
                              |
                           
                         of the points that participate in the pairwise constraints, in all experiments the set 
                           
                              T
                           
                         is considered as training set, whereas the remaining set of n-p unconstrained points in the data set are considered as test set. To ensure fair comparison, for each method the same training/test sets were used. Following the evaluation protocol of (Chen & Cai, 2011; Chen & Feng, 2012), all experiments were repeated 10 times, where the means of (a) Acc (Cai, He, & Han, 2005), (b) Normalized Mutual Information (NMI) (Strehl & Ghosh, 2002) and (c) computational cost (in seconds) are reported. Additionally, for all experiments, we applied statistical pairwise t-tests, where the calculated differences of means between the runs were insignificant at 0.05 level. The direct comparison of our proposed method with the other accelerated methods in terms of Accuracy, NMI and computational cost are presented in Tables 2–4
                        
                        
                         and the best score is highlighted. Moreover, in the same tables the baseline methods of NCut and NSDR are presented for coherency. It should be noted, however, that the baseline methods are not directly compared to the accelerated ones due their computational complexity (they require significant larger processing times), while they do not always outperform the latter methods in terms of accuracy and NMI.

All experiments were performed on a Windows 7 PC with Intel core i5-2430M CPU @ 2.4GHz with 8GB RAM, using Matlab 2010a.

@&#DISCUSSION@&#

With respect to the clustering accuracy, the proposed SC-PC method outperforms the competitive accelerated methods. By dynamically adapting and propagating the constraints to the local neighborhood, SC-PC clearly has higher Acc and NMI than the accelerated methods of Nyström and LSC-R on the three evaluation data sets. Compared to LSC-K, the proposed SC-PC method achieves higher clustering accuracy in terms of Acc and NMI in all datasets except for the MNIST data set. Even in this case, SC-PC’s NMI performance is comparable to LSC-K, while the computational cost is significantly reduced (Table 4). Moreover, SC-PC achieves higher Acc and NMI than LSC-K in COIL100 and CMU PIE. The proposed SC-PC also outperforms LSC-WPR in most cases. However, for a small number of landmarks e.g. p
                        =5% in COIL100 and CMU PIE, as wel as for all p variations in MNIST, with 
                           
                              p
                              ≤
                              1.71
                              %
                           
                         (where p
                        =300, 600, 900 and 1200 correspond to p
                        =0.42%, 0.85%, 1.28% and 1.71%), LSC-WPR achieves higher NMI score than SC-PC, whereas for larger p values (
                           
                              >
                           
                        5%) SC-PC is more accurate than LSC-WPR in COIL100 and CMU-PIE. This happens because for a small number of landmarks, LSC-WPR identifies more important landmarks based on the weighted PageRank algorithm; however, by increasing the number of landmarks, LSC-WPR considers less important data points as landmarks, limiting thus the clustering accuracy, compared to SC-PC. To verify this, we conducted the following experiment; we increased the number of the p landmarks in the MNIST data set, considering p
                        =1500 and p
                        =1800 landmarks, corresponding to p
                        =2.14% and p
                        =2.57%, respectively. As presented in Table 5
                        , for both p variations SC-PC achieves higher Acc and NMI in less computational time compared to LSC-WPR and LSC-K. Finally, a very interesting finding of our experiments is the fact that our approach outperforms NSDR even though it uses its base concept of must-link and cannot-link constraints. This fact is credited to the sparse coding approach that filters out possible outliers and noise that could drive the clustering in poor results as well as the dynamic adaptation of the local neighborhoods to the characteristics of each connected component.

With respect to the computational time, LSC-R has the lowest computational cost, outperforming the Nyström method, as it was also experimentally shown in (Chen & Cai, 2011). The proposed SC-PC method preserves the processing cost relatively low, compared to the rest of accelerated methods of LSC-K and LSC-WPR, while SC-PC achieves higher Acc and NMI by exploiting the pairwise constraints. Especially for the large-scale data set of MNIST, by varying the number of the p constrained points in the range of 300–1800, SC-PC needs 9.58–33.57s, which is almost two times faster than LSC-K which needs 14.05–56.35s. Also, SC-PC is faster than LSC-WPR which requires 22.13–36.19s. Compared to NCut and the semi-supervised NDSR method, it is clear that the proposed SC-PC method is at least 40 times faster with cases where the difference reaches to 350 times faster. At this point we must mention that in addition to the high processing cost, NCut and NSDR cause memory “overflows” in the large-scale data set of MNIST, making them inappropriate for larger datasets.

Summarizing our results, the proposed SC-PC method outperforms the accelerated methods in terms of clustering accuracy while it manages to keep computational costs relatively close to the fast accelerated method of LSC-R, compared to LSC-K and LSC-WPR. Additionally, SC-PC outperforms, in most of the cases, the clustering accuracy of the semi-supervised baseline NSDR method, while it drastically reduces the processing cost.

@&#CONCLUSION@&#

In this paper we present an efficient method for accurate and scalable SC. In particular, we handle real-world problems which either decrease the clustering accuracy or significantly increase the computation time. This happens because state-of-the-art methods of spectral clustering either follow unsupervised strategies or lack scalability. The proposed SC-PC method achieves high clustering accuracy and ensures scalability, by (a) extracting and setting the pairwise constraints to a small affinity submatrix; (b) computing connected components to dynamically adapt the local neighborhoods of points of the same component; (c) performing constraints propagation to the adapted local neighborhoods; and (e) following a landmark spectral clustering strategy. As it was experimentally shown, the proposed method outperforms state-of-the-art spectral clustering methods that either follow semi-supervised or scalable strategies, in terms of clustering accuracy and computational cost.

Moreover, in real-world applications continuous updates are required as the data sets evolve over time. Recently, several incremental strategies (Dhanjal, Gaudel, & Clémençon, 2011; Ning, Xu, Chi, Gong, & Huang, 2010) have been proposed in the literature, by efficiently updating the eigenspace. (Chi, Song, Zhou, Hino, & Tseng, 2009; Xu, Kliger, & Hero, 2010, 2014) able to handle not only insertion/deletion of data points but also similarity changes between existing points. In our future research we plan to examine both the incremental and evolving strategies of the proposed SC-PC method in the context of spectral clustering in Big Data (Mall, Langone, & Suykens, 2013).

@&#ACKNOWLEDGMENT@&#

This work was supported by the EC FP7 funded Project CUBRIK, ICT-287704 (www.cubrikproject.eu).

@&#REFERENCES@&#

