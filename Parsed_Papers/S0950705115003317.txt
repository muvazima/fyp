@&#MAIN-TITLE@&#Modeling and simulation method of the emergency response systems based on OODA

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           Two kinds of emergency response frameworks are built based on OODA loop theory.


                        
                        
                           
                           Describe the emergency response mechanism based on OODA–DEVS theory model.


                        
                        
                           
                           Emergency response system on earthquake is modeling and simulating based on the mentioned mechanism.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Emergency response

OODA

DEVS

Cooperation

Modeling and simulation

@&#ABSTRACT@&#


               
               
                  It is necessary to provide a set of scientific foundations to support the emergency response management. The emergency response process are described based on the ideas from OODA (Observe, Orient, Decide, Act) loop theory. Pointing at the difficulty in the described the cooperation in the emergency response process, the coupled OODA framework is built to analyze the interaction between the emergency response units. In order to demonstrate the emergency response mechanism in theoretic way, the simulation theory of DEVS (Discrete Event System Specification) is adopted to build up the simulator model of the basic OODA process framework. Utilize the coupled DEVS model to build the simulation coordinator of the coupled OODA process framework. The earthquake disaster response scenario in STAGE is built on the emergency response mechanism, and the emergency collaborative rescue process based on coupled OODA frameworks is adopted to build up the emergency response system, and the simulation results show reasonable.
               
            

@&#INTRODUCTION@&#

There are lots of countries like China, suffering from severe natural disasters and the others emergency disasters. It is very important to improve the emergency response effectiveness by mitigating the damage of the disasters. Due to the lack of enough emergency response information, lack of knowledge and theory of the emergency response mechanism, the decision-makers find it difficult to make a response decision. And therefore, the effectiveness of the emergency response will be affected greatly. For example, the weak points were exposed in the emergency response to the catastrophe of Wenchuan earthquake including: (1) the decision-making slowly, (2) less cooperation between different kinds of the rescue teams. Such shortcomings also existed in the similar disasters like Ya’an earthquake in south-west of China in 2013 and the super hurricane “Swallow” in Philippines in 2013. In fact, the Philippine government was scolded because of making emergency response slowly and carrying out rescue disorderly.

These examples show that it is very important to make scientific decisions based on the right mechanism of the emergency response system, so as to improve the emergency response capability.

On the emergency response, there are some references in recent years. For example, Hossain et al. [1], pointing to the emergency response to bushfire, propose an approach to map the collaboration network among emergency management personnel, and use Exponential Random Graph (ERG) models to explore the micro-level network structures of emergency management networks. Amailef and Lu [2] present a MERS ontology-supported case-based reasoning (OS-CBR) method to support emergency decision makers to effectively respond to emergencies. The OS-CBR approach includes a set of algorithms that have been successfully implemented in four components: data acquisition; ontology; knowledge base; and reasoning; as a sub-system of the MERS framework. There are also some other related papers in the area of Emergency Response Systems, such as Naderpour et al. [3], adopt the Bayesian networks and fuzzy logic system to support the operators to reduce the errors and improve the performance when confront with abnormal situations; Sharma et al. [4], research the emergency response plan proposed for petroleum storage sites based on e-ICS (electronic-Incident Command System (e-ICS)); Wang et al. [5], propose a method of generating task network for emergency response based on the snowball procedure and an associated method of analyzing task network based on social network analysis; emergency response covers all operational and procedural tasks that are conducted individually or collaboratively by qualified professionals with the goal of normalizing the situation after a disruption [6,7]; Millner et al. [8] analyze the emergency response and preparedness for hazardous materials includes accidental releases to intentional releases through acts of terrorism.

There also were some related papers about decision support systems for emergency management, such as, Fogli and Guida [9] propose a novel knowledge-centered design methodology and demonstrated through the application in a concrete case study in the field of pandemic flu emergency management; Malizia et al. [10], develop an ontology to investigate different sources: accessibility guidelines, emergency response systems, communication devices and technologies, taking into account the different abilities of people to react to different alarms; Ref. [11] presents a decision support system for assessing alternative distribution routes in terms of travel time, risk and evacuation implications while coordinating the emergency response deployment decisions with the hazardous materials routes; Li et al. [12], propose a strategy to form a community-based virtual database to respond to emergencies in a fast and an effective manner by means of MCDM. Some paper [13] proposing a decision-making framework, uses failure mode effect and criticality analysis (FMECA) to evaluate the effectiveness of ERS to make improvements in oil spill emergency management. Huang et al. [14], characterize the humanitarian objectives of emergency resource allocation and distribution in disaster response operations. An integrated multi-objective optimization model that combines resource allocation with emergency distribution is developed, where a time space network is used to incorporate the frequent information and decision updates in a rolling horizon approach. Mohammadfam et al. [15], examine the cohesions status of the coordination within response teams in the emergency response team (ERT) in a refinery, and utilize cohesion indicators of social network analysis (SNA; density, degree centrality, reciprocity, and transitivity) to examine the coordination of the response teams as a whole network. Thorstensson et al. [16] think that the monitoring and documentation of the internal work and communication processes can increase the ability to investigate and understand cause–effect relationships between incoming field reports, operational procedures, decisions, commands and the rescue response in the field. They present a method and a software tool that enable an observer to monitor and record communication events in a command post staff. McMaster and Baber [17] make an investigation of command and control during Multi-Agency Operations, and elaborate on the known themes associated with multi-agency emergency response. The emergency information processing by a command post station is described by Detect–Assess–Decide–Act (DADA). The DADA loop is a similar framework of the commonly used Observe–Orient–Decide–Act (OODA) loop [18]. The parts of Observe and the Orient in OODA loop have some connection with the situation awareness (SA). Naderpour et al. [19] present an innovative cognition-driven decision support system called the situation awareness support system (SASS) to manage abnormal situations in safety–critical environments in which the effect of situational complexity on human decision-makers is a concern. As a result, a situational network modeling process and a situation assessment model that exploits the specific capabilities of dynamic Bayesian networks and risk indicators are first proposed to improve performance and to reduce error in managing abnormal situation. On the emergency risk evaluation, Zhang et al. [20], propose an extended fuzzy multi-criteria group evaluation method, which can deal with both subjective and objective criteria under multi-levels by a group of evaluators, for emergency management evaluation.

The above mentioned showed that, there are many methods and ways to support the emergency response. But few references provided the enough sound theory and method to analyze the mechanism of the emergency response process. So it is necessary to understand the emergency response mechanism which should include the processes of occurrence, development, and evolution and end, so as to get reasonable way to support the emergency leader to make decision. For this reason, the scientific emergency decision needs to analyze the emergency response law in emergency management.

In fact, the emergency response operations had already been a part of the non-war military action in the many country. The America Air Force colonel, named John Boyd, proposed the OODA (Observe, Orient, Decide and Act) combating loop theory. The OODA loop theory was first described the force to carry out the four basic tasks in the combat loop. The idea is worth learning. The emergency response in civil field can also be seen as the military operation in peace year, and it is a new idea to research the emergency response mechanism based on OODA loop.

In fact, it is very difficult to describe the mechanism of the emergency response. But we analyze the emergency response process based on the OODA cycle theory, and it is easy to master the mechanism of the emergency response. Such a research will be helpful for the evaluation and analysis of the response effectiveness to the emergency disaster.

And therefore, the arrangement in this research includes: firstly, build the emergency response mechanism framework; then use the DEVS (Discrete Event System Specification) to build up a set of theoretical description models for the emergency response frameworks based on OODA; finally, take an abrupt earthquake as the scenario, and carry out the simulation application based on the OODA–DEVS models, and demonstrate the feasibility of the simulation results.

The work in this research paper can be highlighted as three items:
                        
                           (1)
                           Two kinds of emergency response frameworks are built based on OODA loop theory.

Describe the emergency response mechanism based on OODA–DEVS theory model.

Emergency response system on earthquake is modeling and simulating based on the mentioned mechanism.

It is very important to understand the rules (or law) in the whole process of emergency response systems that support to optimize the emergency management. These sections will first introduce the OODA theory in military, and then analyze the emergency response characteristic, and finally, build the mechanism of emergency response based on OODA theory.

The OODA loop was originally used to elaborate the aircraft in air combat tactics to defeat the enemy, the entire cycle consists of four operational processes “Observe, Orient, Decide, and Act.” The OODA is the short for the processes of “Observe, Orient, Decide and Act”. This theory is proposed initially by John Boyd, for the purpose of application for Combat Tactical, also called “Boyd Loop”, as shown in Fig. 1
                        .

Considering the emergency response operations are similar under many conditions, in this paper, an emergency response mechanism framework can be built based on the OODA cycle theory. The OODA cycle is very suitable for describing the emergency response process under the conditions of the abrupt disasters. According to the independence of emergency forces, there are two kinds of emergency response process frameworks.

The first kind of emergency response framework is a basic OODA framework, which only describes the one emergency force to carry out the four modules tasks including: disaster information monitoring, judge the collected information, evaluation and decision making for the emergency plans, take the optimal actions. Such a basic framework as the operation process of an emergency response team with a basic OODA loop, as shown in Fig. 2
                        .

The second kind of emergency response framework is the combination of many basic OODA frameworks, seeing Fig. 3
                        . You can find that the combined framework is changed into an new OODA framework. In the similar way, the higher level and more complex OODA framework are gotten. In fact, the combination framework is so important that it can describe properly the cooperation process with many emergency units.

Above two kinds of frameworks both have the same OODA loop idea, such an idea is the essence of the emergency response mechanism.

The emergency event breaks out in a random way with unexpectedness, and the emergency response process will be a process of discrete event system. For instance, when an earthquake disaster breaks out in some distant town, the rescue processes of the emergency response teams are very complicated because the damaged disaster zone with more risk, less information.

And therefore, in order to evaluate the efficiency of emergency response plans, it is necessary to adopt the simulation method to analyze the emergency response process. The core task of simulation is the system modeling. Considering the uncertainty and complexity of the emergency management problem, it is difficult to carry out the purely mathematical method to analyze the emergency response process. Luckily, the Discrete Event System Specification (DEVS) by Zeigler is helpful to analyze such discrete event system problems.

DEVS (Discrete Event System Specification) is put forth by B.P. Zeigler, and it is a set theory to describe the discrete event system, and it is a mechanism used for modeling and simulation system (M&S) of the modular, hierarchical and formal. DEVS model mainly includes: atomic DEVS and coupled DEVS. The atomic DEVS is the basic model, which describes the discrete event system internal state and external state changes, external input events and the output of the system and so on. Atomic models can combine into a relatively complex coupled model through the connection. The coupled model contains many members, which they can be atomic model, also can be other coupled model.

The most basic of discrete event system are described by DEVS atomic model (the basic unit). Its structure diagram is shown in Fig. 4
                           . DEVS atomic model has 7 elements, and it can be described as follows:
                              
                                 (1)
                                 
                                    AtomicDEVS
                                    =
                                    〈
                                    S
                                    ,
                                    ta
                                    ,
                                    
                                       
                                          δ
                                       
                                       
                                          int
                                       
                                    
                                    ,
                                    X
                                    ,
                                    
                                       
                                          δ
                                       
                                       
                                          ext
                                       
                                    
                                    ,
                                    Y
                                    ,
                                    λ
                                    〉
                                 
                              
                           where:
                              
                                 
                                    S is the set of sequential states (or also called the set of partial states).


                                    X is the set of input events; Y is the set of output events.


                                    
                                       
                                          Q
                                          =
                                          
                                             
                                                
                                                   (
                                                   s
                                                   ,
                                                   
                                                      
                                                         t
                                                      
                                                      
                                                         e
                                                      
                                                   
                                                   )
                                                   |
                                                   s
                                                   ∈
                                                   S
                                                   ,
                                                   0
                                                   ⩽
                                                   
                                                      
                                                         t
                                                      
                                                      
                                                         e
                                                      
                                                   
                                                   ⩽
                                                   ta
                                                   (
                                                   s
                                                   )
                                                
                                             
                                          
                                       
                                     is the general state set of the system, and 
                                       
                                          
                                             
                                                t
                                             
                                             
                                                e
                                             
                                          
                                       
                                     is the elapsed time since the last event.


                                    
                                       
                                          
                                             
                                                δ
                                             
                                             
                                                int
                                             
                                          
                                          :
                                          
                                          S
                                          →
                                          S
                                       
                                     is the internal state transition function and defines the internal state of the system is how to transfer the change. In the running process of the system, if no external event 
                                       
                                          x
                                          ∈
                                          X
                                       
                                     gets into, the elapsed time 
                                       
                                          
                                             
                                                t
                                             
                                             
                                                e
                                             
                                          
                                       
                                     reaches the lifetime 
                                       
                                          ta
                                          (
                                          s
                                          )
                                       
                                     of the state, and then start from 0.


                                    
                                       
                                          
                                             
                                                δ
                                             
                                             
                                                ext
                                             
                                          
                                          :
                                          
                                          Q
                                          ×
                                          X
                                          →
                                          S
                                       
                                     is the external transition function, defines that how to change for the internal state S of the system when the external input events occurs. For example, when the system is in the state of s with the elapsed time 
                                       
                                          
                                             
                                                t
                                             
                                             
                                                e
                                             
                                          
                                       
                                    , an external event 
                                       
                                          x
                                          ∈
                                          X
                                       
                                     is coming, the system state will be transferred by function 
                                       
                                          
                                             
                                                δ
                                             
                                             
                                                ext
                                             
                                          
                                          (
                                          s
                                          ,
                                          
                                             
                                                t
                                             
                                             
                                                e
                                             
                                          
                                          ,
                                          x
                                          )
                                       
                                    , at the same time, the elapsed time 
                                       
                                          
                                             
                                                t
                                             
                                             
                                                e
                                             
                                          
                                       
                                     is set to 0.


                                    
                                       
                                          λ
                                          :
                                          
                                          S
                                          →
                                          Y
                                       
                                     is the output function. When the internal state s of the system is shifted, it will produce the corresponding output event Y by the output function 
                                       
                                          λ
                                          (
                                          s
                                          )
                                       
                                    .


                                    
                                       
                                          ta
                                          :
                                          
                                          S
                                          →
                                          
                                             
                                                R
                                             
                                             
                                                0
                                                ,
                                                ∞
                                             
                                             
                                                +
                                             
                                          
                                       
                                     is the time advance function which is used to determine the lifespan of a state.


                           
                              
                                 
                                    
                                       R
                                    
                                    
                                       0
                                       ,
                                       ∞
                                    
                                    
                                       +
                                    
                                 
                              
                            means Non negative real numbers. When there is no external event arrives, the total time of the system to maintain a state of S. 
                              
                                 ta
                                 (
                                 s
                                 )
                                 =
                                 0
                              
                            is called the instantaneous state, the instantaneous state means that it will not consume any system time, namely, the execution of the state, the simulation system clock does not need to move forward; 
                              
                                 ta
                                 (
                                 s
                                 )
                                 =
                                 +
                                 ∞
                              
                            is called a stationary state, when the system fails to receive the external events, it will remain in this state.

The DEVS atomic models can be combined into the coupled model or a higher level of DEVS model. The coupled models can be used to describe the complex discrete event system, for example, it is very helpful of describing the cooperation in many emergency response departments. Coupled DEVS will introduce in Section 3.2.

According to the emergency rescue operation characteristics, the two emergency response process frameworks are described respectively as a basic OODA framework and the coupled OODA framework. For the coupled OODA framework, it embodies the important organization and relationship in the emergency management especially in describing the cooperation between the rescue departments. But in usually case, many emergency departments make response to disaster only in the basic OODA framework. However, the basic OODA framework is the components of the coupled OODA framework.

The atomic DEVS model is very fit for describing the basic process of emergency response.

For a single response unit like a rescue team, the OODA framework based on DEVS atomic model is expressed as follows:
                              
                                 
                                    iOODA
                                    -
                                    DEVS
                                    =
                                    〈
                                    S
                                    ,
                                    ta
                                    ,
                                    
                                       
                                          δ
                                       
                                       
                                          int
                                       
                                    
                                    ,
                                    X
                                    ,
                                    
                                       
                                          δ
                                       
                                       
                                          ext
                                       
                                    
                                    ,
                                    Y
                                    ,
                                    λ
                                    〉
                                 
                              
                           In above model, we have a detail description as follows:
                              
                                 
                                    X is the set of inputting value of the i-th emergency response unit, which represents the emergency response unit i receives information, such as updated weather information or orders from the commander of emergency response center.


                                    Y is the set of output value of the i-th emergency response unit, which represents the feedback information from emergency response, such as the results of the rescue mission like success or failure.


                                    
                                       
                                          ta
                                          :
                                          
                                          S
                                          →
                                          
                                             
                                                R
                                             
                                             
                                                0
                                                ,
                                                ∞
                                             
                                             
                                                +
                                             
                                          
                                       
                                     is the time advance function of s internal state system, and 
                                       
                                          ta
                                          (
                                          s
                                          )
                                       
                                     is determined by the system status s, and its value is a non-negative real numbers.

The state variable s of the emergency response system is described by the phase variable p and the remaining time variable σ. In the atomic DEVS model about a single emergency response unit, the state variable s stands for the basic OODA framework states of the emergency response unit. The variables of system states have four parts: (Observe, Orient, Decide, Act), denoted as 
                              
                                 S
                                 =
                                 {
                                 
                                    
                                       s
                                    
                                    
                                       1
                                    
                                 
                                 ,
                                 
                                    
                                       s
                                    
                                    
                                       2
                                    
                                 
                                 ,
                                 
                                    
                                       s
                                    
                                    
                                       3
                                    
                                 
                                 ,
                                 
                                    
                                       s
                                    
                                    
                                       4
                                    
                                 
                                 }
                              
                           . During the emergency response process, if there is no external input event X, the system state s will maintain the internal transfer repeatedly with a certain interval time. For example, an emergency response team always starts to run from observation state of 
                              
                                 
                                    
                                       s
                                    
                                    
                                       1
                                    
                                 
                              
                            (Observe), and 
                              
                                 
                                    
                                       s
                                    
                                    
                                       1
                                    
                                 
                              
                            will maintain the phase 
                              
                                 
                                    
                                       p
                                    
                                    
                                       1
                                    
                                 
                              
                            for a period of time 
                              
                                 
                                    
                                       t
                                    
                                    
                                       1
                                    
                                 
                              
                           . After a period of time 
                              
                                 
                                    
                                       t
                                    
                                    
                                       1
                                    
                                 
                                 =
                                 ta
                                 (
                                 
                                    
                                       s
                                    
                                    
                                       1
                                    
                                 
                                 )
                              
                           , the observation state will be in end. When no external input events come, the internal state of the system will be sequentially turned into the judgment state 
                              
                                 
                                    
                                       s
                                    
                                    
                                       2
                                    
                                 
                              
                            
                           (Orient). Similarly, judgment state will also maintain phase 
                              
                                 
                                    
                                       p
                                    
                                    
                                       2
                                    
                                 
                              
                            for a period of time, after a time of 
                              
                                 
                                    
                                       t
                                    
                                    
                                       2
                                    
                                 
                                 =
                                 ta
                                 (
                                 
                                    
                                       s
                                    
                                    
                                       2
                                    
                                 
                                 )
                              
                           , the judgment state s
                           2 is in end, and the internal state of the system in order transfers to the decision-making state s
                           3 (Decide). The decision state s3 keeps phase 
                              
                                 
                                    
                                       p
                                    
                                    
                                       3
                                    
                                 
                              
                            until time 
                              
                                 
                                    
                                       t
                                    
                                    
                                       3
                                    
                                 
                                 =
                                 ta
                                 (
                                 
                                    
                                       s
                                    
                                    
                                       3
                                    
                                 
                                 )
                              
                            passing by, then the system state goes into the state of action 
                              
                                 
                                    
                                       t
                                    
                                    
                                       4
                                    
                                 
                              
                            
                           (Act). The action state duration is 
                              
                                 
                                    
                                       t
                                    
                                    
                                       4
                                    
                                 
                                 =
                                 ta
                                 (
                                 
                                    
                                       s
                                    
                                    
                                       4
                                    
                                 
                                 )
                              
                           , maintaining phase 
                              
                                 
                                    
                                       p
                                    
                                    
                                       4
                                    
                                 
                              
                            till it ends, then the system phase variable will update to the initial state phase 
                              
                                 
                                    
                                       p
                                    
                                    
                                       1
                                    
                                 
                              
                           , entered a new round of OODA cycle under the emergency response process. It still starts from the observation state 
                              
                                 
                                    
                                       s
                                    
                                    
                                       1
                                    
                                 
                              
                           , forming a complete cycle of the states. Under the condition of without external input event X, the whole system states are updated in accordance with the interval time of the internal states. So you can get the total states time to complete the OODA Loop, the total time period is 
                              
                                 T
                                 =
                                 ta
                                 (
                                 s
                                 )
                                 =
                                 
                                    
                                       t
                                    
                                    
                                       1
                                    
                                 
                                 +
                                 
                                    
                                       t
                                    
                                    
                                       2
                                    
                                 
                                 +
                                 
                                    
                                       t
                                    
                                    
                                       3
                                    
                                 
                                 +
                                 
                                    
                                       t
                                    
                                    
                                       4
                                    
                                 
                              
                           .

The relations of the transformation and internal state phases in the system are shown in Fig. 5
                           .

At any time t, if the internal state of the system s with the phase variable p in the time 
                              
                                 [
                                 t
                                 -
                                 
                                    
                                       t
                                    
                                    
                                       e
                                    
                                 
                                 ,
                                 t
                                 ]
                              
                            remains the same state s, then 
                              
                                 q
                                 =
                                 (
                                 s
                                 ,
                                 
                                    
                                       t
                                    
                                    
                                       e
                                    
                                 
                                 )
                                 ∈
                                 Q
                              
                            is considered as the a status in emergency rescue process, variable 
                              
                                 
                                    
                                       t
                                    
                                    
                                       e
                                    
                                 
                              
                            represents the time duration of the state s. Time remaining variable is 
                              
                                 σ
                                 =
                                 ta
                                 (
                                 s
                                 )
                                 -
                                 
                                    
                                       t
                                    
                                    
                                       e
                                    
                                 
                              
                           . There are 4 system internal states in the OODA process of emergency response unit, and the system internal local persistent state also are 4, can be expressed as: 
                              
                                 
                                    
                                       q
                                    
                                    
                                       i
                                    
                                 
                                 =
                                 (
                                 
                                    
                                       s
                                    
                                    
                                       i
                                    
                                 
                                 ,
                                 
                                    
                                       t
                                    
                                    
                                       ei
                                    
                                 
                                 )
                                 ∈
                                 Q
                                 ,
                                 
                                 i
                                 =
                                 1
                                 ,
                                 2
                                 ,
                                 3
                                 ,
                                 4
                              
                           .

In the above expression, the phase variable 
                              
                                 
                                    
                                       p
                                    
                                    
                                       i
                                    
                                 
                              
                            corresponding to the internal state 
                              
                                 
                                    
                                       s
                                    
                                    
                                       i
                                    
                                 
                              
                            of the system was changeless before the advance time 
                              
                                 
                                    
                                       t
                                    
                                    
                                       i
                                    
                                 
                                 =
                                 ta
                                 (
                                 
                                    
                                       s
                                    
                                    
                                       i
                                    
                                 
                                 )
                              
                            was depleted, that is 
                              
                                 [
                                 
                                    
                                       t
                                    
                                    
                                       i
                                    
                                 
                                 -
                                 
                                    
                                       t
                                    
                                    
                                       ei
                                    
                                 
                                 ,
                                 
                                    
                                       t
                                    
                                    
                                       i
                                    
                                 
                                 ]
                              
                           . For example, at the time t, 
                              
                                 
                                    
                                       q
                                    
                                    
                                       1
                                    
                                 
                                 =
                                 (
                                 
                                    
                                       s
                                    
                                    
                                       1
                                    
                                 
                                 ,
                                 
                                    
                                       t
                                    
                                    
                                       e
                                       1
                                    
                                 
                                 )
                                 ∈
                                 Q
                              
                           , the phase variable 
                              
                                 
                                    
                                       p
                                    
                                    
                                       1
                                    
                                 
                              
                            corresponding to the internal state 
                              
                                 
                                    
                                       s
                                    
                                    
                                       1
                                    
                                 
                              
                            was unchanged between 
                              
                                 [
                                 
                                    
                                       t
                                    
                                    
                                       1
                                    
                                 
                                 -
                                 
                                    
                                       t
                                    
                                    
                                       e
                                       1
                                    
                                 
                                 ,
                                 
                                    
                                       t
                                    
                                    
                                       1
                                    
                                 
                                 ]
                              
                           , and was still working until the advance time 
                              
                                 
                                    
                                       t
                                    
                                    
                                       1
                                    
                                 
                                 =
                                 ta
                                 (
                                 
                                    
                                       s
                                    
                                    
                                       1
                                    
                                 
                                 )
                              
                           .


                           
                              
                                 
                                    
                                       δ
                                    
                                    
                                       int
                                    
                                 
                                 :
                                 
                                 S
                                 →
                                 S
                              
                            is the system internal state transfer function, and system state set S is changed only in the system internal. The scope of the state set S is not changed. A single emergency response unit of the OODA Loop process of decision-making, its internal transition function can be obtained as follows:


                           
                              
                                 
                                    
                                       s
                                    
                                    
                                       1
                                    
                                 
                                 =
                                 
                                    
                                       δ
                                    
                                    
                                       int
                                    
                                 
                                 (
                                 
                                    
                                       s
                                    
                                    
                                       4
                                    
                                 
                                 ,
                                 
                                    
                                       t
                                    
                                    
                                       4
                                    
                                 
                                 )
                              
                           , 
                              
                                 
                                    
                                       s
                                    
                                    
                                       2
                                    
                                 
                                 =
                                 
                                    
                                       δ
                                    
                                    
                                       int
                                    
                                 
                                 (
                                 
                                    
                                       s
                                    
                                    
                                       1
                                    
                                 
                                 ,
                                 
                                    
                                       t
                                    
                                    
                                       1
                                    
                                 
                                 )
                              
                           , 
                              
                                 
                                    
                                       s
                                    
                                    
                                       3
                                    
                                 
                                 =
                                 
                                    
                                       δ
                                    
                                    
                                       int
                                    
                                 
                                 (
                                 
                                    
                                       s
                                    
                                    
                                       2
                                    
                                 
                                 ,
                                 
                                    
                                       t
                                    
                                    
                                       2
                                    
                                 
                                 )
                              
                           , 
                              
                                 
                                    
                                       s
                                    
                                    
                                       4
                                    
                                 
                                 =
                                 
                                    
                                       δ
                                    
                                    
                                       int
                                    
                                 
                                 (
                                 
                                    
                                       s
                                    
                                    
                                       3
                                    
                                 
                                 ,
                                 
                                    
                                       t
                                    
                                    
                                       3
                                    
                                 
                                 )
                              
                           , among them 
                              
                                 
                                    
                                       t
                                    
                                    
                                       i
                                    
                                 
                                 =
                                 ta
                                 (
                                 
                                    
                                       s
                                    
                                    
                                       i
                                    
                                 
                                 )
                                 ,
                                 
                                 i
                                 =
                                 1
                                 ,
                                 2
                                 ,
                                 3
                                 ,
                                 4
                              
                           .


                           
                              
                                 
                                    
                                       δ
                                    
                                    
                                       ext
                                    
                                 
                                 :
                                 
                                 X
                                 ×
                                 Q
                                 →
                                 S
                                 ,
                                 
                                    
                                       δ
                                    
                                    
                                       ext
                                    
                                 
                              
                            is external system state transition function, represents the state of the system change when the system receives an input event set X. In the OODA decision loop of emergency response unit, if the external input event set X coming, such as the higher commander orders or the updated disaster communication and so on.

For example, the emergency response unit is in the observation state 
                              
                                 
                                    
                                       s
                                    
                                    
                                       1
                                    
                                 
                              
                           , which is watching and collecting the weather and road information of the emergency disaster area. At the time 
                              
                                 
                                    
                                       t
                                    
                                    
                                       e
                                       1
                                    
                                 
                              
                           , the system receives the latest disaster traffic information and instruction feedback, the emergency response unit immediately terminates the remaining time of the observation state 
                              
                                 
                                    
                                       s
                                    
                                    
                                       1
                                    
                                 
                              
                            because of the arrival of the external input events set X. Suppose the latest traffic information received as input events set X, then state directly to the Orient state, and then make a judgment and take the corresponding rescue operations, at the same time output the response information.

Let the input set X
                           =(smooth road, road congestion), can get system external state transition function in different situations, as follows:


                           
                              
                                 
                                    
                                       s
                                    
                                    
                                       i
                                    
                                 
                                 =
                                 
                                    
                                       δ
                                    
                                    
                                       ext
                                    
                                 
                                 (
                                 x
                                 =
                                 road
                                 -
                                 congestion
                                 ,
                                 
                                    
                                       s
                                    
                                    
                                       i
                                    
                                 
                                 ,
                                 
                                    
                                       t
                                    
                                    
                                       ei
                                    
                                 
                                 )
                              
                           , 
                              
                                 i
                                 =
                                 1
                                 ,
                                 2
                                 ,
                                 3
                                 ,
                                 4
                              
                           ; description the road ahead blocked makes the emergency response units currently unable to reach, emergency response unit selects end task, and continues to collect a variety of information.

Here, 
                              
                                 
                                    
                                       s
                                    
                                    
                                       2
                                    
                                 
                                 =
                                 
                                    
                                       δ
                                    
                                    
                                       ext
                                    
                                 
                                 (
                                 x
                                 =
                                 smooth
                                 -
                                 road
                                 ,
                                 
                                    
                                       s
                                    
                                    
                                       i
                                    
                                 
                                 ,
                                 
                                    
                                       t
                                    
                                    
                                       ei
                                    
                                 
                                 )
                              
                           , 
                              
                                 i
                                 =
                                 1
                                 ,
                                 2
                                 ,
                                 3
                              
                           , under the smooth road condition, emergency response unit update the current road information, complete the following tasks.


                           λ is input function. 
                              
                                 λ
                                 :
                                 
                                 Q
                                 →
                                 Y
                              
                            is rescue feedback information of the output system.

Constraint: 
                              
                                 ψ
                                 :
                                 
                                 Q
                                 ×
                                 X
                                 →
                                 Φ
                                 ,
                                 Φ
                                 =
                                 {
                                 True
                                 ,
                                 False
                                 }
                              
                           . Under the conditions that there are external input events into the system, determined whether the external input events set is adapt with the current phase space or not.

In Section 3.2.1, DEVS atomic model is used to describe the OODA process of the independent emergency response unit. In fact, the usual emergency response process is made up of multiple independent emergency response units. They make the emergency rescue operations through cooperation. If use the DEVS atomic model to describe such a complex process, it will encounter a great difficulty. For the coupled OODA process with two or more emergency response rescue units, it is necessary to adopt the DEVS coupling models to analyze the emergency effectiveness. Taking the two emergency response units as example, the coupling OODA–DEVS model is put forth, and the structure diagram of coupled OODA–DEVS model, as shown in Fig. 6
                           . This coupling model has two atomic model has common input and output ports.

The coupled OODA model based on coupled DEVS is an integration system which fits to describe the cooperation effect of emergency response units. For the sake of simplicity, we research the coupled OODA framework with two independent rescue units like A, B. At first, use atomic DEVS models to describe the emergency response unit A as follows:
                              
                                 
                                    A-OODA
                                    –
                                    DEVS
                                    =
                                    〈
                                    
                                       
                                          S
                                       
                                       
                                          A
                                       
                                    
                                    ,
                                    
                                       
                                          ta
                                       
                                       
                                          A
                                       
                                    
                                    ,
                                    
                                       
                                          δ
                                       
                                       
                                          intA
                                       
                                    
                                    ,
                                    
                                       
                                          X
                                       
                                       
                                          A
                                       
                                    
                                    ,
                                    
                                       
                                          δ
                                       
                                       
                                          extA
                                       
                                    
                                    ,
                                    
                                       
                                          Y
                                       
                                       
                                          A
                                       
                                    
                                    ,
                                    
                                       
                                          λ
                                       
                                       
                                          A
                                       
                                    
                                    〉
                                    ,
                                 
                              
                           
                        

Use atomic DEVS model to describe emergency response unit B as follows:
                              
                                 
                                    B-OODA
                                    –
                                    DEVS
                                    =
                                    〈
                                    
                                       
                                          S
                                       
                                       
                                          B
                                       
                                    
                                    ,
                                    
                                       
                                          ta
                                       
                                       
                                          B
                                       
                                    
                                    ,
                                    
                                       
                                          δ
                                       
                                       
                                          intB
                                       
                                    
                                    ,
                                    
                                       
                                          X
                                       
                                       
                                          B
                                       
                                    
                                    ,
                                    
                                       
                                          δ
                                       
                                       
                                          extB
                                       
                                    
                                    ,
                                    
                                       
                                          Y
                                       
                                       
                                          B
                                       
                                    
                                    ,
                                    
                                       
                                          λ
                                       
                                       
                                          B
                                       
                                    
                                    〉
                                    ,
                                 
                              
                           
                        

Integrate the units A and B into a coupled DEVS model as follows:
                              
                                 
                                    Coupled-DEVS
                                    =
                                    〈
                                    
                                       
                                          X
                                       
                                       
                                          self
                                       
                                    
                                    ,
                                    
                                       
                                          Y
                                       
                                       
                                          self
                                       
                                    
                                    ,
                                    D
                                    ,
                                    {
                                    
                                       
                                          M
                                       
                                       
                                          i
                                       
                                    
                                    }
                                    ,
                                    {
                                    
                                       
                                          I
                                       
                                       
                                          i
                                       
                                    
                                    }
                                    ,
                                    {
                                    
                                       
                                          Z
                                       
                                       
                                          i
                                          ,
                                          j
                                       
                                    
                                    }
                                    ,
                                    select
                                    〉
                                 
                              
                           
                        

In the Coupled DEVS:


                           
                              
                                 
                                    
                                       X
                                    
                                    
                                       self
                                    
                                 
                              
                            is the input set of emergency response units coupled model. 
                              
                                 
                                    
                                       Y
                                    
                                    
                                       self
                                    
                                 
                              
                            is the output set of emergency response units coupled model. D is the set of the names labels of the coupled DEVS model. 
                              
                                 
                                    
                                       
                                          
                                             
                                                M
                                             
                                             
                                                i
                                             
                                          
                                       
                                    
                                 
                              
                            is the set of the member of the coupled DEVS model, so 
                              
                                 D
                                 =
                                 {
                                 
                                    
                                       M
                                    
                                    
                                       A
                                       ,
                                    
                                 
                                 ,
                                 
                                    
                                       M
                                    
                                    
                                       B
                                    
                                 
                                 }
                              
                           . 
                              
                                 {
                                 
                                    
                                       I
                                    
                                    
                                       i
                                    
                                 
                                 }
                              
                            is the set of the members influenced by member i, so 
                              
                                 
                                    
                                       I
                                    
                                    
                                       A
                                    
                                 
                                 =
                                 {
                                 
                                    
                                       M
                                    
                                    
                                       B
                                    
                                 
                                 }
                                 ,
                                 
                                    
                                       I
                                    
                                    
                                       B
                                    
                                 
                                 =
                                 {
                                 
                                    
                                       M
                                    
                                    
                                       A
                                    
                                 
                                 }
                              
                           .

In the coupled DEVS model, the atomic model description of emergency response unit A and unit B is the same as the description of the atomic DEVS model in above section.

In the coupled model, each of the emergency response unit A and unit B has independent OODA loop, such as unit A has 
                              
                                 
                                    
                                       S
                                    
                                    
                                       A
                                    
                                 
                                 =
                                 {
                                 
                                    
                                       S
                                    
                                    
                                       1
                                       A
                                    
                                 
                                 ,
                                 
                                    
                                       S
                                    
                                    
                                       2
                                       A
                                    
                                 
                                 ,
                                 
                                    
                                       S
                                    
                                    
                                       3
                                       A
                                    
                                 
                                 ,
                                 
                                    
                                       S
                                    
                                    
                                       4
                                       A
                                    
                                 
                                 }
                              
                           , and unit B has 
                              
                                 
                                    
                                       S
                                    
                                    
                                       B
                                    
                                 
                                 =
                                 {
                                 
                                    
                                       S
                                    
                                    
                                       1
                                       B
                                    
                                 
                                 ,
                                 
                                    
                                       S
                                    
                                    
                                       2
                                       B
                                    
                                 
                                 ,
                                 
                                    
                                       S
                                    
                                    
                                       3
                                       B
                                    
                                 
                                 ,
                                 
                                    
                                       S
                                    
                                    
                                       4
                                       B
                                    
                                 
                                 }
                              
                           , each of them gets the external input information from external 
                              
                                 
                                    
                                       X
                                    
                                    
                                       self
                                    
                                 
                              
                            through the input function, and then gets into its own OODA loop.


                           
                              
                                 {
                                 
                                    
                                       Z
                                    
                                    
                                       i
                                       ,
                                       j
                                    
                                 
                                 }
                              
                            describes the conversion from the output of member i to the input of member j in the coupled DEVS model, reflect the input–output relationship between the coupled model members. Specific, 
                              
                                 
                                    
                                       Z
                                    
                                    
                                       A
                                       ,
                                       self
                                    
                                 
                                 :
                                 
                                 
                                    
                                       Y
                                    
                                    
                                       A
                                    
                                 
                                 →
                                 
                                    
                                       Y
                                    
                                    
                                       self
                                    
                                 
                              
                            reflects the relationship between emergency response unit A output to the whole coupled model input 
                              
                                 
                                    
                                       Y
                                    
                                    
                                       self
                                    
                                 
                              
                           , that is to say when the output information of emergency response unit A had been assumed to be the coupled mode input, the output result was obtained at the output terminal.

Similarly, 
                              
                                 
                                    
                                       Z
                                    
                                    
                                       self
                                       ,
                                       B
                                    
                                 
                                 :
                                 
                                 
                                    
                                       X
                                    
                                    
                                       self
                                    
                                 
                                 →
                                 
                                    
                                       X
                                    
                                    
                                       B
                                    
                                 
                              
                            expresses that the input of the coupling model as output reflect the input of the emergency response unit B as output, that is the whole coupling model input as the emergency response unit B output, emergency response unit B shall meet the input requirements. 
                              
                                 
                                    
                                       Z
                                    
                                    
                                       A
                                       ,
                                       B
                                    
                                 
                                 :
                                 
                                 
                                    
                                       Y
                                    
                                    
                                       A
                                    
                                 
                                 →
                                 
                                    
                                       Y
                                    
                                    
                                       B
                                    
                                 
                              
                            expresses that emergency response unit A input reflected on the emergency response unit B output.

In Coupled models, each atomic model has its state transitions, at the same time, it tends to have more than one states. Then the select-function designates one of the members is required, the transition of the member’s state is described as the whole state transition of the coupled model. When state transition is determined, the output is gotten through output functions.

In collaborative rescue with OODA loop of the emergency response units, system state is also constantly cycling running in certain time intervals.

Describing the state S of the system in the similar way as the mentioned atomic model, when the OODA decision loop is under the decision-making status, maintains the phase-variable 
                              
                                 
                                    
                                       p
                                    
                                    
                                       3
                                    
                                 
                              
                            until the end of time 
                              
                                 
                                    
                                       t
                                    
                                    
                                       3
                                    
                                 
                              
                           , and system will be transferred to the state of action. Under the action status, the emergency response unit takes rescue operation based on the emergency program established in the decision-making phase, and keeps the phase-variable 
                              
                                 
                                    
                                       p
                                    
                                    
                                       4
                                    
                                 
                              
                            unchanged until the end of time 
                              
                                 
                                    
                                       t
                                    
                                    
                                       4
                                    
                                 
                              
                           . If there is no other external input 
                              
                                 
                                    
                                       X
                                    
                                    
                                       self
                                    
                                 
                              
                            getting into the system during this process, emergency efficiency output of the emergency response unit A is the same as the emergency efficiency output of the coupling model, namely, 
                              
                                 
                                    
                                       Z
                                    
                                    
                                       A
                                       ,
                                       self
                                    
                                 
                                 :
                                 
                                 
                                    
                                       Y
                                    
                                    
                                       A
                                    
                                 
                                 →
                                 
                                    
                                       Y
                                    
                                    
                                       self
                                    
                                 
                              
                           .

In the previous OODA decision-making loop process, system may be influenced by the external input event 
                              
                                 
                                    
                                       X
                                    
                                    
                                       self
                                    
                                 
                              
                           . For example, if receive the latest rescue information or instruction at that time, the OODA decision-making loop will immediately analyze the external input information, and select the unit A or unit B or both A and B to deal with the 
                              
                                 
                                    
                                       X
                                    
                                    
                                       self
                                    
                                 
                              
                           , i.e. 
                              
                                 select
                                 (
                                 
                                    
                                       M
                                    
                                    
                                       A
                                    
                                 
                                 ,
                                 
                                    
                                       M
                                    
                                    
                                       B
                                    
                                 
                                 )
                                 =
                                 
                                    
                                       M
                                    
                                    
                                       A
                                    
                                 
                              
                           , then continue to go into the coupled cycle, until there is no new external input information.

Coupled DEVS model could describe the cooperation of multiple emergency response units. Adopting coupled DEVS theoretical models, system of systems including multiple emergency response units is carried out in cooperation with the rescue process description.

To analyze the emergency response effectiveness, it is necessary to adopt the modeling and simulation way. In order to research the emergency response system in simulation way, it is necessary to lay out the simulation strategy for the emergency response process. The important roles of the simulation strategy include: (1) clearly describing the rules within the complex system, (2) giving a core flowchart to analyze the whole system so as to build the simulation system. Usually, the simulation strategy is called as simulation engine. As far as such a complex emergency management system is concerned, it is helpful to use the simulation flowchart to analyze and develop the emergency management system. In the meantime, the simulation engine also needs to be designed based on the scientific theory. And therefore, the simulation engine of emergency simulation process is built on the emergency response mechanism in DEVS theory.

Considering the complex emergency response system is combined by lots of emergency response units with basic OODA frameworks, it is necessary to design the basic simulation engine and the coupled simulation engine respectively. The basic simulation engine is designed by a basic OODA–DEVS model. Such an emergency response simulation engine is shown in Fig. 7
                        .

In Fig. 7, When simulation starts at T
                        0, each variable in the simulation system is initiated. Then scan the current simulation time t, and judge whether t is greater than the total simulation time T. If t
                        >
                        T, then the emergency simulation process is terminated, else it requires to judge the emergency events. Before dealing with the messages of the emergency system, it is needed to judge the kinds of the messages. If the received message is the input event message X-message, what’s more, the simulation time t of the input event must meet the requirement of the next event time, and we call such an event as the ex-message; if the simulation time of the input event is wrong, showing that the synchronization time is invalid, and the event must be canceled and need to be scanned again. After confirm the ex-message, it is required to update the simulation time of last event t
                        
                           L
                         and the time of the next event t
                        
                           N
                        , and then output the simulation result information by means of the output function λ(S). While the response units like rescuer teams send the simulation information to the top level simulation unit (like decision making department), the response units themselves will continue to complete their missions. Such response units are required to update the simulation time t again, and return to scan the simulation event time t. So far, an external input event is finished operation. If the message received is an inner message, then we define it as an inner serial event. Otherwise, confirm it as an exceptional message, and it needs to modify in the time management (a simulation service rule). For the inner serial events, the inner state transits, and update the time of the last event, and compute the next event time t. Continue to run these steps till the ex-message is coming, and transfer to the ex-state loop. From above flow chart analysis, it is easy to find out, the simulation engine process including the four parts loop of the basic OODA framework.

In fact, we are more interested in analyzing the rules of the cooperative response for the emergency disaster. It is very difficult to describe the cooperation effectiveness of emergency response units. Consideration of the basic OODA–DEVS having strong composability, and the coupled OODA–DEVS consists of the many basic OODA–DEVSs. For short, the coupled model here contains two basic OODA–DEVS models of emergency response units, like A and B, is shown in Fig. 8
                        . As far as the thinking idea of the framework is concerned, the coupled OODA–DEVS is similar to the basic simulation engine, except for having some emergency units synthetic coordinators, which make coordination between the basic OODA–DEVS models. So the coupled OODA–DEVS also call simulations coordinator.

Simulation began at 
                           
                              
                                 
                                    T
                                 
                                 
                                    0
                                 
                              
                           
                        , initialize every variable in the whole simulation process. It is different from single OODA–DEVS simulation engine, and here the final event time 
                           
                              
                                 
                                    t
                                 
                                 
                                    L
                                 
                              
                           
                         of the whole system is chosen as the longest time in all the final events, the next event time 
                           
                              
                                 
                                    t
                                 
                                 
                                    N
                                 
                              
                           
                         is determined as the shortest time in all the next events. After the initialization, scan the current simulation time t, and judge whether the t is more than the total simulation time T.

If t
                        >
                        T, then the emergency simulation process is terminated, else it requires to judge the emergency events. Before dealing with the messages of the emergency system, it is also needed to judge the types of the messages. The messages are divided into two parts, self-starting information and external information. External information is divided into external information and the information with feedback. If the self-starting information is received, system first judges the occurrence time of T information; if meet the synchronous requirements, then enter the next steps, otherwise, the event synchronization error, canceling this event, and go to scan the simulation time. The coupled OODA–DEVS models consist of A and B unit of two emergency units, here we choose the emergency unit based on the select function. Above mentioned is the A OODA model, and the emergency unit B is same as unit A. After unit A receives the self-starting information, runs by itself; if there is no influence of the external information, unit A will complete the internal states conversion cycle in order, and wait for the external information processing.

For the external information, it is required to divide into external event information and information with feedback (inner event information), too. When the external event information comes, unit A firstly carries out the updating of the event advance time 
                           
                              
                                 
                                    t
                                 
                                 
                                    L
                                 
                              
                           
                         and 
                           
                              
                                 
                                    t
                                 
                                 
                                    N
                                 
                              
                           
                        , then judges the synchronization of the external time information. If the synchronization is wrong, cancels this event and go to re-scan. If the synchronization meets the system requirement, sends the event information to the emergency unit B, at the same time, performs emergency response operations; after updates the simulation time t, continue to scan and wait the next arrival events. If receives the information with feedback and it is not external event information, unit A also firstly accomplishes the updating of the event advance time 
                           
                              
                                 
                                    t
                                 
                                 
                                    L
                                 
                              
                           
                         and 
                           
                              
                                 
                                    t
                                 
                                 
                                    N
                                 
                              
                           
                        , and completes analysis when receives the information with feedback, then sends the local feedback information to the emergency unit B. If the message is missing, the information is dealt with as the exceptional message, the time management is starting as amendment. If the transmission is successful, unit A will send the message on the emergency level parent coordinator; performs processing action task, update the simulation time t, and return to scan t to continue. From the whole system simulation process analysis, it is easy to find out that the simulation process really re-circulates by the four parts of OODA loop.


                     Scenario: In the year 20XX, in the city Y in province X of southwest China, suddenly suffering to a Richter 8.0 degree earthquake disaster. This earthquake disaster has caused severe damage to the local city, with a large number of houses collapsed, casualties serious, road and transformation, electricity and other basic infrastructure paralyzed. State and government at all levels immediately launched the emergency response plans, organize and command the emergency response departments and their team units to carry out emergency rescue operations. Considering the disaster zone in the dangerous mountain area with less information, it is very difficult to make emergency response to rescue refugees in the disaster area.

Several groups of rescuing teams or units respectively from different directions go into the disaster areas to carry out the emergency rescue operation. The response process of each rescue unit includes: running forwards the disaster area with continuous searching for the damaged objects, when finds out the targets, they should make a judgment and send the main information to the other emergency units and the upper command center, finally carrying out the rescue actions under the actual situation. In the whole emergency response process, every emergency unit performs the information searching and collection, situation analysis, rescue plans evaluation and decision-making, implementation of rescue actions, feedback information, and restarts the new round OODA cycle of the emergency response.

To generate complex scenarios for training and analysis, we need to make modeling and simulation during the response process. We use the Presagis STAGE, which is a scenario developing system, to build up the crowd model based on OODA. With the help of such a graphical interface tool of STAGE system, emergency response units are modeling in detail on the rescue requirements. For example, it can develop the emergency response model including the preparation plan, location (longitude and latitude), behavior model (script), action (forward, backward, steering), path, sensors and so on. In the modeling process in STAGE, it is necessary to build the entity models from whole to parts, and the main steps of emergency response modeling are described as follows:
                           
                              (1)
                              Establish an emergency response operation scenario.

Build up the emergency response units platforms with capacity, such as the emergency rescue truck vehicles, helicopter, and airplane.

Create the units (entities) like rescuers and refugees in the emergency response for disaster.

Build up the function parts, for instance, the search-orient function device in emergency response, just like satellite, radar.

It is very difficult to describe the behaviors of the emergency response entities because the emergency response operations are full of interactions. But it is very helpful to develop the entities’ behaviors script codes based on the OODA–DEVS flowcharts. Usually, the Behaviors script codes of emergency response units are made up of two parts: one is the initialization description of the emergency units, the other is the description of the conditions and interaction of the emergency response entities taking actions.

The functional behavior script pseudocodes of the emergency response units are described as follows:
                           
                              (1)
                              Initiation script codes of emergency response units:
                                    
                                       
                                          
                                          
                                             
                                                Initialize:
                                             
                                             
                                                
                                                   set startTime=0; endTime=T; entityNum=N;//the start time of simulation is 0, end time=T.
                                             
                                             
                                                
                                                   rescue_unit[4]={walk, motor, truck, helicopter}
                                             
                                             
                                                
                                                   // give 4 kinds of rescue units in different transport ways
                                             
                                             
                                                
                                                   emergencyInfo<--system.radarSensor(time, location, damageDegree)
                                             
                                             
                                                
                                                   refugees=system.randomGenerate(time, location, damageDegree);
                                             
                                             
                                                // the disaster refugees is uncertainty, the numbers is provided through random generation.
                                             
                                             
                                                
                                                   rescue_unit[i].entity<---entityNum;//i=0,1,2,3 mean the 4 kinds units
                                             
                                             
                                                
                                                   system.activeOODAloop(startTime); // start the system running
                                             
                                             
                                                
                                                   while(t<=endTime)
                                             
                                             
                                                {
                                             
                                             
                                                
                                                   for (i=0, i++, i<3)
                                             
                                             
                                                
                                                   {
                                             
                                             
                                                
                                                   
                                                   
                                                   unit[i].isSelceted
                                             
                                             
                                                
                                                   
                                                   
                                                   unit[i].Observer(emergencyInfo){track.detectedObjects;}
                                             
                                             
                                                
                                                   
                                                   
                                                   unit[i].Orient(emergencyInfo){judge the situation of the disaster zone}
                                             
                                             
                                                
                                                   
                                                   
                                                   unit[i].Decide(emergencyInfo){evaluate the response plan}
                                             
                                             
                                                
                                                   
                                                   
                                                   unit[i].Act(emergencyInfo){rescue the refugees and reduce the damage}
                                             
                                             
                                                
                                                   }
                                             
                                             
                                                
                                                   
                                                   otherTask();
                                             
                                             
                                                }
                                             
                                          
                                       
                                    
                                 
                              

The interaction description codes of emergency response units:
                                    
                                       
                                          
                                          
                                             
                                                Initialize:
                                             
                                             
                                                
                                                   … //the same as the initialize of (1)
                                             
                                             
                                                
                                                   system.activeOODAloop(startTime);
                                             
                                             
                                                
                                                   while(t<=endTime)
                                             
                                             
                                                {
                                             
                                             
                                                
                                                   for (i=0, i++, i<3)
                                             
                                             
                                                
                                                   {
                                             
                                             
                                                
                                                   
                                                   
                                                   unit[i].Observer(emergencyInfo){track.detectedObjects;}
                                             
                                             
                                                
                                                   
                                                   
                                                   unit[i].Orient(emergencyInfo){judge the situation of the disaster zone}
                                             
                                             
                                                
                                                   set state[i]<-- unit[i].rescueType <--- (boolen) random(cooperation);
                                             
                                             
                                                
                                                   if(state[i])
                                             
                                             
                                                
                                                   
                                                   
                                                   
                                                   {
                                             
                                             
                                                
                                                   
                                                   unit[i].publishInformation(Observe[i],Orient[i]);// publish the own info to otherunit
                                             
                                             
                                                
                                                   
                                                   unit[i].subscribeInformation(Observe[j],Orient[j]);//unit[i] subscribes unit[j] info
                                             
                                             
                                                
                                                   
                                                   updateInformation();
                                             
                                             
                                                
                                                   
                                                   
                                                   
                                                   }
                                             
                                             
                                                
                                                   
                                                   
                                                   else
                                             
                                             
                                                
                                                   
                                                   
                                                   
                                                   {
                                             
                                             
                                                
                                                   
                                                   unit[i].getInformation(Observe[i]);
                                             
                                             
                                                
                                                   
                                                   unit[i].saveInformation(Observe[i],Orient[i]);// save the own information
                                             
                                             
                                                
                                                   
                                                   }
                                             
                                             
                                                
                                                   
                                                   
                                                   unit[i].Decide(updateInformation) {evaluate the response plans}
                                             
                                             
                                                
                                                   
                                                   
                                                   unit[i].Act(updateInformation) {rescue the refugees and reduce the damage}
                                             
                                             
                                                
                                                   
                                                   }
                                             
                                             
                                                
                                                   otherTask(updateInformation);
                                             
                                             
                                                }
                                             
                                          
                                       
                                    
                                 
                              

In the emergency system simulation process, the emergency response unit needs the collaborative actions. Suppose all the emergency units have the same cognitive, thus they can evaluate the most contingency rescue objects by the priority rule and take rescue actions.

According to the OODA process mechanism, once a response unit finds an object to be rescued, it is necessary to assess whether it can perform independently the emergency rescue operations within the unit capability or not. If it can do it independently, then it takes action at once, and sends OK messages to notify other emergency response units; if not, it will ask other emergency units for making collaboratively rescue operations. The collaborative rescue process between the emergency response units is an interaction process, and each of all should publish its information through observing and orienting by itself, while each of all units can subscribe the others information. The collaborative rescue process is shown in Fig. 9
                        .

Here is a part of the cooperative behavior scripts of the emergency response units as follows:
                           
                              
                                 
                                 
                                    
                                       Initialize:
                                    
                                    
                                       
                                          set startTime=0; endTime=T; entityNum=N;//the start time of simulation is 0, end time=T.
                                    
                                    
                                       
                                          set cooperation=1; //0 and 1 means have no/yes cooperatively mechanism.
                                    
                                    
                                       
                                          rescue_unit[4]={walk, motor, truck, helicopter}
                                    
                                    
                                       
                                          // give 4 kinds of rescue units in different transport ways
                                    
                                    
                                       
                                          emergencyInfo<--system.radarSensor(time, location, damageDegree)
                                    
                                    
                                       
                                          refugees=system.randomGenerate(time, location, damageDegree);
                                    
                                    
                                       // the disaster refugees is uncertainty, the numbers is provided through random generation.
                                    
                                    
                                       
                                          rescue_unit[i].entity<---entityNum;//i=0,1,2,3 mean the 4 kinds units
                                    
                                    
                                       
                                          system.activeCoupledOODAloop(startTime);// start the system running.
                                    
                                    
                                       
                                          while(t<=endTime)
                                    
                                    
                                       { updateScenario(emergencyInfo, t);// update the disaster scenario situation
                                    
                                    
                                       
                                          send rescueMission(t);
                                    
                                    
                                       
                                          for (i=0; i++; i<3)
                                    
                                    
                                       
                                          
                                          
                                          {
                                    
                                    
                                       
                                          unit[i].Observer(emergencyInfo){radar_sensors();track.detectedObjects;}
                                    
                                    
                                       
                                          unit[i].Orient(emergencyInfo){judge the situation of the disaster zone}
                                    
                                    
                                       
                                          
                                          
                                          set state[i]<-- unit[i].rescueType <--- cooperation=1;// all unit[i] make cooperation.
                                    
                                    
                                       
                                          if (state[i]==1) //all the unit[i] join into the cooperation states.
                                    
                                    
                                       
                                          
                                          
                                          {
                                    
                                    
                                       
                                          
                                          unit[i].publishInformation(Observe[i],Orient[i]){data_link.assign(i to j);};
                                    
                                    
                                       
                                          
                                          //unit[i] publishes their own information to unit[j]
                                    
                                    
                                       
                                          
                                          unit[i].subscribeInformation(Observe[j],Orient[j]){data_link.assign(j to i)};
                                    
                                    
                                       
                                          
                                          // unit[i] subscribes unit[j] information
                                    
                                    
                                       
                                          
                                          
                                          
                                          updateInformation(i);// update the unit[i] information
                                    
                                    
                                       
                                          
                                          
                                          }
                                    
                                    
                                       
                                          else
                                    
                                    
                                       
                                          
                                          system. exception(unit[i]);// throw the big information
                                    
                                    
                                       
                                          continue the OODA loop:
                                    
                                    
                                       
                                          
                                          
                                          unit[i].Decide( updateInformation[i]){evaluate response plans based on information[i]}
                                    
                                    
                                       
                                          
                                          
                                          unit[i].Act(updateInformation) {rescue the refugees and reduce the damage}
                                    
                                    
                                       
                                          
                                          
                                          do interaction in D-A loop.
                                    
                                    
                                       
                                          
                                          
                                          {
                                    
                                    
                                       
                                          
                                          unit[i].publishInformation(Decide[i]) {provide response plan and advice to unit[j]};
                                    
                                    
                                       
                                          
                                          //unit[i] publish their own information
                                    
                                    
                                       
                                          
                                          unit[i].subscribeInformation(Decide[j]){get response plan advice info from unit[j]};
                                    
                                    
                                       
                                          
                                          // subscribe unit[j] information and advice
                                    
                                    
                                       
                                          
                                          unit[i].publishInformation(Act[i]) {rescue the refugees and reduce the damage t[j]};
                                    
                                    
                                       
                                          
                                          //unit[i] publish action information
                                    
                                    
                                       
                                          
                                          unit[i].subscribeInformation(Act[j]){get response plan advice info from unit[j]};
                                    
                                    
                                       
                                          
                                          // subscribe unit[j] Action information and advice
                                    
                                    
                                       
                                          
                                          
                                          
                                          
                                          updateInformation(i);
                                    
                                    
                                       
                                          }
                                    
                                    
                                       
                                          }
                                    
                                    
                                       
                                          otherTask(updateInformation);
                                    
                                    
                                       
                                          tick.timeAdvance(); //simulation time advances.
                                    
                                    
                                       }
                                    
                                 
                              
                           
                        
                     

In this chapter, emergency response simulation system is designed in simulation environments- STAGE. In the simulation framework, the emergency response units are modeled and simulated based on OODA framework. We mainly describe the simulation of the emergency rescue response operation. The design process include following steps:
                           
                              (1)
                              Edit the scenario database of the emergency environment

In the scenario database editor, we can build the natural environment, buildings, platform, the rescue equipment and its attachments, as shown in Fig. 10
                                 .

The function of the STAGE scenario editor is strong. By means of it, we can design a reasonable scenario of emergency disaster response operation. We can set the weather, buildings, etc. In the formation modular, we can set such as the position control mode, relative distance, relative orientation and relative height and so on. In the platform modular, we can build the entities in the emergency environment, such as personnel, aircraft and vehicles. For example, we can lay out the specific contributes of entities including entity type, size, scope of activities, entity status, and conflict rules. The sensing range of the sensors can be set to the Sensor equipment like Radar.

Edit the mission scripts

After complete the database editing, the task and sub-tasks for the emergency entities will be designed. We need to arrange the task of the emergency units acting in the emergency response process, as also shown in Fig. 10.

In STAGE, every entity mission can be divided into different tasks and sub-tasks. The sub tasks on start, run, and end are within the range of superior task. There are two kinds of entity tasks: Conditional tasks and Event tasks. Among them, Conditional tasks are triggered by condition, namely, when the entity satisfies certain conditions, it should perform the corresponding actions. While the Event task is the event trigger mode, namely, when certain events occur in the scenario, the entity will take action. In both the Conditional tasks and Event tasks, the tasks about logic, flip flops, comparison, and operation comparative value can be further edited. Event tasks mainly contain external event, internal events, simulation time, action termination, sub-task accomplished five species. There are more types of condition tasks, mainly contain system, entity, navigation, obstacle, rival, track and so on. Through the action of trigger editor, we can simulate the real task.

Edition of the emergency response plans

Emergency Scenario means an expected or supposed situation or sequence of events. In the emergency response scenario, the emergency response situation and behaviors effect of the response units in the rescuing process are demonstrated in 3D models. We can make war-game to evaluate the rescue plans and the interaction effect of response units. Usually, during the response process of the emergency earthquake disaster, there are several emergency plans to be selected: the aviation way includes air plane and helicopter, while land way includes truck and team on foot. The emergency response need all of the emergency plans carried out cooperatively. And the emergency unit entities are shown in Fig. 11
                                 .

In the figure, three directions in the disaster city are deployed three emergency response teams respectively. One group unit is composed of a helicopter and two trucks, the other two groups are motor team and the rescuing army units on foot.

Run the simulation

After finish the scenario edition and setting, the emergency response simulation can be operated as shown in Fig. 12
                                 .

Seeing from the above chart, when the simulation starts, a set of emergency response formation consists of a helicopter and two trucks is close to the disaster city, and prepares for emergency rescue operations. The helicopter has strong maneuverability, so they can be easy to arrive at the disaster affected zone. What is more, the helicopter has advantages of flying highly and observing widely horizon, and therefore it can be in the front of the response rescue units to provide emergency information guide. After the truck vehicle units go into the disaster area, they can help the helicopter to select suitable landing site. These cooperation actions are very needed in such complex situation. The modeling process is based on the OODA framework. When the rescuing team finds a lot of injury victims, they require the other units like medical treatment unit, logistic unit for food and water, even require to helicopter unit to save lives at once. To keep running of such collaborative operations, it is important to build the linkage between all the rescue units by the information sharing and transmission through land and space. In the emergency response simulation, nearly all the entities in the emergency response are required to make cooperation with each other. The whole emergency response organization framework has formed into a collaborative network based on the OODA loop, and it really improves the effectiveness of emergency rescue response.

In this paper, the main work is summarized as follows:

Firstly, the emergency response framework based on OODA loop is built to describe the rule in the process emergency management.

Through the analysis on emergency response process, finds that there is a law among the response process stages like event monitoring, identification and information feedback, decision-making, implementation and operation. Such stages are similar to the four stages of military OODA loops: Observe, Orient, Decide and Act. And then, two kinds of emergency response frameworks based on OODA loop theory are built to describe the single and the coupled emergency response process respectively.

Secondly, build up the simulation mechanism of the emergency response based on OODA–DEVS theory. Pointing to the lack of theory of the emergency response mechanism, the formal description based on the DEVS theory is used to describe the emergency response process in OODA. First to analyze the OODA–DEVS model of a single emergency response unit, and then establishes the OODA–DEVS model of the coupled emergency response unit.

Thirdly, emergency response simulation system based on emergency response mechanism is built to analyze the effectiveness of the response units based on the OODA theory.

According to OODA–DEVS description model of the emergency response mechanism, emergency simulation scenarios are built. And a lot of simulation entities, environment modular are modeled. Focusing on the cooperation between entities, the scripts are edited in STAGE editor. Taking the rescue response to earthquake disaster as example, the cooperation of the emergency response units is well described. The simulation results show that the mechanism of the emergency response process based on OODA theory is reasonable and feasible in emergency response simulation.

In the future work, it is necessary to adopt the emergency response mechanism based on OODA loop to develop a set of software systems so as to command and control the emergency disaster response more valid and more powerful.

@&#ACKNOWLEDGMENT@&#

This work is supported by Natural Science Foundation of China (No. 61374186, No. 60804035).

@&#REFERENCES@&#

