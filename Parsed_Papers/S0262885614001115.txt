@&#MAIN-TITLE@&#Sparse representation with multi-manifold analysis for texture classification from few training images

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           The prime pyramid expands the training dataset with less redundancy.


                        
                        
                           
                           Sparse representation provides a compact model for textural images in each class.


                        
                        
                           
                           Multi-manifold analysis improves discriminative power while mitigates overfitting.


                        
                        
                           
                           Reasonably high classification accuracy is achieved with very few training images.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Texture classification

Sparse representation

Manifold learning

Multi-manifold analysis

Few training image

@&#ABSTRACT@&#


               
               
                  Texture classification is one of the most important tasks in computer vision field and it has been extensively investigated in the last several decades. Previous texture classification methods mainly used the template matching based methods such as Support Vector Machine and k-Nearest-Neighbour for classification. Given enough training images the state-of-the-art texture classification methods could achieve very high classification accuracies on some benchmark databases. However, when the number of training images is limited, which usually happens in real-world applications because of the high cost of obtaining labelled data, the classification accuracies of those state-of-the-art methods would deteriorate due to the overfitting effect. In this paper we aim to develop a novel framework that could correctly classify textural images with only a small number of training images. By taking into account the repetition and sparsity property of textures we propose a sparse representation based multi-manifold analysis framework for texture classification from few training images. A set of new training samples are generated from each training image by a scale and spatial pyramid, and then the training samples belonging to each class are modelled by a manifold based on sparse representation. We learn a dictionary of sparse representation and a projection matrix for each class and classify the test images based on the projected reconstruction errors. The framework provides a more compact model than the template matching based texture classification methods, and mitigates the overfitting effect. Experimental results show that the proposed method could achieve reasonably high generalization capability even with as few as 3 training images, and significantly outperforms the state-of-the-art texture classification approaches on three benchmark datasets.
               
            

@&#INTRODUCTION@&#

Among all properties of an object, such as colour, shape, and motion, texture is one of the most significant characteristics which human vision and machine vision systems utilize in interpreting scenes and performing object identification. As an active field in computer vision, texture classification has been widely applied in many areas including medical image analysis [1–3], remote sensing [4], material characterization [5], and content-based image retrieval (CBIR) [6]. Due to the existence of the large intra-class variation (Fig. 1
                     ) and inter-class similarity in textural images robust texture classification is very challenging.

A general texture classification framework comprises two steps: the textural feature extraction, and classification. Previous works mainly focused on designing the robust feature extraction methods and using classifiers such as Support Vector Machine (SVM) and k-Nearest-Neighbour (kNN) for supervised classification [8,9]. Some representative feature extraction methods include the Local Binary Patterns (LBP) [10], texton-based approaches [11,12,7,13], filter bank based methods [14–17] and bag-of-keypoints [18,8]. The texton-based approaches represent a textural image as a histogram of textons, where the textons are computed by utilizing a clustering algorithm such as k-means to cluster the local feature vectors extracted from the training images. There are numerous ways to extract the local feature vectors from images in the texton-based approaches. In [11,12,7], a bank of filters is utilized and all the filter responses on each pixel are concatenated as a local feature vector. By carefully selecting the filters, the filter bank based feature could be invariant to image translation and rotation. Another popular kind of local features is image patches [13], which utilize the raw pixel values in a fixed-size image patch around each pixel as a local feature vector, and it was proven to outperform the filter bank based feature on some datasets. Recently, Liu and Fieguth [19] applied random projection on the image patch to get a random feature based on the compressive sensing theorem, which not only reduced the dimension of the feature, but also achieved comparative results with the patch-based method [13]. The filter bank based methods filter an image using a bank of well designed filters, and extract features from each filtered image. All the features are then concatenated together as the image feature. Different from the texton-based approaches using filter bank responses on each pixel as a local feature vector, all the features extracted by the filter bank based methods are in image-level but not pixel-level, thus they could not give a statistical characterization of textures. Therefore the filter bank based features are usually not as discriminative as those descriptors that could capture the local primitives of textures for texture classification, e.g., the texton-based approaches, though they could be designed to be invariant to many image variations such as translation, scale, and rotation. The bag-of-keypoint approaches utilize the region detectors such as Harris–Laplace (HL) detector to detect the interest areas of images, and then apply the image descriptors like Scale-Invariant Feature Transform (SIFT) and Histogram of Oriented Gradients (HOG) to extract local features from them [8]. The bag-of-keypoint features are invariant to image translation, rotation and affine transform. However, since the local features extracted from the detected keypoints of textural images are sparsely distributed, the bag-of-keypoint features are usually not discriminative enough. To tackle this problem, another method was proposed by extracting the local SIFT feature from densely sampled locations [20,21], and it was shown in [20] that the dense feature worked better than bag-of-keypoints for scene classification. However, the dense SIFT sampling loses scale and affine invariance.

Texture classification could be regarded as a statistical learning problem, where one template is learnt from each training image (through feature extraction) and a classifier is learnt from all the templates of the training images. Ideally, if the feature extraction method is robust enough (not only invariant to different imaging conditions but also discriminative), the templates learnt from images of the same class will be close to each other and those learnt from images of different classes will be far away from each other, reaching small intra-class variation and large inter-class variation. Thus, a simple classifier with a few training images could easily distinguish test images from different classes. However, it is not always feasible to design a very discriminative feature extraction method, and also since the classifier is local in the input space (both SVM and kNN are local estimators), it requires a large number of training images to achieve a high generalization capability [22]. As shown in Section 3, the performance of the state-of-the-art texture classifiers will significantly decline when the number of training images per class decreases. Since collecting labelled image data is costly, it is common in practice that only a small number of images are available for training. Thus, it is critical to develop robust classification methods that only need a small amount of training images to achieve high generalization capability in the classification of test images (in fact not only for texture classification, most computer vision tasks have such a desire).

A few attempts have been made to solve the problem of classifying textures from a small number of training images. For instance, Drbohlav and Chantler [23] brought out a method to classify textural images captured under different illuminations from a single training image per class. They filtered an image with a directional derivative operator to model the textural appearance under a specific illumination direction, and then utilized a filter bank to compute the image features. To compare two images under unknown illumination directions, a set of feature vectors were calculated for a complete set of illumination directions for each image. The distance between the closest pair of feature vectors of the two images is adopted as the distance between them. Targhi et al. [24] developed an approach to classify textures under unknown lighting conditions from a small number of training images by generating additional training data using a photometric stereo. However, these works only considered single variation of textures, i.e., illumination change, which were not applicable to the real world texture classification where textures are usually subject to multiple imaging condition variations, as illustrated in Fig. 1.

In this paper, we aim to develop a novel framework that only needs a few training images to classify textures with various image variations such as translation, rotation, scale, illumination and view-point change. The following three major aspects are considered in the proposed texture classification framework:
                        
                           1.
                           Since most textures are uniform and repetitive on pattern distribution, we could divide a textural image into many subimages, where each subimage represents one aspect of the texture and is regarded as a new sample. Subsequently, by using these subimages for training, more variations of the texture are incorporated which is beneficial for achieving higher generalization capability of the model.

It is presumed that a more compact model requires less training samples to learn a generalized representation of signals. Because textures are sparse and the sparse representation suggests a more compact model than the local estimators [22], the sparse representation is favourable to model the textural images.

Considering that supervised learning from a small number of training images is prone to overfitting, which results in low generalization capability in the classification of new images, it is important to consider both the discrimination and generalization of a model in the learning process. Regarding each texture as lying in a low dimensional manifold, it is expected that through a multi-manifold analysis, on the one hand the distance between different texture classes could be enlarged, thus increasing the discriminative power of the model; on the other hand the intra-class variation can be decreased, therefore mitigating the overfitting effect.

Based on the above considerations, we develop a sparse representation based multi-manifold analysis (SR-MMA) framework for texture classification from few training images. After extracting a set of image patches from each training image as the new training samples, we utilize sparse representation to model these new samples by assuming that each sample of a texture is generated from a sparse representation of a set of basis. Subsequently, we propose a supervised multi-manifold analysis algorithm to learn a projection matrix for each texture class that considers both the discrimination and generalization of the model. The test images are classified using a modified sparse representation based classification method by plurality voting.

The rest of the paper is organized as follows. Section 2 presents details of the proposed method of texture classification from few training images via SR-MMA. Experiments are shown in Section 3. Section 4 concludes the paper.

In this section we address the problem of texture classification from few training images. The small number of training images available are denoted as {T
                     
                        l
                     ,
                     l
                     =1,…
                     N}, where N is the total number of training images for C classes.

As widely acknowledged, texture could be regarded as a periodical repeat of patterns in space. In most textural images, the patterns are uniformly distributed, thus an arbitrary region (larger than a certain size which is determined by the number and size of patterns) in such a textural image has similar appearance to the whole image, and could be used to describe the whole image. One example is shown in Fig. 2
                        . By equally dividing a textural image into 4 or 16 subimages, those subimages still look similar to the original image. On the other hand, because of the existence of randomness on pattern distribution and noise in images, different regions of an image might have small variations. Therefore, by dividing a textural image into several regions (either overlapped or non-overlapped), each region as a subimage, these subimages not only characterize the original image, but also incorporate variations which are beneficial to learning a robust model with high generalization capability.

For textures whose patterns are not uniformly distributed, accurate classification becomes harder since the training and test images might be captured from different parts of a texture. In this situation, dividing the image into subimages for training is sometimes more important because they could cover different aspects of a texture. For example, as shown in Fig. 3
                        , two images from the KTHTIPS2 database [26] are captured from the same texture but cover different areas. From a first glance, it is easy to find out that the image on the right is generated from the labelled region of the one on the left. Since the texture is not uniformly distributed, using the whole image of the left one for training might not classify the image on the right correctly. However, if we divide the left image into subimages which include the labelled region for training, a better result could be achieved.

In this paper, we apply the spatial pyramid technique to divide a textural image into several non-overlapped subimages. To create a spatial pyramid image representation, the traditional method [21] divides an image into increasingly coarser grids (subimages) when the pyramid level increases, e.g., each subimage in pyramid level l (in level 0 is the original image) is divided into four equal-sized subimages in level l
                        +1. Thus, the subimages generated by this method are highly correlated with each other, e.g., each subimage could be expressed as a linear combination of four other subimages (simply by plus or minus). In order to decrease the correlation between subimages at different levels, which otherwise will make the generated subimages redundant, we design a different spatial pyramid called prime pyramid in which the number of division along each dimension of an image changes as a sequence of prime numbers, i.e., {2,3,5,7,11,13,…}, with the spatial level. For example, under the prime pyramid an image will be divided into 2×2 subimages in level 1, 3×3 in level 2, 5×5 in level 3, and so on. In addition, because of the existence of scale change in textural images, we also adopt the scale pyramid to expand the textural images in scale direction, as shown in Fig. 4
                        . The subimages generated from both the scale and spatial pyramid are utilized as the new training samples.

The new training samples generated from the original training images are denoted as {T
                        
                           l
                        
                        
                           j
                        ,
                        l
                        =1,…,
                        N,
                        j
                        =1,…,
                        N
                        
                           s
                        }, where N
                        
                           s
                         is the number of training samples generated from each image.

In fact, generating new training set has also been adopted in previous literature. Chen et al. [27] utilized the genetic algorithm (GA) to generate new training samples from the original training set, and employed an evolutionary classifier called Sparse Network of Winnows (SNoW) to evaluate the generated new samples. Then a manifold-based method was applied to re-sample the resulted generations. By repeating the process for several generations, an optimized training set with much more samples than the original training set was obtained and used for face detection. However, this method is not suitable for our work in which the number of training samples of each class is too small, e.g., 1 or 3, as in their method the original training set should cover a fair amount of the core set of each class distribution to obtain a good optimized training set.

In a general term, sparse representation (SR) aims to represent a sparse signal as a linear combination of a small number of atoms from a dictionary, by solving a ℓ
                        0-norm regularized linear regression problem — 
                           
                              (1)
                              
                                 
                                    mi
                                    
                                       n
                                       x
                                    
                                    ∥
                                    x
                                    
                                       ∥
                                       0
                                    
                                    ,
                                    s
                                    .
                                    t
                                    .
                                    Ax
                                    =
                                    y
                                 
                              
                           
                        where A
                        =[a
                        1,
                        a
                        2,…,
                        a
                        
                           N
                        ]∈
                        R
                        
                           m
                           ×
                           N
                         is the dictionary, y
                        ∈
                        R
                        
                           m
                           ×1 is the signal, and x
                        ∈
                        R
                        
                           N
                           ×1 is the coefficient vector (sparse code). It is proved that if the input y is sparse enough the ℓ
                        1-norm regularization (Eq. (2)) could get the same solution as the ℓ
                        0-norm [28], which is unique since the ℓ
                        1-norm is convex.
                           
                              (2)
                              
                                 
                                    mi
                                    
                                       n
                                       x
                                    
                                    ∥
                                    Ax
                                    −
                                    y
                                    
                                       ∥
                                       2
                                       2
                                    
                                    +
                                    α
                                    ∥
                                    x
                                    
                                       ∥
                                       1
                                    
                                 
                              
                           
                        where α is a regularization parameter.

Most natural images are demonstrated to be very sparse through the DCT transform (JPEG) and wavelet transform (JPEG 2000), especially for faces and textures [19,29], thus it is rationale to use the sparse representation to model the textural images. Since sparse representation also allows for a distributed representation of signals, it could suggest a more compact model than the local estimators [22]. Furthermore, it is worth noting that a sparse representation of a signal on a supervisedly learnt dictionary is naturally discriminative [30]. Therefore, sparse representation could provide many beneficial properties to image classification. It has been applied in many image classification tasks, including face recognition [30], object categorization [31], and texture classification [32,33].

In a sparse representation based classification (SRC) scheme for face recognition reported in [30], Wright et al. concatenated all the training images together as the dictionary A, and then represented each test image as a sparse linear combination of the atoms in A by solving a ℓ
                        1-minimization equation (Eq. (2)). The residuals of the sparse code (the optimized coefficient vector 
                           
                              x
                              ^
                           
                        ) on each image class are computed by
                           
                              (3)
                              
                                 
                                    
                                       r
                                       i
                                    
                                    
                                       y
                                    
                                    =
                                    ∥
                                    y
                                    −
                                    A
                                    
                                       δ
                                       i
                                    
                                    
                                       
                                          x
                                          ^
                                       
                                    
                                    
                                       ∥
                                       2
                                       2
                                    
                                    ,
                                    for
                                    
                                    i
                                    =
                                    1
                                    ,
                                    …
                                    ,
                                    C
                                 
                              
                           
                        where 
                           
                              
                                 δ
                                 i
                              
                              
                                 
                                    x
                                    ^
                                 
                              
                           
                         is a function that keeps the elements in 
                           
                              x
                              ^
                           
                         associated with the ith class unchanged, and makes others as zero. The test image y is classified to the class with the least residue. It was demonstrated that SRC was very robust to noise, occlusion and corruption of test faces in face recognition.

Yang et al. [31] introduced a method to incorporate SR into the bag-of-words based image classification. They learnt a dictionary for the sparse representation from the local words of all the training images, and calculated a sparse code for each word in an image by SR. Each image was represented as a feature vector by max-pooling the sparse codes of all the local words in it. A linear supported vector machine (SVM) was finally adopted for classification. Following Yang's work, Xie et al. [32] applied sparse representation for texture classification by utilizing the image patches as the local words and generating image features from the SR coefficients of the image patches. A Nearest Neighbour classifier was adopted for classification. The method was demonstrated to achieve better results than the k-means bag-of-words framework on the CUReT database.

Since Yang's and Xie's works are based on the template matching for classification, they still suffer from the shortage of the local estimators that a fair amount of training images are needed to reach a good generalization. In contrast, since the SRC proposed by Wright et al. classifies images through the reconstruction error of a joint representation, it usually needs less number of training images to generalize.

In this work, we extend SRC for robust texture classification from few training images. By regarding each texture as lying in a separate low dimensional subspace, a textural image could only be represented as a sparse linear combination of the atoms in the dictionary of the class it belongs to. If the image is represented on dictionaries of other classes, the reconstruction errors would be large. Thus, a textural image could be classified by comparing all the class-specific sparse representation reconstruction errors. Specifically, we first learn a dictionary of sparse representation {A
                        
                           i
                        ,
                        i
                        =1,…,
                        C} for each class from the pyramid generated training samples {T
                        
                           l
                        
                        
                           j
                        ,
                        l
                        =1,…
                        N,
                        j
                        =1,…,
                        N
                        
                           s
                        } using an online sparse representation method [34], and then calculate a sparse representation of any test sample y on the dictionary of each class by solving a ℓ
                        1-norm optimization problem (Eq. (4)), which is denoted as 
                           
                              
                                 
                                    
                                       
                                          x
                                          ^
                                       
                                       i
                                    
                                 
                                 ,
                                 i
                                 =
                                 1
                                 ,
                                 …
                                 ,
                                 C
                              
                           
                        . The sample y could be classified by comparing the reconstruction errors on each class according to Eq. (5).
                           
                              (4)
                              
                                 
                                    mi
                                    
                                       n
                                       
                                          x
                                          i
                                       
                                    
                                    ∥
                                    
                                       A
                                       i
                                    
                                    
                                       x
                                       i
                                    
                                    −
                                    y
                                    
                                       ∥
                                       2
                                       2
                                    
                                    +
                                    α
                                    ∥
                                    
                                       x
                                       i
                                    
                                    
                                       ∥
                                       1
                                    
                                 
                              
                           
                        
                        
                           
                              (5)
                              
                                 
                                    label
                                    
                                       y
                                    
                                    =
                                    argmi
                                    
                                       n
                                       i
                                    
                                    
                                       
                                          ∥
                                          y
                                          −
                                          
                                             A
                                             i
                                          
                                          
                                             
                                                
                                                   x
                                                   ^
                                                
                                                i
                                             
                                          
                                          
                                             ∥
                                             2
                                             2
                                          
                                          ,
                                          i
                                          =
                                          1
                                          ,
                                          …
                                          ,
                                          C
                                       
                                    
                                    .
                                 
                              
                           
                        
                     

The proposed class-SRC method could be regarded as a simple supervised dictionary learning (SDL) approach for sparse representation. By utilizing the label information of training images in dictionary learning, SDL can learn a more discriminative dictionary for classification in many different ways [35–41]. The most simple SDL method is to learn a dictionary for each class, and then either concatenate the dictionaries as one [35] or use them separately [36] which we adopt in this work, to calculate the sparse codes. More sophisticated SDL approaches explored the discriminative power of using image labels by either maximizing the joint probability of training images and their labels [37], or incorporating a classifier (linear, bilinear, or softmax) into the model to learn the dictionary and classifier together [38–40], or simultaneously minimizing the intra-class covariation and maximizing the inter-class covariation of the sparse codes based on the Fisher discrimination criterion [41]. Though more discriminative power can be acquired using the sophisticated approaches, most of them are either hard and time consuming to tune or prone to getting stuck in local minima. A detailed introduction and comparison of the SDL approaches can be seen in [37]. In this work, we do not use the sophisticated SDL approach, but instead we apply a multi-manifold analysis on top of the simple class-SRC method to acquire more discriminative power, which we present in the next section.

It is worthwhile to point out that the class-SRC method is very suitable to model the pyramid generated new training samples since the scale and spatial pyramid generated subimages of a textural image could cover different aspects of a texture, and through their sparse linear combination different texture realizations can be generated to simulate those captured under various imaging conditions to facilitate a robust texture classifier.

Since the training samples are generated from just a few images, merely using the class-SRC to model them could be in lack of discriminative power and potentially subject to overfitting. To deal with these problems, we propose a novel multi-manifold analysis method to learn a projection matrix for each texture class by considering both the discrimination and generalization of the model.

Denoting the class-specific projection matrices as {D
                        
                           i
                        ,
                        i
                        =1,…,
                        C}, they are learnt by optimizing the following function:
                           
                              (6)
                              
                                 
                                    mi
                                    
                                       n
                                       
                                          
                                             D
                                             1
                                          
                                          
                                             D
                                             2
                                          
                                          …
                                          
                                             D
                                             C
                                          
                                       
                                    
                                    J
                                    
                                       
                                          D
                                          1
                                       
                                       
                                          D
                                          2
                                       
                                       …
                                       
                                          D
                                          C
                                       
                                    
                                    =
                                    
                                       J
                                       1
                                    
                                    
                                       
                                          D
                                          1
                                       
                                       
                                          D
                                          2
                                       
                                       …
                                       
                                          D
                                          C
                                       
                                    
                                    +
                                    λ
                                    
                                       J
                                       2
                                    
                                    
                                       
                                          D
                                          1
                                       
                                       
                                          D
                                          2
                                       
                                       …
                                       
                                          D
                                          C
                                       
                                    
                                 
                              
                           
                        where J
                        1(D
                        1,
                        D
                        2,…,
                        D
                        
                           C
                        ) is the discriminative term, J
                        2(D
                        1,
                        D
                        2,…,
                        D
                        
                           C
                        ) is the generalized term which is a manifold regularization in this work, and λ is a slack variable that compromises the two terms.

Based on the projection matrix, we define a new formula to calculate the reconstruction error of image y on class i as:
                              
                                 (7)
                                 
                                    
                                       
                                          
                                             
                                                E
                                                ˜
                                             
                                             
                                                y
                                             
                                             =
                                             
                                             ∥
                                             
                                                D
                                                i
                                             
                                             y
                                             −
                                             
                                                D
                                                i
                                             
                                             
                                                A
                                                i
                                             
                                             
                                                
                                                   
                                                      x
                                                      ^
                                                   
                                                   i
                                                
                                             
                                             
                                                ∥
                                                2
                                                2
                                             
                                          
                                       
                                       
                                          
                                             =
                                             
                                                
                                                   
                                                      y
                                                      −
                                                      
                                                         A
                                                         i
                                                      
                                                      
                                                         
                                                            
                                                               x
                                                               ^
                                                            
                                                            i
                                                         
                                                      
                                                   
                                                
                                                T
                                             
                                             
                                                
                                                   
                                                      D
                                                      i
                                                   
                                                   T
                                                
                                             
                                             
                                                D
                                                i
                                             
                                             
                                                
                                                   y
                                                   −
                                                   
                                                      A
                                                      i
                                                   
                                                   
                                                      
                                                         
                                                            x
                                                            ^
                                                         
                                                         i
                                                      
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           which could be seen as the original sparse representation reconstruction error 
                              
                                 ∥
                                 y
                                 −
                                 
                                    A
                                    i
                                 
                                 
                                    
                                       
                                          x
                                          ^
                                       
                                       i
                                    
                                 
                                 
                                    ∥
                                    2
                                    2
                                 
                              
                            calculated under a Mahalanobis metric 
                              
                                 M
                                 =
                                 
                                    
                                       
                                          D
                                          i
                                       
                                       T
                                    
                                 
                                 
                                    D
                                    i
                                 
                              
                           .

Following [42], we introduce an intra-class error and inter-class error for each sample image respectively. The intra-class error of image y is represented as 
                              
                                 
                                    
                                       
                                          E
                                          ˜
                                       
                                       c
                                    
                                 
                                 
                                    y
                                 
                                 =
                                 
                                 ∥
                                 
                                    D
                                    c
                                 
                                 y
                                 −
                                 
                                    D
                                    c
                                 
                                 
                                    A
                                    c
                                 
                                 
                                    
                                       
                                          x
                                          ^
                                       
                                       c
                                    
                                 
                                 
                                    ∥
                                    2
                                    2
                                 
                              
                           , where c is the ground-truth class y belongs to, and the inter-class error of y is the least reconstruction error of those on classes other than c, which is defined as 
                              
                                 
                                    
                                       
                                          E
                                          ˜
                                       
                                       d
                                    
                                 
                                 
                                    y
                                 
                                 =
                                 
                                 ∥
                                 
                                    D
                                    d
                                 
                                 y
                                 −
                                 
                                    D
                                    d
                                 
                                 
                                    A
                                    d
                                 
                                 
                                    
                                       
                                          x
                                          ^
                                       
                                       d
                                    
                                 
                                 
                                    ∥
                                    2
                                    2
                                 
                              
                           , where 
                              
                                 d
                                 =
                                 argmi
                                 
                                    n
                                    i
                                 
                                 
                                    
                                       ∥
                                       
                                          D
                                          i
                                       
                                       y
                                       −
                                       
                                          D
                                          i
                                       
                                       
                                          A
                                          i
                                       
                                       
                                          
                                             
                                                x
                                                ^
                                             
                                             i
                                          
                                       
                                       
                                          ∥
                                          2
                                          2
                                       
                                       ,
                                       
                                       i
                                       =
                                       1
                                       ,
                                       …
                                       ,
                                       C
                                       
                                       and
                                       
                                       i
                                       ≠
                                       c
                                    
                                 
                              
                           . To correctly classify an image, its intra-class error should be smaller than its inter-class error, and the smaller the ratio between the two, the more confidence will be gained in classification. Thus, we propose to learn the projection matrices in a discriminative way by minimizing the ratio of the intra-class error to inter-class error of all the training samples as the work in Zhang et al. [42]. We define the discriminative term in Eq. (6) as follows:
                              
                                 (8)
                                 
                                    
                                       
                                          J
                                          1
                                       
                                       =
                                       
                                          1
                                          
                                             N
                                             ∗
                                             
                                                N
                                                s
                                             
                                          
                                       
                                       
                                          
                                             ∑
                                             
                                                l
                                                =
                                                1
                                             
                                             N
                                          
                                          
                                       
                                       
                                       
                                          
                                             ∑
                                             
                                                j
                                                =
                                                1
                                             
                                             
                                                N
                                                s
                                             
                                          
                                          
                                       
                                       
                                       
                                          S
                                          
                                             β
                                             1
                                          
                                       
                                       
                                          
                                             R
                                             
                                                
                                                   T
                                                   l
                                                   j
                                                
                                             
                                             −
                                             1
                                          
                                       
                                    
                                 
                              
                           where 
                              
                                 R
                                 
                                    
                                       T
                                       l
                                       j
                                    
                                 
                                 =
                                 
                                    
                                       
                                          E
                                          ˜
                                       
                                       c
                                    
                                 
                                 
                                    
                                       T
                                       l
                                       j
                                    
                                 
                                 /
                                 
                                    
                                       
                                          E
                                          ˜
                                       
                                       d
                                    
                                 
                                 
                                    
                                       T
                                       l
                                       j
                                    
                                 
                              
                            is the intra-class error to inter-class error ratio of T
                           
                              l
                           
                           
                              j
                           , and S
                           
                              β
                           (x)=1/1+
                           exp(−
                           β
                           ∗
                           x) is a sigmoid function that has an “S” shape and could be seen as a smoothed version of the step function centred at x
                           =0. Through minimizing J
                           1, R(T
                           
                              l
                           
                           
                              j
                           ) will become smaller and smaller, which thus gain the method more confidence for classification, and will make the model more discriminative.

In order to make the learnt projection matrices also general, we incorporate a smooth prior in the model. The smooth prior is a manifold assumption (also known as a graph regularization in [43,44]) that if two data y
                           
                              i
                            and y
                           
                              j
                            are close in the original space, they should also be close in the projected space by a projection matrix D, in which these two data will become Dy
                           
                              i
                            and Dy
                           
                              j
                           . We present the manifold regularization in the following form:
                              
                                 (9)
                                 
                                    
                                       
                                          J
                                          2
                                       
                                       =
                                       
                                          1
                                          
                                             N
                                             ∗
                                             
                                                N
                                                s
                                             
                                          
                                       
                                       
                                          
                                             ∑
                                             
                                                l
                                                =
                                                1
                                             
                                             N
                                          
                                          
                                       
                                       
                                       
                                          
                                             ∑
                                             
                                                j
                                                =
                                                1
                                             
                                             
                                                N
                                                s
                                             
                                          
                                          
                                       
                                       
                                       
                                          
                                             ∑
                                             
                                                k
                                                =
                                                1
                                             
                                             K
                                          
                                          
                                       
                                       
                                       
                                          w
                                          l
                                          jk
                                       
                                       ∗
                                       
                                          S
                                          
                                             β
                                             2
                                          
                                       
                                       
                                          
                                             M
                                             
                                                
                                                   T
                                                   l
                                                   j
                                                
                                                
                                                   T
                                                   l
                                                   jk
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           where M(T
                           
                              l
                           
                           
                              j
                           ,
                           T
                           
                              l
                           
                           
                              jk
                           )=∥
                           D
                           
                              c
                           
                           ∗
                           T
                           
                              l
                           
                           
                              j
                           
                           −
                           D
                           
                              c
                           
                           ∗
                           T
                           
                              l
                           
                           
                              jk
                           
                           ∥
                           2
                           2, {T
                           
                              l
                           
                           
                              jk
                           ,
                           k
                           =1,…,
                           K} are the K Nearest Neighbours of T
                           
                              i
                           
                           
                              j
                            inside the same class, and {w
                           
                              l
                           
                           
                              jk
                           ,
                           k
                           =1,…,
                           K} are the weights between them which reflect the degree of closeness. We define the weight between T
                           
                              l
                           
                           
                              jk
                            and T
                           
                              l
                           
                           
                              j
                            as:
                              
                                 (10)
                                 
                                    
                                       
                                          w
                                          l
                                          jk
                                       
                                       =
                                       exp
                                       
                                          
                                             −
                                             ∥
                                             
                                                T
                                                l
                                                j
                                             
                                             −
                                             
                                                T
                                                l
                                                jk
                                             
                                             
                                                ∥
                                                2
                                                2
                                             
                                             /
                                             
                                                σ
                                                2
                                             
                                          
                                       
                                    
                                 
                              
                           where σ is an empirically determined parameter. Interestingly, a similar multi-manifold analysis has also been utilized for the face recognition from a single training image [45], where each training image was partitioned into several non-overlapping patches and the multiple manifolds were learnt from these patches. They achieved quite promising results in several face recognition tasks which is also inspiring to us.

To minimize Eq. (6), we use a gradient descent (GD) method to optimize the class-specific projection matrices. Since the discriminative term J
                           1 and generalized term J
                           2 are clearly defined, we could easily calculate the gradient of J(D
                           1,
                           D
                           2,…,
                           D
                           
                              C
                           ) to each projection matrix D
                           
                              i
                            using the chain rule as:
                              
                                 (11)
                                 
                                    
                                       
                                          
                                             
                                                g
                                                
                                                   D
                                                   i
                                                
                                             
                                             =
                                             
                                                
                                                   δ
                                                   J
                                                
                                                
                                                   δ
                                                   
                                                      D
                                                      i
                                                   
                                                
                                             
                                          
                                       
                                       
                                          
                                             
                                             =
                                             
                                                
                                                   δ
                                                   
                                                      J
                                                      1
                                                   
                                                
                                                
                                                   δ
                                                   
                                                      D
                                                      i
                                                   
                                                
                                             
                                             +
                                             λ
                                             
                                                
                                                   δ
                                                   
                                                      J
                                                      2
                                                   
                                                
                                                
                                                   δ
                                                   
                                                      D
                                                      i
                                                   
                                                
                                             
                                          
                                       
                                       
                                          
                                             
                                             =
                                             
                                                1
                                                
                                                   N
                                                   ∗
                                                   
                                                      N
                                                      s
                                                   
                                                
                                             
                                             
                                                
                                                   ∑
                                                   
                                                      l
                                                      =
                                                      1
                                                   
                                                   N
                                                
                                                
                                             
                                             
                                             
                                                
                                                   ∑
                                                   
                                                      j
                                                      =
                                                      1
                                                   
                                                   
                                                      N
                                                      s
                                                   
                                                
                                                
                                             
                                             
                                             
                                                
                                                   δ
                                                   
                                                      S
                                                      
                                                         β
                                                         1
                                                      
                                                   
                                                   
                                                      
                                                         R
                                                         
                                                            
                                                               T
                                                               l
                                                               j
                                                            
                                                         
                                                         −
                                                         1
                                                      
                                                   
                                                
                                                
                                                   δR
                                                   
                                                      
                                                         T
                                                         l
                                                         j
                                                      
                                                   
                                                
                                             
                                             ∗
                                             
                                                
                                                   δR
                                                   
                                                      
                                                         T
                                                         l
                                                         j
                                                      
                                                   
                                                
                                                
                                                   δ
                                                   
                                                      D
                                                      i
                                                   
                                                
                                             
                                          
                                       
                                       
                                          
                                             
                                             +
                                             
                                                λ
                                                
                                                   N
                                                   ∗
                                                   
                                                      N
                                                      s
                                                   
                                                
                                             
                                             
                                                
                                                   ∑
                                                   
                                                      l
                                                      =
                                                      1
                                                   
                                                   N
                                                
                                                
                                             
                                             
                                             
                                                
                                                   ∑
                                                   
                                                      j
                                                      =
                                                      1
                                                   
                                                   
                                                      N
                                                      s
                                                   
                                                
                                                
                                             
                                             
                                             
                                                
                                                   ∑
                                                   
                                                      k
                                                      =
                                                      1
                                                   
                                                   K
                                                
                                                
                                             
                                             
                                             
                                                w
                                                l
                                                jk
                                             
                                             ∗
                                             
                                                
                                                   δ
                                                   
                                                      S
                                                      
                                                         β
                                                         2
                                                      
                                                   
                                                   
                                                      
                                                         M
                                                         
                                                            
                                                               T
                                                               l
                                                               j
                                                            
                                                            
                                                               T
                                                               l
                                                               jk
                                                            
                                                         
                                                      
                                                   
                                                
                                                
                                                   δM
                                                   
                                                      
                                                         T
                                                         l
                                                         j
                                                      
                                                      
                                                         T
                                                         l
                                                         jk
                                                      
                                                   
                                                
                                             
                                             ∗
                                             
                                                
                                                   δM
                                                   
                                                      
                                                         T
                                                         l
                                                         j
                                                      
                                                      
                                                         T
                                                         l
                                                         jk
                                                      
                                                   
                                                
                                                
                                                   δ
                                                   
                                                      D
                                                      i
                                                   
                                                
                                             
                                          
                                       
                                       
                                          
                                             
                                             =
                                             
                                                1
                                                
                                                   N
                                                   ∗
                                                   
                                                      N
                                                      s
                                                   
                                                
                                             
                                             
                                                
                                                   ∑
                                                   
                                                      c
                                                      
                                                         
                                                            T
                                                            l
                                                         
                                                      
                                                      =
                                                      i
                                                   
                                                
                                                
                                             
                                             
                                             
                                                
                                                   ∑
                                                   
                                                      j
                                                      =
                                                      1
                                                   
                                                   
                                                      N
                                                      s
                                                   
                                                
                                                
                                             
                                             
                                             
                                                
                                                   δ
                                                   
                                                      S
                                                      
                                                         β
                                                         1
                                                      
                                                   
                                                   
                                                      
                                                         R
                                                         
                                                            
                                                               T
                                                               l
                                                               j
                                                            
                                                         
                                                         −
                                                         1
                                                      
                                                   
                                                
                                                
                                                   δR
                                                   
                                                      
                                                         T
                                                         l
                                                         j
                                                      
                                                   
                                                
                                             
                                             ∗
                                             R
                                             
                                                
                                                   T
                                                   l
                                                   j
                                                
                                             
                                             ∗
                                             
                                                
                                                   δ
                                                   
                                                      
                                                         
                                                            E
                                                            ˜
                                                         
                                                         c
                                                      
                                                   
                                                   
                                                      
                                                         T
                                                         l
                                                         j
                                                      
                                                   
                                                   /
                                                   δ
                                                   
                                                      D
                                                      i
                                                   
                                                
                                                
                                                   
                                                      
                                                         
                                                            E
                                                            ˜
                                                         
                                                         c
                                                      
                                                   
                                                   
                                                      
                                                         T
                                                         l
                                                         j
                                                      
                                                   
                                                
                                             
                                          
                                       
                                       
                                          
                                             
                                             −
                                             
                                                1
                                                
                                                   N
                                                   ∗
                                                   
                                                      N
                                                      s
                                                   
                                                
                                             
                                             
                                                
                                                   ∑
                                                   
                                                      d
                                                      
                                                         
                                                            T
                                                            l
                                                         
                                                      
                                                      =
                                                      i
                                                   
                                                
                                                
                                             
                                             
                                             
                                                
                                                   ∑
                                                   
                                                      j
                                                      =
                                                      1
                                                   
                                                   
                                                      N
                                                      s
                                                   
                                                
                                                
                                             
                                             
                                             
                                                
                                                   δ
                                                   
                                                      S
                                                      
                                                         β
                                                         1
                                                      
                                                   
                                                   
                                                      
                                                         R
                                                         
                                                            
                                                               T
                                                               l
                                                               j
                                                            
                                                         
                                                         −
                                                         1
                                                      
                                                   
                                                
                                                
                                                   δR
                                                   
                                                      
                                                         T
                                                         l
                                                         j
                                                      
                                                   
                                                
                                             
                                             ∗
                                             R
                                             
                                                
                                                   T
                                                   l
                                                   j
                                                
                                             
                                             ∗
                                             
                                                
                                                   δ
                                                   
                                                      
                                                         
                                                            E
                                                            ˜
                                                         
                                                         d
                                                      
                                                   
                                                   
                                                      
                                                         T
                                                         l
                                                         j
                                                      
                                                   
                                                   /
                                                   δ
                                                   
                                                      D
                                                      i
                                                   
                                                
                                                
                                                   
                                                      
                                                         
                                                            E
                                                            ˜
                                                         
                                                         d
                                                      
                                                   
                                                   
                                                      
                                                         T
                                                         l
                                                         j
                                                      
                                                   
                                                
                                             
                                          
                                       
                                       
                                          
                                             
                                             +
                                             
                                                λ
                                                
                                                   N
                                                   ∗
                                                   
                                                      N
                                                      s
                                                   
                                                
                                             
                                             
                                                
                                                   ∑
                                                   
                                                      c
                                                      
                                                         
                                                            T
                                                            l
                                                         
                                                      
                                                      =
                                                      i
                                                   
                                                
                                                
                                             
                                             
                                             
                                                
                                                   ∑
                                                   
                                                      j
                                                      =
                                                      1
                                                   
                                                   
                                                      N
                                                      s
                                                   
                                                
                                                
                                             
                                             
                                             
                                                
                                                   ∑
                                                   
                                                      k
                                                      =
                                                      1
                                                   
                                                   K
                                                
                                                
                                             
                                             
                                             
                                                w
                                                l
                                                jk
                                             
                                             ∗
                                             
                                                
                                                   δ
                                                   
                                                      S
                                                      
                                                         β
                                                         2
                                                      
                                                   
                                                   
                                                      
                                                         M
                                                         
                                                            
                                                               T
                                                               l
                                                               j
                                                            
                                                            
                                                               T
                                                               l
                                                               jk
                                                            
                                                         
                                                      
                                                   
                                                
                                                
                                                   δM
                                                   
                                                      
                                                         T
                                                         l
                                                         j
                                                      
                                                      
                                                         T
                                                         l
                                                         jk
                                                      
                                                   
                                                
                                             
                                             ∗
                                             
                                                
                                                   δM
                                                   
                                                      
                                                         T
                                                         l
                                                         j
                                                      
                                                      
                                                         T
                                                         l
                                                         jk
                                                      
                                                   
                                                
                                                
                                                   δ
                                                   
                                                      D
                                                      i
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           where
                              
                                 (12)
                                 
                                    
                                       
                                          
                                             δ
                                             
                                                S
                                                
                                                   β
                                                   1
                                                
                                             
                                             
                                                
                                                   R
                                                   
                                                      
                                                         T
                                                         l
                                                         j
                                                      
                                                   
                                                   −
                                                   1
                                                
                                             
                                          
                                          
                                             δR
                                             
                                                
                                                   T
                                                   l
                                                   j
                                                
                                             
                                          
                                       
                                       =
                                       
                                          
                                             
                                                β
                                                1
                                             
                                             exp
                                             
                                                
                                                   
                                                      β
                                                      1
                                                   
                                                   
                                                      
                                                         1
                                                         −
                                                         R
                                                         
                                                            
                                                               T
                                                               l
                                                               j
                                                            
                                                         
                                                      
                                                   
                                                
                                             
                                          
                                          
                                             
                                                
                                                   1
                                                   +
                                                   exp
                                                   
                                                      
                                                         
                                                            β
                                                            1
                                                         
                                                         
                                                            
                                                               1
                                                               −
                                                               R
                                                               
                                                                  
                                                                     T
                                                                     l
                                                                     j
                                                                  
                                                               
                                                            
                                                         
                                                      
                                                   
                                                
                                             
                                             2
                                          
                                       
                                    
                                 
                              
                           
                           
                              
                                 (13)
                                 
                                    
                                       
                                          
                                             δ
                                             
                                                
                                                   
                                                      E
                                                      ˜
                                                   
                                                   c
                                                
                                             
                                             
                                                
                                                   T
                                                   l
                                                   j
                                                
                                             
                                          
                                          
                                             δ
                                             
                                                D
                                                i
                                             
                                          
                                       
                                       =
                                       2
                                       
                                          D
                                          i
                                       
                                       
                                          
                                             
                                                T
                                                l
                                                j
                                             
                                             −
                                             
                                                A
                                                c
                                             
                                             
                                                
                                                   
                                                      x
                                                      ^
                                                   
                                                   c
                                                   lj
                                                
                                             
                                          
                                       
                                       
                                          
                                             
                                                
                                                   T
                                                   l
                                                   j
                                                
                                                −
                                                
                                                   A
                                                   c
                                                
                                                
                                                   
                                                      
                                                         x
                                                         ^
                                                      
                                                      c
                                                      lj
                                                   
                                                
                                             
                                          
                                          T
                                       
                                       
                                       s
                                       .
                                       t
                                       .
                                       
                                       c
                                       =
                                       i
                                    
                                 
                              
                           
                           
                              
                                 (14)
                                 
                                    
                                       
                                          
                                             δ
                                             
                                                
                                                   
                                                      E
                                                      ˜
                                                   
                                                   d
                                                
                                             
                                             
                                                
                                                   T
                                                   l
                                                   j
                                                
                                             
                                          
                                          
                                             δ
                                             
                                                D
                                                i
                                             
                                          
                                       
                                       =
                                       2
                                       
                                          D
                                          i
                                       
                                       
                                          
                                             
                                                T
                                                l
                                                j
                                             
                                             −
                                             
                                                A
                                                d
                                             
                                             
                                                
                                                   
                                                      x
                                                      ^
                                                   
                                                   d
                                                   lj
                                                
                                             
                                          
                                       
                                       
                                          
                                             
                                                
                                                   T
                                                   l
                                                   j
                                                
                                                −
                                                
                                                   A
                                                   d
                                                
                                                
                                                   
                                                      
                                                         x
                                                         ^
                                                      
                                                      d
                                                      lj
                                                   
                                                
                                             
                                          
                                          T
                                       
                                       
                                       s
                                       .
                                       t
                                       .
                                       
                                       d
                                       =
                                       i
                                    
                                 
                              
                           
                           
                              
                                 (15)
                                 
                                    
                                       
                                          
                                             δ
                                             
                                                S
                                                
                                                   β
                                                   2
                                                
                                             
                                             
                                                
                                                   M
                                                   
                                                      
                                                         T
                                                         l
                                                         j
                                                      
                                                      
                                                         T
                                                         l
                                                         jk
                                                      
                                                   
                                                
                                             
                                          
                                          
                                             δM
                                             
                                                
                                                   T
                                                   l
                                                   j
                                                
                                                
                                                   T
                                                   l
                                                   jk
                                                
                                             
                                          
                                       
                                       =
                                       
                                          
                                             
                                                β
                                                2
                                             
                                             exp
                                             
                                                
                                                   −
                                                   
                                                      β
                                                      2
                                                   
                                                   M
                                                   
                                                      
                                                         T
                                                         l
                                                         j
                                                      
                                                      
                                                         T
                                                         l
                                                         jk
                                                      
                                                   
                                                
                                             
                                          
                                          
                                             
                                                
                                                   1
                                                   +
                                                   exp
                                                   
                                                      
                                                         −
                                                         
                                                            β
                                                            2
                                                         
                                                         M
                                                         
                                                            
                                                               T
                                                               l
                                                               j
                                                            
                                                            
                                                               T
                                                               l
                                                               jk
                                                            
                                                         
                                                      
                                                   
                                                
                                             
                                             2
                                          
                                       
                                    
                                 
                              
                           
                           
                              
                                 (16)
                                 
                                    
                                       
                                          
                                             δM
                                             
                                                
                                                   T
                                                   l
                                                   j
                                                
                                                
                                                   T
                                                   l
                                                   jk
                                                
                                             
                                          
                                          
                                             δ
                                             
                                                D
                                                i
                                             
                                          
                                       
                                       =
                                       2
                                       
                                          D
                                          c
                                       
                                       
                                          
                                             
                                                T
                                                l
                                                j
                                             
                                             −
                                             
                                                T
                                                l
                                                jk
                                             
                                          
                                       
                                       
                                          
                                             
                                                
                                                   T
                                                   l
                                                   j
                                                
                                                −
                                                
                                                   T
                                                   l
                                                   jk
                                                
                                             
                                          
                                          T
                                       
                                       
                                       s
                                       .
                                       t
                                       .
                                       
                                       c
                                       
                                          
                                             T
                                             l
                                          
                                       
                                       =
                                       i
                                       .
                                    
                                 
                              
                           
                        

Then the projection matrix for each class is updated in an iterative way by 
                              
                                 
                                    D
                                    i
                                 
                                 =
                                 
                                    D
                                    i
                                 
                                 −
                                 γ
                                 
                                    g
                                    
                                       D
                                       i
                                    
                                 
                              
                            until convergence or maximum iteration number is met, where γ is the learning rate.

Instead of using random projection to initialize the projection matrices, the projection matrices are initialized by directly optimizing the manifold regularization term, in order to prevent bad local minimum which might be caused by random initialization in the projection matrix learning. To make the calculation easier, we write the manifold regularization in a slightly different form of J
                              2 as follows:
                                 
                                    (17)
                                    
                                       
                                          
                                             
                                                mi
                                                
                                                   n
                                                   
                                                      
                                                         D
                                                         i
                                                      
                                                      
                                                         
                                                            i
                                                            =
                                                            1
                                                            ,
                                                            …
                                                            ,
                                                            C
                                                         
                                                      
                                                   
                                                
                                                
                                                   f
                                                   i
                                                
                                                =
                                                
                                                   
                                                      ∑
                                                      
                                                         c
                                                         
                                                            
                                                               T
                                                               l
                                                               j
                                                            
                                                         
                                                         =
                                                         i
                                                      
                                                   
                                                   
                                                
                                                
                                                
                                                   
                                                      ∑
                                                      
                                                         k
                                                         =
                                                         1
                                                      
                                                      K
                                                   
                                                   
                                                
                                                
                                                
                                                   w
                                                   l
                                                   jk
                                                
                                                ∥
                                                
                                                   D
                                                   i
                                                
                                                ∗
                                                
                                                   T
                                                   l
                                                   j
                                                
                                                −
                                                
                                                   D
                                                   i
                                                
                                                ∗
                                                
                                                   T
                                                   l
                                                   jk
                                                
                                                
                                                   ∥
                                                   2
                                                   2
                                                
                                             
                                          
                                          
                                             
                                                =
                                                tr
                                                (
                                                
                                                   D
                                                   i
                                                
                                                [
                                                
                                                   
                                                      ∑
                                                      
                                                         c
                                                         
                                                            
                                                               T
                                                               l
                                                               j
                                                            
                                                         
                                                         =
                                                         i
                                                      
                                                   
                                                   
                                                
                                                
                                                
                                                   
                                                      ∑
                                                      
                                                         k
                                                         =
                                                         1
                                                      
                                                      K
                                                   
                                                   
                                                
                                                
                                                
                                                   w
                                                   l
                                                   jk
                                                
                                                
                                                   
                                                      
                                                         T
                                                         l
                                                         j
                                                      
                                                      −
                                                      
                                                         T
                                                         l
                                                         jk
                                                      
                                                   
                                                
                                                (
                                                
                                                   T
                                                   l
                                                   j
                                                
                                                −
                                                
                                                   T
                                                   l
                                                   jk
                                                
                                                )
                                                
                                                   
                                                   T
                                                
                                                ]
                                                
                                                   D
                                                   i
                                                   T
                                                
                                                )
                                             
                                          
                                          
                                             
                                                =
                                                tr
                                                
                                                   
                                                      
                                                         D
                                                         i
                                                      
                                                      H
                                                      
                                                         D
                                                         i
                                                         T
                                                      
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                              where 
                                 
                                    H
                                    =
                                    
                                       
                                          ∑
                                          
                                             c
                                             
                                                
                                                   T
                                                   l
                                                   j
                                                
                                             
                                             =
                                             i
                                          
                                       
                                       
                                    
                                    
                                    
                                       
                                          ∑
                                          
                                             k
                                             =
                                             1
                                          
                                          K
                                       
                                       
                                    
                                    
                                    
                                       w
                                       l
                                       jk
                                    
                                    
                                       
                                          
                                             T
                                             l
                                             j
                                          
                                          −
                                          
                                             T
                                             l
                                             jk
                                          
                                       
                                    
                                    
                                       
                                          
                                             
                                                T
                                                l
                                                j
                                             
                                             −
                                             
                                                T
                                                l
                                                jk
                                             
                                          
                                       
                                       T
                                    
                                 
                              . Supposing 
                                 
                                    
                                       D
                                       i
                                    
                                    ∈
                                    
                                       R
                                       
                                          
                                             N
                                             d
                                          
                                          ×
                                          
                                             N
                                             f
                                          
                                       
                                    
                                 
                              , the optimized solution could be achieved by concatenating the eigenvectors corresponding to the least N
                              
                                 d
                               eigenvalues of H, which then becomes the projection matrix initialization of class i.

We present the whole sparse representation based multi-manifold analysis method for projection matrix learning in Algorithm 1.
                                 Algorithm 1
                                 Sparse representation based multi-manifold analysis.
                                       
                                          
                                       
                                    
                                 

Given a test image y, we first divide it into several subimages following the same way as to the training images, and denote all the subimages as {y
                        
                           j
                        ,
                        j
                        =1,…,
                        N
                        
                           s
                        }, where N
                        
                           s
                         is the number of subimages generated. For each subimage y
                        
                           j
                        , we calculate its sparse code on the dictionary of each class by solving Eq. (2) as 
                           
                              
                                 
                                    x
                                    ^
                                 
                                 j
                                 i
                              
                           
                        , and label it using the projection matrix based class-SRC method as follows:
                           
                              (18)
                              
                                 
                                    Label
                                    
                                       
                                          y
                                          j
                                       
                                    
                                    =
                                    argmi
                                    
                                       n
                                       i
                                    
                                    
                                       
                                          ∥
                                          
                                             D
                                             i
                                          
                                          
                                             y
                                             j
                                          
                                          −
                                          
                                             D
                                             i
                                          
                                          
                                             A
                                             i
                                          
                                          
                                             
                                                
                                                   x
                                                   ^
                                                
                                                j
                                                i
                                             
                                          
                                          
                                             ∥
                                             2
                                             2
                                          
                                          ,
                                          i
                                          =
                                          1
                                          ,
                                          …
                                          ,
                                          C
                                       
                                    
                                    .
                                 
                              
                           
                        
                     

The image y is classified to the class which has been selected as a label to its subimages for the most times via a plurality voting strategy:
                           
                              (19)
                              
                                 
                                    Label
                                    
                                       y
                                    
                                    =
                                    argma
                                    
                                       x
                                       i
                                    
                                    
                                       
                                          
                                             
                                                ∑
                                                
                                                   j
                                                   =
                                                   1
                                                
                                                
                                                   N
                                                   s
                                                
                                             
                                             
                                          
                                          
                                          
                                             
                                                Label
                                                
                                                   
                                                      y
                                                      j
                                                   
                                                
                                                =
                                                =
                                                i
                                             
                                          
                                          ,
                                          i
                                          =
                                          1
                                          ,
                                          …
                                          ,
                                          C
                                       
                                    
                                    .
                                 
                              
                           
                        
                     

The proposed method for texture classification from few training images is concluded in Algorithm 2.
                           Algorithm 2
                           Texture classification from few training images.


                              Input: training images {T
                              
                                 l
                              ,
                              l
                              =1,…,
                              N}, a test image y.
                                 
                                    1:
                                    
                                       New training samples generation:
                                    

Divide each training image into a set of subimages using the scale and spatial pyramid technique described in Section 2.1 as the new training samples, denoted as {T
                                       
                                          l
                                       
                                       
                                          j
                                       ,
                                       l
                                       =1,…,
                                       N,
                                       j
                                       =1,…
                                       N
                                       
                                          s
                                       };


                                       Dictionary learning of sparse representation:
                                    

Utilize the online dictionary learning approach to learn a dictionary from the training samples of each class respectively, which construct a set of class-specific dictionaries {A
                                       
                                          i
                                       ,
                                       i
                                       =1,…,
                                       C};


                                       Projection matrix learning:
                                    

Apply Algorithm 1 to learn a set of class-specific projection matrices from the training samples, denoted as {D
                                       
                                          i
                                       ,
                                       i
                                       =1,…,
                                       C};


                                       Classification:
                                    

Divide y into several subimages {y
                                       
                                          i
                                       ,
                                       i
                                       =1,…,
                                       N
                                       
                                          s
                                       } following the same way as to the training images, and label each subimage using the projection matrix based class-SRC method via Eq. (18). The test image y is finally classified by a plurality voting approach according to Eq. (19).


                                       Output: the final classification result: Label(y).

@&#EXPERIMENTS@&#

To demonstrate the effectiveness of the proposed method, we conducted a series of experiments by comparing it with some state-of-the-art algorithms for texture classification on several benchmark databases.

Three widely used benchmark databases are selected to evaluate the effectiveness of the proposed method, i.e., CUReT [25], UIUC [18], and KTHTIPS2 [26].

The CUReT database contains 61 classes of textures, where each class is composed of 205 images captured with varying viewing and illumination parameters. In order to directly compare with the works of [7] and [13], we use the same subset of images with them, where 92 images are selected from each class. Fig. 1 shows some examples of the images in the CUReT database. Following [7], we selected 20 and the whole 61 classes from the database respectively to construct two datasets, i.e., CUReT20 and CUReTFull, for experiments.

The UIUC database contains 25 texture classes with 40 sample images in each class, which are captured at different scales and from different viewpoints with a few non-rigid deformations, as shown in Fig. 5
                        . We used the whole UIUC database as one dataset for experiments.

The KTHTIPS2 database comprises 11 texture classes, containing 4 different samples in each class. Each sample is imaged under nine scales, four different illumination conditions and three different poses, leading to a total of 108 images for each texture sample. Thus, it is very challenging for the texture classification method evaluation. Some sample images of KTHTIPS2 are shown in Fig. 6
                        .

In the experiments, we will randomly select certain number of images from arbitrary samples of each class for training and use the left for test, which is very challenging.

For the image representation, we utilize a Local Pattern Co-occurrence Matrix (LPCM) descriptor [46] to describe each training or test sample. The LPCM descriptor utilizes the Local Binary Pattern (LBP) operator [10] to extract a local pattern from each pixel of an image, and then applies the Gray-level Co-occurrence Matrix (GLCM) descriptor [47] to retrieve the co-occurrence matrix of the local patterns as feature. The LPCM descriptor inherits the advantages of both LBP and GLCM. It is invariant to the rotation and gray-scale change, and takes into account both the occurrence and co-occurrence information of the micro-structures of images. Thus, LPCM is very useful to describe the textural images since most textures could be regarded as a spatial arrangement of a set of micro-structures. Parameters of the LPCM descriptor are selected according to the suggestion in [46], based on which the LPCM descriptor is sized 55.

For the new training sample generation from the scale and spatial pyramid, in order to keep the size of the generated samples big enough we set the number of scale levels as 2 and number of spatial levels as 3, and less number of spatial levels is applied in higher scale levels, as shown in Fig. 4.

In the sparse representation based multi-manifold learning, there are totally nine parameters to be decided. According to the common settings of the number of Nearest Neighbours for manifold regularization in [43,44], we also set K as 5 in this paper. As observed, the sparse representation based multi-manifold learning (Algorithm 1) usually converges in 300 iterations, thus we set the maximum iteration number T as 300. For the remaining parameters, we chose each of them from an empirical range of values through cross validation on the training set, where all the training samples are equally divided into five subsets and we alternatively used one subset for training and the rest four for validation. The slack variable α for sparse representation is chosen from the range of [0.05,0.3] with step 0.05, while we select another slack variable λ for compromising the discriminative term and generalized term from the list [0.1,0.5,1,2,5]. We adjust the learning rate γ among [0.01,0.1,0.2,0.3,0.5,1]. The parameters for the two sigmoid functions — β
                        1 and β
                        2 are selected from the list {1,5,10,50,100,500}. In addition, we make the dictionary sizes of the sparse representation (number of atoms in the dictionary) for each class to be the same, and also the dimensions of the projection matrices of each class. The dictionary size and projected dimension of each class are denoted as N
                        
                           b
                         and N
                        
                           d
                        , and we empirically chose them from the list {20,30,40} respectively. One thing we need to clarify is that normally the dictionary size of a sparse representation is larger than the feature dimension, which leads to an overcomplete dictionary. However, since in this paper we learn a dictionary for each class, a dictionary with a slightly smaller size than the feature dimension is still overcomplete for the samples inside the same class. Another thing worthy to notice is that though there are so many parameters needed to be tuned, since most of these parameters are independent (or weakly dependent) with each other we could tune one parameter at a time while keeping the other parameters fixed. Based on the one-parameter-once procedure all the parameters could be tuned efficiently. In addition, except N
                        
                           b
                         and N
                        
                           d
                         all the parameters are only related to the algorithm but are dataset independent, thus they do not need to be adjusted across different datasets. The final settings of the parameters are shown in Table 1
                        .

Denoting the proposed method as SR-MMA, extensive experiments were conducted to evaluate the effectiveness of SR-MMA by comparing it with the other state-of-the-art approaches.

In this work, we chose three of the most popular texton-based texture classification methods, i.e., VZ_MR8 [7], VZ_Joint [13], and RP [19], to be compared with the proposed approach. These three methods could achieve state-of-the-art classification accuracies on the four benchmark datasets when given enough training images. VZ_MR8 is one of the most popular texton-based approaches using filter bank responses as local features. VZ_MR8 utilizes the MR8 filter bank which consists of 36 directional filters (an edge filter and a bar filter, at 6 orientations and 3 scales each), a Gaussian filter and a Laplacian of Gaussian filter to retrieve the features. By measuring the maximum response across orientations, VZ_MR8 selected 8 out of the 38 responses on each pixel as the local features. VZ_Joint is another texton-based method that extracts an image patch from around each pixel and utilizes the raw pixel values of the image patch as the local features. The RP approach retrieves a random feature from each image patch through random projection as a local feature vector.

Before comparing these approaches with the proposed method SR-MMA we did some experiments by changing the number of training images for these three methods to classify the textural images in the four datasets, i.e., CUReT, CUReT20, UIUC and KTHTIPS2, and got the results in Fig. 7
                           . As we can see from the figure, when there are enough training images the classification accuracies of the three methods on all the four datasets are quite high, while if the training number decreases to lower than 10 the performance considerably deteriorate.

By selecting a small number of images from each class for training we compared the proposed method with the three selected approaches on all the four datasets, with results shown in Tables 2, 3, 4, and 5
                           
                           
                           
                           . From the comparison in Fig. 8
                           , it can be seen that the proposed method could achieve much higher classification accuracies than all the three approaches on UIUC, CUReT20 and KTHTIPS2 with arbitrary training number, and surprisingly, the performance of the proposed method using half the training number of the comparative methods is still comparable or even superior to theirs. For example, on CUReT20 the proposed method could get 89.27% of the classification accuracy with 6 training images which is comparable to those achieved by the three approaches with 12 training images, and on KTHTIPS2 the classification accuracy of the proposed method reached 70.37% by using 6 training images which is even better than the three approaches' using 18 training images. The advantage of the proposed method is especially manifest on the UIUC dataset, where the performance of our method with 3 training images per class is even comparable to those of the three approaches with 10 training images per class, and the 84.25% classification accuracy for 3 training images per class is also quite acceptable. The reason for the proposed method to achieve such good results on UIUC might be because the size of images in UIUC is quite large the new training samples generated by dividing the images into subimages are still big enough to contain enough discriminative information.

However, on the CUReT dataset we could only achieve comparative results with the three approaches. We attribute the “unsuccess” to two possible reasons: firstly the number of texture classes in CUReT is 61 which is too large compared to the small number of training images we adopted; secondly, some of the textures in the dataset are the same materials, e.g., textures 29, 30, 31, and 32 are the same materials as textures 2, 11, 12, and 14, respectively, but captured at different scales, which makes them hard for the proposed method to discriminate because of the incorporation of the scale invariance property in the proposed method.

We also compared the computational time of the four methods. For the feature extraction, though the proposed SR-MMA method needs to generate the spatial pyramid, since it has no vector quantization process, its feature extraction takes much less time than the other three. In a computer with a 3.4GHz i7-2600 CPU and an 8GB RAM, for the CUReT dataset it took 0.88s, 7.15s and 5.45s on average to extract the VZ_MR8, VZ_Joint and RP feature from one image respectively, however the time needed to extract the spatial pyramid LPCM feature of SR-MMA was just 0.19s. Compared with feature extraction, the time cost on classification could nearly be eliminated. Thus, it can be seen that the proposed method is also much more time-efficient than the three state-of-the-art methods.

To demonstrate the effectiveness of the sparse representation based multi-manifold analysis, we also compared the proposed method with the class-SRC approach and another method that utilizes the LPCM descriptors of the generated subimages as feature and directly classifies the subimages of a test image by the Nearest Neighbour classifier, which we denote as LPCM-NN. Similar to the proposed method, LPCM-NN finally classifies the test image based on the plurality voting strategy as shown in Eq. (19). In order not to make the paper crowded we only show the results on the UIUC dataset here. From the results shown in Table 6
                            we could see that class-SRC got better results than LPCM-NN with all the different numbers of training images, which demonstrates that SRC can provide a more compact model than the Nearest Neighbour based texture classification. Furthermore, the proposed method achieved about 5% higher classification accuracies than class-SRC, suggesting that the multi-manifold analysis based projection matrix learning could considerably improve the texture classification performance.

Regarding the projection matrix initialization, we compared the results of utilizing the commonly used random projection and the proposed method for initialization of the projection matrices on the UIUC dataset. Experimental results show comparable classification accuracies for the two methods, as can be seen in Table 7
                           . However, using the random projection for initialization needs about 1000 rounds to converge, which is much more than that of the proposed method (300 rounds). Using the proposed method for projection matrix initialization nearly takes no time (complete in several seconds), while one round of iteration needs more than one second. Thus, the proposed projection matrix initialization method saves a large amount of computation.

A natural concern about the new training sample generation, which can also be called training set expansion, is how affective and efficient it is on changing the distribution of the training set. Since the distribution of a texture is usually unknown in real world, it is impossible to directly compute the efficiency change after expanding the training set. However, we are able to demonstrate in experiments that the new training sample generation is beneficial for the proposed method to achieve a higher classification accuracy.

We designed a method, which was denoted as ori-LPCM-NN, by utilizing the LPCM descriptor to extract features from the original training and test images directly without training set expansion, and then applied the Nearest Neighbour classifier to classify the test images. We compared ori-LPCM-NN with the LPCM-NN method introduced in Section 3.3.2 and SR-MMA on the UIUC dataset, with the results shown in Table 8
                           . From the comparison it can be seen that by applying the training set expansion the classification accuracy has been greatly improved.

One side-effect of the training set expansion is the redundancy it brings to the new training set which could slow down the model learning and cause some degree of time waste. However, since the purpose of sparse representation is to represent a signal on a redundant (over-complete) dictionary, the redundancy of training samples does not affect the performance of the proposed method much. In addition, part of the redundancy could be eliminated through the dictionary learning process.

@&#CONCLUSION@&#

This paper addressed a real-world problem of texture classification from a few training images by developing a novel framework which comprises the following merits:
                        
                           1.
                           By utilizing the repetition property of textures, a scale and spatial pyramid is adopted to divide a textural image into many subimages, where each subimage represents one aspect of the texture. Using these subimages for training instead of the original image is beneficial for better generalization of the model since more variations of the texture are incorporated.

The sparse representation is adopted to provide a more compact model to represent the textural images. Because textures are sparse, the sparse representation brings many advantages to modelling the textural images.

A novel multi-manifold analysis method which considers both the discrimination and generalization of a model is employed to learn a projection matrix for each texture class. Through the multi-manifold analysis, the model not only gains the discriminative power on classification, but also limits the overfitting effect, resulting in higher generalization capability.

Experimental results show that the proposed method could achieve much better results than the three state-of-the-art texture classification approaches — VZ_MR8, VZ_Joint and RP with arbitrary small number of training images on three benchmark datasets, and surprisingly by just using half the number of training images of the three approaches the proposed method could still achieve comparable or even superior results. However, the advantage of the proposed method is not evident when applied on large datasets such as CUReT. Nevertheless, it is anticipated that the success in this little studied field will potentially extend the proposed framework to many new areas where it is only feasible to obtain a small number of training samples.

@&#REFERENCES@&#

