@&#MAIN-TITLE@&#Keyword spotting in unconstrained handwritten Chinese documents using contextual word model

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           We propose a contextual word model for keyword spotting from handwritten Chinese documents.


                        
                        
                           
                           The contextual word model combines character classifier, geometric and linguistic contexts.


                        
                        
                           
                           Promising results were obtained on a large handwriting database CASIA-HWDB.


                        
                        
                           
                           The geometric and linguistic contexts improve the spotting performance significantly.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Keyword spotting

Chinese handwritten documents

Word similarity

Contextual word model

@&#ABSTRACT@&#


               
               
                  This paper proposes a method for keyword spotting in off-line Chinese handwritten documents using a contextual word model, which measures the similarity between the query word and every candidate word in the document by combining a character classifier and the geometric context as well as linguistic context. The geometric context model characterizes the single-character likeliness and between-character relationship. The linguistic model utilizes the dependency of the word with the external adjacent characters. The combining weights are optimized on training documents. Experiments on a large handwriting database CASIA-HWDB demonstrate the effectiveness of the proposed method and justify the benefits of geometric and linguistic contexts. Compared to transcription-based text search, the proposed method can provide higher recall rate, and for spotting words of four characters, the proposed method provides both higher precision and recall rate.
               
            

@&#INTRODUCTION@&#

Due to the huge volume of existing documents and the ever increasing new documents in daily life, the need of efficient document retrieval techniques is prominent. On scanning documents into digital images, character recognition and retrieval techniques can help efficiently sort the documents, summarize, find documents and locate regions of interest. Among the techniques of document retrieval [1,2], keyword spotting finds relevant documents containing the queried words and locates the word instances for further investigation. For printed documents of degraded image or handwritten documents, keyword spotting is still an unsolved problem due to the difficulty of word segmentation and recognition. Traditional character and word recognition techniques do not give sufficiently high accuracy on these documents, such that text search based on transcription (text line recognition) does not perform satisfactorily. For example, a state-of-the-art handwriting recognizer reports word recognition rate of 79.7% on online data and 74.1% on off-line data [3].

Compared to transcription-based text search, keyword spotting has the advantage that the information related to the query word can be exploited adequately to improve the recall rate of retrieval. This is particularly important for the less frequently used words, which are usually recognized less accurately by traditional recognizers. As a two-class (binary) problem, keyword spotting can easily get variable points of precision–recall tradeoff by setting variable decision thresholds. Transcription-based search is less flexible in this respect, particularly, when the recognition accuracy is low. The recall rate of transcription-based search can be improved by giving multiple alternative recognition results, but this requires a large number of alternatives for guaranteeing high recall while sacrificing the precision.

Depending on the format of query, keyword spotting techniques can be grouped into two categories: query-by-example (QBE) and query-by-string (QBS). In QBE, the user manually locates a word instance in the document and uses it as a template for locating the other instances. This method works well only for documents of a specific style (imaging condition, font or handwriting style). QBS is more convenient for the users to enter the query by keyboard, and is flexible for spotting words of arbitrary style. By this method, the character/word model needs to be trained with a large number of samples. Previous works have contributed largely to efficient word template matching for example-based spotting [4–10] and character/word model learning and model inference for text-query-based spotting [11–17]. To avoid word segmentation errors, some methods spot words from the document without layout analysis [10,18], while some perform text line-based spotting without explicit word segmentation [15–17,19].

The retrieval and keyword spotting of Chinese [18,20,21] and Japanese documents [22–26] have some characteristics different from that of English documents. Chinese/Japanese documents have no difference between inter-character and inter-word spaces. Therefore, the recognition and retrieval methods of Chinese documents mostly adopt character models and perform character/word segmentation during recognition/matching. It is also complicated by the large number of character classes (over 5000 classes are frequently used). To alleviate the search complexity of recognition, a character classifier is usually used to assign a small number of high confidence classes to the input character pattern [27].

Oriented for text query-based retrieval, this paper proposes a text line-based keyword spotting method for off-line handwritten Chinese documents using a contextual word model, which combines the character classification scores on candidate character patterns, the geometric relationship and linguistic dependency between characters. Candidate words are generated by concatenating consecutive primitive segments after character over-segmentation. By training the character classifier on large number of samples, the proposed method yields promising performance on multi-writer handwritten documents. The benefits of the geometric and linguistic contexts, especially those between the word and external characters, are justified. When retrieving four-character words, the proposed method provides both higher precision and recall rates than transcription-based text search. This paper is an extension to our previous conference paper [28] by adding external context dependency, optimizing the combing weights, performing evaluation on a larger dataset and comparing with transcription-based search.

The rest of this paper is organized as follows. Section 2 briefly reviews the related works. Section 3 gives an overview of our Chinese handwritten keyword spotting system. Section 4 describes the contextual word model and Section 5 describes the word model matching procedure for spotting. Experimental results are presented in Section 6 and concluding remarks are offered in Section 7.

@&#RELATED WORKS@&#

In many works of example-based query, the query image (template) and the candidate word image have been represented as sequences of features and matched by dynamic programming (DP), also called as dynamic time warping (DTW) [4], which is noise and deformation tolerant. Lopresti and Tomkins show that the DP can be applied to the matching of multiple levels of representation [29]. For DTW matching, a word image is usually represented as a sequence of primitive segments (components), sampled projections and upper/lower profiles [4], or features extracted from sliding windows or segments.

Some researchers have sought for fast feature extraction and matching techniques for printed document retrieval. Zhang et al. [5] showed that using gradient-based binary features in word matching can provide higher accuracy and much faster speed than DTW matching of profile features. Kesidis et al. [6] calculate the Euclidean distance between word images on extracting features of pixel density of zones and profile projections, and refine the search procedure by user feedback. Some methods represent the word or document images as bags of shape codes [7,8]. This approach can apply to the retrieval of word, phrase or whole document, and accept either image or text query, unlike that some methods need to synthesize query images from texts [10,30]. Lu et al. [8] code the word features of ascenders/descenders, character holes and water reservoirs, and calculate the similarity between vectors of frequencies of shape codes. Khurshid et al. [9] represent a word image as a sequence of sub-patterns, each sub-pattern as a sequence of feature vectors, and calculate a segmentation-driven edit (SDE) distance between words. Leydier et al. [10] proposed a text search method using differential features and cohesive elastic matching based on zones of interest.

In keyword spotting using statistical models, Rath et al. [11] learn a probabilistic distribution about word image features for each keyword. Kuo and Aggazzi [12] learn two pseudo 2-D HMMs for each keyword, representing the actual keyword and all the other extraneous words, respectively. Rodriguez-Serrano and Perronnin [13] train word models (continuous HMM and semi-continuous HMM) using few examples per keyword, and normalize the word score against the background model. Howe et al. [14] train letter detectors using joint boosting with gradient histogram feature, and use ensemble of HMMs for keyword spotting. Cao et al. [15] calculate keyword similarity by combining character recognition scores and integrating the word segmentation probabilities so as to overcome imperfect word segmentation. Fischer et al. [16] calculate the keyword similarity using character HMMs. Frinken et al. [17] use a recurrent neural network to output a sequence of letter probabilities on a text line image, and infer the keyword probability on the sequence. These character model-based methods enable out-of-vocabulary (OOV) word spotting and spotting from text lines without explicit word segmentation.

Keyword spotting methods for Chinese/Japanese documents [22–26] commonly use character models because of the large number of character classes and the inability of explicit word segmentation. On over-segmenting the text line into primitive segments (each being a character or a part of a character), candidate characters are generated by concatenating primitive segments and are classified by a character classifier for assigning classes of high probability. The query keyword is searched from the lattice of candidate characters and classes. The character classifier is desired to have both high classification accuracy and resistance to noise and background patterns. A one-versus-all classifier training strategy [31] is shown to provide this property and has been successfully applied to Chinese handwritten keyword spotting [32].

The proposed method in this paper follows the strategy of over-segmentation and character classification-based spotting from text line image. To improve the spotting performance, we combine the classification scores and the geometric and linguistic contexts between characters within the word and out of the word, and the combining weights are optimized on labeled data of text lines.


                     Fig. 1
                      shows the block diagram of our system for keyword spotting in handwritten Chinese documents. First, the document image is segmented into text lines using a graph-based clustering algorithm [35]. Each line is over-segmented into primitive segments using the algorithm of [27]. Candidate characters generated by concatenating consecutive segments form a candidate segmentation lattice (Fig. 2
                     ). For keyword spotting, each segment in the text line is hypothesized as the start of the query word, and the constituent characters of the word are matched with candidate characters sequentially. A complete match of the word with similarity greater than a threshold gives a spotted word instance. If a partial word match is given at the end of a text line, the partial match is extended to the start of the succeeding text line. After searching through the whole document, if any two or multiple spotted instances have overlapping segments, only the one of maximum similarity is retained.

For matching the query word with a sequence of primitive segments at a specific start, we use a character-synchronous beam search algorithm [27]. An illustrative example of the search procedure for a query word is shown in Fig. 3
                     . Starting with a primitive segment, the candidate characters are matched with the first character in the query word with the similarity given by a character classifier. A number of candidate characters with maximum similarity are retained, and their succeeding segments form new candidate characters to match with the second character in the query word. This continues until the last character of the query word is matched or the word matching is terminated due to the low similarity of partial match. In Fig. 3, the path of thick line gives a complete match of word. Fig. 4
                      shows the document with the query word spotted.

The above procedure is for spotting keyword from one document. When searching a collection of multiple documents, the documents are processed one by one. For fast search of a large collection of documents, the documents can be processed off-line with the keywords in a lexicon (containing a large number of words of possible use) to be spotted. The locations of the spotted words are stored in index files for online search. This is an implementation issue for practical application and needs no detailed description in this paper. Instead, this paper focuses on the key issue of word similarity calculation.

The key issue of word matching is to calculate the similarity between a query word W
                     =
                     c
                     1
                     ⋯
                     c
                     
                        L
                      and a sequence of primitive segments 〈s
                     1
                     ⋯
                     s
                     
                        n
                     〉, which is segmented into a sequence of candidate character patterns X
                     =
                     x
                     1
                     ⋯
                     x
                     
                        m
                      (each pattern is represented as a feature vector). The similarity measure is designed such that true positives of query word have high scores and the negatives have low scores. For measuring the word similarity, take the logarithm of the posterior probability p(W|X):
                        
                           (1)
                           
                              
                                 logp
                                 
                                    
                                       W
                                       
                                          X
                                       
                                    
                                 
                                 =
                                 logp
                                 
                                    
                                       X
                                       
                                          W
                                       
                                    
                                 
                                 +
                                 logp
                                 
                                    W
                                 
                                 −
                                 logp
                                 
                                    X
                                 
                              
                           
                        
                     where logp(W|X) is modeled by the character classifier, logp(W) is the score of language model, but when the query word is given, the language score is a constant and can be ignored. logp(X) can be seen as the score of geometric context, measuring the likelihood of character segmentation and between-character geometric relationship. The character classifier, the geometric model and the context fusion model are detailed in the following.

During keyword search, each candidate character pattern is classified to assign a few classes. The character classifier is desired to give high score to the true class of the input pattern and low scores to all the other classes. The recently proposed one-versus-all prototype classifier, with prototypes learned by optimizing a one-versus-all (OVA) objective [31], is shown to perform well for multi-class pattern retrieval [32]. In the OVA trained prototype classifier, each prototype is attached with a threshold of distance to measure the probability of accept/reject input pattern, and all the prototype vectors and thresholds are trained to optimize a one-versus-all cross-entropy objective. This is different from most other prototype learning algorithms (e.g. [33]) that aim to optimize a multi-class classification objective disregarding the rejection of outlier patterns. We use this OVA prototype classifier for scoring character similarity in our keyword spotting system. We also use a one-versus-all linear SVM (support vector machine) classifier [34]. Nonlinear SVM has very high complexity of training and classification, and thus is not used in our case of large category set classification.

Besides classifier design, the preprocessing and feature extraction of character pattern are also important. We use a state-of-the-art feature extraction technique in handwritten Chinese character recognition: normalization-cooperated gradient feature extraction [36] combined with a pseudo two-dimensional shape normalization method, and line density projection interpolation [37]. By 8-direction gradient decomposition and 8×8 sampling, the resulting 512-D feature vector is reduced to 160-D by Fisher linear discriminant analysis (FLDA).

Since the classifier learning algorithms are not the contribution of this work, they are not described in details here. The prototype classifier has one or multiple prototype vectors for each class, which are optimized on a training dataset by stochastic gradient descent. For classification, the test pattern is classified to the class of the nearest prototype in squared Euclidean distance. The discriminant function of one class is the minus of the distance from the test pattern to the nearest prototype of the class. More details can be found in [31]. The one-versus-all linear SVM classifier has similar run-time complexity with a prototype classifier. It gives a linear discriminant score to each class, and the test pattern is classified to the class of maximum discriminant score. For training the linear SVM, we use the successive over-relaxation (SOR) algorithm of [38], which is efficient for training with large sample set.

The character classifier utilizes the character shape information after position normalization and size normalization. The size and position of character in the text line, and the geometric relationship between adjacent characters, are important cues for judging the legibility of characters. We call these as geometric features and use statistical models to measure the geometric likelihood. The statistical geometric models are dichotomized into single-character and between-character ones, and into class-dependent and class-independent ones [39]. We follow the scheme of [39] to cluster the character classes into six super-classes, and estimate six Gaussian models for class-dependent single-character geometry. The logarithm of Gaussian density, also called as quadratic discriminant function (QDF), is taken as the geometric score. The class-dependent between-character geometry is modeled as 36 Gaussian densities for 36 pairs of super-classes. The class-independent single-character and between-character geometric scores are measured using binary linear SVM, to evaluate the legibility of a candidate character or a pair of candidate characters. The details of geometric features can be found in [39].

Unlike statistical language model that gives probabilities of character/word n-grams directly, the character classifier or geometric models (two-class or multi-class classifiers) output discriminant scores that are not probabilities. For regulating the scales of scores and facilitating fusion in the contextual word model, the classifier outputs can be transformed to probabilities using the logistic (sigmoidal) function:
                           
                              (2)
                              
                                 
                                    P
                                    
                                       
                                          
                                             c
                                             i
                                          
                                          
                                             x
                                          
                                       
                                    
                                    =
                                    
                                       1
                                       
                                          1
                                          +
                                          exp
                                          
                                             
                                                −
                                                
                                                   a
                                                   i
                                                
                                                
                                                   d
                                                   i
                                                
                                                
                                                   x
                                                
                                                +
                                                
                                                   b
                                                   i
                                                
                                             
                                          
                                       
                                    
                                    ,
                                 
                              
                           
                        where d
                        
                           i
                        (x) is the discriminant score (classifier output) for class ci
                        . The parameters {a
                        
                           i
                        ,b
                        
                           i
                        } are estimated by optimizing a log-likelihood (cross-entropy) objective on a validation dataset [40].

After confidence transformation (CT), the logarithm logP(c
                        
                           i
                        |x) is used as a new classification/geometric score for the class ci
                        . Either the original classifier output d
                        
                           i
                        (x) (before CT) or the new score logP(c
                        
                           i
                        |x) is fused in the contextual word model.

Given a query word W
                        =
                        c
                        1
                        ⋯
                        c
                        
                           L
                         and a sub-sequence of primitive segments 〈s
                        
                           p
                        
                        ⋯
                        s
                        
                           q
                        〉 as a candidate word instance, we measure the word similarity by combining the character classification score and geometric scores. We assume that each query character ci
                         is matched with a candidate character formed by concatenating ki
                         segments 
                           
                              
                                 
                                    s
                                    j
                                 
                                 ⋯
                                 
                                    s
                                    
                                       j
                                       +
                                       
                                          k
                                          i
                                       
                                       −
                                       1
                                    
                                 
                              
                           
                        . For scoring a single character, we combine the classification score and single-character geometry:
                           
                              (3)
                              
                                 
                                    
                                       g
                                       c
                                    
                                    
                                       
                                          
                                             c
                                             i
                                          
                                          ,
                                          
                                             s
                                             j
                                          
                                          ⋯
                                          
                                             s
                                             
                                                j
                                                +
                                                
                                                   k
                                                   i
                                                
                                                −
                                                1
                                             
                                          
                                       
                                    
                                    =
                                    
                                       
                                          ∑
                                          
                                             h
                                             =
                                             0
                                          
                                          2
                                       
                                       
                                          
                                             α
                                             h
                                          
                                          ⋅
                                          
                                             f
                                             h
                                          
                                          −
                                          
                                             τ
                                             
                                                c
                                                i
                                             
                                          
                                       
                                    
                                    ,
                                 
                              
                           
                        where αh
                        , and h
                        =0,1,2, are the combining weights. f
                        0, f
                        1 and f
                        2 represent the character classification score (discriminant function), class-dependent and class-independent single-character geometric scores, respectively. They are either the classifier output or the logarithm of transformed probability. The parameter 
                           
                              τ
                              
                                 c
                                 i
                              
                           
                         can be either class-dependent or class-independent.

For measuring the word similarity, we combine the character classification score and four geometric scores:
                           
                              (4)
                              
                                 
                                    
                                       g
                                       W
                                    
                                    
                                       A
                                    
                                    =
                                    
                                       1
                                       L
                                    
                                    
                                       
                                          ∑
                                          
                                             h
                                             =
                                             0
                                          
                                          4
                                       
                                       
                                          
                                             α
                                             h
                                          
                                          ⋅
                                          
                                             F
                                             h
                                          
                                          −
                                          
                                             τ
                                             W
                                          
                                       
                                    
                                    ,
                                 
                              
                           
                        where 
                           
                              A
                              =
                              
                                 
                                    
                                       
                                          c
                                          1
                                       
                                       ;
                                       
                                          s
                                          p
                                       
                                       ⋯
                                       
                                          s
                                          
                                             p
                                             +
                                             
                                                k
                                                1
                                             
                                             −
                                             1
                                          
                                       
                                    
                                 
                                 ⋯
                                 
                                    
                                       
                                          c
                                          L
                                       
                                       ;
                                       
                                          s
                                          
                                             q
                                             −
                                             
                                                k
                                                L
                                             
                                             +
                                             1
                                          
                                       
                                       ⋯
                                       
                                          s
                                          q
                                       
                                    
                                 
                              
                           
                         denotes the alignment of the sub-sequence 〈s
                        
                           p
                        
                        ⋯
                        s
                        
                           q
                        〉 with the query word W. αh
                        , h
                        =0,⋯,4, are the combining weights. F
                        0 is the sum of character classification scores. Fh
                        , h
                        =1,⋯,4, are the sums of single-character geometric scores and between-character geometric scores, respectively. Specifically, the sums of scores are
                           
                              (5)
                              
                                 
                                    
                                       
                                          
                                             F
                                             h
                                          
                                          =
                                          
                                             
                                                ∑
                                                
                                                   i
                                                   =
                                                   1
                                                
                                                L
                                             
                                             
                                                
                                                   f
                                                   h
                                                
                                                
                                                   
                                                      
                                                         c
                                                         i
                                                      
                                                      ,
                                                      
                                                         s
                                                         
                                                            j
                                                            i
                                                         
                                                      
                                                      ⋯
                                                      
                                                         s
                                                         
                                                            
                                                               j
                                                               i
                                                            
                                                            +
                                                            
                                                               k
                                                               i
                                                            
                                                            −
                                                            1
                                                         
                                                      
                                                   
                                                
                                             
                                          
                                          ,
                                       
                                       
                                          h
                                          =
                                          0
                                          ,
                                          1
                                          ,
                                       
                                    
                                 
                              
                           
                        
                        
                           
                              (6)
                              
                                 
                                    
                                       F
                                       2
                                    
                                    =
                                    
                                       
                                          ∑
                                          
                                             i
                                             =
                                             1
                                          
                                          L
                                       
                                       
                                          
                                             f
                                             2
                                          
                                          
                                             
                                                
                                                   s
                                                   
                                                      j
                                                      i
                                                   
                                                
                                                ⋯
                                                
                                                   s
                                                   
                                                      
                                                         j
                                                         i
                                                      
                                                      +
                                                      
                                                         k
                                                         i
                                                      
                                                      −
                                                      1
                                                   
                                                
                                             
                                          
                                       
                                    
                                    ,
                                 
                              
                           
                        
                        
                           
                              (7)
                              
                                 
                                    
                                       F
                                       3
                                    
                                    =
                                    
                                       
                                          ∑
                                          
                                             i
                                             =
                                             2
                                          
                                          L
                                       
                                       
                                          
                                             f
                                             3
                                          
                                          
                                             
                                                
                                                   
                                                      
                                                         c
                                                         i
                                                      
                                                      ,
                                                      
                                                         s
                                                         
                                                            j
                                                            i
                                                         
                                                      
                                                      ⋯
                                                      
                                                         s
                                                         
                                                            
                                                               j
                                                               i
                                                            
                                                            +
                                                            
                                                               k
                                                               i
                                                            
                                                            −
                                                            1
                                                         
                                                      
                                                   
                                                
                                                
                                                   
                                                      
                                                         
                                                            c
                                                            
                                                               i
                                                               −
                                                               1
                                                            
                                                         
                                                         ,
                                                         
                                                            s
                                                            
                                                               
                                                                  j
                                                                  i
                                                               
                                                               −
                                                               
                                                                  k
                                                                  
                                                                     i
                                                                     −
                                                                     1
                                                                  
                                                               
                                                            
                                                         
                                                         ⋯
                                                         
                                                            s
                                                            
                                                               
                                                                  j
                                                                  i
                                                               
                                                               −
                                                               1
                                                            
                                                         
                                                      
                                                   
                                                
                                             
                                          
                                       
                                    
                                    ,
                                 
                              
                           
                         and 
                           
                              (8)
                              
                                 
                                    
                                       F
                                       4
                                    
                                    =
                                    
                                       
                                          ∑
                                          
                                             i
                                             =
                                             2
                                          
                                          L
                                       
                                       
                                          
                                             f
                                             4
                                          
                                          
                                             
                                                
                                                   s
                                                   
                                                      j
                                                      i
                                                   
                                                
                                                
                                                   
                                                      s
                                                      
                                                         
                                                            j
                                                            i
                                                         
                                                         −
                                                         1
                                                      
                                                   
                                                
                                             
                                          
                                       
                                    
                                    .
                                 
                              
                           
                        
                     

In the above, f
                        0/f
                        1 are class-dependent single-character classification/geometric scores, f
                        2 is class-independent single-character geometric score, f
                        3 is class-dependent between-character geometric score, and f
                        4 is class-independent between-character geometric score. f
                        4 characterizes the relationship between two adjacent primitive segments, and thus, evaluates the likelihood of the segmentation point between two segments [39].

The relationship between the word instance and its preceding and succeeding characters, called external context, can be incorporated in the word similarity to further improve the accuracy of the model. This is like a query extension but the classes of preceding and succeeding characters are unknown. We obtain the fused model with external context by marginalizing the similarity with respect to the external adjacent character classes.

Given a query word W
                        =
                        c
                        1
                        ⋯
                        c
                        
                           L
                         and its instance with alignment 
                           
                              A
                              =
                              
                                 
                                    
                                       
                                          c
                                          1
                                       
                                       ;
                                       
                                          s
                                          p
                                       
                                       ⋯
                                       
                                          s
                                          
                                             p
                                             +
                                             
                                                k
                                                1
                                             
                                             −
                                             1
                                          
                                       
                                    
                                 
                                 ⋯
                                 
                                    
                                       
                                          c
                                          L
                                       
                                       ;
                                       
                                          s
                                          
                                             q
                                             −
                                             
                                                k
                                                L
                                             
                                             +
                                             1
                                          
                                       
                                       ⋯
                                       
                                          s
                                          q
                                       
                                    
                                 
                              
                           
                        , we can extend the alignment by assuming the extended word W
                        
                           e
                        
                        =
                        c
                        0
                        c
                        1
                        ⋯
                        c
                        
                           L
                        
                        c
                        
                           L
                           +1 as
                           
                              (9)
                              
                                 
                                    
                                       
                                          
                                             A
                                             e
                                          
                                          =
                                          
                                             
                                                
                                                   
                                                      c
                                                      0
                                                   
                                                   ;
                                                   
                                                      s
                                                      
                                                         p
                                                         −
                                                         
                                                            k
                                                            0
                                                         
                                                      
                                                   
                                                   ⋯
                                                   
                                                      s
                                                      
                                                         p
                                                         −
                                                         1
                                                      
                                                   
                                                
                                             
                                             
                                                
                                                   
                                                      c
                                                      1
                                                   
                                                   ;
                                                   
                                                      s
                                                      p
                                                   
                                                   ⋯
                                                   
                                                      s
                                                      
                                                         p
                                                         +
                                                         
                                                            k
                                                            1
                                                         
                                                         −
                                                         1
                                                      
                                                   
                                                
                                             
                                          
                                          ,
                                          ⋯
                                       
                                    
                                    
                                       
                                          
                                          
                                             
                                                
                                                   
                                                      c
                                                      L
                                                   
                                                   ;
                                                   
                                                      s
                                                      
                                                         q
                                                         −
                                                         
                                                            k
                                                            L
                                                         
                                                         +
                                                         1
                                                      
                                                   
                                                   ⋯
                                                   
                                                      s
                                                      q
                                                   
                                                
                                             
                                             
                                                
                                                   
                                                      c
                                                      
                                                         L
                                                         +
                                                         1
                                                      
                                                   
                                                   ;
                                                   
                                                      s
                                                      
                                                         q
                                                         +
                                                         1
                                                      
                                                   
                                                   ⋯
                                                   
                                                      s
                                                      
                                                         q
                                                         +
                                                         
                                                            k
                                                            
                                                               L
                                                               +
                                                               1
                                                            
                                                         
                                                      
                                                   
                                                
                                             
                                          
                                          .
                                       
                                    
                                 
                              
                           
                        
                     

The fused discriminant function for the extended word is
                           
                              (10)
                              
                                 
                                    
                                       g
                                       
                                          W
                                          e
                                       
                                    
                                    
                                       
                                          A
                                          e
                                       
                                    
                                    =
                                    
                                       1
                                       L
                                    
                                    
                                       
                                          ∑
                                          
                                             h
                                             =
                                             0
                                          
                                          4
                                       
                                       
                                          
                                             α
                                             h
                                          
                                          ⋅
                                          
                                             F
                                             h
                                          
                                       
                                    
                                    +
                                    
                                       
                                          ∑
                                          
                                             h
                                             =
                                             0
                                          
                                          5
                                       
                                       
                                          
                                             β
                                             h
                                          
                                          ⋅
                                          
                                             G
                                             h
                                          
                                          −
                                          
                                             τ
                                             
                                                W
                                                e
                                             
                                          
                                       
                                    
                                    ,
                                 
                              
                           
                        where Fh
                        , h
                        =1,⋯,4, have the same meaning as in the fused word model (Eq. (4)). The external context scores are given by Gh
                        , h
                        =1,⋯,5, as specified by
                           
                              (11)
                              
                                 
                                    
                                       
                                          
                                             G
                                             h
                                          
                                          =
                                          
                                             
                                                ∑
                                                
                                                   i
                                                   =
                                                   0
                                                   ,
                                                   L
                                                   +
                                                   1
                                                
                                             
                                             
                                                
                                                   f
                                                   h
                                                
                                                
                                                   
                                                      
                                                         c
                                                         i
                                                      
                                                      ,
                                                      
                                                         s
                                                         
                                                            j
                                                            i
                                                         
                                                      
                                                      ⋯
                                                      
                                                         s
                                                         
                                                            
                                                               j
                                                               i
                                                            
                                                            +
                                                            
                                                               k
                                                               i
                                                            
                                                            −
                                                            1
                                                         
                                                      
                                                   
                                                
                                             
                                          
                                          ,
                                       
                                       
                                          h
                                          =
                                          0
                                          ,
                                          1
                                          ,
                                       
                                    
                                 
                              
                           
                        
                        
                           
                              (12)
                              
                                 
                                    
                                       G
                                       2
                                    
                                    =
                                    
                                       
                                          ∑
                                          
                                             i
                                             =
                                             0
                                             ,
                                             L
                                             +
                                             1
                                          
                                       
                                       
                                          
                                             f
                                             2
                                          
                                          
                                             
                                                
                                                   s
                                                   
                                                      j
                                                      i
                                                   
                                                
                                                ⋯
                                                
                                                   s
                                                   
                                                      
                                                         j
                                                         i
                                                      
                                                      +
                                                      
                                                         k
                                                         i
                                                      
                                                      −
                                                      1
                                                   
                                                
                                             
                                          
                                       
                                    
                                    ,
                                 
                              
                           
                        
                        
                           
                              (13)
                              
                                 
                                    
                                       G
                                       3
                                    
                                    =
                                    
                                       
                                          ∑
                                          
                                             i
                                             =
                                             1
                                             ,
                                             L
                                             +
                                             1
                                          
                                       
                                       
                                          
                                             f
                                             3
                                          
                                          
                                             
                                                
                                                   
                                                      
                                                         c
                                                         i
                                                      
                                                      ,
                                                      
                                                         s
                                                         
                                                            j
                                                            i
                                                         
                                                      
                                                      ⋯
                                                      
                                                         s
                                                         
                                                            
                                                               j
                                                               i
                                                            
                                                            +
                                                            
                                                               k
                                                               i
                                                            
                                                            −
                                                            1
                                                         
                                                      
                                                   
                                                
                                                
                                                   
                                                      
                                                         
                                                            c
                                                            
                                                               i
                                                               −
                                                               1
                                                            
                                                         
                                                         ,
                                                         
                                                            s
                                                            
                                                               
                                                                  j
                                                                  i
                                                               
                                                               −
                                                               
                                                                  k
                                                                  
                                                                     i
                                                                     −
                                                                     1
                                                                  
                                                               
                                                            
                                                         
                                                         ⋯
                                                         
                                                            s
                                                            
                                                               
                                                                  j
                                                                  i
                                                               
                                                               −
                                                               1
                                                            
                                                         
                                                      
                                                   
                                                
                                             
                                          
                                       
                                    
                                    ,
                                 
                              
                           
                        
                        
                           
                              (14)
                              
                                 
                                    
                                       G
                                       4
                                    
                                    =
                                    
                                       
                                          ∑
                                          
                                             i
                                             =
                                             1
                                             ,
                                             L
                                             +
                                             1
                                          
                                       
                                       
                                          
                                             f
                                             4
                                          
                                          
                                             
                                                
                                                   s
                                                   
                                                      j
                                                      i
                                                   
                                                
                                                
                                                   
                                                      s
                                                      
                                                         
                                                            j
                                                            i
                                                         
                                                         −
                                                         1
                                                      
                                                   
                                                
                                             
                                          
                                       
                                    
                                    ,
                                 
                              
                           
                         and 
                           
                              (15)
                              
                                 
                                    
                                       G
                                       5
                                    
                                    =
                                    
                                       
                                          ∑
                                          
                                             i
                                             =
                                             1
                                             ,
                                             L
                                             +
                                             1
                                          
                                       
                                       
                                          logp
                                          
                                             
                                                
                                                   c
                                                   i
                                                
                                                
                                                   
                                                      c
                                                      
                                                         i
                                                         −
                                                         1
                                                      
                                                   
                                                
                                             
                                          
                                       
                                    
                                    ,
                                 
                              
                           
                        where G
                        5 represents the linguistic dependency (given by a bi-gram language model) between the query word and the preceding character and the succeeding character. Gh
                        , h
                        =0,1,2, represents the single-character classification and geometric scores, and G
                        3 and G
                        4 represent the between-character (binary) geometric scores.

The fused score 
                           
                              
                                 g
                                 
                                    W
                                    e
                                 
                              
                              
                                 
                                    A
                                    e
                                 
                              
                           
                         can be transformed to a word matching probability by
                           
                              (16)
                              
                                 
                                    p
                                    
                                       
                                          
                                             c
                                             0
                                          
                                          W
                                          
                                             c
                                             
                                                L
                                                +
                                                1
                                             
                                          
                                          
                                             X
                                          
                                       
                                    
                                    =
                                    
                                       1
                                       
                                          1
                                          +
                                          exp
                                          
                                             
                                                −
                                                
                                                   g
                                                   
                                                      W
                                                      e
                                                   
                                                
                                                
                                                   
                                                      A
                                                      e
                                                   
                                                
                                             
                                          
                                       
                                    
                                    .
                                 
                              
                           
                        
                     

Since the numbers of primitive segments and the class labels of the preceding and succeeding characters are uncertain, the word similarity is marginalized with respect to all the possible candidate patterns and classes for the preceding and succeeding characters:
                           
                              (17)
                              
                                 
                                    P
                                    
                                       
                                          W
                                          
                                             X
                                          
                                       
                                    
                                    =
                                    
                                       
                                          ∑
                                          
                                             
                                                c
                                                0
                                             
                                             ∈
                                             
                                                D
                                                0
                                             
                                             ,
                                             
                                                c
                                                
                                                   L
                                                   +
                                                   1
                                                
                                             
                                             ∈
                                             
                                                D
                                                
                                                   L
                                                   +
                                                   1
                                                
                                             
                                          
                                       
                                       
                                          p
                                          
                                             
                                                
                                                   c
                                                   0
                                                
                                                W
                                                
                                                   c
                                                   
                                                      L
                                                      +
                                                      1
                                                   
                                                
                                                
                                                   X
                                                
                                             
                                          
                                       
                                    
                                    ,
                                 
                              
                           
                        where D
                        0 denotes the set of candidate patterns with hypothesized class c
                        0 preceding c
                        1, and D
                        
                           L
                           +1 denotes the set of candidate patterns with hypothesized class c
                        
                           L
                           +1 succeeding cL
                        . To avoid summing over a large number of hypothesized candidate patterns and classes for c
                        0 and c
                        
                           L
                           +1, the marginalization can be simplified by the maximum:
                           
                              (18)
                              
                                 
                                    P
                                    
                                       
                                          W
                                          
                                             X
                                          
                                       
                                    
                                    =
                                    
                                       max
                                       
                                          
                                             c
                                             0
                                          
                                          ∈
                                          
                                             D
                                             0
                                          
                                          ,
                                          
                                             c
                                             
                                                L
                                                +
                                                1
                                             
                                          
                                          ∈
                                          
                                             D
                                             
                                                L
                                                +
                                                1
                                             
                                          
                                       
                                    
                                    p
                                    
                                       
                                          
                                             c
                                             0
                                          
                                          W
                                          
                                             c
                                             
                                                L
                                                +
                                                1
                                             
                                          
                                          
                                             X
                                          
                                       
                                    
                                    .
                                 
                              
                           
                        
                        P(W|X) is finally compared with a probability threshold to decide whether to accept the spotted word or not.

In the above fused character similarity model (Eq. (3)), word similarity model (Eq. (4)) and extended word model (Eq. (10)), there are some weights and thresholds to be estimated. The objective of parameter estimation is to promote the similarity of correct character/word matching and depress the similarity of incorrect matching. For training the character similarity of Eq. (3), we use character samples and non-character samples segmented from text line images, where geometric features are available. Again we minimize a regularized cross-entropy (CE) criterion on these samples. On a sample set {(x
                        
                           n
                        ,c
                        
                           n
                        )|n
                        =1,⋯,
                        N} (cn
                         is the class label of sample x
                        
                           n
                        
                        =
                        s
                        
                           j
                        
                        ⋯
                        s
                        
                           j
                           +
                           k
                           −1, which contains both character classification score and single-character geometric scores), the training objective is
                           
                              (19)
                              
                                 
                                    minC
                                    
                                       E
                                       1
                                    
                                    =
                                    −
                                    
                                       
                                          ∑
                                          
                                             n
                                             =
                                             1
                                          
                                          N
                                       
                                       
                                          
                                             
                                                
                                                   ∑
                                                   
                                                      i
                                                      =
                                                      1
                                                   
                                                   M
                                                
                                                
                                                   
                                                      
                                                         
                                                            y
                                                            i
                                                            n
                                                         
                                                         log
                                                         
                                                            
                                                               p
                                                               i
                                                            
                                                         
                                                         +
                                                         
                                                            
                                                               1
                                                               −
                                                               
                                                                  y
                                                                  i
                                                                  n
                                                               
                                                            
                                                         
                                                         log
                                                         
                                                            
                                                               1
                                                               −
                                                               
                                                                  p
                                                                  i
                                                               
                                                            
                                                         
                                                      
                                                   
                                                
                                             
                                          
                                       
                                    
                                    +
                                    
                                       γ
                                       2
                                    
                                    
                                       
                                          ∑
                                          
                                             h
                                             =
                                             0
                                          
                                          2
                                       
                                       
                                          
                                             α
                                             h
                                             2
                                          
                                       
                                    
                                    ,
                                 
                              
                           
                        where M is the number of character classes, y
                        
                           i
                        
                        
                           n
                        
                        =1 if xn
                         is a sample of class i and y
                        
                           i
                        
                        
                           n
                        
                        =0 otherwise, γ
                        ∈[0,1] is the regularization coefficient, and
                           
                              (20)
                              
                                 
                                    
                                       p
                                       i
                                    
                                    
                                       
                                          x
                                          n
                                       
                                    
                                    =
                                    
                                       1
                                       
                                          1
                                          +
                                          exp
                                          
                                             
                                                −
                                                
                                                   g
                                                   c
                                                
                                                
                                                   
                                                      c
                                                      i
                                                   
                                                   
                                                      x
                                                      n
                                                   
                                                
                                             
                                          
                                       
                                    
                                    =
                                    σ
                                    
                                       
                                          
                                             g
                                             c
                                          
                                          
                                             
                                                c
                                                i
                                             
                                             
                                                x
                                                n
                                             
                                          
                                       
                                    
                                    .
                                 
                              
                           
                        
                     

The parameters αh
                        , h
                        =0,1,2 and 
                           
                              τ
                              
                                 c
                                 i
                              
                           
                        , i
                        =1,⋯,
                        M, are optimized by stochastic gradient descent. The objective (Eq. (19)) is the union of multiple binary problems. Each true character sample is the positive sample of its labeled class and the negative sample of all the other classes, and a non-character sample is the negative sample for all the M classes. To overcome the imbalance of samples (some classes have no samples in the text lines), we use a common threshold shared by all classes: 
                           
                              
                                 τ
                                 
                                    c
                                    i
                                 
                              
                              =
                              
                                 τ
                                 c
                              
                           
                        . To accelerate training, we may select a portion of non-characters that have high character similarity using the model with up-to-date parameters.

For estimating the parameters of word similarity in Eq. (4), we extract positive and negative word samples from training text lines. We use all the concatenations of adjacent two, three, or four characters in the text lines as positive word samples. For each word in the positive samples, the negative samples are extracted during training by using the word similarity model with up-to-date parameters to spot the word from training text lines. The spotted word instances with similarity higher than a threshold and the overlap ratio with positive samples lower than 0.9 are selected as negative samples. The calculation of overlap ratio will be specified in the experimental section. The similarity threshold is selected such that there are about five times of negative samples as many as positive samples. Assuming there are M′ words in the training text lines and each word Wi
                         has Ni
                         samples (including positive and negative samples), the objective of parameter estimation is
                           
                              (21)
                              
                                 
                                    minC
                                    
                                       E
                                       2
                                    
                                    =
                                    −
                                    
                                       
                                          ∑
                                          
                                             i
                                             =
                                             1
                                          
                                          
                                             M
                                             ′
                                          
                                       
                                       
                                          
                                             
                                                
                                                   ∑
                                                   
                                                      n
                                                      =
                                                      1
                                                   
                                                   
                                                      N
                                                      i
                                                   
                                                
                                                
                                                   
                                                      
                                                         
                                                            y
                                                            i
                                                            n
                                                         
                                                         log
                                                         
                                                            
                                                               p
                                                               i
                                                            
                                                         
                                                         +
                                                         
                                                            
                                                               1
                                                               −
                                                               
                                                                  y
                                                                  i
                                                                  n
                                                               
                                                            
                                                         
                                                         log
                                                         
                                                            
                                                               1
                                                               −
                                                               
                                                                  p
                                                                  i
                                                               
                                                            
                                                         
                                                      
                                                   
                                                
                                             
                                          
                                       
                                    
                                    +
                                    
                                       γ
                                       2
                                    
                                    
                                       
                                          ∑
                                          
                                             h
                                             =
                                             0
                                          
                                          4
                                       
                                       
                                          
                                             β
                                             h
                                             2
                                          
                                       
                                    
                                    ,
                                 
                              
                           
                        where y
                        
                           i
                        
                        
                           n
                        
                        =1 for positive samples and y
                        
                           i
                        
                        
                           n
                        
                        =0 for negative samples, and for a word sample (W
                        
                           i
                        ,A
                        
                           i
                        
                        
                           n
                        ), where A
                        
                           i
                        
                        
                           n
                         denotes the alignment of a word Wi
                         with image segments, the probability is
                           
                              (22)
                              
                                 
                                    
                                       p
                                       i
                                    
                                    
                                       
                                          A
                                          i
                                          n
                                       
                                    
                                    =
                                    
                                       1
                                       
                                          1
                                          +
                                          exp
                                          
                                             
                                                −
                                                
                                                   g
                                                   W
                                                
                                                
                                                   
                                                      A
                                                      i
                                                      n
                                                   
                                                
                                             
                                          
                                       
                                    
                                    =
                                    σ
                                    
                                       
                                          
                                             g
                                             W
                                          
                                          
                                             
                                                A
                                                i
                                                n
                                             
                                          
                                       
                                    
                                    ,
                                 
                              
                           
                        where g
                        
                           W
                        (A
                        
                           i
                        
                        
                           n
                        ) is calculated as in Eq. (4). The objective (Eq. (21)) is minimized to optimize the parameters by stochastic gradient descent.

For estimating the parameters for the extended word model (Eq. (10)), we use the same word samples as for the word similarity parameter estimation above. The positive word samples are extended to include the preceding and succeeding true characters in the text lines, while the negative samples are extended to include the preceding and succeeding candidate patterns with maximum extended similarity (Eq. (18)). The training objective is now:
                           
                              (23)
                              
                                 
                                    
                                       
                                          minC
                                          
                                             E
                                             3
                                          
                                          =
                                          −
                                          
                                             
                                                ∑
                                                
                                                   i
                                                   =
                                                   1
                                                
                                                
                                                   M
                                                   ′
                                                
                                             
                                             
                                                
                                                   
                                                      
                                                         ∑
                                                         
                                                            n
                                                            =
                                                            1
                                                         
                                                         
                                                            N
                                                            i
                                                         
                                                      
                                                      
                                                         
                                                            
                                                               
                                                                  y
                                                                  i
                                                                  n
                                                               
                                                               log
                                                               
                                                                  
                                                                     p
                                                                     i
                                                                  
                                                               
                                                               +
                                                               
                                                                  
                                                                     1
                                                                     −
                                                                     
                                                                        y
                                                                        i
                                                                        n
                                                                     
                                                                  
                                                               
                                                               log
                                                               
                                                                  
                                                                     1
                                                                     −
                                                                     
                                                                        p
                                                                        i
                                                                     
                                                                  
                                                               
                                                            
                                                         
                                                      
                                                   
                                                
                                             
                                          
                                       
                                    
                                    
                                       
                                          
                                          +
                                          
                                             γ
                                             2
                                          
                                          
                                             
                                                
                                                   
                                                      ∑
                                                      
                                                         h
                                                         =
                                                         0
                                                      
                                                      4
                                                   
                                                   
                                                      
                                                         α
                                                         h
                                                         2
                                                      
                                                   
                                                
                                                +
                                                
                                                   
                                                      ∑
                                                      
                                                         h
                                                         =
                                                         0
                                                      
                                                      5
                                                   
                                                   
                                                      
                                                         β
                                                         h
                                                         2
                                                      
                                                   
                                                
                                             
                                          
                                          .
                                       
                                    
                                 
                              
                           
                        
                     

For an extended word sample (W
                        
                           i
                        
                        
                           e
                        ,A
                        
                           i
                        
                        
                           en
                        ), where A
                        
                           i
                        
                        
                           en
                         is the alignment of extended word W
                        
                           i
                        
                        
                           e
                         with image segments, the probability is
                           
                              (24)
                              
                                 
                                    
                                       p
                                       i
                                    
                                    
                                       
                                          A
                                          i
                                          en
                                       
                                    
                                    =
                                    
                                       1
                                       
                                          1
                                          +
                                          exp
                                          
                                             
                                                −
                                                
                                                   g
                                                   
                                                      W
                                                      e
                                                   
                                                
                                                
                                                   
                                                      A
                                                      i
                                                      en
                                                   
                                                
                                             
                                          
                                       
                                    
                                    =
                                    σ
                                    
                                       
                                          
                                             g
                                             
                                                W
                                                e
                                             
                                          
                                          
                                             
                                                A
                                                i
                                                en
                                             
                                          
                                       
                                    
                                    .
                                 
                              
                           
                        where 
                           
                              
                                 g
                                 
                                    W
                                    e
                                 
                              
                              
                                 
                                    A
                                    i
                                    en
                                 
                              
                           
                         is calculated as in Eq. (10). Again, the objective (Eq. (23)) is minimized to optimize the parameters by stochastic gradient descent.

The query word is searched for in the text lines of documents using a character-synchronous beam search strategy as detailed below. After text line segmentation and character over-segmentation, each text line image is represented as a sequence of primitive segments and the document is viewed as a concatenated sequence of primitive segments I
                     =
                     s
                     1
                     ⋯
                     s
                     
                        n
                     . Each segment combines with its successors to form candidate patterns subject to constraints of maximum number of constituent segments, constraints of character width and width-to-height ratio. We assume that there is a subsequence of primitive segments I
                     
                        W
                     
                     =
                     s
                     
                        p
                     
                     ⋯
                     s
                     
                        q
                      to align with the query word, and a character ci
                      is aligned with 
                        
                           
                              I
                              
                                 c
                                 i
                              
                           
                           =
                           
                              s
                              
                                 j
                                 i
                              
                           
                           ⋯
                           
                              s
                              
                                 
                                    j
                                    i
                                 
                                 +
                                 
                                    k
                                    i
                                 
                                 −
                                 1
                              
                           
                        
                     . We allow a candidate character pattern to be formed by at most four primitive segments (1≤
                     k
                     
                        i
                     
                     ≤4).

To accelerate word spotting, we use two thresholds to prune candidate matches: a character threshold Tc
                      to prune those candidate character patterns with 
                        
                           
                              g
                              c
                           
                           
                              
                                 c
                                 i
                              
                              
                                 I
                                 
                                    c
                                    i
                                 
                              
                           
                           <
                           
                              T
                              c
                           
                        
                     , and a word threshold TW
                      to prune those word candidates with g
                     
                        W
                     (A)<
                     T
                     
                        W
                     . For a partial sequence of primitive segments 
                        
                           
                              s
                              p
                           
                           ⋯
                           
                              s
                              
                                 
                                    j
                                    i
                                 
                                 +
                                 
                                    k
                                    i
                                 
                                 −
                                 1
                              
                           
                        
                      matched with partial word w
                     =
                     c
                     1
                     ⋯
                     c
                     
                        i
                      (i
                     >
                     L), the partial word similarity 
                        
                           
                              g
                              W
                           
                           
                              
                                 
                                    c
                                    1
                                 
                                 ⋯
                                 
                                    c
                                    i
                                 
                                 ,
                                 
                                    s
                                    p
                                 
                                 ⋯
                                 
                                    s
                                    
                                       
                                          j
                                          i
                                       
                                       +
                                       
                                          k
                                          i
                                       
                                       −
                                       1
                                    
                                 
                              
                           
                        
                      has the same form as those in Eqs. (4)–(8) except that L is replaced with i. Using the two pruning thresholds, word spotting is conditioned on the character spotting: only when each character in the word is spotted (character similarity over a threshold), will the (partial) word similarity be calculated. When the last character of the query word is reached and the full word similarity exceeds the word threshold, the extended word similarity (Eq. (10)) is calculated and compared with a final threshold 
                        
                           T
                           
                              W
                              e
                           
                        
                      to give decision of accept (spotted) or reject. The final threshold can be variable for balancing the tradeoff between precision and recall rates.

The character-synchronous beam search algorithm is similar to that used in lexicon-driven character string recognition [27]. The search process repeats with every primitive segment as start. For searching from a specific start segment 
                        
                           s
                           
                              j
                              1
                           
                        
                     , the detailed search process is shown in Algorithm 1. In the description below, g
                     
                        c
                     (⋅) is the character similarity, g
                     
                        W
                     (⋅) is the word similarity, and 
                        
                           
                              g
                              
                                 W
                                 e
                              
                           
                           
                              ⋅
                           
                        
                      is the extended word similarity. PM denotes the set of partial word matches. ji
                      denotes the start segment index for character ci
                     , ki
                      is the number of segments concatenated, and K is the maximum number of segments to be concatenated.

After character-synchronous search, if the query word has multiple spotted instances with the same start primitive segment, only the one with maximum word similarity is retained.

@&#EXPERIMENTAL RESULTS@&#

We conducted experiments on a Chinese handwriting database CASIA-HWDB [41], which contains isolated characters (in three datasets DB1.0, DB1.1 and DB1.2) and handwritten texts (in three datasets DB2.0, DB2.1 and DB2.2) produced by 1020 writers, and is partitioned into a training set of 816 writers and a test of 204 writers. The keyword spotting performance was evaluated on the test set of 1015 handwritten text pages of 204 writers.

For training character classifiers, we used a training set containing 4,198,494 samples of 7356 classes, which are the isolated character samples and the characters segmented from the text pages of the 816 training writers. For confidence transformation (CT), we need some samples for estimating the confidence parameters (two parameters in sigmoidal probability for each class, i.e., class-dependent confidence parameters for the purpose of retrieval). To do so, we used 4/5 of training character samples for classifier training and the 1/5 for confidence parameter estimation, in the same way as [42]. For estimating the geometric models, we used 41, 781 training text lines, and also transform the geometric model outputs to confidence, as done in [42]. After CT, the logarithm of probability output by character classifier and geometric models is used in the similarity models of Eqs. (3), (4), and (10) as fh
                     , h
                     =0,⋯,4. The character bi-gram language model used in the extended word model is the same one as used in [42].

For fusion parameter estimation (Section 4.6), we used all the text lines of the 4076 training text pages of 816 writers. The regularization coefficient was set as γ
                     =1 (a value in [0,1] was found to be not influential, nevertheless).

For evaluating the word spotting performance, we selected 60,000 frequently used words from the corpus collected by Sogou Labs
                        1
                     
                     
                        1
                        
                           http://www.sogou.com/labs/dl/w.html.
                      as query words. The query words maybe either present or absent in the test documents (an absent query word may result in false positives). They include 39,057 two-character words, 9975 three-character words, 9451 four-character words, and 1517 words containing more than four characters. Word spotting was performed on segmented text lines provided by the database.
                        Algorithm 1
                        Word spotting by character-synchronous search from a start segment sp
                           .


                        
                           
                              
                           
                        

To judge whether a spotted word instance is correct or not, we calculate the overlap ratio of area between the spotted instance and the ground-truthed word location. We denote the bounding boxes of ground-truthed word and spotted word by g and d, respectively, the overlapping area between them by ov, and the overlap ratio is calculated by
                        
                           (25)
                           
                              
                                 r
                                 =
                                 
                                    ov
                                    
                                       g
                                       +
                                       d
                                       −
                                       ov
                                    
                                 
                                 .
                              
                           
                        
                     
                  

When the overlap ratio is over a threshold (empirically set as 0.9), the spotted instance is regarded as a correct detect (true positive, TP), otherwise a false positive (FP). If a ground-truthed word in the document is not spotted, it results in a false negative (FN). Based on these counts, the metrics recall rate (R), precision (P) and F-measure (F1) are then calculated.

For evaluating the effects of character classifier and single-character geometric context, we give the results of single character detection. As introduced in Section 4.1, we used two types of classifiers: one-versus-all prototype classifier and linear SVM classifier. We tested three prototype classifiers with 1/3/5 prototypes per class, denoted as “Prototype(1)”, “Prototype(3)” and “Prototype(5)”, respectively. We evaluated several variations of character detection model: (a) using character classifier (f
                        0) only; (b) fusing f
                        0 and class-dependent single-character geometry (f
                        1); and (c) fusing f
                        0, f
                        1, and class-independent single-character geometry (f
                        2). The 7356 classes defined by the character classifier were used as queries for detecting from the test documents. Table 1
                         shows the recall/precision rates under the maximum F-measure over various thresholds, and Fig. 5
                         shows the precision–recall curves. Because confidence transformation turns out to improve the retrieval performance compared to that without CT (shown in Table 1), we show only the curves of character detection with CT.


                        Table 1 shows that for the prototype classifier, increasing the number of prototypes helps improve the detection performance. However, the linear SVM classifier even outperforms the prototype classifier with multiple prototypes per class. For all the classifiers, fusion of geometric models (f
                        1 and f
                        2) improves the detection rates significantly (e.g., the F-measure is improved from 57.86% to 80.91% for Prototype(1) classifier, and from 75.35% to 88.98% for SVM classifier), and the class-dependent geometry (f
                        1) is more effective than the class-independent geometry (f
                        2). The precision–recall curves in Fig. 5 confirm the benefits of geometric models and that the SVM classifier outperforms the prototype classifier.

For word spotting, the between-character geometric models are available. We show the results using the fused word model (Eq. (4)) using all the geometric models (f
                        1
                        ~
                        f
                        4) in Table 2
                        . We can see that the fusion of geometric models also improves the word spotting performance significantly. For a fixed word length, the comparison of different prototype classifiers shows that the performance of the one-versus-all prototype classifier is improved with increased number of prototypes per class, and the SVM classifier performs better than prototype classifiers for two-character and three-character words. Spotting longer words results in higher precision and recall rates than that of short words. This is because with more characters in longer words, the word similarity incorporates more contextual information.

The extended word model with external context (Eq. (10)) can be dichotomized into one with external geometric model (GM) only and one with both external GM and linguistic model (LM, character bi-gram). According to the marginalization rule, it can be dichotomized into one of summation (Eq. (17)) and one of maximization (Eq. (18)). We observed that the two marginalization rules perform comparably, for saving space, we only show the results of maximization marginalization as in Table 3
                        .

Comparing the performance of extended word model with external GM (Table 3) and that of word model without external context (Table 2), it is evident that the external GM improves the performance. For example, in spotting four-character words, the F-measure of Prototype(1) classifier is improved from 76.23% to 78.87%, and the F-measure of SVM classifier is improved from 79.35% to 81.98%.

Comparing the extended word model with both external GM and LM and the one with external GM only (Table 3), it is shown that the external LM improves the spotting performance significantly. For example, in spotting four-character words, the F-measure of Prototype(1) classifier is improved from 78.87% to 84.21%, and the F-measure of SVM classifier is improved from 81.98% to 87.38%.

To justify the advantages of word model-based word spotting over text line recognition (transcription)-based word search, we conducted experiments to compare their performance. We implemented text line recognition using the method of Wang, Yin and Liu [42]. For fair comparison, both the word model and the text line recognizer use the same character classifier, same geometric models (GMs), and same language model (LM, character bi-gram). We also compared contextual word model and text line recognizer without LM. Comparison of retrieval without LM is meaningful because in some applications, the language domain is unknown or largely variable which makes the modeling of linguistic context difficult. The results of word spotting and transcription-based search for two-character words with LM are shown in Fig. 6
                        . The figure of transcription-based search without LM is omitted for saving space, but it shows similar tendency as that of transcription with LM.


                        Fig. 6 shows that the SVM classifier yields inferior performance in transcription-based word retrieval compared to the prototype classifiers, though it performs better in word model-based spotting. This is due to the low accuracy of text line recognition using linear SVM classifier for character classification. The prototype classifier, also trained under the one-versus-all objective, performs much better than the SVM classifier in text line recognition. Particularly, the Prototype(5) classifier performs best in transcription-based word search.

The text line recognition accuracy relies on the character classification accuracy and cumulated accuracy of multiple ranks. We tested the four classifiers on the segmented characters of the test documents. The top rank accuracies of Prototype(1), Prototype(3), Prototype(5) and SVM are 84.69%, 85.54%, 85.87% and 84.76%. The cumulated accuracies of 20 top ranks are 96.84%, 97.71%, 97.93% and 88.48%. The low cumulated accuracy of SVM leads to low performance of text line recognition. Increasing the number of candidate classes (top ranks) for the SVM classifier gives only slight improvement of text line recognition accuracy because a large number of candidate classes complicates the confusion of candidate segmentation–recognition paths.

Transcription-based retrieval gives one unique point of precision–recall tradeoff since the text line recognizer gives unique text output. On the other hand, the model-based word spotting provides flexible precision–recall tradeoff by tuning the threshold of word matching score. At certain threshold, word model-based spotting can yield much higher recall rate than transcription-based search, as is evident in Fig. 6.


                        Table 4
                         shows the precision and recall rates of transcription-based search for words of variable lengths. Transcription-based word search yields high precision but low recall rates. This is because many characters in handwritten documents are misrecognized. The words with misrecognized characters cannot be retrieved, thus lead to low recall rate. On the other hand, the words retrieved in the recognition output are more likely to be correct, thus lead to high precision. Moreover, the recall rate decreases when the length of query word increases, unlike that in word model-based spotting, the recall rate increases with word length (cf. Table 3). Comparing the best performance of word model extended with external GM (left in Table 3, best results are given by SVM) with that of the transcription-base search with GM (left in Table 4, best results are given by Prototype(5) classifier), we can see that for two-character words, transcription-based search performs better; for words of three-character or longer, word model-based spotting yields significantly higher recall rate but slightly lower precision. When comparing the best performance of two methods with GM and LM (right in Tables 3 and 4), word model-based spotting is still inferior to transcription-based search for two-character words. For three-character words, the best results of two methods are comparable; for four-character words, word model-based spotting gives both higher precision and recall rates.

For computational efficiency, we use classifiers with low complexity: linear SVM and prototype classifiers. The linear SVM classifier stores the weight vectors of one per class. The prototype classifier has comparable complexity with linear SVM when each class has one prototype, and the complexity is proportional to the prototype number. In our system, the feature vector of candidate character is reduced to 160D by FLDA, and the number of classes is 7356. So, the linear SVM classifier has 160×7356≃1.177
                        M parameters, consuming 4.7MB memory if using 4bytes per number. Compared to the classifier parameter storage, the class-dependent (6-class and 36-class) and class-independent (2-class) geometric models are very small. The memory size of the bi-gram language model is proportional to the square of character class number (7356). Exploiting the sparsity of bi-grams, the language model actually consumes 6.19MB memory.

In keyword spotting from document image, the processing time is mainly due to candidate character pre-processing, feature extraction, and character similarity and word similarity computations. On a candidate character, the average times of pre-processing and feature extraction are 0.011ms and 0.014ms, respectively. The average times of similarity computation for four classifiers, Prototype(1/3/5) and SVM, are 0.009ms, 0.012ms, 0.015ms
                           2
                        
                        
                           2
                           When there are multiple prototypes per class, the time for computing the minimum distance per class is not proportional to the prototype number.
                         and 0.008ms, respectively. We implemented the algorithms on a personal computer with CPU of Intel XeonE3-1230 3.2GHz.

The keyword spotting time depends on the query word length and document length as well. In our database, each document has around 300 characters on average. By concatenating consecutive primitive segments into candidate characters after over-segmentation, the number of candidate characters is about three times as many as the number of true characters. Table 5
                         gives the average times for spotting query words of variable length from a document image using the proposed contextual word model with different classifiers. For words of two or three characters, the spotting time using Prototype(1) or linear SVM is less than 100ms. This speed is acceptable for real-time retrieval from a set of less than 100 documents. For retrieving a larger document set, real-time search can be enabled by offline computing of character similarities and storing in index files.

Due to the large number of character classes in Chinese (7356 classes in our experiments), we only used classifiers of low complexity in the above experiments. For comparing more classifiers, including some of high complexity, we conducted experiments on a small character set (small category), 100 classes of most frequent Chinese characters (according to the character frequencies in the corpus of Sogou Labs). Besides the enabling of evaluating various classifiers, evaluation of small category classifiers is meaningful because in some applications, the users are interested in a small set of query words.

In addition to the one-versus-all trained prototype classifier and linear SVM, we also evaluate two nonlinear SVM classifiers, with 4th order polynomial kernel and radial basis function (RBF) kernel, referred to as SVM-poly and SVM-rbf, respectively. For the polynomial kernel, the input vectors are empirically re-scaled such that the average self-inner product of training vectors is 2. For the RBF kernel, the variance parameter is set as 0.25 times the average square Euclidean distance to class mean of training samples. The SVM classifiers were trained using the successive over-relaxation (SOR) algorithm of Mangasarian and Musicant [38], with the upper bound of multiplier set as 1 and 10 for SVM-poly and SVM-rbf, respectively.

For 100-class classification, we use the samples in datasets DB1.0, DB1.1, DB2.0 and DB2.1 in CASIA-HWDB. DB1.0 and DB1.1 contain isolated character images, DB2.0 and DB2.1 contain handwritten text pages. DB1.0 and DB2.0 were produced by 420 writers, and DB1.1 and DB 2.1 were produced by 300 writers. In this experiment, we do not use the datasets DB1.2 and DB2.2 (produced by another 300 writers) because the DB1.2 does not have samples of high-frequency characters. Each dataset was partitioned into a training subset of 4/5 writers and a test subset of 1/5 writers. The training subsets of four datasets have 289,309 character samples falling in the 100 high-frequency classes. We selected 100,000 training samples from this set randomly with same percentage from all classes for reducing the training time of nonlinear SVM classifiers. The 100-class character samples in handwritten text datasets DB2.0 and DB2.1, 57,854 in total, were used as test set. For each training or test sample, the extracted 512-D feature vector (Section 4.1) was reduced to 99-D by FLDA.

The keyword spotting performance of 100-class classifiers was evaluated on the test data of datasets DB2.0 and DB2.1, in total of 715 pages. The query words are those high-frequency words in the corpus of Sogou Labs composed of the 100 character classes. There are 2936 such words, including 1922 two-character words, 713 three-character words and 280 four-character words.

We compare the classifiers in respect of isolated character classification accuracy as well as word spotting performance. For isolated character classification, we report the 5-fold cross validation (CV) accuracy on the training set as well as the accuracy on the test set. For cross validation, the training set was randomly partitioned into five subsets with each class uniformly distributed in the subsets. The classification times and accuracies are shown in Table 6
                        . Comparing the training time and average test time, it is evident that the nonlinear SVM classifiers have far higher complexity than the linear SVM and prototype classifiers, but give higher classification accuracies.

The word spotting performance of 100-class (small category) classifiers is shown in Table 7
                        . For comparison with the spotting results of large category (7356 classes), we give the results of spotting variable-length words, with internal GM (geometric models), external GM and external GM+LM (language model). Comparing the results of spotting with internal GM in Table 7 with the results of large category in Table 2, we can see that small category classifiers give slightly higher spotting performance. This is because small category classifiers have higher discrimination accuracies. It is noteworthy that in small category setting, the linear SVM classifier yields inferior spotting performance than the prototype classifier, while in large category setting, it outperforms the prototype classifier. This can be explained that when training with small category samples, the linear SVM classifier has weaker rejection ability to out-of-class samples (there are many characters beyond the 100 classes in the test documents). The nonlinear SVM classifiers give higher spotting performance than the prototype classifier and linear SVM owing to the superior discrimination ability of nonlinear SVM.

Comparing the results of spotting with external GM in Table 7 with the results of large category in Table 3, we can see that in the case of spotting with external GM, small category classifiers give higher spotting performance. However, in the small category setting, the adding of external LM does not improve the spotting performance as remarkably as that of large category setting. This is because many external characters adjacent to the queried words in the test documents are beyond the 100 classes, and so, cannot be recognized. Without recognizing the external characters, the effect of linguistic dependency is limited.

It is noteworthy that the number of classes in classifier does not affect the computation time of word spotting, since the word similarity involves only the scores of the classes in the query word. Hence, the spotting times of small category setting remain the same as those in Table 5. The spotting time of nonlinear SVM is about 20 times as that of linear SVM. The independence of spotting time on category size and the promising spotting performance of large category classifiers with external GM+LM (Table 3 compared to Table 7) indicate that word spotting using large category classifiers is preferable.

With small category classifier, document transcription (text line recognition) is not possible. Hence, the comparison of word model-based spotting with transcription-based search is not available in this case.

@&#CONCLUSION@&#

We proposed a keyword spotting method for off-line handwritten Chinese documents using contextual word model. For computing the similarity between text query word and candidate word image (subsequence of primitive segments), the contextual word model fuses the character classification score, geometric and linguistic contexts within and out of word. Experimental results show that one-versus-all prototype classifier and linear SVM are suitable for word model-based spotting. The benefits of geometric and linguistic contexts, particularly the dependency with external adjacent characters, were justified. Comparing with transcription-based text search, the proposed method can give flexibly higher recall rate, and when the query word is four-character or longer, it can give both higher precision and recall rate. Experiments of small category classifiers show the superiority of nonlinear SVM classifiers despite their high computational complexity. Our future works aim to further improve the spotting performance by combining different classifiers and combining word model matching with transcription-based search.

@&#ACKNOWLEDGEMENT@&#

This work was supported in part by the National Basic Research Program of China (973 Program) Grant 2012CB316302, the National Natural Science Foundation of China (NSFC) Grants 60933010 and 60825301.

@&#REFERENCES@&#

