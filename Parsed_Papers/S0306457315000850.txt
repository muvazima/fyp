@&#MAIN-TITLE@&#Subtopic mining using simple patterns and hierarchical structure of subtopic candidates from web documents

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           We use only web document collection instead of query logs and external resources.


                        
                        
                           
                           Our simple patterns are based on noun phrases and alternative partial-queries.


                        
                        
                           
                           We maintain a balance between popularity and diversity of subtopics.


                        
                        
                           
                           Our method covered various search intentions of a query by its few subtopics.


                        
                        
                           
                           Our results were steadily improved by extracting more relevant and various subtopics.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Search intention

Subtopic mining

Hierarchical structure

@&#ABSTRACT@&#


               
               
                  The intention gap between users and queries results in ambiguous and broad queries. To solve these problems, subtopic mining has been studied, which returns a ranked list of possible subtopics according to their relevance, popularity, and diversity. This paper proposes a novel method to mine subtopics using simple patterns and a hierarchical structure of subtopic candidates. First, relevant and various phrases are extracted as subtopic candidates using simple patterns based on noun phrases and alternative partial-queries. Second, a hierarchical structure of the subtopic candidates is constructed using sets of relevant documents from a web document collection. Finally, the subtopic candidates are ranked considering a balance between popularity and diversity using this structure. In experiments, our proposed methods outperformed the baselines and even an external resource based method at high-ranked subtopics, which shows that our methods can be effective and useful in various search scenarios like result diversification.
               
            

@&#INTRODUCTION@&#

The advent of smart devices has significantly influenced the web search environment. Unlike in the era of personal computers, enhanced searching services are required to obtain accurate search results because users tend to simplify queries for their own convenience. In fact, many web queries are short and unclear. Some users do not choose appropriate words for a web search, and others omit specific terms needed to clarify search intentions, because it is not easy for users to express their search intentions explicitly through keywords. This intention gap between users and queries results in queries which are ambiguous and broad. In the case of ambiguous queries, users may get results quite different from their intentions; as for broad queries, results may not be as specific as users expect.

As one of the solutions for these problems, web search engines have provided query suggestion services such as autocomplete and related queries. Query suggestion gives new queries to help a user explore and express his information need (search intention) for a given query (Bhatia, Majumdar, & Mitra, 2011; Jones, Rey, Madani, & Greiner, 2006). However, query suggestion does not explicitly consider popularity and diversity of suggested queries. For this reason, as a new solution, subtopic mining is proposed, which can find possible subtopics (suggested queries) for a given query and return a ranked list of them in terms of their relevance, popularity, and diversity (Fig. 1
                     ).

According to NTCIR-9 subtopic mining task (Song et al., 2011), a subtopic of a given query is a query that disambiguates and specifies the search intention of the original query. For example, if a query is “chocolate,” its hyponyms (sub-class words) “white chocolate” and “dark chocolate” can be a subtopic to specify one search intention “chocolate type.” In contrast, a hypernym (super-class word) of a given query is excluded from the subtopic candidates because it broadens the search intention. The popularity and diversity consider only the subtopics which are relevant to the query, and are estimated for each of the subtopics and the set of the subtopics, respectively.

Subtopic mining can be used to improve the results of various search scenarios, such as personalized search and search result diversification. Especially, for an explicit approach to search result diversification, subtopic mining can be an important part to find as various subtopics as query aspects that are used to retrieve relevant documents for the query. The study of search result diversification is divided into explicit approach and implicit approach (Dang & Croft, 2012; Dang & Croft, 2013; Santos, Macdonald, & Ounis, 2010). The explicit approach finds explicitly the subtopics (topic-level) or relevant words (term-level) for a given query first, and retrieves relevant documents for each of them. As a result, the set of retrieved documents satisfies the diversity because they contain various contents for the query. The implicit approach retrieves various documents related to a given query without taking the step of finding the subtopics or relevant words for the query. Typically, the explicit approach does not directly focus on the diversity of subtopics or relevant words, whereas it focuses on the diversity of relevant documents considering the novelty (minimum redundancy) (Santos et al., 2010) and proportionality (popularity distribution) (Dang & Croft, 2012). Therefore, subtopic mining could be considered a breakthrough for the improvement of topic-level search result diversification.

Most of previous methods relied on query logs to find subtopics (Baeza-Yates, Hurtado, & Mendoza, 2005; Beeferman & Berger, 2000; Fujita, Uchiyama, Dupret, & Baeza-Yates, 2010; Huang, Chien, & Oyang, 2003; Jones et al., 2006; Ma, Lyu, & King, 2010; Santos et al., 2010; Santos, Macdonald, & Ounis, 2011; Xue et al., 2011; Zhang, Lu, & Wang, 2011; Zhu, Guo, Cheng, Du, & Shen, 2011). The query logs are particularly useful resources for existing search engines to build bipartite graphs of 〈query, clicked URL〉, and thus to produce suggested queries. However, most of them are not available to external researchers, and data sparseness occurs because rare queries may be few or non-existent in query logs. Meanwhile, the previous methods focused more on the relevance to rank subtopics than the popularity (Fujita et al., 2010; Huang et al., 2003; Jones et al., 2006; Ma et al., 2010; Zhu et al., 2011), or made no distinction between them (Baeza-Yates et al., 2005; Santos et al., 2011; Xue et al., 2011). Though a useful factor for document ranking, the relevance does not reflect the popularity of subtopics because the relevance only checks whether a subtopic is similar or related to a given query. For example, if a query is “typhoon,” “eye of a typhoon” is the higher related subtopic than “typhoon damage.” However, general users get more interested in “typhoon damage” than “eye of a typhoon.” In other words, the relevance is the preceding condition to find subtopics, and afterwards the popularity is considered to rank them. Furthermore, as an essential issue, the popularity and the diversity are not proportional to each other. For example, if some subtopics belong to only a few search intentions with high popularity, their diversity is low. Good subtopics must be relevant to a given query and satisfy both the high popularity and high diversity.

To solve these issues, we propose a novel method to mine subtopics using simple patterns and a hierarchical structure of subtopic candidates based on relevant documents. Our contributions are as follows:
                        
                           •
                           Our method uses only web document collection instead of query logs and external resources.

To find various relevant subtopic candidates, we extract as many “understandable” phrases as possible from the web documents, which fully or partially match the original query through simple patterns. These patterns are based on noun phrases and alternative partial-queries to the original query, and this approach is easily adaptable to other languages.

Our work proposes a hierarchical structure of subtopics to maintain a balance between popularity and diversity. This structure has relatively small groups of subtopics, which cover a wide variety of search intentions of the query and also cover their more specific ones to improve the diversity. There is also an inheritance of popularity between subtopics. Using this structure, we get a ranked list of subtopics satisfying both the high popularity and high diversity.

In Section 2, we review previous work and present evaluation measures. A description of our proposed method is given in Section 3. Our results are presented and discussed in Section 4, and we conclude the paper in Section 5.

Subtopic mining is related to query suggestion because subtopics are similar to the results obtained by this approach. Typically, the query suggestion approach uses query logs. Query pairs that co-occur frequently in the same search sessions are regarded as relevant queries (Huang et al., 2003), and click-through data are used to find similar queries that share a large number of clicked URLs (Baeza-Yates et al., 2005; Beeferman & Berger, 2000). The similarity analysis between suggested queries in bipartite graphs of 〈query, clicked URL〉 is employed to improve the diversity of them (Ma et al., 2010; Zhu et al., 2011). Some approaches segment queries into phrases, and generate suggested queries using the phrases (Fujita et al., 2010; Jones et al., 2006). For example, a query “Britney Spears mp3s” is segmented into two phrases “Britney Spears” and “mp3s,” which are used to generate suggested queries such as “Britney Spears lyrics” and “music mp3s.” In addition to query logs, anchor texts and external resources (Microsoft web n-gram services) are used (Dang, Xue, & Croft, 2011; He, Hollink, & Vries, 2012; Kraft & Zien, 2004), and 〈anchor text, linked URL〉 is regarded as 〈query, clicked URL〉 to make up for data sparseness (Dang & Croft, 2010). Meanwhile, one study utilized only the co-occurrence of words in a web document corpus, and showed the state-of-the-art performance in the document-based query suggestion (Bhatia et al., 2011). This method suggests new queries which consist of the original query’s front words and the phrase (n-gram, n ≤ 3) containing the original query’s last word. To select the appropriate phrases, every phrase’s appearance ratio and the co-occurrence information with the query’s front words in the corpus are measured. However, these suggested queries could be incomplete phrases because of the n-grams of words.

The NTCIR-9 subtopic mining task motivated various methods for the Chinese and Japanese languages. This task provided the web document collections for Chinese (SogouT) and Japanese (ClueWeb09-JA), but provided only the log for Chinese queries (SogouQ). To achieve high-level performance, participants used the suggested queries from major web search engines (Baidu, Bing, Google, and Yahoo!), and query logs (Santos et al., 2010; Santos et al., 2011; Xue et al., 2011; Zhang et al., 2011). However, the Japanese subtopic mining task achieved its best performance when it used only external web documents. ORG-S-J-1 (Song et al., 2011) used anchor texts and URLs extracted from external web documents, and did not depend on any other resources. To gather web documents, this method used Microsoft’s in-house web search platform, and achieved first place in the task. This method assume that if there are various domain names for a subtopic (anchor text), then the popularity of the subtopic increases. This method was well-defined and relatively easy to implement, but encountered data sparseness because these subtopic candidates had to fully match the query.

The evaluation measures of the NTCIR-9 subtopic mining task were I-rec, D-nDCG, and D
                        #
                     -nDCG (Sakai, 2011; Song et al., 2011). I-rec (intent recall) is for diversity, D-nDCG for overall relevance and popularity across search intentions, and D
                        #
                     -nDCG for an average of I-rec and D-nDCG, respectively. The assessors manually clustered the collected subtopics with similar search intentions. These clusters were called intents, and each of them had a representative search intention as a cluster label. Each subtopic could belong to only one intent. Non-relevant or non-understandable subtopics were given relevance level 0. The popularities of intents were estimated by a popularity voting process involving ten assessors. If intents did not receive any votes, these intents were merged into a single intent labeled “others.”
                  

@&#PROPOSED METHOD@&#

Our method consists of two steps. The first step (subtopic extraction) is to extract as many various relevant subtopic candidates as possible from web documents. We create simple patterns based on noun phrases and alternative partial-queries, and then find subtopic candidates using these patterns, and finally filter them to reduce redundancy of similar subtopic candidates. The second step (subtopic ranking) is to rank subtopics in consideration for a balance between their popularity and diversity. We construct a three-level hierarchical structure of extracted subtopic candidates based on relevant documents, and propose a ranking order of subtopics using this structure and their estimated popularities.

It is of utmost importance to extract various subtopic candidates as correctly as possible in the initial stage, because if we extract non-relevant or incomplete phrases as subtopic candidates, the next stage will suffer from these errors (error propagation). In contrast, if we extract subtopic candidates under strong criteria to improve the accuracy, several problems will arise, such as data sparseness, low diversity, and limited comparison among subtopic candidates. Therefore, in this paper, to extract various relevant subtopic candidates based on relatively relaxed criteria, a subtopic is assumed to consist of an original query and its one or more noun phrases that make the original query more specific. (This assumption makes us to consider only noun-based phrases containing the original query, which must be more specific expressions of the original.) Since the ratio of nouns to real-query words is much higher than the ratio of other word classes (Barr, Jones, & Regelson, 2008),
                           1
                        
                        
                           1
                           Nouns constituted 71.1% of sampled query words from the Yahoo! web search engine in August 2006.
                         various subtopic candidates derived from nouns rather than others can become new queries, and be useful in finding the hidden search intentions of the given query. Furthermore, noun phrases are grammatically complete and clearly express a complete thought rather than convey some meaning, so that we can overcome the limitation of the n-gram based method that may select incomplete phrases, and also improve the quality of document retrieval for each subtopic after subtopic mining (Arampatzis, Tsoris, Koster, & Van Der Weide, 1998; Croft, Turtle, & Lewis, 1991).

In grammar, the head of a phrase is the word that determines the syntactic type of the whole phrase, and the other elements of the phrase are called modifiers because they modify another element in the phrase. This head-modifier relation plays a crucial role in syntactic parsing. Since a query and its adjacent noun phrases appearing in existing documents generally satisfy the head-modifier relation, we define the structures of subtopics as: (1) noun phrase+optional other words+query+optional other words+noun phrase, (2) query+optional other words+noun phrase, and (3) noun phrase+optional other words+query. All these structures contain noun phrases nearest to a query so that they may satisfy as many head-modifier relations as possible without the use of syntactic parsing. In addition, these structures provide understandable phrases by keeping functional words like prepositions, which naturally connect the noun phrases to the query. To extract appropriate subtopic candidates that satisfy the defined subtopic structures, we create a simple pattern:
                           
                              •
                              
                                 Pattern 1: ((adjective)?(noun)+(non-noun)∗)?(query)((non-noun)∗(adjective)?(noun)+)?
                              

In order to make the pattern more applicable, we restrict the form of the noun phase to “(adjective)?(noun)+,” and set “(non-noun)∗” to any words except nouns. Pattern 1 is applied to the top 1000 relevant documents for the query, which are retrieved by the BM25 model (Robertson & Zaragoza, 2009). Since this pattern covers real phrases, consisting of the whole query as well as noun phrases in the documents, the subtopic candidates we find are truly relevant. For example, there is a sentence “we give a brown rice porridge diet’s recipe.” If the query is “diet,” a subtopic candidate “brown rice porridge diet’s recipe” is extracted from the sentence using Pattern 1.

If a query consists of two or more words, however we cannot thoroughly extract various subtopic candidates using only Pattern 1 because of the “decreasing” number of full matches between query and subtopic candidates. To overcome this problem, alternative partial-queries 
                           
                              q
                              left
                           
                         and qright
                         are introduced from the original query for meaningful partial matching. First, all the possible “left partial phrases” are made by consecutively removing the right words of the query. For each of them, the top-N relevant documents are retrieved and compared to those for the original query. If the top-N relevant documents for a left partial phrase are in common with more than 50 percent of the top-N relevant documents for the query, the left partial phrase is regarded as a candidate for an alternative partial-query 
                           
                              q
                              left
                           
                        . Among those candidates that cover most of documents, the shortest one is chosen as 
                           
                              q
                              left
                           
                         to increase the possibility of matching. If none of the candidate phrases cover more than the 50 percent of the top-N relevant documents for the query, the longest phrase is taken as 
                           
                              q
                              left
                           
                         because it contain the most information about the query. Second, the alternative right partial-query qright
                         can be selected in a similar way. So each original query has only one 
                           
                              q
                              left
                           
                         and qright
                        . Using 
                           
                              q
                              left
                           
                         and qright
                         instead of the query, we create new simple patterns:
                           
                              •
                              
                                 Pattern 2: ((adjective)?(noun)+(non-noun)∗)?
                                 
                                    
                                       
                                          
                                             (
                                             
                                                q
                                                left
                                             
                                             )
                                          
                                          
                                             
                                                (
                                                word
                                                )
                                             
                                             *
                                          
                                          
                                             (
                                             
                                                q
                                                right
                                             
                                             )
                                          
                                       
                                       ̲
                                    
                                 ((non-noun)∗(adjective)?(noun)+)?
                              


                                 Pattern 3: (qright
                                    ) (non-noun)*(adjective)?(noun)+
                              


                                 Pattern 4: (adjective)?(noun)+(non-noun)∗
                                 
                                    
                                       
                                          (
                                          
                                             q
                                             left
                                          
                                          )
                                       
                                       ̲
                                    
                                 .

Note that noun phrases both at the front of qright
                         and at the rear of 
                           
                              q
                              left
                           
                         are not reflected in the patterns because the range of applicable noun phrases is unclear. Using these new patterns, various phrases are extracted from the retrieved documents, in each of which the segment corresponding to the underlined part of the pattern is replaced with the original query to create a subtopic candidate. For example, there is a sentence “you must be aware of the diet’s side-effect.” If the query is “porridge diet,” we can find a subtopic candidate “porridge diet’s side-effect (“diet” is replaced with the query)” using Pattern 3. Even if these subtopic candidates are not real phrases in the documents, we can reduce data sparseness and improve diversity.

Our proposed patterns are applicable to many languages such as English, Japanese, Chinese, and Korean, in which adjectives are prenominal modifiers of noun phrases. This pattern-based approach is also easily adaptable to other languages because only the basic POS tags are used in patterns without any deep language process such as syntactic parsing. Meanwhile, if query logs are used for machine learning in the subtopic extraction step, we can select subtopic candidates of the same form as real-queries. However, because most of query logs are not open resources, it is more practical to extract subtopic candidates using the patterns which recognize a noun phrase as one of classic forms of real-queries.

We filter similar subtopic candidates to reduce their redundancy. Let snp
                         be a set of lemmas of noun phrases “(adjective)?(noun)+” at the start or end of each subtopic candidate. If two or more subtopic candidates have the identical snp
                        , they are regarded as similar because snp
                         includes important keywords that decide the meaning of each subtopic candidate. Therefore, we merge the frequency information of similar subtopic candidates, and select the most frequent subtopic candidate among them, since frequency indicates user preference. If the most frequent candidate is not unique, we select the shortest one since it is the most concise expression. For example, assume that, for a given query “porridge diet,” there are three subtopic candidates with their frequency information: 〈“rice porridge diet recipe,” 9〉,〈“rice porridge diet recipes,” 9〉, and 〈“recipe of porridge diet with rice,” 7〉. Because these subtopic candidates have the same snp
                         {recipe,rice}, we merge the frequency information like 
                           
                              9
                              +
                              9
                              +
                              7
                              =
                              25
                           
                        , and select “rice porridge diet recipe.” Finally, if the frequency information of a subtopic candidate is less than a small threshold, for example “3” in our experiments, the subtopic candidate is excluded because it is too rarely used in real documents.

For a given query, the number of its subtopics to be shown to users must be limited using a ranking method because users do not want to see too many subtopics. However, if the ranking method relies on only the popularity of subtopics, most of the high-ranked subtopics are likely to cover only a few search intentions with high popularity. In contrast, if the ranking method considers only the diversity of subtopics, general users may not get interested in the high-ranked subtopics because their popularity may be relatively low even though their diversity coverage is wide. Therefore, a three-level hierarchical structure of subtopics is proposed to obtain a relatively small number of subtopics that covers a wide variety of search intentions of the original query. And then, using this structure and their estimated popularities (see Section 3.3), a ranking order is proposed to maintain a balance between popularity and diversity of the subtopics.

The subtopics for a query can be organized into a hierarchical structure. If a query is ambiguous, then two or more subtopics (senses) that disambiguate its search intention become the semantic children (at level 1) of the query (at root), and their more specific subtopics (hyponyms or facets of the sense) are the grandchildren (at level 2). Because potential search intentions of the query can be repeatedly narrowed down, the depth of the hierarchical structure is deepening, showing a characteristic that higher-level subtopics reflect wider search intentions of the query, and their lower-level children cover narrower ones. This means that: 1) the whole search intentions of the query may be covered by fewer high-level subtopics than low-level ones, and 2) if the search intention of any high-level subtopic is not specific enough, its child nodes (subtopics) may be useful to cover more specific search intentions. However, the structure of this kind is likely to be so over specified that, as its simplified version, we propose a three-level hierarchical structure of subtopics (Fig. 2). This structure does not separate into disambiguation part and specification part. The root is a given query, its child node “primary subtopic,” and each leaf node “secondary subtopic,” respectively. The primary subtopics are disambiguated and initially-specified search intentions, a group of which may be chosen to satisfy high diversity of search intentions for the query. The secondary subtopics are more specified to narrow down the search intention of each primary subtopic, which satisfy the diversity of search intentions for the primary subtopic.

To construct the proposed hierarchical structure, highly relevant documents for a given query are assumed to represent user’s all possible search intentions anyhow, and the appearance of subtopic candidates in documents is interpreted to mean that these subtopic candidates cover some search intentions. Based on this insight, a primary subtopic must satisfy two conditions. First, it covers (appears in) many of the highly relevant documents (i.e., search intentions) to reflect wide search intention. Meanwhile, since the primary subtopics should show clear distinction among search intentions, each relevant document generally includes only one of the primary subtopics. Therefore, a set (e.g. Set A in Fig. 3) of relevant documents containing a primary subtopic seldom overlaps with the other sets (e.g. Set B in Fig. 3) containing the other primary subtopics. Furthermore, this document set may include its some subsets (e.g. Set A-1, A-2, A-1-1, and A-1-2 in Fig. 3), which contain its secondary or other subtopics. In other words, a primary subtopic is quite distinct from its secondary or other subtopics in terms of the overlapping of their corresponding document sets. From these characteristics, the second condition of a primary subtopic is that the document set for a primary subtopic has higher distinctness than the other document sets.

Thus, to select the best primary subtopic satisfying both of the above two conditions, we propose a scoring measure, Selection Score (SS), which checks both how many of the highly relevant documents are covered by a subtopic candidate, and how distinct its corresponding document set is from the others:
                           
                              (1)
                              
                                 
                                    
                                       
                                          
                                             SS
                                             
                                                (
                                                st
                                                ,
                                                US
                                                )
                                             
                                             =
                                             Coverage
                                             
                                                (
                                                st
                                                ,
                                                US
                                                )
                                             
                                             ×
                                             
                                             Distinctness
                                             
                                                (
                                                D
                                                
                                                   (
                                                   st
                                                   )
                                                
                                                )
                                             
                                             =
                                             
                                                
                                                   
                                                      |
                                                      D
                                                      
                                                         (
                                                         st
                                                         )
                                                      
                                                      ∩
                                                   
                                                   
                                                      
                                                         US
                                                      
                                                      c
                                                   
                                                   
                                                      |
                                                   
                                                
                                                
                                                   
                                                      |
                                                   
                                                   
                                                      ⋃
                                                      
                                                         
                                                            
                                                               st
                                                            
                                                            ′
                                                         
                                                         ∈
                                                         ST
                                                      
                                                   
                                                   D
                                                   
                                                      (
                                                      
                                                         
                                                            st
                                                         
                                                         ′
                                                      
                                                      )
                                                   
                                                   
                                                      |
                                                   
                                                
                                             
                                             ×
                                             
                                             Distinctness
                                             
                                                (
                                                D
                                                
                                                   (
                                                   st
                                                   )
                                                
                                                )
                                             
                                             ,
                                          
                                       
                                    
                                 
                              
                           
                        where st is a subtopic candidate; ST is the set of all subtopic candidates that were extracted by the previous step (Section 3.1) from the top-N relevant documents for a query; D(st) is the set of documents containing st among the top-N relevant documents for a query; US is the union of document sets containing the previously selected primary subtopics; and 
                           
                              
                                 US
                              
                              c
                           
                         is the complementary set of US.

In the above measure SS, both Coverage and Distinctness factors are multiplied together to avoid the selection of biased results such as too general or extremely specific subtopic candidates. Coverage measures the ratio of highly relevant documents in 
                           
                              
                                 US
                              
                              c
                           
                         containing a subtopic candidate to all the highly relevant documents, in order to cover new highly relevant documents (hidden search intentions) that have not been covered yet by the previously selected primary subtopics. Next, there are several methods for measuring the distinctness of document sets, but this paper selects the Distinctness Entropy
                         (DE) (Zeng, He, Chen, Ma, & Ma, 2004)
                           2
                        
                        
                           2
                           The original name of DE is the Cluster Entropy (CE), and it is based on Shannon entropy (Shannon, 1948).
                         as the measure for Distinctness:
                           
                              (2)
                              
                                 
                                    
                                       
                                          
                                             DE
                                             
                                                (
                                                st
                                                )
                                             
                                             =
                                             −
                                             
                                                ∑
                                                
                                                   sc
                                                   ∈
                                                   ST
                                                   ,
                                                   sc
                                                   ≠
                                                   st
                                                
                                             
                                             
                                                
                                                   |
                                                   D
                                                   (
                                                   st
                                                   )
                                                   ∩
                                                   D
                                                   (
                                                   sc
                                                   )
                                                   |
                                                
                                                
                                                   |
                                                   D
                                                   (
                                                   st
                                                   )
                                                   |
                                                
                                             
                                             log
                                             
                                                
                                                   |
                                                   D
                                                   (
                                                   st
                                                   )
                                                   ∩
                                                   D
                                                   (
                                                   sc
                                                   )
                                                   |
                                                
                                                
                                                   |
                                                   D
                                                   (
                                                   st
                                                   )
                                                   |
                                                
                                             
                                             .
                                          
                                       
                                    
                                 
                              
                           
                        
                     


                        DE changes the traditional document clustering problem into a phrase ranking problem. Though document clustering finds distinct document clusters (document sets), in order to apply document clustering to the corresponding step of our proposed method, we have to perform additional processes; i.e., extracting subtopic candidates, each of which is the name of a cluster, and then ranking them according to the distinctness of their clusters. However, DE regards a set of documents containing a phrase (subtopic candidate) as a cluster and immediately measures the distinctness of document sets. Here, the information entropy’s probability mass function is set to the overlapping ratio of a document set to each other set. Therefore, in terms of processing steps and time, DE is more efficient than the method based on document clustering.

Primary subtopics are continuously selected using SS. If |US| is equal to 
                           
                              
                                 |
                              
                              
                                 ⋃
                                 
                                    
                                       
                                          st
                                       
                                       ′
                                    
                                    ∈
                                    ST
                                 
                              
                              D
                              
                                 (
                                 
                                    
                                       st
                                    
                                    ′
                                 
                                 )
                              
                              
                                 |
                              
                           
                        , the selection process stops because the selected primary subtopics can cover all the highly relevant documents, which were originally covered by all subtopic candidates. In addition, to decrease the number of primary subtopics while increasing the number of documents covered by each primary subtopic, several document sets for primary subtopics can be merged into a single large set if they are similar to each other in terms of cosine similarity, and the primary subtopic with the highest popularity is selected as the name of the merged set of documents. Note that each set of documents is regarded as a single vector when calculating cosine similarity. For each of the primary subtopics, its secondary subtopics can be selected in the same way recursively, except that we only use the relevant documents containing the primary subtopic.
                           Algorithm 1
                           Subtopic selection 
                                 
                                    
                                       
                                       
                                          
                                             
                                                
                                                1 procedure 
                                                SubtopicSelection (R, ST)
                                          
                                          
                                             
                                                
                                                
                                                input: A set R of documents, and a set ST of subtopic candidates
                                          
                                          
                                             
                                                
                                                
                                                output: A ranked list L of subtopics
                                          
                                          
                                             
                                                
                                                2 
                                                
                                                
                                                   
                                                      US
                                                      ←
                                                      {
                                                      }
                                                   
                                                
                                                
                                                
                                                
                                                
                                                
                                                
                                                
                                                
                                                
                                                
                                                
                                                //
                                                
                                                an empty set
                                             
                                          
                                          
                                             
                                                
                                                3 
                                                
                                                
                                                   
                                                      L
                                                      ←
                                                      [
                                                      ]
                                                   
                                                 
                                                
                                                
                                                
                                                
                                                
                                                
                                                
                                                
                                                
                                                
                                                
                                                
                                                //
                                                
                                                an empty list
                                             
                                          
                                          
                                             
                                                
                                                4 
                                                
                                                while
                                                
                                                   
                                                      
                                                         |
                                                         US
                                                         |
                                                         <
                                                         |
                                                      
                                                      
                                                         ⋃
                                                         
                                                            
                                                               
                                                                  st
                                                               
                                                               ′
                                                            
                                                            ∈
                                                            ST
                                                         
                                                      
                                                      D
                                                      
                                                         (
                                                         
                                                            
                                                               st
                                                            
                                                            ′
                                                         
                                                         )
                                                      
                                                      
                                                         |
                                                      
                                                   
                                                 
                                                do
                                             
                                          
                                          
                                             
                                                
                                                5 
                                                select st with the maximum value of 
                                                   
                                                      SS
                                                      (
                                                      st
                                                      ,
                                                      US
                                                      )
                                                   
                                                 except subtopics in L
                                                
                                                //
                                                
                                                   
                                                      st
                                                      ∈
                                                      ST
                                                   
                                                
                                             
                                          
                                          
                                             
                                                
                                                6 
                                                add st to L, and add 
                                                   
                                                      D
                                                      (
                                                      st
                                                      )
                                                   
                                                 to US
                                             
                                          
                                          
                                             
                                                
                                                7 
                                                
                                                end
                                             
                                          
                                          
                                             
                                                
                                                8 
                                                
                                                for
                                                
                                                   
                                                      i
                                                      ←
                                                      1
                                                   
                                                 
                                                to
                                                
                                                   
                                                      |
                                                      L
                                                      |
                                                   
                                                 
                                                do
                                             
                                          
                                          
                                             
                                                
                                                9 
                                                
                                                
                                                   
                                                      AD
                                                      ←
                                                      D
                                                      (
                                                      
                                                         e
                                                         i
                                                      
                                                      )
                                                   
                                                
                                                
                                                
                                                
                                                
                                                //
                                                
                                                   
                                                      e
                                                      i
                                                   
                                                 
                                                is 
                                                i-th subtopic in 
                                                L
                                             
                                          
                                          
                                             
                                                10 
                                                
                                                
                                                   
                                                      AS
                                                      ←
                                                      {
                                                      
                                                         e
                                                         i
                                                      
                                                      }
                                                   
                                                
                                             
                                          
                                          
                                             
                                                11 
                                                
                                                for
                                                
                                                   
                                                      j
                                                      ←
                                                      (
                                                      i
                                                      +
                                                      1
                                                      )
                                                   
                                                 
                                                to
                                                
                                                   
                                                      |
                                                      L
                                                      |
                                                   
                                                 
                                                do
                                             
                                          
                                          
                                             
                                                12 
                                                
                                                
                                                if 
                                                CosineSimilarity
                                                
                                                   
                                                      (
                                                      D
                                                      
                                                         (
                                                         
                                                            e
                                                            i
                                                         
                                                         )
                                                      
                                                      ,
                                                      D
                                                      
                                                         (
                                                         
                                                            e
                                                            j
                                                         
                                                         )
                                                      
                                                      )
                                                      >
                                                      0.5
                                                   
                                                 
                                                then
                                             
                                          
                                          
                                             
                                                13 
                                                
                                                
                                                
                                                   
                                                      AD
                                                      ←
                                                      AD
                                                      ∪
                                                      D
                                                      (
                                                      
                                                         e
                                                         j
                                                      
                                                      )
                                                   
                                                
                                             
                                          
                                          
                                             
                                                14 
                                                
                                                add 
                                                   
                                                      e
                                                      j
                                                   
                                                 to AS, and remove 
                                                   
                                                      e
                                                      j
                                                   
                                                 from L
                                             
                                          
                                          
                                             
                                                15 
                                                
                                                
                                                
                                                   
                                                      j
                                                      ←
                                                      j
                                                      −
                                                      1
                                                   
                                                
                                             
                                          
                                          
                                             
                                                16 
                                                
                                                
                                                end
                                             
                                          
                                          
                                             
                                                17 
                                                
                                                end
                                             
                                          
                                          
                                             
                                                18 
                                                replace 
                                                   
                                                      e
                                                      i
                                                   
                                                 in L with 
                                                   
                                                      e
                                                      r
                                                   
                                                 which has the highest popularity among subtopics in AS
                                             
                                          
                                          
                                             
                                                19 
                                                
                                                
                                                   
                                                      D
                                                      (
                                                      
                                                         e
                                                         r
                                                      
                                                      )
                                                      ←
                                                      AD
                                                   
                                                
                                             
                                          
                                          
                                             
                                                20 
                                                
                                                end
                                             
                                          
                                          
                                             
                                                21 
                                                sort all subtopics in L by their popularities
                                          
                                          
                                             
                                                22 
                                                
                                                return 
                                                L
                                             
                                          
                                       
                                    
                                 
                              
                           

Subtopic ranking 
                                 
                                    
                                       
                                       
                                          
                                             
                                                
                                                1 procedure 
                                                SubtopicRanking (
                                                   
                                                      
                                                         HR
                                                         query
                                                      
                                                      ,
                                                      
                                                         ST
                                                         all
                                                      
                                                      ,
                                                      K
                                                   
                                                )
                                          
                                          
                                             
                                                
                                                
                                                input: A set 
                                                   
                                                      HR
                                                      query
                                                   
                                                 of top N relevant documents for a given query, a set 
                                                   
                                                      ST
                                                      all
                                                   
                                                 of all subtopic candidates extracted from
                                          
                                          
                                             
                                                
                                                
                                                
                                                   
                                                      HR
                                                      query
                                                   
                                                , and a target amount K of subtopics
                                          
                                          
                                             
                                                
                                                
                                                output: The final ranked list 
                                                   
                                                      L
                                                      final
                                                   
                                                 of subtopics
                                          
                                          
                                             
                                                
                                                2 
                                                
                                                
                                                   
                                                      
                                                         L
                                                         final
                                                      
                                                      ←
                                                   
                                                 
                                                SubtopicSelection (
                                                   
                                                      
                                                         HR
                                                         query
                                                      
                                                      ,
                                                      
                                                         ST
                                                         all
                                                      
                                                   
                                                ) 
                                                
                                                
                                                
                                                
                                                
                                                
                                                //
                                                
                                                for primary subtopics
                                             
                                          
                                          
                                             
                                                
                                                3 
                                                
                                                
                                                   
                                                      PS
                                                      ←
                                                      
                                                         L
                                                         final
                                                      
                                                   
                                                
                                             
                                          
                                          
                                             
                                                
                                                4 
                                                
                                                for
                                                
                                                   
                                                      i
                                                      ←
                                                      1
                                                   
                                                 
                                                to
                                                
                                                   
                                                      |
                                                      PS
                                                      |
                                                   
                                                 
                                                do
                                             
                                          
                                          
                                             
                                                
                                                5 
                                                
                                                
                                                   
                                                      R
                                                      ←
                                                      D
                                                      (
                                                      
                                                         ps
                                                         i
                                                      
                                                      )
                                                   
                                                 
                                                
                                                
                                                
                                                
                                                
                                                
                                                //
                                                
                                                   
                                                      ps
                                                      i
                                                   
                                                 
                                                is 
                                                i-th subtopic in 
                                                PS
                                             
                                          
                                          
                                             
                                                
                                                6 
                                                
                                                
                                                   
                                                      ST
                                                      ←
                                                   
                                                 A set of all subtopic candidates extracted from R except subtopics in 
                                                   
                                                      L
                                                      final
                                                   
                                                
                                             
                                          
                                          
                                             
                                                
                                                7 
                                                add SubtopicSelection (R, ST) to the end of 
                                                   
                                                      L
                                                      final
                                                   
                                                
                                                
                                                
                                                
                                                
                                                
                                                
                                                
                                                //
                                                
                                                for secondary subtopics
                                             
                                          
                                          
                                             
                                                
                                                8 
                                                
                                                end
                                             
                                          
                                          
                                             
                                                
                                                9 
                                                
                                                if
                                                
                                                   
                                                      
                                                         |
                                                      
                                                      
                                                         L
                                                         final
                                                      
                                                      
                                                         |
                                                         <
                                                         K
                                                      
                                                   
                                                 
                                                then
                                             
                                          
                                          
                                             
                                                10 
                                                add the ranked list of other subtopics by their popularities to the end of 
                                                   
                                                      L
                                                      final
                                                   
                                                
                                             
                                          
                                          
                                             
                                                11 
                                                
                                                end
                                             
                                          
                                          
                                             
                                                12 
                                                
                                                return
                                                
                                                   
                                                      L
                                                      final
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           

As mentioned earlier, the groups of primary and secondary subtopics are relatively small groups satisfying the diversity of search intentions for their parent nodes (query and primary subtopics, respectively), and there is an inheritance of popularity between a primary subtopic and its secondary subtopics. Furthermore, users generally want to know about the subtopics with high popularity in detail. From these characteristics, we propose a ranking order of subtopics along the three-level hierarchical structure so as to keep a balance between popularity and diversity (Fig. 4
                        ). Primary subtopics are ranked first to achieve high diversity using few subtopics, then secondary subtopics of the first-ranked primary subtopic are chosen to consider the inherited high popularity from the parent node and the diversity of search intentions for this node, and then secondary subtopics of the next-ranked primary subtopic are chosen sequentially, by their estimated popularities. In addition, if the number of ranked primary and secondary subtopics is smaller than the target amount, other subtopic candidates are chosen by only their popularities, being added to the end of the ranked list of subtopics. Algorithms 1 and 2 describe the whole process of subtopic selection and ranking.

In the web search environment, the concepts of popularity and importance are related because if some information is very important, then lots of general users express interested in it. Therefore, our work focuses on the importance of subtopics to estimate popularities of them. The importance of subtopics is measured based on the assumption that if a subtopic is an important phrase to many relevant documents for a given query, then its importance is high. The Term Frequency and Inverse Document Frequency (TF-IDF) is a general measure that indicates the importance of a target word to a document. To apply TF-IDF to the assumption stated above, a subtopic (st) and the set (Rquery
                        ) of relevant documents for the query are regarded as a target word and the whole corpus for TF-IDF, respectively. Then the Sum of the values of TF-IDF (STFIDF) for st and all documents in Rquery
                         is calculated as the importance of st:
                           
                              (3)
                              
                                 
                                    
                                       
                                          
                                             STFIDF
                                             
                                                (
                                                st
                                                )
                                             
                                             =
                                             
                                                ∑
                                                
                                                   doc
                                                   ∈
                                                   
                                                      R
                                                      query
                                                   
                                                
                                             
                                             SubtopicImportance
                                             
                                                (
                                                st
                                                ,
                                                doc
                                                )
                                             
                                             =
                                             
                                                ∑
                                                
                                                   doc
                                                   ∈
                                                   
                                                      R
                                                      query
                                                   
                                                
                                             
                                             freq
                                             
                                                (
                                                st
                                                ,
                                                doc
                                                )
                                             
                                             log
                                             
                                                
                                                   
                                                      |
                                                   
                                                   
                                                      R
                                                      query
                                                   
                                                   
                                                      |
                                                   
                                                
                                                
                                                   |
                                                   D
                                                   (
                                                   st
                                                   ,
                                                   
                                                      R
                                                      query
                                                   
                                                   )
                                                   |
                                                
                                             
                                             ,
                                          
                                       
                                    
                                 
                              
                           
                        where freq(st,doc) is the frequency of st in a document doc; and D(st,Rquery
                        ) is the set of documents in Rquery
                         containing st.

However, STFIDF does not consider the importance of each relevant document of a subtopic. Because a document is more informative than a subtopic, a more distinguishable result could be obtained for the popularity of a subtopic if the importance of its relevant documents is additionally applied to the estimation of its popularity. A query is a common topic of its subtopics, and highly relevant documents for the query contain much relevant information. This means that these documents tend to be important to users who want to know about each subtopic. Therefore, we assume that a subtopic with high popularity can retrieve more important documents, and check that how many highly relevant documents for a subtopic also cover the relevant documents for a query, by a proposed measure, named Document Coverage (DC):
                           
                              (4)
                              
                                 
                                    
                                       
                                          
                                             DC
                                             (
                                             st
                                             )
                                          
                                       
                                       
                                          =
                                       
                                       
                                          
                                             
                                                ∑
                                                
                                                   doc
                                                   ∈
                                                   (
                                                   
                                                      HR
                                                      st
                                                   
                                                   ∩
                                                   
                                                      HR
                                                      query
                                                   
                                                   )
                                                
                                             
                                             Weight
                                             
                                                (
                                                st
                                                ,
                                                doc
                                                )
                                             
                                             ×
                                             
                                             DocumentImportance
                                             
                                                (
                                                doc
                                                )
                                             
                                          
                                       
                                    
                                    
                                       
                                       
                                          =
                                       
                                       
                                          
                                             
                                                ∑
                                                
                                                   doc
                                                   ∈
                                                   (
                                                   
                                                      HR
                                                      st
                                                   
                                                   ∩
                                                   
                                                      HR
                                                      query
                                                   
                                                   )
                                                
                                             
                                             
                                                
                                                   
                                                      DS
                                                      st
                                                   
                                                   
                                                      (
                                                      doc
                                                      )
                                                   
                                                
                                                
                                                   maximum
                                                   
                                                   of
                                                   
                                                      
                                                         0.35
                                                         e
                                                         m
                                                      
                                                      
                                                         0
                                                         e
                                                         x
                                                      
                                                   
                                                   
                                                      DS
                                                      st
                                                   
                                                   
                                                      s
                                                   
                                                
                                             
                                             ×
                                             
                                             
                                                DS
                                                query
                                             
                                             
                                                (
                                                doc
                                                )
                                             
                                             ,
                                          
                                       
                                    
                                 
                              
                           
                        where HRst
                         and HRquery
                         is the set of top-N relevant documents for a subtopic st and a query, respectively; and DSst
                        (doc) and DSquery
                        (doc) is the ranking score of a document doc by the BM25 model (Robertson & Zaragoza, 2009) for st and a query, respectively.


                        Weight is the value that considers the relevance of a subtopic to its document and is used to weight DocumentImportance, which regards the ranking scores of the relevant documents for a query as the importance of documents. If a subtopic has high relevance to a document, a high Weight is assigned to DocumentImportance because this subtopic can represent the corresponding document. Since each DSst
                         depends on the number of words in st, we divide this score by the maximum value of DSst
                        s.

The final score (Score) for the popularity of each subtopic is obtained by the linear combination of STFIDF and DC:
                           
                              (5)
                              
                                 
                                    
                                       
                                          
                                             Score
                                             
                                                (
                                                st
                                                )
                                             
                                             =
                                             
                                                (
                                                1
                                                −
                                                λ
                                                )
                                             
                                             
                                                
                                                   STFIDF
                                                   (
                                                   st
                                                   )
                                                
                                                
                                                   average
                                                   
                                                   of
                                                   
                                                      
                                                         0.35
                                                         e
                                                         m
                                                      
                                                      
                                                         0
                                                         e
                                                         x
                                                      
                                                   
                                                   STFIDF
                                                   
                                                      s
                                                   
                                                
                                             
                                             +
                                             λ
                                             
                                                
                                                   DC
                                                   (
                                                   st
                                                   )
                                                
                                                
                                                   average
                                                   
                                                   of
                                                   
                                                      
                                                         0.35
                                                         e
                                                         m
                                                      
                                                      
                                                         0
                                                         e
                                                         x
                                                      
                                                   
                                                   DC
                                                   
                                                      s
                                                   
                                                
                                             
                                             .
                                          
                                       
                                    
                                 
                              
                           
                        In addition, DC is more useful for subtopic ranking when the subtopics are significantly more specific than the query. This is because noun phrases that make the query more specific can find a distinguishable set of highly relevant documents for the subtopic. Therefore, for each query, the weight λ in Score is selectively set according to the number of noun phrases in its primary subtopics:
                           
                              (6)
                              
                                 
                                    
                                       
                                          
                                             
                                                w
                                                at
                                             
                                             =
                                             
                                                
                                                   |
                                                   primary
                                                   
                                                   subtopics
                                                   
                                                   containing
                                                   
                                                   two
                                                   
                                                   noun
                                                   
                                                   phrases
                                                   
                                                   except
                                                   
                                                   a
                                                   
                                                   query
                                                   |
                                                
                                                
                                                   |
                                                   primary
                                                   
                                                   subtopics
                                                   
                                                   of
                                                   
                                                   a
                                                   
                                                   query
                                                   |
                                                
                                             
                                             .
                                          
                                       
                                    
                                 
                              
                           
                        
                     

@&#EXPERIMENTS@&#

@&#OVERVIEW@&#

For an experimental evaluation, we mined the subtopics for 100 Japanese queries of the NTCIR-9 subtopic mining task and 100 English queries of the TREC 2009 and 2010 web track diversity task (Clarke, Craswell, & Soboroff, 2009; Clarke, Craswell, Soboroff, & Cormack, 2010). In TREC, each query was given several subtopic descriptions to describe its representative search intentions. Although TREC only focused on the diversity of relevant documents, each of the TREC subtopic descriptions can be regarded similar to an NTCIR intent, which is a cluster of subtopics with similar search intentions of a query. This is because both of them can be helpful for human assessors to understand possible search intentions during the evaluation. Furthermore, the web track diversity task did not provide any information about the popularity of intents, so we used the simulated values proposed by Sakai et al. (2010). For each mined subtopic, two human assessors manually classified it into one of intents. If both assessors agreed that a subtopic could not be classified into any one, it was discarded because the subtopic was judged non-relevant or much less relevant to the query. If two assessors did not agree with each other in their classification, it was assigned a special intent category “others” with the lowest popularity. The average numbers of intents of the given queries were 10.91 and 4.60 for Japanese and English, respectively. We used only the Japanese web document collection ClueWeb09-JA and the English web document collection TREC Category B. To perform word segmentation and identify noun phrases, we used the Japanese MeCab POS tagger
                           3
                        
                        
                           3
                           
                              http://mecab.sourceforge.net.
                         and the English Stanford POS tagger.
                           4
                        
                        
                           4
                           
                              http://nlp.stanford.edu/software/tagger.shtml.
                        
                     

We implemented various proposed methods denoted by PROP-x-y, where x is a language parameter “J(Japanese)” or “E(English)” and y a scheme parameter “PT,” “HR,” “DC,” or “DCA.” The basic scheme PT used our simple patterns as well as STFIDF (Eq. (3)), without utilizing the hierarchical structure of subtopics to check the usefulness of the patterns. The main schemes HR, DC, and DCA used both the simple patterns and the hierarchical structure of subtopics. For estimating popularities, HR used only STFIDF, but DC and DCA both STFIDF and DC (Eq. (4)), where λ in Score (Eq. (5)) is set to 0.5 and wat
                         (Eq. (6)) respectively. We limited the number N of “highly relevant” documents to 200 by experiments, to avoid the excessive process. To fairly compare our methods against previous works, we implemented some baselines like BASE-x-z using the provided document collection only, where z is a scheme parameter “QS,” “AC,” or “BP.” QS was the same n-gram based approach (Bhatia et al., 2011) as in query suggestion. AC performed exactly the same process as ORG-S-J-1 (Song et al., 2011), which achieved the best performance for the Japanese subtopic mining task using anchor texts and URLs. BP extracted subtopics using only Pattern 1 and ranked them by STFIDF. In addition, the original results of ORG-S-J-1, newly named EXT-AC, were reported to compare the results using the limited and external resources. The top-K of the ranked subtopics (
                           
                              K
                              =
                              10
                              ,
                              20
                           
                        , and 30) were evaluated under the performance measures like I-rec (diversity measure), D-nDCG (relevance and popularity measure), and D
                           #
                        -nDCG (average of I-rec and D-nDCG, representative measure) (Sakai, 2011).

@&#RESULTS AND DISCUSSIONS@&#

In Tables 1–3
                        
                        
                        , the “bold” values represent the best performances among all the methods; the “gray” regions represent our proposed methods and results; the statistical significance at the 0.01/0.05 level is indicated by “Q/q,” “A/a,” and “B/b” for an improvement from the baseline BASE-J/E-QS, BASE-J/E-AC, and BASE-J/E-BP, respectively. As shown in the tables, our proposed methods achieved higher performances than the baselines at the top-10, 20, and 30 subtopics, and the performance differences between our main schemes and all the baselines were statistically significant. Especially, for our best methods and the best baselines, the significance probabilities (t-test, 2-tailed) of the mean D
                           #
                        -nDCG at the top-10, 20, and 30 subtopics were 0.005, 0.004, and 0.009 (p < 0.01) for Japanese; 0.019, 0.003, and 0.004 (p < 0.05) for English, respectively. At the top-10 subtopics for Japanese and English, the results of the mean D
                           #
                        -nDCG show that our main schemes HR, DC, and DCA can cover various search intentions of a query using its few (top-10) subtopics and appropriately maintain a balance between their popularity and diversity. PROP-J-DCA and PROP-E-DC were the best for each language, and as compared to the best baselines BASE-J-BP and BASE-E-QS, the mean D
                           #
                        -nDCG@10 of our best methods were improved by 9.96% and 4.63%, respectively. Furthermore, our best method for Japanese outperformed even EXT-AC that used external web documents from Microsoft’s in-house web search platform. This means that the proposed method can effectively utilize the limited resources and has the potential to obtain higher performance by using additional web documents. Meanwhile, because our schemes DC and DCA focus more on the popularities of subtopics, several subtopics which affect high diversity were not included in the top-10 subtopics.

At the top-20 and 30 subtopics for each language, the steady improvements of the mean D
                           #
                        -nDCG show that our main schemes can extract more relevant and various subtopics while considering a balance between their popularity and diversity. As compared to the best baselines BASE-J-BP/QS and BASE-E-QS, the mean D
                           #
                        -nDCG@20/30 of our best methods PROP-J-DCA and PROP-E-DC were improved by 11.10/10.89% and 6.75/6.31%, respectively.

For English subtopics, we achieved the best overall results with the proposed method using DC by setting λ in Score to 0.5. Our DCA scheme also achieved better performance than HR at the top-20 and 30 subtopics. In addition, we checked the results of the mean D
                           #
                        -nDCG for various setting of λ (from 0.0 to 1.0 in increments of 0.1 unit), and found that when the value of λ was between 0.1 and 0.7, the results were better (Fig. 5
                        (b)). This means that the appropriate and distinguishable popularities of subtopics were obtained from the importance of relevant documents. However, for Japanese subtopics, although our DCA scheme achieved the best results, it was not significantly different from the results of HR, and, in all cases, DC did not perform better than HR. Furthermore, for higher setting of λ, the values of the mean D
                           #
                        -nDCG decreased (Fig. 5(a)). One reason for the lower performance is that quite a number of useless terms, such as stop words, were erroneously regarded as keywords in subtopic candidates owing to the low quality of POS tagging for several incomplete sentences. For example, in our results, “のに三國屋 (even though Mikuniya)” and “や卯の花 (and a weigela)” were extracted as subtopic candidates of queries “三國屋 (Mikuniya)” and “卯の花 (a weigela)” since the POS tagger labeled “のに (even though)” and “や (and)” with “noun+particle” and “noun,” respectively. Although these subtopic candidates had high DC values because they covered many relevant documents for the queries, these candidates were not relevant to the queries. Therefore, we need to refine subtopic candidates in the subtopic extraction step. Another reason for the lower performance is that the disambiguated words which consist of two or more Kanjis (the pictograms derived from Chinese) except a query in subtopics were the more important factors in document retrieval than the query. These situations brought about that most of the highly relevant documents for the subtopics did not appear in the set of highly relevant documents for the query. This is exactly the reason that their DC values became too low, such as good subtopics “原油価格動向 (trend of crude oil price)” of a query “原油 (crude oil)” and “大気汚染と酸性雨 (air pollution and acid rain)” of a query “大気汚染 (air pollution)” were not selected as the final results because their top 200 relevant documents could not cover even 5 percent of the top 200 relevant documents for their queries. Therefore, in order to improve the results, we need an appropriate ranking method to consider the characteristics of languages.

In addition, as mentioned earlier, our DCA scheme got the best and relatively good performances for Japanese and English, respectively, by selective setting of λ in Score for each query. However, this scheme considering only the surface information of subtopics was not enough to decide more appropriate weights to DC and STFIDF. Although it is not shown in Tables 1–3, our in-depth analysis of evaluation results showed that DC is advantageous when a certain document has multiple intentions, while STFIDF is favorable when a document contains only a single intention. Checking the D
                           #
                        -nDCG of PROP-J-DC and PROP-E-DC for each query, we found many queries with higher performance than PROP-J-HR and lower performance than PROP-E-HR, respectively (Fig. 6
                        ). For each query that had high performance using DC, its two or more subtopics with different search intentions occurred together with high frequency in relevant documents, but the subtopics of other queries did not follow this pattern. Therefore, we expect to obtain better subtopic mining performance by giving more appropriate weights to DC and STFIDF based on a judgment as to whether or not relevant documents have multiple intentions.

Furthermore, our proposed methods consistently achieved good performance for the means I-rec and D-nDCG at the top-10, 20, and 30 subtopics. In other words, the proposed methods guarantee mining of good subtopics in terms of their relevance, popularity, and diversity. As compared to the best baselines, our best methods achieved 9.63%, 13.07%, 14.52%, 10.30%, 8.52%, and 5.76% improvements of the means I-rec@10, I-rec@20, I-rec@30, D-nDCG@10, D-nDCG@20, and D-nDCG@30 for Japanese; 8.84%, 10.53%, 10.26%, 0.81%, 2.67%, and 1.73% for English, respectively. As a summary, first, our proposed simple patterns used in the subtopic extraction step turned out to be very useful and effective in finding various relevant subtopics because PT achieved better performance than the baselines. Second, our proposed hierarchical structure at the subtopic ranking step also was proved to have a positive effect on the popularity and diversity because HR, and DC or DCA showed the best results as compared to the others.

@&#CONCLUSION@&#

This paper proposed a subtopic mining method based on simple patterns and a hierarchical structure of subtopic candidates using web documents for Japanese and English. In the subtopic extraction step, various relevant subtopic candidates were found using simple patterns of noun phrases and alternative partial-queries. In the subtopic ranking step, a three-level hierarchical structure of the subtopic candidates was constructed, and they were ranked using this structure and their estimated popularities. In experiments, at the top-10 subtopics, all of our proposed methods outperformed the baselines and even the method which used external web documents. This means that our methods cover various search intentions of a query by its few subtopics maintaining a balance between their popularity and diversity. Furthermore, our results were steadily improved at the top-20 and 30 subtopics because more relevant and various subtopics were extracted continuously. These results will be useful for various search scenarios and other subtopic mining tasks. As for future work, we still have some room for improvement such as refining subtopic candidates, designing an appropriate ranking method for each language, and combining our methods with open resource-based approaches. Further, a sophisticated evaluation of subtopic mining is also an important issue, especially in terms of balancing among diversity, popularity, and other factors.

@&#ACKNOWLEDGMENTS@&#

This work was partly supported by the ICT R&D program of MSIP/IITP (10041807), the SYSTRAN International corporation, the BK 21+ Project, and the National Korea Science and Engineering Foundation (KOSEF) (NRF-2010-0012662).

@&#REFERENCES@&#

