@&#MAIN-TITLE@&#Large-eddy simulation in a complex hill terrain enabled by a compact fractional step OpenFOAM® solver

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           More transparency to CFD softwares gained via high-level open source developments.


                        
                        
                           
                           A generic ‘recipe’ provided for implementation of a new LES solver in OpenFOAM.


                        
                        
                           
                           Wall function implementation with environmental focus discussed.


                        
                        
                           
                           LES code validation for a challenging flow case over complex hill terrain.


                        
                        
                           
                           LES shows good agreement with reference data.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

OpenFOAM®

Runge–Kutta

Projection methods

Incompressible flows

Bolund hill

Complex terrain

@&#ABSTRACT@&#


               
               
                  We report computational fluid dynamics (CFD) code developments using the high-level programming syntax of the open source C++ library OpenFOAM®. CFD simulations utilizing the large-eddy simulation (LES) approach are carried out using the developed code in a real-world application. We investigate wind flowing over the Bolund hill, Denmark. In the present configuration a west–east wind meets the steep west side of the hill. Such conditions lead to flow separation at the location of a sharp cliff. A full scale simulation, with a simulation duration of over one month, is carried out on a supercomputer. Physically, about 45min of real time is simulated in the LES enabling the statistical averaging of the results. The novelty of the paper consists of the following features: (1) we report validation results of the newly developed LES code for the Bolund hill case, (2) we show the high-level LES solver code in its entirety in a few tens of code lines which promotes transparency in CFD-code development in the OpenFOAM® environment, (3) the study is the first study to use LES in pointing out the complex 3d characteristics of the Bolund hill case with the computationally challenging west–east (270°) wind direction, and (4) based on the comparison with previous experimental data, and Reynolds averaged Navier–Stokes (RANS) simulations, the present LES gives so far the best match for the turbulent kinetic energy increase at the considered measurement positions.
               
            

@&#INTRODUCTION@&#

For some time already, the open source C++ code OpenFOAM® has been changing the way engineers and researchers can numerically solve partial differential equations (PDE’s) related to physical conservation laws using the finite volume method [1,2]. The high-level programming syntax of OpenFOAM® mimics the mathematical notation of PDE’s and it provides a meaningful, relatively straightforward opportunity to write your own CFD codes within a reasonable time frame [3–14]. Such features are particularly tempting for academics for whom a thorough understanding about the details of the implementation of various simulation algorithms often plays a major role. In fact, the compact programming syntax of OpenFOAM® also provides a meaningful opportunity for the enhanced dissemination of scientific results as the actual solver code implementation can be discussed together with new findings within publications [3,4,9].

Recently, another benefit of open source CFD solver programming has been pointed out by Vuorinen et al. [3]. Vuorinen et al. noted that in the PISO pressure correction algorithm of the 2.0.1 version of the OpenFOAM® code, an artificial ad hoc damping term was introduced in the algorithmic implementation of the mass flux. The damping term was not a part of the original implementation by Issa [15] and it was noted to cause heavy dissipation of kinetic energy in certain flow cases although the influence of the ‘extra term’ remained very small in certain other cases [3]. Such observations would not have been possible in closed-source numerical software where similar details may equally well exist. In the present paper, we discuss the implementation of a LES code for turbulent flows using OpenFOAM®, and validate the code in a real-world complex hill terrain.

In the past, Reynolds averaged Navier–Stokes simulation (RANS) has been the traditional technique for predicting the time-averaged flow in most engineering applications including wind engineering. In RANS all the turbulent motions are modeled using a turbulence model. In particular two-equation turbulence models have been widely utilized for wind prediction over complex terrains such as the Askervein hill located in Scotland [16–19], the Serra das Meadas mountains located in the north of Portugal [20], and over the Blashaval hill located in Scotland as well [21]. To date, the RANS based models are considered as a good compromise between the accuracy and the computational cost [22,23]. Although RANS models perform reasonably well for the mean wind prediction over such topographies, they may not perform well in flows containing complex phenomena such as streamline curvature, acceleration, deceleration and separation as the model constants are typically calibrated for simple, canonical flows such as turbulent channel flow [24]. For example, Abdi et al. [22] noted the challenge of predicting wakes in separating flow using RANS. For example, in a wind turbine CFD simulation, such disability of a method of predicting flow unsteadiness, could result in failure in turbine blade design, or non-optimal inter-spacing of the turbines in a wind park.

In the present paper, we use LES turbulence modeling approach [24]. Although RANS simulations have been carried out on environmental flows extensively in the past, the application of LES over a real topography is not so common due to various challenges. In contrast to RANS, in LES only the subgrid scale turbulence is modeled and the flow unsteadiness is thereby explicitly resolved on the grid scale. As a drawback, LES requires typically much higher spatial resolution resulting in substantially longer computational times [24]. Special attention is required in wall-modeling as the heterogenous ground-roughness requires specialized wall functions. Additionally, the complex surface topology requires a fine grid in LES in order for the near-wall turbulence structures and flow separation at sharp edges to be adequately captured. Further, the inflow boundary condition and fully developed turbulent flow needs to be modeled using, e.g. the flow recirculation technique. Thereby, to date only a few LES studies in environmental applications have been reported of which many are involved in simulating wind flow over the Askervein hill [25–30].

Indeed, the Askervein hill project [31] is one of the best-known experimental field campaigns for the validation of numerical codes and turbulence models. However, it should be noted that the hill in question has a relatively smooth terrain with almost two-dimensional surface topology [23]. In 2007–2008, Berg et al. [32] performed an experimental field campaign of three months over another environmental site, the Bolund hill. This research site is located in the coastal area of Denmark and a vast number of wind velocity measurements from the hill exist enabling a comparison also with the present LES. Although the Bolund hill is a relatively small hill (12m high), it has a more challenging topography than that of the Askervein hill. For example, the steep slope and the sharp cliff of the Bolund hill produce complex three-dimensional flow features which make the Bolund hill a relatively challenging, and also quite unexplored, test case for numerical codes [32].

Only a few previous numerical studies have been reported on the Bolund hill. Prospathopoulos et al. [23] carried out the first RANS simulations finding quite good agreement between the data by Berg et al. [32]. Diebold et al. [34] employed LES together with the immersed boundary method for simulating flow over the Bolund hill on relatively coarse grid resolutions. Thereby, the small number of previous studies motivates gaining further insight on using LES to capture the flow unsteadiness around the Bolund hill, and to compare the simulations with (1) the experiments by Berg et al. [32] and (2) to the previous RANS by Prospathopoulos et al. [23]. We note that Diebold et al. [34] did not show the LES data for the wind direction 270°, and thus there seems to be no previous LES validation data for these conditions.

For the present authors, the greatest benefits of OpenFOAM® have been (1) ability to carry out license free CFD, (2) the applicability of the code to parallel computing, and (3) the flexibility of the high-level code syntax which provides an opportunity to implement new flow solvers, often, using essentially only a few tens of code lines. The particular focus of our past studies has been in the development of well-known, existing simulation algorithms which are highly common in academic studies but which are not commonly available in OpenFOAM®. For example, Vuorinen et al. [3,8] implemented a density based fourth order Runge–Kutta solver which was utilized for 3d large-eddy simulations of supersonic jets [8,11]. A solver for such high speed flow with turbulence and shock waves did not exist previously in OpenFOAM® and it was thereby necessary to write a new density based solver. With regard to the present paper, Vuorinen et al. [3,7] utilized OpenFOAM® to write an incompressible flow solver based on the fourth order Runge–Kutta (RK) time integration, and the projection method for pressure–velocity coupling [28]. The new incompressible solver, called rk4projectionFoam, was written at the Aalto University in 2011. The solver was written as an alternative, low-dissipative method to the standard pisoFoam solver based on second order time integration and the PISO pressure–velocity coupling. The encouraging experience of our work is that writing such codes is a relatively straightforward task. For example, rk4projectionFoam was programmed in just a few days even though at that time our experience of OpenFOAM® scripting was still rather limited.

Our previous studies have demonstrated the basic principles and ideas of rk4projectionFoam for simple geometries together with comprehensive validation studies for laminar the inviscid 2d Taylor–Green vortex, the 2d lid-driven cavity flow at two Reynolds numbers Re=2500 [3] and 10,000 [7], as well as turbulent channel flows at friction Reynolds numbers 
                        
                           
                              
                                 Re
                              
                              
                                 τ
                              
                           
                           =
                           180
                        
                      
                     [3] and 
                        
                           
                              
                                 Re
                              
                              
                                 τ
                              
                           
                           =
                           590
                        
                      
                     [7]. Moreover, the previous studies showed that rk4projectionFoam is computationally efficient, and typically numerically less dissipative than the standard pisoFoam solver of OpenFOAM® [3]. For example, LES studies on a 3d shear layer showed that rk4projectionFoam was approximately 50% faster than pisoFoam. Further, simulation of turbulent channel flow showed that rk4projectionFoam was marginally faster than pisoFoam. Based on the experiences gained in [3,7] on simplified Cartesian geometries, we decided to continue developments of rk4projectionFoam, and evaluate its performance in realistic, complex geometries which is the topic of the present paper.

Here, we report an outcome of Finnish cross-disciplinary collaboration between Combustion and Thermodynamics research group at the Aalto University School of Engineering, Department of Energy Technology, and the Wind Engineering research group at the Lappeenranta University of Technology (LUT). Since 2010, the group at Aalto has been focusing on the development of compressible and incompressible Runge–Kutta based solvers for internal combustion engine related flows using OpenFOAM® [3,7,8,11]. The group at LUT has been utilizing the rk4projectionFoam solver with the particular focus of gathering understanding on the effect of complex landscape on choosing the optimal location of wind parks. The computational examples of the present study focus on the utilization of rk4projectionFoam for LES of wind flow over the Bolund hill [32].

The paper has three objectives. First, we aim to provide a brief, yet informative, description of how a new LES solver based on the Runge–Kutta projection method can be implemented using the OpenFOAM® software. This solver is not available in the standard OpenFOAM® release which relies on the PISO [15] pressure correction method. The solver is very short in implementation allowing the complete description of the fluid dynamics part of the code. Second, the extremely high Reynolds number of environmental flows together with rough surfaces enforces one to resort to wall functions. Thereby, one objective is to provide a brief description on the practical implementation of a new wall function encoding information on the surface roughness of physical terrain, e.g. due to vegetation and rocks. Such a rough wall function is also not available in the standard OpenFOAM® release. Third, we present examples of LES of wind flow over the Bolund hill and compare the results with experimental measurement data, and previous RANS simulations in order to validate our solver for real-life flow applications. The present paper provides, to our knowledge, the first insights into the practical utilization of OpenFOAM® in environmental wind flows covering the full path from the practical implementation of a whole simulation code to the full scale application in a physical landscape. The developments herein promote the transparency of CFD codes that are applied for environmental flows or any other generic flow configurations.

In the present paper, we implement flow solvers for incompressible flows as described by the Navier–Stokes equations:
                           
                              (1)
                              
                                 
                                    
                                       ∂
                                       u
                                    
                                    
                                       ∂
                                       t
                                    
                                 
                                 +
                                 ∇
                                 ·
                                 (
                                 uu
                                 )
                                 =
                                 -
                                 ∇
                                 p
                                 +
                                 ν
                                 Δ
                                 u
                              
                           
                        which is of the general form 
                           
                              NS
                              =
                              NS
                              (
                              u
                              ,
                              p
                              ,
                              …
                              )
                              =
                              0
                           
                        . In Eq. (1) the convective term is 
                           
                              C
                              =
                              ∇
                              ·
                              (
                              uu
                              )
                           
                        , the pressure gradient is 
                           
                              P
                              =
                              -
                              ∇
                              p
                           
                        , and the viscous term is 
                           
                              D
                              =
                              ν
                              Δ
                              u
                           
                        . Incompressibility of the fluid is guaranteed by the continuity equation
                           
                              (2)
                              
                                 ∇
                                 ·
                                 u
                                 =
                                 0
                                 .
                              
                           
                        Taking divergence from both sides of Eq. (1) leads to the Poisson equation for pressure
                           
                              (3)
                              
                                 Δ
                                 p
                                 =
                                 -
                                 ∇
                                 ·
                                 C
                                 .
                              
                           
                        Eq. (3) is an elliptic equation implying global coupling between velocity and pressure.

Projection methods link the pressure–velocity coupling to the well-known Helmholtz-decomposition [28,37]. In the decomposition, a scalar potential, i.e. pressure p is required such that:
                           
                              (4)
                              
                                 u
                                 =
                                 
                                    
                                       u
                                    
                                    
                                       ∗
                                    
                                 
                                 -
                                 ∇
                                 p
                                 .
                              
                           
                        In Eq. (4) 
                        
                           
                              ∇
                              ·
                              
                                 
                                    u
                                 
                                 
                                    ∗
                                 
                              
                              
                              ≠
                              
                              0
                           
                        , 
                           
                              ∇
                              ·
                              u
                              =
                              0
                           
                         and 
                           
                              ∇
                              ×
                              ∇
                              p
                              =
                              0
                           
                         since the gradient of any scalar field is curl-free. It follows that p is a solution to the Poisson equation. Hence, the projection method is straightforward to understand taking the explicit Euler method as an example. First, an intermediate velocity 
                           
                              
                                 
                                    u
                                 
                                 
                                    ∗
                                 
                              
                           
                         is evaluated using only 
                           
                              C
                           
                         and 
                           
                              D
                           
                         using data from timestep n. Applying the Euler method over a timestep 
                           
                              Δ
                              t
                           
                         yields
                           
                              (5)
                              
                                 
                                    
                                       u
                                    
                                    
                                       ∗
                                    
                                 
                                 =
                                 
                                    
                                       u
                                    
                                    
                                       n
                                    
                                 
                                 +
                                 Δ
                                 t
                                 (
                                 
                                    
                                       D
                                    
                                    
                                       n
                                    
                                 
                                 -
                                 
                                    
                                       C
                                    
                                    
                                       n
                                    
                                 
                                 )
                                 .
                              
                           
                        Based on Eq. (4), divergence is removed from 
                           
                              
                                 
                                    u
                                 
                                 
                                    ∗
                                 
                              
                           
                         using pressure gradient 
                           
                              P
                           
                         when p has been solved from Eq. (3). Hence, in fractional step, fourth order Runge–Kutta (RK4) projection methods the velocity field is time integrated explicitly using RK4 similar to solving ordinary differential equations, and in-between the four substeps, the divergence can be removed as based on the Helmholtz decomposition.

In direct numerical simulation (DNS) the NS-equations are solved as such using fine space and time resolution. In LES, the resolution is coarser and Eq. (1) is solved for the spatially filtered variables 
                           
                              
                                 
                                    u
                                 
                                 
                                    ̃
                                 
                              
                           
                        , 
                           
                              
                                 
                                    p
                                 
                                 
                                    ˆ
                                 
                              
                           
                         with additional subgrid scale (SGS) terms appearing as source terms in the equations. The LES equations take the form 
                           
                              NS
                              (
                              
                                 
                                    u
                                 
                                 
                                    ̃
                                 
                              
                              ,
                              
                                 
                                    p
                                 
                                 
                                    ˆ
                                 
                              
                              ,
                              …
                              )
                              =
                              
                                 
                                    τ
                                 
                                 
                                    sgs
                                 
                              
                           
                        , where 
                           
                              
                                 
                                    τ
                                 
                                 
                                    sgs
                                 
                              
                           
                         requires modeling. Here, we choose the one-equation eddy-viscosity SGS approach by Yoshizawa et al. [38] where 
                           
                              
                                 
                                    k
                                 
                                 
                                    sgs
                                 
                              
                           
                         obeys the following transport equation:
                           
                              (6)
                              
                                 
                                    
                                       ∂
                                       
                                          
                                             k
                                          
                                          
                                             sgs
                                          
                                       
                                    
                                    
                                       ∂
                                       t
                                    
                                 
                                 +
                                 
                                    
                                       ∂
                                    
                                    
                                       ∂
                                       
                                          
                                             x
                                          
                                          
                                             j
                                          
                                       
                                    
                                 
                                 (
                                 
                                    
                                       u
                                    
                                    
                                       j
                                    
                                 
                                 
                                    
                                       k
                                    
                                    
                                       sgs
                                    
                                 
                                 )
                                 =
                                 
                                    
                                       ∂
                                    
                                    
                                       ∂
                                       
                                          
                                             x
                                          
                                          
                                             j
                                          
                                       
                                    
                                 
                                 
                                    
                                       
                                          (
                                          ν
                                          +
                                          
                                             
                                                ν
                                             
                                             
                                                sgs
                                             
                                          
                                          )
                                          
                                             
                                                ∂
                                                
                                                   
                                                      k
                                                   
                                                   
                                                      sgs
                                                   
                                                
                                             
                                             
                                                ∂
                                                
                                                   
                                                      x
                                                   
                                                   
                                                      j
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                                 +
                                 
                                    
                                       P
                                    
                                    
                                       
                                          
                                             k
                                          
                                          
                                             sgs
                                          
                                       
                                    
                                 
                                 -
                                 
                                    
                                       C
                                    
                                    
                                       ∊
                                    
                                 
                                 
                                    
                                       
                                          
                                             k
                                          
                                          
                                             sgs
                                          
                                          
                                             3
                                             /
                                             2
                                          
                                       
                                    
                                    
                                       Δ
                                    
                                 
                              
                           
                        where 
                           
                              
                                 
                                    P
                                 
                                 
                                    
                                       
                                          k
                                       
                                       
                                          sgs
                                       
                                    
                                 
                              
                              =
                              2
                              
                                 
                                    ν
                                 
                                 
                                    sgs
                                 
                              
                              
                                 
                                    S
                                 
                                 
                                    ij
                                 
                              
                              
                                 
                                    S
                                 
                                 
                                    ij
                                 
                              
                           
                        , 
                           
                              
                                 
                                    S
                                 
                                 
                                    ij
                                 
                              
                           
                         is the resolved rate of strain tensor, 
                           
                              
                                 
                                    ν
                                 
                                 
                                    sgs
                                 
                              
                              =
                              
                                 
                                    C
                                 
                                 
                                    k
                                 
                              
                              
                                 
                                    k
                                 
                                 
                                    sgs
                                 
                                 
                                    1
                                    /
                                    2
                                 
                              
                              Δ
                           
                        , 
                           
                              Δ
                              =
                              
                                 
                                    V
                                 
                                 
                                    1
                                    /
                                    3
                                 
                              
                           
                        , where V is the volume of the computational cell. 
                           
                              
                                 
                                    C
                                 
                                 
                                    k
                                 
                              
                              =
                              0.094
                           
                         and 
                           
                              
                                 
                                    C
                                 
                                 
                                    ∊
                                 
                              
                              =
                              1.048
                           
                        . The filtered LES equations can then be closed by setting 
                           
                              
                                 
                                    τ
                                 
                                 
                                    sgs
                                 
                              
                              =
                              ∇
                              ·
                              (
                              
                                 
                                    ν
                                 
                                 
                                    sgs
                                 
                              
                              ∇
                              
                                 
                                    u
                                 
                                 
                                    ̃
                                 
                              
                              )
                           
                        . From here on, the notation is simplified and we refer to the LES-filtered velocity simply as 
                           
                              u
                           
                        . The spatial discretization utilizes the second order accurate finite volume method [1–3].

High Reynolds number flows, such as the present Bolund hill case, need to utilize a wall-function approach in order to account for the thin, turbulent boundary layers. Also the surface roughness, e.g. due to vegetation and waves, can be conveniently accounted for using wall functions. In our wall function, the wall shear stress 
                           
                              
                                 
                                    τ
                                 
                                 
                                    w
                                 
                              
                           
                         is obtained by prescribing the boundary condition of the kinematic SGS viscosity 
                           
                              
                                 
                                    ν
                                 
                                 
                                    sgs
                                 
                              
                           
                         at the wall by using the logarithmic law of the rough wall
                           
                              (7)
                              
                                 u
                                 =
                                 
                                    
                                       
                                          
                                             u
                                          
                                          
                                             τ
                                          
                                       
                                    
                                    
                                       κ
                                    
                                 
                                 ln
                                 
                                    
                                       
                                          
                                             
                                                z
                                             
                                             
                                                
                                                   
                                                      z
                                                   
                                                   
                                                      0
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           
                        where 
                           
                              
                                 
                                    u
                                 
                                 
                                    τ
                                 
                              
                           
                         is the friction velocity, 
                           
                              κ
                              =
                              0.41
                           
                         is the von Kármán constant, u is the instantaneous LES resolved velocity, z is the distance from the ground level and 
                           
                              
                                 
                                    z
                                 
                                 
                                    0
                                 
                              
                           
                         is the ground roughness length. The wall shear stress can be defined using an effective viscosity 
                           
                              
                                 
                                    μ
                                 
                                 
                                    eff
                                 
                              
                              =
                              (
                              μ
                              +
                              
                                 
                                    μ
                                 
                                 
                                    sgs
                                 
                              
                              )
                           
                         such that
                           
                              (8)
                              
                                 
                                    
                                       τ
                                    
                                    
                                       w
                                    
                                 
                                 =
                                 (
                                 μ
                                 +
                                 
                                    
                                       μ
                                    
                                    
                                       sgs
                                    
                                 
                                 )
                                 
                                    
                                       du
                                    
                                    
                                       dz
                                    
                                 
                                 ≈
                                 (
                                 μ
                                 +
                                 
                                    
                                       μ
                                    
                                    
                                       sgs
                                    
                                 
                                 )
                                 
                                 
                                    
                                       
                                          
                                             u
                                          
                                          
                                             p
                                          
                                       
                                    
                                    
                                       
                                          
                                             z
                                          
                                          
                                             p
                                          
                                       
                                    
                                 
                              
                           
                        where μ is the fluid viscosity, 
                           
                              
                                 
                                    μ
                                 
                                 
                                    sgs
                                 
                              
                           
                         is SGS viscosity and subscript p indicates the values of velocity at the first interior nodes from the wall. Using the definitions of the friction velocity 
                           
                              
                                 
                                    u
                                 
                                 
                                    τ
                                 
                              
                              =
                              
                                 
                                    
                                       
                                          τ
                                       
                                       
                                          w
                                       
                                    
                                    /
                                    ρ
                                 
                              
                           
                         and the kinematic viscosity 
                           
                              ν
                              =
                              (
                              μ
                              /
                              ρ
                              )
                           
                         into the Eq. (8), we get
                           
                              (9)
                              
                                 
                                    
                                       u
                                    
                                    
                                       τ
                                    
                                    
                                       2
                                    
                                 
                                 =
                                 (
                                 ν
                                 +
                                 
                                    
                                       ν
                                    
                                    
                                       sgs
                                    
                                 
                                 )
                                 
                                 
                                    
                                       
                                          
                                             u
                                          
                                          
                                             p
                                          
                                       
                                    
                                    
                                       
                                          
                                             z
                                          
                                          
                                             p
                                          
                                       
                                    
                                 
                                 .
                              
                           
                        Consequently, the boundary condition for 
                           
                              
                                 
                                    ν
                                 
                                 
                                    sgs
                                 
                              
                           
                         at the wall can be calculated as
                           
                              (10)
                              
                                 
                                    
                                       ν
                                    
                                    
                                       sgs
                                    
                                 
                                 =
                                 
                                    
                                       
                                          
                                             u
                                          
                                          
                                             τ
                                          
                                          
                                             2
                                          
                                       
                                    
                                    
                                       (
                                       
                                          
                                             u
                                          
                                          
                                             p
                                          
                                       
                                       /
                                       
                                          
                                             z
                                          
                                          
                                             p
                                          
                                       
                                       )
                                    
                                 
                                 -
                                 ν
                              
                           
                        in which 
                           
                              
                                 
                                    u
                                 
                                 
                                    τ
                                 
                              
                           
                         follows from the Eq. (8),
                           
                              (11)
                              
                                 
                                    
                                       u
                                    
                                    
                                       τ
                                    
                                 
                                 =
                                 
                                    
                                       
                                          
                                             u
                                          
                                          
                                             p
                                          
                                       
                                       κ
                                    
                                    
                                       ln
                                       (
                                       
                                          
                                             z
                                          
                                          
                                             p
                                          
                                       
                                       /
                                       
                                          
                                             z
                                          
                                          
                                             0
                                          
                                       
                                       )
                                    
                                 
                                 .
                              
                           
                        
                     

OpenFOAM® includes several examples in writing high-level solvers for various CFD-applications. The basic principle is typically simple: old, existing code is copied, renamed, modified, and compiled. Fig. 1
                         depicts this process schematically. In order to implement a new solver for the projection method we choose as a starting point an existing incompressible solver called pisoFoam, and delete the script inside the main while-loop (see Fig. 2
                        ).

As explained in the study by Vuorinen et al. [3] for the explicit Euler method, the projection method for the NS-equations can involve the calculation of the velocity increment using syntax similar to.
                           
                              
                                 
                                 
                                    
                                       
                                          phi
                                          
                                          =
                                          
                                          interpolate(U)&mesh.Sf();
                                       
                                    
                                    
                                       
                                          dU 
                                          
                                          =
                                          
                                          dt∗(nu∗fvc::laplacian(U) - fvc::div(phi, U));
                                       
                                    
                                 
                              
                           
                        which evaluates the momentum flux on cell faces as a surfaceScalarField 
                        
                           
                              ϕ
                              =
                              u
                              ·
                              n
                              
                              dS
                           
                         and the velocity increment at the cell centroids as a volVectorField 
                        
                           
                              δ
                              u
                              =
                              Δ
                              t
                              (
                              D
                              -
                              C
                              )
                           
                        . Consequently, one finds an intermediate velocity 
                           
                              
                                 
                                    u
                                 
                                 
                                    ∗
                                 
                              
                              =
                              
                                 
                                    u
                                 
                                 
                                    n
                                 
                              
                              +
                              δ
                              u
                           
                         and then removes divergence using the pressure gradient P. The full, functional part of rk4projectionFoam is provided in Fig. 1 to implement the fourth order Runge–Kutta projection method. The high-level implementation of fluid dynamics part within the main while-loop of the code is less than 40 lines long, the code runs in parallel, and the code works readily in arbitrary geometries on unstructured grids. Here, we use the classical choice for the time-stepping coefficients: 
                           
                              
                                 
                                    a
                                 
                                 
                                    1
                                 
                              
                              =
                              
                                 
                                    1
                                 
                                 
                                    6
                                 
                              
                              ,
                              
                              
                                 
                                    a
                                 
                                 
                                    2
                                 
                              
                              =
                              
                                 
                                    1
                                 
                                 
                                    3
                                 
                              
                              ,
                              
                              
                                 
                                    a
                                 
                                 
                                    3
                                 
                              
                              =
                              
                                 
                                    1
                                 
                                 
                                    3
                                 
                              
                           
                        , and 
                           
                              
                                 
                                    a
                                 
                                 
                                    4
                                 
                              
                              =
                              
                                 
                                    1
                                 
                                 
                                    6
                                 
                              
                           
                        . We note that Eq. (6) is integrated in time numerically using the second order backward implicit method and it is solved after the fourth (last) sub-step of the RK4 method. This is seen at the end of the while-loop in Fig. 4 where a call to update 
                           
                              
                                 
                                    k
                                 
                                 
                                    sgs
                                 
                              
                           
                         is implemented with syntax turbulence->correct().

As mentioned, the rk4projectionFoam code has been previously validated for laminar flows, and for turbulent channel flow at 
                           
                              
                                 
                                    Re
                                 
                                 
                                    τ
                                 
                              
                              =
                              180
                           
                         
                        [3], and 
                           
                              
                                 
                                    Re
                                 
                                 
                                    τ
                                 
                              
                              =
                              590
                           
                         
                        [7]. Here, we show a brief comparison of the radial statistics for the mean and root-mean-square velocities for turbulent pipe flow at 
                           
                              
                                 
                                    Re
                                 
                                 
                                    τ
                                 
                              
                              =
                              360
                           
                         for which DNS data by Eggels et al. [39] exists. As noted from Fig. 3
                        , for the present LES on a coarse grid (without a subgrid scale model), rk4projectionFoam and the pisoFoam both give results which, considering the coarse grid resolution, are in close agreement with the reference data by Eggels et al. [39]. In the previous study [3] it was concluded that, in parallel runs, the pisoFoam was typically somewhat slower than the rk4projectionFoam. For example, LES studies on a 3d shear layer showed that rk4projectionFoam was approximately 50% faster than pisoFoam. Also the time accuracy of pisoFoam is only of second order in contrast to the fourth order accuracy of rk4projectionFoam 
                        [3]. Hence, as our present LES is computationally very demanding lasting over one month of wall-clock time, from now on, we only focus on using the rk4projectionFoam solver.

In order to implement a new wall function a procedure similar to the one depicted in Fig. 1 is carried out. An existing wall function code is located, copied, and renamed consistently into a new wall function followed by the compilation of the code. Part of the new wall function implementation code is shown in Fig. 4
                        . It should be noted that the boundary condition on boundary cell faces can be easily set for 
                           
                              
                                 
                                    ν
                                 
                                 
                                    sgs
                                 
                              
                           
                         by looping over the boundary cell faces. The wall-function model is validated together with rk4projectionFoam by simulating a fully developed rough turbulent boundary-layer flow at the high friction Reynolds number of 
                           
                              
                                 
                                    Re
                                 
                                 
                                    τ
                                 
                              
                              =
                              7500
                           
                        . This test is carried out in a domain of size 
                           
                              4
                              ×
                              2
                              ×
                              1
                           
                        
                        m3 on a coarse Cartesian grid typical to environmental flows with 
                           
                              Δ
                              x
                              =
                              0.08
                           
                        
                        m and 
                           
                              Δ
                              y
                              =
                              Δ
                              z
                              =
                              0.04
                           
                        
                        m. The respective non-dimensional grid-spacings are 
                           
                              Δ
                              
                                 
                                    x
                                 
                                 
                                    +
                                 
                              
                              =
                              600
                           
                         and 
                           
                              Δ
                              
                                 
                                    y
                                 
                                 
                                    +
                                 
                              
                              =
                              Δ
                              
                                 
                                    z
                                 
                                 
                                    +
                                 
                              
                              =
                              300
                           
                        , respectively. The ground roughness length 
                           
                              
                                 
                                    z
                                 
                                 
                                    0
                                 
                              
                           
                         is set to 
                           
                              3.33
                              ×
                              
                                 
                                    10
                                 
                                 
                                    -
                                    5
                                 
                              
                           
                        
                        m. Fig. 5
                         compares the simulated mean streamwise velocity profile with the logarithmic velocity profile given in Eq. (7) as well as other rough log-law 
                           
                              
                                 
                                    U
                                 
                                 
                                    +
                                 
                              
                              =
                              (
                              1
                              /
                              κ
                              )
                              ln
                              (
                              
                                 
                                    z
                                 
                                 
                                    +
                                 
                              
                              /
                              
                                 
                                    k
                                 
                                 
                                    s
                                 
                                 
                                    +
                                 
                              
                              )
                              +
                              8.5
                           
                         using the relation 
                           
                              
                                 
                                    k
                                 
                                 
                                    s
                                 
                              
                              =
                              30
                              
                                 
                                    z
                                 
                                 
                                    0
                                 
                              
                           
                        . As seen from Fig. 5, very good agreement between the simulated and theoretical profiles is obtained using the newly implemented wall-function with a maximum velocity mismatch of less than 5% between LES and the logarithmic law.

@&#BACKGROUND@&#


                        Fig. 6
                         shows photos of the Bolund hill which is located north of Risø DTU (Technical University of Denmark) in the Roskilde Fjord, Denmark. The hill is approximately 12m high, 130m long, and 75m wide. Further, the hill is surrounded by the sea except on the east side where a narrow isthmus connects the site in question to the main land (see Fig. 6). In addition to an overview of the site, Fig. 6 shows the positions of the measuring masts employed during the field experiments. As mentioned previously, there has been an extensive field measurement campaign carried out at the Bolund hill for a period of three months in 2007–2008 by Berg et al. [32] and Bechmann et al. [33]. The experiments provide a new dataset for validating atmospheric flow models in a complex terrain.

The grid resolution, and the computational setup for the present LES are based on previous numerical simulations of wind flows over the Bolund hill [23–33]. For example, Prospathopoulos et al. [23] carried out RANS simulations over a computational domain of size 
                           
                              800
                              ×
                              420
                              ×
                              1000
                           
                        
                        m3. They concluded that for such a domain, a mesh of 
                           
                              152
                              ×
                              100
                              ×
                              45
                           
                         grid points is sufficient for achieving a grid independent solution for the time averaged wind speed, but a finer grid system of 
                           
                              250
                              ×
                              200
                              ×
                              45
                           
                         grid points is required in order to get a grid independent prediction of the turbulent kinetic energy. On the finest grid, the windwise grid spacing 
                           
                              Δ
                              x
                           
                         was fixed to 0.25m on the vertical escarpment, whereas the cross-wind spacing 
                           
                              Δ
                              y
                           
                         was 0.5m. The first vertical grid spacing next to the hill surface 
                           
                              Δ
                              z
                           
                         was 0.15m. In contrast, Diebold et al. [34] used an isotropic grid resolution with 
                           
                              Δ
                              x
                              =
                              Δ
                              y
                              =
                              Δ
                              z
                              =
                              1
                           
                        
                        m in the whole computational domain for their LES calculation, which is a substantially coarser mesh than in the studies by Prospathopoulos et al. [23].

In the present paper rk4projectionFoam is used to simulate wind flowing over the Bolund hill for the wind direction of 270°, that is, from west to east. To the best of our knowledge, this case has been previously investigated only once using LES by Diebold et al. [34]. However, the previous study [34] was carried out using the immersed boundary method (IBM) on a relatively coarse grid. The IBM is a numerical technique to incorporate terrain topology into a CFD simulation without a body conforming mesh. Hence, the previous study [34] used another way to model the physical geometry without conforming the mesh itself to the actual hill topology. Although Diebold et al. [34] investigated also the 270° case, they did not surprisingly show the results for the case but only used the results for evaluating e.g. variances of velocity for different flow directions. We note the general challenges of the 270° wind case which are related to the interaction between the wind and the sharp cliff. This matter will be further discussed later on in the paper.


                        Fig. 7
                         shows the computational setup for the present LES. The wind direction is aligned with the horizontal x-axis. LES is carried out over a computational domain of size 
                           
                              1210
                              ×
                              390
                              ×
                              120
                           
                        
                        m3 in the streamwise, spanwise, and vertical directions, respectively. From the viewpoint of meshing, the critical regions are (1) the hill surface in general, (2) the region around the sharp cliff edge, and (3) the vertical escarpment at the edge of the sharp cliff. An overview of the grid around the hill is shown in Fig. 8
                        . The grid is generated using the commercial software Pointwise which allows the design of high-quality, and body-conforming hexahedral meshes. The grid can then be converted to OpenFOAM® since OpenFOAM® accepts meshes generated by most of the major mesh generators and CAD systems.

We use a non-isotropic hexahedral grid with the finest grid spacing 
                           
                              Δ
                              x
                              =
                              0.31
                           
                        
                        m and 
                           
                              Δ
                              y
                              =
                              0.40
                           
                        
                        m in the region of the sharp cliff edge. On the hill surface outside the cliff, the horizontal grid spacings 
                           
                              0.31
                              
                              m
                              <
                              Δ
                              x
                              <
                              0.85
                           
                        
                        m, and 
                           
                              0.40
                              
                              m
                              <
                              Δ
                              y
                              <
                              0.70
                           
                        
                        m somewhat depending on the local details of the hill shape. As seen from Fig. 7, outside the hill, the grid is smoothly stretched in the horizontal directions so that 
                           
                              Δ
                              x
                           
                         and 
                           
                              Δ
                              y
                           
                         are close to 4m near the domain boundaries. Also the vertical grid spacing 
                           
                              Δ
                              z
                           
                         is smoothly stretched from 
                           
                              Δ
                              z
                              =
                              0.15
                           
                         m on the surface of the hill to 
                           
                              Δ
                              z
                              =
                              4.97
                           
                         m at the top boundary. This meshing strategy gives in total a grid consisting of 
                           
                              940
                              ×
                              428
                              ×
                              100
                              (
                              ≈
                              40
                              ×
                              
                                 
                                    10
                                 
                                 
                                    6
                                 
                              
                              )
                           
                         hexahedral finite volume cells. We note that a detailed mesh independence study on the present flow with different grid resolutions would require a highly time consuming simulation campaign with LES. A single LES run on the present case takes around 40days of wall-clock time using 512 processors. In reality, the total CPU time (40days) is actually several months in the present computation environment, because simulations can be only run in 3day continuous periods after which they should be restarted by sending them back to the simulation queue. Hence, instead of a mesh independence study, we further evaluate the quality of the results based on previous numerical and experimental data.

As seen in Fig. 6 (bottom), the hill center is defined as the point 
                           
                              x
                              =
                              y
                              =
                              0
                           
                        . The measurement mast M0 was installed approximately 180m upstream from the center of the hill for measuring the westerly reference wind. As suggested by Berg et al. [32], two different surface roughness parameters, 
                           
                              
                                 
                                    z
                                 
                                 
                                    0
                                 
                              
                              =
                              0.0003
                           
                         m and 
                           
                              
                                 
                                    z
                                 
                                 
                                    0
                                 
                              
                              =
                              0.015
                           
                         m, are used for the wall-function (see Eq. (10)) on the sea surface and at the hill surface respectively. The inflow boundary condition is a fully developed, turbulent flow which is conveniently implemented using the well-known flow recycling technique. The main principle of the recycling technique is also shown in Fig. 7 which shows how the instantaneous flow properties are sampled on a plane downstream of the inlet and mapped back to the inlet at each time step. The recycling technique develops the upstream boundary-layer flow together with the inflow turbulence. A further benefit of the method is that precursor simulations on separate meshes can be avoided, and thus simulations can be carried out on a single computational domain. In OpenFOAM®, such a boundary condition is termed ‘mapped’ and it can be declared similar to other boundary conditions in the input files.

The static pressure is fixed to a constant value at the outlet plane and the Neumann boundary condition is used for the rest of the flow variables. The slip boundary condition is used for all the flow variables at the top boundary, whereas periodic boundary conditions are set in the span-wise direction. The results are time averaged over a period of 600s in order to calculate the flow statistics. The wall-clock time for each LES calculation of the Bolund case is about 40days using 512 processor cores. Yet, we note that the total simulation time is actually several months since, in the present computation environment, simulations can be run in 3day periods after which they should be restarted by sending them back to the simulation queue. As a result of a relatively time consuming simulation campaign, about 2700s of physical time could be simulated using the Cray XC30 supercomputer in Finland.


                     Fig. 9
                      depicts the instantaneous and time-averaged flow fields around the hill. Animations of the instantaneous velocity field are provided as Supplementary material to this paper. According to Fig. 9 (top), the flow field is strongly affected by the hill. In particular, the edge of the cliff is noted to enhance the turbulence intensity locally. This is also seen from the instantaneous streamlines in Fig. 9 (middle), where the flow can be seen to be separated at several positions after the cliff edge at the lee-side of the hill. In Fig. 9 (bottom), the time-averaged streamlines reveal the forming recirculation zones at the edge of the cliff. Similar patterns of reversed flow in the same region were observed also in the field experiment [32]. Importantly, we note that the presence of the recirculation zone in the mean flow was not observed in the previous study by Prospathopoulos et al. [23].

Next, the LES-predicted time-averaged results are compared with the Bolund field measurements [32] and RANS study by Prospathopoulos et al. [23]. We remind that, to the best of our knowledge, comparison to previous LES studies for the wind direction of 270° seem to be non-existing. The results are compared with the data from the masts M7, M6, M3, and M8 installed along the Line B. Fig. 10
                      shows a comparison of the time-averaged velocity magnitude 
                        
                           S
                           /
                           
                              
                                 S
                              
                              
                                 0
                              
                           
                        
                      between present LES and previous studies. Here 
                        
                           
                              
                                 S
                              
                              
                                 0
                              
                           
                        
                      is the magnitude of velocity at the respective height from the reference mast M0. A very good agreement is obtained with field data except at 2m height of the mast M6. The mast M6 is installed right downstream from the vertical escarpment (see Fig. 8 (bottom)) where a recirculation zone with reversed flow occurs in a very small area near the surface. Although the present LES predicts the formation of this recirculation zone well (see Fig. 9 (bottom)), the simulated velocity profile is somewhat overestimated at distances close to the hill surface for the mast M6. In contrast, for mast M8 the velocity is underestimated.

In comparison to the previous RANS-model results by Prospathopoulos et al. [23], the present LES slightly overestimates the results at mast M6 (
                        
                           
                              
                                 Z
                              
                              
                                 agl
                              
                           
                           =
                           2
                        
                      m). In contrast to RANS, LES seems to underestimate the results at mast M8 especially at height 
                        
                           
                              
                                 Z
                              
                              
                                 agl
                              
                           
                           =
                           5
                        
                      m. Thus, when compared with the experimental results, the RANS model performs slightly better then the LES model for predicting the time-averaged velocity. However, the difference between the two numerical predictions is quite small. Further, some methodological differences can always be expected due to the unsteadiness, and random character of real-life situations.

In order to analyze the changes occurring in the velocity and the turbulent kinetic energy (TKE) due to the hill after the reference mast M0, the horizontal profiles of the speed-up 
                        
                           Δ
                           S
                        
                      and the TKE increase 
                        
                           Δ
                           K
                        
                      over the Line B can be analyzed. We consider these quantities from two different heights, 2m and 5m above the ground level (agl). The velocity speed-up 
                        
                           Δ
                           S
                        
                      and TKE increase 
                        
                           Δ
                           K
                        
                      are defined as
                        
                           (12)
                           
                              Δ
                              S
                              =
                              
                                 
                                    
                                       
                                          (
                                          S
                                          )
                                       
                                       
                                          
                                             
                                                Z
                                             
                                             
                                                agl
                                             
                                          
                                       
                                    
                                    -
                                    
                                       
                                          (
                                          
                                             
                                                S
                                             
                                             
                                                0
                                             
                                          
                                          )
                                       
                                       
                                          
                                             
                                                Z
                                             
                                             
                                                agl
                                             
                                          
                                       
                                    
                                 
                                 
                                    
                                       
                                          (
                                          
                                             
                                                S
                                             
                                             
                                                0
                                             
                                          
                                          )
                                       
                                       
                                          
                                             
                                                Z
                                             
                                             
                                                agl
                                             
                                          
                                       
                                    
                                 
                              
                           
                        
                     
                     
                        
                           (13)
                           
                              Δ
                              K
                              =
                              
                                 
                                    
                                       
                                          (
                                          K
                                          )
                                       
                                       
                                          
                                             
                                                Z
                                             
                                             
                                                agl
                                             
                                          
                                       
                                    
                                    -
                                    
                                       
                                          (
                                          
                                             
                                                K
                                             
                                             
                                                0
                                             
                                          
                                          )
                                       
                                       
                                          
                                             
                                                Z
                                             
                                             
                                                agl
                                             
                                          
                                       
                                    
                                 
                                 
                                    
                                       
                                          (
                                          
                                             
                                                S
                                             
                                             
                                                0
                                             
                                             
                                                2
                                             
                                          
                                          )
                                       
                                       
                                          
                                             
                                                Z
                                             
                                             
                                                agl
                                             
                                          
                                       
                                    
                                 
                              
                           
                        
                     where S and K is the simulated or measured mean wind speed and TKE at any mast location, respectively, 
                        
                           
                              
                                 S
                              
                              
                                 0
                              
                           
                        
                      and 
                        
                           
                              
                                 K
                              
                              
                                 0
                              
                           
                        
                      are the corresponding values at the reference mast M0, and 
                        
                           
                              
                                 Z
                              
                              
                                 agl
                              
                           
                        
                      is the height above the ground or sea level. Thereby, the factors 
                        
                           Δ
                           S
                        
                      and 
                        
                           Δ
                           K
                        
                      relate the change in wind speed, and TKE to the respective value at the mast M0.

According to 
                     Fig. 12
                     , the LES prediction of the velocity speed-up is satisfactory everywhere except at essentially two locations: at 2m height for M6, and at 5m height for M8. At the respective locations, also the RANS model has some difficulty in predicting the speed-up. The negative speed-up at both heights of M8 is underestimated by the RANS model. The RANS model fails in predicting the flow separation on the lee-side (M8), whereas LES overestimates the flow separation even when using the wall function. In contrast, the prediction of the TKE increase is very good at the respective positions.

In fact, Fig. 13
                      confirms that the TKE increase is predicted better than the speed-up almost everywhere including the masts (M6 and M8) installed at the reversed flow regions. Yet, we note that the RANS model does not predict the TKE increase as well as the velocity speed-up. However, despite this drawback, the RANS model successfully predicted the extreme gradient of TKE increase at only 2m height of M6. At M7, both RANS and LES predict the measured speed-up. Apart from that, the RANS results appear somewhat poorer than the present LES results at the masts M6 (
                        
                           
                              
                                 Z
                              
                              
                                 agl
                              
                           
                           =
                           5
                        
                      m), M3 and M8. Similar observations can be also seen from the vertical profiles of the TKE increase in Fig. 11. The reason could be simply the fact that LES directly resolves the important unsteadiness of the turbulent flow motions at the scales larger or equal to the grid size, whereas the RANS approach models the turbulent fluctuations using a turbulence model at all scales of the flow. Indeed, this is an important motivation behind the LES approach.

Next, the prediction error for the present LES model with respect to the field measurements is calculated by comparing the simulated and experimental values pointwise. The error compares the performance of the present LES code with other CFD and experimental flow models reported previously for the Bolund case. The error of the simulated speed-up 
                        
                           
                              
                                 R
                              
                              
                                 S
                              
                           
                        
                      is defined
                        
                           (14)
                           
                              
                                 
                                    R
                                 
                                 
                                    S
                                 
                              
                              =
                              100
                              (
                              Δ
                              
                                 
                                    S
                                 
                                 
                                    s
                                 
                              
                              -
                              Δ
                              
                                 
                                    S
                                 
                                 
                                    m
                                 
                              
                              )
                           
                        
                     and the error of the simulated TKE 
                        
                           
                              
                                 R
                              
                              
                                 TKE
                              
                           
                        
                      is
                        
                           (15)
                           
                              
                                 
                                    R
                                 
                                 
                                    TKE
                                 
                              
                              =
                              100
                              
                                 
                                    
                                       
                                          
                                             (
                                             
                                                
                                                   I
                                                
                                                
                                                   s
                                                
                                             
                                             -
                                             
                                                
                                                   I
                                                
                                                
                                                   0
                                                   s
                                                
                                             
                                             )
                                             -
                                             (
                                             
                                                
                                                   I
                                                
                                                
                                                   m
                                                
                                             
                                             -
                                             
                                                
                                                   I
                                                
                                                
                                                   0
                                                   m
                                                
                                             
                                             )
                                          
                                          
                                             
                                                
                                                   I
                                                
                                                
                                                   0
                                                   m
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           
                        
                     where 
                        
                           Δ
                           S
                        
                      is the speed-up, 
                        
                           I
                           =
                           
                              
                                 
                                    
                                       
                                          K
                                       
                                    
                                 
                              
                           
                           
                              
                                 S
                              
                              
                                 0
                              
                           
                        
                     , subscript zero denotes that TKE is evaluated at the reference locations, and the subscripts m and s denote the measured and simulated values, respectively. The mean absolute speed-up 
                        
                           (
                           
                              
                                 R
                              
                              
                                 s
                              
                           
                           )
                        
                      and TKE 
                        
                           (
                           
                              
                                 R
                              
                              
                                 TKE
                              
                           
                           )
                        
                      errors from the present and previous results of the 270° wind direction are shown at Table 1
                     . Note that the error reported by Bechmann et al. [33] for the first five model types in Table 1 is the mean error over two wind directions: 270° and 239°, whereas the errors from the present LES results, and those by Prospathopoulos et al. [23] and Diebold et al. [34] are only for the 270° wind direction.


                     Table 1 shows that the mean absolute simulation errors for the present LES model are 10.9% and 19.3% for predicting the velocity speed-up and the TKE increase, respectively. The velocity speed-up error for our LES model is only marginally higher than the value reported by Prospathopoulos et al. [23] for the 270° wind direction. Thus as seen in Table 1, the present LES shows essentially as good velocity speed-up in the studied wind direction as the previous RANS study [23]. Importantly, the present LES gives a very close prediction of the TKE increase with an error substantially smaller than any of the previous studies. The substantial reduction in the TKE-prediction error reported in the present LES compared with the previous results could be a sum of various issues. For example, modeling the realistic inflow turbulence using the recycling technique at the inlet boundary could explain the improvement. Further, the LES method itself could explain the improvement as in LES only the subgrid scale turbulence is modeled. Last, we note that the RANS results by Prospathopoulos [23] have been also performing reasonably well, in particular for the mean velocity statistics. We emphasize that it is very challenging to either capture the real-world topology of the Bolund hill, or the unsteady wind conditions in detail. In reality e.g. the wind direction and the magnitude are always somewhat time dependent. Thus, some uncertainty will always remain between the simulation and the experiment.

@&#CONCLUSIONS@&#

In the present paper, we reported LES of the Bolund hill with an intention to validate the newly implemented solver rk4projectionFoam and the wall-function model suitable for the rough surface into OpenFOAM®. The validation is demonstrated for the real-life atmospheric flows at a full scale. Further, we briefly outlined the key implementation details of roughness wall functions and a solver code into OpenFOAM®. The results from the Bolund hill simulations indicate good agreement between present LES and the experimental data. Based on the prediction-error criteria, it is found that LES produces the best results of the TKE due to the smallest error compared with the results by any other numerical or experimental (wind tunnel and water channel) studies reported previously for the Bolund case. It must be mentioned that the best prediction is only from the 270° wind direction. However, it would be also important to account for the prediction errors from other wind directions, which is a subject of our future work.

The important feature of OpenFOAM® is the compact syntax and e.g. the effective, fluid dynamical part of rk4projectionFoam only includes about 50 lines in total while solving the Navier–Stokes in an explicit, unhidden manner in contrast to most hidden source, commercial codes. In the future, the applications of rk4projectionFoam will be extended by further implementing a forest canopy and actuator disk models to simulate atmospheric flows over forested wind parks common to Finnish landscape. The presented solver code for rk4projectionFoam could be applied to various other flows as well. For example, the accurate prediction of turbulence properties is highly important in understanding about wind comfort and safety for pedestrians in urban environments [35]. Further, rk4projectionFoam could be well used in understanding e.g. sediment transport by wind in the vicinity of plantations [36].

@&#ACKNOWLEDGEMENT@&#

The computational resources for this study were provided by CSC – Finnish IT Center for Science.

Supplementary data associated with this article can be found, in the online version, at http://dx.doi.org/10.1016/j.advengsoft.2014.09.008.


                     
                        
                           
                        
                     
                  


                     
                        
                           
                        
                     
                  

@&#REFERENCES@&#

