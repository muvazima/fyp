@&#MAIN-TITLE@&#A novel genetic programming approach for epileptic seizure detection

@&#HIGHLIGHTS@&#


               
                  
                  
                     
                        
                           
                           A Constructive Genetic Programming (CGP) is proposed for epileptic seizure detection.


                        
                        
                           
                           Five different experiments were performed to show the performance of CGP on EEG signal.


                        
                        
                           
                           CGP produces the highest classification accuracy among other classifiers.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Genetic programming

Constructive crossover

Dynamic fitness value computation

Epilepsy

@&#ABSTRACT@&#


               
               
                  The human brain is a delicate mix of neurons (brain cells), electrical impulses and chemicals, known as neurotransmitters. Any damage has the potential to disrupt the workings of the brain and cause seizures. These epileptic seizures are the manifestations of epilepsy. The electroencephalograph (EEG) signals register average neuronal activity from the cerebral cortex and label changes in activity over large areas. A detailed analysis of these electroencephalograph (EEG) signals provides valuable insights into the mechanisms instigating epileptic disorders. Moreover, the detection of interictal spikes and epileptic seizures in an EEG signal plays an important role in the diagnosis of epilepsy. Automatic seizure detection methods are required, as these epileptic seizures are volatile and unpredictable. This paper deals with an automated detection of epileptic seizures in EEG signals using empirical mode decomposition (EMD) for feature extraction and proposes a novel genetic programming (GP) approach for classifying the EEG signals. Improvements in the standard GP approach are made using a Constructive Genetic Programming (CGP) in which constructive crossover and constructive subtree mutation operators are introduced. A hill climbing search is integrated in crossover and mutation operators to remove the destructive nature of these operators. A new concept of selecting the Globally Prime offspring is also presented to select the best fitness offspring generated during crossover. To decrease the time complexity of GP, a new dynamic fitness value computation (DFVC) is employed to increase the computational speed. We conducted five different sets of experiments to evaluate the performance of the proposed model in the classification of different mixtures of normal, interictal and ictal signals, and the accuracies achieved are outstandingly high. The experimental results are compared with the existing methods on same datasets, and these results affirm the potential use of our method for accurately detecting epileptic seizures in an EEG signal.
               
            

@&#INTRODUCTION@&#

The human brain is the most complex organ in the human body, and perhaps the most incredible. It initiates the body movement and regulates the behavioral traits. Electroencephalography (EEG) [1] is the chronicling of electrical activity which holds the information about human brain functionality and the disorders of the nervous system. The electroencephalograph (EEG) deserves mention as one of the first ways of non-invasive observing human brain activity. An EEG is a recording of electrical signals from the brain made by hooking up electrodes to the subject's scalp. EEG accurately measures the deviations of electric signals within short period of time through multiple electrodes placed on the human scalp; the changes in these electric signals are measured in terms of voltage fluctuations of brain. The information about the human brain and neurological disorders is brought into being through the output at the electrodes. EEG allows researchers to follow electrical impulses across the surface of the brain and observe changes. An EEG can show the state of a person such as numb, awake, asleep because the characteristic patterns of these impulses vary for the aforementioned states. One important function of EEG is to signify the duration taken by the brain to process various stimuli.

Epilepsy [2] is a brain disorder in which clusters of nerve cells, or neurons, in the brain sometimes signal abnormally. It is a neurological disorder with prevalence of about 1–2% of the world's population [3]. In epilepsy, the normal pattern of neuronal activity becomes disrupted, instigating strange sensations, emotions, and behavior, or sometimes convulsions, muscle spasms, and loss of consciousness. It is characterized by unexpected recurrent and ephemeral disturbances of perception or behavior resulting from excessive synchronization of cortical neuronal networks; it is a neurological condition in which an individual experiences prolonged abnormal bursts of electrical discharges in the brain. The hallmark of epilepsy is intermittent seizures termed epileptic seizures. Epileptic seizures are classified by their clinical manifestation into partial or focal, generalized, unilateral and unclassified seizures [4]. Focal epileptic seizures involve only part of cerebral hemisphere and produce symptoms in corresponding parts of the body or in some related mental functions. Generalized epileptic seizures involve the entire brain and produce bilateral motor symptoms usually with loss of consciousness. Both types of epileptic seizures can occur at all ages.

A detailed analysis of the EEG records could provide a valuable insight in predicting seizures. Until now, the exact cause of epilepsy in individuals is unknown and the mechanisms that involved behind the seizures are little understood. Thus, efforts towards its diagnosis and treatment are of significant importance. Developing automatic seizure detection methods [5] is of great significance and can serve as first-rate clinical tools for the scrutiny of EEG data in a more unprejudiced and computationally coherent manner, since visual inspection for discriminating EEG signals is time consuming, imprecise and high costly, especially in the case of long-term recordings (Fig. 1
                     ).

In this study, a novel Constructive Genetic Programming (CGP) approach for epileptic seizure detection is proposed. In this, we put forth a new constructive crossover, constructive subtree mutation operators and a dynamic fitness value computation (DFVC) approach and subsequently specify its role in the classification of EEG signals. We initially decompose an EEG signal into set of IMFs by means of Empirical Mode Decomposition (EMD) and extract two bandwidth parameters, namely amplitude parameter (B
                     
                        am
                     ) and frequency parameter (B
                     
                        fm
                     ) for the classification purpose. The bandwidth parameters, calculated from the respective IMF's of each EEG signal are used as input feature set for the GP classifier to classify the EEG signals. To measure the performance of the proposed algorithm we used an EEG dataset, which is available online [6]. It is observed that the proposed GP approach yielded a very high accuracy for 50–50 training–testing partition, 30–20–50 training–validation–testing partition and for 10-fold cross validation scheme. Measures such as sensitivity, specificity and Mann–Whitney two tailed test are used to validate the performance. To show the dominance of our approach, we compared our method with a Standard Genetic Programming (ST-GP) [7] model, Constructive Crossover and Mutation operators (CCM) [8], Semantic Search Based Genetic Programming (SEM-GP) [9] and also with recently proposed algorithms applied on the EEG database. The results show that our approach works well with the EEG database and can be a good alternative to the well-known machine learning methods. The obtained high accuracies specify the outstanding classification performance of the proposed Genetic Programming approach in comparison with other approaches.

The remainder of this paper is organized as follows: Section 2 describes the related work. Section 3 overviews the essential background of the approach. It describes the Empirical Mode Decomposition and the proposed Constructive Genetic Programming approach. Section 4 presents and analyses the experimental results and finally Section 5 draws conclusion and future work directions.

@&#RELATED WORK@&#

A wide range of methods [10] have been proposed to forecast epileptic seizures by classifying seizure and non-seizure EEG signal which employed univariate techniques, eigen spectra of space delay correlation and covariance matrices [11], Hilbert–Huang transform [12], and autoregressive modeling and least-squares parameter estimator [13].

Kannathal et al. [14] used entropy measures for the feature extraction and developed an Adaptive Neuro-Fuzzy inference system for the classification of EEG signals into normal and ictal. The aim of their work is to compared the different entropy estimators when applied to EEG data from normal and epileptic subjects. Subsequently, Polat et al. [15] employed hybrid system based on decision tree classifier and Fast Fourier Transform (FFT) to improve the accuracy. Chandaka et al. [16] came up with a cross correlation and support vector machine. They demonstrated the idea of using cross-correlation for feature extraction in EEG signal recognition. Wang et al. [17] modified the feature extraction with the use of Wavelet Transform along with Shannon Entropy. Smart et al. [18] demonstrated that implicitly selecting features with a genetic programming (GP) algorithm more effectively determined the proper features to discern biomarker and non-biomarker interictal iEEG and fMRI activity than conventional feature selection approaches. Nicolaou et al. [19] integrated the concept of permutation entropy with the support vector machine to achieve very high classification accuracy. Particle swarm optimization proposed by Ba-Karait et al. [20] was the newest of all the methods which, while using a 10-fold cross validation technique achieved a high classification accuracy in reduced time. Classification of EEG signal into ictal and non-ictal deserves a mention among all the other classification, as we can detect an onset of seizure which is helpful for the early diagnosis of epileptic seizures. Ocak et al. [21] proposed fourth-level wavelet packet decomposition for several frequency bands to differentiate normal and epileptic EEG signals. Liang et al. [22] used combination of complexity analysis and spectrum analysis and entropy features to perform classification of seizure and non-seizure EEG data. Bajaj et al. [23] used mean frequency metric of intrinsic mode functions (IMFs) and LS-SVM to differentiate between seizure and non-seizure EEG signals. They divided the EEG signals into different IMFs and extracted the features from them. Panda et al. [24] produced different features, such as energy, entropy and standard deviation from wavelet transformation to classify epileptic EEG signals using support vector machine (SVM).

Among the other proposed methods, classification of EEG signals using an Artificial Neural Network (ANN) was widely brought into play, as it is not only model the signal, but also decides on the classification of the signals. Here, feature vector extraction is carried out by frequency domain features, time-frequency features, wavelet transform, etc. Later, these extracted feature vectors are specified as input to the ANN. In order to analyze the EEG signals, various architectures with ANN have been used. Few among them are Multilayer Perceptron Neural Network (MLPNN) [25], Adaptive Neuro-Fuzzy Inference System (ANFIS) [26], Radial Basis Function Neural Network (RBFNN) [27], Recurrent Neural Network (RNN) [28]. Guo et al. [29,30] used wavelet transform along with relative energy [31], approximate entropy [30] and line length features [29] as a method for feature extraction and ultimately used an artificial neural network to classify them accordingly. However, we could observe a relative decrease in these accuracies when we classify into ictal and non-ictal (ZONF-S). Orhan et al. [25] used wavelet transform and K-nearest neighbor classifier along with Artificial neural network to classify the EEG signals.

Genetic programming (GP) [7] is an evolutionary learning methodology, which offers a great potential for classification. From the fact that, GP is a search and optimization algorithm, it can be utilized as a search algorithm for generating an efficient classifier. The main reason GP is well suited for the classification of EEG signals is that GP provides satisfactory results while compared to other statistical and evolutionary algorithms. GP as a result of its global ability, does not stuck in the problem of local optima as it happens with neural network. In comparing GP with LS-SVM, we can notice that in GP, the objective function can be altered without changing the main algorithm, i.e., the sum of squared errors could be used instead of the Mean Absolute Error (MAE) but, whereas, for the LS-SVM, such a change requires revising the optimization algorithm and quadratic programming (QP). These are the advantages of employing the genetic programming classifier in place of an LS-SVM and ANN classifiers.

Koza [7] introduced the genetic programming (GP) in the early 90s. To perform the standard crossover operator in the tree-based GP, two genetic programs are selected from the population and are put into the mating pool. A crossover point is then randomly chosen in each of the two parent programs, then the subtrees below the crossover points are swapped, and two new (child) programs are created. The two child programs are then put into the population in the next generation. However, a major problem is that this random selection can result in good “genes” or “building blocks” to be destroyed, which could deteriorate the performance.

Bhardwaj et al. [8], presented the constructive crossover and mutation in which they had integrated the search to generate the better fitness offspring. In constructive mutation, they had given more chance to leaf nodes to change due to which they are able to produce diversity among individuals. But the problem in their approach is that, due to search of better offspring the training time of GP life cycle has increased too much and the mutation operation also not able to bring much diversity. Castelli et al. [9] proposed Semantic Search-Based Genetic Programming (SEM-GP) a new GP system which is based on semantics (SEM-GP). The idea consists in building, maintaining, and updating generation by generation a semantical distribution, biasing the search toward areas of the semantic space characterized by good fitness values. However, the algorithm stuck in local minimum due to which it is not able to produce good classification accuracy.

We had proposed a new constructive crossover operator, constructive sub tree mutation operator to produce the better fitness offspring during crossover and mutation, so that we reach the solution early avoiding the local optimum. A new concept called Dynamic Fitness Value Computation (DFVC) is also introduced to reduce the computational delay encountered by the crossover and mutation operation. Our method is different from the above method in the sense that, our constructive crossover is able to generate the better fitness individuals, our subtree mutation replaces the subtree which bring more diversity among our individuals and our DFVC is able to evaluate the fitness very fast which is also cleared from our result in later section.

An EEG dataset, which is available online [6] is used for training, testing and evaluation of our method. In this dataset, EEG signals were chronicled with the same 128-channel amplifier system, using an average common reference. The analog data were digitized at 173.61 samples per second by a 12 bit A/D resolution with band-pass filter settings of 0.53–40Hz (12dB/oct). The comprehensive dataset encompasses five different sets (denoted Z, O, N, F and S), each containing 100 single channel EEG segments of 23.6s duration. These signals were carefully chosen and cut out from continuous multi-channel EEG recordings after removing artifacts caused due to eye movements, scalp muscular activity and power line interference. Signals in sets O and Z are recorded from healthy volunteers through external surface electrodes using the international 10–20 electrode placement scheme. The volunteers were unperturbed in an awake state with eyes open (set Z) and eyes closed (set O). Sets F and N are attained in seizure-free intervals. Set F extracted from epileptogenic zone of the brain shows focal interictal activity; set N acquired from hippocampal formation of the opposite hemisphere of the brain indicates non-focal interictal activity, and set S were obtained from within the epileptic zone of a seizure activity. Sets Z and O is thought as normal, sets N and F were from interictal and set S corresponds to an ictal State (seizure). The recorded EEG signals (one from each subset) are shown in Fig. 2
                        .

This section illuminates on the feature extraction of the EEG signals. The empirical mode decomposition (EMD) method was developed by Huang et al. [32] to decompose functions into a superposition of natural modes, each of which could be easily analyzed for their instantaneous frequencies and bandwidths. Bajaj and Pachori [23] proposed the use of Empirical mode decomposition to extract the features from an EEG signal.

EMD is fundamentally a method of breaking down a signal without leaving the time domain introduced for analysis of nonlinear and non-stationary signals. It can be compared to other analysis methods such as Fourier transforms and wavelet decomposition. On completion of this process, it would generate a set of bandwidth parameters which are attributed as parameters for the genetic programming (GP). The algorithm involves the following steps:
                           
                              •
                              Calculation of intrinsic mode function (IMF) for each iteration using EMD on EEG signals.

Estimation of two features, namely frequency parameter and amplitude parameter using Hilbert transform applied on IMF's for each iteration.

Generation of a bandwidth parameters viz. frequency parameter, and the amplitude parameter.

Using the EMD algorithm, we acquire IMF generated at each scale, going from fine to coarse, by an iterative procedure to locally isolate the modal behavior. In contrast to the aforementioned Fourier transform and wavelet transform, the EMD decomposes any given data into IMF's and a residual function that are not set analytically and are instead determined by an analyzed sequence alone. The basis functions are in this case derived adaptively directly from input data. An IMF resulting from the EMD [33] shall satisfy only the following requirements:
                              
                                 1.
                                 The number of IMF extrema (the sum of the maxima and minima) and the number of zero-crossings must either be equal or differ at most by one.

At any point of an IMF, the mean value of the envelope defined by the local maxima and the envelope defined by the local minima shall be zero.

The algorithm as proposed by [32] requires the identification of all local extrema that are further connected by cubic spline lines to produce the upper and the lower envelopes.

We use a process called sifting [34] to obtain the final IMF. The sifting process is repeated until a certain given stoppage criterion is met. This continues until all IMF's are extracted. The sifting process usually stops when the residue, for example, contains no more than two extrema. At the end of the decomposition, the original EEG signal is represented as the sum of IMF's and the final residue. The IMF's generated by EMD process on the 23.6s EEG signal for the respective EEG signals are shown in Fig 3
                           a–e. Empirical mode decomposition can successively separate the intrinsic oscillatory modes of signals into a finite number of IMF's. At the end of the decomposition, two bandwidth parameters (B
                           
                              am
                            and B
                           
                              fm
                           ) are generated for every IMF.

Empirical mode decomposition can successively separate the intrinsic oscillatory modes of signals into a finite number of IMFs. At the end of the decomposition, the original EEG Signal is represented [32] as follows:
                              
                                 
                                    x
                                    (
                                    t
                                    )
                                    =
                                    
                                       ∑
                                       
                                          i
                                          =
                                          1
                                       
                                       n
                                    
                                    
                                       C
                                       i
                                    
                                    (
                                    t
                                    )
                                    +
                                    R
                                    (
                                    t
                                    )
                                 
                              
                           where n is the number of IMFs, C
                           
                              i
                            is the ith IMF and R(t) is the final residue. The analytic signal of any real IMF A(t) is represented as:
                              
                                 
                                    A
                                    (
                                    t
                                    )
                                    =
                                    
                                       
                                          
                                             c
                                             2
                                          
                                          (
                                          t
                                          )
                                          +
                                          
                                             c
                                             H
                                             2
                                          
                                          (
                                          t
                                          )
                                       
                                    
                                 
                              
                           where c(t) is the IMF and c
                           
                              H
                           (t) refer to Hilbert transform of IMF. The instantaneous frequency ω(t) is defined as:
                              
                                 
                                    ω
                                    
                                    (
                                    t
                                    )
                                    =
                                    
                                       
                                          d
                                          ∅
                                          
                                          (
                                          t
                                          )
                                       
                                       dt
                                    
                                 
                              
                           where ∅(t) is instantaneous phase. Then calculate the center frequency which can be defined as:
                              
                                 
                                    〈
                                    ω
                                    〉
                                    =
                                    
                                       1
                                       E
                                    
                                    ∫
                                    ω
                                    
                                    
                                       
                                          |
                                          
                                          Z
                                          (
                                          ω
                                          
                                          )
                                          |
                                          
                                       
                                       2
                                    
                                    d
                                    ω
                                    
                                 
                              
                           where E is the energy of analytic signal and Z(ω) is the Fourier transform of analytic signal. The amplitude parameter and the frequency parameter are defined respectively.
                              
                                 
                                    
                                       B
                                       am
                                       2
                                    
                                    =
                                    
                                       1
                                       E
                                    
                                    ∫
                                    
                                       
                                          
                                             
                                                
                                                   
                                                      dA
                                                      (
                                                      t
                                                      )
                                                   
                                                   dt
                                                
                                             
                                          
                                       
                                       2
                                    
                                       
                                    dt
                                 
                              
                           
                           
                              
                                 
                                    
                                       B
                                       fm
                                       2
                                    
                                    =
                                    
                                       1
                                       E
                                    
                                    ∫
                                    
                                       
                                          
                                             
                                                
                                                   
                                                      d
                                                      ∅
                                                      
                                                      (
                                                      t
                                                      )
                                                   
                                                   dt
                                                
                                                −
                                                〈
                                                ω
                                                〉
                                             
                                          
                                       
                                       2
                                    
                                    
                                       A
                                       2
                                    
                                    (
                                    t
                                    )
                                    
                                    dt
                                 
                              
                           The total bandwidth of analytic IMF x(t) is defined as:
                              
                                 
                                    B
                                    =
                                    
                                       
                                          
                                             B
                                             am
                                             2
                                          
                                          +
                                          
                                             B
                                             fm
                                             2
                                          
                                       
                                    
                                 
                              
                           These B
                           
                              am
                            and B
                           
                              fm
                            are attributed to serve as input features for the GP. While extracting the features we choose five IMF's from each signal and delete the residue. As a result, a total of 10 features from each EEG signal (two from each IMF's) are extracted and selected as input to our Genetic Programming classifier. This concludes the feature extraction from an EEG signal. The next subsection describes in detail about the novel GP approach for the classification of EEG signal, and also emphasizes on the proposed dynamic fitness value computation, constructive crossover and constructive subtree mutation operators.

Genetic programming, one of a number of evolutionary algorithms, follows Darwin's theory of evolution—often paraphrased as “survival of the fittest” [7]. It works on a principle, for instance, if there exists several entities in a nature, the fitter entities survive and evolve at a higher rate; less fitter individuals survive, if at all at a lower rate. It is an extension of the genetic algorithms and was substantiated, endorsed and developed into a practical tool by John Koza amongst a whole range of possible evolutionary algorithms [35].

In this subsection, we present the sequence of steps to be followed in order to build the Constructive Genetic Programming (CGP) based classifier for the classification of EEG signals. Here, we also provide detail description of proposed constructive crossover, constructive subtree mutation operators and dynamic fitness value computation. These modified operators work in tandem to improve the genetic programming framework. These proposed operators are responsible for the increased accuracies while classifying the EEG signals.

In the proposed approach, genetic Program is represented in memory as tree structures [7]. We initialize trees using the ramped half-and-half method [7] because it utilizes the advantages of both full and grow method to generate tree. The terminal and function sets are used for generating the initial population. The terminal set consists of features from each data set. The functions are several mathematical functions, such as addition, subtraction, division, multiplication. Trees for each of the individual are initialized randomly using the function set F and the terminal set T defined as follows:
                              
                                 (1)
                                 
                                    
                                       
                                          
                                             F
                                             =
                                             
                                                {
                                                +
                                                ,
                                                −
                                                ,
                                                *
                                                ,
                                                /
                                                }
                                             
                                          
                                       
                                       
                                          
                                             T
                                             =
                                             
                                                {
                                                feature
                                                   
                                                variables
                                                   
                                                of
                                                   
                                                EEG
                                                   
                                                signals
                                                ,
                                                   
                                                R
                                                }
                                             
                                          
                                       
                                    
                                 
                              
                           where R contains randomly generated constants in [0.0 to 10.0]. The initial minimum and maximum depth of a tree are 3 and 6, respectively. As described, a total of 10 feature variables (two B
                           
                              am
                            and B
                           
                              fm
                            values from each IMF, here, we remove the residue from the EEG signal, as it is insignificant to our study) are extracted as features from an EEG signal. The +, −, and * operators have their usual meanings (addition, subtraction, and multiplication), while / represents protected division, which is similar to the usual division operator except the fact that, a divide by zero gives a result of zero. Each of the above functions accepts two arguments.

The most challenging and yet an essential concept of GP is the fitness function. The fitness function determines the ability of a program to solve the problem. Fundamentally, GP is guided by a fitness function, which explores for an efficient program to solve a given problem. It helps in determining the possible solutions for evolving into next generation of solutions.

Following the fitness value evaluation, the evolutionary process starts, where the genetic variations are introduced in the random population by means of genetic operators. These genetic operators must be applied carefully to form valid structures. The old population is destroyed once the new population is generated. The most common GP operations, and which we use in our classification process are reproduction, crossover and mutation. The reproduction operator [7] simply copies the best individuals into the population to the next generation to make sure the best individual programs are not lost during evolution. Crossover, the most widely used GP operator, swaps the branches between two parent trees to create offspring. Mutation selects a node in the parse tree and replaces the branch at the node with a randomly generated branch. Due to this random generation the standard crossover and mutation operators are destructive they generate offspring having lesser fitness than parents. Insights into the crossover and mutation operations are detailed next, where we introduce our proposed constructive crossover, constructive subtree mutation operators along with the dynamic fitness value computation (DFVC).

After applying the reproduction operator on N
                           
                              r
                            individuals to survive in the next generation, we apply a propose constructive crossover on all the individuals, which are left after reproduction (N
                           
                              c
                            and N
                           
                              m
                           ). Here, individuals are made into pairs and are subjected to perform the crossover operation. The off-springs are generated from selected couples and compared with the parents in terms of fitness. While comparing, if the generated offspring are better than their parents in terms of fitness, they are accepted. Otherwise they are rejected and the process is repeated till we acquire two individuals better than both the parents. In this manner, the local hill climbing method is integrated with the crossover operation and is repeated for all N
                           
                              c
                            and N
                           
                              m
                            individuals and generated offspring are kept in crossover offspring table (COT). A COT is a table in which we store the offspring generated from the crossover operation in such a way that the offspring having the highest fitness remain in the first row, the second highest fitness offspring in second row and so on. We introduced an additional conception relating to the globally prime offspring in this method, where the top N
                           
                              c
                            offspring are selected on their fitness from the off-springs generated from crossover operation. The top N
                           
                              c
                            offspring in terms of fitness, are present on the top N
                           
                              c
                            positions in the crossover offspring table (COT) and the remaining lower level offspring in COT are deleted. Globally Prime offspring are the highest fitness N
                           
                              c
                            offspring present in the COT table. In theory, the number of the iterations to find the better off-springs can be very large or infinite, particularly for the case that a successful crossover can never be found due to the reason that the candidate program as a whole, is already a very good individual and no other suitable program in the current population can make it better by crossover. To avoid such infinite loops and for efficiency reasons, we limit this number to 20 (this number is taken from [36]), i.e., when the iteration has been executed 20 times and still no better child program can be generated, we terminate the iteration, elite the parent program, and put a copy into the next generation. Algorithm for Constructive Crossover is presented as Algorithm 1 (Fig. 4
                           ).


                           
                              Algorithm 1
                              Algorithm for constructive crossover.


                                 
                                    
                                       
                                          
                                          
                                          
                                             
                                                1:
                                                
                                                   Begin
                                                
                                             
                                             
                                                2:
                                                Generate initial classifier population (k).
                                             
                                             
                                                3:
                                                Randomly select fixed percentages of the initial population for crossover (P
                                                   
                                                      c
                                                   ), mutation (P
                                                   
                                                      m
                                                   ) and reproduction (P
                                                   
                                                      r
                                                   ).
                                             
                                             
                                                4:
                                                Group the total population left after reproduction (N
                                                   
                                                      c
                                                    and N
                                                   
                                                      m
                                                   ) into pairs randomly.
                                             
                                             
                                                5:
                                                
                                                   for all crossover pairs (N
                                                   
                                                      c
                                                    and N
                                                   
                                                      m
                                                   ) do
                                                
                                             
                                             
                                                6:
                                                
                                                   Take the parent pair and generate two better offspring from them by applying hill climbing search.
                                             
                                             
                                                7:
                                                
                                                   Place the top offspring (includes the parents if they have a superior fitness after 20 attempts) of that pair into the COT.
                                             
                                             
                                                8:
                                                
                                                   end for
                                                
                                             
                                             
                                                9:
                                                Select the top N
                                                   
                                                      c
                                                    Globally Prime (top fitness) offspring from COT and delete the remaining individuals.
                                             
                                             
                                                10:
                                                
                                                   End
                                                
                                             
                                          
                                       
                                    
                                 
                              

To further improve the GP life cycle and enhance the range of the EEG signal classifier, we propose a constructive mutation operator. In the constructive mutation, the individuals, left after reproduction and crossover operations are chosen to generate better offspring while compared to their parents by applying hill climbing search. We randomly choose a subtree in a parent and replace it with a newly generated subtree and repeat this process till we get better offspring than parent. The benefit of employing this constructive mutation technique is that the destructive nature of mutation operation is reduced by transferring the better individuals than parents to next generation and also our constructive mutation provide a wider exploration of the search space, help in not sticking in local optima. There is an additional advantage regarding the selection, where we choose the parents of mutation subsequent to the crossover and reproduction operation. So the individuals, who are not good at producing better offspring than parents during crossover are altered in this constructive subtree mutation operation. Algorithm for constructive subtree mutation is presented as Algorithm 2.


                           
                              Algorithm 2
                              Algorithm for constructive subtree mutation.


                                 
                                    
                                       
                                          
                                          
                                          
                                             
                                                1:
                                                
                                                   Begin
                                                
                                             
                                             
                                                2:
                                                Generate initial classifier population (k).
                                             
                                             
                                                3:
                                                Take the individual (N
                                                   
                                                      m
                                                   ) which are left after reproduction and crossover operations.
                                             
                                             
                                                4:
                                                
                                                   for all mutation individuals (N
                                                   
                                                      m
                                                   ) do
                                                
                                             
                                             
                                                5:
                                                
                                                   Apply Hill Climbing method, that is take the parent and generate offspring from them till we get better offspring than parent by replacing a subtree with a newly generated subtree.
                                             
                                             
                                                6:
                                                
                                                   end for
                                                
                                             
                                             
                                                7:
                                                Transfer the individuals to the next generation.
                                             
                                             
                                                8:
                                                
                                                   End
                                                
                                             
                                          
                                       
                                    
                                 
                              

Classification accuracy is improved by repeating the crossover and mutation operation until we get a hold of better offspring than parents. Moreover, we can even protect the good sub tree, but unfortunately, the evaluation of this whole process augments the number of fitness evaluations, which is responsible for the increase in time required to reach the solution. To regulate the whole process, we suggest dynamic fitness value computation (DFVC). In this DFVC, we are not proposing new fitness function rather; we are just proposing a way to compute the fitness fast during constructive crossover and constructive subtree mutation. This DFVC is accountable for quicker evaluation of the fitness values. As we just interchange the sub trees, it is absurd and pointless to calculate the value of each sub tree over and over during constructive crossover and constructive subtree mutation operations. Hence, we store the fitness values of the respective sub-trees in an array for the complete dataset and retrieve the value from that array, whenever we require to calculate the fitness value of the particular subtree. This in turn decreases the time complexity and simultaneously increases the efficiency of the GP approach for the classification of EEG signals.

A measure of fitness has been adopted for classification problem is as follows:
                              
                                 (2)
                                 
                                    Fitness
                                    =
                                    
                                       
                                          TP
                                          +
                                          TN
                                       
                                       
                                          TP
                                          +
                                          TN
                                          +
                                          FP
                                          +
                                          FN
                                       
                                    
                                    ×
                                    100
                                 
                              
                           where TP is the true positive, the total number of correctly detected positive events; TN is the true negative, the total number of correctly detected negative events; FP is the false positive, the total number of erroneously positive detections (i.e., false alarms); and FN is the false negative, the total number of erroneously negative detections (i.e., missed detections). The fitness value obtained by our model is used as an accuracy to compare our results with other methods. Introduction of DFVC is attributed for reducing the time required by CGP for the overall classification of EEG signals as compared to ST-GP, CCM and SEM-GP process. Algorithm for dynamic fitness value computation is presented as Algorithm 3.


                           
                              Algorithm 3
                              Algorithm for dynamic fitness value computation.


                                 
                                    
                                       
                                          
                                          
                                          
                                             
                                                1:
                                                
                                                   Begin
                                                
                                             
                                             
                                                2:
                                                
                                                   Individual Selection. Select 2 individuals to perform the crossover: t
                                                   1 and t
                                                   2.
                                             
                                             
                                                3:
                                                
                                                   Calculating the sub-trees value. 
                                                   Calculate and store the values of each sub-trees of both the individuals in an array.
                                             
                                             
                                                4:
                                                
                                                   while we do not get better off-springs than parents do
                                                
                                             
                                             
                                                5:
                                                
                                                   
                                                   Forming new individuals. 
                                                   Swap the sub-trees and generate new off-springs.
                                             
                                             
                                                6:
                                                
                                                   
                                                   Fitness Evaluation. 
                                                   Evaluate the fitness by putting the values from an array.
                                             
                                             
                                                7:
                                                
                                                   end while
                                                
                                             
                                             
                                                8:
                                                
                                                   End
                                                
                                             
                                          
                                       
                                    
                                 
                              

In this GP approach, the learning/evolutionary process is terminated, if it meets with any of the below mentioned conditions.
                              
                                 1.
                                 If the number of fitness evaluation reaches its maximum count. We choose this criteria because we want to know the efforts required by method to reach the desired accuracy.

If the classifier achieves 100% training accuracy.

The algorithm of CGP life cycle is presented as Algorithm 4.


                           
                              Algorithm 4
                              Algorithm for Constructive Genetic Programming for EEG signal classification.


                                 
                                    
                                       
                                          
                                          
                                          
                                             
                                                1:
                                                
                                                   Begin
                                                
                                             
                                             
                                                2:
                                                Extract the features from EEG signal by applying Empirical mode decomposition method to give as input to CGP classifiers.
                                             
                                             
                                                3:
                                                Generate initial classifier population (k) by applying full and grow method.
                                             
                                             
                                                4:
                                                Evaluate the fitness of each classifiers.
                                             
                                             
                                                5:
                                                
                                                   for all total number of fitness evaluations = 40000 or training accuracy =100% do
                                                
                                             
                                             
                                                6:
                                                
                                                   Randomly select fixed percentages of the initial population for crossover (P
                                                   
                                                      c
                                                   ), mutation (P
                                                   
                                                      m
                                                   ) and reproduction (P
                                                   
                                                      r
                                                   ).
                                             
                                             
                                                7:
                                                
                                                   Apply reproduction and send the N
                                                   
                                                      r
                                                    best individuals to next generation.
                                             
                                             
                                                8:
                                                
                                                   Group the total population left after reproduction (N
                                                   
                                                      c
                                                    and N
                                                   
                                                      m
                                                   ) into pairs randomly.
                                             
                                             
                                                9:
                                                
                                                   
                                                   for all crossover pairs (N
                                                   
                                                      c
                                                    and N
                                                   
                                                      m
                                                   ) do
                                                
                                             
                                             
                                                10:
                                                
                                                   Apply Constructive Crossover
                                             
                                             
                                                11:
                                                
                                                   Evaluate fitness using dynamic fitness value computation.
                                             
                                             
                                                12:
                                                
                                                   Send the best N
                                                   
                                                      c
                                                    offsprings to next generation.
                                             
                                             
                                                13:
                                                
                                                   
                                                   end for
                                                
                                             
                                             
                                                14:
                                                
                                                   Apply Constructive Subtree Mutation to remaining N
                                                   
                                                      m
                                                    parents.
                                             
                                             
                                                15:
                                                
                                                   Evaluate fitness using dynamic fitness value computation.
                                             
                                             
                                                16:
                                                
                                                   Send the N
                                                   
                                                      m
                                                    offsprings to next generation.
                                             
                                             
                                                17:
                                                
                                                   end for
                                                
                                             
                                             
                                                18:
                                                Best CGP classifier is obtained to apply on EEG test data.
                                             
                                             
                                                19:
                                                
                                                   End
                                                
                                             
                                          
                                       
                                    
                                 
                              

@&#RESULTS AND DISCUSSION@&#

The proposed CGP as a classifier was implemented in Java (Java SE 6 Update 45) and on a Pentium IV computer of 3.4GHz with 4GB of RAM. This algorithm was applied to the EEG Database. The dataset described in Section 2 is used for training and testing of our method. The parameters value for ST-GP, SEM-GP, CCM and CGP approaches are presented in Table 1
                     . The value of these parameters is primarily chosen based on the heuristic guidelines on the choice of parameters [7] and an empirical search through initial experiments on GP with the standard crossover operator. In machine learning field, it is common to partition the dataset into two separate sets: a training set and a testing set to evaluate the generalizability of an approach. Here, a 10-fold cross validation technique [37] was used to calculate classification accuracy of our model. In this method, entire dataset is divided into ten blocks of approximately equal size. While implementing our algorithm, we use 90% of data to train our model, and the rest 10% for testing. This process is repeated 10 times, with a different data block left out for testing every time. So, total of 100 GP runs are evaluated. A classification accuracy is estimated as an average across the 10 cross validations. A standard 50–50 methodology was also used for evaluating our work, where half of the samples are used for training the classifier, and the rest to testing.

To show the generalization capability of our method and to show that our algorithm does not suffer from over-fitting, we also divided our datasets into three sets, training, validation and testing. In which we kept 30% of our data for training, 20% for validation and 50% for testing. In this methodology, the best individuals over the generations are applied to a validation set. In that way, it is possible to select the individual that presents the best average performance in both sets: training and validation. Then, we applied that individual on testing data. The details of testing samples used are represented in Table 2
                     . The mean, max and standard deviation of the results are presented for 100 repetitions of all the algorithms for 50–50 training–testing partition, for 30–20–50 training–validation–testing partition and for 10-fold cross validation scheme.

In order to paint a clear picture of the results, our experiment covers five sub experiments within it:
                        
                           1.
                           The first was to distinguish ictal EEGs and normal EEGs. While classifying an EEG signal into ictal and normal, we used the datasets of S and Z. While the classification is carried out, a specific pattern is assigned to a specific class according to the characteristic features selected for it. In this application, there are two classes: ictal and normal.

The second was to distinguish ictal EEG's and non-ictal EEG's, excluding healthy with eyes closed. While classifying an EEG signal into ictal and non-ictal excluding healthy with eyes closed, the dataset S corresponds to ictal and the datasets Z, N and F correspond to non-ictal. In this application, there are two classes: ictal and non-ictal (excluding healthy with eyes closed).

The third was to distinguish ictal EEGs and non-ictal EEGs. While classifying an EEG signal into ictal and non-ictal, the dataset S corresponds to ictal and the datasets Z, O, N and F corresponds to non-ictal. In this application, there are two classes: ictal and non-ictal (including healthy with eyes closed).

The fourth was to distinguish ictal EEGs, interictal EEGs and normal EEG's. While classifying an EEG signal into ictal, interictal and normal, we used dataset S for ictal, N and F for interictal and, Z and O for normal. Here, this is a three class problem as it comprises three classes: ictal, interictal and normal.

The fifth was to distinguish into 5 sets (sets Z, O, N, F and S). While classifying it into Z, O, N, F and S this becomes a 5 class problem.

In order to compare and evaluate the performance of our proposed Constructive Genetic Programming approach, we define and compute the classification accuracy, sensitivity, specificity, confusion matrix. We also performed a statistical validation of the results with the Mann–Whitney [38] two tailed test, to show the statistical difference in results. The formulations are as follows.

The measure of the ability of the classifier to produce accurate diagnosis is determined by accuracy (ACC). The accuracy of our method is the fitness value of the classifier. Therefore, the equation of accuracy is same as Eq. (2).

The measure of the ability of the model to identify the occurrence of a target class accurately is determined by sensitivity (SEN).
                              
                                 (3)
                                 
                                    Sensitivity
                                    =
                                    
                                       TP
                                       
                                          TP
                                          +
                                          FN
                                       
                                    
                                    ×
                                    100
                                 
                              
                           
                        

The measure of the ability of the model to separate the target class is determined by specificity (SPE).
                              
                                 (4)
                                 
                                    Specificity
                                    =
                                    
                                       TN
                                       
                                          TN
                                          +
                                          FP
                                       
                                    
                                    ×
                                    100
                                 
                              
                           
                        

A confusion matrix contains information about actual and predicted classifications performed by a classifier. Performance of such classifiers is commonly evaluated using the data in the matrix.

Mann–Whitney [38] two tailed test is used to show the statistical significance of the results. In this test, the p values are obtained by comparing the classification accuracy of methods. In particular, the statistical significance of the results has been evaluated with the Mann–Whitney test, considering a confidence of 95% with a Bonferroni correction for the value of α. The difference between the two samples is highly significant if the value of p
                           <0.001 and for the value of p
                           >0.05 the results are not significantly different.

@&#EXPERIMENTAL RESULTS@&#

In this section, we present the experimental results to test the behavior of the proposed CGP method, as well as to compare it with ST-GP, CCM and SEM-GP approaches. In this study, the potential of our technique to detect the onset of epileptic seizures is investigated by extracting the features using empirical mode decomposition and classifying it by the proposed Constructive Genetic Programming (CGP) approach. The results of classification accuracy of all methods are presented in Table 3
                         with different validation techniques. It is clear from the results that CGP method outperforms the ST-GP, SEM-GP and CCM methods for Z–S, ZNF–S, ZONF–S, ZO–NF–S and Z–O–N–F–S classification in terms of classification accuracy for all validation techniques. This improvement in classification accuracy is mainly due to our constructive crossover and constructive subtree mutation operators. Classification accuracies achieved by CGP method as shown in Table 3 for 30–20–50 training–validation–testing samples are 99%, 99.5%, 99.6%, 100% and 100% for Z–S, ZNF–S, ZONF–S, ZO–NF–S and Z–O–N–F–S classification, respectively, which shows that our algorithm does not suffer from over-fitting problem therefore having good adaptation and generation capability. The classification accuracy for 10-fold cross validation method is 100% for all classifications which is better in comparison to ST-GP, SEM-GP and CCM methods.

The mean and standard deviation values of sensitivity and specificity of ST-GP, SEM-GP, CCM and CGP methods for all validation techniques are presented in Table 4
                         which shows satisfactory results over other GP methods. To show the result in the form of actual and predicted classifications performed by a classifier for each class, we also presented the results in the form of confusion matrix in Tables 5 and 6
                        
                        . The confusion matrix for two class (Z–S, ZNF–S and ZONF–S) problem are shown as 2×2 matrix in Table 5, whereas confusion matrix for three (ZO–NF–S) and five (Z–O–N–F–S) class problems are shown as 3×3 and 5×5 matrix, respectively in Table 6.


                        Table 7
                         refers to the time required by the ST-GP, SEM-GP and CCM methods to reach the solution. It is clear from the results that CGP method requires almost the same amount of time as ST-GP. The time taken by the CCM method to reach the desired accuracy, is onerously large as a result of numerous fitness evaluations. But in CGP method, we integrated the DFVC method and constructive subtree mutation operator along with the constructive crossover operator. Constructive subtree mutation helps in bringing the diversity to our individuals and avoids our method from not to stuck in problem of local optima and our DFVC helps in evaluating the fitness measure fast to reach the desired solution. This reduction in time with improved precision makes our proposed CGP framework favorable to apply for real time EEG signal classification and can be used by physicians to diagnose the patients.

A statistical validation of the results has been performed using the Mann–Whitney test considering a confidence of 95% with a Bonferroni correction for the value of α. The solution produce by our CGP method are statistically different from the ST-GP, SEM-GP and CCM methods for every validation techniques because the p
                        <0.001.

A comparison of the proposed algorithm with previous studies in literature, which is evaluated using the same dataset is shown in Table 8
                        . All the methods are listed with their methodological standards (Detection Method, Dataset and Classification Accuracy). All the mentioned signal preprocessing methods aim to detect various patterns in EEG recordings that are the manifestation of an epileptic seizure. The comparison with other work is on the basis of five sub experiments which we performed are presented next:
                           
                              1.
                              Firstly, the main motto behind the classification of EEG signals into ictal and normal (Z–S) is to showcase our classification accuracy while compared to various methods. Here, the average and best accuracy obtained by our method are 99.11% and 100%, respectively for 10 fold cross validation which are the best result while compared to other methods. Guo et al. [29] used Wavelength Transform & Line Length feature for feature extraction, and an Artificial neural network for classification, which is the second best accuracy for this dataset (Z–S classification). The results are displayed in Table 8.

For the classification into ictal and nonictal (excluding healthy with eyes closed), the result obtained from the evaluation of our method is better than the methods proposed using Discrete Wavelet Transformation (DWT) and Approximate Entropy by [40] and the method proposed by [29], where they used Wavelet transform and Relative Energy for the purpose of feature extraction and an Artificial Neural Network for the classification. A quick glance through Table 8 gives a brief overview of the classification accuracy compared to existing methods.

The third one, in which we classified into ictal and non-ictal (including healthy with eyes closed) is a prominent one in the clinical diagnosis as it is responsible for detection of seizure. The real-time implementation is an issue for an on-line epileptic seizure warning system or seizure control system. The steps of the proposed Genetic Programming approach, along with Empirical Mode decomposition, Extraction of Bandwidth Parameters, could be easily implemented on current processing platforms designed for various on-line applications. Bajaj and Pachori [23] employed Empirical Mode Decomposition with a Least square support vector machine, this is the latest method and best in terms of performance. They obtained an accuracy of 98.5% using Radial basis function (RBF) kernel in LS-SVM Classifier. Table 8 shows the comparison with other approaches.

Classification into ictal, interictal and normal is the most important classification among all these classifications, as we can identify inter-ictal spikes along with the epileptic seizures. Inter-ictal spikes detection, which occurs between epileptic seizures is necessary to prevent a person from suffering from Epilepsy. This helps in both prevention and diagnosis of a seizure. Here, the accuracy would be slightly low compared to the previous experiments as it is a three class problem. Among the existing methods for classification into ictal, interictal and normal classification using Entropy measures and an Artificial neural network by [17] is proven to be the most accurate one. However, our method surpasses the existing [17] method in terms of the classification accuracy. Table 8 briefly gives a view on the comparison statistics with the other methods.

While classifying into Z, O, N, F and S, we have produced comparable results by our approach. Our accuracy was close to [28] method of Lyapunov exponents and probabilistic neural network.

We had performed 100 independent runs and max and average of accuracies are reported for our proposed method. However, the other machine learning methods we simply report the results obtained by each method in their paper. The validation method used by authors in [4,17,20,22,23,28,31,39,42,43] is 10 fold cross validation and the average results are reported for 100 runs where as the authors of [19,25,26,44] divided the datasets into 50–50 training–testing partitions and the average results of 100 runs are reported in Table 8. It is clear from the results that only for Z–S classification the result of our method are similar to other work but for other datasets like ZNF–S, ZONF–S, ZO–NF–S and Z–O–N–F–S the result produce by our method are much better than other methods which shows that our method works well for 2, 3 and 5 class problem as well.

@&#DISCUSSION@&#

The main reason for the improved accuracies as compared to the existing GP and other machine learning methods is the introduction of constructive crossover and constructive subtree mutation operations. The constructive crossover operator explores for the better offspring to find an optimal solution. The constructive subtree mutation operator manages to bring a diversity among the parents, who had not perform well in constructive crossover operation. Therefore, our both these operators work in tandem to bring the improved solution, in a fast and swift manner. Also our dynamic fitness value computation reduces the time required to evaluate the fitness tremendously. These increased accuracy with decreased time complexity makes CGP method suitable tool for a development of a more real time seizure detection in clinical epilepsy diagnostics.

In the aspects concerning the limitation of this research, it is important to notice that a feature selection technique is needed in order to reduce the irrelevant and redundant features to make CGP more efficient for real time diagnosis of epileptic seizures. Other limitation is that, the efficiency of CGP method is demonstrated only on online EEG data, it is interesting to see the behavior of our CGP method on other medical data and also actual EEG data from various hospitals.

There are few aspects of this research that could be improved further or extended in nearest future, the most important among them is the integration of feature selection method to reduce the number of features from the dataset which can reduce the computational burden of the algorithm with further improvement in the classification accuracy to detect epileptic seizure. The proposed model is applied on signals only; it would be interesting to see its behavior when it is applied on images data as well. However, for practical implementation, future work is required to evaluate the usefulness of the proposed method with more number of patients.

@&#CONCLUSION@&#

In this paper, we explored the capability of the Constructive Genetic Programming approach to detect epileptic seizure in an EEG signal. The EEG signals were initially decomposed into several intrinsic mode functions (IMF's) by applying empirical mode decomposition (EMD), and then a set of bandwidth parameters namely, frequency parameter and amplitude parameter are extracted from each IMF. Finally, a Constructive Genetic Programming was used for classification, which is responsible for the resulting high accuracies. To validate our results, we performed a total of 5 experiments, which are valuable in comparing our GP approach with the existing methods. Among them, the classification between normal, interictal and ictal is most useful tool in diagnosing epilepsy in the patients. The high accuracies of all the experiments compared to the existing approaches, derived from the common database, is the manifestation of our method feasibility among the other methods. Moreover, the low computation time, due to the introduction of dynamic fitness value computation (DFVC) makes it apt for developing a real time seizure diagnosis system, as it tremendously reduces the time required to calculate the fitness value of each sub tree.

No benefits in any form have been received or will be received from a commercial party related directly or indirectly to the subject of this article.

@&#REFERENCES@&#

