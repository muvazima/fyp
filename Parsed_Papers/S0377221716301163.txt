@&#MAIN-TITLE@&#The Hybrid Electric Vehicle – Traveling Salesman Problem

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           We model the delivery of goods with hybrid electric vehicles.


                        
                        
                           
                           A heuristic solution method for this new optimization problem was developed.


                        
                        
                           
                           We introduce benchmark instances based on real-world problems.


                        
                        
                           
                           Within numerical experiments the quality of the heuristic was demonstrated.


                        
                        
                           
                           The savings of the hybrid electric vehicles vary but are considerable high.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Travelling salesman

Hybrid electric vehicles

Transportation

@&#ABSTRACT@&#


               
               
                  The reduction in carbon dioxide levels by using hybrid electric vehicles is a currently ongoing endeavor. Although this development is quite advanced for hybrid electric passenger cars, small transporters and trucks are far behind. We try to address this challenge by introducing a new optimization problem that describes the delivery of goods with a hybrid electric vehicle to a set of customer locations. The Hybrid Electric Vehicle – Traveling Salesman Problem extends the well-known Traveling Salesman Problem by adding different modes of operation for the vehicle, causing different costs and driving times for each arc within a delivery network.
                  As the use of different modes of operation immensely increases the complexity of the problem, we present a heuristic solution approach, based mainly on a Tabu Search, to solve this optimization problem. Additionally, we provide a set of realistic benchmark instances based on real-world delivery tours to test and evaluate our solution approach. We also implemented a mathematical problem formulation and are able to solve small instances with the IBM ILOG CPLEX Optimization Studio, which allows us to prove the quality of the solutions, provided by our heuristic.
               
            

@&#INTRODUCTION@&#

Reducing exhaust gas emissions is a major challenge in our society. A huge focus is placed on motor vehicles, especially passenger cars. Nevertheless, pure electric vehicles (EVs) are not yet competitive, as their range is limited due to restricted battery capacity and low energy density compared to conventional internal combustion engines (ICEs). A way to overcome this limitation is the use of hybrid electric vehicles (HEVs), which combine an electric engine and a combustion engine. For passenger cars, this development has reached the stage of mass production, whereas small transporters and trucks have not yet emerged from the prototype stage. The reasons for this are that the economical break-even point has not yet been reached and that ecological motives are second-ranked in a business-oriented environment. However, the potential for reducing transporter carbon dioxide emissions seems high, as the operational profile for end customer deliveries in particular matches scenarios with high possible savings: within urban areas, short distances can be covered using only the electric engine, and distances into or between different delivery areas can be used to recharge the battery. Thereby, we can, in contrast to regular (passenger-) HEVs, determine the routing in advance and capitalize on the best mode selection for the whole tour. This is a more sophisticated strategy for choosing the mode than making the decision just based on the current state of the vehicle’s battery, as is usually done for passenger HEVs. Considering that last mile delivery costs comprise 35–60 percent of the total delivery costs (Wasner & Zèpfel, 2004), the increasing market for small package shipping (SPS) in a highly competitive environment (Figliozzi, Mahmassani, & Jaillet, 2007), and rising prices for fuel, the potential of HEVs as delivery transporters is further increased: their use might be a key competitive differentiator.

We introduce a new optimization problem covering this area of application. The Hybrid Electric Vehicle – Traveling Salesman Problem (HEV-TSP) considers the delivery or – without loss of generality – the pickup of goods at a set of customer locations with a HEV from or to a depot location. The HEV-TSP is an extension of the well-known and widely studied Traveling Salesman Problem (TSP).

At this stage, due to the increased costs for vehicles and infrastructure, especially when considering a large fleet, we are not regarding plug-in hybrid electric vehicles (PHEVs). This means, that the integrated battery can only be charged while driving. For the HEV-TSP, we assume four different modes of operation: pure combustion (conventional) mode, pure electric mode, charging mode in which the battery is charged while driving with the combustion engine, and a boost mode in which combustion and electric engines are combined for the drive. These modes differ in cost and required driving time for each individual arc in a complete transportation network. In addition, we consider a maximum tour duration, representing the total number of work hours allowed by legislative regulation. A small example of a HEV-TSP network with two customers is given in Fig. 1
                     . The four arcs between each vertex represent the different modes of operation. This illustration shows that the number of possible solutions and, therefore, the difficulty of the problem is considerably increased when compared to the classical TSP. The reasons we concentrate on the single-vehicle case rather than on the multiple-vehicle Vehicle Routing Problem (VRP) are twofold. On the one hand, the different modes of operation extend the underlying graph to a multigraph. This makes the problem very difficult to solve: the number of possible solutions for the already NP-hard TSP is increased by a factor of on
                      when compared to feasible solutions for the TSP, with o as the number of operation modes and n the number of vertices in the network. On the other hand, in practice almost all companies for SPS use fixed delivery areas (Wong, 2008). This leads to independent planning for each vehicle, which results in a TSP. Fixed areas are used to guarantee a higher customer satisfaction because the same driver delivers to the same customers every day, and costs are reduced, as less scheduling and administration is required for daily planning (Wong & Beasley, 1984).

We introduce a mixed-integer programming (MIP) model for the HEV-TSP and use it to solve small-sized problems (up to ten customers) to optimality. However, to solve problem instances with a practical number of customers, we present a heuristic solution method based on an Iterative Tabu Search (ITS) paradigm (Misevicius, Smolinskas, & Tomkevicius, 2005). We adopt problem-specific local search neighborhoods that are able to exchange the different modes of operation and modify the customer sequence simultaneously. By varying the components (e.g., the initialization method) of the ITS, we obtain different solution qualities and analyze the best setup. Our solution approaches are tested on benchmark instances generated based on actual data of delivery tours from a large SPS company in Germany. The MIP model is solved with the IBM ILOG CPLEX Optimizer to assess the quality of the solutions determined with the heuristic.

The remainder of this paper is structured as follows. In Section 2, we introduce the literature that is relevant to either the HEV-TSP and related problems or to the solution approach we adopted. Section 3 gives a description of the problem and the MIP problem formulation. In Section 4, we introduce the local search operators we implemented and discuss how we integrated them into our ITS algorithm. Section 5 presents the benchmark instances we generated, describes the setup for our numerical tests and gives the results we obtained by solving the instances with different approaches. Finally, in Section 6, we summarize the presented results and provide an overview of potential future research directions.

The HEV-TSP is an extension of the TSP, which is one of the oldest and most studied combinatorial optimization problems in the field of Operations Research (OR).

In recent years, a competition emerged among scientists to find solutions to problems with an increasing number of nodes. Both heuristic and exact solution methods were introduced during that time (Dantzig, Fulkerson, & Johnson, 1954; Flood, 1956). We mention the Concorde TSP Solver at this point, hereafter referred to as Concorde, as we resort to it within the computational studies. Concorde is freely available for academic use and is, according to Hahsler and Hornik (2007), one of the best currently available exact TSP solvers (Concorde, 2014). For a more extensive review of the TSP, its problem variants, and advances on solution approaches, we refer to Gutin and Punnen (2002) and Applegate, Bixby, Chvatal, and Cook (2007).

We consider driving times for each arc, service times for each vertex, and a maximum tour duration. Therefore, we use a flow formulation for our model that is closely related to a mathematical problem formulation used for the Traveling Salesman Problem with Time Windows (TSPTW) (Ascheuer, Fischetti, & Grtschel, 2001) and the Vehicle Routing Problem with Time Windows (VRPTW) as described in the corresponding chapter (Cordeau, Desaulniers, Desrosiers, Solomon, & Soumis, 2001), respectively (Desaulniers, Madsen, & Ropke, 2014) in the VRP book by Toth and Vigo (2001), respectively Toth and Vigo (2014).

To the best of our knowledge, neither the TSP nor the VRP literature has considered the optimization of delivery tours with a HEV. A weakly related problem introduced in Schneider, Stenger, and Goeke (2014) uses a VRPTW to analyze pure EVs, including the use of recharging stations to compensate for their limited range. Recently, a heuristic for solving a VRPTW with EVs is presented in Bruglieri, Pezzella, Pisacane, and Suraci (2015). The authors of Erdogan and Miller-Hooks (2012) describe a ‘Green Vehicle Routing Problem’ that considers alternative fuels that result in reduced range and therefore requires refueling. A recent overview on ‘Green Vehicle Routing’ is given in Eglese and Bektas (2014) and further combinatorial optimization problems in the context of ‘Green Logistics’ are provided by Sbihi and Eglese (2007). In addition, the difficulty of routing problems in the context of a multigraph is discussed in Garaix, Artigues, Feillet, and Josselin (2010).

The optimization problem we consider in this paper is based on the characteristics of a specific HEV that uses a retrofit electric drive kit (ARADEX AG, 2014). We based the four modes of operation and some technical and performance characteristics on this prototype vehicle. Nevertheless, our approach is sufficiently general to be used on other generic HEVs and future developments. Further details on the vehicle we consider are given in Section 5.1, which describes the generation of the benchmark instances. See (Chan, 2002; 2007) for additional information on the technical advances in electric, hybrid and fuel cell vehicles.

From a scientific point of view, the HEV-TSP is highly relevant: on the one hand it covers a critical problem within the SPS industry; on the other hand, to our knowledge, it has not previously been investigated. Our heuristic enables decision makers to assess the investment in HEVs and evaluate their utility value according to the specific structure of a delivery area. As the TSP is NP-hard (Papadimitriou, 1977) and the HEV-TSP is a generalization of the TSP, the HEV-TSP is also a NP-hard optimization problem.

The HEV-TSP is defined on a complete directed multigraph 
                        
                           G
                           =
                           (
                           V
                           ,
                           A
                           )
                           ,
                        
                      where 
                        
                           V
                           =
                           {
                           0
                           ,
                           1
                           ,
                           …
                           ,
                           n
                           ,
                           n
                           +
                           1
                           }
                        
                      is the set of vertices, including the starting and ending depot, denoted as 0 and 
                        
                           n
                           +
                           1
                           ,
                        
                      respectively, where 
                        
                           n
                           +
                           1
                        
                      is a duplicate of 0, as is typically done in this type of model. The set A contains the arcs with given costs c and travel time t for each mode of operation. For each pair of nodes i and j the cost and travel time are indicated as 
                        
                           c
                           
                              i
                              j
                           
                           c
                        
                      and 
                        
                           t
                           
                              i
                              j
                           
                           c
                        
                      for the pure combustion mode, 
                        
                           c
                           
                              i
                              j
                           
                           e
                        
                      and 
                        
                           t
                           
                              i
                              j
                           
                           e
                        
                      for the pure electric mode, 
                        
                           c
                           
                              i
                              j
                           
                           
                              c
                              c
                           
                        
                      and 
                        
                           t
                           
                              i
                              j
                           
                           
                              c
                              c
                           
                        
                      for charging the battery while driving in combustion mode and 
                        
                           c
                           
                              i
                              j
                           
                           b
                        
                      and 
                        
                           t
                           
                              i
                              j
                           
                           b
                        
                      for the boost mode when the combined combustion and electrical engine is used. For simplicity of notation, let us also define E as the set of feasible vertex pairs (i, j) with 
                        
                           i
                           ∈
                           {
                           0
                           ,
                           …
                           ,
                           n
                           }
                           ,
                           j
                           ∈
                           {
                           1
                           ,
                           …
                           ,
                           n
                           +
                           1
                           }
                           ,
                           i
                           ≠
                           j
                        
                     .

Every node i ∈ V has a given service time si
                     . The service times associated with the starting and ending depot may be different to represent the forerun in the morning and the overrun in the afternoon. We also impose a maximum route duration B to limit maximum working hours for the driver.

The battery of the vehicle has a maximum capacity lmax
                      and a charging and discharging rate rc
                      and rd
                     , respectively. When an arc is driven in charging mode, the product of the charging rate and the travel time for that arc is added to the previous state of the charge of the battery up to its maximum capacity lmax
                     . Similarly, the product of discharging rate and travel time is subtracted when the arc is driven in pure electric or boost mode.

The model for HEV-TSP uses the following decision variables. For each arc in E the binary variables xij
                      represent the use of the arc within a solution. In addition, for each mode of operation, we use a specific binary variable that indicates whether that mode is used on the arc. These variables are 
                        
                           
                              x
                              
                                 i
                                 j
                              
                              c
                           
                           ,
                        
                     
                     
                        
                           
                              x
                              
                                 i
                                 j
                              
                              e
                           
                           ,
                        
                     
                     
                        
                           x
                           
                              i
                              j
                           
                           
                              c
                              c
                           
                        
                      and 
                        
                           x
                           
                              i
                              j
                           
                           b
                        
                      for pure combustion, pure electric, charging and boost mode, respectively. The arrival time at node i ∈ V is given by the continuous variable wi
                     , and the state of battery charge when arriving at customer i ∈ V is given by li
                     . Note that l
                     0 is the initial charging state of the battery, which we assume to be 0, as we are not considering a PHEV and the remaining charge from the previous day is negligible, as shown within the numerical studies.

The HEV-TSP is a single objective problem with the sole aim of minimizing total costs so long as the maximum tour duration is not overrun. This is reflected in the following mathematical programming formulation, wherein the objective consists only of the variable costs incurred in a specific mode.

                        
                           
                              
                                 m
                                 i
                                 n
                                 
                                    ∑
                                    
                                       (
                                       i
                                       ,
                                       j
                                       )
                                       ∈
                                       E
                                    
                                 
                                 
                                    c
                                    
                                       i
                                       j
                                    
                                    
                                       c
                                       c
                                    
                                 
                                 
                                    x
                                    
                                       i
                                       j
                                    
                                    
                                       c
                                       c
                                    
                                 
                                 +
                                 
                                    c
                                    
                                       i
                                       j
                                    
                                    b
                                 
                                 
                                    x
                                    
                                       i
                                       j
                                    
                                    b
                                 
                                 +
                                 
                                    c
                                    
                                       i
                                       j
                                    
                                    c
                                 
                                 
                                    x
                                    
                                       i
                                       j
                                    
                                    c
                                 
                                 +
                                 
                                    c
                                    
                                       i
                                       j
                                    
                                    e
                                 
                                 
                                    x
                                    
                                       i
                                       j
                                    
                                    e
                                 
                              
                           
                        
                     
                  

To ensure the feasibility of a solution, we impose the following seventeen constraints:

                        
                           (1)
                           
                              
                                 
                                    
                                    
                                       
                                          
                                             x
                                             
                                                i
                                                j
                                             
                                             
                                                c
                                                c
                                             
                                          
                                          +
                                          
                                             x
                                             
                                                i
                                                j
                                             
                                             b
                                          
                                          +
                                          
                                             x
                                             
                                                i
                                                j
                                             
                                             c
                                          
                                          +
                                          
                                             x
                                             
                                                i
                                                j
                                             
                                             e
                                          
                                          =
                                          
                                             x
                                             
                                                i
                                                j
                                             
                                          
                                          
                                          ∀
                                          
                                             (
                                             i
                                             ,
                                             j
                                             )
                                          
                                          ∈
                                          E
                                       
                                    
                                 
                              
                           
                        
                     
                     
                        
                           (2)
                           
                              
                                 
                                    
                                    
                                       
                                          
                                             ∑
                                             
                                                i
                                                =
                                                0
                                             
                                             n
                                          
                                          
                                             x
                                             
                                                i
                                                j
                                             
                                          
                                          =
                                          1
                                          
                                          ∀
                                          j
                                          =
                                          1
                                          ,
                                          …
                                          ,
                                          n
                                          ;
                                          i
                                          ≠
                                          j
                                       
                                    
                                 
                              
                           
                        
                     
                     
                        
                           (3)
                           
                              
                                 
                                    
                                    
                                       
                                          
                                             ∑
                                             
                                                j
                                                =
                                                1
                                             
                                             
                                                n
                                                +
                                                1
                                             
                                          
                                          
                                             x
                                             
                                                i
                                                j
                                             
                                          
                                          =
                                          1
                                          
                                          ∀
                                          i
                                          =
                                          1
                                          ,
                                          …
                                          ,
                                          n
                                          ;
                                          i
                                          ≠
                                          j
                                       
                                    
                                 
                              
                           
                        
                     
                     
                        
                           (4)
                           
                              
                                 
                                    
                                    
                                       
                                          
                                             ∑
                                             
                                                j
                                                =
                                                1
                                             
                                             n
                                          
                                          
                                             x
                                             
                                                0
                                                j
                                             
                                          
                                          =
                                          1
                                       
                                    
                                 
                              
                           
                        
                     
                     
                        
                           (5)
                           
                              
                                 
                                    
                                    
                                       
                                          
                                             ∑
                                             
                                                i
                                                =
                                                1
                                             
                                             n
                                          
                                          
                                             x
                                             
                                                i
                                                (
                                                n
                                                +
                                                1
                                                )
                                             
                                          
                                          =
                                          1
                                       
                                    
                                 
                              
                           
                        
                     
                     
                        
                           (6)
                           
                              
                                 
                                    
                                    
                                       
                                          
                                             w
                                             0
                                          
                                          =
                                          0
                                       
                                    
                                 
                              
                           
                        
                     
                     
                        
                           (7)
                           
                              
                                 
                                    
                                    
                                       
                                          
                                             x
                                             
                                                i
                                                j
                                             
                                             
                                                c
                                                c
                                             
                                          
                                          
                                             (
                                             
                                                w
                                                i
                                             
                                             +
                                             
                                                s
                                                i
                                             
                                             +
                                             
                                                t
                                                
                                                   i
                                                   j
                                                
                                                
                                                   c
                                                   c
                                                
                                             
                                             −
                                             
                                                w
                                                j
                                             
                                             )
                                          
                                          =
                                          0
                                          
                                          ∀
                                          
                                             (
                                             i
                                             ,
                                             j
                                             )
                                          
                                          ∈
                                          E
                                       
                                    
                                 
                              
                           
                        
                     
                     
                        
                           (8)
                           
                              
                                 
                                    
                                    
                                       
                                          
                                             x
                                             
                                                i
                                                j
                                             
                                             b
                                          
                                          
                                             (
                                             
                                                w
                                                i
                                             
                                             +
                                             
                                                s
                                                i
                                             
                                             +
                                             
                                                t
                                                
                                                   i
                                                   j
                                                
                                                b
                                             
                                             −
                                             
                                                w
                                                j
                                             
                                             )
                                          
                                          =
                                          0
                                          
                                          ∀
                                          
                                             (
                                             i
                                             ,
                                             j
                                             )
                                          
                                          ∈
                                          E
                                       
                                    
                                 
                              
                           
                        
                     
                     
                        
                           (9)
                           
                              
                                 
                                    
                                    
                                       
                                          
                                             x
                                             
                                                i
                                                j
                                             
                                             c
                                          
                                          
                                             (
                                             
                                                w
                                                i
                                             
                                             +
                                             
                                                s
                                                i
                                             
                                             +
                                             
                                                t
                                                
                                                   i
                                                   j
                                                
                                                c
                                             
                                             −
                                             
                                                w
                                                j
                                             
                                             )
                                          
                                          =
                                          0
                                          
                                          ∀
                                          
                                             (
                                             i
                                             ,
                                             j
                                             )
                                          
                                          ∈
                                          E
                                       
                                    
                                 
                              
                           
                        
                     
                     
                        
                           (10)
                           
                              
                                 
                                    
                                    
                                       
                                          
                                             x
                                             
                                                i
                                                j
                                             
                                             e
                                          
                                          
                                             (
                                             
                                                w
                                                i
                                             
                                             +
                                             
                                                s
                                                i
                                             
                                             +
                                             
                                                t
                                                
                                                   i
                                                   j
                                                
                                                e
                                             
                                             −
                                             
                                                w
                                                j
                                             
                                             )
                                          
                                          =
                                          0
                                          
                                          ∀
                                          
                                             (
                                             i
                                             ,
                                             j
                                             )
                                          
                                          ∈
                                          E
                                       
                                    
                                 
                              
                           
                        
                     
                     
                        
                           (11)
                           
                              
                                 
                                    
                                    
                                       
                                          
                                             w
                                             
                                                n
                                                +
                                                1
                                             
                                          
                                          +
                                          
                                             s
                                             
                                                n
                                                +
                                                1
                                             
                                          
                                          ≤
                                          B
                                       
                                    
                                 
                              
                           
                        
                     
                     
                        
                           (12)
                           
                              
                                 
                                    
                                    
                                       
                                          
                                             x
                                             
                                                i
                                                j
                                             
                                             
                                                c
                                                c
                                             
                                          
                                          
                                             (
                                             m
                                             i
                                             n
                                             
                                                {
                                                
                                                   l
                                                   i
                                                
                                                +
                                                
                                                   t
                                                   
                                                      i
                                                      j
                                                   
                                                   
                                                      c
                                                      c
                                                   
                                                
                                                
                                                   r
                                                   c
                                                
                                                ,
                                                
                                                   l
                                                   
                                                      m
                                                      a
                                                      x
                                                   
                                                
                                                }
                                             
                                             −
                                             
                                                l
                                                j
                                             
                                             )
                                          
                                          =
                                          0
                                          
                                          ∀
                                          
                                             (
                                             i
                                             ,
                                             j
                                             )
                                          
                                          ∈
                                          E
                                       
                                    
                                 
                              
                           
                        
                     
                     
                        
                           (13)
                           
                              
                                 
                                    
                                    
                                       
                                          
                                             x
                                             
                                                i
                                                j
                                             
                                             b
                                          
                                          
                                             (
                                             
                                                l
                                                i
                                             
                                             −
                                             
                                                t
                                                
                                                   i
                                                   j
                                                
                                                b
                                             
                                             
                                                r
                                                d
                                             
                                             −
                                             
                                                l
                                                j
                                             
                                             )
                                          
                                          =
                                          0
                                          
                                          ∀
                                          
                                             (
                                             i
                                             ,
                                             j
                                             )
                                          
                                          ∈
                                          E
                                       
                                    
                                 
                              
                           
                        
                     
                     
                        
                           (14)
                           
                              
                                 
                                    
                                    
                                       
                                          
                                             x
                                             
                                                i
                                                j
                                             
                                             c
                                          
                                          
                                             (
                                             
                                                l
                                                i
                                             
                                             −
                                             
                                                l
                                                j
                                             
                                             )
                                          
                                          =
                                          0
                                          
                                          ∀
                                          
                                             (
                                             i
                                             ,
                                             j
                                             )
                                          
                                          ∈
                                          E
                                       
                                    
                                 
                              
                           
                        
                     
                     
                        
                           (15)
                           
                              
                                 
                                    
                                    
                                       
                                          
                                             x
                                             
                                                i
                                                j
                                             
                                             e
                                          
                                          
                                             (
                                             
                                                l
                                                i
                                             
                                             −
                                             
                                                t
                                                
                                                   i
                                                   j
                                                
                                                e
                                             
                                             
                                                r
                                                d
                                             
                                             −
                                             
                                                l
                                                j
                                             
                                             )
                                          
                                          =
                                          0
                                          
                                          ∀
                                          
                                             (
                                             i
                                             ,
                                             j
                                             )
                                          
                                          ∈
                                          E
                                       
                                    
                                 
                              
                           
                        
                     
                     
                        
                           (16)
                           
                              
                                 
                                    
                                    
                                       
                                          
                                             l
                                             i
                                          
                                          ≥
                                          0
                                          
                                          ∀
                                          i
                                          =
                                          0
                                          ,
                                          …
                                          ,
                                          n
                                          +
                                          1
                                       
                                    
                                 
                              
                           
                        
                     
                     
                        
                           (17)
                           
                              
                                 
                                    
                                    
                                       
                                          
                                             x
                                             
                                                i
                                                j
                                             
                                          
                                          ,
                                          
                                             x
                                             
                                                i
                                                j
                                             
                                             
                                                c
                                                c
                                             
                                          
                                          ,
                                          
                                             x
                                             
                                                i
                                                j
                                             
                                             b
                                          
                                          ,
                                          
                                             x
                                             
                                                i
                                                j
                                             
                                             c
                                          
                                          ,
                                          
                                             x
                                             
                                                i
                                                j
                                             
                                             e
                                          
                                          ∈
                                          
                                             {
                                             0
                                             ,
                                             1
                                             }
                                          
                                          
                                          ∀
                                          
                                             (
                                             i
                                             ,
                                             j
                                             )
                                          
                                          ∈
                                          E
                                       
                                    
                                 
                              
                           
                        
                     
                  

The first constraints transform the binary variables for each mode of operation into a single binary variable for each arc. Eqs. (2) and (3) guarantee that each customer is visited by the vehicle exactly once. Eqs. (4) and (5) ensure the same condition for the depot, with the exception that the depot is split into a departing depot 0 and an arriving depot 
                        
                           n
                           +
                           1
                        
                     . Constraint (6) sets the departure time of the start depot to 0, which represents the beginning of the working day for the driver. Constraints (7)–(10) define the time flow variable for each mode of operation. The time wj
                      the vehicle arrives at customer j is equal to the time wi
                      the vehicle arrived at the preceding customer i, plus the service time si
                      at that customer, plus the driving time tij
                      between these two customers in the specific mode of operation. Note that using this flow formulation eliminates the need for subtour-elimination constraints. Eq. (11) ensures that maximum working hours are not overspent when the driver finishes his working day. Note that this might lead to a situation where no feasible solution can be found for a given problem instance. A flow formulation for the battery state of charge is implemented in a similar way as for the time flow. Eq. (12) sets the new charge level lj
                      at customer j to the level li
                      at preceding customer i, plus the charging rate rc
                      multiplied by the time driven in charging mode 
                        
                           t
                           
                              i
                              j
                           
                           
                              c
                              c
                           
                        
                     . If the new charging level exceeds the maximum capacity of the battery lmax
                      the new level is set to lmax
                     . Nevertheless, in the latter case, the costs for the whole arc for charging mode 
                        
                           c
                           
                              i
                              j
                           
                           
                              c
                              c
                           
                        
                      are used in the objective, as a change of mode is not possible anywhere on an arc. Constraints (13) reduce the state of charge according to the time driven in boost mode. When an arc is driven in pure combustion mode, the charging level does not change; this is guaranteed by Eq. (14). Similarly to constraints (13), constraints (15) reduce the charging level for arcs driven in pure electrical mode. Eq. (16) ensures that the battery is never discharged below 0. Finally, constraints (17) set the decision variables for the arcs to be binary. Note that the constraints (7)–(10) and (12)–(15) are not linear for compactness reasons. For the solver, we linearized the model as shown below. For instance, Eq. (7) is replaced by the Eqs. (18) and (19), where M is a sufficiently large number.

                        
                           (18)
                           
                              
                                 
                                    
                                    
                                       
                                          
                                             w
                                             i
                                          
                                          +
                                          
                                             s
                                             i
                                          
                                          +
                                          
                                             t
                                             
                                                i
                                                j
                                             
                                             
                                                c
                                                c
                                             
                                          
                                          −
                                          
                                             w
                                             j
                                          
                                          ≤
                                          
                                             (
                                             1
                                             −
                                             
                                                x
                                                
                                                   i
                                                   j
                                                
                                                
                                                   c
                                                   c
                                                
                                             
                                             )
                                          
                                          M
                                          
                                          ∀
                                          
                                             (
                                             i
                                             ,
                                             j
                                             )
                                          
                                          ∈
                                          E
                                       
                                    
                                 
                              
                           
                        
                     
                     
                        
                           (19)
                           
                              
                                 
                                    
                                    
                                       
                                          
                                             w
                                             i
                                          
                                          +
                                          
                                             s
                                             i
                                          
                                          +
                                          
                                             t
                                             
                                                i
                                                j
                                             
                                             
                                                c
                                                c
                                             
                                          
                                          −
                                          
                                             w
                                             j
                                          
                                          ≥
                                          −
                                          
                                             (
                                             1
                                             −
                                             
                                                x
                                                
                                                   i
                                                   j
                                                
                                                
                                                   c
                                                   c
                                                
                                             
                                             )
                                          
                                          M
                                          
                                          ∀
                                          
                                             (
                                             i
                                             ,
                                             j
                                             )
                                          
                                          ∈
                                          E
                                       
                                    
                                 
                              
                           
                        
                     
                  

We also tested an aggregated version of the model, where constraints (7)–(10) and (12)–(15) are merged into two linear constraints each. For instance, we replaced Eqs. (7)–(10) by the constraints (20) and (21). However, numerical experiments showed that the aggregated version is computationally inferior and caused an increase in runtime by an approximate factor of four on a set of test instances.

                        
                           (20)
                           
                              
                                 
                                    
                                    
                                       
                                          
                                             w
                                             j
                                          
                                          ≥
                                          
                                             w
                                             i
                                          
                                          +
                                          
                                             s
                                             i
                                          
                                          +
                                          
                                             t
                                             
                                                i
                                                j
                                             
                                             
                                                c
                                                c
                                             
                                          
                                          
                                             x
                                             
                                                i
                                                j
                                             
                                             
                                                c
                                                c
                                             
                                          
                                          +
                                          
                                             t
                                             
                                                i
                                                j
                                             
                                             b
                                          
                                          
                                             x
                                             
                                                i
                                                j
                                             
                                             b
                                          
                                          +
                                          
                                             t
                                             
                                                i
                                                j
                                             
                                             c
                                          
                                          
                                             x
                                             
                                                i
                                                j
                                             
                                             c
                                          
                                          +
                                          
                                             t
                                             
                                                i
                                                j
                                             
                                             e
                                          
                                          
                                             x
                                             
                                                i
                                                j
                                             
                                             e
                                          
                                          −
                                          
                                             (
                                             1
                                             −
                                             
                                                x
                                                
                                                   i
                                                   j
                                                
                                             
                                             )
                                          
                                          M
                                       
                                    
                                 
                                 
                                    
                                    
                                       
                                          
                                          ∀
                                          (
                                          i
                                          ,
                                          j
                                          )
                                          ∈
                                          E
                                       
                                    
                                 
                              
                           
                        
                     
                     
                        
                           (21)
                           
                              
                                 
                                    
                                    
                                       
                                          
                                             w
                                             j
                                          
                                          ≤
                                          
                                             w
                                             i
                                          
                                          +
                                          
                                             s
                                             i
                                          
                                          +
                                          
                                             t
                                             
                                                i
                                                j
                                             
                                             
                                                c
                                                c
                                             
                                          
                                          
                                             x
                                             
                                                i
                                                j
                                             
                                             
                                                c
                                                c
                                             
                                          
                                          +
                                          
                                             t
                                             
                                                i
                                                j
                                             
                                             b
                                          
                                          
                                             x
                                             
                                                i
                                                j
                                             
                                             b
                                          
                                          +
                                          
                                             t
                                             
                                                i
                                                j
                                             
                                             c
                                          
                                          
                                             x
                                             
                                                i
                                                j
                                             
                                             c
                                          
                                          +
                                          
                                             t
                                             
                                                i
                                                j
                                             
                                             e
                                          
                                          
                                             x
                                             
                                                i
                                                j
                                             
                                             e
                                          
                                          +
                                          
                                             (
                                             1
                                             −
                                             
                                                x
                                                
                                                   i
                                                   j
                                                
                                             
                                             )
                                          
                                          M
                                       
                                    
                                 
                                 
                                    
                                    
                                       
                                          
                                          ∀
                                          (
                                          i
                                          ,
                                          j
                                          )
                                          ∈
                                          E
                                       
                                    
                                 
                              
                           
                        
                     
                  

A potential solution for a HEV-TSP network with a depot and three customers and arcs driven in different modes of operations is depicted in Fig. 2
                     . The first two arcs after leaving the depot are used to charge the battery. After that, the state of charging for the battery still is not sufficient for the third arc; therefore, it is driven conventionally. The shorter forth and last arc is driven in pure electric mode.

Our solution method, like many other heuristics, consists of two basic steps. First, we generate an initial solution, which then is improved in the second step. For the improvement phase, we use local search operators specially developed and tailored to the HEV-TSP. To overcome local optima, we integrate a modified Tabu Search (TS) as a metaheuristic and a diversification mechanism. A schematic diagram of this process is given in Fig. 3
                     
                      and described in detail afterwards.

To generate an initial solution we implement and compare three different approaches. For all three, we start with a tour driven in pure combustion mode. Whenever the tour duration constraint is not exceedingly tight, the use of the combustion mode generally creates a feasible solution. The first initialization approach uses a randomly generated tour sequence. A hill-climbing 2-Opt can optionally be executed afterwards based on the costs for driving in combustion mode. Second, we start at the depot and use the Nearest Neighbor (NN) algorithm to insert the remaining customers. Similar to the first approach, the NN can also be combined with a hill-climbing 2-Opt procedure using combustion costs. For the last initialization method, we capitalize on the close relationship between the HEV-TSP and the TSP. We transform our HEV-TSP benchmark instances into regular TSP instances by using only the costs for the pure combustion mode. Afterwards, we solve these instances with the Concorde TSP software to optimality and transform these solutions into a HEV-TSP solution. This gives us the optimal solution for the special case using only the pure combustion mode.

Developing a heuristic solution method for our problem requires that local search operators are able to handle and modify the operation modes. To this end, we implemented two different sets of operators. The first set, called χ-Mode Change, changes only the modes of operation on a given route while maintaining the original visit sequence of the customers. The second set, called χ-Opt with Mode Change, is simultaneously modifying the route structure and the modes of operation.

In the χ-Mode Change (χ-MC) neighborhood for a given solution, we consider all possible subsets of χ arcs and possibly modify their mode of operation. As previously mentioned, the route sequence is not altered; therefore, the cost of the new solution can be computed in constant time. In general, power consumption while driving in electric or combined electric and combustion mode is greater than the power gained while recharging the battery for the same amount of time. Therefore, it is usually necessary to exchange the mode for several arcs at a time to reduce the total costs and retain a feasible solution. During our examination, we use a ratio of 4: 1 for the charging and the discharging rate. This means that, given five arcs with the same driving time on these arcs, the first four have to be driven in charging mode in order to drive the last one in pure electric mode. Therefore, we implemented the five moves up to 5-Mode Change, considering all combinations of mode change for up to five arcs at a time. Nevertheless, it might be reasonable to exchange fewer arcs if, for example, due to previous modifications, there is still sufficient battery charge left, or if longer arcs are used to charge the battery and shorter ones are driven in electric mode. The cardinality of the χ-MC neighborhood depends on the number of customers and on the number of operation modes. In particular, because we have four operation modes and test the three currently not-used ones on χ arcs out of 
                              
                                 m
                                 +
                                 1
                              
                            arcs in the solution, the total number of neighboring solutions we generate is 
                              
                                 
                                    3
                                    χ
                                 
                                 
                                    (
                                    
                                       χ
                                       
                                          m
                                          +
                                          1
                                       
                                    
                                    )
                                 
                              
                           . Table 1
                            shows the size of the neighborhood for the five different χ-MCs with χ from 1 to 5 and a given number of customers. The steep growth of the neighborhood cardinality makes it obvious that larger values of χ should only be used when making a substantial contribution to an improved solution.

We give a formal description of the χ-MC in Algorithm 1
                           . After initializing the required variables, the two loops at steps 2 and 3 select the χ arcs and all combinations of operation modes to be changed. Note that this combination is only considered if the mode of all selected arcs is different compared to the input solution. Afterwards, the costs of the selected arcs in the new mode of operation are calculated, and if a saving can be realized, a new solution with the exchanged arcs is generated. If this solution is feasible, it is stored as currently best. Finally, the best solution found is returned, if it improves the current one.

In addition to the formal description, we show an example for the 2-Mode Change for a given solution with three customers in Fig. 4. Two arcs in the conventional mode are deleted, and all possible replacements of operation modes are checked for a new solution. This procedure is repeated for all combinations of two arcs.

The χ-Opt with Mode Change (χ-Opt MC) is based on the classical χ-Opt moves, deleting χ non-adjacent arcs and reconnecting the tour in all new feasible ways. We implemented the χ-Opt MC for 
                              
                                 χ
                                 =
                                 2
                              
                            and 
                              
                                 χ
                                 =
                                 3
                              
                           . Due to the charging and discharging of the battery, and because we consider a directed network, the direction of a solution is obviously relevant. Therefore, each selection of two arcs leads to two different ways, and each selection of three arcs to eight ways, to reconnect the network. We extend χ-Opt moves so that, for newly inserted arcs, all combinations for the modes of operation are tested. For the 2-Opt MC, the neighborhood of the 2-Opt is increased by a factor of 42, and for the 3-Opt MC the 3-Opt neighborhood is increased by a factor of 43, respectively, due to the four operation modes on which the newly inserted arcs will be tested.

The χ-Opt MC is described as Pseudocode in Algorithm 2
                           .

As for the 
                           χ-MC, the required variables are initialized, and the two loops select the arcs and the modes of operation on which to perform the changes. In contrast, as the new arcs connect different nodes than previously, all operation modes must be considered. Next, a set of new solutions Ω based on the newly inserted arcs in all modes of operation is generated. The size of this set depends on the deleted arcs χ. For each of these solutions ω ∈ Ω the cost is compared to that of the best solution. If a potential improvement is found, the feasibility of ω is checked and 
                              
                                 b
                                 e
                                 s
                                 t
                                 _
                                 S
                                 o
                                 l
                                 u
                                 t
                                 i
                                 o
                                 n
                              
                            is tentatively updated. When all combinations are tested, 
                              
                                 b
                                 e
                                 s
                                 t
                                 _
                                 S
                                 o
                                 l
                                 u
                                 t
                                 i
                                 o
                                 n
                              
                            is returned, if it improves the current solution.

An example of the 2-Opt with Mode Change is depicted in Fig. 5. Two arcs from the current solution are removed and the remainder are connected to a new tour for which all modes of operation are checked for the inserted arcs. This is repeated for all combinations of two non-adjacent arcs.

We devised a TS framework that combines the previously introduced initialization method and the local search operators. Our heuristic consists of the initialization and three main phases for the local search. The steps for the local search are repeated iteratively; it therefore is a so-called Iterated Tabu Search (ITS), combining diversification and intensification during the search process (Misevicius et al., 2005). We decided to use an ITS, as it is relatively easy to implement and to modify due to its modularity. Moreover, the ITS has successfully been applied to other routing problems, e.g., Cordeau and Maischberger (2012).

The initialization method for the ITS can be easily exchanged among the random, the NN and the Concorde-based initialization presented earlier. The result of the selected initialization method is set as best global solution and it is used as input for the first local search phase.

After initialization, we start with the actual tabu phase. The 2-Opt with Mode Change spans the search neighborhood based on the given input solution. The search leads to a local optimum, which is overcome by allowing a worsening of the objective function on the one hand and, on the other hand, keeping arcs that have recently been inserted into the solution tabu for a given number of iterations. This tabu tenure is fixed, and its value depends on the number of nodes n. We determined the best tabu tenure for different n values through preliminary computational experiments (8 for 
                           
                              n
                              =
                              8
                              ,
                           
                         7 for 
                           
                              n
                              =
                              10
                              ,
                           
                         15 for 
                           
                              n
                              =
                              20
                           
                         and 37 for 
                           
                              n
                              =
                              50
                           
                        ). This TS-search phase runs for a given number of iterations without improvement. The best solution found during this phase is used as input to the next step.

The second phase consists of a hill-climbing χ-MC. This additional step is required, as the mode changes performed by the 2-Opt with Mode Change during the Tabu-Phase are often not sufficient to introduce enough use of the electric operation mode. To determine the actual value of χ, we performed extensive computational tests, which are described in Section 5.2.2. Although the complexity and thus the runtime for this move compared to the other parts of the ITS are quite high, it improves the solution quality.

We use the third phase of the ITS as a diversification mechanism. Using the best global solution as input, we perform a random 3-Opt with Mode Change. If the resulting solution is infeasible, a new random move is generated on the best solution until a feasible one is found. The generated solution is then used as input for the tabu phase, and the ITS starts again from the first phase. First numerical experiments indicate that a single diversification step is sufficient to reach optimal solutions.

The whole ITS framework stops if a given number of iterations for the main phases is reached. The last step is always the second phase with the hill-climbing χ-MC, as a randomly generated move in the third phase is unlikely to improve the best global solution.

In this section, we first introduce the benchmark instances we created for the HEV-TSP. Second, we present the parameterization and setup for the numerical tests. Third, the results concerning the algorithm performance are presented. Finally, we point out interesting findings and results.

As
                         the HEV-TSP is a completely new optimization problem, we introduce new benchmark instances against which to test and verify our model and our solution approach. The instances are based on data we retrieved tracking real delivery tours of a large German SPS company. We extracted information such as typical distances between customers, service times, expansion and structure of the delivery area, typical driving speeds and depot location according to the delivery area. We also made some simplifications and assumptions. To ease the data handling and guarantee a depersonalization of the customer locations, our cost values and travel times are based on Euclidean distances, although our model and heuristic are able to handle asymmetric and unstructured data, even not fulfilling the triangle inequality.

We split our instances into three different sets, with different distances between the depot and the delivery area. In the first set, the depot is adjacent to the delivery area. In the second and the third sets, the depots are approximately 28 and 57 kilometer away from the delivery area, respectively. All delivery areas cover approximately 25  square kilometer. Because of the different distances of the depot from the delivery area, each set has also different driving speeds. In addition, we have a different number of customers for each of the three sets, namely 8, 10, 20 and 50. Finally, for each set and number of customers, we have three different instances with varying service times, customer locations within the delivery area, and due to these differences, different cost and travel time values. This sums to 36 instances. The instances are named 
                           
                              H
                              E
                              V
                              T
                              S
                              P
                              _
                              α
                              _
                              β
                              _
                              γ
                              ,
                           
                         where α states the distance between depot and delivery area (
                           
                              1
                              =
                              0
                              
                              
                              kilometer
                              ,
                              2
                              =
                              28
                              
                              
                              kilometer
                              ,
                              3
                              =
                              57
                              
                              
                              kilometer
                           
                        ), β indicates the number of customers and γ is a counter to distinguish the different customer locations and service times within each group. In Fig. 6, we show an example of the depot and customer arrangement for the instances 
                           
                              H
                              E
                              V
                              T
                              S
                              P
                              _
                              1
                              _
                              20
                              _
                              1
                              ,
                           
                        
                        
                           
                              H
                              E
                              V
                              T
                              S
                              P
                              _
                              2
                              _
                              20
                              _
                              1
                           
                         and 
                           
                              H
                              E
                              V
                              T
                              S
                              P
                              _
                              3
                              _
                              20
                              _
                              1
                           
                        . In the first set (Fig. 6a), the depot is located within the delivery area at the upper left corner. For the other two sets (Fig. 6b and c), the depot is also located at the upper left corner of the plane, but apart from the delivery area, which is marked with the dotted square. All sets have 20 customers.

For each pair of nodes, we calculate the costs by multiplying the Euclidean distances by a specific factor for the four modes of operation. We set the factor for driving conventionally equal to 100 percent, electrically to 20 percent, charging to 110 percent and in boost mode to 120 percent. These factors are fixed for all instances and in our opinion a conservative assumption.

The duration required to travel an arc using a specific mode of operation is based on a speed value that varies according to the arc length. We use 6 different arc length intervals, which gives a realistic approximation of real world driving time. According to the analyses we did on the real delivery tours, these speeds depend on the structure of the specific delivery area induced by the depot location, so we use three area-specific sets of speed values for the three instance sets (α-values). The speed values used are given in Table 2. For all sets, the speed on short arcs does not vary with the different modes of operation; instead, with increasing arc length, the difference in speed between the modes of operation increases. Speed values in Table 2 were determined from the real world combustion mode speeds by taking into account the characteristics of the prototype vehicle (ARADEX AG, 2014). Note that for a given i and j
                        
                           
                              
                                 t
                                 
                                    i
                                    j
                                 
                                 e
                              
                              ≥
                              
                                 t
                                 
                                    i
                                    j
                                 
                                 
                                    c
                                    c
                                 
                              
                              ≥
                              
                                 t
                                 
                                    i
                                    j
                                 
                                 c
                              
                              ≥
                              
                                 t
                                 
                                    i
                                    j
                                 
                                 b
                              
                              ,
                           
                         although this is not relevant for the solution process.

Matching the prototype of the HEV delivery van, we use a battery capacity of 16.8 kilowatt hour; we assume a charging rate of 12.0 kilowatt per hour and a discharging rate of 48.0 kilowatt per hour, consistent with the performance of the 60  kilowatt electrical engine. As explained in Section 4.2.1, the driving time on arcs in the charging mode has to be at least four times higher than the driving time in pure electric and boost modes. Therefore, the potential saving compared to driving in pure combustion mode can be calculated as 
                           
                              
                                 c
                                 c
                              
                              −
                              
                                 (
                                 0.8
                                 
                                    c
                                    
                                       c
                                       c
                                    
                                 
                                 +
                                 0.2
                                 
                                    c
                                    e
                                 
                                 )
                              
                              ,
                           
                         if the driving times in all modes were equal. However, as the driving times vary by mode of operation and arc length, savings might even be higher. Nevertheless, considering our values for driving costs, the equation predicts savings of up to 8 percent, which can be seen as a good indicator of the actual savings potential.

Finally, we set the maximum tour duration b to 480 minutes, which equals 8 hours and is the maximum average working hours per day within the European Union, established in Council Directive 93/104/EC (European Union, 1993).

We
                        
                         run all our numerical studies on a ‘Supermicro’ cloud server with exclusive access, a maximum of 8 AMD Opteron 2.1 Gigahertz cores, up to 16 gigabytes of RAM, and Windows 2008 Server as the operating system. Our algorithm is implemented in JAVA, and we should note that our heuristic does not benefit from the multiple CPUs, as it does not use multithreading. Nevertheless, we use the same infrastructure for all of our numerical studies to ensure decent comparability. The exact solutions and bounds are computed with CPLEX 12.5.

In addition to the preceding experiments to determine the tabu tenure, we also ran tests with an aspiration criterion (AC) during the TS. This AC disables the tabu feature, if a new best solution is found. Our results did not show a notable improvement in solution quality, but did experience a significant increase – more than 3 times as long on the 8 and 10 customer instances – in the runtime of the heuristic. Therefore, we disabled the AC for all subsequent experiments. In addition, we tested two strategies for the hill-climbing χ-Mode Change phase: first improve (FI) and best improve (BI). Within a single local search step, FI accepts the first solution improving the current solution, whereas BI accepts the solution with highest improvement from the whole search neighborhood. FI and BI did not show a noticeable difference in their performance. Therefore, we use FI due to an approximately 3 percent lower calculation time. The number of iterations without improvement within the TS-phase is set to 500, and the ITS runs for a total of 50 iterations for all instance sizes. These values are equal for all tests. Runtimes are specified in seconds.

In the following subsections we analyze which components to select within the ITS for the initialization, and which specific χ-MC to use for the hill-climbing phase.

We ran experiments to determine the initialization method for the ITS, selecting from among the random, the NN and the Concorde methods. Table 3 presents the results from a single run of the three different methods and the optional 2-Opt for the random and the NN initializations.

For these tests, we used the 5-MC for the hill-climbing phase, as it accesses the largest neighborhood, but we left out the 50 customer instances in order to run the 50 iterations in a reasonable time. We plot the runtime in seconds, and the costs and the gap to the best solution from all five options for each instance. As expected, use of the downstream 2-Opt for the random and NN solutions improves the quality, whereas, results from the random and NN in general have comparable quality and runtime. Surprisingly, the results of the Concord initialization are noticeably inferior to the random and NN results with 2-Opt. We assume a too-strict movement towards distance minimization, which the TS and diversification phase have problems to escape from.

As results for the random and NN initialization with 2-Opt were inconclusive, we tested the different χ-MC moves for both initialization methods to determine which specific χ-MC move and initialization method to use within the ITS. We still left out the 50 customer instances due to the complexity of the 5-MC for this number of customers.

In Table 4, we give the results for random initialization with 2-Opt and in Table 5 those for NN with 2-Opt for one run each. Both are combined with the 2-Opt. Regarding the initialization method, we report the runtime in seconds, and the costs and the gap to the best solution.

The results show, that the 1-MC and 2-MC moves are competitive neither for the random nor for the NN initialization, as they are not able to make noticeable use of the electric operation mode; therefore, they do not generate large savings. In contrast, the 3-MC is already able to integrate the electric mode, and its results are close to the best-found solutions for both, random and NN initialization. The results for the random plus 4-MC were worse than the results for both 3-MC configurations, but the overall best solutions were found with the 4-MC and the NN initialization. As the runtime compared to the 3-MC is just slightly longer, we used this setup for all subsequent ITS runs. We received unexpected results for the 5-MC; they were worse for both initialization methods than those for the NN and 4-MC. If the arcs required the same driving time, then it would require driving four arcs in the charging mode to gain sufficient energy to drive one arc in the electric mode and would involve a 5-Mode change from driving five arcs conventionally. But as it is often the case that longer arcs are used for charging and shorter arcs in the electric mode, then three arcs can be used to charge the battery before driving one arc in electric mode and this can be found using a 4-Mode change. Obviously, runtime for the 4-MC is shorter than the one for the 5-MC, supporting our setup selection.

In this subsection we provide all results concerning the performance of our algorithm. We compare the ITS with other solution approaches and evaluate the runtime and solution quality.

As a numerical basis for the different experiments, we generated results from five different runs of the ITS with the previously described setup. Table 6
                           
                            summarizes these results for all instances. As we decided to use the 4-MC, runtime for the 50 customer instances reached a maximum of 50 minutes, which is considerable, but still within a practicable limit. Although the best results are not reached within every run, the variation among the runs is not large. Nevertheless, some instances seem more difficult to solve than others. This is not always related to the number of customers, as instance HEVTSP_1_08_1 shows; the best solution was only found on one of the five runs. The best cost values found within the five runs are used as source for the remainder of the numerical studies, taking the sum of the runtime for all runs as a basis.

To evaluate the quality of our heuristic solution approach we implemented our mathematical model in the OPL modeling language and solved it using the CPLEX-Solver. We use small instances with eight and ten customers for that purpose and tried to solve them with a standard desktop PC with an Intel Core 2 Duo E8400 running at 3.00 Gigahertz and 2 gigabyte of RAM. However, CPLEX ran out of memory even for some of the 8 customer instances, and therefore was not able to solve these instances to optimality. The results from the test runs on the cloud server are reported in Table 7 along with the ITS results. We report the objective values and the required calculation times in seconds for the results from CPLEX and the ITS. For the values marked with an asterisk (*) CPLEX ran out of memory. We report upper and lower bound for these instances. Our heuristic was able to find optimal solutions for all instances that are solvable by CPLEX in a fraction of the calculation time. It took CPLEX almost 95 hours to solve one of the ten customer instances, which the heuristic solved within 5 seconds. For the three unsolved instances, the heuristic solution was below the upper bound found by CPLEX at that time.

We also tried to solve the 20 customer instances. These results are also included in Table 7. We set a maximum running time limit of 100 hours, but within that limit, CPLEX was only able to find a valid solution for one of the instances as an upper bound. For this instance the result obtained by the ITS is also superior. Moreover, the lower bounds found by CPLEX within the given running time were so far from the heuristic solutions that these results are not at all meaningful. However, the results show that the problem is very difficult to solve.

It is clear that the number of customers significantly influences calculation times for both CPLEX and ITS, whereas the location of the depot does not have any significant influence on runtime. However, within some sets, runtimes may obviously differ for CPLEX.

In this subsection, we show that the ITS is superior to a solution based on the best solution in conventional mode combined with a pure mode change. To this end, we compare the ITS with a solution based on a solution generated by Concorde and improved by a hill-climbing 4-MC and a hill-climbing 5-MC. We illustrate the results in Table 8
                           . For almost all instances, the ITS found at least the same results as the other approaches. However, with an increasing number of customers, the quality of the ITS degrades slightly. This could be counteracted by increasing the number of iterations and accepting an increase in runtime. For some of the instances, we noticed that the ITS found a solution where the tour structure deviates from the best combustion solution. This means that a longer tour can lead to lower costs, as the savings gained while driving electrically outweigh the costs for enlarging the tour slightly; this is also why the Concorde initialization performs worse than the NN, as shown in Section 5.2.1.

In addition to the hill-climbing approach, we initialized the ITS with the Concorde solution. The results are similar to the results gained with the NN plus 2-Opt initialization, but for instances where the tour deviates from the Concorde solution, the results were inferior during our test runs. Giving the best combustion solution as initialization might limit the ITS to a region within the search space from which it cannot escape. This would prevent the ITS from finding better solutions requiring a detour in terms of distance.

With an increase in the potential savings from reduced costs from electrical operation or raising fuel prices, this effect will increase and the profitable efficiency of a HEV will grow.

In this subsection, we want to point out some problem specific findings. We give insights into the battery usage, calculate potential savings compared to regular combustion vehicles, and show other setups for the driving modes.

As stated in the problem description, we assume the initial charging of the vehicle’s battery to be zero, as we are not considering PHEVs. However, one could assume that there is a remaining charge left from the previous day. To analyze this behavior we plotted the remaining charge in watt per hour and the percentage of the total battery capacity for the best results we obtained within our numerical experiments. These results are given in Table 9
                           .

Out of all instances, the maximum value for the remaining charge is 378 watt per hour, which is equal to 2.25percent of the overall battery capacity. This is rather negligible for the consecutive day and supports our assumption, especially considering the average value over all instances of 0.47 percent. However, these results are not surprising, as charging the battery while driving causes additional costs for that specific arc. Therefore, charging is avoided, as long as the charge cannot be utilized on another arc to realize savings in the electric mode. This implicitly minimizes the remaining charge at the end of a single day.

To show the potential savings of a HEV, we compare the results of the ITS with the optimal solution in pure combustion mode, generated by Concorde. In Table 10
                           , we report the costs and the driving time for both methods. In addition, we calculated the percentage difference between these two values. All instances show a potential saving from usage of a HEV, but these savings vary significantly. On the one hand, it is self-evident that the savings increase with the tour length and, therefore, with an increasing number of customers. This is reflected in the results. On the other hand, the savings depend highly on the depot location. The closer the depot is to the delivery area, the higher are the savings. This is not obvious; we first assumed that the reason for this is the limited battery, as the long arcs into the delivery area were not used to charge the battery. But increasing capacity did not change the result, implying that, for the given cost structure, driving long arcs into the area as in sets two and three is simply more efficient in combustion mode. As these arcs contribute a large percentage to the overall tour length, the savings for these network structures are smaller.

The tour duration is increased for all instances, as the combination of charging and electric mode requires a longer driving time than driving in pure combustion mode for most arc combinations. However, regarding a fixed payment for the driver and, therefore, a tour duration limitation, the increase in driving time has no influence on the objective function. Additional tests with a highly restricted tour duration (limited to the duration in combustion mode) show that savings still can be achieved, but of course fewer arcs are driven in electric mode, and the savings are smaller.

In contrast to our approach, a normal HEV does not have or use any knowledge of the routing. Therefore, it is unable to find the best setup for the whole tour and instead is determining the mode of operation according to the current charging state of the battery. We try to emulate this behavior and compare it to the results of the ITS, which incorporates the routing knowledge. To do so, we charge the battery for as many arcs until a given charging level limit is overrun and use the electric mode afterwards until the limit is underrun again. This procedure is repeated for the whole tour, based on the solution generated by Concorde. We call this procedure Simple Mode Selection (SMS) and use 10  percent steps for the charging level limit and select the best result from the SMS to compare with the ITS solutions. The corresponding outcome is given in Table 11
                           . A solution becomes invalid, if the arc after reaching the charging limit cannot be driven in the electric mode due to its length. For the 10 percent limit no valid solutions could be obtained. But as we were able to find valid solutions for all of our instances for at least one charging level limit, we did not apply a more sophisticated method here.

The results show that the SMS solutions are always worse than the ITS solutions. This is not surprising, as the SMS does not use the knowledge of the routing. This leads to two different disadvantages. First, the SMS does not select profitable arcs for the charging respectively for the electric mode, and second, the battery might be charged unnecessarily, in contrast to the ITS, as shown in Section 5.4.1. These factors sum up to a gap between 2.43 and 10.35 percent.

One major limitation we have in our problem setting is that the mode of operation can only be changed at a vertex. This is not entirely consistent with the reality. In this subsection we derive a possible solution for this problem and show its potential with some additional numerical experiments.

Unfortunately, splitting an arc only works under the assumption that the percentage cost and the travel time for an arc in a specific mode of operation is equal to the percentage it is used. Under this condition, we are able to split an arc at any position and calculate the appropriate cost and travel time values. This assumption seems to be reasonable, as long as the average speed is relatively equal for the two partial arcs before and after the splitting point.

For our Arc Splitting (AS) approach, we additionally assume, that it is always profitable to charge the battery and use the charge to drive in the electric mode. Now, we want to split the arc in a way that the first part is used to charge the battery, the second part is driven in the electric mode, and the total battery charge remains the same before and after this arc. Therefore, we define the Splitting Ratio (SR) for an arc as the percentage to be driven in charging mode and 
                              
                                 1
                                 −
                                 S
                                 R
                              
                            as the percentage to be driven in electric mode. As the charging and discharging of the battery depends on the travel time, the SR for any arc specified by ij has to be calculated as follows:

                              
                                 
                                    
                                       S
                                       
                                          R
                                          
                                             i
                                             j
                                          
                                       
                                       =
                                       
                                          
                                             t
                                             
                                                i
                                                j
                                             
                                             
                                                c
                                                c
                                             
                                          
                                          
                                             
                                                
                                                   r
                                                   d
                                                
                                                
                                                   r
                                                   c
                                                
                                             
                                             
                                                t
                                                
                                                   i
                                                   j
                                                
                                                e
                                             
                                             +
                                             
                                                t
                                                
                                                   i
                                                   j
                                                
                                                
                                                   c
                                                   c
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           
                        

Due to the distance dependent speed values, the SR is calculated individually for each arc that is split. Based on the SR respectively 
                              
                                 1
                                 −
                                 S
                                 R
                              
                            the proportional values for the arc costs and travel time in charging respectively in electric mode are calculated and their sum equals the new total arc costs and travel time. The procedure of the AS is illustrated in Fig. 7
                           . An arc in combustion mode is replaced by an arc that is partially driven in the charging and partially in electric mode. The mode change takes place at the calculated SR.

Based on the SR and the according AS, we calculate two additional solutions. The first one is based on the Concorde solution and for all arcs the AS is applied. We call this approach Global Arc Splitting (GAS). Second, we take the ITS solution and apply the AS to all arcs that are still in the combustion mode (ITS + AS). An AS move is not applied, if the resulting solution would exceed the tour duration constraint. The results are given in Table 12
                            and costs for GAS and ITS + AS are rounded to two decimal digits. Surprisingly, the ITS is still superior to the GAS for the instances with the depot adjacent to the delivery area. This proves, that the ITS is able to select profitable arcs for charging respectively for driving in the electric mode. On the other instances the ITS solutions contained substantially long arcs in combustion mode. Here, the GAS was able to produce better solutions, as all arcs contribute to the savings in the electric mode. Overall, combining the ITS with the AS generates the best results, as both advantages are combined. The ITS contributes charging and electric arc combinations, whereas, the AS realizes idle potential. However, keep in mind, that all results in this subsection are only valid under the additional assumptions described above. Furthermore, using the AS or the GAS might not be the best in matters of battery lifetime, as the charging and discharging frequency is significantly increased compared to the pure ITS.

We presented a new optimization problem dealing with the use of HEVs for customer deliveries. The exact solution of small instances of the problem allowed evaluating the reasonability of our heuristic solution approach on the larger benchmark instances generated using data of real world delivery tours. Moreover, we showed that the potential for savings highly depends on the depot location and the structure of the delivery area and that additional savings are possible when deviating from the best tour for a pure combustion vehicle.

Nevertheless, we see potential for further research in this area. Although the problem becomes even more difficult to solve, it might be worth considering an extension of the VRP with HEVs. This would also allow consideration of customer demand and vehicle capacity, which could also be a starting point for incorporating current vehicle weight into the calculations of fuel and electrical power consumption. So far, we did not consider weight dependent costs or charging and discharging rates, as this would require an additional dimension within the solution process, making the problem even more difficult to solve.

Although we showed that the remaining battery charge at the end of the tour is negligible, it may be interesting to analyze a multi day problem. It is conceivable that in sum it might be profitable to put a focus on charging the battery for one or two days, resulting in higher savings on the subsequent day.

@&#ACKNOWLEDGMENTS@&#

We are grateful to the reviewers and the time they spent to significantly improve the paper. Their comments and remarks contributed to some important changes and additional sections during the revision process, enriching the whole paper and increasing its readability.

@&#REFERENCES@&#

