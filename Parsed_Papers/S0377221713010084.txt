@&#MAIN-TITLE@&#The nuclear medicine production and delivery problem

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           A nuclear medicine production and delivery problem is defined and modeled.


                        
                        
                           
                           A mixed integer programming model is developed.


                        
                        
                           
                           A large neighborhood algorithm with improvement algorithms is proposed.


                        
                        
                           
                           A benchmark problem set is developed.


                        
                        
                           
                           Computational results including a case study show that the approach performs well.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Routing

Nuclear medicine

Half-life

Production and delivery

Vehicle routing

Large neighborhood search

@&#ABSTRACT@&#


               
               
                  Half-life is a unique characteristic of radioactive substances used in a variety of medical treatments. Radioisotope F-18 used for diagnosing and monitoring many types of cancers has a half-life of 110minutes. As such, it requires careful coordination of production and delivery by manufacturers and medical end-users. To model this critical production and delivery problem, we develop a mixed integer program and propose a variant of a large neighborhood search algorithm with various improvement algorithms. We conduct several computational experiments to demonstrate the effectiveness of the proposed approach. The method when applied in a case study shows that improvement in terms of both time and cost is possible in the production and delivery of F-18.
               
            

@&#INTRODUCTION@&#

To our knowledge, no previous work has considered the nuclear medicine production and delivery problems (NMPDP) posed by F-18, an isotope that requires scrupulous determination of manufacturing levels as well as accounting for its rapid deterioration. In this paper we develop a mixed integer programming (MIP) model and propose a variant of a large neighborhood search (LNS) algorithm with various improvement algorithms. We conduct several computational experiments to demonstrate the effectiveness of the proposed approach. We conclude that the approach will help manufacturers and the medical community produce and deliver F-18 considering both time and cost.

The remainder of this paper is organized as follows. The detailed problem is described in Section 2. A literature review is presented in Section 3. The MIP model and our proposed approach are presented in Sections 4 and 5. Our experimental results are shown in Section 6. A case study is presented in Section 7 and our concluding remarks are presented in Section 8.

The description below is based on a manufacturer that produces only radioisotope F-18 that we observed. Physicians order nuclear medicine, such as F-18, based on a specified level of radiation according to their injection plans for the medicine. The manufacture gathers a set of customer orders a day in advance, each of which corresponds to a hospital and perhaps multiple patients, and schedules delivery vehicles to visit each hospital. Each customer has a requested quantity of F-18 and time window for delivery. The end of time window corresponds to the medicine’s usage time. F-18’s half-life, 110minutes, is the elapsed time until the number of atoms reduces to the half of its initial state. To meet the specified radiation level, the quantity of medicine produced is determined based on the production time and the usage time accounting for F-18’s half-life. The production quantity must be equal to 
                        
                           
                              
                                 d
                              
                              
                                 i
                              
                           
                           
                              
                                 2
                              
                              
                                 (
                                 
                                    
                                       l
                                    
                                    
                                       i
                                    
                                 
                                 -
                                 
                                    
                                       f
                                    
                                    
                                       i
                                    
                                 
                                 )
                                 /
                                 HL
                              
                           
                        
                     , where di
                     , li
                     , fi
                      and HL correspond to demand radiation quantity, use time, production termination time of order i, and the half-life, respectively.

The F-18 manufacturer batches customer orders in a production run. The factory has multiple cyclotrons, each capable of multiple production runs in a day. In this paper, we divide a cyclotron’s production capacity into production runs with fixed start and end times. Management typically schedules the cyclotrons to cope with F-18’s unpredictable low yield, which results from the process’s stochastic nature. For this reason the manufacturer we observed prefers preset production runs although they may cause delivery vehicles to wait or excessive use of cyclotrons. We assume that when a production run is used, a fixed production cost occurs regardless of the production quantity, and that if no customer orders are assigned to a production run, there is no production cost for the run.

In the problem, vehicles with different capacities, i.e., heterogeneous vehicles, are available for delivery from the plant to the customer stops. Time windows in which the vehicles are available are given and multiple trips per vehicle are allowed. Special packaging
                        1
                        International Atomic Energy Agency (IAEA) suggests Type A packaging, which seals F-18 with a fiberboard box, a wooden box, and a steel drum filled with supplementary radiation-blocking materials. (IAEA, 2012, Cyclotron produced radionuclides: Guidance on Facility Design and Production of [18F]Fluorodeoxyglucose(FDG), IAEA Radioisotopes and Radiopharmaceuticals Series No. 3).
                     
                     
                        1
                      protects workers and the public from radiation, and maintains product integrity. Split deliveries are not allowed and a single vehicle services a customer order.

We summarize the assumptions in the model to characterize the manufacturer’s operations:
                        
                           –
                           The manufacturer has K different machines (cyclotrons) with different capacity.

Each machine has a fixed number of scheduled production runs with fixed start and end times.

One or many production runs can be skipped when appropriate.

Vehicles start and end at the manufacturing plant.

Multiple trips are possible for each vehicle.

Demand quantities and delivery times are specified for each customer order.

A customer order is serviced by a single vehicle (split delivery is not allowed).

A single vehicle can deliver a product produced in separate production runs.

The end of a customer’s time window is the medicine usage time. A vehicle arriving before the customer’s earliest allowed time waits until the time window begins. Late arrival after the time window is prohibited.

Production quantities are determined accounting for the half-life of F-18 and the duration between production and delivery times.

The NMPDP also presents two sub-problems. Considering only the production scheduling component, it becomes a special type of bin packing problem, i.e., the production runs are modeled as bins and the customer orders are items. Since the production runs have different capacities, this problem becomes a variable-sized bin packing problem. Further, the size (production quantity) of items (customer orders) changes depending on the bin (production run) used. Thus, the production scheduling problem is a special case of the variable-sized bin packing problem (Pisinger & Sigurd, 2005).

The routing component, i.e., fixing the production schedule, becomes a vehicle routing problem with time windows (VRPTW). While vehicles leave the depot (production facility) at any time in a typical VRPTW, however, the embedded VRPTW in the problem specifies the ready times for the customer orders. The embedded VRPTW problem is similar to the pickup and delivery problem with time windows (PDPTW) (Dumas, Desrosiers, & Soumis, 1991; Lee, Ferdinand, Kim, & Ko, 2010).

@&#LITERATURE REVIEW@&#

The nuclear medicine delivery problem resembles some perishable food and newspaper delivery problems. This section briefly reviews these studies and research efforts.


                     Tarantilis and Kiranoudis (2001) consider fresh milk distribution for a diary company in Athens, Greece, and propose a modified version of the threshold-acceptance algorithm of Dueck and Scheuer (1990), which is a deterministic version of the simulated annealing algorithm. Tarantilis and Kiranoudis (2001) treat the problem as a heterogeneous fixed fleet vehicle routing problem and do not consider customer time windows. Entrup, Gunther, Van Beek, Grunow, and Seiler (2005) develop three MIP models for production scheduling problems in yogurt production. They explicitly consider shelf-life in their models but do not consider delivery. Hsu, Hung, and Li (2007) and Osvald and Stirn (2008), who study the delivery of temperature-sensitive perishable food products, consider customer time windows, product value deterioration along delivery time, and time-dependent travel time, and formulate the problem as a mathematical model. Hsu et al. (2007) additionally consider time-varying temperature during the delivery day and propose a simple insertion heuristic to demonstrate the importance of the consideration of product value deterioration and energy cost in perishable product delivery.


                     Chen, Hsueh, and Chang (2009) study a production scheduling and vehicle routing problem with time windows for perishable food products but late delivery is allowed with a penalty. Each retailer has a stochastic demand with a known probability density function. The authors assume a single production line and that all products on the same vehicle are produced continuously as a single batch created on a particular production line. They present an integer nonlinear programming model for the problem, and propose a decomposition-based solution approach which uses the Nelder–Mead simplex algorithm (Nelder & Mead, 1965) for the production scheduling sub-problem and insertion and improvement algorithms for the vehicle routing sub-problem.


                     Garcia and Lozano (2004) study ready-mix concrete delivery. They classify the problem as scheduling with fixed start and end times. Raw materials at a plant are loaded into a revolving drum mounted on a vehicle which immediately delivers the mix to the customer site. The plant can mix up to a specified number (capacity) of customer orders at the same time. Since the plant has limited capacity, not all customer orders can be served. The authors consider two scenarios, arbitrary customer value and uniform customer value. They show that the first case corresponds to the fixed job scheduling problem and can be solved by a minimum cost flow algorithm. For the second case, they propose an exact graph-based algorithm and a branch-and-bound heuristic algorithm.


                     Mantel and Fontein (1993) develop a nonlinear mathematical programming model for designing a distribution network and routing solution for a Dutch regional newspaper. They use a location–allocation heuristic for determining the number of distribution centers and their locations and the savings algorithm of Clarke and Wright (1964) for truck route generation.


                     Ree and Yoon (1996) propose a solution method between three main distribution centers and 250 local distribution centers in Korea. They use a generalized assignment problem algorithm to assign the main centers to local centers and develop a simulated annealing algorithm that allows split deliveries. Song, Lee, and Kim (2002) use a regret distance method to assign three printing plants to 400 local distribution agents, a sweep-based method for route generation, and an urgent route first rule for route dispatching as the solution algorithms.


                     Hurter and Van Buer (1996) and Van Buer, Woodruff, and Olson (1999), who study a newspaper production and delivery problem with a single press, propose a nonlinear mathematical programming model and compare the performance of various tabu searches and simulated annealing algorithms. They also demonstrate that allowing multiple trips for a vehicle reduces operating costs. Russell, Chiang, and Zepeda (2008) consider a newspaper delivery problem and use a simple sequencing method based on the distance of zones from a newspaper printing plant for synchronizing production and truck loading, and a parallel insertion and tabu search method for the delivery routing problem. They report a significant reduction in the number of vehicles and travel times compared with the firm’s current practice.


                     Bachouch, Guinet, and Hajri-Gabouj (2009) study drug delivery for a French firm providing homecare concerning both planned and on-call delivery. They develop a mathematical model to test four strategies of deliveries: scheduling a specified number of deliveries, starting a tour only if a defined distance is reached by the calculated tour, starting deliveries of each carrier when a fixed number of assigned deliveries are reached, and starting deliveries at fixed hours.

There is some literature on the integration of production and distribution planning. Chandra and Fisher (1994) conduct computational experiments and report a 3–20% reduction in total operating cost by coordinating production and distribution decisions. Chang and Lee (2003) show the difficulty in modeling and analyzing systems that integrate production scheduling and delivery. Investigating cases in which jobs require different amount of storage space during delivery, they prove the problems are NP-hard and propose simple heuristics with worst-case performance ratio analysis. Li, Vairaktarakis, and Lee (2005) extend the single machine scheduling problem of Chang and Lee (2003) to consider multiple customer delivery locations. They propose a dynamic programming approach considering only a single vehicle. Toth and Vigo (2002) study the vehicle routing problem (VRP) where all loads are ready to be delivered at time zero.


                     Averbakh (2010), who introduces a production and delivery problem in which jobs are released in real-time, develops the shortest remaining processing time (SRPT) based rule as the solution approach. Reviewing the scheduling problem literature considering same-time production and delivery decisions, Chen (2010) finds no research regarding production quantity adjustment according to production time.

As mentioned, no previous research has considered the NMPDP which combines the variable item size bin packing problem and the PDPTW. While the NMPDP is similar to the perishable food delivery problem, in that product value deteriorates quickly, the NMPDP prohibits late delivery whereas the perishable food delivery problem allows late delivery with a penalty. Although similar to newspaper delivery, i.e. the NMPDP also requires strict just-in-time delivery, production cannot occur in advance and production and delivery must be synchronized, NMPDP’s novelty comes from the half-life of the nuclear medicine, which requires that production quantity be adjusted to meet the order quantity and that the timing of production be determined considering both production and delivery.

This section introduces an MIP model for scheduling the production and delivery of radioisotope F-18 to closely match demand. This paper uses the following notation:
                        
                           
                              
                              
                              
                                 
                                    
                                       Indices
                                    
                                 
                                 
                                    
                                       i, j
                                    
                                    customer stop index, 1,2,…,
                                       n; 0=plant index (start location); n
                                       +1=plant index (final location)
                                 
                                 
                                    
                                       v
                                    
                                    vehicle index, 1,2,…,
                                       V
                                    
                                 
                                 
                                    
                                       h
                                    
                                    vehicle tours index, 1,2,…,
                                       H
                                    
                                 
                                 
                                    
                                       k
                                    
                                    machine index, 1,2,…,
                                       K
                                    
                                 
                                 
                                    
                                       p
                                    
                                    production run index, 1,2,…,
                                       P
                                    
                                 
                                 
                                    
                                       
                                    
                                 
                                 
                                    
                                       Parameters
                                    
                                 
                                 
                                    
                                       di
                                       
                                    
                                    customer i demanded quantity
                                 
                                 
                                    [ei
                                       ,
                                       li
                                       ]
                                    time window of customer i; li
                                       
                                       =the exact time the medicine is used
                                 
                                 
                                    
                                       ck
                                       
                                    
                                    production capacity of each production run on machine k
                                    
                                 
                                 
                                    
                                       fpk
                                       
                                    
                                    completion time of production run p on machine k
                                    
                                 
                                 
                                    
                                       bipk
                                       
                                    
                                    production quantity for customer i when it is produced in production run p on machine k; can be calculated by 
                                          
                                             
                                                
                                                   d
                                                
                                                
                                                   i
                                                
                                             
                                             
                                                
                                                   2
                                                
                                                
                                                   
                                                      
                                                         
                                                            
                                                               l
                                                            
                                                            
                                                               i
                                                            
                                                         
                                                         -
                                                         
                                                            
                                                               f
                                                            
                                                            
                                                               pk
                                                            
                                                         
                                                      
                                                      
                                                         110
                                                      
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                                 
                                    
                                       tij
                                       
                                    
                                    travel time from location i to location j
                                    
                                 
                                 
                                    
                                       si
                                       
                                    
                                    service time at location i
                                    
                                 
                                 
                                    
                                       Ov
                                       
                                    
                                    capacity of vehicle v
                                    
                                 
                                 
                                    
                                       Rk
                                       
                                    
                                    production cost of each run on machine k
                                    
                                 
                                 
                                    
                                       F
                                    
                                    fixed cost for each vehicle
                                 
                                 
                                    
                                       G
                                    
                                    travel cost per unit distance
                                 
                                 
                                    
                                       M
                                    
                                    a sufficiently large number
                                 
                                 
                                    
                                       
                                    
                                 
                                 
                                    
                                       Decision variables
                                    
                                 
                                 
                                    
                                       zipk
                                       
                                    
                                    1, if customer i’s demand is satisfied from production run p on machine k; 0, otherwise
                                 
                                 
                                    
                                       qpk
                                       
                                    
                                    1, if production run p on machine k is used; 0, otherwise
                                 
                                 
                                    
                                       yivh
                                       
                                    
                                    1, if customer i is visited by the hth tour of vehicle v; 0, otherwise
                                 
                                 
                                    
                                       xij
                                       
                                    
                                    1, if customer i is immediately followed by customer j during a vehicle’s tour; 0, otherwise
                                 
                                 
                                    
                                       wvh
                                       
                                    
                                    departure time for vehicle v from production facility for tour h
                                    
                                 
                                 
                                    
                                       ai
                                       
                                    
                                    arrival time at customer i
                                    
                                 
                                 
                                    
                                       gi
                                       
                                    
                                    cumulative quantity of delivered products after a vehicle visits customer i
                                    
                                 
                              
                           
                        
                     
                  

We construct the MIP model as follows:
                        
                           (1)
                           
                              Min
                              
                              
                                 
                                    
                                       ∑
                                    
                                    
                                       p
                                       =
                                       1
                                    
                                    
                                       P
                                    
                                 
                              
                              
                                 
                                    
                                       ∑
                                    
                                    
                                       k
                                       =
                                       1
                                    
                                    
                                       K
                                    
                                 
                              
                              
                                 
                                    R
                                 
                                 
                                    k
                                 
                              
                              
                                 
                                    q
                                 
                                 
                                    pk
                                 
                              
                              +
                              F
                              
                                 
                                    
                                       ∑
                                    
                                    
                                       i
                                       =
                                       1
                                    
                                    
                                       n
                                    
                                 
                              
                              
                                 
                                    x
                                 
                                 
                                    0
                                    i
                                 
                              
                              +
                              G
                              
                                 
                                    
                                       ∑
                                    
                                    
                                       i
                                       =
                                       0
                                    
                                    
                                       n
                                    
                                 
                              
                              
                                 
                                    
                                       ∑
                                    
                                    
                                       j
                                       =
                                       1
                                    
                                    
                                       n
                                       +
                                       1
                                    
                                 
                              
                              
                                 
                                    x
                                 
                                 
                                    ij
                                 
                              
                              
                                 
                                    t
                                 
                                 
                                    ij
                                 
                              
                           
                        
                     
                     
                        
                           (2)
                           
                              
                                 
                                    
                                    
                                       
                                          s
                                          .
                                          t.
                                       
                                    
                                 
                                 
                                    
                                    
                                       
                                          
                                          
                                          
                                             
                                                
                                                   ∑
                                                
                                                
                                                   p
                                                   =
                                                   1
                                                
                                                
                                                   P
                                                
                                             
                                          
                                          
                                             
                                                
                                                   ∑
                                                
                                                
                                                   k
                                                   =
                                                   1
                                                
                                                
                                                   K
                                                
                                             
                                          
                                          
                                             
                                                z
                                             
                                             
                                                ipk
                                             
                                          
                                          =
                                          1
                                          ,
                                          
                                          ∀
                                          
                                          i
                                          =
                                          1
                                          ,
                                          …
                                          ,
                                          n
                                       
                                    
                                 
                              
                           
                        
                     
                     
                        
                           (3)
                           
                              
                              
                              
                                 
                                    
                                       ∑
                                    
                                    
                                       i
                                       =
                                       1
                                    
                                    
                                       n
                                    
                                 
                              
                              
                                 
                                    b
                                 
                                 
                                    ipk
                                 
                              
                              
                                 
                                    z
                                 
                                 
                                    ipk
                                 
                              
                              ⩽
                              
                                 
                                    c
                                 
                                 
                                    k
                                 
                              
                              ,
                              
                              ∀
                              
                              k
                              =
                              1
                              ,
                              …
                              ,
                              K
                              ,
                              
                              p
                              =
                              1
                              ,
                              …
                              ,
                              P
                           
                        
                     
                     
                        
                           (4)
                           
                              
                              
                              
                                 
                                    f
                                 
                                 
                                    pk
                                 
                              
                              ⩽
                              
                                 
                                    w
                                 
                                 
                                    vh
                                 
                              
                              +
                              M
                              (
                              2
                              -
                              
                                 
                                    z
                                 
                                 
                                    ipk
                                 
                              
                              -
                              
                                 
                                    y
                                 
                                 
                                    ivh
                                 
                              
                              )
                              ,
                              
                              ∀
                              i
                              =
                              1
                              ,
                              …
                              ,
                              n
                              ,
                              
                              k
                              =
                              1
                              ,
                              …
                              ,
                              K
                              ,
                              
                              h
                              =
                              1
                              ,
                              …
                              ,
                              H
                              ,
                              
                              p
                              =
                              1
                              ,
                              …
                              ,
                              P
                              ,
                              
                              v
                              =
                              1
                              ,
                              …
                              ,
                              V
                           
                        
                     
                     
                        
                           (5)
                           
                              
                              
                              
                                 
                                    w
                                 
                                 
                                    vh
                                 
                              
                              +
                              
                                 
                                    t
                                 
                                 
                                    oi
                                 
                              
                              ⩽
                              
                                 
                                    a
                                 
                                 
                                    i
                                 
                              
                              +
                              M
                              (
                              2
                              -
                              
                                 
                                    x
                                 
                                 
                                    0
                                    i
                                 
                              
                              -
                              
                                 
                                    y
                                 
                                 
                                    ivh
                                 
                              
                              )
                              ,
                              
                              ∀
                              
                              i
                              =
                              1
                              ,
                              …
                              ,
                              n
                              ,
                              
                              v
                              =
                              1
                              ,
                              …
                              ,
                              V
                              ,
                              
                              h
                              =
                              1
                              ,
                              …
                              ,
                              H
                           
                        
                     
                     
                        
                           (6)
                           
                              
                              
                              
                                 
                                    a
                                 
                                 
                                    i
                                 
                              
                              +
                              
                                 
                                    s
                                 
                                 
                                    i
                                 
                              
                              +
                              
                                 
                                    t
                                 
                                 
                                    ij
                                 
                              
                              ⩽
                              
                                 
                                    a
                                 
                                 
                                    j
                                 
                              
                              +
                              M
                              (
                              1
                              -
                              
                                 
                                    x
                                 
                                 
                                    ij
                                 
                              
                              )
                              ,
                              
                              ∀
                              
                              i
                              =
                              0
                              ,
                              …
                              ,
                              n
                              ,
                              
                              j
                              =
                              1
                              ,
                              …
                              ,
                              n
                           
                        
                     
                     
                        
                           (7)
                           
                              
                              
                              
                                 
                                    a
                                 
                                 
                                    j
                                 
                              
                              +
                              
                                 
                                    s
                                 
                                 
                                    j
                                 
                              
                              +
                              
                                 
                                    t
                                 
                                 
                                    j
                                    ,
                                    n
                                    +
                                    1
                                 
                              
                              ⩽
                              
                                 
                                    w
                                 
                                 
                                    v
                                    ,
                                    h
                                    +
                                    1
                                 
                              
                              +
                              M
                              (
                              2
                              -
                              
                                 
                                    x
                                 
                                 
                                    j
                                    ,
                                    n
                                    +
                                    1
                                 
                              
                              -
                              
                                 
                                    y
                                 
                                 
                                    jvh
                                 
                              
                              )
                              ,
                              
                              ∀
                              
                              j
                              =
                              1
                              ,
                              …
                              ,
                              n
                              ,
                              
                              h
                              =
                              1
                              ,
                              …
                              ,
                              H
                              ,
                              
                              v
                              =
                              1
                              ,
                              …
                              ,
                              V
                           
                        
                     
                     
                        
                           (8)
                           
                              
                              
                              
                                 
                                    e
                                 
                                 
                                    i
                                 
                              
                              ⩽
                              
                                 
                                    a
                                 
                                 
                                    i
                                 
                              
                              ⩽
                              
                                 
                                    l
                                 
                                 
                                    i
                                 
                              
                              ,
                              
                              ∀
                              
                              i
                              =
                              1
                              ,
                              …
                              ,
                              n
                           
                        
                     
                     
                        
                           (9)
                           
                              
                              
                              
                                 
                                    z
                                 
                                 
                                    ipk
                                 
                              
                              ⩽
                              
                                 
                                    q
                                 
                                 
                                    pk
                                 
                              
                              ,
                              
                              ∀
                              
                              i
                              =
                              1
                              ,
                              …
                              ,
                              n
                              ,
                              
                              k
                              =
                              1
                              ,
                              …
                              ,
                              K
                              ,
                              
                              p
                              =
                              1
                              ,
                              …
                              ,
                              P
                           
                        
                     
                     
                        
                           (10)
                           
                              
                              
                              
                                 
                                    
                                       ∑
                                    
                                    
                                       i
                                       =
                                       0
                                       ,
                                       i
                                       ≠
                                       j
                                    
                                    
                                       n
                                    
                                 
                              
                              
                                 
                                    x
                                 
                                 
                                    ij
                                 
                              
                              =
                              1
                              ,
                              
                              ∀
                              
                              j
                              =
                              1
                              ,
                              …
                              ,
                              n
                              +
                              1
                           
                        
                     
                     
                        
                           (11)
                           
                              
                              
                              
                                 
                                    
                                       ∑
                                    
                                    
                                       j
                                       =
                                       1
                                       ,
                                       i
                                       ≠
                                       j
                                    
                                    
                                       n
                                       +
                                       1
                                    
                                 
                              
                              
                                 
                                    x
                                 
                                 
                                    ij
                                 
                              
                              =
                              1
                              ,
                              
                              ∀
                              
                              i
                              =
                              0
                              ,
                              …
                              ,
                              n
                           
                        
                     
                     
                        
                           (12)
                           
                              
                              
                              
                                 
                                    
                                       ∑
                                    
                                    
                                       v
                                       =
                                       1
                                    
                                    
                                       V
                                    
                                 
                              
                              
                                 
                                    
                                       ∑
                                    
                                    
                                       h
                                       =
                                       1
                                    
                                    
                                       H
                                    
                                 
                              
                              
                                 
                                    y
                                 
                                 
                                    ivh
                                 
                              
                              =
                              1
                              ,
                              
                              ∀
                              
                              i
                              =
                              1
                              ,
                              …
                              ,
                              n
                           
                        
                     
                     
                        
                           (13)
                           
                              
                              
                              
                                 
                                    y
                                 
                                 
                                    ivh
                                 
                              
                              ⩾
                              
                                 
                                    x
                                 
                                 
                                    ij
                                 
                              
                              +
                              
                                 
                                    y
                                 
                                 
                                    jvh
                                 
                              
                              -
                              1
                              ,
                              
                              ∀
                              
                              i
                              =
                              1
                              ,
                              …
                              ,
                              n
                              ,
                              
                              j
                              =
                              1
                              ,
                              …
                              ,
                              n
                              ,
                              
                              h
                              =
                              1
                              ,
                              …
                              ,
                              H
                              ,
                              
                              v
                              =
                              1
                              ,
                              …
                              ,
                              V
                           
                        
                     
                     
                        
                           (14)
                           
                              
                              
                              
                                 
                                    y
                                 
                                 
                                    jvh
                                 
                              
                              ⩾
                              
                                 
                                    x
                                 
                                 
                                    ij
                                 
                              
                              +
                              
                                 
                                    y
                                 
                                 
                                    ivh
                                 
                              
                              -
                              1
                              ,
                              
                              ∀
                              
                              i
                              =
                              1
                              ,
                              …
                              ,
                              n
                              ,
                              
                              j
                              =
                              1
                              ,
                              …
                              ,
                              n
                              ,
                              
                              h
                              =
                              1
                              ,
                              …
                              ,
                              H
                              ,
                              
                              v
                              =
                              1
                              ,
                              …
                              ,
                              V
                           
                        
                     
                     
                        
                           (15)
                           
                              
                              
                              
                                 
                                    
                                       ∑
                                    
                                    
                                       i
                                       =
                                       1
                                    
                                    
                                       n
                                    
                                 
                              
                              
                                 
                                    y
                                 
                                 
                                    ivh
                                    +
                                    1
                                 
                              
                              ⩽
                              M
                              
                                 
                                    
                                       ∑
                                    
                                    
                                       i
                                       =
                                       1
                                    
                                    
                                       n
                                    
                                 
                              
                              
                                 
                                    y
                                 
                                 
                                    ivh
                                 
                              
                              ,
                              
                              ∀
                              
                              h
                              =
                              1
                              ,
                              …
                              ,
                              H
                              ,
                              
                              v
                              =
                              1
                              ,
                              …
                              ,
                              V
                           
                        
                     
                     
                        
                           (16)
                           
                              
                              
                              
                                 
                                    x
                                 
                                 
                                    0
                                    i
                                 
                              
                              +
                              
                                 
                                    x
                                 
                                 
                                    0
                                    j
                                 
                              
                              +
                              
                                 
                                    y
                                 
                                 
                                    ivh
                                 
                              
                              +
                              
                                 
                                    y
                                 
                                 
                                    jvh
                                 
                              
                              ⩽
                              3
                              ,
                              
                              ∀
                              
                              i
                              =
                              1
                              ,
                              …
                              ,
                              n
                              ,
                              
                              j
                              =
                              1
                              ,
                              …
                              ,
                              n
                              ,
                              
                              i
                              ≠
                              j
                              ,
                              
                              h
                              =
                              1
                              ,
                              …
                              ,
                              H
                              ,
                              
                              v
                              =
                              1
                              ,
                              …
                              ,
                              V
                           
                        
                     
                     
                        
                           (17)
                           
                              
                              
                              
                                 
                                    g
                                 
                                 
                                    i
                                 
                              
                              +
                              
                                 
                                    
                                       ∑
                                    
                                    
                                       p
                                       =
                                       1
                                    
                                    
                                       P
                                    
                                 
                              
                              
                                 
                                    
                                       ∑
                                    
                                    
                                       k
                                       =
                                       1
                                    
                                    
                                       K
                                    
                                 
                              
                              
                                 
                                    b
                                 
                                 
                                    jpk
                                 
                              
                              
                                 
                                    z
                                 
                                 
                                    jpk
                                 
                              
                              ⩽
                              
                                 
                                    g
                                 
                                 
                                    j
                                 
                              
                              +
                              M
                              (
                              1
                              -
                              
                                 
                                    x
                                 
                                 
                                    ij
                                 
                              
                              )
                              ,
                              
                              ∀
                              
                              i
                              =
                              0
                              ,
                              …
                              ,
                              n
                              ,
                              
                              j
                              =
                              1
                              ,
                              …
                              ,
                              n
                              +
                              1
                              ,
                              
                              i
                              ≠
                              j
                           
                        
                     
                     
                        
                           (18)
                           
                              
                              
                              
                                 
                                    
                                       ∑
                                    
                                    
                                       p
                                       =
                                       1
                                    
                                    
                                       P
                                    
                                 
                              
                              
                                 
                                    
                                       ∑
                                    
                                    
                                       k
                                       =
                                       1
                                    
                                    
                                       K
                                    
                                 
                              
                              
                                 
                                    b
                                 
                                 
                                    ipk
                                 
                              
                              
                                 
                                    z
                                 
                                 
                                    ipk
                                 
                              
                              ⩽
                              
                                 
                                    g
                                 
                                 
                                    i
                                 
                              
                              ⩽
                              
                                 
                                    O
                                 
                                 
                                    v
                                 
                              
                              +
                              M
                              
                                 
                                    
                                       1
                                       -
                                       
                                          
                                             
                                                ∑
                                             
                                             
                                                h
                                                =
                                                1
                                             
                                             
                                                H
                                             
                                          
                                       
                                       
                                          
                                             y
                                          
                                          
                                             ivh
                                          
                                       
                                    
                                 
                              
                              ,
                              
                              ∀
                              
                              i
                              =
                              1
                              ,
                              …
                              ,
                              n
                              ,
                              
                              v
                              =
                              1
                              ,
                              …
                              ,
                              V
                           
                        
                     
                     
                        
                           (19)
                           
                              
                              
                              
                                 
                                    z
                                 
                                 
                                    ipk
                                 
                              
                              ∈
                              {
                              0
                              ,
                              1
                              }
                              ,
                              
                              ∀
                              
                              i
                              =
                              1
                              ,
                              …
                              ,
                              n
                              ,
                              
                              k
                              =
                              1
                              ,
                              …
                              ,
                              K
                              ,
                              
                              p
                              =
                              1
                              ,
                              …
                              ,
                              P
                           
                        
                     
                     
                        
                           (20)
                           
                              
                              
                              
                                 
                                    y
                                 
                                 
                                    ivh
                                 
                              
                              ∈
                              {
                              0
                              ,
                              1
                              }
                              ,
                              
                              ∀
                              
                              i
                              =
                              1
                              ,
                              …
                              ,
                              n
                              ,
                              
                              h
                              =
                              1
                              ,
                              …
                              ,
                              H
                              ,
                              
                              v
                              =
                              1
                              ,
                              …
                              ,
                              V
                           
                        
                     
                     
                        
                           (21)
                           
                              
                              
                              
                                 
                                    x
                                 
                                 
                                    ij
                                 
                              
                              ∈
                              {
                              0
                              ,
                              1
                              }
                              ,
                              
                              ∀
                              
                              i
                              =
                              0
                              ,
                              …
                              ,
                              n
                              ,
                              
                              j
                              =
                              1
                              ,
                              …
                              ,
                              n
                              +
                              1
                           
                        
                     
                     
                        
                           (22)
                           
                              
                              
                              
                                 
                                    q
                                 
                                 
                                    pk
                                 
                              
                              ∈
                              {
                              0
                              ,
                              1
                              }
                              ,
                              
                              ∀
                              
                              k
                              =
                              1
                              ,
                              …
                              ,
                              K
                              ,
                              
                              p
                              =
                              1
                              ,
                              …
                              ,
                              P
                           
                        
                     
                  

The objective function (1) is to minimize the total cost including production costs, fixed vehicle costs and travel costs. The constraints are as follows:
                        
                           
                              (2) require that each customer request is assigned to a production run


                              (3) the production capacity constraints require that the production by each cyclotron for a particular production run does not exceed the machine’s capacity.


                              (4) require that a tour starts only after the product, F-18, is manufactured. If a customer’s request is assigned to production run p on machine k (zipk
                              =1) and it is also assigned to vehicle v’s hth tour (yivh
                              =1), the vehicle’s start time from the plant must occur after the production run’s completion time.


                              (5) requires that the arrival time at the first customer stop in a tour occurs after the start time of the tour from the plant plus the travel time to the first stop.


                              (6) requires a relationship between the arrival times at consecutive stops in a tour.


                              (7) requires that a tour’s start time is greater than or equal to the previous tour’s arrival time at the plant.


                              (8) requires the time window restrictions at customer stops.


                              (9) requires that customers are assigned to a production run only if the production run is used.


                              (10) requires that customers are visited only once.


                              (11) requires that there is only one departure from each customer.


                              (12) requires that each customer is assigned to only one vehicle.


                              (13) require that if customer j follows customer i in a tour (xij
                              
                              =1) and customer j is assigned to vehicle v (yivh
                              
                              =1), then customer i is also assigned to vehicle v (yivh
                              
                              =1).


                              (14) enforce that if xij
                              
                              =1 and yivh
                              
                              =1, then yjvh
                              
                              =1.


                              (15) ensure that a vehicle tour is activated only if the previous tour is also active constraints


                              (16) enforce that the first stop in a tour is the plant.


                              (17) and (18) ensure that the capacity of a vehicle used in a particular tour is not exceeded.


                              (19)–(22) are the binary variable constraints.

Since the embedded sub-problems are NP-hard, the integrated production and delivery problem is also an NP-hard problem. Therefore, exact solution algorithms are limited to small problem instances. For example we could only solve instances with less than 8 customers and 3 vehicles in one hour using CPLEX 11.1 (ILOG Inc., 2007). The next section describes our heuristic construction algorithms and an LNS-based improvement algorithm to solve larger problem instances.

LNS, a state-of-the-art meta heuristics, has been shown to perform well on various combinatorial optimization problems including vehicle routing problems (Kim, Kim, & Park, 2012; Kim, Li, & Johnson, 2012; Pisinger & Ropke, 2010; Prescott-Gagnon, Desaulniers, & Rousseau, 2009; Ropke & Pisinger, 2006; Shaw, 1997; Wy & Kim, 2013). While local search heuristics attempt to improve solutions via incremental adjustments to current solutions, LNS perturbs a current solution significantly within a large neighborhood. Pisinger and Ropke (2007) present a detailed history of LNS and its relationship to a very large scale neighborhood search and a variable neighborhood search. Below, we present our five algorithms which are integrated together to solving the NMPDP. For each algorithm a brief summary is given followed by pseudo-code for the algorithm and then an explanation of some of the more complicated steps in the algorithm.

Algorithm 1 shown in Fig. 1
                         is the main algorithm which implements LNS search.

Line 1: The user-given parameters are number of iterations (Imax
                        ), maximum allowable computation time (Tmax
                        ), the maximum proportion of deleting stops (pmax
                        ), and the number of maximum solutions (Nsp
                        ) in the solution pool S.
                     

Lines 2–5: A local minimum solution is generated and inserted to the solution pool.

Lines 6–13: A solution in the solution pool is selected and improved according to the LNS scheme. Note that the function f() returns the cost of a solution and the objective is to minimize the cost.

Line 14: The new solution replaces the worst solution if: (1) the solution pool is full, (2) the current solution is not present in the pool, and (3) the pool’s worst solution is worse than the current solution.

Line 15: the current solution is inserted into the solution pool if the solution pool is not yet full and does not contain the same solution.

An initial solution is needed which we will incrementally improve with LNS with the additional algorithms we are proposing. The construction algorithm consists of two parts; production run assignment and route construction. Algorithm 2 shown in Fig. 2
                         provides a production run assignment method to develop a feasible solution.

Line 1: bipk
                        , the production quantity for customer i when it is produced in production run p at machine k is calculated using the finish time of production run p at machine k (fpk
                        ).

Line 2: The relative unit cost of each production run (RUCP) is calculated. The RUCP is calculated as the production run cost (Rk
                        ) divided by the relative production run capacity (RPC), which is calculated as the quantity produced and available at the end of a series of production runs. The outputs of early sub-production runs will be reduced due to deterioration between the time the sub-run ends and the production run ends. An example of the command in line 2 is suppose there are three sub-runs A, B and C with a production capacity of 800mCi. The time window of each production run is [0,10], [20,30], and [30,40], respectively and the half-life is 10. The production run ends at time 40. The RPC of the production run A is 100mCi because 3 half-lives have elapsed between the end of sub-run A and the end of the run. In the same way, RPC of B and C is 400mCi and 800mCi, respectively.

Line 3: The production runs are sorted in ascending order of RUCP. Note that if all the production run costs are the same, then the production runs are sorted in descending order of their finish times.

Lines 4–19: Then the production runs in the list are filled with the production quantities determined serially by the requirements of the customer requests.

Lines 5–12: For each production run p, if there are customers for which there is only one feasible production run, p, the customers are assigned to the run. If some customer orders can only be assigned to a particular production run p are not assigned to that run, then algorithm 2 returns infeasibility and stops. Depending on the problem instances, it may be difficult to find a feasible solution or there may be infeasible cases. However, in practice the capacities of production runs are sufficient to fulfill customer demands. The remaining feasible customer orders manufactured in production run p are sorted in descending order of the required production quantity. With this sorting method, we intend to pack the customer orders requiring large quantities first.

Lines 15 and 16: Customer orders from the sorted list are assigned one at a time in sequence to the current production run if feasible. The procedures are repeated for all production runs.

Having assigned customer orders to production runs, the previous algorithm determines their ready times to departure from the plant. Algorithm 3 shown in Fig. 3
                         provides a route construction algorithm. When an order can be inserted into the route, all the possible insertion positions within the route are tested and the position that incurs the least route time increase is selected. At each iteration, among all the orders that can be inserted into the route, the order that incurs the least route time increase is selected and inserted. When there are multiple orders that increase the route time the same amount, the order having the least index is selected. Note that each vehicle has at most one trip and multiple trips are not considered at this stage. The procedures are repeated until all orders are routed.

Line 2: When a customer order is assigned to a vehicle, the departure time of the vehicle cannot be earlier than the ready time of the stop. When unscheduled customer orders remain, the order that has the smallest value for the difference (calculated as the exact time that the medicine is used at stop i (li
                        ) – travel time from the plant to the stop) is selected.

Line 3: A new vehicle for the order is selected.

Line 4: The order is inserted into the route of the vehicle.

Line 6 to 7: Then the unscheduled orders that can be inserted into the route are assigned to the route one at a time until no more orders can be inserted.

Lines 10–22: After all the orders are assigned to vehicles, the algorithm attempts to merge trips to reduce the number of used vehicles. Note that all the vehicles have only one trip. The merging procedure is conducted between two vehicles, v and w. Algorithm 3 selects the vehicle v and w sequentially from the routed vehicle list.

Lines 12–20: If the vehicle capacity of v is greater than or equal to w, the trips of w are tested to be moved to the other vehicle. The whole trips of vehicle w are inserted into vehicle v if there is no overlap between the trips. The testing of merge pairs of vehicles continues until all pairs are tested.

The route reduction heuristic (lines 10–22) can be replaced by an optimal procedure for cases in which the fleet is homogeneous. When the start and end time of each trip is fixed and the fleet is homogeneous, finding the minimum number of vehicles to cover the trips can be modeled as an assignment problem and can be solved in a polynomial time. To better understand the optimal procedure, we will describe an example. Let STi
                         and ETi
                         be the fixed start and end time of trip i. Let αij
                         be the cost of performing trip i and j with the same vehicle. Then, αij
                         is set to the travel time (dij
                        ) from i to j if trip j can follow trip i, i.e., trips i and j can be covered by a single vehicle without violating the time constraint, i.e., 
                           
                              
                                 
                                    ET
                                 
                                 
                                    i
                                 
                              
                              +
                              
                                 
                                    d
                                 
                                 
                                    ij
                                 
                              
                              ⩽
                              
                                 
                                    ST
                                 
                                 
                                    j
                                 
                              
                           
                        . Note that since each trip starts and ends at the plant, αij
                         becomes 0 if the traversal of i to j is feasible. If trip j cannot follow trip i because of timing constraint, αij
                         is set to M
                        +1, where M is a big number. Finally, αii
                         is set to M.

Then the route reduction problem can be modeled as an assignment problem as below. The decision variable uij
                         is 1 if trip i is followed by trip j on the same vehicle in the optimal solution; 0, otherwise. Let T be the number of trips.
                           
                              (23)
                              
                                 
                                    min
                                 
                                 
                                 
                                    
                                       
                                          ∑
                                       
                                       
                                          i
                                          =
                                          1
                                       
                                       
                                          T
                                       
                                    
                                 
                                 
                                    
                                       
                                          ∑
                                       
                                       
                                          j
                                          =
                                          1
                                       
                                       
                                          T
                                       
                                    
                                 
                                 
                                    
                                       α
                                    
                                    
                                       ij
                                    
                                 
                                 
                                    
                                       u
                                    
                                    
                                       ij
                                    
                                 
                                 ,
                              
                           
                        
                        
                           
                              (24)
                              
                                 
                                    
                                       
                                       
                                          
                                             s
                                             .
                                             t.
                                          
                                       
                                    
                                    
                                       
                                       
                                          
                                             
                                             
                                             
                                                
                                                   
                                                      ∑
                                                   
                                                   
                                                      i
                                                      =
                                                      1
                                                   
                                                   
                                                      T
                                                   
                                                
                                             
                                             
                                                
                                                   u
                                                
                                                
                                                   ij
                                                
                                             
                                             =
                                             1
                                             ,
                                             
                                             ∀
                                             
                                             j
                                             =
                                             1
                                             ,
                                             …
                                             ,
                                             T
                                          
                                       
                                    
                                 
                              
                           
                        
                        
                           
                              (25)
                              
                                 
                                 
                                 
                                    
                                       
                                          ∑
                                       
                                       
                                          j
                                          =
                                          1
                                       
                                       
                                          T
                                       
                                    
                                 
                                 
                                    
                                       u
                                    
                                    
                                       ij
                                    
                                 
                                 =
                                 1
                                 ,
                                 
                                 ∀
                                 
                                 i
                                 =
                                 1
                                 ,
                                 …
                                 ,
                                 T
                              
                           
                        
                     

An optimum solution of the assignment problem denotes a consecutive enumeration of trips which can be covered by vehicles and is easily translated to a solution of NMPDP. If uij
                        
                        =1 and αij
                        
                        =0, it means trip j can be placed in a vehicle immediately after trip i. If uii
                        
                        =1, a vehicle serves trip i only. All the assignments i to j of cost 
                           
                              
                                 
                                    α
                                 
                                 
                                    ij
                                 
                              
                              ⩽
                              M
                           
                         are considered for the translation. For example, when T
                        =6, and the optimal solution is u
                        12
                        =
                        u
                        25
                        =
                        u
                        46
                        =
                        u
                        33
                        =
                        u
                        51
                        =
                        u
                        64
                        =1 where α
                        12, α
                        25, α
                        46, 
                           
                              
                                 
                                    α
                                 
                                 
                                    33
                                 
                              
                              ⩽
                              M
                           
                        , then trips 1–2–5, 3, and 4–6 can be grouped and served by three vehicles. More details about the procedure are described in Kim, Kim, et al. (2012) and Kim, Li, et al. (2012).


                        Fig. 4
                         shows our local search route improve algorithm. We use two route improvement methods, inter-route and intra-route improve, and a route reduction method. In the Route 1–0 improvement method, a stop from a route is moved into another route if it improves the solution quality. In the Route 1–1 improvement method, a stop from a route is exchanged with a stop from the other route. In the Production and Route 1–1 improvement method, a stop from a route and its corresponding production run is exchanged with a stop from the other route and production run. Note that when a stop from a route is exchanged with a stop from the other route, their positions may not be the same within the routes. In other words, two stops are removed from the two routes and inserted into other routes at the best positions. The intra-route improvement algorithm consists of the well-known 2-opt edge exchange method and Or-opt improvement method (Or, 1976).

In the route reduction algorithm (line 12), we attempt to reduce the number of routes by removing all the customer stops from a particular route and place them within other routes. All the customer stops in a routed vehicle are tested to be inserted to another vehicle and all the routed vehicles are tested. All the insertion positions are tested and the feasible position which gives the least routing cost increase is selected to move a stop from the origin vehicle. If it is possible to delete a route, i.e., all the stops in the route can be moved into other routes, we accept the movement. The improvement methods repeat until no further improvement is possible.

For example, assume that Veh #1, Veh #2 and Veh #3 cover stops A, B; C, D; and E, F, respectively. Algorithm 4 selects the vehicles one by one. If Veh #2 is selected, stops in Veh #2 are sequentially selected and inserted into other vehicles. First, stop C is tested to determine if it can be inserted between the plant and A, A and B, and B and the plant of Veh #1, and the plant and E, E and F, F and the plant of Veh #3. The tested insertion is feasible if the vehicle is able to load the medicine for the stop at the plant and can deliver it to the stop without preventing service of already existing stops. If there are multiple feasible inserting positions, stop C is inserted into the position where the cost increase is minimal. Similarly, stop D follows the same procedure. If both stops can be inserted into other routes, the reduction procedure is successful and Veh #2 is removed. Then the route reduction procedure starts again with the new solution. If it is not possible to move all of a vehicle’s stops, the original solution is restored.


                        Fig. 5
                         shows the insertion algorithm. Here, we reinsert the deleted customer stops from a solution in line 9 of Algorithm 1. The production schedule for the deleted and unscheduled customer stops can be generated by Algorithm 2. Then, for each unscheduled customer stop, the best vehicle route that incurs the least increment to its route time when the customer stop is inserted is selected and the stop is assigned to the route (lines 3–4). When combined with the deletion step, this insertion algorithm diversifies the solution search space. The insertion procedure is similar to the insertion procedure in algorithm 4. All feasible positions are tested and the best insertion position is selected. However, algorithm 5 considers adding a vehicle, which is not an option of the route reduction procedure in algorithm 4.

@&#EXPERIMENTAL RESULTS@&#

We use the C++ language to implement the algorithms and an Intel Core(TM) i7 CPU 920 with 2.67giga hertz, 6gigabytes RAM running Windows 7 Enterprise for our eight scenarios. Because the previous research has not considered the NMPDP and there is no publicly available benchmark data, we develop 29 benchmark instances by extending the benchmark problem instances for the VRPTW (Solomon, 1987); we use the VRPTW benchmarks because VRPTW is an embedded sub-problem of the NMPDP and the optimal solutions for the benchmark problems are known. We use the same data set for the depot and the customer stops and requirements. We calculate the travel times between locations with one decimal point and truncation as suggested by Kohl and Madsen (1997). The vehicle capacity is Ov
                     
                     =200.0 for any vehicle and for consistency with the VRPTW instances. Table 1
                      gives the production run data for case study.

We compare the results of our approach with those of Solomon’s benchmark problem instances. For Scenarios 1–4, we use the production runs without considering their cost so that we can compare the total travel time and the number of vehicles of our approach with the known solutions of the VRPTW instances. Scenario 5 uses only the construction algorithm whereas Scenarios 6–8 use the LNS algorithm with various parameter settings. We compare the results of the construction algorithm and the LNS algorithm and bold the minimum cost for each problem instance in Table 3.


                     Table 2
                      shows the results of Scenarios 1–4. Columns 1 and 2 show the names of the VRPTW benchmark instances and the total demand quantities. For example, the total demand quantity of all of the customers in instance r101 is 1458. Columns 3 and 4 show the optimal solutions of the VRPTW instances; the values are taken from the literature and the VRPTW benchmark problem website (http://w.cba.neu.edu/~msolomon/problems.htm). Note that the optimal solutions for r108 and r112 have not been found yet. For those problems, we use the heuristic best known solutions obtained from the same website.

Columns 5–8 show the results of applying our proposed approach to the benchmark instances without considering F-18’s half-life. Here, we assume zero production time for all customer orders such that production time does not limit the vehicles’ start times. These scenarios are used to evaluate the vehicle routing solution quality of our approach. Scenario 1 shows the results with parameters (Imax
                     ,
                     Tmax
                     ,
                     pmax
                     ,
                     Nsp
                     )=(1500,300seconds,0.5,20) and Scenario 2 (4000,600seconds,0.5,20). The proposed approach generates optimal solutions for several problems and near optimal solutions for the remaining problems. Note that the objective function for the optimal solution approach is minimizing the total travel time, but the objectives of our approach are to minimize the number of vehicles and the total travel time. Thus, our solution requires fewer vehicles in some instances. The travel distances presented in column 4 are lower bounds on the travel distances for all scenarios.

Columns 11–16 show the results of applying the proposed approach to the benchmark instances considering both production and routing. Column 9 shows the half-life length of each problem instance and Column 10 shows the lower bound on the production quantity measured in mCi. To extend Solomon’s VRPTW test instance, we merge the production run data specific to our case study with Solomon’s instances. To assure feasibility, we adjust the half-life lengths to make the problems feasible based on preliminary experiments. We calculate the lower bound on the production quantity, column 10, as follows:
                        
                           (1)
                           Find the latest production run for each customer demand and calculate the required production quantity.

Calculate the total required production quantity for each production run.

From the latest production run to the earliest run: if the required quantity does not exceed capacity, add the quantity to the lower bound quantity; otherwise, add the capacity to the lower bound quantity and add the surplus quantity to the next production run considering the half-life inflation.

Note that the total production quantity with consideration for the half-life is about 2.75 times the quantity without half-life consideration (4504.7/1640.6).

Scenario 3 shows the results of the instances with half-life with parameters (Imax
                     ,
                     Tmax
                     ,
                     pmax
                     ,
                     Nsp
                     )=(1500,300seconds,0.5,20) and Scenario 4 (4000,600seconds,0.5,20). When the half-life is considered, more vehicles are required because the delivery quantities increase, but vehicle capacity (Ov
                     
                     =200) is the same. Compared to the lower bounds on the production quantity, Scenario 3 and Scenario 4 generate solutions that require 5.21% ((4739.6−4504.7)/4504.7) and 5.17% ((4737.4−4504.7)/4504.7) more production on average, respectively. Although Scenarios 3 and 4 generate almost the same solutions in terms of the production quantities, Scenario 4 generates better solutions in terms of the number of vehicles and the total travel time. We first attempt to improve the routing solutions and then reduce the production levels. With more computation time, Scenario 4 generates better solutions than Scenario 3. These findings suggest that the proposed approach generates better solutions when more iterations are allowed. This is in contrast to many alternative heuristic approaches which cannot improve their solution quality beyond a certain point even with greater computation time.


                     Table 3
                      shows the results of comparing the construction algorithm with LNS. Scenario 5 is the result of the construction algorithm and Scenarios 6–8 are the results of the full algorithm utilizing LNS. The objective of Scenario 5–8 is to minimize total cost, i.e., the sum of production run cost, vehicle cost, and travel time cost. We use the data in Table 1 for the production run cost; $1000 as the vehicle cost, and $10 for a unit travel time. For example, the cost of the solution using production runs 1 and 2 and three vehicles with total travel time 250miles is 350+700+3*1000+10*250=$6550. Scenarios 6–8 show 25.5%, 28.4% and 29.9% improvement, respectively, compared with the construction algorithm only. Recall that we increased the values of Imax
                      and Tmax
                      in Scenarios 6–8 to test the improvement rate of our approach. Table 3 shows that the improvement rate decreases as computation time increases, i.e., the improvement gap is 2.9% between Scenarios 6 and 7, but only 1.5% between Scenarios 7 and 8. The next section reports the results of applying our model and solution methodology to the original problem.

This problem is motivated by a company producing and delivering radioisotope F-18.
                        2
                        The data used is permutated slightly for anonymity.
                     
                     
                        2
                      The problem instance has 277 customer stops and a total demand of 3672.1mCi. The lower bound on the production quantity calculated by the method stated in the previous Section is 42242.9mCi, which is more than 11.5 times the total demand. This large ratio is partially due to the long distances between the plant and the customers. While the current practice requires 47707.8mCi of production quantity, 24 vehicles and 10,925miles of travel distance, the results of the proposed approach with parameters (Imax
                     ,
                     Tmax
                     ,
                     pmax
                     ,
                     Nsp
                     )=(500,300seconds, 0.5,20) are 47736.7mCi, 22 vehicles and 11,026miles; with parameters (1000,600seconds,0.5,20), they are 47608.1mCi, 21 vehicles and 11,009miles. Although the travel distance increases slightly (101miles and 84miles, respectively), the solutions actually save two or three vehicles. Table 4
                      summarizes the results.

@&#CONCLUSIONS@&#

This paper described a nuclear medicine production and delivery problem (NMPDP) in which the production quantity of the medicine, F-18, for a customer varied depending on when it was produced due to a half-life of 110 minutes, and the production time determines the vehicle’s earliest departure time from the plant to the customer. F-18’s half-life, a unique characteristic, makes this NMPDP different from other perishable product delivery, newspaper delivery, and integrated production and delivery problems.

We developed a MIP model, presented a benchmark data set, and proposed a variant of a large neighborhood search algorithm with various improvement algorithms. The results showed that the proposed approach performed well on the benchmark instances. When practically applied, the proposed approach improved current practice by reducing the number of vehicles.

This research suggests some further investigations. An efficient exact algorithm for the NMPDP can be pursued. Although we developed an MIP model for the problem, it could not be solved optimally for practical size problems nor could it give meaningful tight bounds. Branch-and-price-and-cut algorithms based with several valid inequalities give quite good solutions for the VRP families (Chabrier, 2006; Desaulniers, 2010; Jin, Liu, & Eksioglu, 2008). A similar approach can be pursued for the NMPDP. An efficient rescheduling algorithm is also needed. F-18’s unstable yield rate, which results in different production quantities versus expectations, suggests the possibility of reassigning the demands to the production runs and generating route solutions whenever a production run completes and the production quantity is different than expected. Moreover, a more elaborately designed bin packing algorithm could improve the solution since FFD does not guarantee feasible assignment for an instance of NMPDP which is solvable. Various bounds and relaxations also can be tested to resolve the production run assignment.

@&#ACKNOWLEDGMENTS@&#

This work was supported by the National Research Foundation of Korea Grant funded by the Korean Government (No. 2012R1A1A2005243).

@&#REFERENCES@&#

