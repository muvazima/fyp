@&#MAIN-TITLE@&#Improved variable step-size NLMS adaptive filtering algorithm for acoustic echo cancellation

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           A new technique for acoustic echo cancellation.


                        
                        
                           
                           An improved variable step size normalized least mean square adaptive filtering algorithm.


                        
                        
                           
                           A comparative study using some variable step size algorithms and the proposed algorithm.


                        
                        
                           
                           Experiments in single talk and double talk scenarios using TIMIT database.


                        
                        
                           
                           Standardized performances measures: Mean Square Error and Normalized misalignment.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Adaptive filtering

Acoustic echo canceller

Normalized least mean square (NLMS) algorithm

Variable step-size

Mean error sigmoid variable step-size NLMS

Misalignment evaluation

@&#ABSTRACT@&#


               
               
                  Acoustic echo canceller (AEC) is used in communication and teleconferencing systems to reduce undesirable echoes resulting from the coupling between the loudspeaker and the microphone. In this paper, we propose an improved variable step-size normalized least mean square (VSS-NLMS) algorithm for acoustic echo cancellation applications based on adaptive filtering. The steady-state error of the NLMS algorithm with a fixed step-size (FSS-NLMS) is very large for a non-stationary input. Variable step-size (VSS) algorithms can be used to decrease this error. The proposed algorithm, named MESVSS-NLMS (mean error sigmoid VSS-NLMS), combines the generalized sigmoid variable step-size NLMS (GSVSS-NLMS) with the ratio of the estimation error to the mean history of the estimation error values. It is shown from single-talk and double-talk scenarios using speech signals from TIMIT database that the proposed algorithm achieves a better performance, more than 3 dB of attenuation in the misalignment evaluation compared to GSVSS-NLMS, non-parametric VSS-NLMS (NPVSS-NLMS) and standard NLMS algorithms for a non-stationary input in noisy environments.
               
            

@&#INTRODUCTION@&#

In recent years, acoustic echo cancellation has become an attractive challenge due to the fact that improving speech quality remains one of the most important goals of communication systems, such as teleconferencing, hands-free and mobile communications. It is often used to remove undesirable echoes resulting from the coupling between the loudspeaker and the microphone.

Acoustic echo cancellation is an important application of adaptive filtering. The basic principle is to build a model of the echo path impulse response that needs to be identified with an adaptive filter, which provides at its output a replica of the echo, that is further subtracted from the reference signal [1]. The adaptive least mean square (LMS) algorithm is a well-known technique in adaptive filtering due to its simplicity and numerical robustness.

However, it suffers from slow convergence, since the echo path is usually very long and the speech signals are non-stationary and highly correlated. Moreover, a large number of filter coefficients are needed for identifying this long path [2]. In the NLMS algorithm, the problem can be mitigated by normalizing the fixed step-size (FSS), since it depends on the power of the input signal, but the performance is still insufficient.

In order to improve the convergence speed and reduce the static error, many variable step-size (VSS-NLMS) algorithms have been proposed in the literature [3–5]. They are divided into two classes [6]. The first class is obtained by taking into account some limit conditions, like the estimation error, which decreases the fastest according to the step-size. The second class is named “heuristic” algorithms, which are based on some intuitionistic rules, like increasing the step-size to increase the convergence rate, or decreasing the step-size to decrease the steady-state error. Numerous algorithms use the sigmoid function to improve the adaptive algorithm behavior [6–8].

In this paper, a new variable step-size NLMS algorithm is proposed. It is based on the sigmoid function, where the step-size is controlled by the power of the estimation error. The sigmoid function will be generalized. So, the exponent of the exponential function (which is the subtraction of the power of the estimation error from the power of the estimated noise) will be replaced by the ratio of the estimated error to the mean history of estimation error values. This ratio is used to eliminate the influence of the non-stationary speech signal and noise disturbances, which can improve the performance of the algorithm, whereas a large step-size is needed for fast convergence and a small step-size for reduction of the steady-state error.

This paper is organized as follows: a brief introduction presents the related works. In Section 2, we introduce the principle of acoustic echo cancellation systems. Section 3 describes briefly the adaptive filtering and the NLMS algorithm. Section 4 discusses some variable step-size algorithms. Section 5 gives a description of the proposed variable step-size MESVSS-NLMS algorithm. In Section 6, simulation results are given to investigate the performance of the proposed algorithm for various scenarios. A comparative study, using GSVSS-NLMS, NPVSS-NLMS and the standard NLMS algorithms is also presented. Finally, conclusions are given in Section 7.

The basic principle of acoustic echo cancellation (AEC) is modeling the echo path between the loudspeaker and the microphone [9]. Fig. 1
                      shows an AEC general configuration, where an adaptive filter is used to identify the unknown echo path by adaptively adjusting its coefficients. The estimated coefficients are then used to provide a replica of the echoes which can be subtracted from the target signal to achieve cancellation.

We define the input signal 
                        x
                        (
                        n
                        )
                      to be the received far-end speech signal at each time index n. 
                        x
                        (
                        n
                        )
                      is then the output at the near-end loudspeaker, passing through the loudspeaker. This audio signal is then reverberated in a real environment and picked up by the system microphone (audio sink) resulting in the original intended signal plus attenuation. Time-delayed images of the original speech signal produce the echo signal 
                        y
                        (
                        n
                        )
                      
                     [10]. The microphone signal 
                        d
                        (
                        n
                        )
                      consists of the actual echo signal and the background noise signal 
                        b
                        (
                        n
                        )
                     . Additionally, it includes the speech signal 
                        s
                        (
                        n
                        )
                      of an active near-end speaker. The acoustic echo canceller (AEC) seeks to minimize the contribution of the echo signal 
                        y
                        (
                        n
                        )
                      to the power of the error signal 
                        e
                        (
                        n
                        )
                      by subtracting an estimate of the echo signal 
                        
                           
                              y
                           
                           
                              ˆ
                           
                        
                        (
                        n
                        )
                      from the microphone signal 
                        d
                        (
                        n
                        )
                      
                     [11].

Adaptive filter is a good supplement for achieving a good replica because the echo path is usually unknown and time-varying. So, the three main steps of the acoustic echo path can be summarized as follows:
                        
                           (1)
                           Estimate the characteristics of the acoustic echo path 
                                 h
                               of the loudspeaker-enclosure-microphone (LEM) system;

Create a replica of the acoustic echo signal 
                                 
                                    
                                       y
                                    
                                    
                                       ˆ
                                    
                                 
                                 (
                                 n
                                 )
                              ;

Subtract the echo from microphone signal to obtain a clean signal.

At each sample time n, 
                        e
                        (
                        n
                        )
                      is the error signal between the adaptive filter output 
                        
                           
                              y
                           
                           
                              ˆ
                           
                        
                        (
                        n
                        )
                      and the desired signal 
                        d
                        (
                        n
                        )
                     . The error signal corresponds to the echo cancelled signal and it is obtained by subtracting this estimate 
                        
                           
                              y
                           
                           
                              ˆ
                           
                        
                        (
                        n
                        )
                      from the microphone signal.
                        
                           (1)
                           
                              
                                 e
                                 (
                                 n
                                 )
                                 =
                                 d
                                 (
                                 n
                                 )
                                 −
                                 
                                    
                                       y
                                    
                                    
                                       ˆ
                                    
                                 
                                 (
                                 n
                                 )
                              
                           
                        
                      where
                        
                           (2)
                           
                              
                                 d
                                 (
                                 n
                                 )
                                 =
                                 y
                                 (
                                 n
                                 )
                                 +
                                 s
                                 (
                                 n
                                 )
                                 +
                                 b
                                 (
                                 n
                                 )
                              
                           
                        
                      is a combination of the acoustic echo 
                        y
                        (
                        n
                        )
                     , the near-end speech 
                        s
                        (
                        n
                        )
                      and the background noise 
                        b
                        (
                        n
                        )
                     . The acoustic echo signal is modeled by the equation:
                        
                           (3)
                           
                              
                                 y
                                 (
                                 n
                                 )
                                 =
                                 
                                    
                                       X
                                    
                                    
                                       T
                                    
                                 
                                 (
                                 n
                                 )
                                 h
                              
                           
                        
                      where
                        
                           (4)
                           
                              
                                 X
                                 (
                                 n
                                 )
                                 =
                                 
                                    
                                       [
                                       
                                          
                                             
                                                x
                                                (
                                                n
                                                )
                                                
                                             
                                             
                                                x
                                                (
                                                n
                                                −
                                                1
                                                )
                                                
                                             
                                             
                                                …
                                                
                                             
                                             
                                                x
                                                (
                                                n
                                                −
                                                L
                                                +
                                                1
                                                )
                                             
                                          
                                       
                                       ]
                                    
                                    
                                       T
                                    
                                 
                              
                           
                        
                     
                     
                        
                           (5)
                           
                              
                                 h
                                 =
                                 
                                    
                                       [
                                       
                                          
                                             
                                                
                                                   
                                                      h
                                                   
                                                   
                                                      0
                                                   
                                                
                                                
                                             
                                             
                                                
                                                   
                                                      h
                                                   
                                                   
                                                      1
                                                   
                                                
                                                
                                             
                                             
                                                
                                                   
                                                      h
                                                   
                                                   
                                                      2
                                                   
                                                
                                                
                                             
                                             
                                                ⋯
                                                
                                             
                                             
                                                
                                                   
                                                      h
                                                   
                                                   
                                                      L
                                                      −
                                                      1
                                                   
                                                
                                             
                                          
                                       
                                       ]
                                    
                                    
                                       T
                                    
                                 
                              
                           
                        
                      
                     
                        X
                        (
                        n
                        )
                      is the length-L history of the received signal, or the far-end input signal, and 
                        h
                      is the true echo path impulse response, assumed to be a finite impulse response (FIR) filter of length L. The superscript 
                        
                           
                              (
                              .
                              )
                           
                           
                              T
                           
                        
                      denotes the transpose of a vector. The residual echo signal which represents the estimation error is:
                        
                           (6)
                           
                              
                                 
                                    
                                       e
                                    
                                    
                                       r
                                    
                                 
                                 (
                                 n
                                 )
                                 =
                                 y
                                 (
                                 n
                                 )
                                 −
                                 
                                    
                                       y
                                    
                                    
                                       ˆ
                                    
                                 
                                 (
                                 n
                                 )
                              
                           
                        
                     
                  

Adaptive filtering techniques have been successfully used for many years. An adaptive filter is a self-designing and time-varying system that uses a recursive algorithm to continuously adjust its tap weights for operation in an unknown environment [12]. It attempts to model the relationship between two signals in an iterative manner [13]. Fig. 2
                      shows a typical structure of the adaptive filter, which consists of two basic functional blocks: a digital filter to perform the desired filtering and an adaptive algorithm to adjust the tap weights of the filter.

The digital filter shown in Fig. 2 can be designed using many different filter structures. To obtain simpler adaptive algorithms, finite impulse response (FIR) filters are preferable over infinite impulse response (IIR) filters [14].

The desired signal 
                        d
                        (
                        n
                        )
                      represents the microphone signal. In the single-talk scenario, 
                        d
                        (
                        n
                        )
                      contains the echo signal 
                        y
                        (
                        n
                        )
                      corrupted by ambient noise 
                        b
                        (
                        n
                        )
                     , whereas the resulting error signal 
                        e
                        (
                        n
                        )
                      consists of the residual echo signal 
                        
                           
                              e
                           
                           
                              r
                           
                        
                        (
                        n
                        )
                      and the ambient noise 
                        b
                        (
                        n
                        )
                     . In the double-talk scenario, 
                        d
                        (
                        n
                        )
                      is defined by Eq. (2), where 
                        e
                        (
                        n
                        )
                      is the sum of 
                        s
                        (
                        n
                        )
                     , 
                        
                           
                              e
                           
                           
                              r
                           
                        
                        (
                        n
                        )
                      and 
                        b
                        (
                        n
                        )
                     . The output signal of the digital filter is defined by the following equation:
                        
                           (7)
                           
                              
                                 
                                    
                                       y
                                    
                                    
                                       ˆ
                                    
                                 
                                 (
                                 n
                                 )
                                 =
                                 
                                    
                                       X
                                    
                                    
                                       T
                                    
                                 
                                 (
                                 n
                                 )
                                 W
                                 (
                                 n
                                 )
                              
                           
                        
                      where 
                        W
                        (
                        n
                        )
                      is the vector of the adaptive filter weights.
                        
                           (8)
                           
                              
                                 W
                                 (
                                 n
                                 )
                                 =
                                 
                                    
                                       [
                                       
                                          
                                             
                                                
                                                   
                                                      w
                                                   
                                                   
                                                      0
                                                   
                                                
                                                (
                                                n
                                                )
                                                
                                             
                                             
                                                
                                                   
                                                      w
                                                   
                                                   
                                                      1
                                                   
                                                
                                                (
                                                n
                                                )
                                                
                                             
                                             
                                                …
                                                
                                             
                                             
                                                
                                                   
                                                      w
                                                   
                                                   
                                                      L
                                                      −
                                                      1
                                                   
                                                
                                                (
                                                n
                                                )
                                             
                                          
                                       
                                       ]
                                    
                                    
                                       T
                                    
                                 
                              
                           
                        
                     
                  

The adaptive filter is updated using an adaptive algorithm, where the adaptation terms are added to the weight vector. The adaptation terms differ according the adaptive filter algorithms [15].

The LMS algorithm, first proposed by Widrow and Hoff in 1960 [16], is the most widely used adaptive filtering algorithm because of its simple structure, low computational complexity, good stability [17], and their performance can be defined by the cost function. The mean square error (MSE) has been the most extensively used criterion in the LMS algorithm and its variants [18,19]. Using this cost function implicitly assumes that the error is a random variable with a Gaussian distribution [20]. The rate of adaptation of the filter coefficients may be controlled by adjusting a parameter called the step-size. A larger step-size will increase the rate adaptation, and a smaller step-size will decrease it [21].

The weight update equation for the adaptive filter is:
                           
                              (9)
                              
                                 
                                    W
                                    (
                                    n
                                    +
                                    1
                                    )
                                    =
                                    W
                                    (
                                    n
                                    )
                                    +
                                    α
                                    X
                                    (
                                    n
                                    )
                                    e
                                    (
                                    n
                                    )
                                 
                              
                           
                         where α is the step-size parameter, and the stability condition of the LMS algorithm is:
                           
                              (10)
                              
                                 
                                    0
                                    <
                                    α
                                    <
                                    
                                       2
                                       
                                          
                                             λ
                                          
                                          
                                             max
                                          
                                       
                                    
                                 
                              
                           
                         where 
                           
                              
                                 λ
                              
                              
                                 max
                              
                           
                         is the largest eigenvalue of the autocorrelation matrix of the input signal 
                           x
                           (
                           n
                           )
                        .

The NLMS algorithm may be viewed as the solution to a constrained optimization (minimization) problem [22]. This adaptive algorithm is widely used owing to its low computational complexity and ease of implementation, inherent numerical stability, very good tracking properties, and high robustness in a wide range of operating conditions [23,24]. This algorithm adapts the tap-weights sequence using a gradient descent algorithm that reduces the squared estimation error at each instant. The updated algorithm is given below:
                           
                              (11)
                              
                                 
                                    W
                                    (
                                    n
                                    +
                                    1
                                    )
                                    =
                                    W
                                    (
                                    n
                                    )
                                    +
                                    μ
                                    
                                       
                                          X
                                          (
                                          n
                                          )
                                          e
                                          (
                                          n
                                          )
                                       
                                       
                                          ε
                                          +
                                          
                                             
                                                X
                                             
                                             
                                                T
                                             
                                          
                                          (
                                          n
                                          )
                                          X
                                          (
                                          n
                                          )
                                       
                                    
                                 
                              
                           
                         where μ is the adaptation step-size (
                           0
                           <
                           μ
                           <
                           2
                        ), and 
                           ε
                           >
                           0
                         is a regularization constant used to improve the adaptation stability and to avoid division by zero.

Conventional adaptive NLMS filters use a fixed step-size parameter, which can only be a compromise between the conflicting goals of fast convergence and small steady-state error. An appropriate step-size control is needed.

The disadvantage of the classical NLMS, or the fixed step-size NLMS (FSS-NLMS), is that the step-size factor cannot meet the convergence rate and the steady-state error at the same time, especially for a non-stationary input such as the speech signal. In addition, the performances of FSS-NLMS deteriorate for colored inputs.

A variable step-size algorithm is used to balance the trade-off between the rate of convergence and the steady-state error. The idea is to use a large step-size in the initial stages of convergence of the algorithm to enhance the convergence rate; on the other hand a smaller step-size is used in the stopping convergence stage of the algorithm, which corresponds to a small steady-state error.

The NLMS algorithm has variable step-size parameters, with the weight update recursion given by:
                        
                           (12)
                           
                              
                                 W
                                 (
                                 n
                                 +
                                 1
                                 )
                                 =
                                 W
                                 (
                                 n
                                 )
                                 +
                                 μ
                                 (
                                 n
                                 )
                                 
                                    
                                       X
                                       (
                                       n
                                       )
                                       e
                                       (
                                       n
                                       )
                                    
                                    
                                       ε
                                       +
                                       
                                          
                                             X
                                          
                                          
                                             T
                                          
                                       
                                       (
                                       n
                                       )
                                       X
                                       (
                                       n
                                       )
                                    
                                 
                              
                           
                        
                      where 
                        μ
                        (
                        n
                        )
                      is the variable step-size which has a variable positive scalar included to control the filter coefficients update.

To balance the trade-off between different aspects of adaptive filtering such as convergence rate, mean-square error, and computational cost of the NLMS algorithm, an appropriate step-size control is needed [25]. In the literature, numerous variable step-size VSS-NLMS algorithms have been proposed. We describe in the following two examples: the non-parametric and the generalized sigmoid algorithms.

The NPVSS-NLMS algorithm proposed in [26,27] uses a more reliable approach, which can be obtained by adjusting the step-size value in accordance with the criterion of attempting to reduce the squared error at each instant, imposing the condition 
                           E
                           {
                           
                              
                                 ϵ
                              
                              
                                 2
                              
                           
                           (
                           n
                           )
                           }
                           =
                           E
                           {
                           
                              
                                 b
                              
                              
                                 2
                              
                           
                           (
                           n
                           )
                           }
                         where 
                           E
                           {
                           ⋅
                           }
                         denotes mathematical expectation, and 
                           ϵ
                           (
                           n
                           )
                         is an a posteriori estimation error defined by:
                           
                              (13)
                              
                                 
                                    ϵ
                                    (
                                    n
                                    )
                                    =
                                    d
                                    (
                                    n
                                    )
                                    −
                                    
                                       
                                          X
                                       
                                       
                                          T
                                       
                                    
                                    (
                                    n
                                    )
                                    W
                                    (
                                    n
                                    +
                                    1
                                    )
                                 
                              
                           
                         The a priori estimation error 
                           e
                           (
                           n
                           )
                         is defined by equation:
                           
                              (14)
                              
                                 
                                    e
                                    (
                                    n
                                    )
                                    =
                                    d
                                    (
                                    n
                                    )
                                    −
                                    
                                       
                                          X
                                       
                                       
                                          T
                                       
                                    
                                    (
                                    n
                                    )
                                    W
                                    (
                                    n
                                    )
                                 
                              
                           
                         The optimal variable step-size is given by the following equation used in NPVSS-NLMS algorithm:
                           
                              (15)
                              
                                 
                                    
                                       
                                          μ
                                       
                                       
                                          NPVSS
                                       
                                    
                                    (
                                    n
                                    )
                                    =
                                    
                                       {
                                       
                                          
                                             
                                                β
                                                (
                                                n
                                                )
                                                
                                             
                                             
                                                if 
                                                
                                                   
                                                      
                                                         
                                                            σ
                                                         
                                                         
                                                            ˆ
                                                         
                                                      
                                                   
                                                   
                                                      e
                                                   
                                                
                                                (
                                                n
                                                )
                                                >
                                                
                                                   
                                                      σ
                                                   
                                                   
                                                      b
                                                   
                                                
                                             
                                          
                                          
                                             
                                                0
                                                
                                             
                                             
                                                otherwise
                                             
                                          
                                       
                                    
                                 
                              
                           
                         where
                           
                              (16)
                              
                                 
                                    β
                                    (
                                    n
                                    )
                                    =
                                    
                                    
                                       1
                                       
                                          ε
                                          +
                                          
                                             
                                                X
                                             
                                             
                                                T
                                             
                                          
                                          (
                                          n
                                          )
                                          X
                                          (
                                          n
                                          )
                                       
                                    
                                    
                                       (
                                       1
                                       −
                                       
                                          
                                             
                                                σ
                                             
                                             
                                                b
                                             
                                          
                                          
                                             ϵ
                                             +
                                             
                                                
                                                   
                                                      
                                                         σ
                                                      
                                                      
                                                         ˆ
                                                      
                                                   
                                                
                                                
                                                   e
                                                
                                             
                                             (
                                             n
                                             )
                                          
                                       
                                       )
                                    
                                 
                              
                           
                         
                        ϵ is a positive very small number to avoid division by zero.

The variable 
                           
                              
                                 
                                    
                                       σ
                                    
                                    
                                       ˆ
                                    
                                 
                              
                              
                                 e
                              
                              
                                 2
                              
                           
                           (
                           n
                           )
                           =
                           E
                           {
                           
                              
                                 e
                              
                              
                                 2
                              
                           
                           (
                           n
                           )
                           }
                         defines the power of the error signal, 
                           
                              
                                 σ
                              
                              
                                 b
                              
                              
                                 2
                              
                           
                           =
                           E
                           {
                           
                              
                                 b
                              
                              
                                 2
                              
                           
                           (
                           n
                           )
                           }
                         is the power of the system noise, known or estimated. An estimation used to calculate 
                           
                              
                                 
                                    
                                       σ
                                    
                                    
                                       ˆ
                                    
                                 
                              
                              
                                 e
                              
                           
                           (
                           n
                           )
                         is updated as follows:
                           
                              (17)
                              
                                 
                                    
                                       
                                          
                                             
                                                σ
                                             
                                             
                                                ˆ
                                             
                                          
                                       
                                       
                                          e
                                       
                                    
                                    (
                                    n
                                    )
                                    =
                                    λ
                                    
                                       
                                          
                                             
                                                σ
                                             
                                             
                                                ˆ
                                             
                                          
                                       
                                       
                                          e
                                       
                                       
                                          2
                                       
                                    
                                    (
                                    n
                                    −
                                    1
                                    )
                                    +
                                    (
                                    1
                                    −
                                    λ
                                    )
                                    
                                       
                                          e
                                       
                                       
                                          2
                                       
                                    
                                    (
                                    n
                                    )
                                 
                              
                           
                         where λ is an exponential weighting factor lying in the interval 
                           ]
                           0
                           ,
                           1
                           ]
                        . Table 1
                         summarizes the NPVSS-NLMS.

The GSVSS-NLMS algorithm, proposed in [6], uses a sigmoid function based on the adjusted variable step of the adaptive filter algorithm. Its principle is that the step-size should be large in the initial stage in order to get great tracking speed. But the step should be small at the convergence stage to maintain steady-state error [8].

The sigmoid variable step-size in GSVSS-NLMS algorithm is shown as follows:
                           
                              (18)
                              
                                 
                                    
                                       
                                          μ
                                       
                                       
                                          SVSS
                                       
                                    
                                    (
                                    n
                                    )
                                    =
                                    B
                                    
                                       (
                                       
                                          1
                                          
                                             1
                                             +
                                             exp
                                             ⁡
                                             (
                                             −
                                             A
                                             |
                                             e
                                             (
                                             n
                                             )
                                             |
                                             )
                                          
                                       
                                       −
                                       0.5
                                       )
                                    
                                 
                              
                           
                         where A, 
                           0.001
                           <
                           A
                           <
                           0.1
                        , and B, 
                           0
                           <
                           B
                           <
                           2
                        , are respectively the shape and the range controlling parameters of the variable step-size function.

The generalized sigmoid variable step-size in GSVSS-NLMS algorithm is done by:
                           
                              (19)
                              
                                 
                                    
                                       
                                          μ
                                       
                                       
                                          GSVSS
                                       
                                    
                                    (
                                    n
                                    )
                                    =
                                    
                                    B
                                    
                                       (
                                       
                                          1
                                          
                                             1
                                             +
                                             exp
                                             ⁡
                                             (
                                             −
                                             A
                                             
                                                
                                                   (
                                                   
                                                      
                                                         σ
                                                      
                                                      
                                                         e
                                                      
                                                   
                                                   (
                                                   n
                                                   )
                                                   −
                                                   
                                                      
                                                         σ
                                                      
                                                      
                                                         b
                                                      
                                                   
                                                   )
                                                
                                                
                                                   m
                                                
                                             
                                             )
                                          
                                       
                                       −
                                       0.5
                                       )
                                    
                                 
                              
                           
                         where m, 
                           0
                           <
                           m
                           <
                           5
                        , is the parameter of the generalized sigmoid function. The GSVSS-NLMS is summarized in Table 2
                        .

In this section, we describe the proposed algorithm, named MESVSS-NLMS (mean error sigmoid VSS-NLMS), which is an improvement of the GSVSS-NLMS algorithm. This algorithm uses the sigmoid step-size and replaces the estimation error by the estimation error of the mean of the block error ratio, where the length of block error varies according to a rule decomposition. The variable step depends on the estimated error. The main idea of the proposed algorithm is to decompose the estimation error into a sub-block.


                     Fig. 3
                      shows an example of error decomposition for 3 levels of decomposition, where D is the maximum level of error decomposition initialized in the first, n and N are the iteration number and the total number of iterations respectively, which correspond to the index time n and the length of the input signal 
                        x
                        (
                        n
                        )
                     . The proposed algorithm consists of two stages.


                     Stage 1:
                  

In this stage, the length of the block of the estimation error varies, where the maximum length is 
                        
                           
                              L
                           
                           
                              m
                              s
                           
                        
                     , which is defined by the following equation:
                        
                           (20)
                           
                              
                                 
                                    
                                       L
                                    
                                    
                                       m
                                       s
                                    
                                 
                                 =
                                 
                                    N
                                    
                                       
                                          2
                                       
                                       
                                          D
                                       
                                    
                                 
                              
                           
                        
                      In this block error, the modified error 
                        
                           
                              e
                           
                           
                              m
                           
                        
                        (
                        n
                        )
                      equals the estimated error 
                        e
                        (
                        n
                        )
                      to the mean of the error vector 
                        E
                        (
                        n
                        )
                      ratio, as is expressed by the equation:
                        
                           (21)
                           
                              
                                 
                                    
                                       e
                                    
                                    
                                       m
                                    
                                 
                                 (
                                 n
                                 )
                                 =
                                 
                                    
                                       e
                                       (
                                       n
                                       )
                                    
                                    
                                       
                                          1
                                          n
                                       
                                       
                                          
                                             ∑
                                          
                                          
                                             0
                                          
                                          
                                             n
                                          
                                       
                                       E
                                       (
                                       n
                                       )
                                    
                                 
                              
                           
                        
                      where 
                        E
                        (
                        n
                        )
                      cumulates the estimation error 
                        e
                        (
                        n
                        )
                     . The mean of 
                        E
                        (
                        n
                        )
                      is calculated for a varying length between 0 and 
                        
                           
                              L
                           
                           
                              m
                              s
                           
                        
                        −
                        1
                     , in 
                        n
                        =
                        0
                      the mean 
                        
                           1
                           n
                        
                        
                           
                              ∑
                           
                           
                              0
                           
                           
                              n
                           
                        
                        E
                        (
                        n
                        )
                        =
                        e
                        (
                        0
                        )
                     . The objective is to accelerate the convergence in this stage, where the estimation error is very important in the beginning stage.


                     Stage 2:
                  

The length of the block error 
                        
                           
                              L
                           
                           
                              m
                           
                        
                      in the second stage is fixed for each decomposition level l, 
                        l
                        =
                        1
                        …
                        D
                     , where 
                        
                           
                              L
                           
                           
                              m
                           
                        
                      is defined by:
                        
                           (22)
                           
                              
                                 
                                    
                                       L
                                    
                                    
                                       m
                                    
                                 
                                 =
                                 
                                    N
                                    
                                       
                                          2
                                       
                                       
                                          (
                                          D
                                          −
                                          l
                                          )
                                       
                                    
                                 
                              
                           
                        
                      The modified error 
                        
                           
                              e
                           
                           
                              m
                           
                        
                        (
                        n
                        )
                      for each block is calculated by the equation:
                        
                           (23)
                           
                              
                                 
                                    
                                       e
                                    
                                    
                                       m
                                    
                                 
                                 (
                                 n
                                 )
                                 =
                                 
                                    
                                       e
                                       (
                                       n
                                       )
                                    
                                    
                                       
                                          1
                                          
                                             
                                                L
                                             
                                             
                                                m
                                             
                                          
                                       
                                       
                                          
                                             ∑
                                          
                                          
                                             n
                                             −
                                             
                                                
                                                   L
                                                
                                                
                                                   m
                                                
                                             
                                          
                                          
                                             n
                                          
                                       
                                       E
                                       (
                                       n
                                       )
                                    
                                 
                              
                           
                        
                      The purpose of this technique is to minimize the error in the steady-state stage.

In this algorithm, the modified error 
                        
                           
                              e
                           
                           
                              m
                           
                        
                        (
                        n
                        )
                      is replaced with 
                        (
                        
                           
                              σ
                           
                           
                              e
                           
                        
                        (
                        n
                        )
                        −
                        
                           
                              σ
                           
                           
                              b
                           
                        
                        )
                      value in the GSVSS-NLMS algorithm [6], and the variable step-size is adapted as:
                        
                           (24)
                           
                              
                                 
                                    
                                       μ
                                    
                                    
                                       MESVSS
                                    
                                 
                                 (
                                 n
                                 )
                                 =
                                 B
                                 
                                    (
                                    
                                       1
                                       
                                          1
                                          +
                                          exp
                                          ⁡
                                          (
                                          −
                                          A
                                          
                                             
                                                (
                                                
                                                   
                                                      e
                                                   
                                                   
                                                      m
                                                   
                                                
                                                (
                                                n
                                                )
                                                )
                                             
                                             
                                                m
                                             
                                          
                                          )
                                       
                                    
                                    −
                                    0.5
                                    )
                                 
                              
                           
                        
                      
                     A, B, and m are same as described in Eqs. (18) and (19).

The proposed algorithm is summarized in the Table 3
                     .


                     Fig. 5 shows the curve of the variable step-size function 
                        μ
                        (
                        n
                        )
                      for 2000 iterations, with the variable 
                        e
                        (
                        n
                        )
                     , which varies between −1 and 1 as depicted in Fig. 4
                     
                     . The two functions, the generalized sigmoid 
                        
                           
                              μ
                           
                           
                              GSVSS
                           
                        
                        (
                        n
                        )
                      and the mean error sigmoid 
                        
                           
                              μ
                           
                           
                              MESVSS
                           
                        
                        (
                        n
                        )
                      are adjusted using the following parameters: 
                        A
                        =
                        0.002
                     , 
                        B
                        =
                        0.7
                     , 
                        m
                        =
                        1
                     , 
                        D
                        =
                        4
                     , 
                        λ
                        =
                        0.999
                     .

The proposed variable step-size function is varied according the two successive following stages. The modified error 
                        
                           
                              e
                           
                           
                              m
                           
                        
                        (
                        n
                        )
                      in the first stage is calculated according to Eq. (21) while the modified error 
                        
                           
                              e
                           
                           
                              m
                           
                        
                        (
                        n
                        )
                      in the second stage is evaluated using Eq. (23). In these two stages the proposed function has a good behavior compared to the sigmoid function in terms of obtaining a large step-size when the 
                        e
                        (
                        n
                        )
                      values are large. On one hand, the convergence rate is improved. On the other hand, this function has a small step-size in the stopping stage of the convergence when we obtain a lower steady-state error.

@&#RESULTS AND DISCUSSIONS@&#

For the evaluation task, we have used two performance measures: mean square error (MSE) and normalized misalignment. These evaluation criteria are defined as follows:
                        
                           (25)
                           
                              
                                 
                                    MSE
                                 
                                 (
                                 dB
                                 )
                                 =
                                 10
                                 
                                    
                                       log
                                    
                                    
                                       10
                                    
                                 
                                 ⁡
                                 
                                    (
                                    E
                                    
                                       {
                                       
                                          
                                             |
                                             e
                                             (
                                             n
                                             )
                                             |
                                          
                                          
                                             2
                                          
                                       
                                       }
                                    
                                    )
                                 
                              
                           
                        
                     
                     
                        
                           (26)
                           
                              
                                 
                                    Misalignment
                                 
                                 (
                                 dB
                                 )
                                 =
                                 10
                                 
                                    
                                       log
                                    
                                    
                                       10
                                    
                                 
                                 ⁡
                                 
                                    (
                                    
                                       
                                          
                                             ‖
                                             W
                                             (
                                             n
                                             )
                                             −
                                             h
                                             ‖
                                          
                                          
                                             2
                                          
                                       
                                       
                                          
                                             ‖
                                             h
                                             ‖
                                          
                                          
                                             2
                                          
                                       
                                    
                                    )
                                 
                              
                           
                        
                      where 
                        ‖
                        W
                        (
                        n
                        )
                        −
                        h
                        ‖
                      is the Euclidian distance between the adaptive coefficients vector 
                        W
                        (
                        n
                        )
                      and the true echo path vector 
                        h
                     , with a Euclidian norm 
                        ‖
                        h
                        ‖
                     .

To evaluate the performances of the proposed algorithm, speech signals, sampled at 16 kHz, are taken from the TIMIT database [28].

We used two speech signals for far-end and near-end speakers, as shown in Figs. 6 and 7
                     
                      respectively. For the far-end speech signal 
                        x
                        (
                        n
                        )
                     , the following sentence: “She always jokes about too much garlic in his food” was uttered by a male speaker. For the near-end speech signal 
                        s
                        (
                        n
                        )
                     , the sentence “To what extent such low” was uttered by a female speaker.

The real environment is modeled by white Gaussian noise signal 
                        b
                        (
                        n
                        )
                      added to the echo signal 
                        y
                        (
                        n
                        )
                     , at different signal-to-noise ratio (SNR): 20 dB, 15 dB, 10 dB and 5 dB, where the SNR is defined by:
                        
                           (27)
                           
                              
                                 
                                    SNR
                                 
                                 (
                                 
                                    dB
                                 
                                 )
                                 =
                                 10
                                 
                                    
                                       log
                                    
                                    
                                       10
                                    
                                 
                                 ⁡
                                 
                                    (
                                    
                                       
                                          E
                                          {
                                          
                                             
                                                |
                                                y
                                                (
                                                n
                                                )
                                                |
                                             
                                             
                                                2
                                             
                                          
                                          }
                                       
                                       
                                          E
                                          {
                                          
                                             
                                                |
                                                b
                                                (
                                                n
                                                )
                                                |
                                             
                                             
                                                2
                                             
                                          
                                          }
                                       
                                    
                                    )
                                 
                              
                           
                        
                     
                  

The AEC is performed with the following adaptive algorithms: NLMS, NPVSS-NLMS, GSVSS-NLMS, which are compared to the new MESVSS-NLMS proposed algorithm. The parameters of these algorithms are: 
                        μ
                        =
                        0.9
                     , 
                        ε
                        =
                        2.2204
                        ×
                        
                           
                              10
                           
                           
                              −
                              16
                           
                        
                     , the total number of iterations is 
                        N
                        =
                        40
                        
                        000
                     . The length of the filter is 
                        L
                        =
                        1024
                      which is the length of impulse response of the echo path. The real part of the impulse response of a cockpit car sampled at 16 kHz is shown in Fig. 8
                     .

The power of the system noise are 
                        
                           
                              σ
                           
                           
                              b
                           
                        
                        =
                        0.0048
                      (
                        
                           SNR
                        
                        =
                        30
                         dB
                     ), 
                        
                           
                              σ
                           
                           
                              b
                           
                        
                        =
                        0.015
                      (
                        
                           SNR
                        
                        =
                        20
                         dB
                     ), 
                        
                           
                              σ
                           
                           
                              b
                           
                        
                        =
                        0.0271
                      (
                        
                           SNR
                        
                        =
                        15
                         dB
                     ), 
                        
                           
                              σ
                           
                           
                              b
                           
                        
                        =
                        0.047
                      (
                        
                           SNR
                        
                        =
                        10
                         dB
                     ), 
                        
                           
                              σ
                           
                           
                              b
                           
                        
                        =
                        0.086
                      (
                        
                           SNR
                        
                        =
                        5
                         dB
                     ). The first test of MESVSS-NLMS is done in a stationary environment, where the far-end signal 
                        x
                        (
                        n
                        )
                      is modeled by a white Gaussian noise with SNR value equal to 5 dB with the control parameters: 
                        A
                        =
                        0.002
                     , 
                        B
                        =
                        0.9
                     , 
                        m
                        =
                        1
                     , 
                        λ
                        =
                        0.0005
                     . For the proposed algorithm the number of decompositions of the estimation error is 
                        D
                        =
                        3
                     . We simulate the channel change by increasing the gain of the channel by 4 at sample 20 000. After that, we use speech signals to evaluate the proposed algorithm in two scenarios, single-talk and double-talk.


                     Fig. 9
                      shows the misalignment evaluation using a stationary input in a noisy environment (
                        
                           SNR
                        
                        =
                        5
                         dB
                     ). The results show that the proposed algorithm is better than GSVSS-NLMS, NPVSS-NLMS and the standard NLMS algorithms in terms of small steady-state misalignment and good tracking capability in a noisy environment.

In this experiment, the near-end speech signal is not present (near-end speaker in state of silence). The desired signal 
                           d
                           (
                           n
                           )
                         consists of the echo 
                           y
                           (
                           n
                           )
                         and the noise 
                           b
                           (
                           n
                           )
                         signals.

To confirm the good performance of the proposed method, we use four other near-end speech signals issued from the TIMIT dataset. Four sentences were uttered by four speakers, two males and two females. These sentences are shown in Table 4
                        , and the evaluation results using these signals are depicted in Table 5
                         and Table 6
                        .

Two cases can be distinguished in this scenario: (1) speech signal starts by speech, and (2) speech signal starts with a silence.

In this case, we used the far-end speech signal (Fig. 6) that starts at sample 5000. For the proposed method the level of estimation error decomposition used is 
                              D
                              =
                              2
                           . The evaluation results are shown in Figs. 10 and 11
                           
                           .


                           Figs. 10 and 11 show the evolution of MSE and the misalignment which is performed for each 128 iterations. The results denote a good performance of the proposed algorithm compared to the other algorithms, for acoustic echo cancellation, where non-stationary input is investigated. The MESVSS-NLMS algorithm shows a better performance in terms of speed of the MSE convergence compared to GSVSS-NLMS algorithm, and small MSE steady-state over the three other algorithms. The MSE convergence of GSVSS-NLMS is slow, on the other hand it shows that a small steady-state MSE compared to the NLMS and NPVSS-NLMS algorithms. The misalignment evaluation demonstrates the advantage of the proposed algorithm where it shows a fast convergence and a small misalignment steady-state. On the other hand, GSVSS-NLMS, NPVSS-NLMS and NLMS suffer from a slow convergence and a divergence of the adaptive filter coefficients due to the local noise.

We use the four speech signals shown in Table 4 to ameliorate the proposed method evaluation. The average of the misalignment is calculated in the steady-state period and the obtained results are shown in Table 5.

These results confirm the good behavior of the proposed method in terms of misalignment steady-state minimization, with some difference in the superiority of the proposed method in the used four levels. This superiority depends on the near-end speech signal and SNR values.

We used the far-end speech signal plotted in Fig. 6. For the proposed method, 2 and 5 levels of estimation error decomposition are used. The noisy environment is modeled by an additive noise with 
                              
                                 SNR
                              
                              =
                              30
                               dB
                           . The obtained results are shown in Figs. 12 and 13
                           
                           .

The evolution of MSE in Fig. 12 shows an increasing in MSE values due to the silence at the start of the far-end speech signal and the presence of the local noise. These results indicate a minimizing of MSE by the proposed algorithm. The misalignment evaluation depicted in Fig. 13 shows a bad result given by NLMS and NPVSS-NLMS algorithms, where the misalignment diverges to a positive value, because of the local noise influence and the length of the echo path. The presence of the local noise in the silence starting case of speech signal in the initial phase of the adaptive filter coefficients update causes a rapid divergence. The proposed MESVSS-NLMS algorithm takes into account the controlling of the filter coefficient update in this situation, where it converges to a negative value. A slow convergence of GSVSS-NLMS and a bad behavior in the steady-state are also indicated. On the other hand, a good performance of MESVSS-NLMS is demonstrated in the second case of the single-talk scenario in terms of echo path estimation, where it converges to a small steady-state error compared to the other algorithms.

As is shown in the previous evaluation, Table 6 shows also the average misalignment for speech starting with silence.

The obtained results, indicated in Table 6, confirm also the performance of the proposed method by minimizing the average of the misalignment in the steady-state.


                           Fig. 14
                            shows the waveforms of the error signal for the different algorithms. This result demonstrates a reduction of the residual echo by the proposed algorithm which can estimate the echo signal in a noisy environment and improve the performance of GSVSS-NLMS algorithm for a non-stationary input. The error signal in the steady-state corresponds to the additive noise signal.

The presence of near-end speech of the near-end speaker causes double-talk, such as the desired signal 
                           d
                           (
                           n
                           )
                         composed of the echo 
                           y
                           (
                           n
                           )
                         and the near-end 
                           s
                           (
                           n
                           )
                         signals, including ambient noise (local noise). When double-talk occurs, the adaptive filter coefficients may not converge and the identification of the echo path becomes more difficult. In this case we used a near-end signal delayed from the far-end signal by 9000 samples.


                        Fig. 15
                         shows the evolution of MSE in the double-talk scenario. These results indicate also the advantage of MESVSS-NLMS compared to the other algorithms in a double-talk, where it minimizes the MSE. The double-talk degrades the performance of acoustic echo cancellation. The NLMS and NPVSS-NLMS algorithms are not able to work correctly as shown by the large residual error in the double-talk situations.

The misalignment evaluations are shown in Fig. 16
                        . These results show a similar performance to the single-talk scenario; the good behavior of the MESVSS-NLMS algorithm in terms of robustness against double-talk, which can follow the variation of the non-stationary input. In addition, some divergence appears because of the double-talk.


                        Fig. 17
                         shows the error signal waveform, where it is composed of the near-end 
                           s
                           (
                           n
                           )
                        , the noise 
                           b
                           (
                           n
                           )
                         signals and the residual echo 
                           
                              
                                 e
                              
                              
                                 r
                              
                           
                           (
                           n
                           )
                        . These results demonstrate the performance of MESVSS-NLMS algorithm to estimate the near-end signal compared to GSVSS-NLMS. For the NLMS and NPVSS-NLMS algorithms, the estimated signal is degraded by the double-talk. To improve the intelligibility of the estimated near-end signal, we can add an acoustic echo suppressor for denoising this signal which eliminates the residual echo and the local noise.

@&#CONCLUSION@&#

In this paper, improved VSS-NLMS algorithm is proposed for an acoustic echo cancellation application, where an adaptive filter is used to identify the echo path. In the acoustic echo canceller and for a non-stationary input, in a noisy environment, the FSS-NLMS algorithm has shown a low performance. An improved Variable step-size NLMS algorithm has been proposed to enhance the performance of this algorithm. The simulation results demonstrate that the proposed algorithm, named MESVSS-NLMS, provides a better performance compared to the other recent VSS-NLMS algorithms. This performance compromises between a fast convergence, small steady-state misalignment and steady-state mean square error. The proposed algorithm has also a good behavior in the two scenarios: single-talk and double-talk.

As a future work, we are aiming at combining AEC with a noise reduction system to reduce the residual echo in single-talk, and enhance the estimated near-end signal in double-talk, and also to use a double-talk detector module to halt the update of filter coefficients in double-talk scenario.

@&#REFERENCES@&#

