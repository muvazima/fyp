@&#MAIN-TITLE@&#Long term production planning of open pit mines by ant colony optimization

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           A new production planning method for open pit mines has been presented here.


                        
                        
                           
                           Presented method is based on ant colony optimization metaheuristic methodology.


                        
                        
                           
                           New process can model very complex objective function and nonlinear constraints.


                        
                        
                           
                           It is an approximation method that does not guarantee to catch the global optimum.


                        
                        
                           
                           Algorithm is applicable on real scale deposits and required hardware is acceptable.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Metaheuristics

Open-pit mine

Combinatorial optimization

Production planning

Ant colony optimization

@&#ABSTRACT@&#


               
               
                  The problem of long-term production planning of open pit mines is a large combinatorial problem. Application of mathematical programming approaches suffer from reduced computational efficiency due to the large amount of decision variables. This paper presents a new metaheuristic approximation approach based on the Ant Colony Optimization (ACO) for the solution of the problem of open-pit mine production planning. It is a three-dimensional optimization procedure which has the capability of considering any type of objective function, non-linear constraints and real technical restrictions. The proposed process is programmed and tested through its application on a real scale Copper–Gold deposit. The study revealed that the ACO approach is capable to improve the value of the initial mining schedule regarding the current commercial tools considering penalties and without, in a reasonable computational time. Several variants of ACO were examined to find the most compatible variants and the best parameter ranges. Results indicated that the Max–Min Ant System (MMAS) and the Ant Colony System (ACS) are the best possible variants based on the required less amount of memory. It is also proved that the MMAS is the most explorative variant, while the ACS is the fastest method.
               
            

@&#INTRODUCTION@&#

A global challenge in the years to come is the environmental-friendly and financially attractive provision of exhaustible resources (minerals) to meet the ever-increasing demand by the today’s high-tech society. Currently surface mining accounts for a significant proportion of the produced minerals. Surface or open pit mining is a mineral exploitation method by which the deposit is accessed by digging a large opening in the ground surface, called a pit, to expose the ore. The mining operation initially starts with a small pit and develops to a larger pit enclosing the previous one. The process proceeds until a final shape of the mine called “the ultimate pit limit” (UPL) is reached. These sequences of pits are known as mining sequences or pushbacks.

The last 30years have seen a widely-publicized revolution in the application of the numerical methods in the mining industry in order to produce better mine plans on more complicated and often lower grade deposits. Recent researches in the field of open-pit optimization have been focused on developing new algorithms which are (Sattarvand, 2009):
                        
                           •
                           firstly less complex in terms of comprehensibility and programming;

secondly require high computational efficiency in order to be applicable to the large deposits;

finally allow the incorporation of real mining complexities such as variable slopes, working slopes, time value of money, quality and quantity of planned material and related uncertainties.

A core concept to address this complex and large-scale optimization problem is the block model, where the ore body is discretized into a three dimensional array of regular size blocks. The model may have millions of blocks depending on the size of the deposit and the size of the blocks. A set of attributes such as tonnage and grade, using different geostatistical techniques and economic parameters, are assigned to the each block.

The long-term open-pit mine production planning problem can be defined as specifying the sequence in which the blocks should be removed from the mine as a certain material type, in order to maximize the total discounted profit from the mine subject to a variety of economical and physical constraints.

This paper presents a new metaheuristic approximation approach based on the Ant Colony Optimization (ACO) for the solution of the problem of open-pit mine production planning. The process has the proficiency to optimize the UPL and the long-term planning problem simultaneously considering the multi-objective targets and the complex constraints. It merges the constraints into the objective function as a set of the penalties for deviations from the targets. The next section gives a brief review on state of the art, short description of the metaheuristic algorithms and reviews the former developed metaheuristic approaches in the field of open pit optimization. Thereafter, fundamental structure of the ACO modeling and its applicable variants in the open pit optimization are described. Finally, the proposed procedure of long-term open pit planning is explained and the results of its application on a real scale Copper–Gold mine are presented and discussed.

At late 60s, researchers were only focused on the UPL problem. Lerchs and Grossmann’s algorithm based on graph theory (Lerchs & Grossmann, 1965) and Maxflow algorithm based on network flow concept (Johnson, 1969) are the first attempts to solve this problem. Subsequent studies motivated to a more general problem namely the problem of production planning. Gershon (1983) presented a Mixed Integer Linear Programming (MILP) model. The model has binary variables and its objective function could be expressed as a maximization of Net Present Value (NPV) of the mining operation. The MILP model is subjected to the variety of technical constraints. For instance, the total tonnage of extracted material, the quantity of each material type and the average grade of each production element should be within predefined ranges of limits. Moreover, sequencing constraints are necessary to ensure that a block can be extracted if all immediate successor blocks have been removed. Finally, reserve constraints are applied to mathematically guarantee that a block is mined only once.

Several approaches have been proposed in literatures to solve this MILP model. Dagdelen and Johnson (1986) and Caccetta, Kelsey, and Giannini (1998) used Lagrangian parameterization in order to relax the mining and milling constraints into the objective function. Consequently, the problem could be handled by repetition of any UPL algorithm such as the (Lerchs & Grossmann, 1965)’s graph theory based algorithm. Later Caccetta and Hill (2003) proposed a branch and bound technique to solve the formulated scheduling problem. Dowd and Onur (1993) and Onur and Dowd (1993) formulated the problem as a dynamic programming model. Ramazan (2007) described the application of fundamental tree algorithm to reconstruct the mining blocks and decrease the number of variables in scheduling problems without reducing the resolution of the model or optimality of the results. They defined the fundamental tree as any combination of the blocks that can be profitably mined respecting slope constraints. Boland, Dumitrescu, Froyland, and Gleixner (2009) proposed an iterative disaggregation method that refines the aggregates (with respect to processing) up to the point where the refined aggregates defined for processing produce the same optimal solution for the Linear Programming (LP) relaxation of the MILP as the optimal solution of the LP relaxation with individual block processing. Bley, Boland, Fricke, and Froyland (2010) presented an integer programming formulation which is strengthened through adding inequalities derived by combining the precedence and production constraints. The addition of these inequalities decreases the computational requirements to obtain the optimal integer solution. Chicoisne, Espinoza, Goycoolea, Moreno, and Rubio (2012) developed a new algorithm for this problem based on a well-known integer programming formulation which called C-PIT method. The proposed method used a new decomposition process for solving the linear programming relaxation of the C-PIT when there is a single capacity constraint per time period. They denoted that this is just a proof of a concept and next step would be extending the critical multiplier method to work explicitly with multiple side constraints.

All these exact approaches are limited by the amount of decision variables and can solve relatively small problems, excluding many practical implications.

A metaheuristic is a set of algorithmic concepts that can be used to improve the heuristic methods to become applicable for difficult problems. These concepts are usually inspired by biology and nature. The use of metaheuristics has significantly increased the ability of finding very high quality solutions for large combinatorial problems (that are often easy to state but very difficult to solve) in a rational time. This is particularly true for large problems which are difficult to understand. The family of the metaheuristics includes, but is not limited to, Genetic Algorithm (GA), Simulated Annealing (SA), Tabu Search (TS), ACO, and Particle Swarm Optimization (PSO).


                        Denby and Schofield (1994) described the process of the application of the GA in optimization of an open-pit mine production planning shown in Fig. 1
                        a. The main advantage of their method was in its ability to solve the ultimate pit limit and the long-term planning problem simultaneously. By choosing proper values for the genetic parameters, this method is capable to produce good results for a small block model in an acceptable time. Later Denby and Schofield (1995) continued to consider risk assessment in their scheduling process. They also extended the algorithm from 2D to 3D (Denby & Schofield, 1996) and used it for a flexible scheduling operation (Denby, Schofield, & Surme, 1998).


                        Kumral and Dowd (2002, 2005) investigated the solution of the open pit mine production scheduling problem by means of the SA as shown in Fig. 1b. The main advantage of this routine is that it utilizes a multi-objective function comprised of three minimization components. On the other hand, the separate determination of UPL and production schedule would be counted as a drawback for this method. Godoy and Dimitrakopoulos (2004) used simulated annealing method on the effective management of waste mining and orebody grade uncertainty. Their objective function minimizes the chance of deviation from production target for each period in different scenarios. Recently Lamghari and Dimitrakopoulos (2012) presented a diversified Tabu search approach for the open-pit mine production scheduling problem in the field of metal uncertainty. They used two different diversification strategies to generate several initial solutions and then optimized these solutions using the TS method.

ACO, which is inspired by the foraging behavior of the ant colonies, is developed by Dorigo and Stützle (2004). In nature, the ants walk randomly and upon finding food return to their colony while laying down chemical trails called pheromone. The pheromone trail transmits a message to other members of the colony. The other ants are likely to follow the trail instead of randomly traveling. If they eventually find food then reinforce the trail by depositing more pheromone. Over the time the pheromone trail starts to evaporate and reduce its attraction. Obviously, magnitude of the evaporation in longer paths is higher than shorter. Thus, the intensity of laid pheromone on the shortest path, by comparison, gradually increases up to the level that balances with the evaporation rate. This makes the shortest path to be marched and followed by almost all of the ants. The methodology of the ant colony optimization mimics this natural behavior by considering a series of variables representing and continuously updating the pheromone values based on the quality of the found solutions, (Dorigo & Stützle, 2004).

Most of the mathematical programming approaches are limited by the amount of decision variables, as applications for the long-term open pit problem become very large and suffer from reduced computational efficacy. This fact encouraged researchers to use different solvers for this problem. In leading optimization problems, such as Travelling sales man (TSP), Vehicle routing and Assignment problem, (Dorigo & Stützle, 2003), ACO approach is applied to find the optimal or near optimal solution. The following describes methodology of application of ACO in the field of open pit mine planning. Fig. 2
                      shows the proposed flow chart of the long-term open-pit production planning using ACO.

The algorithm consists of saving P variables for each block of the model, τip
                        , which represent the pheromone value related to the mining of ith block in pth period. The magnitude of the saved pheromones represents the desirability of a block to become the deepest point of the mine in that period. The initial values of these variables are assigned based on a sub-optimal mine schedule generated by the traditional algorithms. Then the random mining schedules are constructed according to the initial pheromones. These schedules deposit an extra pheromone proportional to their economic quality (fitness value). This action along with considering the pheromone evaporation in the algorithm, leads to the optimum boundary of the mining pushbacks.

The experiments showed that the running time increases drastically using the uniform initial pheromone pattern. Therefore, a sub-optimal solution for the problem of long-term open-pit scheduling is used and initial pheromone trails are assigned to the blocks according to this sub-optimal solution. Normally, the shape of a desired pushback does not change significantly from a sub-optimal solution to the optimal one. Thus, assigning of higher pheromones to a few numbers of the blocks around the sub-optimal pit depth could be enough to conduct the algorithm towards the optimal solution. During the process of pheromone initialization, the pheromone values of the ore blocks, close to the pit shape in initial solution (the highlighted blocks in Fig. 3
                        ), are set to relatively higher values.

In order to construct a mine scheduling solution, a series of feasible pit shapes related to the different mining pushbacks should be created. Each one of these pits consists of a series of block columns and the shape of each pit could be defined by determination of the pit depth on these columns. The pheromone value is the major element in determination of the pit depth on a column. However, considering the heuristic information such as economic value of the blocks could sometimes help the efficiency of the method, either.

At the each depth determination step, ant k utilizes a probabilistic choice rule, named random proportional rule, to make decision for the deepness of the pit in that column. Eq. (1) shows the probability of choosing i as the pit floor by ant k:
                              
                                 (1)
                                 
                                    
                                       
                                          P
                                       
                                       
                                          i
                                       
                                       
                                          k
                                       
                                    
                                    =
                                    
                                       
                                          
                                             
                                                [
                                                
                                                   
                                                      τ
                                                   
                                                   
                                                      i
                                                   
                                                
                                                ]
                                             
                                             
                                                α
                                             
                                          
                                          
                                             
                                                [
                                                
                                                   
                                                      η
                                                   
                                                   
                                                      i
                                                   
                                                
                                                ]
                                             
                                             
                                                β
                                             
                                          
                                       
                                       
                                          
                                             
                                                ∑
                                             
                                             
                                                l
                                                ∈
                                                
                                                
                                                   
                                                      N
                                                   
                                                   
                                                      i
                                                   
                                                   
                                                      k
                                                   
                                                
                                             
                                          
                                          
                                             
                                                [
                                                
                                                   
                                                      τ
                                                   
                                                   
                                                      l
                                                   
                                                
                                                ]
                                             
                                             
                                                α
                                             
                                          
                                          
                                             
                                                [
                                                
                                                   
                                                      η
                                                   
                                                   
                                                      l
                                                   
                                                
                                                ]
                                             
                                             
                                                β
                                             
                                          
                                       
                                    
                                    ,
                                 
                              
                           where τi
                            is the pheromone value of the block i, ηi
                            is the heuristic information which can be a block value or any information that causes algorithm obtain better solution, α and β are two parameters which determine the relative influence of the pheromone trail and the heuristic information, and 
                              
                                 
                                    
                                       N
                                    
                                    
                                       i
                                    
                                    
                                       k
                                    
                                 
                              
                            is the set of feasible selections for the ant k. A numerical example of depth determination process is explained in Table 1
                           .

The set of feasible selections are represented by the upper and lower boundary of the permitted pit depth. The maximum allowed depth defines the deepest possible mining depth on that column whereas the minimum depth is determined according to the shape of the mine in earlier pushback, Fig. 4
                           .

It should be noted that the process of depth finding is done only for the columns containing at least one ore block. The depth of the pit in totally waste columns will be defined based on the neighboring selected depths. Another important concept to consider is that the initial pheromones are assigned only to the ore blocks. Therefore, the selected depth will always coincide on an ore block. Similarly, there will be no pheromone update (evaporation or deposition) for waste blocks.

Normally the consequence of independent depth determination in each column is not always feasible due to the required slope angles. Therefore, a normalization stage based on the selected depths is necessary in order to generate a feasible pit shape. The normalization step is implemented after determination of the depths to ensure that the constructed pit shape covers all the determined depths as well as the outline of the earlier pushbacks. The feasible pit shape shown in Fig. 5
                           b is constructed based on the set of determined depths and the shape of earlier period displayed in Fig. 5a.

Normalization process is implemented as the following steps:
                              
                                 –
                                 Start from the deepest level of the block model and check all the blocks in this level. If the calculated depth of any column is equal to this level, flag that block and all the upper blocks as an In-Pit blocks.

Move to the upper level and check all blocks. Flag any block as In-Pit if at least one of the following conditions is satisfied.
                                       
                                          o
                                          If the calculated depth in any column containing that block is equal to or lower than the current level.

If the minimum depth in any column containing that block is equal to or lower than the current level.

If at least one of the underlying immediate successor blocks, more details in Shishvan and Sattarvand (2012), of that block is flagged as In-Pit.

Repeat the previous step up to the uppermost level.

Finally constructed individual normalized pits for different mining periods are combined together to produce a mine schedule, Fig. 6
                           .

The ACO module in two steps manipulates the initial pheromone value of the blacks. The first step, called pheromone evaporation, consists of a uniform reduction in the value of all the pheromones in order to help the ACO model disregard the bad solutions. In this stage, the pheromone value of all the blocks corresponding to all the production schedules should be decreased by a certain percentage. The next step, pheromone deposition, consists of adding additional pheromone to the blocks which have contributed to the construction of the schedules. It should be noted that the deposition action is applied only to the ore blocks. In cases where the pit depth falls on a waste block, the additional pheromone is assigned to an imaginary block on the ground surface. This action creates an imaginary block to compete against the other ore blocks which have not really contributed in construction of the schedules.

In general, pheromone update process of ACO could be implemented in a variety of ways. The Ant System (AS) is the first and simplest method, whereby all of the constructed schedules are allowed to contribute to the pheromone deposition. In each iteration of the second method, the Elitist Ant System (EAS), the best schedule found up to that iteration (the best-so-far schedule), is also allowed to deposit pheromones. Ranked based Ant System (ASrank) is the third method in which only a few good schedules are able to add pheromones. The other variants are the MMAS and the ACS, which allow only the best-so-far schedule to deposit pheromones and utilize special pheromone limitations in order to prevent the stagnation in local optimums. Analysis revealed that MMAS and ACS variants are also counted as the only variants which could be applied to a large block model in respect to the amount of memory needed, (Sattarvand & Niemann-Delius, 2013).

MMAS is one of the most efficient and detailed studied ACO algorithms, (Stützle & Hoos, 1997, 2000), (Stützle, 1999). The main characteristics of MMAS are:
                              
                                 –
                                 Only the iteration-best ant or the best-so-far ant is allowed to deposit pheromones.

Pheromone trail values are limited to the interval [τ
                                    min,
                                    τ
                                    max].

Pheromone trails are initialized to the upper pheromone trail limit.

Pheromone evaporation rate is very small.

Pheromone trails are reinitialized each time the system approaches stagnation or when no improved tour has been generated for a certain number of consecutive iterations.

Pheromone evaporation rule of MMAS (Eq. (2)) and deposition (Eq. (3)) could be mathematically expressed as follow:
                              
                                 (2)
                                 
                                    
                                       
                                          τ
                                       
                                       
                                          i
                                       
                                    
                                    ←
                                    (
                                    1
                                    -
                                    ρ
                                    )
                                    
                                       
                                          τ
                                       
                                       
                                          i
                                       
                                    
                                 
                              
                           
                           
                              
                                 (3)
                                 
                                    
                                       
                                          τ
                                       
                                       
                                          i
                                       
                                    
                                    ←
                                    
                                       
                                          τ
                                       
                                       
                                          i
                                       
                                    
                                    +
                                    Δ
                                    
                                       
                                          τ
                                       
                                       
                                          i
                                       
                                       
                                          Best
                                       
                                    
                                 
                              
                           where ρ is the evaporation rate 
                              
                                 0
                                 <
                                 ρ
                                 <
                                 1
                              
                            and 
                              
                                 Δ
                                 
                                    
                                       τ
                                    
                                    
                                       i
                                    
                                    
                                       Best
                                    
                                 
                              
                            is the amount of pheromone that the best so far ant deposits on the selected depth i.

The ACS differs from the previous variants from the following points of view: (Dorigo & Gambardella, 1997b)
                              
                                 –
                                 
                                    Pseudorandom proportional action choice rule with the probability of the ants select the depth with the highest [τi
                                    ]
                                       α
                                    [ηi
                                    ]
                                       β
                                    . Whereas it has the (1−
                                    q
                                    0) probability of using the same routine as MMAS for the selection.


                                    Global pheromone update in ACS, after each iteration, only one ant (the best-so-far ant) is allowed to add pheromones. Additionally, unlike MMAS, the evaporation process only applies to the blocks of the best-so-far schedule, not to all the solutions.


                                    Local pheromone update ants use a local pheromone update rule and apply it immediately after making the decision on a block during the schedule construction of ACS.

Geological model of a Copper–Gold deposit presented by the Earthworks NPV-Scheduler, (NPV – Scheduler, 2001), is used as the case study. The model is constructed in Datamine Studio software and include 80×120×50 blocks with block dimension of 10×10×10 (m) parallel to the principle geographical directions and contains just over 350,000 blocks. It also contains the sub-cells to provide an accurate volumetric model of the topography and ore boundaries. The Gold (AU), Copper (CU) and density (DENSITY) of the blocks have been estimated by Kriging based on the borehole samples and their geological interpretations. Metallurgical tests advised to distinguish two distinct types of the sulfide ore according to their floatability and solubility characteristics. The ore blocks were classified into SULF1 (mill-smelt-refine) and SULF2 (leach-SXEW) ore types.

The economic viability of the project and developing a life-of-mine production schedule based on a gold price of $270 per ounce and a copper price of 95 cents per pound were assessed in NPV-Scheduler by Earthworks. Tables 2–4
                        
                        
                         show the assumed mining, processing and general and administrative (G&A) costs. As seen in Table 2, the base mining cost at the reference bench increases by deepening the mine.


                        Table 5
                         illustrates the economic model according to the technical and the financial condition. Geomechanical studies led to distinguishing of five separate domains having different stability behavior. Azimuth and stable slope angles of these regions are shown in Table 6
                         (NPV – Scheduler, 2001).

UPL was determined based on a discount rate of 10% and yearly production of 6million tonnes of ore. Then, ten pushbacks, each containing a minimum of 4million tonnes of mill ore and a minimum access width of 30meters were constructed Table 7
                        . Any remnant areas containing less than 200 blocks (approx. 500,000tonnes) were merged with the adjacent pushback (NPV – Scheduler, 2001).

As a simple scheduling condition, the following constraints were considered for each period of this case study:
                           
                              –
                              
                                 Mining:
                                 
                                    
                                       o
                                       Base rate: 32,200tonnes per day.

Penalties for higher than base mining rate: 20% increase in mining costs for the extra material.

Penalties for lower than base mining rate: 10% increase in overhead and mining cost for the rates less than 25,000tonnes and linearly increment factor from zero to 10% for the values of 25,000–32,200.


                                 Processing:
                                 
                                    
                                       o
                                       Base annual rate: 5,110,000tonnes.

Penalties for higher than base processing rate: extra ore masses have to be considered as waste, because there is no ore dump or stockpile possibility.

Penalties for lower than base processing rate: for the annual rates less than 4million tonnes, a 10% reduction in recovery is considered. This factor diminishes linearly to zero for the rates from 4,000,000 to 5,110,000.


                                 Average grade of Cu:
                                 
                                    
                                       o
                                       Planned grade: 0.2%. For lower grades, recovery changes according to Eq. (4) whereas for higher grades it is fixed to 88%.

In order to analyze the applicability of the ACO in optimizing the long-term planning of the open-pit mines and finding the best ACO variants and parameters, a computer program was prepared in Visual Studio 2010 programming environment and applied on the case study block model using the only applicable variants of the ACO including the MMAS and the ACS.

The final production plan of the case study was imported into the ACO procedure and the NPV of the resulted solution has been compared to the initial solution. Despite the fact that the ability of introducing penalties can be considered as one of the major advantages of the ACO, this test proves that the ACO is even able to improve the economic return of a commercially generated plan.


                              Fig. 7
                               shows that the MMAS can improve the value of the mine schedule. After scattering at the initial iterations, it reaches to its best solution, 134,279,000 ($), subsequently at iteration 1430. In comparison to the initial solution which had a value of 128,690,000 ($), this means about 4.35% improvement in the value of the solution.


                              Fig. 8
                               demonstrates that the ACS improves the value of the mine schedule right from the first iteration, and after 23 iterations it reaches its best solution at 131,995,000 ($). Again, in comparison to the initial solution, this means about 2.58% improvement in the value of the solution.

The experiments showed that there is a high potential of improvement in the solution and using slightly higher values of ρ (0.03 to 0.05) and initial pheromones as 2/ρ to 3/ρ (i.e. 40 to 100) better solutions could be faster reached. Although the ratio of τ
                              max/τ
                              min is suggested by (Stützle, 1999) to be as 
                                 
                                    (
                                    1
                                    -
                                    
                                       
                                          0.05
                                       
                                       
                                          n
                                       
                                    
                                    )
                                    /
                                    (
                                    (
                                    avg
                                    -
                                    1
                                    )
                                    .
                                    
                                       
                                          0.05
                                       
                                       
                                          n
                                       
                                    
                                    )
                                 
                               for solution of Traveling Salesman Problem (TSP) having n cities and avg choices available at each step, however, a fixed value of 5 is used for the τ
                              min in our case study and the pheromone trails are re-initialized when no improvement occurs after 10 iterations (Sattarvand, 2009).

In the basic run of the MMAS, the following values were considered as the key parameters:
                                 
                                    –
                                    Number of the ants (number of schedules, m) is considered to be equal to 50.

Similar to the application of ACO for solution of TSP, the value of the evaporation coefficient, ρ, had been set to 0.03 in this case, too.

The upper and lower perturbation distance is considered as zero. In other words, relatively high pheromone values were assigned only to the blocks that construct the mining pushbacks.

Unequal priority was considered for the pheromone trails and the heuristic information in this case, (α
                                       =1,
                                       β
                                       =0.26).

The efficiency of the MMAS is shown in Fig. 9
                              . It proves that the ACO has strong capability to improve the quality of the initial solution. The graph also reveals that after the 11th iteration, the ACO algorithm starts to improve the value of the initial schedule and after 1470 iterations it reaches to its best solution at 122,460,000 ($). In comparison to the initial solution which had a value of 110,563,000 ($), this means more than 10.76% improvement in the value of solution.

As described earlier, the value of any schedule has two major components-profit and penalty. Conventional algorithms of the open pit planning as that has been utilized for construction of the current initial solution takes only the first component (profit) into account. Therefore, their combination could not be optimized. In contrast, the ACO looks for the solutions having higher total value, even with lower profit. The variation of the profit and penalty values for the MMAS is shown in Fig. 10
                              . It shows that the original combination of profit and penalty values has changed from 193,416,000 ($) and 38,074,000 ($) to 179,146,500 ($) and 8,068,000 ($). In other words, obtained solution has about 3,827,500 ($) less profit but instead about 14,353,000 ($) of lower penalties which lead to 10,525,000 ($) of improvement in their sum.

Here is the most efficient range of the ACS parameters for the case study:
                                 
                                    –
                                    Number of the ants: 5.

The evaporation rate: 0.1.

The initial pheromone value: 0.01.

The local pheromone update factor: 0.15.

The pseudorandom choice probability: 0.7.

The result of using the ACS is shown in Fig. 11
                              . The main noticeable point in the ACS is the drastic reduction in the number of ants which has direct effect on the calculation time of each iteration. Another factor that helps the ACS algorithm to speed up is the fact that the pheromone evaporation and deposition happen only on the blocks of the best so far solution. Consequently, comparing to the other variants of the ACO, the ACS could gain much better results in a specific time of calculation. This might be very useful for the large block models.

The following describes the sensitivity of the MMAS and the ACS to the variations in its parameters.

The number of the ants is one of the major parameters of the ACO. The importance of the ant numbers comes from its impact on the running time of each iteration. In this study, the initial number of 50 was assigned. The effect of using higher or lower number of the ants is shown in Table 8
                           .

Although the best number of ants could not be evaluated definitely according to this table, it is evident that very high numbers which extremely increase the calculation time cannot result in considerable solution improvement. The experiments demonstrated that the initial number of five ants is relatively appropriate and could be altered ±20% without any noticeable distortion on the algorithm.

The result of variation in the initial pheromone values is shown in Table 9
                           . The lower initial pheromone leads the program to search among the solutions far from the initial schedule. Although it generates slightly better solutions, a growth of 50% in time calculation is inevitable. On the other hand, a high initial pheromone value made the algorithm to stagnate in the solutions around the initial answer which had the anticipated consequence of the poor results.

The analysis of different values of the evaporation rate, ρ, resulted in the rates which are compared in Table 10
                           . It reveals that the lower values of ρ, would cause to spend a long time on the poor solutions whereas higher values would prevent the algorithm from adequately discovering far domains from the initial solution.

The quality of the solutions and the calculation times for the different numbers of the perturbation distance are compared in Table 11
                           . The experiments discovered that the main privilege of the MMAS is due to its explorative nature which lets the algorithm to use the higher perturbation distances which may lead to the better solutions. This will take more calculation time and higher scattering iterations prior to the notification of the improvements.

The experiments illustrated that the effects of variations of parameters such as number of ants, initial pheromone value, evaporation rate and length of perturbation distance on the efficiency of the basic the ACS are almost the same as the MMAS. In the following, the effects of other factors are discussed in details.


                           Table 12
                            represents the efficiency of the algorithm with the different combinations of priority factors for the pheromone values and the heuristic information. The proposed procedure takes the economic values of the blocks as heuristic information. The experiments showed that (α
                           =1,
                           β
                           =0.26) are the best choices for the priority factors.

Another major difference of the ACS with the former ACO algorithms is the consideration of a local pheromone update rule in addition to the global pheromone trail updating. The local pheromone update during the schedule construction is applied immediately after determination of the depth for a column. Table 13
                            shows the different combinations of these two parameters during the optimization process.

It is evident that the most appropriate values are 0.15 and 0.1 for the local and the global pheromone updates, respectively.

In fact, by use of the pseudorandom choice probability, the random behavior of the ACO algorithm is lost. In other respects, with probability of q
                           0 the ant chooses the block which has the highest learned knowledge, i.e. [τi
                           ]
                              α
                           [ηi
                           ]
                              β
                           , whereas with probability of (1−
                           q
                           0) it utilizes a probabilistic approach similar to the MMAS. According to Table 14
                           , the most relevant value for the pseudorandom choice probability is 0.7.

The result has been investigated by the means of commercial software. Any direct comparison with the exact method was not possible due to the size of the model. The non-availability of the case studies of other developed metaheuristics was another limitation. Fig. 12
                      visualizes a section view of the final schedule obtained by application of the ACO.

The Ore and Waste masses and the corresponding copper and gold grades of the pushbacks are listed in Table 15
                     . Moreover, the values of the profit, penalty, NPV and lifetime of the phases are shown in Table 16
                     . Comparing to Table 7, the improvements gained by application of the ACO are obvious. It is possible to claim that the most of the planning targets have been satisfied by 90%, at least.

@&#CONCLUSIONS@&#

Different mathematical techniques such as Integer Programming (IP) and Relaxation methods have been tried to solve the mine production planning problem, but all of them are suffering from the fact that they are unable to solve instances of the realistic size and the level of detail in a practically acceptable amount of the time. On the other hand, the metaheuristics have the capability to get near optimal solutions for large cases but in small cases they have not too much robustness. This study has presented a new long-term open pit production planning technique based on the concept of the Ant Colony Optimization (ACO). Its application has been tested on a real size Copper–Gold deposit using two variants of the ACO, including the MMAS and the ACS. The analysis revealed that the ACO can successfully improve the value of the initial mining schedule generated by the traditional algorithms by up to 12% in a reasonable computational time. Although, this improvement was mainly due to the consideration of the penalties in the deviations from planning targets, however, the magnitude of the pure enhancements was also considerable.

The main advantages of the proposed the ACO algorithm are:
                        
                           –
                           The ability to consider any kind of objective functions.

The capability of considering variable slope angles.

The computation time is less sensitive to the size of the model.

The amount of required memory is acceptable.

Moreover, its drawbacks could be considered as having no guarantee to reach the global optimum schedule and being sensitive to the settings of the ACO parameters. In moving forward, a high potential of incorporation of uncertainties related to the metal grades and commodity price fluctuations are seen.

@&#ACKNOWLEDGMENT@&#

Authors appreciate the Sungun Copper Mine for providing the required software packages. The manuscript was significantly improved by the careful reviews of two anonymous reviewers. We thank them for their comments and suggestions.

@&#REFERENCES@&#

