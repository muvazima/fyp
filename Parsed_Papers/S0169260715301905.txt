@&#MAIN-TITLE@&#A remote quantitative Fugl-Meyer assessment framework for stroke patients based on wearable sensor networks

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           A novel remote quantitative Fugl-Meyer assessment (FMA) framework was proposed for stroke patients.


                        
                        
                           
                           Seven training exercises were designed to represent the upper limb related 33 items in FMA scale.


                        
                        
                           
                           Ensemble machine learning and RRelief algorithm were applied to establish the quantitative assessment model.


                        
                        
                           
                           The proposed framework has been implemented in both clinical and home settings.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Wearable sensor networks

Quantitative assessment

Stroke

Upper limb motor function

Fugl-Meyer

Non-clinical settings

@&#ABSTRACT@&#


               
               
                  To extend the use of wearable sensor networks for stroke patients training and assessment in non-clinical settings, this paper proposes a novel remote quantitative Fugl-Meyer assessment (FMA) framework, in which two accelerometer and seven flex sensors were used to monitoring the movement function of upper limb, wrist and fingers. The extreme learning machine based ensemble regression model was established to map the sensor data to clinical FMA scores while the RRelief algorithm was applied to find the optimal features subset. Considering the FMA scale is time-consuming and complicated, seven training exercises were designed to replace the upper limb related 33 items in FMA scale. 24 stroke inpatients participated in the experiments in clinical settings and 5 of them were involved in the experiments in home settings after they left the hospital. Both the experimental results in clinical and home settings showed that the proposed quantitative FMA model can precisely predict the FMA scores based on wearable sensor data, the coefficient of determination can reach as high as 0.917. It also indicated that the proposed framework can provide a potential approach to the remote quantitative rehabilitation training and evaluation.
               
            

@&#INTRODUCTION@&#

A stroke is one of top three causes of mortality and the leading cause of adult disability worldwide [1]. Between 70% and 85% of first-ever strokes are accompanied by hemiplegia [2]. According to epidemiological statistics [3], the annual stroke mortality rate is around 1.6 million, approximately 157 per 100,000 in China. Strokes have put enormous mental pressure and economic burden on our society and families.

Due to the limited resources in rehabilitation centers, home-based rehabilitation is getting more and more attention. According to researchers [4–6], in comparison with inpatient care, home-based rehabilitation shows no difference in the effect on any of the outcomes. Moreover, there are fewer constraints on time and space in the home settings, so patients can practice more frequently, for longer periods of time and according to their own schedule. Unfortunately, patients undergoing rehabilitation at home are not able to assess their own functional state without a physician around. Thus, personalized interventions that will maximize the improvements in subjects’ motor recovery cannot be reached, which has become the bottleneck of home-based rehabilitation. Additionally, the commonly used assessment scales have the following two drawbacks: (1) they are susceptible to subjective factors, the assessment results may different between physicians; (2) they only have several rating levels and are influenced by a ceiling effect [7], making it impossible to exactly detect the improvement in the movement.

Nowadays, wearable sensor network systems (WSNs) technology – particularly inertial sensors that contain accelerometers, gyroscopes, and magnetometers – can assess the type, intensity, duration, frequency, and quality of various mobility-related functional activities [8–15]. Additionally, some researches combined the inertial measure sensors with physiological sensors, like ECG [16], sEMG [17], etc. These sensing systems can introduce new possibilities for continuous, unsupervised, objective monitoring of mobility and functional activities in clinical and non-clinical settings. From the aspects of application scenarios, it can be divided into the following four categories: falling detection [18,19], physical activity monitoring [20–22], movement recognition [23–25] and quantitative assessment [26–31]. Particularly in the area of quantitative assessment for stroke patients, there are many valuable research results have been published. Uswatte et al. [32] have shown that accelerometer data can provide clinically-relevant information about upper extremity motor status via research on 169 stroke survivors. Patel et al. [28,33] proposed a Random Forests based algorithm to monitor rehabilitation outcomes in stroke patients using accelerometers attached to the hand, arm and trunk. The authors selected eight tasks from the Wolf Motor Function Test (WMFT) to estimate the total Functional Ability Scale (FAS) score via analysis of accelerometer data. Our pilot work has shown that automatic Brunnstrom stage classification can be achieved with an accuracy of 92.1% by analyzing the accelerometer data [34]. Zhang et al. [35–37] proposed a novel single-index based assessment approach for quantitative upper limb mobility evaluation, the experiments collected 145 motion samples from 21 stroke patients and 8 healthy participants. The results suggested that the proposed assessment index can not only differentiate the levels of limb function impairment clearly but also strongly correlate with the Brunnstrom stages of recovery.

However, the above researches are all implemented in clinical settings. In other words, to the best of our knowledge, there is no existing system can remotely assess the motor function of stroke patients in home settings. Hence in order to help the stroke patients can do rehabilitation training after they leave the hospital, this paper proposes a novel remote quantitative Fugl-Meyer assessment system based on wearable sensor networks.

The rest of the paper is organized as follows. In Section 2, the full view of the proposed framework and modeling method will be presented. The experimental configurations will be introduced in Section 3. The experimental results and discussions will be described in Section 4. Finally, the work and contributes will be concluded in Section 5.

@&#METHODS@&#

The overview of proposed remote quantitative Fugl-Meyer assessment framework is shown in Fig. 1
                        . The whole system consists of three parts: the patient client, physician client, and web server. At the patient client side, patients will wear the accelerometer and flex sensors first and then finish the individualized rehabilitation prescriptions which were made by the physicians. During their training process, the wearable sensors will record the movement information in real time and wirelessly transmit to the computer through ZigBee protocol and finally upload to the web server database through Internet. In our studies, the microcontroller Unit of wearable sensor is CC2530, which contains an embedded ZigBee module uses 2.4G band. The whole wearable sensor is powered with a Lithium-ion battery, whose capacity is 300mAh. When the battery is full charged, the wearable sensor can continue work about 10h. Besides the storage function, another important function of web server is to analyze the movement data and give an accurate prediction of Fugl-Meyer score (the detailed modeling method will be introduced in Section 2.3). At the physician client side, physicians can view the patients’ training record and Fugl-Meyer score via website and APP (Android or iOS). Meanwhile, physicians can adjust the individualized rehabilitation prescriptions according to the patients’ condition.

As seen in Fig. 1, the core of proposed system is the quantitative Fugl-Meyer assessment (FMA) model, which mapping the sensor data to the clinical FMA scale. Here we mainly consider the upper limb motor function of stroke patients, especially focus on the shoulder, elbow, wrist and fingers. Considering the clinical evaluation with FMA scale is a time-consuming work, in the previous studies we have designed 7 upper limb training exercises based on the short FMA (S-FMA) developed by Hsieh et al. [38] and the guidance of clinical physicians. From the clinical point of view, the 7 training exercises can represent the upper limb related 33 items [39] in FMA scale. A brief description of each training exercise is provided below:
                           
                              1.
                              
                                 Shoulder antexion. Sit down on a chair, horizontal raise the upper limb of the hemiplegic side as high as possible, then hold for 5s and finally move back to the initial position.


                                 Shoulder extension. Sit down on a chair, lateral raise the upper limb of the hemiplegic side as high as possible, then hold for 5s and finally move back to the initial position.


                                 Forearm pronation and supination. Sit down on a chair, raise the upper limb of the hemiplegic side to the horizontal position, then finish the forearm pronation and supination test.


                                 Lumbar touch. Keep the standing posture, move the upper limb of the hemiplegic side back to touch the lumbar, and then move back to the initial position.


                                 Wrist flexion and extension. Put the upper limb of the hemiplegic side on a flat surface, and then finish the wrist flexion and extension exercise.


                                 Lateral pinch. Lateral move the thumb of the hemiplegic side, try to touch the little finger and then move back to the initial position.


                                 Finger touch. Horizontal move the thumb of the hemiplegic side, try to touch the index finger and then move back to the initial position.

Among the above seven training exercises, the first four training exercises (called “exercises 1–4” below) were applied to monitoring the movement function of upper limb while the remaining three training exercises (called “exercises 5–7” below) were used to monitoring the movement function of wrist and fingers. Hence, for exercises 1–4, only the accelerometer sensors were needed; for exercises 5–7, only the flex sensors were needed. The corresponding movies of these training exercises are listed in Additional files 1–7.

Among the above seven training exercises, the first four training exercises (called “exercises 1–4” below) were applied to monitoring the movement function of upper limb while the remaining three training exercises (called “exercises 5–7” below) were used to monitoring the movement function of wrist and fingers. Hence, for exercises 1–4, only the accelerometer sensors were needed; for exercises 5–7, only the flex sensors were needed. The corresponding movies of these training exercises are listed in Additional files 1–7.


                        Fig. 2
                         illustrates the whole procedure of establishing the quantitative Fugl-Meyer assessment model.

Due to the fact that the raw sensor data were often noised for many reasons, such as random noise, packet loss during wireless transmission, etc. hence, it is necessary to preprocess the raw sensor data firstly. Considering the movement signals of stroke patients are low frequency, in this paper we chose the 5 points smooth method to eliminate the noise.

After the preprocessing step we extract features which capture characteristics such as intensity, orientation, and signal complexity from the raw sensor data. There are many methods like time-domain, frequency-domain, and so on [40]. Patel extracted a set of 216 features from 9 body worn sensors, the detailed information can be seen in Ref. [41]. Based on the published researches, in this paper we extracted the following five features: AMP (amplitude of sensor data); MEAN (mean value of sensor data); RMS (root mean square value of sensor data); JERK (root mean square value of the derivative of sensor data); ApEn (approximate entropy of sensor data). The definition of these features can refer to [42,43]. The AMP feature can describe the movement range while the MEAN feature mainly describe the orientation of stroke patients’ upper limb during the training process. The RMS feature represents the dynamic energy while the JERK and ApEn features describe the smoothness and randomness of movement, respectively.

After the meaningful features are all extracted, the next step is to mapping these features to the clinical Fugl-Meyer assessment scale. Considering the fact that each of the designed 7 training exercises can only represents part of the upper limb movement functions described in FMA scale. Hence, in this study, by drawing lessons from ensemble machine learning [44], we established 7 weak regression models for each exercise first and then ensemble them to build a comprehensive quantitative Fugl-Meyer assessment model. There are many linear and nonlinear mapping methods, such as linear regression, neural networks, and support vector machines (SVM), etc. However, the above methods often suffer from some drawbacks, like too many parameters, time-consuming, prone to fall into local minima and so on [45,46]. To avoid these, in this paper, extreme learning machine (ELM) algorithm was adopted to establish the mapping model.

ELM was first proposed by Huang et al. [47], which was applied to the nonlinear mapping of single layer feedforward network (SLFN). The structure of SLFN is shown in Fig. 3
                        . In the following section, we will briefly introduce the principle of ELM.

Assume that there are N samples {x
                        
                           i
                        , y
                           i
                        } (i
                        =1, 2, …, N), where 
                           
                              
                                 
                                    x
                                 
                                 i
                              
                              =
                              
                                 
                                    [
                                    
                                       x
                                       
                                          i
                                          1
                                       
                                    
                                    ,
                                    
                                       x
                                       
                                          i
                                          2
                                       
                                    
                                    ,
                                    …
                                    ,
                                    
                                       x
                                       
                                          i
                                          n
                                       
                                    
                                    ]
                                 
                                 T
                              
                              ∈
                              
                                 ℝ
                                 
                                    n
                                    ×
                                    1
                                 
                              
                           
                        , 
                           
                              
                                 
                                    y
                                 
                                 i
                              
                              =
                              
                                 
                                    [
                                    
                                       y
                                       
                                          i
                                          1
                                       
                                    
                                    ,
                                    
                                       y
                                       
                                          i
                                          2
                                       
                                    
                                    ,
                                    …
                                    ,
                                    
                                       y
                                       
                                          i
                                          m
                                       
                                    
                                    ]
                                 
                                 T
                              
                              ∈
                              
                                 ℝ
                                 
                                    m
                                    ×
                                    1
                                 
                              
                           
                        , m and n are the dimensions of the input and output vector, respectively. Suppose there are L neurons in the hidden layer and let W be L
                        ×
                        n input weight; B be L
                        ×1 bias of hidden layer neurons and β be m
                        ×
                        L output weight.

The output (Y) of the ELM with L hidden neurons has the following form
                           
                              (1)
                              
                                 
                                    
                                       y
                                       k
                                       i
                                    
                                    =
                                    
                                       ∑
                                       
                                          j
                                          =
                                          1
                                       
                                       L
                                    
                                    
                                       
                                          β
                                          
                                             k
                                             j
                                          
                                       
                                       
                                          g
                                          j
                                       
                                       (
                                       
                                          W
                                       
                                       ,
                                       
                                          B
                                       
                                       ,
                                       
                                          X
                                       
                                       )
                                       ,
                                        
                                       k
                                       =
                                       1,2
                                       ,
                                       …
                                       ,
                                       m
                                    
                                 
                              
                           
                        where g
                        
                           j
                        (•) is the activation function.

Eq. (1) could be written in matrix form as
                           
                              (2)
                              
                                 
                                    
                                       H
                                    
                                    
                                       β
                                    
                                    =
                                    
                                       Y
                                    
                                 
                              
                           
                        where 
                           
                              
                                 Y
                              
                              =
                              
                                 
                                    [
                                    
                                       
                                          y
                                       
                                       1
                                    
                                    ,
                                    …
                                    ,
                                    
                                       
                                          y
                                       
                                       N
                                    
                                    ]
                                 
                                 T
                              
                              ∈
                              
                                 ℝ
                                 
                                    N
                                    ×
                                    m
                                 
                              
                           
                        , 
                           
                              
                                 β
                              
                              =
                              
                                 
                                    [
                                    
                                       
                                          β
                                       
                                       1
                                    
                                    ,
                                    …
                                    ,
                                    
                                       
                                          β
                                       
                                       L
                                    
                                    ]
                                 
                                 T
                              
                              ∈
                              
                                 ℝ
                                 
                                    L
                                    ×
                                    m
                                 
                              
                           
                         and
                           
                              (3)
                              
                                 
                                    
                                       H
                                    
                                    (
                                    
                                       
                                          w
                                       
                                       1
                                    
                                    ,
                                    …
                                    ,
                                    
                                       
                                          w
                                       
                                       L
                                    
                                    ,
                                    
                                       b
                                       1
                                    
                                    ,
                                    …
                                    ,
                                    
                                       b
                                       L
                                    
                                    ,
                                    
                                       
                                          x
                                       
                                       1
                                    
                                    ,
                                    …
                                    ,
                                    
                                       
                                          x
                                       
                                       N
                                    
                                    )
                                    =
                                    
                                       
                                          
                                             
                                                
                                                   
                                                      g
                                                      (
                                                      
                                                         
                                                            w
                                                         
                                                         1
                                                      
                                                      
                                                         
                                                            x
                                                         
                                                         1
                                                      
                                                      +
                                                      
                                                         b
                                                         1
                                                      
                                                      )
                                                   
                                                
                                                
                                                   ⋯
                                                
                                                
                                                   
                                                      g
                                                      (
                                                      
                                                         w
                                                         L
                                                      
                                                      
                                                         
                                                            x
                                                         
                                                         1
                                                      
                                                      +
                                                      
                                                         b
                                                         1
                                                      
                                                      )
                                                   
                                                
                                             
                                             
                                                
                                                   ⋮
                                                
                                                
                                                   ⋱
                                                
                                                
                                                   ⋮
                                                
                                             
                                             
                                                
                                                   
                                                      g
                                                      (
                                                      
                                                         w
                                                         1
                                                      
                                                      
                                                         
                                                            x
                                                         
                                                         N
                                                      
                                                      +
                                                      
                                                         b
                                                         1
                                                      
                                                      )
                                                   
                                                
                                                
                                                   ⋯
                                                
                                                
                                                   
                                                      g
                                                      (
                                                      
                                                         w
                                                         L
                                                      
                                                      
                                                         
                                                            x
                                                         
                                                         N
                                                      
                                                      +
                                                      
                                                         b
                                                         L
                                                      
                                                      )
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           
                        where 
                           
                              
                                 
                                    w
                                 
                                 i
                              
                              =
                              
                                 
                                    [
                                    
                                       w
                                       
                                          i
                                          1
                                       
                                    
                                    ,
                                    
                                       w
                                       
                                          i
                                          2
                                       
                                    
                                    ,
                                    …
                                    ,
                                    
                                       w
                                       
                                          i
                                          n
                                       
                                    
                                    ]
                                 
                                 T
                              
                           
                         is the weight vector connecting the ith hidden neuron and the input neurons, β
                        
                           i
                        
                        =[β
                        
                           i1, β
                        
                           i2, …, β
                        
                           im
                        ]
                           T
                         is the weight vector connecting the ith hidden neuron and the output neurons, and b
                        
                           i
                         is the threshold of the ith hidden neuron.

To train an SLFN is simply the equivalent to finding a least-squares solution 
                           
                              
                                 β
                              
                              ˆ
                           
                         of Eq. (2):
                           
                              (4)
                              
                                 
                                    |
                                    |
                                    
                                       H
                                    
                                    (
                                    
                                       
                                          w
                                       
                                       1
                                    
                                    ,
                                    …
                                    ,
                                    
                                       
                                          w
                                       
                                       L
                                    
                                    ,
                                    
                                       b
                                       1
                                    
                                    ,
                                    …
                                    ,
                                    
                                       b
                                       L
                                    
                                    )
                                    
                                       
                                          β
                                       
                                       ˆ
                                    
                                    −
                                    
                                       Y
                                    
                                    |
                                    |
                                    =
                                    
                                       
                                          min
                                       
                                       
                                          β
                                       
                                    
                                    |
                                    |
                                    
                                       H
                                    
                                    (
                                    
                                       
                                          w
                                       
                                       1
                                    
                                    ,
                                    …
                                    ,
                                    
                                       
                                          w
                                       
                                       L
                                    
                                    ,
                                    
                                       b
                                       1
                                    
                                    ,
                                    …
                                    ,
                                    
                                       b
                                       L
                                    
                                    )
                                    
                                       β
                                    
                                    −
                                    
                                       Y
                                    
                                    |
                                    |
                                 
                              
                           
                        
                     

According to optimization theory, the smallest norm the least-squares solution of the linear system is:
                           
                              (5)
                              
                                 
                                    
                                       
                                          β
                                       
                                       ˆ
                                    
                                    =
                                    
                                       
                                          H
                                       
                                       +
                                    
                                    
                                       Y
                                    
                                 
                              
                           
                        where H
                        + is the pseudo inverse of H.

In summary, the algorithm of ELM consists of three steps, listed in Table 1
                        .

Compared with traditional backpropagation neural networks, ELM does not have to iterative adjusting the connecting weights and bias, it maps the training process to a problem of solving a group of linear equations. Besides, in Ref. [45], Huang et al. have proved that given any small positive value ɛ
                        >0 and activation function g:R
                        →
                        R which is infinitely differentiable in any interval, there exists 
                           
                              
                                 N
                                 ˜
                              
                              ≤
                              N
                           
                         such that for N arbitrary distinct samples, for any w
                        
                           i
                         and b
                        
                           i
                         randomly chosen, then with probability one, ||Hβ
                        −
                        Y||<
                        ɛ.

As mentioned above, in this paper we employed two types of wearable sensors: accelerometer and flex sensors. The accelerometers were used to monitoring the movement function of upper limb while the flex sensors were used to monitoring the movement function of fingers and wrist. The accelerometer sensor chip is ADXL345, whose resolution increases with g range, up to 13-bit resolution at ±16g (maintaining 3.9mg/LSB scale factor in all g ranges). These characteristics enable measurement of inclination changes less than 1.0°, which is sensitive enough to capture the movement features. The resistance of flex sensor can change from 10KΩ to 110KΩ while it is flexed from flat to 180° state. The sampling frequency of all sensors was set to 20Hz mainly based on the following two considerations: (1) each task needs 10–15s to finish every time, in other words, the frequency of these tasks is less than 1Hz. Hence, 20Hz is enough to capture the characteristics of these movements; (2) the lower sampling rate can reduce the power consumption of sensors so that the wearable devices can continue work longer (about 10 days, 1h per day), which is easy to use for those stroke patients because it does not require frequent charging.

The placements of accelerometer and flex sensors were illustrated in Fig. 4
                        . From Fig. 4(a), it is clearly to see that the accelerometer sensors were placed at the geometric center of upper limbs. The distance between the accelerometer sensor on the forearm and dorsal stripes was 10cm while the distance between the accelerometer sensor on the upper arm and epicondyus lateralis humeri was 8cm. As shown in Fig. 4(b), there are in total 7 flex sensors were employed to monitoring the movement function of five fingers and both the flexion and extension movement function of wrist. All the flex sensors were wrapped into a glove so that they were easily for the patients to wear.

All the following experiments were approved by the Ethics Committee of Jiaxing 2nd Hospital, Jiaxing, China. The whole experiments consist of two parts: clinical and home settings, respectively. The purpose of experiments in clinical settings was to establish the quantitative Fugl-Meyer assessment model while the aim of experiments in home settings was to validate the potential and validity of proposed remote quantitative Fugl-Meyer assessment framework.

24 stroke patients were recruited to participate in the experiments in clinical settings. The general information of patients is listed in Table 2
                        , from which we can find that there are 16 males and 8 females, the average age was 69.4±12.8 years. All the patients have no severe cognitive and communication problem.

All the patients were required to finish the above mentioned 7 exercises without extra assistance so that their truly movement function can be reflected. To avoid the practice effect, before the data collection, participants were asked to practice as few as possible times with the guidance of physicians to familiar with the whole experiment process (for example, where the initial position is, and how long for one posture to hold, etc.). During the experiments, they were requested to repeat each exercise for 10 times. After the data collection, each patient was evaluated by two experienced physicians by using FMA scale, and then the average score was calculated and set as the final score for each participant.

As shown in Fig. 1, for the experiments in home settings, it is required that the participants have a desktop or laptop computer in their families and the connection to the Internet is right configured. Among the 24 participants, only 7 patients satisfy the above requirements. Additionally, due to the lack of awareness of the importance of rehabilitation, another 2 patients did not agree to the continued rehabilitation in home settings. Hence, only 5 of the 24 participants were involved in the experiments in the home settings. They were told to finish the 7 exercises at home once a week. Considering the influence of sensor placement, in this study, besides the wearable sensors, we also provide one camera for each patient and install remote video conferencing software on the desktop or laptop computer in their families while they left the hospital. Every week, the participants wear the sensors under the guidance of physician and technique support engineers through remote video conferencing software. All the sensor data were uploaded to the web server database via Internet, and the predictive Fugl-Meyer score was computed by web server programs. Meanwhile, they were required to go to the hospital every other month to receive the clinical FMA by physicians. To avoid the subjective factors between different clinicians, all the assessment was performed by two assigned experienced clinicians, and then the average score was calculated and set as the final score for each participant. The whole experiments in home settings lasted for 3 months.

The data sampling and management were implemented by using the Remote Rehabilitation Training and Assessment Software (RRTAS), which was developed by our group. The run environment of RRTAS is Windows 32 bit platform and .Net Framework 3.5 above.

@&#RESULTS AND DISCUSSION@&#

Following the steps described in Fig. 2, we established a quantitative Fugl-Meyer assessment model which maps the wearable sensor data to FMA scores. First of all, the raw sensor data was denoised with 5 point smooth method. Due to the space limitations, here we only present the comparison of raw and denoised sensor data of shoulder antexion and finger touch exercises in Fig. 5
                        . It can be seen that after smooth preprocessing, the denoised signals were smoother than raw signals, and some outliers caused by packet loss during wireless transmission were eliminated.

As mentioned in Section 2.2, five types of feature were extracted (AMP, MEAN, RMS, JERK, and ApEn) for each exercise. Considering each accelerometer sensor has 3 axis (x, y, and z) signals, hence there are in total 30 features can be extracted from two accelerometer sensors. In the same way, there are in total 35 features can be extracted from 7 flex sensors. Therefore, the structure of ELM model for exercises 1–4 and exercises 5–7 is 30-N-1 and 35-N-1, respectively. N is the number of neurons in hidden layer of SLFN. In this paper, N is set to 50 for all the 7 ELM weak regression models. Additionally, the structure of final comprehensive ELM model is 7-M-1, and here M is set to 10. As described above, there are 240 data samples for each exercise, among which 200 were selected as training set and the remaining 40 samples were taken as testing set. The generalized performance of 7 weak models and ensemble comprehensive model are shown in Fig. 6
                        . It is obviously to see that the all the coefficients of determination of 7 weak regression models and ensemble comprehensive model were smaller than 0.8 except exercise 4 (Lumbar touch), which means that the errors between the predictive FMA scores and clinical FMA scores given by physicians were too high to ignore. Actually, the reason behind this is that all the 7 weak regression models were built using all the features, which is a redundant and blind way because not all the features are equally important for each exercise, only some of them keep the main information and characteristics.

The above results have shown that, in order to improve the generalized performance of weak regression models, feature selection is an indispensible part. In this study, RRelief algorithm [48,49] was applied to find the optimal features for each exercise. The feature selection results are listed in Table 3
                        , in which X1, Y1 and Z1 represent the accelerometer sensor signals from upper arm; X2, Y2 and Z2 represent the accelerometer sensor signals from forearm; S1–S5 represent the flex sensor signals from thumb to little finger; S6–S7 represent the flex sensor signals from wrist flexion and extension.

It is obviously to see that after feature selection, the number of selected features have reduced a lot. More importantly, the selected features kept the main information and characteristic for each exercise. For example, (1) the features from X axis of two accelerometer sensors were often selected in exercises 1, 2 and 4, which was consistent with the kinematics of these exercises; similarly, the features from Y and Z axis of two accelerometer sensors were often selected in exercises 3 and 4; (2) for exercise 5, only the features from two flex sensors placed on the wrist were selected because during this exercise, the signals of other five flex sensors placed on the fingers were not changed; as well, the features from flex sensor placed on the thumb were selected for both exercises 6 and 7.

Based on the selected features, we again established the weak regression model for each exercise and then built a comprehensive quantitative Fugl-Meyer assessment model. The generalized performance results were shown in Fig. 7
                        . Compared with Fig. 6, it can be seen that the errors between clinical and predictive FMA scores have reduced a lot; the coefficient of determination of comprehensive model can reach 0.918.

As mentioned above, the final goal of this study is to implement the proposed framework in home settings. According to the experiment described in Section 3.2, the involved five stroke patients finished the seven exercises at home once a week and go to the hospital once a month. The FMA scores predicted by our framework and physicians were illustrated in Fig. 8
                        , in which P1–P5 denotes the five stroke patients, respectively. The solid points at the 4th, 8th and 12th week represent the FMA scores assessed by physicians. From Fig. 8 it is clearly to see that the errors between predictive and physicians’ FMA scores were small enough so that can be ignored. Actually, the one-way analysis of variance (ANOVA) results of 5 participants (p
                        1
                        =0.613; p
                        2
                        =0.127; p
                        3
                        =0.482; p
                        4
                        =0.084; p
                        5
                        =0.581, both large than 0.05) showed no statistical difference between the predictive results of quantitative assessment model and clinical FMA scores.

More importantly, it also indicated that instead of the traditional point evaluation, by using the proposed framework, the detailed training and improvements can be recorded which can help the physicians to make an individualized training prescription.

@&#DISCUSSION@&#

To validate the generalized performance of ELM algorithm, in this study SVM algorithm was also applied to establish the quantitative assessment models. The Gaussian function was chosen as kernel function, and the parameters were optimized through grid search. Each model was established for 50 times and the average comparison results were listed in Table 4
                        . It is clearly to see that after feature selection, the generalized performances are improved a lot. The student t-test results showed that there is no statistically difference between ELM and SVM models (p
                        =0.724>0.05). Due to the fact that during the SVM training process, it is needed to solve quadratic programming problems, hence the training time of SVM is much longer than ELM. However, once the training process has finished, there is no obvious difference between the SVM and ELM for the prediction process.

The proposed framework has some limitations need to be concerned, among which ceiling effect is an important one. From Fig. 8, ceiling effect can be seen in both the clinical physician's assessment and our proposed framework. For example, the FMA scores of P2 and P4 at the 8th and 12th week were almost same, which is difficult for physicians to precisely evaluate the movement function of patients and make individual prescriptions. Hence, it is necessary to develop some new features and evaluation indexes to describe the detail information of sensor data. To avoid the ceiling effect, many researchers have proposed some alternative methods. Gladstone et al. [39] stated that expanding the grading system of each item may have actually been beneficial in maximizing the ability of the scale to detect change and could make the scale more sensitive to change for those patients at the top end. In clinimetrics, the optimal number of categories recommended is usually 5–7. Recently, our study group has designed some new evaluation indexes based on nonlinear analysis methods like multi-scale entropy; maximum Lyapunov index, etc. and the results indicate a potential way to describe the changes which cannot be shown by clinical assessment scale.

Another thing must be considered is that the placement of sensors will influence the generalized performance of proposed quantitative FMA model. Therefore in the future, we will go deep into this problem to design a method which can automatic check whether the placement of sensors are correct. For example, before the experiment starts, we can first collect a short time period (for example, 3–5s) accelerometer signals and secondly determine whether the sensors are placed at the right place and stay at the right position by using pattern recognition methods like template match, artificial neural networks, support vector machine and so on. There are many published researches in this area, the detailed information can refer to Refs. [50,51].

Last but not the least, besides the accelerometer and flex sensor, other types of sensors like gyroscope, magnetometer, and pressure, etc. should be included to monitoring the movement function, lifestyle of stroke patients. Although many researchers have been put efforts into these areas, there are still many problems need to be solved especially when these technologies are applied in home settings.

@&#CONCLUSIONS@&#

To extend the use of wearable sensor networks for stroke rehabilitation in home settings, we proposed a novel remote quantitative Fugl-Meyer assessment framework, in which two accelerometer and seven flex sensors were used to capture the movements of upper limb, wrist and fingers. Extreme learning machine based ensemble machine learning method was used to map the sensor data to clinical FMA scores. Meanwhile, RRelief algorithm was applied to select the optimal features subset. The experimental results in both clinical and home settings showed that the proposed quantitative FMA model can precisely predict the FMA scores according to the wearable sensor data. It also indicated that the proposed framework can be implemented in home settings, which provide a potential approach to the remote rehabilitation training and evaluation. In the future, we will look deep into the application of multi-sensor fusion and human computer interaction in the area of rehabilitation.

The authors declare that they have no proprietary, financial, professional, or other personal competing interests of any nature or kind.

@&#ACKNOWLEDGEMENTS@&#

The authors thank Doctor Xudong Gu and Jianming Fu who come from the Rehabilitation Medical Center of Jiaxing 2nd Hospital, for their valuable suggestion and guidance during the clinical experiment design and implementation processes.

Supplementary data associated with this article can be found, in the online version, at http://dx.doi.org/10.1016/j.cmpb.2016.02.012.

The following are the supplementary data to this article:
                        
                           Additional file 1
                           
                              Shoulder antexion.
                           
                           
                        
                     
                     
                        
                           Additional file 2
                           
                              Shoulder extension.
                           
                           
                        
                     
                     
                        
                           Additional file 3
                           
                              Forearm pronation and supination.
                           
                           
                        
                     
                     
                        
                           Additional file 4
                           
                              Lumbar touch.
                           
                           
                        
                     
                     
                        
                           Additional file 5
                           
                              Wrist flexion and extension.
                           
                           
                        
                     
                     
                        
                           Additional file 6
                           
                              Lateral pinch.
                           
                           
                        
                     
                     
                        
                           Additional file 7
                           
                              Finger touch.
                           
                           
                        
                     
                     
                        
                           
                        
                     
                  

@&#REFERENCES@&#

