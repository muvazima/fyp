@&#MAIN-TITLE@&#The bipartite quadratic assignment problem and extensions

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           We introduced a new model that subsumes the well-known quadratic assignment problem.


                        
                        
                           
                           We developed meta-heuristic algorithms using three neighborhoods and their unions.


                        
                        
                           
                           Experimental analysis disclosed the superiority of hybrid algorithms.


                        
                        
                           
                           Complexity results and polynomially solvable special cases are also established.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Quadratic assignment

Bilinear programs

Complexity

Metaheuristics

Local search

@&#ABSTRACT@&#


               
               
                  We introduce a new binary quadratic program that subsumes the well known quadratic assignment problem. This problem is shown to be NP-hard when some associated parameters are restricted to simple values but solvable in polynomial time when some other parameter values are restricted. Three different neighborhood structures are introduced. A best solution in all these neighborhoods can be identified in polynomial time even though two of these neighborhoods are of exponential size. Different local search algorithms and their enhancements using tabu search are developed using these neighborhoods. Experimental analysis show that two hybrid algorithms obtained by combining these neighborhoods in specific ways yield results that are superior to the algorithms that use these neighborhoods separately. Extensive computational results and statistical analysis of the resulting data are presented.
               
            

@&#INTRODUCTION@&#

The quadratic assignment problem (QAP) (Burkard, Dell’Amico, & Martello, 2009; Cela, 1998; Koopmans & Beckmann, 1957; Lawler, 1963; Pardalos, Rendl, & Wolkowicz, 1994; Pitsoulis & Pardalos, 2008) is well studied in the combinatorial optimization literature. The original application that initiated the study of this versatile model comes from the facility location literature. Since then the problem has been used to model optimization problems in diverse application areas. An integer programming formulation of QAP can be given as follows (Lawler, 1963):

                        
                           (1)
                           
                              
                                 
                                    
                                       Maximize
                                    
                                    
                                       
                                          
                                             ∑
                                             
                                                i
                                                =
                                                1
                                             
                                             n
                                          
                                          
                                             ∑
                                             
                                                j
                                                =
                                                1
                                             
                                             n
                                          
                                          
                                             ∑
                                             
                                                k
                                                =
                                                1
                                             
                                             n
                                          
                                          
                                             ∑
                                             
                                                l
                                                =
                                                1
                                             
                                             n
                                          
                                          
                                             q
                                             
                                                i
                                                j
                                                k
                                                l
                                             
                                             ′
                                          
                                          
                                             x
                                             
                                                i
                                                j
                                             
                                          
                                          
                                             x
                                             
                                                k
                                                l
                                             
                                          
                                          +
                                          
                                             ∑
                                             
                                                i
                                                =
                                                1
                                             
                                             n
                                          
                                          
                                             ∑
                                             
                                                j
                                                =
                                                1
                                             
                                             n
                                          
                                          
                                             c
                                             
                                                i
                                                j
                                             
                                             ′
                                          
                                          
                                             x
                                             
                                                i
                                                j
                                             
                                          
                                       
                                    
                                 
                              
                           
                        
                     
                     
                        
                           (2)
                           
                              
                                 
                                    
                                    
                                    
                                       
                                          Subject
                                          
                                          to
                                       
                                    
                                 
                                 
                                    
                                    
                                    
                                       
                                          
                                             ∑
                                             
                                                i
                                                =
                                                1
                                             
                                             n
                                          
                                          
                                             x
                                             
                                                i
                                                j
                                             
                                          
                                          =
                                          1
                                          
                                          for
                                          
                                          j
                                          =
                                          1
                                          ,
                                          2
                                          ,
                                          …
                                          ,
                                          n
                                       
                                    
                                 
                              
                           
                        
                     
                     
                        
                           (3)
                           
                              
                                 
                                    
                                    
                                       
                                          
                                             ∑
                                             
                                                j
                                                =
                                                1
                                             
                                             n
                                          
                                          
                                             x
                                             
                                                i
                                                j
                                             
                                          
                                          =
                                          1
                                          
                                          for
                                          
                                          i
                                          =
                                          1
                                          ,
                                          2
                                          ,
                                          …
                                          ,
                                          n
                                       
                                    
                                 
                              
                           
                        
                     
                     
                        
                           (4)
                           
                              
                                 
                                    
                                    
                                       
                                          
                                             x
                                             
                                                i
                                                j
                                             
                                          
                                          ∈
                                          
                                             {
                                             0
                                             ,
                                             1
                                             }
                                          
                                          
                                          for
                                          
                                          i
                                          ,
                                          j
                                          =
                                          1
                                          ,
                                          2
                                          ,
                                          …
                                          ,
                                          n
                                          ,
                                       
                                    
                                 
                              
                           
                        
                     where 
                        
                           q
                           
                              i
                              j
                              k
                              l
                           
                           ′
                        
                      and 
                        
                           c
                           
                              i
                              j
                           
                           ′
                        
                      are real numbers. QAP has been studied extensively in the literature and formulated in various alternative formats. The most popular variation of QAP is the Koopmans–Beckman case (Cela, 1998) where the quadratic cost matrix 
                        
                           
                              Q
                              ′
                           
                           =
                           
                              
                                 (
                                 
                                    q
                                    
                                       i
                                       j
                                       k
                                       l
                                    
                                    ′
                                 
                                 )
                              
                              
                                 
                                    n
                                    2
                                 
                                 ×
                                 
                                    n
                                    2
                                 
                              
                           
                        
                      is defined using two n × n matrices 
                        
                           A
                           =
                           (
                           
                              a
                              
                                 i
                                 j
                              
                           
                           )
                        
                      and 
                        
                           B
                           =
                           (
                           
                              b
                              
                                 k
                                 l
                              
                           
                           )
                        
                      such that 
                        
                           
                              q
                              
                                 i
                                 j
                                 k
                                 l
                              
                              ′
                           
                           =
                           
                              a
                              
                                 i
                                 j
                              
                           
                           
                              b
                              
                                 k
                                 l
                              
                           
                        
                     . In the definition of QAP, if we omit constraints (3) we get the quadratic semi-assignment problem (QSAP) (Domschke, Forst, & Voß, 1992; Drwal, 2014; Greenberg, 1969; Malucelli, 1996; Pitsoulis, 2009; Saito, Fujie, Matsui, & Matuura, 2009) which itself has numerous applications.

Let us now discuss a new model, closely related to QAP, called the bipartite quadratic assignment problem (BQAP). The problem can be stated mathematically as follows:

                        
                           (5)
                           
                              
                                 
                                    
                                    
                                    
                                       
                                          Maximize
                                          
                                             ∑
                                             
                                                i
                                                =
                                                1
                                             
                                             m
                                          
                                          
                                             ∑
                                             
                                                j
                                                =
                                                1
                                             
                                             m
                                          
                                          
                                             ∑
                                             
                                                k
                                                =
                                                1
                                             
                                             n
                                          
                                          
                                             ∑
                                             
                                                l
                                                =
                                                1
                                             
                                             n
                                          
                                          
                                             q
                                             
                                                i
                                                j
                                                k
                                                l
                                             
                                          
                                          
                                             x
                                             
                                                i
                                                j
                                             
                                          
                                          
                                             y
                                             
                                                k
                                                l
                                             
                                          
                                          +
                                          
                                             ∑
                                             
                                                i
                                                =
                                                1
                                             
                                             m
                                          
                                          
                                             ∑
                                             
                                                j
                                                =
                                                1
                                             
                                             m
                                          
                                          
                                             c
                                             
                                                i
                                                j
                                             
                                          
                                          
                                             x
                                             
                                                i
                                                j
                                             
                                          
                                       
                                    
                                 
                                 
                                    
                                    
                                    
                                       
                                          
                                          +
                                          
                                          
                                             ∑
                                             
                                                k
                                                =
                                                1
                                             
                                             n
                                          
                                          
                                             ∑
                                             
                                                l
                                                =
                                                1
                                             
                                             n
                                          
                                          
                                             d
                                             
                                                k
                                                l
                                             
                                          
                                          
                                             y
                                             
                                                k
                                                l
                                             
                                          
                                          +
                                          
                                             c
                                             0
                                          
                                       
                                    
                                 
                              
                           
                        
                     
                     
                        
                           (6)
                           
                              
                                 
                                    
                                    
                                    
                                       
                                          Subject
                                          
                                          to
                                       
                                    
                                 
                                 
                                    
                                    
                                    
                                       
                                          
                                             ∑
                                             
                                                i
                                                =
                                                1
                                             
                                             m
                                          
                                          
                                             x
                                             
                                                i
                                                j
                                             
                                          
                                          =
                                          1
                                          
                                          for
                                          
                                          j
                                          =
                                          1
                                          ,
                                          2
                                          ,
                                          …
                                          ,
                                          m
                                       
                                    
                                 
                              
                           
                        
                     
                     
                        
                           (7)
                           
                              
                                 
                                    
                                    
                                       
                                          
                                             ∑
                                             
                                                l
                                                =
                                                1
                                             
                                             n
                                          
                                          
                                             y
                                             
                                                k
                                                l
                                             
                                          
                                          =
                                          1
                                          
                                          for
                                          
                                          k
                                          =
                                          1
                                          ,
                                          2
                                          ,
                                          …
                                          ,
                                          n
                                       
                                    
                                 
                              
                           
                        
                     
                     
                        
                           (8)
                           
                              
                                 
                                    
                                    
                                       
                                          
                                             x
                                             
                                                i
                                                j
                                             
                                          
                                          ∈
                                          
                                             {
                                             0
                                             ,
                                             1
                                             }
                                          
                                          
                                          for
                                          
                                          i
                                          ,
                                          j
                                          =
                                          1
                                          ,
                                          2
                                          ,
                                          …
                                          ,
                                          m
                                       
                                    
                                 
                              
                           
                        
                     
                     
                        
                           (9)
                           
                              
                                 
                                    
                                    
                                       
                                          
                                             y
                                             
                                                k
                                                l
                                             
                                          
                                          ∈
                                          
                                             {
                                             0
                                             ,
                                             1
                                             }
                                          
                                          
                                          for
                                          
                                          k
                                          ,
                                          l
                                          =
                                          1
                                          ,
                                          2
                                          ,
                                          …
                                          ,
                                          n
                                          ,
                                       
                                    
                                 
                              
                           
                        
                     where qijkl, cij, dkl
                      and c
                     0 are real numbers.

When 
                        
                           m
                           =
                           n
                        
                      and 
                        
                           
                              x
                              
                                 i
                                 j
                              
                           
                           =
                           
                              y
                              
                                 i
                                 j
                              
                           
                        
                      is forced for all 
                        
                           i
                           =
                           1
                           ,
                           2
                           ,
                           …
                           ,
                           n
                           ,
                           j
                           =
                           1
                           ,
                           2
                           ,
                           …
                           ,
                           m
                           ,
                        
                      BQAP reduces to the QAP. In fact, 
                        
                           
                              x
                              
                                 i
                                 j
                              
                           
                           =
                           
                              y
                              
                                 i
                                 j
                              
                           
                        
                      can be forced by modifying the cost matrices without explicitly introducing these constraints. Choose 
                        
                           m
                           =
                           n
                        
                      and define,

                        
                           (10)
                           
                              
                                 
                                    q
                                    
                                       i
                                       j
                                       k
                                       l
                                    
                                 
                                 =
                                 
                                    {
                                    
                                       
                                          
                                             
                                                
                                                   q
                                                   
                                                      i
                                                      j
                                                      k
                                                      l
                                                   
                                                   ′
                                                
                                                
                                                
                                                i
                                                f
                                                
                                                i
                                                j
                                                ≠
                                                k
                                                l
                                             
                                          
                                       
                                       
                                          
                                             
                                                
                                                   q
                                                   
                                                      i
                                                      j
                                                      k
                                                      l
                                                   
                                                   ′
                                                
                                                +
                                                2
                                                M
                                                
                                                
                                                i
                                                f
                                                
                                                i
                                                j
                                                =
                                                k
                                                l
                                             
                                          
                                       
                                    
                                 
                              
                           
                        
                     Also, set 
                        
                           
                              c
                              
                                 i
                                 j
                              
                           
                           =
                           
                              d
                              
                                 i
                                 j
                              
                           
                           =
                           −
                           M
                           +
                           
                              1
                              2
                           
                           
                              c
                              
                                 i
                                 j
                              
                              ′
                           
                        
                      and 
                        
                           
                              c
                              0
                           
                           =
                           0
                        
                     . Then it can be verified that in an optimal solution to the resulting BQAP, 
                        
                           
                              x
                              
                                 i
                                 j
                              
                           
                           =
                           
                              y
                              
                                 i
                                 j
                              
                           
                        
                      holds for 
                        
                           i
                           ,
                           j
                           =
                           1
                           ,
                           2
                           ,
                           …
                           ,
                           n
                           (
                           =
                           m
                           )
                        
                      and this solution is optimal for the QAP. This follows by taking the constraints 
                        
                           
                              x
                              
                                 i
                                 j
                              
                           
                           =
                           
                              y
                              
                                 i
                                 j
                              
                           
                        
                      for all ij into the objective function as a penalty term 
                        
                           −
                           M
                           
                              
                                 (
                                 
                                    x
                                    
                                       i
                                       j
                                    
                                 
                                 −
                                 
                                    y
                                    
                                       i
                                       j
                                    
                                 
                                 )
                              
                              2
                           
                        
                      and simplifying it using 
                        
                           
                              x
                              
                                 i
                                 j
                              
                              2
                           
                           =
                           
                              x
                              
                                 i
                                 j
                              
                           
                        
                      and 
                        
                           
                              y
                              
                                 i
                                 j
                              
                              2
                           
                           =
                           
                              y
                              
                                 i
                                 j
                              
                           
                        
                     . Thus BQAP is a proper generalization of QAP.

BQAP can also be viewed as a special case of QSAP. Thus, algorithms developed for the QSAP can be used to solve BQAP. However, exploiting the special structure of BQAP, efficient algorithms can be obtained and development of such algorithms is the primary focus of this paper.

Before discussing motivating applications of the BQAP model, to simplify the notations and to allow additional modeling flexibility, we consider a slightly more general version of BQAP which is called the binary quadratic programming problem with partitioned variables (BQP-PV). Let 
                        
                           I
                           =
                           {
                           1
                           ,
                           2
                           ,
                           …
                           ,
                           m
                           }
                        
                      and 
                        
                           
                              S
                              1
                           
                           ,
                           
                              S
                              2
                           
                           ,
                           …
                           ,
                           
                              S
                              p
                           
                        
                      be a partition of I. Similarly, let 
                        
                           J
                           =
                           {
                           1
                           ,
                           2
                           ,
                           …
                           ,
                           n
                           }
                        
                      and 
                        
                           
                              T
                              1
                           
                           ,
                           
                              T
                              2
                           
                           ,
                           …
                           ,
                           
                              T
                              k
                           
                        
                      be a partition of J. For any (i, j) ∈ I × J a cost qij
                      is given. Further, costs ci
                      for i ∈ I and dj
                      for j ∈ J are also given along with a constant c
                     0. Then BQP-PV is to

                        
                           (11)
                           
                              
                                 
                                    
                                       Maximize
                                    
                                    
                                       
                                          
                                             ∑
                                             
                                                i
                                                =
                                                1
                                             
                                             m
                                          
                                          
                                             ∑
                                             
                                                j
                                                =
                                                1
                                             
                                             n
                                          
                                          
                                             q
                                             
                                                i
                                                j
                                             
                                          
                                          
                                             x
                                             i
                                          
                                          
                                             y
                                             j
                                          
                                          +
                                          
                                             ∑
                                             
                                                i
                                                =
                                                1
                                             
                                             m
                                          
                                          
                                             c
                                             i
                                          
                                          
                                             x
                                             i
                                          
                                          +
                                          
                                             ∑
                                             
                                                j
                                                =
                                                1
                                             
                                             n
                                          
                                          
                                             d
                                             j
                                          
                                          
                                             y
                                             j
                                          
                                          +
                                          
                                             c
                                             0
                                          
                                       
                                    
                                 
                              
                           
                        
                     
                     
                        
                           (12)
                           
                              
                                 
                                    
                                    
                                    
                                       
                                          Subject
                                          
                                          to
                                       
                                    
                                 
                                 
                                    
                                    
                                    
                                       
                                          
                                             ∑
                                             
                                                i
                                                ∈
                                                
                                                   S
                                                   r
                                                
                                             
                                          
                                          
                                             x
                                             i
                                          
                                          =
                                          1
                                          ,
                                          
                                          for
                                          
                                          r
                                          =
                                          1
                                          ,
                                          2
                                          ,
                                          …
                                          ,
                                          p
                                       
                                    
                                 
                              
                           
                        
                     
                     
                        
                           (13)
                           
                              
                                 
                                    
                                    
                                       
                                          
                                             ∑
                                             
                                                j
                                                ∈
                                                
                                                   T
                                                   u
                                                
                                             
                                          
                                          
                                             y
                                             j
                                          
                                          =
                                          1
                                          ,
                                          
                                          for
                                          
                                          u
                                          =
                                          1
                                          ,
                                          2
                                          ,
                                          …
                                          ,
                                          k
                                       
                                    
                                 
                              
                           
                        
                     
                     
                        
                           (14)
                           
                              
                                 
                                    
                                    
                                       
                                          
                                             x
                                             i
                                          
                                          ,
                                          
                                             y
                                             j
                                          
                                          ∈
                                          
                                             {
                                             0
                                             ,
                                             1
                                             }
                                          
                                          ,
                                          
                                          for
                                          
                                          i
                                          ∈
                                          I
                                          ,
                                          j
                                          ∈
                                          J
                                          .
                                       
                                    
                                 
                              
                           
                        
                     
                  

Note that BQP-PV is equivalent to its continuous version obtained by replacing constraints (14) by

                        
                           (15)
                           
                              
                                 
                                    
                                       
                                          0
                                          ≤
                                          
                                             x
                                             i
                                          
                                          ≤
                                          1
                                          
                                          for
                                          
                                          i
                                          ∈
                                          I
                                          ,
                                          0
                                          ≤
                                          
                                             y
                                             j
                                          
                                          ≤
                                          1
                                          
                                          for
                                          
                                          j
                                          ∈
                                          J
                                          .
                                       
                                    
                                 
                              
                           
                        
                     The validity of this follows from the fact that the objective function is bilinear (Altman, 1968; Bloemhof-Ruwaard & Hendrix, 1996; Kono, 1976) which guarantees an extreme point optimal solution and constraints (12), (13) and (15) define a totally unimodular coefficient matrix which guarantees integer extreme points. This allows us to use bilinear programming algorithms (Altman, 1968; Konno, Kuno, & Yajima, 1992) to solve BQP-PV. However, general purpose bilinear programming algorithms are inefficient to solve BQP-PV and to the best of our knowledge, no special purpose bilinear programming algorithms are available that exploit the structure of BQP-PV. In this regard, our work is also a contribution to the bilinear programming literature.

Suppose 
                        
                           m
                           =
                           n
                           =
                           (
                           
                              α
                              2
                           
                           ,
                           say
                           )
                        
                      and 
                        
                           
                              |
                           
                           
                              S
                              r
                           
                           
                              |
                              =
                              |
                           
                           
                              T
                              u
                           
                           
                              |
                              =
                              α
                           
                        
                      for all r and u. Then it follows that 
                        
                           p
                           =
                           k
                           =
                           α
                        
                     . Thus 
                        
                           
                              S
                              r
                           
                           ,
                           r
                           =
                           1
                           ,
                           …
                           ,
                           α
                        
                      and 
                        
                           
                              T
                              u
                           
                           ,
                           u
                           =
                           1
                           ,
                           …
                           ,
                           α
                        
                      can be viewed as partitions of the same set 
                        
                           1
                           ,
                           2
                           ,
                           …
                           ,
                           
                              α
                              2
                           
                        
                     . Assume that elements in each Sr
                      is given some ordering. For each 
                        
                           u
                           =
                           1
                           ,
                           2
                           ,
                           …
                           ,
                           α
                           ,
                        
                      construct Tu
                      as the set containing the uth element from each 
                        
                           
                              S
                              r
                           
                           ,
                           r
                           =
                           1
                           ,
                           2
                           ,
                           …
                           ,
                           α
                        
                     . It is easy to see that the resulting BQP-PV is precisely a BQAP. Thus BQP-PV is a proper generalization of BQAP which in turn generalizes the QAP. The problem BQP-PV without the constraints (12) and (13) is the bipartite unconstrained 0–1 quadratic programming problem (BQP01) studied by various authors (Duarte, Laguna, Martí, & Sánchez-Oroa, 2014; Glover, Ye, Punnen, & Kochenberger, 2015; Karapetyan & Punnen, 2012; Punnen, Sripratak, & Karapetyan, 2013; 2015a; 2015b).

A graph theoretic interpretation of BQP-PV can be given as follows. Let 
                        
                           G
                           =
                           (
                           I
                           ,
                           J
                           ,
                           E
                           )
                        
                      be a bipartite graph and 
                        
                           
                              S
                              1
                           
                           ,
                           
                              S
                              2
                           
                           ,
                           …
                           ,
                           
                              S
                              p
                           
                           ,
                        
                      and 
                        
                           
                              T
                              1
                           
                           ,
                           
                              T
                              2
                           
                           ,
                           …
                           ,
                           
                              T
                              k
                           
                        
                      be partitions of I and J respectively. A subgraph 
                        
                           
                              G
                              ′
                           
                           =
                           
                              (
                              
                                 I
                                 ′
                              
                              ,
                              
                                 J
                                 ′
                              
                              ,
                              
                                 E
                                 ′
                              
                              )
                           
                        
                      is said to be a representative subgraph of G if I′ contains exactly one element from each Sr
                     , 
                        
                           r
                           =
                           1
                           ,
                           2
                           ,
                           …
                           ,
                           p
                        
                      and J′ contains exactly one element from each Tu
                     , 
                        
                           u
                           =
                           1
                           ,
                           2
                           …
                           ,
                           k
                        
                     . Further, for each (i, j) ∈ E a cost qij
                      is prescribed. Then the maximum weight representative subgraph problem on G is to find a representative subgraph of G where the sum of the edge-weights is maximized. Clearly, the representative subgraph problem can be modeled as BQP-PV. A selected node in I′ or J′ represents an elected representative of the subset it belongs. The weight qij
                      of the edge (i, j) represents the potential interaction measure between representatives i and j. Then the maximum weight representative subgraph chooses representatives with total interaction potential being maximized. If the selected subgraph is required to be a clique, then we call the resulting maximum representative subgraph problem a maximum weight representative clique problem and this problem can also be formulated as BQP-PV. It is possible that some representatives selected may be more important than others. In such a case, we have the node weighted version of the representative subgraph problem, where ci
                      is the weight of node i ∈ I and dj
                      is the weight of node j ∈ J. This problem can also be modeled as BQP-PV.

The representative subgraph model is applicable in scenarios where the collaborative output is maximized. For example selection of negotiating teams, selection of component manufacturers and assembly units. The BQP-PV (and BQAP) model can also be viewed as a robust optimization problem (Aissi, Bazgan, & Vanderpooten, 2009; Yu & Kouvelis, 1996) where the y-values represent specific weights (or probabilities) for a given set of scenarios and the robustness is measured in terms of weighted averages rather than the worst case as in the case of minmax and minmax regret problems. The constraints set on the y-variables provides allowable distribution of the weights. For example, when 
                        
                           k
                           =
                           1
                        
                      it defines a simplex and the resulting problem reduces to optimizing individual scenarios and choosing the overall best. This simplicity disappears as k increases and thereby allowing complex weight distributions. In particular, BQAP becomes a robust semi-assignment problem that focuses on weighted averages of the scenario functions guided by the specific weight distributions defined.

Other applications of BQP-PV include problems in clustering and bioinformatics obtained by extending corresponding applications of BQP01 in those areas (Shen, Ji, & Ye, 2009; Tanay, Sharan, & Shamir, 2002). Also, because of the unifying nature, applications of QAP and QSAP can also be viewed as potential applications of BQP-PV. In particular, our results are directly applicable to solve low-rank QSAP by following the approach suggested in Torki, Yajima, and Enkawa (1996) to solve low-rank QAP.

In this paper we first identify some structural properties of BQP-PV. It is shown that BQP-PV is strongly NP-hard even if 
                        
                           
                              |
                           
                           
                              S
                              r
                           
                           
                              |
                              =
                              |
                           
                           
                              T
                              u
                           
                           
                              |
                              =
                              2
                           
                        
                      for all 
                        
                           r
                           =
                           1
                           ,
                           2
                           ,
                           …
                           ,
                           p
                        
                      and 
                        
                           u
                           =
                           1
                           ,
                           2
                           ,
                           …
                           k
                        
                     . Further, for 
                        
                           p
                           =
                           O
                           (
                           
                              
                                 log
                                 m
                              
                              
                                 log
                                 
                                    S
                                    max
                                 
                              
                           
                           )
                        
                      or 
                        
                           k
                           =
                           O
                           (
                           
                              
                                 log
                                 n
                              
                              
                                 log
                                 
                                    T
                                    max
                                 
                              
                           
                           )
                           ,
                        
                      where 
                        
                           
                              T
                              max
                           
                           =
                           
                              max
                              
                                 1
                                 ≤
                                 u
                                 ≤
                                 k
                              
                           
                           
                              |
                              
                                 T
                                 u
                              
                              |
                           
                        
                      and 
                        
                           
                              
                                 S
                                 max
                              
                              =
                              
                                 max
                                 
                                    1
                                    ≤
                                    r
                                    ≤
                                    p
                                 
                              
                              
                                 |
                                 
                                    S
                                    r
                                 
                                 |
                              
                           
                           ,
                        
                      we show that BQP-PV is solvable in polynomial time. BQP-PV can be formulated as a BQP01 by introducing large penalties for violating constraints (12) and (13) using the ideas discussed in Alidaee, Kochenberger, Lewis, Lewis, and Wang (2008); Kochenberger, Glover, Alidaee, and Rego (2004); Lewis, Kochenberger, and Alidaee (2008) with minor modifications. However, the penalty factor imposed in the reformulation limits computational flexibility, especially for large scale problems. When 
                        
                           
                              |
                           
                           
                              S
                              r
                           
                           
                              |
                              =
                              |
                           
                           
                              T
                              u
                           
                           
                              |
                              =
                              2
                           
                        
                      for all 
                        
                           r
                           =
                           1
                           ,
                           2
                           ,
                           …
                           ,
                           p
                           ,
                           u
                           =
                           1
                           ,
                           2
                           ,
                           …
                           k
                           ,
                        
                      we observe that the resulting BQP-PV can be formulated as a BQP01 without using large penalty factors and with half as many variables as in the original model. Thus such instances can be solved efficiently using existing algorithms for BQP01 (Duarte et al., 2014; Glover et al., 2015; Karapetyan & Punnen, 2012).

For the general version of BQP-PV, specialized algorithms that exploit problem specific structures are required to achieve computational efficiency. For this purpose, we first introduce three neighborhood structures - swap, concurrent swap, and optimized swap to develop such algorithms. The swap neighborhood has a simple structure and the best improving solution in this neighborhood can be identified with linear time complexity. The basic idea of a swap operation is applied in developing heuristics for many 0–1 programming problems. Our contribution here is its application in the context of BQP-PV and development of very fast evaluation schemes for the neighborhood. The concurrent swap and optimized swap neighborhoods are new and could be of exponential size (Ahuja, Ergun, Orlin, & Punnen, 2002, 2007; Deneko and Woeginger, 2010). However, exploiting the properties of the neighborhoods we show that a best solution in these neighborhoods can be identified by investing only polynomial effort. We then computationally analyze these neighborhoods within a local search paradigm and investigate the efficacy of various combinations of these neighborhoods. Our computational results disclose that the resulting algorithms are enhanced when applying the neighborhoods in combination, instead of using them in isolation. In addition, we present a tabu search framework encapsulating these local search schemes to achieve superior outcomes.

The paper is organized as follows. In Section 2, we discuss the computational complexity of BQP-PV and some polynomially solvable special cases of the problem. The new neighborhood structures and evaluation schemes to identify a best solution in these neighborhoods are discussed in Section 3. Experimental design, development of benchmark instances, and results of computational analysis are discussed in Section 4 followed by concluding remarks in Section 5.

If 
                        
                           
                              |
                           
                           
                              S
                              r
                           
                           
                              |
                              =
                              1
                           
                        
                      for any r or 
                        
                           
                              |
                           
                           
                              T
                              u
                           
                           
                              |
                              =
                              1
                           
                        
                      for any u, we can easily reduce the problem size. Suppose 
                        
                           
                              S
                              r
                           
                           =
                           
                              {
                              
                                 x
                                 t
                              
                              }
                           
                        
                      for some r. Clearly xt
                      must be 1 in all feasible solutions. Thus we can eliminate the variable xt
                      by deleting Q
                     
                        t*, the tth row of Q, from Q, deleting the component ct
                      from c, replacing the vector d by 
                        
                           d
                           +
                           
                              Q
                              
                                 t
                                 *
                              
                           
                        
                      and adding ct
                      to c
                     0. The case 
                        
                           
                              |
                           
                           
                              T
                              u
                           
                           
                              |
                              =
                              1
                           
                        
                      can be handled in an analogous way. Thus without loss of generality we assume that |Sr
                     | ≥ 2 for all r and |Tu
                     | ≥ 2 for all u.

                        Theorem 1
                        
                           BQP-PV is strongly NP-hard even if
                           
                              
                                 
                                    |
                                 
                                 
                                    S
                                    r
                                 
                                 
                                    |
                                    =
                                    2
                                 
                              
                            
                           for all
                           
                              
                                 r
                                 =
                                 1
                                 ,
                                 2
                                 ,
                                 …
                                 ,
                                 p
                              
                            
                           and
                           
                              
                                 
                                    |
                                 
                                 
                                    T
                                    u
                                 
                                 
                                    |
                                    =
                                    2
                                 
                              
                            
                           for all
                           
                              
                                 u
                                 =
                                 1
                                 ,
                                 2
                                 ,
                                 …
                                 ,
                                 k
                              
                           
                           .
                        

The proof of the theorem follows by a simple reduction from the bipartite unconstrained 0–1 quadratic programming problem (BQP01) (Punnen et al., 2013; 2015a; 2015b). An instance of BQP01 with decision variables 
                              
                                 
                                    x
                                    1
                                 
                                 ,
                                 
                                    x
                                    2
                                 
                                 ,
                                 …
                                 ,
                                 
                                    x
                                    m
                                 
                              
                            and 
                              
                                 
                                    y
                                    1
                                 
                                 ,
                                 
                                    y
                                    2
                                 
                                 ,
                                 …
                                 ,
                                 
                                    y
                                    n
                                 
                              
                            is completely defined by an m × n matrix 
                              
                                 A
                                 =
                                 (
                                 
                                    a
                                    
                                       i
                                       j
                                    
                                 
                                 )
                                 ,
                              
                            an m-vector b
                           1 and an n-vector b
                           2. From this instance, construct an instance of BQP-PV as follows. Define

                              
                                 (16)
                                 
                                    
                                       Q
                                       =
                                       
                                          [
                                          
                                             
                                                
                                                   A
                                                
                                                
                                                   
                                                      O
                                                      
                                                         m
                                                         ×
                                                         n
                                                      
                                                   
                                                
                                             
                                             
                                                
                                                   
                                                      O
                                                      
                                                         m
                                                         ×
                                                         n
                                                      
                                                   
                                                
                                                
                                                   
                                                      O
                                                      
                                                         m
                                                         ×
                                                         n
                                                      
                                                   
                                                
                                             
                                          
                                          ]
                                       
                                       ,
                                       
                                       c
                                       =
                                       
                                          [
                                          
                                             
                                                
                                                   
                                                      b
                                                      1
                                                   
                                                
                                                
                                                   
                                                      0
                                                      m
                                                   
                                                
                                             
                                          
                                          ]
                                       
                                       
                                       and
                                       
                                       d
                                       =
                                       
                                          [
                                          
                                             
                                                
                                                   
                                                      b
                                                      2
                                                   
                                                
                                                
                                                   
                                                      0
                                                      n
                                                   
                                                
                                             
                                          
                                          ]
                                       
                                       ,
                                    
                                 
                              
                           where O
                           
                              m × n
                           , is a zero matrix, and 0
                              m
                           , 0
                              n
                            are vectors of size m and n respectively with entries 0. Consider the decision variables 
                              
                                 
                                    x
                                    1
                                 
                                 ,
                                 
                                    x
                                    2
                                 
                                 ,
                                 …
                                 ,
                                 
                                    x
                                    
                                       2
                                       m
                                    
                                 
                              
                            and 
                              
                                 
                                    y
                                    1
                                 
                                 ,
                                 
                                    y
                                    2
                                 
                                 ,
                                 …
                                 ,
                                 
                                    y
                                    
                                       2
                                       n
                                    
                                 
                              
                            and define 
                              
                                 
                                    S
                                    r
                                 
                                 =
                                 
                                    {
                                    
                                       x
                                       r
                                    
                                    ,
                                    
                                       x
                                       
                                          m
                                          +
                                          r
                                       
                                    
                                    }
                                 
                                 ,
                              
                           
                           
                              
                                 r
                                 =
                                 1
                                 ,
                                 2
                                 ,
                                 …
                                 ,
                                 m
                              
                            and 
                              
                                 
                                    T
                                    u
                                 
                                 =
                                 
                                    {
                                    
                                       y
                                       u
                                    
                                    ,
                                    
                                       y
                                       
                                          n
                                          +
                                          u
                                       
                                    
                                    }
                                 
                                 ,
                              
                           
                           
                              
                                 u
                                 =
                                 1
                                 ,
                                 2
                                 ,
                                 …
                                 ,
                                 n
                              
                           . It is easy to verify that an optimal solution to BQP-PV with data Q, c, d, Sr, Tu
                            as defined above gives an optimal solution to BQP01. Since BQP01 is strongly NP-hard (Punnen, Sripratak, & Karapetyan, 2015b), the result follows.□

It may be noted that the reduction from BQP01 to BQP-PV discussed above preserves the objective function value. Thus any ϵ-optimal solution to the reduced instance of BQP-PV is an ϵ-optimal solution to BQP01. Thus all non-approximability results for BQP01 (Punnen et al., 2013; 2015a; 2015b) translate into non-approximability results for BQP-PV as well, in particular to the special cases considered in Theorem 1.

Interestingly, we now observe that a BQP-PV satisfying the condition that 
                        
                           
                              |
                           
                           
                              S
                              r
                           
                           
                              |
                              =
                              |
                           
                           
                              T
                              u
                           
                           
                              |
                              =
                              2
                           
                        
                      for all r and u can be formulated as a BQP01 with the number of variables reduced by half. For definiteness, we denote such a BQP-PV by BQP-PV2. Without loss of generality we assume that BQP-PV2 has 2m x-variables and 2n y-variables. Thus the corresponding quadratic cost matrix 
                        
                           Q
                           =
                           (
                           
                              q
                              
                                 i
                                 j
                              
                           
                           )
                        
                      have dimension 2m × 2n and the vectors c and d have respective dimensions 2m and 2n. Further, without loss of generality we assume that in BQP-PV2, 
                        
                           
                              S
                              r
                           
                           =
                           
                              {
                              r
                              ,
                              m
                              +
                              r
                              }
                           
                        
                      and 
                        
                           
                              T
                              u
                           
                           =
                           
                              {
                              u
                              ,
                              n
                              +
                              u
                              }
                           
                        
                     . Consider the m × n matrix 
                        
                           
                              Q
                              ¯
                           
                           =
                           
                              (
                              
                                 
                                    q
                                    ¯
                                 
                                 
                                    i
                                    j
                                 
                              
                              )
                           
                           ,
                        
                      vectors 
                        
                           
                              c
                              ¯
                           
                           =
                           
                              (
                              
                                 
                                    c
                                    ¯
                                 
                                 1
                              
                              ,
                              
                                 
                                    c
                                    ¯
                                 
                                 2
                              
                              ,
                              …
                              ,
                              
                                 
                                    c
                                    ¯
                                 
                                 m
                              
                              )
                           
                           ,
                        
                     
                     
                        
                           
                              d
                              ¯
                           
                           =
                           
                              (
                              
                                 
                                    d
                                    ¯
                                 
                                 1
                              
                              ,
                              
                                 
                                    d
                                    ¯
                                 
                                 2
                              
                              ,
                              …
                              ,
                              
                                 
                                    d
                                    ¯
                                 
                                 n
                              
                              )
                           
                           ,
                        
                      and constant 
                        
                           
                              c
                              ¯
                           
                           0
                        
                      where,

                        
                           (17)
                           
                              
                                 
                                    
                                       
                                          
                                             q
                                             ¯
                                          
                                          
                                             i
                                             j
                                          
                                       
                                    
                                    
                                       
                                          =
                                          
                                             q
                                             
                                                i
                                                j
                                             
                                          
                                          −
                                          
                                             q
                                             
                                                m
                                                +
                                                i
                                                ,
                                                j
                                             
                                          
                                          −
                                          
                                             q
                                             
                                                i
                                                ,
                                                n
                                                +
                                                j
                                             
                                          
                                          +
                                          
                                             q
                                             
                                                m
                                                +
                                                i
                                                ,
                                                n
                                                +
                                                j
                                             
                                          
                                       
                                    
                                 
                              
                           
                        
                     
                     
                        
                           (18)
                           
                              
                                 
                                    
                                       
                                          
                                             d
                                             ¯
                                          
                                          j
                                       
                                    
                                    
                                       
                                          =
                                          
                                             d
                                             j
                                          
                                          −
                                          
                                             d
                                             
                                                n
                                                +
                                                j
                                             
                                          
                                          +
                                          
                                             ∑
                                             
                                                i
                                                =
                                                1
                                             
                                             m
                                          
                                          
                                             (
                                             
                                                q
                                                
                                                   m
                                                   +
                                                   i
                                                   ,
                                                   j
                                                
                                             
                                             −
                                             
                                                q
                                                
                                                   m
                                                   +
                                                   i
                                                   ,
                                                   n
                                                   +
                                                   j
                                                
                                             
                                             )
                                          
                                       
                                    
                                 
                              
                           
                        
                     
                     
                        
                           (19)
                           
                              
                                 
                                    
                                       
                                          
                                             c
                                             ¯
                                          
                                          i
                                       
                                    
                                    
                                       
                                          =
                                          
                                             c
                                             i
                                          
                                          −
                                          
                                             c
                                             
                                                m
                                                +
                                                i
                                             
                                          
                                          −
                                          
                                             ∑
                                             
                                                j
                                                =
                                                1
                                             
                                             n
                                          
                                          
                                             (
                                             
                                                q
                                                
                                                   i
                                                   ,
                                                   n
                                                   +
                                                   j
                                                
                                             
                                             −
                                             
                                                q
                                                
                                                   m
                                                   +
                                                   i
                                                   ,
                                                   n
                                                   +
                                                   j
                                                
                                             
                                             )
                                          
                                       
                                    
                                 
                              
                           
                        
                     
                     
                        
                           (20)
                           
                              
                                 
                                    
                                       
                                          
                                             c
                                             ¯
                                          
                                          0
                                       
                                    
                                    
                                       
                                          =
                                          
                                             c
                                             0
                                          
                                          +
                                          
                                             ∑
                                             
                                                i
                                                =
                                                1
                                             
                                             m
                                          
                                          
                                             c
                                             
                                                m
                                                +
                                                i
                                             
                                          
                                          +
                                          
                                             ∑
                                             
                                                j
                                                =
                                                1
                                             
                                             n
                                          
                                          
                                             d
                                             
                                                n
                                                +
                                                j
                                             
                                          
                                          +
                                          
                                             ∑
                                             
                                                i
                                                =
                                                1
                                             
                                             m
                                          
                                          
                                             ∑
                                             
                                                j
                                                =
                                                1
                                             
                                             n
                                          
                                          
                                             q
                                             
                                                m
                                                +
                                                i
                                                ,
                                                n
                                                +
                                                j
                                             
                                          
                                          .
                                       
                                    
                                 
                              
                           
                        
                     Let 
                        
                           BQP01
                           ¯
                        
                      denote the bipartite unconstrained 
                        
                           0
                           −
                           1
                        
                      quadratic programming problem

                        
                           (21)
                           
                              
                                 
                                    
                                       Maximize
                                    
                                    
                                       
                                          
                                             ∑
                                             
                                                i
                                                =
                                                1
                                             
                                             m
                                          
                                          
                                             ∑
                                             
                                                j
                                                =
                                                1
                                             
                                             n
                                          
                                          
                                             
                                                q
                                                ¯
                                             
                                             
                                                i
                                                j
                                             
                                          
                                          
                                             x
                                             i
                                          
                                          
                                             y
                                             j
                                          
                                          +
                                          
                                             ∑
                                             
                                                i
                                                =
                                                1
                                             
                                             m
                                          
                                          
                                             
                                                c
                                                ¯
                                             
                                             i
                                          
                                          
                                             x
                                             i
                                          
                                          +
                                          
                                             ∑
                                             
                                                j
                                                =
                                                1
                                             
                                             n
                                          
                                          
                                             
                                                d
                                                ¯
                                             
                                             j
                                          
                                          
                                             y
                                             j
                                          
                                          +
                                          
                                             
                                                c
                                                ¯
                                             
                                             0
                                          
                                       
                                    
                                 
                              
                           
                        
                     
                     
                        
                           (22)
                           
                              
                                 
                                    
                                       
                                          Subject
                                          
                                          to
                                       
                                    
                                    
                                 
                                 
                                    
                                    
                                       
                                          
                                             x
                                             i
                                          
                                          ,
                                          
                                             y
                                             j
                                          
                                          ∈
                                          
                                             {
                                             0
                                             ,
                                             1
                                             }
                                          
                                          ,
                                          
                                          for
                                          
                                          i
                                          =
                                          1
                                          ,
                                          2
                                          ,
                                          …
                                          ,
                                          m
                                          ,
                                          j
                                          =
                                          1
                                          ,
                                          2
                                          ,
                                          …
                                          ,
                                          n
                                          .
                                       
                                    
                                 
                              
                           
                        
                     
                     
                        Theorem 2
                        
                           The optimal objective function values of BQP-PV2 and
                           
                              
                                 BQP01
                                 ¯
                              
                            
                           are the same. Further, from an optimal solution to
                           
                              
                                 
                                    BQP01
                                    ¯
                                 
                                 ,
                              
                            
                           an optimal solution to BQP-PV2 can be constructed.
                        

In BQP-PV2, the constraints 
                              
                                 
                                    x
                                    
                                       m
                                       +
                                       i
                                    
                                 
                                 ∈
                                 
                                    {
                                    0
                                    ,
                                    1
                                    }
                                 
                              
                            for 
                              
                                 i
                                 =
                                 1
                                 ,
                                 2
                                 ,
                                 …
                                 m
                              
                            and 
                              
                                 
                                    y
                                    
                                       n
                                       +
                                       j
                                    
                                 
                                 ∈
                                 
                                    {
                                    0
                                    ,
                                    1
                                    }
                                 
                              
                            for 
                              
                                 j
                                 =
                                 1
                                 ,
                                 2
                                 ,
                                 …
                                 n
                              
                            are redundant and hence can be discarded. Using the constraint 
                              
                                 
                                    x
                                    i
                                 
                                 +
                                 
                                    x
                                    
                                       m
                                       +
                                       i
                                    
                                 
                                 =
                                 1
                                 ,
                              
                            the variable 
                              
                                 x
                                 
                                    m
                                    +
                                    i
                                 
                              
                            can be eliminated by substituting 
                              
                                 
                                    x
                                    
                                       m
                                       +
                                       i
                                    
                                 
                                 =
                                 1
                                 −
                                 
                                    x
                                    i
                                 
                              
                           . Similarly, using the constraint 
                              
                                 
                                    y
                                    j
                                 
                                 +
                                 
                                    y
                                    
                                       n
                                       +
                                       j
                                    
                                 
                                 =
                                 1
                                 ,
                              
                            the variable 
                              
                                 y
                                 
                                    n
                                    +
                                    j
                                 
                              
                            can be eliminated by substituting 
                              
                                 
                                    y
                                    
                                       n
                                       +
                                       j
                                    
                                 
                                 =
                                 1
                                 −
                                 
                                    y
                                    j
                                 
                              
                           . Repeating this for 
                              
                                 i
                                 =
                                 1
                                 ,
                                 2
                                 ,
                                 …
                                 ,
                                 m
                              
                            and 
                              
                                 j
                                 =
                                 1
                                 ,
                                 2
                                 ,
                                 …
                                 ,
                                 n
                                 ,
                              
                            the equivalence of the objective function values of BQP-PV2 and 
                              
                                 BQP01
                                 ¯
                              
                            can be established by simple algebraic calculations. Further, suppose 
                              
                                 
                                    x
                                    1
                                    0
                                 
                                 ,
                                 
                                    x
                                    2
                                    0
                                 
                                 ,
                                 …
                                 
                                    x
                                    m
                                    0
                                 
                                 ,
                              
                           
                           
                              
                                 
                                    y
                                    1
                                    0
                                 
                                 ,
                                 
                                    y
                                    2
                                    0
                                 
                                 ,
                                 …
                                 ,
                                 
                                    y
                                    n
                                    0
                                 
                              
                            be an optimal solution to 
                              
                                 BQP01
                                 ¯
                              
                           . Define 
                              
                                 
                                    x
                                    
                                       m
                                       +
                                       i
                                    
                                    0
                                 
                                 =
                                 1
                                 −
                                 
                                    x
                                    i
                                    0
                                 
                              
                            for 
                              
                                 i
                                 =
                                 1
                                 ,
                                 2
                                 ,
                                 …
                                 ,
                                 m
                              
                            and 
                              
                                 
                                    y
                                    
                                       n
                                       +
                                       j
                                    
                                    0
                                 
                                 =
                                 1
                                 −
                                 
                                    y
                                    j
                                    0
                                 
                              
                            for 
                              
                                 j
                                 =
                                 1
                                 ,
                                 2
                                 ,
                                 …
                                 ,
                                 n
                              
                           . Then it can be verified that 
                              
                                 
                                    x
                                    1
                                    0
                                 
                                 ,
                                 
                                    x
                                    2
                                    0
                                 
                                 ,
                                 …
                                 
                                    x
                                    
                                       2
                                       m
                                    
                                    0
                                 
                                 ,
                              
                           
                           
                              
                                 
                                    y
                                    1
                                    0
                                 
                                 ,
                                 
                                    y
                                    2
                                    0
                                 
                                 ,
                                 …
                                 ,
                                 
                                    y
                                    
                                       2
                                       n
                                    
                                    0
                                 
                              
                            is an optimal solution to BQP-PV2.□

We now observe that if p or k (the number of partitions of the x variables or the number of partitions of the y variables) is “small”, then BQP-PV can be solved in polynomial time. Let 
                        
                           
                              x
                              0
                           
                           =
                           
                              (
                              
                                 x
                                 1
                                 0
                              
                              ,
                              
                                 x
                                 2
                                 0
                              
                              ,
                              …
                              ,
                              
                                 x
                                 m
                                 0
                              
                              )
                           
                        
                      be a given solution to BQP-PV. For each 
                        
                           u
                           =
                           1
                           ,
                           2
                           ,
                           …
                           ,
                           k
                           ,
                        
                      choose the index ju
                      such that

                        
                           (23)
                           
                              
                                 
                                    ∑
                                    
                                       i
                                       =
                                       1
                                    
                                    m
                                 
                                 
                                    q
                                    
                                       i
                                       
                                          j
                                          u
                                       
                                    
                                 
                                 
                                    x
                                    i
                                    0
                                 
                                 +
                                 
                                    d
                                    
                                       j
                                       u
                                    
                                 
                                 =
                                 
                                    max
                                    
                                       j
                                       ∈
                                       
                                          T
                                          u
                                       
                                    
                                 
                                 
                                    ∑
                                    
                                       i
                                       =
                                       1
                                    
                                    m
                                 
                                 
                                    q
                                    
                                       i
                                       j
                                    
                                 
                                 
                                    x
                                    i
                                    0
                                 
                                 +
                                 
                                    d
                                    j
                                 
                              
                           
                        
                     Now, define

                        
                           (24)
                           
                              
                                 
                                    
                                       
                                          
                                             y
                                             j
                                             0
                                          
                                          =
                                          
                                             {
                                             
                                                
                                                   
                                                      1
                                                   
                                                   
                                                      
                                                         if
                                                         
                                                         j
                                                         =
                                                         
                                                            j
                                                            u
                                                         
                                                         ,
                                                         u
                                                         =
                                                         1
                                                         ,
                                                         2
                                                         ,
                                                         …
                                                         ,
                                                         k
                                                         ,
                                                      
                                                   
                                                
                                                
                                                   
                                                      0
                                                   
                                                   
                                                      otherwise.
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           
                        
                     Clearly, if x is fixed at x
                     0, then y
                     0 is an optimal choice for y. Likewise, if y is fixed at some values, say 
                        
                           
                              y
                              *
                           
                           =
                           
                              (
                              
                                 y
                                 1
                                 *
                              
                              ,
                              
                                 y
                                 2
                                 *
                              
                              ,
                              …
                              ,
                              
                                 y
                                 n
                                 *
                              
                              )
                           
                           ,
                        
                      then a corresponding optimal value x
                     * of x is given by

                        
                           (25)
                           
                              
                                 
                                    
                                       
                                          
                                             x
                                             i
                                             *
                                          
                                          =
                                          
                                             {
                                             
                                                
                                                   
                                                      1
                                                   
                                                   
                                                      
                                                         if
                                                         
                                                         i
                                                         =
                                                         
                                                            i
                                                            r
                                                         
                                                         ,
                                                         r
                                                         =
                                                         1
                                                         ,
                                                         2
                                                         ,
                                                         …
                                                         p
                                                         ,
                                                      
                                                   
                                                
                                                
                                                   
                                                      0
                                                   
                                                   
                                                      otherwise.
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           
                        
                     where the index ir
                      is chosen such that

                        
                           (26)
                           
                              
                                 
                                    ∑
                                    
                                       j
                                       =
                                       1
                                    
                                    n
                                 
                                 
                                    q
                                    
                                       
                                          i
                                          r
                                       
                                       j
                                    
                                 
                                 
                                    y
                                    j
                                    *
                                 
                                 +
                                 
                                    c
                                    
                                       i
                                       r
                                    
                                 
                                 =
                                 
                                    max
                                    
                                       i
                                       ∈
                                       
                                          S
                                          r
                                       
                                    
                                 
                                 
                                    ∑
                                    
                                       j
                                       =
                                       1
                                    
                                    n
                                 
                                 
                                    q
                                    
                                       i
                                       j
                                    
                                 
                                 
                                    y
                                    j
                                    *
                                 
                                 +
                                 
                                    c
                                    i
                                 
                                 .
                              
                           
                        
                     BQP-PV has 
                        
                           
                              (
                              
                                 ∏
                                 
                                    r
                                    =
                                    1
                                 
                                 p
                              
                              
                                 |
                                 
                                    S
                                    r
                                 
                                 |
                              
                              )
                           
                           
                              (
                           
                           
                              ∏
                              
                                 u
                                 =
                                 1
                              
                              k
                           
                           
                              |
                           
                           
                              T
                              u
                           
                           
                              |
                              )
                           
                        
                      feasible solutions. If p is small, we can enumerate all possible choices of x and for each such x, an optimal y can be identified using Eq. (24). Comparing such solutions and choosing the best overall solution yield an optimal solution to BQP-PV. Let 
                        
                           
                              S
                              max
                           
                           =
                           
                              max
                              {
                              |
                           
                           
                              S
                              r
                           
                           
                              |
                              :
                              r
                              =
                              1
                              ,
                              2
                              ,
                              …
                              ,
                              p
                              }
                           
                        
                      and 
                        
                           
                              T
                              max
                           
                           =
                           
                              max
                              {
                              |
                           
                           
                              T
                              u
                           
                           
                              |
                              :
                              u
                              =
                              1
                              ,
                              2
                              ,
                              …
                              ,
                              k
                              }
                           
                        
                     . If 
                        
                           p
                           =
                           O
                           
                              (
                              
                                 
                                    log
                                    m
                                 
                                 
                                    log
                                    
                                       S
                                       max
                                    
                                 
                              
                              )
                           
                        
                      then the number of possible choices of x is polynomial in m and hence we can solve BQP-PV in polynomial time. Similarly, if 
                        
                           k
                           =
                           O
                           
                              (
                              
                                 
                                    log
                                    n
                                 
                                 
                                    log
                                    
                                       T
                                       max
                                    
                                 
                              
                              )
                           
                        
                      then we can solve BQP-PV in polynomial time by enumerating all possible choices of y and computing the corresponding optimal x using Eq. (25).

Let us now define some neighborhoods for solutions of BQP-PV to design various local search algorithms and extensions. More specifically we introduce three neighborhoods: the swap neighborhood, the concurrent swap neighborhood, and the optimized swap neighborhood. The structure of the swap neighborhood is very simple and the underlying ideas are used in many combinatorial optimization problems. The size of this neighborhood is 
                        
                           m
                           +
                           n
                           −
                           p
                           −
                           k
                        
                      and a best solution in this neighborhood can be obtained in 
                        
                           O
                           (
                           m
                           +
                           n
                           )
                        
                      time. This very fast neighborhood evaluation scheme makes it attractive to be used within metaheuristic algorithms. The concurrent swap neighborhood employs several independent swap moves simultaneously. The size of this neighborhood can be exponential in m and/or n and a best solution in the neighborhood can be identified in 
                        
                           O
                           (
                           m
                           k
                           +
                           n
                           p
                           )
                        
                      time. The optimized swap neighborhood is yet another exponential neighborhood that can be searched in polynomial time to find a best solution. Each of these neighborhoods have their distinct features and studying the empirical behavior of these neighborhoods within the context of local search and tabu search, when used in isolation or in unison, is the major focus of our experimental analysis. Thus, in addition to the novelty of the model, our work discloses the importance of combining exponential neighborhoods and simple neighborhoods to achieve superior outcomes that balances solution quality and computational time for metaheuristic algorithms. Also, unlike the application of swap operations in traditional binary quadratic problems such as QSAP, the bipartite structure of BQP-PV opens up possibilities of mixing ‘independent’ and ‘dependent’ moves controlled by choices of x or y variables as swap candidates.

Let (x
                        0, y
                        0) be a solution to BQP-PV, where 
                           
                              
                                 x
                                 0
                              
                              =
                              
                                 (
                                 
                                    x
                                    1
                                    0
                                 
                                 ,
                                 
                                    x
                                    2
                                    0
                                 
                                 ,
                                 …
                                 ,
                                 
                                    x
                                    m
                                    0
                                 
                                 )
                              
                           
                         and 
                           
                              
                                 y
                                 0
                              
                              =
                              
                                 (
                                 
                                    y
                                    1
                                    0
                                 
                                 ,
                                 
                                    y
                                    2
                                    0
                                 
                                 ,
                                 …
                                 ,
                                 
                                    y
                                    n
                                    0
                                 
                                 )
                              
                           
                        . Since each set Sr
                         contains exactly one index say i such that 
                           
                              
                                 x
                                 i
                                 0
                              
                              =
                              1
                           
                         and each set Tu
                         contains exactly one index, say j, such that 
                           
                              
                                 y
                                 j
                                 0
                              
                              =
                              1
                              ,
                           
                         we represent these special indices as αr
                         and βu
                        , respectively. Thus for any solution (x, y), 
                           
                              
                                 x
                                 
                                    α
                                    r
                                 
                              
                              =
                              1
                           
                         for 
                           
                              r
                              =
                              1
                              ,
                              2
                              ,
                              …
                              ,
                              p
                           
                         and 
                           
                              
                                 y
                                 
                                    β
                                    u
                                 
                              
                              =
                              1
                              ,
                           
                         for 
                           
                              u
                              =
                              1
                              ,
                              2
                              ,
                              …
                              ,
                              k
                           
                        . Define

                           
                              (27)
                              
                                 
                                    
                                       
                                          
                                             
                                                ρ
                                                i
                                             
                                             
                                                (
                                                
                                                   y
                                                   0
                                                
                                                )
                                             
                                          
                                       
                                       
                                          
                                             =
                                             
                                                c
                                                i
                                             
                                             +
                                             
                                                ∑
                                                
                                                   j
                                                   =
                                                   1
                                                
                                                n
                                             
                                             
                                                q
                                                
                                                   i
                                                   j
                                                
                                             
                                             
                                                y
                                                j
                                                0
                                             
                                             ,
                                             i
                                             =
                                             1
                                             ,
                                             2
                                             ,
                                             …
                                             ,
                                             m
                                          
                                       
                                    
                                 
                              
                           
                        
                        
                           
                              (28)
                              
                                 
                                    
                                       
                                          
                                             
                                                γ
                                                j
                                             
                                             
                                                (
                                                
                                                   x
                                                   0
                                                
                                                )
                                             
                                          
                                       
                                       
                                          
                                             =
                                             
                                                d
                                                j
                                             
                                             +
                                             
                                                ∑
                                                
                                                   i
                                                   =
                                                   1
                                                
                                                m
                                             
                                             
                                                q
                                                
                                                   i
                                                   j
                                                
                                             
                                             
                                                x
                                                i
                                                0
                                             
                                             ,
                                             j
                                             =
                                             1
                                             ,
                                             2
                                             ,
                                             …
                                             ,
                                             n
                                          
                                       
                                    
                                 
                              
                           
                        The values ρi
                        (y
                        0) and γj
                        (x
                        0) are respectively called the row and column potentials. Then the objective function value f(x
                        0, y
                        0) of (x
                        0, y
                        0) can be represented as

                           
                              (29)
                              
                                 
                                    
                                       
                                          
                                             f
                                             (
                                             
                                                x
                                                0
                                             
                                             ,
                                             
                                                y
                                                0
                                             
                                             )
                                          
                                       
                                       
                                          =
                                       
                                       
                                          
                                             
                                                ∑
                                                
                                                   i
                                                   =
                                                   1
                                                
                                                m
                                             
                                             
                                                ρ
                                                i
                                             
                                             
                                                (
                                                
                                                   y
                                                   0
                                                
                                                )
                                             
                                             
                                                x
                                                i
                                                0
                                             
                                             +
                                             
                                                ∑
                                                
                                                   j
                                                   =
                                                   1
                                                
                                                n
                                             
                                             
                                                d
                                                j
                                             
                                             
                                                y
                                                j
                                                0
                                             
                                             +
                                             
                                                c
                                                0
                                             
                                          
                                       
                                    
                                    
                                       
                                       
                                          =
                                       
                                       
                                          
                                             
                                                ∑
                                                
                                                   j
                                                   =
                                                   1
                                                
                                                n
                                             
                                             
                                                γ
                                                j
                                             
                                             
                                                (
                                                
                                                   x
                                                   0
                                                
                                                )
                                             
                                             
                                                y
                                                j
                                                0
                                             
                                             +
                                             
                                                ∑
                                                
                                                   i
                                                   =
                                                   1
                                                
                                                m
                                             
                                             
                                                c
                                                i
                                             
                                             
                                                x
                                                i
                                                0
                                             
                                             +
                                             
                                                c
                                                0
                                             
                                          
                                       
                                    
                                 
                              
                           
                        
                     

Recall that 
                           
                              
                                 x
                                 
                                    α
                                    r
                                 
                                 0
                              
                              =
                              1
                           
                         and 
                           
                              
                                 x
                                 i
                                 0
                              
                              =
                              0
                           
                         for all i ∈ Sr
                        ∖{αr
                        }, 
                           
                              r
                              =
                              1
                              ,
                              2
                              …
                              ,
                              p
                           
                        . A swap operation on x-variables, denoted by swap(αr, i), replaces the components 
                           
                              x
                              
                                 α
                                 r
                              
                              0
                           
                         and 
                           
                              x
                              i
                              0
                           
                         by their complements 
                           
                              1
                              −
                              
                                 x
                                 
                                    α
                                    r
                                 
                                 0
                              
                           
                         and 
                           
                              1
                              −
                              
                                 x
                                 i
                                 0
                              
                              ,
                           
                         respectively to generates a new solution, say (x
                        1, y
                        0). Note that 
                           
                              f
                              
                                 (
                                 
                                    x
                                    1
                                 
                                 ,
                                 
                                    y
                                    0
                                 
                                 )
                              
                              =
                              f
                              
                                 (
                                 
                                    x
                                    0
                                 
                                 ,
                                 
                                    y
                                    0
                                 
                                 )
                              
                              −
                              
                                 ρ
                                 
                                    α
                                    r
                                 
                              
                              
                                 (
                                 
                                    y
                                    0
                                 
                                 )
                              
                              +
                              
                                 ρ
                                 i
                              
                              
                                 (
                                 
                                    y
                                    0
                                 
                                 )
                              
                           
                        . Choose indices r
                        * and 
                           
                              t
                              ∈
                              
                                 S
                                 
                                    r
                                    *
                                 
                              
                           
                         such that

                           
                              (30)
                              
                                 
                                    −
                                    
                                       ρ
                                       
                                          α
                                          
                                             r
                                             *
                                          
                                       
                                    
                                    
                                       (
                                       
                                          y
                                          0
                                       
                                       )
                                    
                                    +
                                    
                                       ρ
                                       t
                                    
                                    
                                       (
                                       
                                          y
                                          0
                                       
                                       )
                                    
                                    =
                                    
                                       max
                                       
                                          1
                                          ≤
                                          r
                                          ≤
                                          p
                                       
                                    
                                    
                                       {
                                       −
                                       
                                          ρ
                                          
                                             α
                                             r
                                          
                                       
                                       
                                          (
                                          
                                             y
                                             0
                                          
                                          )
                                       
                                       +
                                       
                                          max
                                          
                                             i
                                             ∈
                                             
                                                S
                                                r
                                             
                                             ∖
                                             
                                                {
                                                
                                                   α
                                                   r
                                                
                                                }
                                             
                                          
                                       
                                       
                                          ρ
                                          i
                                       
                                       
                                          (
                                          
                                             y
                                             0
                                          
                                          )
                                       
                                       }
                                    
                                 
                              
                           
                        
                     

Then the best swap move for x-variables is obtained by exchanging the values of 
                           
                              x
                              t
                              0
                           
                         and 
                           
                              x
                              
                                 α
                                 
                                    r
                                    *
                                 
                              
                              0
                           
                        .

A swap operation on y variables, denoted by swap(βu, s), replaces components 
                           
                              y
                              
                                 β
                                 u
                              
                              0
                           
                         and 
                           
                              y
                              s
                              0
                           
                         by their complements 
                           
                              1
                              −
                              
                                 y
                                 
                                    β
                                    u
                                 
                                 0
                              
                           
                         and 
                           
                              1
                              −
                              
                                 y
                                 s
                                 0
                              
                           
                         respectively to generate a new solution (x
                        0, y
                        1). Note that 
                           
                              f
                              
                                 (
                                 
                                    x
                                    0
                                 
                                 ,
                                 
                                    y
                                    1
                                 
                                 )
                              
                              =
                              f
                              
                                 (
                                 
                                    x
                                    0
                                 
                                 ,
                                 
                                    y
                                    0
                                 
                                 )
                              
                              −
                              
                                 γ
                                 
                                    β
                                    u
                                 
                              
                              
                                 (
                                 
                                    x
                                    0
                                 
                                 )
                              
                              +
                              
                                 ρ
                                 s
                              
                              
                                 (
                                 
                                    y
                                    0
                                 
                                 )
                              
                           
                        . Choose indices u
                        * and 
                           
                              h
                              ∈
                              
                                 T
                                 
                                    u
                                    *
                                 
                              
                           
                         such that

                           
                              (31)
                              
                                 
                                    −
                                    
                                       γ
                                       
                                          β
                                          
                                             u
                                             *
                                          
                                       
                                    
                                    
                                       (
                                       
                                          x
                                          0
                                       
                                       )
                                    
                                    +
                                    
                                       γ
                                       h
                                    
                                    
                                       (
                                       
                                          x
                                          0
                                       
                                       )
                                    
                                    =
                                    
                                       max
                                       
                                          1
                                          ≤
                                          u
                                          ≤
                                          k
                                       
                                    
                                    
                                       {
                                       −
                                       
                                          γ
                                          
                                             β
                                             u
                                          
                                       
                                       
                                          (
                                          
                                             x
                                             0
                                          
                                          )
                                       
                                       +
                                       
                                          max
                                          
                                             j
                                             ∈
                                             
                                                T
                                                u
                                             
                                             ∖
                                             
                                                {
                                                
                                                   β
                                                   u
                                                
                                                }
                                             
                                          
                                       
                                       
                                          γ
                                          j
                                       
                                       
                                          (
                                          
                                             x
                                             0
                                          
                                          )
                                       
                                       }
                                    
                                 
                              
                           
                        
                     

Then, the best swap move for y-variables is obtained by exchanging the values of 
                           
                              y
                              h
                              0
                           
                         and 
                           
                              y
                              
                                 β
                                 
                                    u
                                    *
                                 
                              
                              0
                           
                        . If 
                           
                              max
                              {
                              −
                              
                                 ρ
                                 
                                    α
                                    
                                       r
                                       *
                                    
                                 
                              
                              
                                 (
                                 
                                    y
                                    0
                                 
                                 )
                              
                              +
                              
                                 ρ
                                 t
                              
                              
                                 (
                                 
                                    y
                                    0
                                 
                                 )
                              
                              ,
                              −
                              
                                 γ
                                 
                                    β
                                    
                                       u
                                       *
                                    
                                 
                              
                              
                                 (
                                 
                                    x
                                    0
                                 
                                 )
                              
                              +
                              
                                 γ
                                 h
                              
                              
                                 (
                                 
                                    x
                                    0
                                 
                                 )
                              
                              }
                              ≤
                              0
                           
                         then (x
                        0, y
                        0) is a local maximum with respect to the swap neighborhood. Among the best swap moves for x-variables and y-variables, an overall best swap move can be identified. Thus, given the values of row and column potentials, Eqs. (30) and (31) show that the best swap move can be identified in 
                           
                              O
                              (
                              m
                              +
                              n
                              )
                           
                         time.

Let 
                           
                              (
                              
                                 x
                                 ¯
                              
                              ,
                              
                                 y
                                 ¯
                              
                              )
                           
                         be the solution obtained after the best swap move. If the best move corresponds to x-variables, then we update the row and column potentials as

                           
                              (32)
                              
                                 
                                    
                                       
                                          
                                             
                                                γ
                                                j
                                             
                                             
                                                (
                                                
                                                   x
                                                   ¯
                                                
                                                )
                                             
                                          
                                       
                                       
                                          
                                             =
                                             
                                                γ
                                                j
                                             
                                             
                                                (
                                                
                                                   x
                                                   0
                                                
                                                )
                                             
                                             +
                                             
                                                q
                                                
                                                   t
                                                   j
                                                
                                             
                                             −
                                             
                                                q
                                                
                                                   
                                                      α
                                                      
                                                         r
                                                         *
                                                      
                                                   
                                                   j
                                                
                                             
                                             ,
                                             
                                             for
                                             
                                             j
                                             =
                                             1
                                             ,
                                             2
                                             ,
                                             …
                                             ,
                                             n
                                          
                                       
                                    
                                 
                              
                           
                        
                        
                           
                              (33)
                              
                                 
                                    
                                       
                                          
                                             
                                                ρ
                                                i
                                             
                                             
                                                (
                                                
                                                   y
                                                   ¯
                                                
                                                )
                                             
                                          
                                       
                                       
                                          
                                             =
                                             
                                                ρ
                                                i
                                             
                                             
                                                (
                                                
                                                   y
                                                   0
                                                
                                                )
                                             
                                             ,
                                             
                                             for
                                             
                                             i
                                             =
                                             1
                                             ,
                                             2
                                             ,
                                             …
                                             ,
                                             m
                                          
                                       
                                    
                                 
                              
                           
                        
                     

Similarly, if the best move corresponds to y-variables, then we update the row and column potentials as

                           
                              (34)
                              
                                 
                                    
                                       
                                          
                                             
                                                ρ
                                                i
                                             
                                             
                                                (
                                                
                                                   y
                                                   ¯
                                                
                                                )
                                             
                                          
                                       
                                       
                                          
                                             =
                                             
                                                ρ
                                                i
                                             
                                             
                                                (
                                                
                                                   y
                                                   0
                                                
                                                )
                                             
                                             +
                                             
                                                q
                                                
                                                   i
                                                   h
                                                
                                             
                                             −
                                             
                                                q
                                                
                                                   i
                                                   
                                                      β
                                                      
                                                         u
                                                         *
                                                      
                                                   
                                                
                                             
                                             ,
                                             
                                             for
                                             
                                             i
                                             =
                                             1
                                             ,
                                             2
                                             ,
                                             …
                                             ,
                                             m
                                          
                                       
                                    
                                 
                              
                           
                        
                        
                           
                              (35)
                              
                                 
                                    
                                       
                                          
                                             
                                                γ
                                                j
                                             
                                             
                                                (
                                                
                                                   x
                                                   ¯
                                                
                                                )
                                             
                                          
                                       
                                       
                                          
                                             =
                                             
                                                γ
                                                j
                                             
                                             
                                                (
                                                
                                                   x
                                                   0
                                                
                                                )
                                             
                                             ,
                                             
                                             for
                                             
                                             j
                                             =
                                             1
                                             ,
                                             2
                                             ,
                                             …
                                             ,
                                             n
                                          
                                       
                                    
                                 
                              
                           
                        
                     

Thus, after a move to a new solution, the row and column potentials and other attributes of the solution such as the indices αr, βu
                         etc., can be updated in O(m) or O(n) time, depending on whether the swap operation corresponds to an x variable or a y variable.

Let (x
                        0, y
                        0) be a given solution. Note that two swap operations on y variables, say swap(βu
                        , ℓ) and swap(βv, t) for u ≠ v, are independent in the sense that they can be applied concurrently or one after the other yielding the same solution from (x
                        0, y
                        0). The concurrent-swap neighborhood for y variables, denoted by cswap(y), keeps x variables fixed at x
                        0 and apply swap moves swap(βu
                        , ℓ), for some ℓ ∈ Tu
                        , 
                           
                              u
                              ∈
                              
                                 J
                                 *
                              
                              ⊆
                              
                                 {
                                 1
                                 ,
                                 2
                                 ,
                                 …
                                 ,
                                 k
                                 }
                              
                           
                         to generate a candidate solution in the neighborhood. If 
                           
                              ℓ
                              =
                              
                                 β
                                 u
                              
                           
                         the swap operation is redundant. Note that any feasible value of y can be generated in this way, for fixed 
                           
                              x
                              =
                              
                                 x
                                 0
                              
                           
                        . There are 
                           
                              
                                 ∏
                                 
                                    u
                                    =
                                    1
                                 
                                 k
                              
                              
                                 |
                                 
                                    T
                                    u
                                 
                                 |
                              
                           
                         choices for y and hence the size of this neighborhood is 
                           
                              
                                 ∏
                                 
                                    u
                                    =
                                    1
                                 
                                 k
                              
                              
                                 |
                                 
                                    T
                                    u
                                 
                                 |
                              
                           
                        . Given the row and column potentials corresponding to (x
                        0, y
                        0), a best solution in the cswap(y) neighborhood, say 
                           
                              
                                 y
                                 1
                              
                              =
                              
                                 (
                                 
                                    y
                                    1
                                 
                                 ,
                                 
                                    y
                                    2
                                    2
                                 
                                 ,
                                 …
                                 ,
                                 
                                    y
                                    n
                                    1
                                 
                                 )
                              
                              ,
                           
                         can be identified in O(n) time using the closed form expression

                           
                              (36)
                              
                                 
                                    
                                       
                                          
                                             
                                                y
                                                j
                                                1
                                             
                                             =
                                             
                                                {
                                                
                                                   
                                                      
                                                         1
                                                      
                                                      
                                                         
                                                            if
                                                            
                                                            j
                                                            =
                                                            
                                                               β
                                                               u
                                                            
                                                            ,
                                                            u
                                                            =
                                                            1
                                                            ,
                                                            2
                                                            ,
                                                            …
                                                            k
                                                            ,
                                                         
                                                      
                                                   
                                                   
                                                      
                                                         0
                                                      
                                                      
                                                         otherwise.
                                                      
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           
                        where the index βu
                         is given by

                           
                              (37)
                              
                                 
                                    
                                       γ
                                       
                                          β
                                          u
                                       
                                    
                                    
                                       (
                                       
                                          x
                                          0
                                       
                                       )
                                    
                                    =
                                    
                                       max
                                       
                                          j
                                          ∈
                                          
                                             T
                                             u
                                          
                                       
                                    
                                    
                                       γ
                                       j
                                    
                                    
                                       (
                                       
                                          x
                                          0
                                       
                                       )
                                    
                                    ,
                                    u
                                    =
                                    1
                                    ,
                                    2
                                    ,
                                    …
                                    ,
                                    k
                                    .
                                 
                              
                           
                        
                     

After moving to the solution (x
                        0, y
                        1), we need to calculate the row potentials ρi
                        (y
                        1) corresponding to this solution. Let

                           
                              
                                 
                                    
                                       Δ
                                       +
                                    
                                    
                                       (
                                       
                                          y
                                          1
                                       
                                       )
                                    
                                    =
                                    
                                       {
                                       j
                                       :
                                       
                                          y
                                          j
                                          0
                                       
                                       =
                                       0
                                       ,
                                       
                                          y
                                          j
                                          1
                                       
                                       =
                                       1
                                       }
                                    
                                    
                                    and
                                    
                                    
                                       Δ
                                       −
                                    
                                    
                                       (
                                       
                                          y
                                          1
                                       
                                       )
                                    
                                    =
                                    
                                       {
                                       j
                                       :
                                       
                                          y
                                          j
                                          0
                                       
                                       =
                                       1
                                       ,
                                       
                                          y
                                          j
                                          1
                                       
                                       =
                                       0
                                       }
                                    
                                    .
                                 
                              
                           
                        Note that 
                           
                              
                                 |
                              
                              
                                 Δ
                                 +
                              
                              
                                 (
                                 
                                    y
                                    1
                                 
                                 )
                              
                              
                                 |
                                 =
                                 |
                              
                              
                                 Δ
                                 −
                              
                              
                                 (
                                 
                                    y
                                    1
                                 
                                 )
                              
                              
                                 |
                                 ≤
                                 k
                              
                           
                        . Then the column potentials remain unchanged and the row potentials with respect to y
                        1 can be updated as

                           
                              (38)
                              
                                 
                                    
                                       ρ
                                       i
                                    
                                    
                                       (
                                       
                                          y
                                          1
                                       
                                       )
                                    
                                    =
                                    
                                       ρ
                                       i
                                    
                                    
                                       (
                                       
                                          y
                                          0
                                       
                                       )
                                    
                                    −
                                    
                                       ∑
                                       
                                          j
                                          ∈
                                          
                                             Δ
                                             −
                                          
                                          
                                             (
                                             
                                                y
                                                1
                                             
                                             )
                                          
                                       
                                    
                                    
                                       q
                                       
                                          i
                                          j
                                       
                                    
                                    +
                                    
                                       ∑
                                       
                                          j
                                          ∈
                                          
                                             Δ
                                             +
                                          
                                          
                                             (
                                             
                                                y
                                                1
                                             
                                             )
                                          
                                       
                                    
                                    
                                       q
                                       
                                          i
                                          j
                                       
                                    
                                    ,
                                    i
                                    =
                                    1
                                    ,
                                    2
                                    ,
                                    …
                                    ,
                                    m
                                    .
                                 
                              
                           
                        The sets 
                           
                              
                                 Δ
                                 −
                              
                              
                                 (
                                 
                                    y
                                    1
                                 
                                 )
                              
                           
                         and 
                           
                              
                                 Δ
                                 +
                              
                              
                                 (
                                 
                                    y
                                    1
                                 
                                 )
                              
                           
                         can be constructed in O(k) time. Thus ρi
                        (y
                        1) for 
                           
                              i
                              =
                              1
                              ,
                              2
                              ,
                              …
                              ,
                              m
                           
                         can be identified in 
                           
                              O
                              (
                              k
                              +
                              |
                              
                                 Δ
                                 +
                              
                              
                                 (
                                 
                                    y
                                    1
                                 
                                 )
                              
                              |
                              m
                              )
                           
                         time.

Similarly, the concurrent-swap neighborhood for x variables, denoted by cswap(x), keeps y variables fixed at y
                        0 and apply the swap(αr, t) move for some t ∈ Sr
                        , for each 
                           
                              r
                              ∈
                              
                                 I
                                 *
                              
                              ⊆
                              
                                 {
                                 1
                                 ,
                                 2
                                 ,
                                 …
                                 ,
                                 p
                                 }
                              
                           
                         to generate a candidate solution in the neighborhood. If 
                           
                              
                                 α
                                 r
                              
                              =
                              t
                           
                         for any r, the corresponding swap is redundant. Note that any feasible value of x can be generated in this way, for fixed 
                           
                              y
                              =
                              
                                 y
                                 0
                              
                           
                        . There are 
                           
                              
                                 ∏
                                 
                                    r
                                    =
                                    1
                                 
                                 p
                              
                              
                                 |
                                 
                                    S
                                    r
                                 
                                 |
                              
                           
                         choices for x and hence the size of the cswap(x) neighborhood is 
                           
                              
                                 ∏
                                 
                                    r
                                    =
                                    1
                                 
                                 p
                              
                              
                                 |
                                 
                                    S
                                    r
                                 
                                 |
                              
                           
                        . Given the row and column potentials corresponding to (x
                        0, y
                        0), the best solution in cswap(x), say (x
                        1, y
                        0), among these possibly exponential number of choices can be identified in O(m) time using the closed form expression

                           
                              (39)
                              
                                 
                                    
                                       
                                          
                                             
                                                x
                                                i
                                                1
                                             
                                             =
                                             
                                                {
                                                
                                                   
                                                      
                                                         1
                                                      
                                                      
                                                         
                                                            if
                                                            
                                                            i
                                                            =
                                                            
                                                               α
                                                               r
                                                            
                                                            ,
                                                            r
                                                            =
                                                            1
                                                            ,
                                                            2
                                                            ,
                                                            …
                                                            p
                                                            ,
                                                         
                                                      
                                                   
                                                   
                                                      
                                                         0
                                                      
                                                      
                                                         otherwise.
                                                      
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           
                        where the index ir
                         is given by

                           
                              (40)
                              
                                 
                                    
                                       ρ
                                       
                                          α
                                          r
                                       
                                    
                                    
                                       (
                                       
                                          y
                                          1
                                       
                                       )
                                    
                                    =
                                    
                                       max
                                       
                                          i
                                          ∈
                                          
                                             S
                                             r
                                          
                                       
                                    
                                    
                                       ρ
                                       i
                                    
                                    
                                       (
                                       
                                          y
                                          1
                                       
                                       )
                                    
                                    ,
                                    r
                                    =
                                    1
                                    ,
                                    2
                                    ,
                                    …
                                    ,
                                    p
                                    .
                                 
                              
                           
                        
                     

After moving to the solution (x
                        1, y
                        0), we need to compute the column potentials corresponding to this solution. Let

                           
                              
                                 
                                    
                                       Λ
                                       +
                                    
                                    
                                       (
                                       
                                          x
                                          1
                                       
                                       )
                                    
                                    =
                                    
                                       {
                                       i
                                       :
                                       
                                          x
                                          i
                                          0
                                       
                                       =
                                       0
                                       ,
                                       
                                          x
                                          i
                                          1
                                       
                                       =
                                       1
                                       }
                                    
                                    
                                    and
                                    
                                    
                                       Λ
                                       −
                                    
                                    
                                       (
                                       
                                          x
                                          1
                                       
                                       )
                                    
                                    =
                                    
                                       {
                                       i
                                       :
                                       
                                          x
                                          i
                                          0
                                       
                                       =
                                       1
                                       ,
                                       
                                          x
                                          i
                                          1
                                       
                                       =
                                       0
                                       }
                                    
                                    .
                                 
                              
                           
                        Note that 
                           
                              
                                 |
                              
                              
                                 Λ
                                 +
                              
                              
                                 (
                                 
                                    x
                                    1
                                 
                                 )
                              
                              
                                 |
                                 =
                                 |
                              
                              
                                 Λ
                                 −
                              
                              
                                 (
                                 
                                    x
                                    1
                                 
                                 )
                              
                              
                                 |
                                 ≤
                                 p
                              
                           
                        . Then the column potentials with respect to x
                        1 can be updated as

                           
                              (41)
                              
                                 
                                    
                                       γ
                                       j
                                    
                                    
                                       (
                                       
                                          x
                                          1
                                       
                                       )
                                    
                                    =
                                    
                                       γ
                                       j
                                    
                                    
                                       (
                                       
                                          x
                                          0
                                       
                                       )
                                    
                                    −
                                    
                                       ∑
                                       
                                          i
                                          ∈
                                          
                                             Λ
                                             −
                                          
                                          
                                             (
                                             
                                                x
                                                1
                                             
                                             )
                                          
                                       
                                    
                                    
                                       q
                                       
                                          i
                                          j
                                       
                                    
                                    +
                                    
                                       ∑
                                       
                                          i
                                          ∈
                                          
                                             Λ
                                             +
                                          
                                          
                                             (
                                             
                                                x
                                                1
                                             
                                             )
                                          
                                       
                                    
                                    
                                       q
                                       
                                          i
                                          j
                                       
                                    
                                    ,
                                    j
                                    =
                                    1
                                    ,
                                    2
                                    ,
                                    …
                                    ,
                                    n
                                    .
                                 
                              
                           
                        The sets 
                           
                              
                                 Λ
                                 −
                              
                              
                                 (
                                 
                                    x
                                    1
                                 
                                 )
                              
                           
                         and 
                           
                              
                                 Λ
                                 +
                              
                              
                                 (
                                 
                                    x
                                    1
                                 
                                 )
                              
                           
                         can be constructed in O(p) time. Thus γj
                        (x
                        1) for 
                           
                              j
                              =
                              1
                              ,
                              2
                              ,
                              …
                              ,
                              n
                           
                         can be identified in 
                           
                              O
                              (
                              p
                              +
                              |
                              
                                 Λ
                                 +
                              
                              
                                 (
                                 
                                    x
                                    1
                                 
                                 )
                              
                              |
                              n
                              )
                           
                         time.

The concurrent-swap neighborhood is the compound neighborhood given by cswap(x)∪cswap(y). A best solution in this neighborhood is either (x
                        0, y
                        1) or (x
                        1, y
                        0), whichever has the largest objective function value. Such a solution will be no worse than 
                           
                              
                                 ∏
                                 
                                    u
                                    =
                                    1
                                 
                                 k
                              
                              
                                 |
                              
                              
                                 T
                                 u
                              
                              
                                 |
                                 +
                              
                              
                                 ∏
                                 
                                    r
                                    =
                                    1
                                 
                                 p
                              
                              
                                 |
                                 
                                    S
                                    r
                                 
                                 |
                              
                           
                         alternative solutions. Thus based on the foregoing discussions, a best solution in this neighborhood can be identified in 
                           
                              O
                              (
                              |
                              
                                 Λ
                                 +
                              
                              
                                 (
                                 
                                    x
                                    1
                                 
                                 )
                              
                              |
                              n
                              +
                              |
                              
                                 Δ
                                 +
                              
                              
                                 (
                                 
                                    y
                                    1
                                 
                                 )
                              
                              |
                              m
                              )
                           
                         time.

The neighborhood graph of the concurrent-swap neighborhood is connected and has diameter 2. i.e. transition from one solution to another solution in the solution space of BQP-PV can be achieved by at most two concurrent-swap moves: one cswap(x) move followed by a cswap(y) move or viceversa. The swap neighborhood and concurrent swap neighborhood are equivalent in the sense that a solution (x
                        0, y
                        0) is locally optimal with respect to the swap neighborhood if and only if it is locally optimal with respect to the concurrent-swap neighborhood. However we treat these neighborhood differently because of the possibility of mixing moves based on x variables and y variables that alters the search path and hence diversify the search.

As noted earlier, given a feasible value x
                        0 of x, we can compute the best value of the y variables in linear time when x is fixed at x
                        0 and viceversa. Thus it is enough to maintain the values of the x variables and assume that the corresponding y values are ‘optimized’ for the given x. Such a representation is called the optimized representation of x variables. Likewise, we can maintain y values only with the assumption that the corresponding x values are optimized for the given y. We call this the optimized representation of y variables. A swap operation on an optimized representation of x is denoted by oswapx(αr, i) which interchanges the value of 
                           
                              x
                              
                                 α
                                 r
                              
                           
                         with that of xi
                         for some i ∈ Sr
                         to obtain the solution 
                           
                              x
                              ¯
                           
                         and update the corresponding y as the optimal selection when x is fixed at 
                           
                              x
                              ¯
                           
                        . Unlike the swap neighborhood, two optimized swap operations, oswapx(αr, i) and oswapx(αs, t), s ≠ r, are not independent since they indirectly affects the y variables as well. Similarly, a swap operation on an optimized representation of y, denoted by oswapy(βu, j), interchanges the value of 
                           
                              y
                              
                                 β
                                 u
                              
                           
                         with that of yj
                         for some j ∈ Tu
                         to obtain the solution 
                           
                              y
                              ¯
                           
                         and update the corresponding x as the optimal selection when y is fixed at 
                           
                              y
                              ¯
                           
                        . Again, unlike the swap neighborhood for y variables, two optimized swap operations on these variables, oswapy(βu, j
                        1) and oswapy(βv, j
                        2), u ≠ v, are not independent since they indirectly affect the values of x variables as well.

The best oswapx(., .) and oswapy(., .) moves can be identified efficiently by combining the ideas and data representation discussed in the case of swap neighborhoods and concurrent swap neighborhoods. The details are omitted. Since for each trial oswapx(., .) move (oswapy(., .) move) examined, optimized y values ((x) values) need to be constructed, to evaluate the corresponding gain. This results in the worst case complexity of 
                           
                              O
                              (
                              min
                              {
                              m
                              n
                              ,
                              (
                              m
                              k
                              +
                              n
                              p
                              )
                              k
                              p
                              }
                              )
                           
                         per iteration. Thus optimized swap moves are expensive compared to the swap move and concurrent swap move. In practice however, the average complexity is significantly less since most of the time, the number of components in which an optimized y variables (optimized x variables) differ from their previous values is considerably small and this can be exploited by careful implementation.

It can be verified that the size of the optimized swap neighborhood is at least 
                           
                              
                                 (
                                 m
                                 −
                                 p
                                 )
                              
                              
                                 ∏
                                 
                                    u
                                    =
                                    1
                                 
                                 k
                              
                              
                                 |
                              
                              
                                 T
                                 u
                              
                              
                                 |
                                 +
                                 
                                    (
                                    n
                                    −
                                    k
                                    )
                                 
                              
                              
                                 ∏
                                 
                                    r
                                    =
                                    1
                                 
                                 p
                              
                              
                                 |
                                 
                                    S
                                    r
                                 
                                 |
                              
                           
                        .

Let us now discuss our heuristic algorithms using the neighborhoods discussed above. All our algorithms use the standard framework of local search and tabu search with multi-start to diversify the search path. Such ideas have been tested extensively in the literature for various combinatorial optimization problems. However, our contribution here is the novelty of our two exponential neighborhoods and the way in which the neighborhoods are used in developing local search algorithms that exploit the problem structure. Extensive experimental analysis has been carried out to compare specific implementations that we have developed. This also provided additional insights into the structure of the problem. Since this is the first experimental study on this problem, we believe that our analysis will inspire other researchers for follow up works on the topic.
                     
                  

To develop a test bed for our experimental analysis, we used the data set of Karapetyan and Punnen (2012) developed for unconstrained bipartite binary quadratic programs and modified it by generating random partitions of the decision variables to get BQP-PV instances. The specific parameter settings for the instances we used are given below:

                        
                           •
                           
                              Random Problems: In this category, we set qij, ci
                               and dj
                               for 
                                 
                                    i
                                    =
                                    1
                                    ,
                                    2
                                    ,
                                    …
                                    ,
                                    m
                                    ,
                                 
                              
                              
                                 
                                    j
                                    =
                                    1
                                    ,
                                    2
                                    ,
                                    …
                                    ,
                                    n
                                 
                               are normally distributed random integers with mean 
                                 
                                    μ
                                    =
                                    0
                                 
                               and standard deviation 
                                 
                                    σ
                                    =
                                    100
                                 
                              .


                              Max Biclique instances: These instances are generated using a random bipartite graph 
                                 
                                    G
                                    =
                                    (
                                    
                                       V
                                       1
                                    
                                    ,
                                    
                                       V
                                       2
                                    
                                    ,
                                    E
                                    )
                                 
                               with 
                                 
                                    
                                       V
                                       1
                                    
                                    =
                                    
                                       {
                                       1
                                       ,
                                       2
                                       ,
                                       …
                                       ,
                                       m
                                       }
                                    
                                 
                               and 
                                 
                                    
                                       V
                                       2
                                    
                                    =
                                    
                                       {
                                       1
                                       ,
                                       2
                                       ,
                                       …
                                       ,
                                       n
                                       }
                                    
                                 
                              . For each edge (i, j) in G, a weight wij
                               is prescribed. The wij
                               values are drawn from a normal distribution with mean 
                                 
                                    μ
                                    =
                                    100
                                 
                               and standard deviation 
                                 
                                    σ
                                    =
                                    100
                                 
                              . If (i, j) is an edge in G, then we set 
                                 
                                    
                                       q
                                       
                                          i
                                          j
                                       
                                    
                                    =
                                    
                                       w
                                       
                                          i
                                          j
                                       
                                    
                                    ,
                                 
                               otherwise qij
                               is set to 
                                 
                                    −
                                    M
                                 
                               where M is a large positive number. The vectors c and d are chosen as zero vectors.


                              Max Induced Subgraph instances: These instances are also generated using a random bipartite graph 
                                 
                                    G
                                    =
                                    (
                                    
                                       V
                                       1
                                    
                                    ,
                                    
                                       V
                                       2
                                    
                                    ,
                                    E
                                    )
                                 
                               with 
                                 
                                    
                                       V
                                       1
                                    
                                    =
                                    
                                       {
                                       1
                                       ,
                                       2
                                       ,
                                       …
                                       ,
                                       m
                                       }
                                    
                                 
                               and 
                                 
                                    
                                       V
                                       2
                                    
                                    =
                                    
                                       {
                                       1
                                       ,
                                       2
                                       ,
                                       …
                                       ,
                                       n
                                       }
                                    
                                 
                              . The edge weights wij
                               are chosen exactly as in the case of Max Biclique instances. If (i, j) is an edge in G, then we set 
                                 
                                    
                                       q
                                       
                                          i
                                          j
                                       
                                    
                                    =
                                    
                                       w
                                       
                                          i
                                          j
                                       
                                    
                                    ,
                                 
                               otherwise qij
                               is set to 0.


                              Max Cut instances: These instances are also generated using a random bipartite graph 
                                 
                                    G
                                    =
                                    (
                                    
                                       V
                                       1
                                    
                                    ,
                                    
                                       V
                                       2
                                    
                                    ,
                                    E
                                    )
                                 
                               with 
                                 
                                    
                                       V
                                       1
                                    
                                    =
                                    
                                       {
                                       1
                                       ,
                                       2
                                       ,
                                       …
                                       ,
                                       m
                                       }
                                    
                                 
                               and 
                                 
                                    
                                       V
                                       2
                                    
                                    =
                                    
                                       {
                                       1
                                       ,
                                       2
                                       ,
                                       …
                                       ,
                                       n
                                       }
                                    
                                 
                              . The edge weights wij
                               are chosen exactly as in the case of Max Biclique instances. If (i, j) is an edge in G, then we set 
                                 
                                    
                                       q
                                       
                                          i
                                          j
                                       
                                    
                                    =
                                    −
                                    2
                                    
                                       w
                                       
                                          i
                                          j
                                       
                                    
                                    ,
                                 
                               otherwise qij
                               is set to 0. Also, we set 
                                 
                                    
                                       c
                                       i
                                    
                                    =
                                    
                                       Σ
                                       
                                          j
                                          =
                                          1
                                       
                                       n
                                    
                                    
                                       w
                                       
                                          i
                                          j
                                       
                                    
                                 
                               and 
                                 
                                    
                                       d
                                       j
                                    
                                    =
                                    
                                       Σ
                                       
                                          i
                                          =
                                          1
                                       
                                       m
                                    
                                    
                                       w
                                       
                                          i
                                          j
                                       
                                    
                                 
                              .


                              Matrix Factorization Problems: These instances are also generated using a random binary matrix 
                                 
                                    H
                                    =
                                    (
                                    
                                       h
                                       
                                          i
                                          j
                                       
                                    
                                    )
                                 
                               where each entry has probability 0.5 to receive a value 1 or 0. Then, we set 
                                 
                                    
                                       q
                                       
                                          i
                                          j
                                       
                                    
                                    =
                                    1
                                    −
                                    2
                                    
                                       h
                                       
                                          i
                                          j
                                       
                                    
                                    ,
                                 
                               and c and d are chosen as zero vectors.

For each class of the benchmark problems discussed above, we generated 5 medium size instances with 
                        
                           m
                           =
                           200
                           ,
                           400
                           ,
                           600
                           ,
                           800
                           ,
                           1000
                        
                      and 
                        
                           n
                           =
                           1000
                        
                      and 5 large size instances with 
                        
                           m
                           =
                           1000
                           ,
                           2000
                           ,
                           3000
                           ,
                           4000
                           ,
                           5000
                        
                      and 
                        
                           n
                           =
                           5000
                        
                     . Then we introduced random partitions of 
                        
                           I
                           =
                           {
                           1
                           ,
                           2
                           ,
                           …
                           ,
                           m
                           }
                        
                      and 
                        
                           J
                           =
                           {
                           1
                           ,
                           2
                           ,
                           …
                           ,
                           n
                           }
                        
                      to generate the sets 
                        
                           
                              S
                              1
                           
                           ,
                           
                              S
                              2
                           
                           ,
                           …
                           ,
                           
                              S
                              p
                           
                        
                      and 
                        
                           
                              T
                              1
                           
                           ,
                           
                              T
                              2
                           
                           ,
                           …
                           ,
                           
                              T
                              p
                           
                           ,
                        
                      respectively to obtain instances of BQP-PV. More precisely, for each (m, n) pair selected, p is set to 20, 40, 60, 80, 100 and k is set to 100. Then, the size of the subsets 
                        
                           
                              S
                              r
                           
                           ,
                           r
                           =
                           1
                           ,
                           2
                           ,
                           …
                           ,
                           p
                           −
                           1
                        
                      are selected as a random integer in the range [0.8 m/p, 1.2 m/p]. The first |S
                     1| elements of I are assigned to S
                     1, the next |S
                     2| elements are assigned to S
                     2 and so on. After building 
                        
                           p
                           −
                           1
                        
                      sets, we choose Sp
                      to include all the remaining elements of I. The sets 
                        
                           
                              T
                              1
                           
                           ,
                           
                              T
                              2
                           
                           ,
                           …
                           ,
                           
                              T
                              k
                           
                        
                      are constructed in an analogous way, where |Tu
                     | is chosen as a random integer in the range [0.8 n/k, 1.2 n/k]. All the algorithms in our experiments were coded in C++ and compiled using the GNU g++ compiler on a Linux workstation with an Intel Xeon E5440 2.83GHz CPU and 8GB RAM.

To assess the relative power of the swap neighborhood, concurrent swap neighborhood, and the optimized swap neighborhood, we performed preliminary tests using random instances using the best improving local search framework. The search path is diversified using 10 multi starts with random starting solutions. The results are summarized in Tables 1, 2, and 3
                        .

The quality of the local maximum obtained by optimized swap is better than that of the swap neighborhood or the concurrent swap neighborhood. However the computational time for our local search algorithm with the optimized swap neighborhood (OSLS) is much larger. This prompted us to the possibility of using the optimized swap neighborhood as a “cutting neighborhood” within a variable neighborhood search (Hansen & Mladenović, 2001; Mladenović & Hansen, 1997) framework. More precisely, when the local search algorithm with swap or concurrent swap neighborhood reaches a local optimum, we employ the optimized swap neighborhood to move out of the local optimum. If it finds an improved solution, we go back to the original neighborhood and local search is continued. If the optimized swap neighborhood cannot improve the current local optimum, the local search is terminated and we restart the search with another random starting solution. This type of local search that combines swap and optimized swap neighborhoods is called swap-optimized swap variable neighborhood search (S-OS-VNS). Similarly, the local search algorithm that combines concurrent swap and optimized swap neighborhoods as discussed above is called concurrent swap-optimized swap variable neighborhood search (CS-OS-VNS). We observed that for these hybrid algorithms computational time is reduced by a factor of approximately 5 for large instances in comparison to OSLS while retaining the quality of the optimized swap solutions. In Tables 4
                         and 5
                        
                         we present experimental results for the algorithms OSLS, S-OS-VNS, and CS-OS-VNS by fixing their computational time to 10 minutes for medium instances and 60 minutes for large instances. For each problem size, 10 different problems are generated and the average, minimum, and maximum values of the objective function over 20 runs and number of iterations are noted. The focus of this experiment is to study the relative solution quality of the algorithms when running time is fixed. In the tables, the column ’time’ refers to the CPU time taken to reach the best solution.
                        
                     

We applied the Wilcoxon nonparametric statistical test on the data generated by the algorithms S-OS-VNS, CS-OS-VNS and OSLS to verify the observed differences in terms of solution quality are statistically significant. All three variants performed well for the medium instances. However, for the large instances, the p-values obtained by Wilcoxon tests for S-OS-VNS versus OSLS, and CS-OS-VNS versus OSLS are 0.003504 and 0.01647, respectively. This indicates that both S-OS-VNS and CS-OS-VNS are significantly better than OSLS in terms of the average solution quality and demonstrates the effectiveness of the neighborhood combination for the challenging instances. In addition, no significant difference have been noted comparing S-OS-VNS versus CS-OS-VNS.

Multi-start provides reasonable diversification of the search path for local search algorithms and it is one of the mechanisms used by researchers to explore various regions of the solution space. It is well known that examining the neighboring region of a local optimum could lead to good quality solutions. To achieve this, we have implemented tabu search (Benlic & Hao, 2013; Glover & Hao, 2010; Glover, Kochenberger, & Alidaee, 1998; Glover, Laguna, & Publishers, 1997; Lü, Glover, & Hao, 2010; Wang, Lu, Glover, & Hao, 2012) enhancements to our local search algorithms. Our swap tabu search algorithm (STS) implements a simple tabu search framework using the swap neighborhood. Tabu conditions are enforced by prohibiting reversal of a swap operation for a fixed time-period (tabu tenure). Specifically, once a swap move (
                           
                              
                                 x
                                 
                                    α
                                    r
                                 
                              
                              ,
                              
                                 x
                                 i
                              
                           
                        ) is performed (resulting in 
                           
                              
                                 x
                                 i
                              
                              =
                              1
                           
                         and 
                           
                              
                                 x
                                 
                                    α
                                    r
                                 
                              
                              =
                              0
                           
                        ), the variable xi
                         is prohibited from being assigned with value 0 for t
                        0 ∈ [25, 40] iterations, and 
                           
                              x
                              
                                 α
                                 r
                              
                           
                         is prohibited from being assigned with value 1 for 
                           
                              
                                 t
                                 1
                              
                              =
                              
                                 t
                                 0
                              
                              *
                              
                                 (
                                 
                                    (
                                    m
                                    +
                                    n
                                    )
                                 
                                 /
                                 
                                    (
                                    K
                                    +
                                    L
                                    )
                                 
                                 −
                                 1
                                 )
                              
                           
                         iterations. The asymmetry of tabu tenure values t
                        0 and t
                        1 is attributed to the significant differences in the number of 0-values versus the number of 1-values in a feasible solution. A move is considered tabu if both variables involved in the swap move have tabu status. We also used the aspiration condition (Glover et al., 1997) that a move which is “better than best found solution so far” overrides tabu conditions, if any. Further, we set an upper limit α on the number of consecutive moves that does not improve the best solution found so far. Once this limit is reached, the algorithm restarts with another random starting solution.

To further enhance this basic tabu search, we used the optimized swap neighborhood as follows: In STS, if the best known solution x
                        1 is not improved for α consecutive iterations, we start a local search using the optimized swap neighborhood with the best solution x
                        1 as the starting solution, leading to a new local optimum x
                        2. If the objective function value of x
                        2 is better than that of x
                        1, then we switch to STS with x
                        2 being the starting solution. Otherwise, we restart STS with a new random solution. We call this the STS-OSLS hybrid algorithm (STS-OSLS). If we perform one iteration of OSLS instead of the full OSLS local search as in STS-OSLS, we get another variation of the tabu search algorithm which we call the STS-OS hybrid algorithm (STS-OS). Since all the algorithms we evaluate are already shown, we summarize the main ingredients of them in Table 6.

The Wilcoxon nonparametric statistical test was used for results on Tables 7 and 8 to quantify the relative differences between the performances of STS, STS-OSLS and STS-OS algorithms in terms of solution quality. All the three algorithms performed well for the medium size instances and showed little differences in solution quality. However, for the large size instances, the p-values obtained by Wilcoxon tests for STS versus STS-OSLS and STS versus STS-OS are 0.01174 and 0.04189, respectively. This indicates that both STS-OSLS and STS-OS are significantly better than STS in terms of the average solution quality and demonstrates the efficacy of the hybrid algorithms using different neighborhoods. In addition, no significant difference in performance was observed in testing STS-OSLS against STS-OS.

Further, the Wilcoxon test comparing S-OS-VNS versus STS-OSLS and S-OS-VNS versus STS-OS in terms of the average solution quality results in p-values of 0.002653 and 0.00207, respectively for large size instances and 0.0007068 and 0.0005847, respectively for medium size instances. This demonstrates the superiority of the tabu search enhancement.


                        Tables 9
                         and 10
                         provide comparative performance of the six winning algorithms emerged from our study. The tables summarize the instance ID and the best found objective function value. For the medium instances, both STS-OSLS and STS-OS are able to reach the best objective function values for all the 25 instances. STS performs slightly worse, failing to reach the best objective value for 1 instance. The algorithms S-OS-VNS, CS-OS-VNS and CSLS that exclude the tabu search enhancement, obtain the best objective values for 16, 14 and 16 instances, respectively. For the large size instances, STS-OSLS delivers the best performance by reaching the best objective values for 14 instances.

@&#CONCLUSION@&#

We introduced a new combinatorial optimization model that subsumes the well known quadratic assignment problem. Three neighborhood structures are introduced that exploit the bipartite nature of variables. Two of these neighborhoods are of exponential size and all neighborhoods can be searched for a best improving solution in polynomial time. The neighborhoods are embedded within local search, tabu search, and variable neighborhood search frameworks to obtain efficient algorithms. A Multi-starts strategy is used for diversification of search paths. Although such algorithmic strategies were tested extensively for various combinatorial optimization problems in the past, their efficacy and relative merits in solving BQP-PV were not studied before. Our experimental analysis disclosed several properties that are difficult to establish using theoretical analysis. In particular, we observed that the algorithms that combine tabu search based on simple swap neighborhood with powerful exponential neighborhoods as ‘cutting neighborhoods’ (STS-OSLS, STS-OS-STS) performed exceptionally well. None of the neighborhood worked in isolation could outperform such hybrid algorithms. Computational comparisons with CPLEX 12.5 solver show that our algorithms produced better solutions compared to the best solution produced by CPLEX, even by allowing twice the running time. We also established some complexity results and identified polynomially solvable special cases.

We believe that our work will inspire many researchers to explore further on this versatile combinatorial optimization model from algorithmic as well as theoretical points of view.

@&#ACKNOWLEDGMENT@&#

We are thankful to the reviewers and the editor for helpful comments which improved the presentation of the paper. This work is supported by National Natural Science Foundation of China (Grant no. 71501157) and Northwestern Polytechnical University (Grant no. 15GH0312, 3102015RW007, W016233).

@&#REFERENCES@&#

