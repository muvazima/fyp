@&#MAIN-TITLE@&#Stable and fast techniques for unambiguous compound phase coding

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           We propose a novel phase coding schema for structured light applications.


                        
                        
                           
                           Our approach is accurate and robust to noise even with few projected patterns.


                        
                        
                           
                           The trade-off between accuracy and number of patterns can be adjusted.


                        
                        
                           
                           Results are validated by an extensive set of experiments.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Structured light

3D reconstruction

Phase shift

@&#ABSTRACT@&#


               Graphical abstract
               
                  
                     
                        
                           
                        
                     
                  
               
            

@&#INTRODUCTION@&#

The main challenge for any triangulation-based surface reconstruction technique is the assignment of reliable correspondences between features observed by two or more different points of view. Given the central role of this problem, many and diverse strategies have been proposed in literature over the past few decades [1]. When a sparse reconstruction is adequate, correspondences can be searched and tracked among repeatable features readily present in the scene, such as corners or edges. Unfortunately, in general it is not possible to guarantee that the same features are extracted from each image, or that the feature density is sufficient. Hence, complementary techniques, usually based on photometric correlation, are used to obtain an approximate reconstruction of the scene depth map. Other systems overcome these limitations as they do not rely on natural features, but instead use projected patterns of light in order to find correspondences that are usually as dense as the pixels of each image [2]. Such techniques can be much more accurate than feature-based approaches and have received particular attention from scientific and engineering communities in the fields of optics, metrology and computer science. Further, structured light approaches can be used almost unchanged in single camera systems, by calibrating the camera and the projector.

The main idea behind 3D reconstruction based on projected light is that of assigning unique codes to surface points by modulating the intensity of a light projected onto the object. These codes are used to extract correspondences between points in different views, which can then be triangulated to obtain depth estimates. To this end, several patterns are projected onto the scene in such a way that each point has a unique sequence of intensity values. These sequences are then decoded to obtain the point's identity. The main issue in structured light approaches is the design of projection schemes that allow for robust and precise decoding, possibly with subpixel accuracy, using the smallest number of patterns possible while still guaranteeing reliable measurements. Such an endeavor has direct application in scenarios were fast or even real-time acquisition is needed.

In this work we propose novel coding strategies that encode point location with subpixel accuracy. To this end we split the encoding and decoding phases into two steps: the first, called phase coding/decoding, maps the projector coordinate into a vector of values each with limited range, and the second, called pattern generation, encodes the vectorial phase values onto physical quantities of the projected patterns.

Phase coding strategies map the projector coordinate u into several wrapped phase values ϕ
                     
                        i
                     (u)∈[02π) quantized into λ
                     
                        i
                      angular values. The coding strategy has to be invertible so that the projector coordinate can be recovered uniquely from the phase vector 
                        
                           
                              ϕ
                              →
                           
                           
                              u
                           
                           =
                           
                              
                                 
                                    ϕ
                                    1
                                 
                                 
                                    u
                                 
                                 ,
                                 …
                                 ,
                                 
                                    ϕ
                                    n
                                 
                                 
                                    u
                                 
                              
                           
                        
                     ; further, in order to extract correspondences with subpixel precision, the map must be continuous, i.e., it should be able to encode and uniquely decode non-integral projector coordinates. On the other hand, the pattern generation step encodes the phase vector 
                        
                           
                              ϕ
                              →
                           
                           
                              u
                           
                        
                      as observable physical quantities of the time series f
                     
                        u
                     (t) of the projected light intensity.

The contribution of this paper is twofold. First, we propose and analyze two novel pattern generation methods (compound and subpattern) that allow to significantly reduce the number of projected patterns. Both schemes encode the phase vector as phases in a time-varying sinusoidal pattern: One simply encodes each coordinate in a separate subsampled sine wave, while the other encodes the whole vector as phases of the Fourier transform of the time-varying pattern. The second contribution is the introduction of a novel encoding technique which adopts a fine-to-coarse strategy allowing for smaller quantization at the fine level to increase precision, and larger quantization at the coarse level to reduce the total number of phases to be encoded. With the addition of a coding strategy derived from [3], we analyze a total of four different encoding schemes. Fig. 1
                      shows examples of the patterns generated with the four schemes. The two rows show the pattern generation methods, while the columns show the coding strategies, with number-theoretic referring to the scheme derived from [3], and algebraic the newly proposed scheme.

The number-theoretic scheme presented in [3] uses period co-primality to map the phase vector onto a larger linear range. In particular, it projects sinusoidal patterns whose wavelengths are mutually co-prime, thereby allowing to deduce the overall position from the detected remainders. For example, we can encode 990 projector columns with three sinusoidal patterns of periods 9, 10, and 11 respectively. This way, column 382 will be encoded as phase 382mod 9=4 on the first sinusoid, phase 382mod 10=2 on the second, and phase 382mod 11=8 on the last sinusoidal wave.

The algebraic approach we are proposing, on the other hand, adopts a hierarchical fine-to-coarse encoding which can selectively assign a larger number of samples to the low order representation to improve encoding precision. In this scheme we project different patterns each encoding one digit of the overall position. Thus, following the previous example, we can encode 1000 projector columns with three sinusoidal patterns each of period 10, and column 382 will be encoded as phase 382mod 10=2 on the first sinusoid, phase 382/10mod 10=8.2 on the second, and phase 382/100mod 10=3.82 on the last sinusoidal wave. The decimal part of each digit in the phase vector is maintained to ensure higher precision in the reconstruction.

By changing the range of the phase vectors and the parameters of the pattern generation scheme, we can devise schemes with controllable number of patterns, either reducing them for fast reconstruction, or increasing them to either increase precision in low noise conditions or improve robustness to noise when the signal to noise ratio is low.

In conjunction the two contributions result in a coding strategy that can be tuned to be either more precise or more robust than the state-of-the-art for any fixed (small) number of projected patterns.

The rest of the paper is organized as follows: the next section presents a review of the literature of range measurement by projected light; Section 3 introduces and analyzes the pattern generation strategies requiring a controllable number of projected patterns; following, Section 4 introduces a novel encoding scheme and Section 5 presents some experimental evaluation of the proposed coding schemes. Finally, Section 6 draws some conclusions.

@&#RELATED WORK@&#

Among the most significant light-based approaches to 3D sensing, interferometry has certainly played a major role. Interferometric techniques for surface profiling are based on the superposition of multiple coherent electromagnetic wave-fronts resulting in an interferogram (or fringe pattern). The intensity distribution of the pattern varies as a function of the diffuse surface on which it is projected, and therefore can be utilized to undertake surface measurements. The relative height of the surface with respect to a reference plane can be retrieved from the analysis of an image of the modulated fringe by means of processing algorithms, among which Fourier transform profilometry (FTP) [4] has been by far the most widely studied.

Other widely adopted reconstruction techniques include structured light and phase-shifting methods. The simplest of these techniques is binary coding [5]; the method assigns to every pixel a codeword retrieved from the digitized sequence over time of projected black and white stripes, requiring log2(n) pattern images to generate n code strings. Robustness of binary codes is improved by using Gray codes, where adjacent codes differ only in one bit. Both the techniques generate unique codes along each scanline, but at the same time are limited by their low resolution due to the inherently discrete nature of the coding. Also, the large number of projected patterns does not lead to an increased accuracy.

Other structured light approaches make use of color-coded and grid-like patterns [5,6].

Phase-shifting methods are based on the projection of periodic patterns with a given spatial period. Each projected pattern is obtained by spatially shifting the preceding one of a fraction of the period, and then captured by one or more cameras. The images are elaborated and the phase information at each pixel is determined by means of M-step relationships [7]. Since the phase is distributed continuously within its period, phase-shifting techniques provide subpixel accuracy and achieve high measurement spatial resolution. Furthermore, the intensity change at each pixel for subsequent patterns is relative to the underlying color and reflectance, which makes phase shift locally insensitive to texture variance to a certain degree. Again, in its basic formulation, phase-shifted structured light renders only relative phase values and thus it is ambiguous. When both an extended measuring range and a high resolution are required, a combined approach proves to be very powerful: the integration of Gray code and phase shift [8,9] is an effective technique bringing together the advantages of both, providing disambiguation and high resolution, but the number of patterns to be projected increases considerably, and each strategy introduces a source of error [3].

A prevailing drawback within the phase shift class is related to an arbitrary shifting error [10] caused by the analog nature of the projecting device, which can influence the final evaluation of the phase values if proper compensation is not carried out. Nevertheless, the introduction of highly flexible digital video projection (DVP) technologies (namely LCD and DLP), and also by virtue of their availability and relatively low cost, lead to the complete avoidance of this kind of errors. However, this also resulted in geometrically less precise signals, and in addition for better visual effect usually both the light source and the imaging device generalize as nonlinear devices in such a way that the captured patterns deviate from the ideal sinusoid. This makes it problematic for the phase extraction step to yield accurate values, which ultimately leads to erroneous depth measurements [11,12]. In [13] Pan et al. perform a theoretical analysis of the phase error induced by the non-sinusoidal waveforms and devise an iterative compensation algorithm taking into account the non-linearity due to the whole system, rather than the DVP effect alone. In general though, accuracy depends on the projector characteristics as a whole, as discussed in [14]. It has been demonstrated [7] that these errors can be somewhat alleviated by using a larger number of fringe patterns, however for dynamic applications requiring fast reconstruction (such as FTP and 3-step or 4-step profilometry [15,16]) the non-sinusoidal phase error is considered as the dominant error source. As a matter of fact, non-linearity of the video projector is mainly due to gamma correction for image enhancement which inevitably decreases the accuracy and resolution of the measurement. This problem has also been extensively studied [17,18]. A common and simple schema is to gamma encode the patterns before projection; other approaches include iterative gamma-correction techniques based on statistical analysis of the captured fringes [19].

Recently, attention has shifted back to number-theoretical methods, whereas simpler strategies have been proposed. Lilienblum and Michaelis presented a simple and robust multi-period phase shift algorithm, which allows for very accurate and stable reconstructions [3]. In [20] a modification is given to the original Gushov–Solodkin algorithm; in their work, the relative phase values are checked and corrected before the unwrapping procedure takes place. The method is claimed to be faster and not influenced by inaccuracies in relative phase computation, however more importantly it is suited toward a simple implementation with off-the-shelf components and its parameters need fine-tuning in some measure.

The big advantages of the multi-period method presented in [3] are its relative simplicity and high efficiency. The phase-coded images can be directly employed in general stereo reconstruction systems, ensuring high quality and density of the code. Specifically, the lack of surface points in the final model is mainly due to occlusions and camera disparity, and measurement errors are very low thanks to the averaging and validation procedures implicit to the approach, that exclude a large percentage of errors and outliers before the actual surface reconstruction takes place. The main drawback lies in the fact that, typically, three or more phase-shift sequences are needed to entirely cover the projector range (typical values are 800 or 1024 projector pixels). This requires the projection of as many as three times more patterns than required with classical phase-shifting. Further, at least in the original formulation of Lilienblum and Michaelis, the phase increment in time and in space are correlated, requiring a larger number of patterns as the resolution of the projector increases.

In order to address the latter issue, and reduce the number of pattern required, in [21] a new compound phase-coding approach was presented. The main idea behind the compound phase coding strategy was to project several fringe patterns in a single spatio-temporal pattern, by encoding the phases of the fringe vector as phases of a Fourier term at different frequencies. This effectively decouples the spatial phase increments with the temporal increments used to create the patterns. However, the reduction in the dynamic range available to each frequency slot increases the noise of the estimated phase, and the Fourier composition forces the number of patterns projected to be an integral multiple of 2∗(k
                     +1) where k is the number of phase fringes used for coding.

When adopting multiple phase coding strategies, the process of going from projector coordinates to the projected patterns can be divided into two main steps. The first step is that of phase coding and the dual step of phase decoding. Phase coding strategies map the projector coordinate u into several wrapped phase values ϕ
                     
                        i
                     (u)∈[02π) quantized into λ
                     
                        i
                      angular values. The coding strategy has to be invertible so that the projector coordinate can be recovered uniquely from the phase vector 
                        
                           
                              ϕ
                              →
                           
                           
                              u
                           
                           =
                           
                              
                                 
                                    ϕ
                                    1
                                 
                                 
                                    u
                                 
                                 ,
                                 …
                                 ,
                                 
                                    ϕ
                                    n
                                 
                                 
                                    u
                                 
                              
                           
                        
                     ; further, in order to extract correspondences with subpixel precision, the map must be continuous, i.e., it should be able to encode and uniquely decode non-integral projector coordinates. The second step is that of pattern generation and its dual phase estimation. The pattern generation step encodes the phase vector 
                        
                           
                              ϕ
                              →
                           
                           
                              u
                           
                        
                      as observable physical quantities of the time series f
                     
                        u
                     (t).

For example, the phase coding of the approach in [3] maps the projector coordinates onto a vector of remainder modulo mutually co-prime numbers, while the pattern generation simply maps each element on the vector onto the phase of a fixed-frequency and fixed-amplitude sinusoidal signal. The separation of the encoding process into phase coding and pattern generation is rather general and can be applied to approaches that are not limited to multiple phase shift. Gray codes in [8] fit perfectly the schema as they can be interpreted as dyadic angular quantizations (i.e., λ
                     
                        i
                     
                     =2), where phases are encoded using standard Gray codes and patterns are generated using the amplitude of Haar basis functions as the observable quantity rather than the phase of Fourier basis.

In this paper we propose two novel pattern generation/phase estimation methods that allow to significantly reduce the number of projected patterns. The first approach is a direct generalization of multi-period [3], which decouples spatial phase quantization with the temporal periods of the projected patterns, while the second approach encodes the m coordinates of the phase vector as the phases of the first m harmonics of the Fourier-transformed signal. In both cases, the decoupling of spatial and temporal periods allows us to choose where to invest in a larger number of projected patterns or signaling band to reduce the phase estimation error. Second, we introduce a novel algebraic encoding/decoding technique which adopts a fine-to-coarse strategy allowing for smaller quantization at the fine level to increase precision, and larger quantization at the coarse level to reduce the total number of phases to be encoded (and thus patterns to be projected). Compounded with the ability of the proposed pattern generation strategies of allocating extra patterns to specific phases, this results in a coding strategy that is both more precise and more robust than the state-of-the-art for any fixed (small) number of projected patterns. The combination of the two presented pattern generation strategies with the proposed algebraic encoding and the number-theoretical encoding of Lilienblum and Michaelis gives us four structured light coding strategies which will be analyzed for performance and robustness.

In [3] the authors suggest to map projector coordinate u to the phase vector
                           
                              (1)
                              
                                 
                                    
                                       ϕ
                                       →
                                    
                                    
                                       u
                                    
                                    =
                                    
                                       
                                          
                                             ϕ
                                             1
                                          
                                          
                                             u
                                          
                                          ,
                                          …
                                          ,
                                          
                                             ϕ
                                             n
                                          
                                          
                                             u
                                          
                                       
                                    
                                    
                                    with
                                    
                                    
                                       ϕ
                                       i
                                    
                                    
                                       u
                                    
                                    =
                                    
                                       
                                          2
                                          π
                                       
                                       
                                          λ
                                          i
                                       
                                    
                                    
                                       
                                          u
                                          mod
                                          
                                             λ
                                             i
                                          
                                       
                                    
                                    ,
                                 
                              
                           
                        where umodλ
                        
                           i
                         is the remainder of the division of u by λ
                        
                           i
                        . In addition, the fringes of a pattern are assigned with sequential natural numbers 
                           
                              
                                 η
                                 i
                              
                              
                                 u
                              
                              ∈
                              N
                           
                        , which represent a simple counting of the fringes from left to right. A projector coordinate can then be directly obtained, for all i
                        =1,2,…,n, from a fringe number and a phase value:
                           
                              (2)
                              
                                 
                                    u
                                    =
                                    
                                       
                                          
                                             η
                                             i
                                          
                                          
                                             u
                                          
                                          +
                                          
                                             ϕ
                                             i
                                          
                                          
                                             u
                                          
                                       
                                    
                                    
                                       λ
                                       i
                                    
                                    .
                                 
                              
                           
                        
                     

Since the only available values during decoding are λ and ϕ, the system of equations becomes ambiguous as the same value of u can be obtained for different values of η
                        
                           i
                        . This happens when two different projector coordinates 
                           
                              
                                 u
                                 ˜
                              
                              ≠
                              
                                 
                                    u
                                    ˜
                                 
                                 ˜
                              
                           
                         yield the same phase values for all i. Under such conditions, the following derivation holds [3]:
                           
                              (3)
                              
                                 
                                    
                                       u
                                       ˜
                                    
                                    −
                                    
                                       
                                          u
                                          ˜
                                       
                                       ˜
                                    
                                    =
                                    
                                       
                                          
                                             η
                                             i
                                          
                                          
                                             
                                                u
                                                ˜
                                             
                                          
                                          −
                                          
                                             η
                                             i
                                          
                                          
                                             
                                                
                                                   u
                                                   ˜
                                                
                                                ˜
                                             
                                          
                                       
                                    
                                    
                                       λ
                                       i
                                    
                                    ,
                                 
                              
                           
                        and then, for some positive integers x
                        1,x
                        2,…,x
                        
                           n
                        :
                           
                              (4)
                              
                                 
                                    |
                                    Δu
                                    |
                                    =
                                    
                                       x
                                       1
                                    
                                    
                                       λ
                                       1
                                    
                                    =
                                    
                                       x
                                       2
                                    
                                    
                                       λ
                                       2
                                    
                                    =
                                    …
                                    =
                                    
                                       x
                                       n
                                    
                                    
                                       λ
                                       n
                                    
                                    .
                                 
                              
                           
                        
                     

Therefore, a general condition is identified for generating unambiguous pattern sequences, by defining a maximum projector coordinate u
                        
                           max
                         up to which ambiguity can be excluded. Such a coordinate is the least common multiple of relatively prime periods λ
                        
                           i
                        , which for practical advantage shall entirely cover the projector range.

An efficient method is then given to calculate the fringe numbers from the ambiguous phase values at each pixel, taking advantage of a simple relationship between them. Given any pair of pattern sequences, for each image pixel it holds:
                           
                              (5)
                              
                                 
                                    
                                       λ
                                       i
                                    
                                    
                                       ϕ
                                       i
                                    
                                    
                                       u
                                    
                                    −
                                    
                                       λ
                                       j
                                    
                                    
                                       ϕ
                                       j
                                    
                                    
                                       u
                                    
                                    =
                                    
                                       λ
                                       j
                                    
                                    
                                       η
                                       j
                                    
                                    
                                       u
                                    
                                    −
                                    
                                       λ
                                       i
                                    
                                    
                                       η
                                       i
                                    
                                    
                                       u
                                    
                                    .
                                 
                              
                           
                        
                     

This makes it possible to construct a theoretical phase difference vector beforehand, and then use it to retrieve the fringe numbers when real phase measurements become available. In addition to providing an efficient way to obtain the fringe numbers, this method allows to assign each point a reliability value related to the deviation between measured and expected values. The use of theoretical phase difference vectors makes for a powerful test, which allows the identification of erroneous or weak measurements (such as mixed phase values) caused, for instance, by sharp edges, involuntary object movements and light reflections. Once the unknown fringe numbers are calculated, projector coordinates can be easily retrieved for each pattern sequence with Eq. (2). Further, the independent measurements can be averaged to obtain the unwrapped phase at every pixel in an efficient way, leading to an increase in measurement accuracy.

Phase-shift based strategies use the phase of sinusoidal waves as quantities that can be recovered through the imaging process, but other approaches are possible; for example Gray codes use the amplitude of the signal as information carrier.

According to multi-period phase shift, the m coordinates of the phase vector 
                           
                              
                                 ϕ
                                 →
                              
                              
                                 u
                              
                           
                         are projected as m separate subseries f
                        
                           u
                        
                        
                           i
                        (t), each of length λ
                        
                           i
                        , where each time series is a sinusoid of period λ
                        
                           i
                        :
                           
                              (6)
                              
                                 
                                    
                                       f
                                       u
                                       i
                                    
                                    
                                       j
                                    
                                    =
                                    cos
                                    
                                       
                                          2
                                          πj
                                          /
                                          
                                             λ
                                             i
                                          
                                          +
                                          
                                             ϕ
                                             i
                                          
                                          
                                             u
                                          
                                       
                                    
                                    .
                                 
                              
                           
                        
                     

The final pattern f
                        
                           u
                         is then the juxtaposition of the patterns f
                        
                           u
                        
                        
                           i
                        , scaled and shifted to the projector intensity range (usually [0;255]). Note that the shift only affects the level of the DC component and the amplitude of the higher frequency carriers, leaving the phase values unchanged.

In the original formulation presented in [3] the periods λ
                        
                           i
                         represent both the phase increments as we move spatially through the projector coordinates and the time increments as we move along the pattern. This enforces a very strong requirement on the number of projected fringes which have to be ∑
                        
                           i
                        
                        
                        λ
                        
                           i
                        , where the λ
                        
                           i
                         must be co-prime and large enough that their product covers the whole projector range. Note, however, that the space and time increments are not really related and one can sample a full period of the sinusoidal pattern using any number of time-steps greater than 2. In general, we can encode the phase value ϕ
                        
                           i
                        (u) with k
                        
                           i
                         patterns as
                           
                              (7)
                              
                                 
                                    
                                       f
                                       u
                                       i
                                    
                                    
                                       j
                                    
                                    =
                                    cos
                                    
                                       
                                          2
                                          π
                                          
                                             j
                                             
                                                k
                                                i
                                             
                                          
                                          +
                                          
                                             ϕ
                                             i
                                          
                                          
                                             u
                                          
                                       
                                    
                                    
                                    with
                                    
                                    i
                                    =
                                    0
                                    ,
                                    …
                                    ,
                                    
                                       k
                                       i
                                    
                                    −
                                    1.
                                 
                              
                           
                        
                     

The sine and cosine of phase can then be simply estimated from the observed temporal series 
                           
                              
                                 
                                    f
                                    ¯
                                 
                              
                              u
                              i
                           
                         through Fourier analysis:
                           
                              (8)
                              
                                 
                                    ρ
                                    cos
                                    
                                       
                                          
                                             
                                                
                                                   ϕ
                                                   ^
                                                
                                             
                                             i
                                          
                                          
                                             u
                                          
                                       
                                    
                                    =
                                    
                                       
                                          
                                             
                                                
                                                   f
                                                   ¯
                                                
                                             
                                             u
                                             i
                                          
                                          |
                                          cos
                                       
                                    
                                    =
                                    
                                       1
                                       
                                          k
                                          i
                                       
                                    
                                    
                                       
                                          ∑
                                          
                                             j
                                             =
                                             0
                                          
                                          
                                             
                                                k
                                                i
                                             
                                             −
                                             1
                                          
                                       
                                    
                                    
                                       
                                          
                                             f
                                             ¯
                                          
                                       
                                       u
                                       i
                                    
                                    
                                       j
                                    
                                    cos
                                    
                                       
                                          −
                                          2
                                          π
                                          
                                             j
                                             
                                                k
                                                i
                                             
                                          
                                       
                                    
                                 
                              
                           
                        
                        
                           
                              (9)
                              
                                 
                                    ρ
                                    sin
                                    
                                       
                                          
                                             
                                                
                                                   ϕ
                                                   ^
                                                
                                             
                                             i
                                          
                                          
                                             u
                                          
                                       
                                    
                                    =
                                    
                                       
                                          
                                             
                                                
                                                   f
                                                   ¯
                                                
                                             
                                             u
                                             i
                                          
                                          |
                                          sin
                                       
                                    
                                    =
                                    
                                       1
                                       
                                          k
                                          i
                                       
                                    
                                    
                                       
                                          ∑
                                          
                                             j
                                             =
                                             0
                                          
                                          
                                             
                                                k
                                                i
                                             
                                             −
                                             1
                                          
                                       
                                    
                                    
                                       
                                          
                                             f
                                             ¯
                                          
                                       
                                       u
                                       i
                                    
                                    
                                       j
                                    
                                    sin
                                    
                                       
                                          −
                                          2
                                          π
                                          
                                             j
                                             
                                                k
                                                i
                                             
                                          
                                       
                                    
                                    ,
                                 
                              
                           
                        from which we get the estimate
                           
                              (10)
                              
                                 
                                    
                                       
                                          
                                             ϕ
                                             ^
                                          
                                       
                                       i
                                    
                                    
                                       u
                                    
                                    =
                                    arg
                                    
                                       
                                          ρ
                                          cos
                                          
                                             
                                                
                                                   
                                                      
                                                         ϕ
                                                         ^
                                                      
                                                   
                                                   i
                                                
                                                
                                                   u
                                                
                                             
                                          
                                          ,
                                          ρ
                                          sin
                                          
                                             
                                                
                                                   
                                                      
                                                         ϕ
                                                         ^
                                                      
                                                   
                                                   i
                                                
                                                
                                                   u
                                                
                                             
                                          
                                       
                                    
                                    ,
                                 
                              
                           
                        where arg(x,y) is the argument of complex number x
                        +
                        iy and is in the range [02π).

To study the angular accuracy in the phase estimation, assume that the observed temporal series was subjected to a constant shift and rescaling and independent observation errors ϵ
                        0,…,ϵ
                        
                           k
                           −1 of zero mean and constant standard deviation σ, i.e., 
                           
                              
                                 
                                    
                                       f
                                       ¯
                                    
                                 
                                 u
                                 i
                              
                              
                                 j
                              
                              =
                              c
                              +
                              a
                              
                                 f
                                 u
                                 i
                              
                              
                                 j
                              
                              +
                              
                                 ϵ
                                 j
                              
                           
                        . From this we have
                           
                              (11)
                              
                                 
                                    E
                                    
                                       ρ
                                    
                                    =
                                    
                                       a
                                       2
                                    
                                 
                              
                           
                        
                        
                           
                              (12)
                              
                                 
                                    
                                       
                                          Var
                                          
                                             
                                                ρ
                                                
                                                   
                                                      
                                                         ϕ
                                                         ^
                                                      
                                                   
                                                   i
                                                
                                                
                                                   u
                                                
                                             
                                          
                                          ≈
                                          Var
                                          
                                             
                                                ρcos
                                                
                                                   
                                                      
                                                         
                                                            
                                                               ϕ
                                                               ^
                                                            
                                                         
                                                         i
                                                      
                                                      
                                                         u
                                                      
                                                   
                                                
                                             
                                          
                                          =
                                          Var
                                          
                                             
                                                ρ
                                                sin
                                                
                                                   
                                                      
                                                         
                                                            
                                                               ϕ
                                                               ^
                                                            
                                                         
                                                         i
                                                      
                                                      
                                                         u
                                                      
                                                   
                                                
                                             
                                          
                                          =
                                       
                                    
                                    
                                       
                                          =
                                          
                                             
                                                σ
                                                2
                                             
                                             
                                                k
                                                i
                                                2
                                             
                                          
                                          
                                             
                                                ∑
                                                
                                                   j
                                                   =
                                                   0
                                                
                                                
                                                   
                                                      k
                                                      i
                                                   
                                                   −
                                                   1
                                                
                                             
                                          
                                          
                                             cos
                                             2
                                          
                                          
                                             
                                                −
                                                2
                                                π
                                                
                                                   j
                                                   
                                                      k
                                                      i
                                                   
                                                
                                             
                                          
                                          =
                                          
                                             
                                                σ
                                                2
                                             
                                             
                                                2
                                                
                                                   k
                                                   i
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           
                        
                        
                           
                              (13)
                              
                                 
                                    Var
                                    
                                       
                                          
                                             
                                                
                                                   ϕ
                                                   ^
                                                
                                             
                                             i
                                          
                                          
                                             u
                                          
                                       
                                    
                                    ≈
                                    
                                       
                                          Var
                                          
                                             
                                                ρ
                                                
                                                   
                                                      
                                                         ϕ
                                                         ^
                                                      
                                                   
                                                   i
                                                
                                                
                                                   u
                                                
                                             
                                          
                                       
                                       
                                          Var
                                          
                                             ρ
                                          
                                       
                                    
                                    =
                                    
                                       
                                          2
                                          
                                             σ
                                             2
                                          
                                       
                                       
                                          
                                             k
                                             i
                                          
                                          
                                             a
                                             2
                                          
                                       
                                    
                                    .
                                 
                              
                           
                        
                     

Thus, the angular error 
                           
                              
                                 σ
                                 
                                    ϕ
                                    i
                                 
                              
                              =
                              
                                 
                                    σ
                                    a
                                 
                              
                              
                                 
                                    
                                       2
                                       
                                          k
                                          i
                                       
                                    
                                 
                              
                           
                         is inversely proportional to the signal-to-noise ratio a/σ and to the square root of the number of samples k
                        
                           i
                        . In this respect, using a number of samples proportional to the period cannot even be justified by the requirement that the phase error be the same for all subpatterns, as that would happen for a number of samples proportional to the square of the periods.

The compound phase coding approach was introduced in [21].
                           1
                        
                        
                           1
                           Note that Eqs. (14), (15), and (16) as well as Figs. 2 and 3 are taken from [21].
                         It encodes the m coordinates of the phase vector as the phases of the first m frequencies of the Fourier transform of the signal. Given a phase code 
                           
                              
                                 ϕ
                                 →
                              
                              ∈
                              [
                              
                                 
                                    0
                                    1
                                 
                                 k
                              
                           
                        , we create a (k
                        +1)-dimensional complex vector 
                           
                              
                                 x
                                 →
                              
                              ∈
                              
                                 C
                                 
                                    k
                                    +
                                    1
                                 
                              
                           
                        , where
                           
                              (14)
                              
                                 
                                    
                                       x
                                       j
                                    
                                    =
                                    
                                       
                                          
                                             
                                                
                                                   
                                                      
                                                         
                                                            0
                                                            ,
                                                         
                                                      
                                                      
                                                         
                                                            e
                                                            
                                                               q
                                                               j
                                                            
                                                            
                                                               e
                                                               
                                                                  −
                                                                  2
                                                                  πi
                                                                  
                                                                     ϕ
                                                                     j
                                                                  
                                                               
                                                            
                                                            ,
                                                         
                                                      
                                                   
                                                
                                                
                                                   
                                                      
                                                         
                                                            if
                                                            
                                                            j
                                                            =
                                                            0
                                                            ,
                                                         
                                                      
                                                      
                                                         
                                                            if
                                                            
                                                            1
                                                            ≤
                                                            j
                                                            ≤
                                                            k
                                                         
                                                      
                                                   
                                                
                                             
                                          
                                          .
                                       
                                    
                                 
                              
                           
                        
                     

Here, 
                           
                              i
                              =
                              
                                 
                                    −
                                    1
                                 
                              
                           
                         and 
                           
                              
                                 eq
                                 →
                              
                              =
                              
                                 
                                    e
                                    
                                       q
                                       1
                                    
                                    ,
                                    …
                                    ,
                                    e
                                    
                                       q
                                       k
                                    
                                 
                              
                           
                         with ∑
                        
                           j
                           =1
                        
                           k
                        
                        
                        eq
                        
                           j
                        
                        =1 is an equalization vector that indicates the relative strength of each multiplexed phase signal. Note that given x
                        
                           j
                         we can compute the phase as 
                           
                              
                                 ϕ
                                 j
                              
                              =
                              arg
                              
                                 
                                    R
                                    
                                       
                                          x
                                          j
                                       
                                    
                                    ,
                                    I
                                    
                                       
                                          x
                                          j
                                       
                                    
                                 
                              
                           
                        , where 
                           
                              R
                              
                                 z
                              
                           
                        , 
                           
                              I
                              
                                 z
                              
                           
                         are the real and imaginary parts of the complex number 
                           
                              z
                              ∈
                              C
                           
                        , respectively.

Each complex number x
                        
                           j
                         represents the amplitude and phase of a sinusoidal component with frequency 
                           
                              
                                 j
                                 
                                    k
                                    +
                                    1
                                 
                              
                           
                         cycles per sample. Hence we can reconstruct the intensity sequence of that coordinate by computing the Inverse Discrete Fourier Transform of 
                           
                              x
                              →
                           
                        , obtaining the temporal pattern
                           
                              (15)
                              
                                 
                                    f
                                    
                                       n
                                    
                                    =
                                    
                                       1
                                       
                                          k
                                          +
                                          1
                                       
                                    
                                    
                                       
                                          ∑
                                          
                                             j
                                             =
                                             0
                                          
                                          k
                                       
                                    
                                    
                                    
                                       x
                                       j
                                    
                                    
                                       e
                                       
                                          2
                                          πi
                                          
                                             
                                                j
                                                
                                                   k
                                                   +
                                                   1
                                                
                                             
                                          
                                          n
                                       
                                    
                                    ,
                                    
                                    n
                                    =
                                    0
                                    ,
                                    …
                                    ,
                                    k
                                    .
                                 
                              
                           
                        
                     

We can then project separately the real and imaginary part of this vector as two time sequences obtaining a single set of 2(k
                        +1) patterns to be projected to uniquely encode the phase vector 
                           
                              ϕ
                              →
                           
                         (see Fig. 2
                        ).

The acquisition process introduces an additional linear deformation on the time series f
                        
                           u
                        , which depends on the physical properties of the object being scanned and which does not affect the phases. Let 
                           
                              
                                 
                                    
                                       f
                                       ^
                                    
                                 
                                 u
                              
                              
                                 t
                              
                           
                         be the acquired gray-scale values and let 
                           
                              
                                 y
                                 →
                              
                              ∈
                              
                                 C
                                 
                                    k
                                    +
                                    1
                                 
                              
                           
                         be its representation into a complex vector. The phase code 
                           
                              ϕ
                              →
                           
                         is finally recovered from 
                           
                              y
                              →
                           
                         by computing the Discrete Fourier Transform, namely
                           
                              (16)
                              
                                 
                                    
                                       
                                          
                                             x
                                             ¯
                                          
                                       
                                       j
                                    
                                    =
                                    
                                       
                                          ∑
                                          
                                             n
                                             =
                                             0
                                          
                                          
                                             k
                                             +
                                             1
                                          
                                       
                                    
                                    
                                       y
                                       n
                                    
                                    
                                       e
                                       
                                          −
                                          2
                                          πi
                                          
                                             
                                                n
                                                
                                                   k
                                                   +
                                                   1
                                                
                                             
                                          
                                          j
                                       
                                    
                                    ,
                                 
                              
                           
                        and by extracting the argument from the resulting vector 
                           
                              
                                 
                                    x
                                    ¯
                                 
                                 →
                              
                              ∈
                              
                                 C
                                 
                                    k
                                    +
                                    1
                                 
                              
                           
                         (see Fig. 3
                        ).

This process allows to recover the phase code for each projector coordinate by taking only 2(k
                        +1) measurements, where k is the number of signal periods. Nevertheless, one can also force a larger number of samples in order to increase accuracy, by appending null components to 
                           
                              x
                              →
                           
                        . More precisely, with M null components we need 2(M
                        +
                        k
                        +1) measurements in order to recall the phase code 
                           
                              ϕ
                              →
                           
                        .

It should be noted that a drawback of this approach is that encoding multiple signals in a single pattern reduces the effective projector intensity range available to encode each phase, increasing the effects of the discretization error and observation noise. Applying the same error analysis as the one performed for the time-decoupled subpatterns generation strategy, we see that the angular error in the estimation of phase ϕ
                        
                           i
                         is
                           
                              (17)
                              
                                 
                                    
                                       σ
                                       
                                          ϕ
                                          i
                                       
                                    
                                    =
                                    
                                       σ
                                       
                                          a
                                          
                                          e
                                          
                                             q
                                             i
                                          
                                       
                                    
                                    
                                       
                                          2
                                          k
                                       
                                    
                                    ,
                                 
                              
                           
                        where a is the total signal, eq
                        
                           i
                         is the equalization level assigned to phase ϕ
                        
                           i
                         and k is the total number of patterns projected. Hence, an m-wise increase in patterns assigned to each phase cannot balance the m-wise reduction in dynamic range available to each pattern. On the other hand, this coding strategy can encode m phases with as few as 2
                        m
                        +1 patterns, versus the minimum of 3m of the subpattern strategy.

In the phase encoding strategy we adopt a fine-to-coarse approach where the first phases have short spatial periods, while subsequent phases have larger periods; the last one has a spatial period larger than the maximum projector coordinate. Let λ
                     1,…,λ
                     
                        m
                      be phase quantizations with the only requirement that ∏
                     
                        i
                        =1
                     
                        m
                     
                     λ
                     
                        i
                     
                     ≥
                     M, with M
                     ≤
                     u
                     
                        max
                      the maximum projector coordinate. We encode the projector coordinate u into the phase vector 
                        
                           
                              ϕ
                              →
                           
                           
                              u
                           
                           =
                           
                              
                                 
                                    ϕ
                                    1
                                 
                                 
                                    u
                                 
                                 ,
                                 …
                                 ,
                                 
                                    ϕ
                                    m
                                 
                                 
                                    u
                                 
                              
                           
                        
                      where
                        
                           (18)
                           
                              
                                 
                                    ϕ
                                    i
                                 
                                 
                                    u
                                 
                                 =
                                 2
                                 πfrac
                                 
                                    
                                       u
                                       
                                          
                                             ∏
                                             
                                                j
                                                =
                                                1
                                             
                                             i
                                          
                                          
                                             
                                                λ
                                                i
                                             
                                          
                                       
                                    
                                 
                              
                           
                        
                     where frac(x)=
                     x
                     −⌊x⌋ is the fractional part of x
                     ≥0. The name algebraic coding derives from the fact that the encoding is constructed in a similar manner to the way integers are represented using the standard positional notation. Assume that phase ϕ
                     
                        i
                      is divided into λ
                     
                        i
                      angular bins, and assume that the projector coordinate u is represented in positional notation as the sequence of digits d
                     1,…,d
                     
                        m
                     , where position i uses base λ
                     
                        i
                     , i.e., d
                     
                        i
                      is in the range 0,…,λ
                     
                        i
                     
                     −1. Then the digit d
                     
                        i
                      indicates the angular bin in which ϕ
                     
                        i
                      falls, and the integral coordinate u can be recovered by u
                     =∑
                     
                        i
                        =1
                     
                        m
                     
                     d
                     
                        i
                     
                     ∏
                     
                        j
                        =1
                     
                        i
                     
                     λ
                     
                        i
                     . Thus, using this algebraic representation, we can reconstruct the integral coordinate by looking at the angular bucket in which the phase estimation falls. In practice, the projector coordinate is estimated with subpixel precision, but the fractional part of the location is extracted only from the first phase, which is localized with the highest precision.

In particular, the decoding phase is as follows: first we get the low-order digit with subpixel precision 
                        
                           
                              d
                              1
                           
                           =
                           
                              
                                 
                                    ϕ
                                    ^
                                 
                              
                              1
                           
                           
                              
                                 
                                    λ
                                    i
                                 
                                 
                                    2
                                    π
                                 
                              
                           
                        
                      and set the current estimate at h
                     1
                     =
                     d
                     1. Then the estimate is refined by adding the other phases according to the following recurrence:
                        
                           (19)
                           
                              
                                 
                                    d
                                    
                                       i
                                       +
                                       1
                                    
                                 
                                 =
                                 round
                                 
                                    
                                       
                                          
                                             
                                                ϕ
                                                ^
                                             
                                          
                                          
                                             i
                                             +
                                             1
                                          
                                       
                                       
                                          
                                             λ
                                             
                                                i
                                                +
                                                1
                                             
                                          
                                          
                                             2
                                             π
                                          
                                       
                                       −
                                       
                                          
                                             h
                                             i
                                          
                                          
                                             
                                                ∏
                                                
                                                   j
                                                   =
                                                   1
                                                
                                                i
                                             
                                             
                                                
                                                   λ
                                                   i
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           
                        
                     
                     
                        
                           (20)
                           
                              
                                 
                                    h
                                    
                                       i
                                       +
                                       1
                                    
                                 
                                 =
                                 
                                    d
                                    
                                       i
                                       +
                                       1
                                    
                                 
                                 
                                    
                                       ∏
                                       
                                          j
                                          =
                                          1
                                       
                                       i
                                    
                                    
                                       
                                          λ
                                          i
                                       
                                    
                                 
                                 +
                                 
                                    h
                                    i
                                 
                                 .
                              
                           
                        
                     
                  

The final estimate h
                     
                        m
                      is the estimated projector coordinate.

This coding strategy allows us to completely decouple the quantization levels λ
                     
                        i
                     , which can be any value as long as their product is larger than the maximum coordinate. Further, since the information about subpixel localization is extracted only from the low-order bit, we can invest in it both by reducing the number of quantization bins, and by increasing the number of samples or the equalization level assigned to the first phase. This separates it from other hierarchical methods such as Gray coding since this equalization can reduce the effect of noise on the final subpixel precision. In addition, the continuity of high-order bins eliminates the noise due to the spatial quantization effect. Fig. 1 shows an example set of patterns obtained using the proposed pattern generation strategies in conjunction with the number-theoretic and algebraic coding schemes.

Phase shift methods achieve subpixel accuracy assuming that by integrating the contribution of adjacent projector pixels one obtains a phase that is a linear combination of the phases projected at the two projector locations. Specifically, the assumption is that if a camera pixel integrates projector pixel u for a proportion α and projector pixel u
                        +1 for a proportion 1−
                        α, then the observed phase is 
                           
                              
                                 ϕ
                                 ^
                              
                              ≈
                              αϕ
                              
                                 u
                              
                              +
                              
                                 
                                    1
                                    −
                                    α
                                 
                              
                              ϕ
                              
                                 
                                    u
                                    +
                                    1
                                 
                              
                           
                        . However, the reconstruction obtained from the superposition of the signals interpolates linearly the phase/amplitude vectors, which does not result in a linear interpolation of phase angles (see Fig. 4
                        .a). This results in an estimation error of the subpixel part of the code that is more severe as the phase quantization is coarser. This source of error is usually not a problem with the number-theoretical multi-phase shift method as, in practice, for common projectors the phases are quantized in 9 or more levels, and thus errors incurred with the linear approximation are limited. In our case, however, we aim at reducing the low-order quantization as much as possible in order to increase subpixel precision of the algebraic coding, resulting in severe linearization errors. We avoid this by correcting the estimated phase taking into account the non-linearity of the angular interpolation. Let
                           
                              (21)
                              
                                 
                                    
                                       ϕ
                                       int
                                    
                                    =
                                    
                                       
                                          
                                             ϕ
                                             
                                                2
                                                π
                                             
                                          
                                          λ
                                       
                                    
                                    
                                       
                                          2
                                          π
                                       
                                       λ
                                    
                                 
                              
                           
                        
                        
                           
                              (22)
                              
                                 
                                    
                                       ϕ
                                       f
                                    
                                    =
                                    frac
                                    
                                       
                                          
                                             ϕ
                                             
                                                2
                                                π
                                             
                                          
                                          λ
                                       
                                    
                                    
                                       
                                          2
                                          π
                                       
                                       λ
                                    
                                 
                              
                           
                        be the integral and fractional part of the quantization of phase ϕ into λ angular bins, and let a be the signal amplitude at this location. It is worth reminding that one of the main assumptions is that the projected signal amplitude is constant, while the received signal amplitude depends on the surface orientation and albedo, but it is constant at any given location. The reconstructed phase amplitude vector is
                           
                              (23)
                              
                                 
                                    
                                       
                                          1
                                          −
                                          α
                                       
                                    
                                    a
                                    
                                       e
                                       
                                          i
                                          
                                             ϕ
                                             int
                                          
                                       
                                    
                                    +
                                    αa
                                    
                                       e
                                       
                                          i
                                          
                                             
                                                
                                                   ϕ
                                                   int
                                                
                                                +
                                                
                                                   
                                                      
                                                         2
                                                         π
                                                      
                                                      λ
                                                   
                                                
                                             
                                          
                                       
                                    
                                    =
                                    a
                                    
                                       e
                                       
                                          i
                                          
                                             ϕ
                                             int
                                          
                                       
                                    
                                    
                                       
                                          
                                             
                                                1
                                                −
                                                α
                                             
                                          
                                          +
                                          α
                                          
                                             e
                                             
                                                i
                                                
                                                   
                                                      
                                                         2
                                                         π
                                                      
                                                      λ
                                                   
                                                
                                             
                                          
                                       
                                    
                                    =
                                    a
                                    
                                       e
                                       
                                          i
                                          
                                             ϕ
                                             int
                                          
                                       
                                    
                                    b
                                    
                                       e
                                       
                                          i
                                          
                                             ϕ
                                             f
                                          
                                       
                                    
                                    ,
                                 
                              
                           
                        where b is an amplitude correction term due to the amplitude reduction caused by the linear interpolation. Note that this reduction in the amplitude of the coding frequencies means that at low quantization level we are trading signal strength for angular discrimination, and this could be counterproductive on low signal conditions.

From Eq. (23) we obtain 
                           
                              b
                              
                                 e
                                 
                                    i
                                    
                                       ϕ
                                       f
                                    
                                 
                              
                              =
                              
                                 
                                    1
                                    −
                                    α
                                 
                              
                              +
                              α
                              
                                 e
                                 
                                    i
                                    
                                       
                                          
                                             2
                                             π
                                          
                                          λ
                                       
                                    
                                 
                              
                           
                        , normalizing the phase/amplitude vector and looking at its real part, we get the following relation for the observed fractional part of the phase:
                           
                              (24)
                              
                                 
                                    cos
                                    
                                       
                                          ϕ
                                          f
                                       
                                    
                                    =
                                    
                                       
                                          
                                             
                                                1
                                                −
                                                α
                                             
                                          
                                          +
                                          α
                                          cos
                                          
                                             
                                                
                                                   
                                                      2
                                                      π
                                                   
                                                   λ
                                                
                                             
                                          
                                       
                                       
                                          
                                             
                                                
                                                   
                                                      
                                                         
                                                            1
                                                            −
                                                            α
                                                         
                                                      
                                                      +
                                                      α
                                                      cos
                                                      
                                                         
                                                            
                                                               
                                                                  2
                                                                  π
                                                               
                                                               λ
                                                            
                                                         
                                                      
                                                   
                                                
                                                2
                                             
                                             +
                                             
                                                α
                                                2
                                             
                                             
                                                sin
                                                2
                                             
                                             
                                                
                                                   
                                                      
                                                         2
                                                         π
                                                      
                                                      λ
                                                   
                                                
                                             
                                          
                                       
                                    
                                    .
                                 
                              
                           
                        
                     

Solving for α and applying the recovered interpolation proportion to the quantization angles, we obtain the corrected phase:
                           
                              (25)
                              
                                 
                                    
                                       ϕ
                                       corrected
                                    
                                    =
                                    
                                       ϕ
                                       int
                                    
                                    +
                                    α
                                    
                                       
                                          2
                                          π
                                       
                                       λ
                                    
                                    =
                                    
                                       ϕ
                                       int
                                    
                                    +
                                    
                                       
                                          sin
                                          
                                             
                                                ϕ
                                                f
                                             
                                          
                                       
                                       
                                          sin
                                          
                                             
                                                ϕ
                                                f
                                             
                                          
                                          −
                                          sin
                                          
                                             
                                                
                                                   ϕ
                                                   f
                                                
                                                −
                                                
                                                   
                                                      
                                                         2
                                                         π
                                                      
                                                      λ
                                                   
                                                
                                             
                                          
                                       
                                    
                                    
                                       
                                          2
                                          π
                                       
                                       λ
                                    
                                    .
                                 
                              
                           
                        
                     


                        Fig. 4b plots the effect, for small angular quantizations, of applying the phase correction to the fractional part of the phase.

@&#EXPERIMENTAL RESULTS@&#

In order to validate the proposed techniques we performed both synthetic and real world experiments. In the first set we assessed the effect of noise, using different coding strategies and parameters, against a ground-truth value for the reconstructed projector coordinates. In the second set we compared the codes obtained with the proposed approach on a test rig for structured light techniques that has been internally developed in our lab. Here we did not have ground-truth, so we compared our measurements with those given by the Multi-Period Phase Shift proposed in [3], where the time dimension was significantly up-sampled to reduce the effects of noise. In particular, a total of 90 patterns were projected, as compared to the minimum possible with this strategy of 9 patterns. The choice of projecting 90 patterns was driven by the assumption that by increasing the number of patterns by an order of magnitude, the errors in the reconstruction of the (subpixel) phase values and thus of the final column code will be similarly reduced to a level much smaller than the decoding error incurred with the schemes under analysis.

To assess the robustness of the coding strategies with respect to noise, we performed a set of synthetic experiments, where an increasing amount of random additive noise was added to the patterns before decoding, and then the error between the exact and the estimated coordinate was computed. The patterns for non-integral location u were generated by linearly mixing the patterns obtained at locations ⌊u⌋ and ⌈u⌉. For each approach we applied a selection of quantization values corresponding to various levels of the quality/speed tradeoff. For the number-theoretical (NT) approaches we used periods 7,10,11 and 9,10,13 which are common values satisfying the constraint of relative primality, that offer similar quantization errors for all phases, and provide a sufficient number of distinct codes for a normal projector (770 codes the first, 1287 the second). For the algebraic coding we used periods 8,10,10 and 5,13,13. The first provides 800 codes with almost equal quantization error for low and high bits, while the second provides 845 codes with a much coarser quantization for the lowest bits, which should result to higher subpixel accuracy. For the approaches using the subpattern generation strategy, we used an increasing number of time samples evenly distributed among the phases, namely 9, 15, 21, and 27. Further, for the algebraic coding we tested the advantage of unevenly distributing the samples assigning more to the low-order phase. To this end we tested the sample distributions (3,3,3), (7,4,4), (11,5,5), and (15,6,6), ranging from the lowest possible number of patterns, to a very high number of patterns combined with a large up-sampling of the low-order phase. Clearly there is no guarantee for the optimality of these values but they do provide a set of reasonable values spanning the range of the quality/speed tradeoff.


                        Table 1
                         shows the projected patterns corresponding to this selection of parameters.

For each test we drew 500 locations in the range [0;100] and computed the root mean square (RMS) error between the location and its estimation after the encoding/decoding process.


                        Figs. 5 and 6
                        
                         plot the results using the number-theoretical and the algebraic encoding respectively. The plots on the left show the RMS as a function of the standard deviation of the noise assuming a unit signal amplitude. The RMS was computed among locations that decoded within one projector pixel. Larger errors are caused by a phase estimation outside of the correct bin and should be considered as outliers. The plots on the right show the percentage of outliers and assess the robustness of the coding scheme. From the plots we can see that in all cases a larger number of samples imply higher precision and robustness. Further, we see that with the number-theoretical encoding the RMS grows at a faster rate than using the algebraic coding, while still exhibiting similar robustness. This suggests that the increase in angular discrimination provided by the low quantization of the low-order phase of the algebraic coding results in higher subpixel precision even in the presence of noise, without resulting in a higher number of outliers. As for the effect of varying the quantization level or redistributing the samples in algebraic coding, as expected a smaller quantization or a redistribution of samples in favor of the low-order phase reduce the RMS but also increase the number of outliers.


                        Fig. 7
                         plots the RMS obtained using the compound pattern generation strategy. Here various sampling levels were obtained by up-sampling the time-series by a factor of 2 and 3, resulting in 8, 16 and 24 projected patterns. The algebraic coding confirms the better scaling with respect to noise, but it also results in a smaller rate of outliers, at least for small noise levels.

All the following experiments have been run on a test rig for structured light techniques that has been internally developed in our lab. The rig is made up of a motorized plate for object positioning, four cameras and an illumination source mounted on a motorized liftable platform. Specifically the cameras are equipped with a 1/2in. CMOS sensor which offers a full 1280×1024 resolution. The cameras are monochrome, thus no Bayer filters are placed over the sensor. While four cameras are available, in this experiment set we use only one to test the codes. The illumination source is an 800×600 color DLP projector which we use to project the monochromatic patterns. The system is controlled by a standard PC housed into the base of the rig. This PC is a 2.8GHz AMD quad core system with 2Gb of ram.

In Table 2
                         we show the performance of different compound coding strategies when dealing with a set of real-world objects that exhibit wide variations both in albedo and shape. Specifically, we used two algebraic and two number-theoretical pattern sequences. As in the synthetic experiments, we chose period sets of length 7,10,13 and 9, 11, 13 respectively for the number-theoretical tests and two quantizations of 5,13,13 and 8,10,10 for the algebraic coding. For each experimental condition we projected both horizontal and vertical pattern sequences, thus obtaining a bi-dimensional code for each image pixel. This code is used to compute two measures of deviation from the ground-truth. The first measure is the difference between the codes obtained at a particular image pixel with respect to the ground-truth code obtained projecting 90 patterns; we call this quantity code error. The second measure used is the code displacement, i.e., the Euclidean distance between a point in the ground-truth image and the subpixel location containing the same code by bilinear interpolation in the experimental image. We can regard this quantity as the displacement error that would be committed when the coding is used in matching or stereo correspondence applications.

In the columns of Table 2 we show the object used for the measurements, the number of successfully coded points, and finally the average, standard deviation, and maximum value of both the code error and displacement. As expected, compound coding works more reliably with smooth, uniform objects and Lambertian surfaces, such as the rectangular plastic strip, the white wooden sphere and, to some level, the white lamp. With those objects the performance obtained with the number-theoretical strategy is worse than that obtained adopting the algebraic coding. This is due to the completely wrong coding retrieved from difficult boundary points, as can be noticed by looking at the large maximal errors. The coding error is even more dramatic with more complex or darker objects, such as the pair of batteries and the small statue. This is due to the decrease in dynamic range produced by the compound approach, and affects both the number-theoretical strategy and the proposed algebraic coding. However we can see that, despite using the same low number of patterns, algebraic coding exhibits far better performance and is able to cope with the most difficult objects exhibiting only a limited reduction in accuracy.

We repeated the same set of experiments with separately projected patterns.

The sequences of patterns used and the results obtained are shown respectively in Table 1 and in Table 3
                        .

It is immediate to see that the overall error obtained is significantly lower than the one obtained with the compound strategies. The only gross coding errors happen with the number-theoretical approach when using only 9 patterns (three for each period). When using 27 samples the results are about one order of magnitude more accurate and we observe no mis-codings at all. It should be noted that the algebraic coding technique does not incur in any coding error even when using only 9 patterns. Furthermore, the ability to selectively redistribute the additional patterns to the low-order phase allows for a significant improvement in precision without incurring the risk of serious mis-codings.

In Fig. 8
                         the multi-object scene used for the experimental validation is shown alongside some examples of the coding obtained with each strategy presented in this paper. The first two columns show the compound techniques. The number-theoretical one (first column) is able to recover correctly only a limited portion of the overall illuminated points and the algebraic technique allows to assign a valid code to a few more. However, by looking at the zoomed area, we can see that the former suffers more from gross coding outliers. By converse, the non-compound approaches offer a significantly higher number of coded points. In particular, the algebraic coding (fourth column) does not contain any outlier, while the number-theoretical strategy (third column) allows some to slip in. In the following we will explore these phenomena further.

In Fig. 9
                         we show the effects of different coding parameterizations on the average and maximum code difference. In the first row we analyze the compound pattern generation techniques. In these experiments we test several levels of up-sampling ranging from no up-sampling (U1), to twice the number of patterns (U2) to three times the number of patterns (U3).

For each level we show the number-theoretical technique (NT), which obtains always the worst results regardless of the up-sampling level, and the algebraic coding scheme. The latter is tested with different equalizations profiles: specifically level Eq.1 assigns equal signal to all the digits, while Eq.2 and Eq.3 give respectively more signal to the high-order and low-order phases. Equalization does not affect the results much, although assigning more weight to the more significant digits seems to result in a less accurate coding. In the second row we test the techniques based on separate subpatterns. Here we executed both the number-theoretical and the algebraic coding strategies with a number of patterns ranging from 9 to 27 samples. While it is apparent that the accuracy of the number-theoretical scheme improves with an increasing number of projected patterns, it should be noted that the algebraic coding scheme allows the obtainment of reasonable results even with just 9 patterns. When using more patterns we test three different assignments of the additional samples: with distribution d1 all the patterns are evenly divided for each phase period, while distributions d2 and d3 are progressively more biased toward the low-order phase. While the influence is not very strong, it is clear that giving more signals to the low-order phase leads to improved accuracy. Overall, these experiments show that the NT technique does not works well with the compound pattern generation strategy, in addition, even with the subpattern strategy it perform poorly when the number of projected patterns is close to the Nyquist limit. Conversely it performs marginally better than the algebraic method in most situations when used with the subpattern strategy and a large number of patterns.

The previous set of experiments gives an extensive quantitative analysis of the robustness and accuracy of the coding strategies proposed. However, it is difficult to relate such numerical data to their actual influence on the quality of reconstructed surfaces. For this reason we also produced a set of 3D range images that provide qualitative evaluation of the influence of the coding scheme to the reconstruction process. Specifically, we used our test rig to obtain range images from two subjects that pose the most significant hurdles to the reconstruction process: The first is the light bulb, that exhibits reflections and partial transparency; the second is the Ganesha figurine, which has a very low albedo and presents several self-occlusions.

In Fig. 10
                         we show the reconstructions obtained from the light bulb. In the first row the surface obtained with the “Ground Truth” method is shown, i.e., the reference method also used for the quantitative experiments: the number theoretical technique with a very large number of projected patterns. For each method we also present two zoomed area (indicated with red boxes) that highlight a boundary zone and a flat area respectively. This is meant to evaluate the behavior of the techniques around the edges of the objects and their smoothness.

With the light bulb there is no significant difference in the number of triangulated points among the various methods.

This is probably due to the high albedo of the subject and thus to the good level of signal received by the cameras. However, the Algebraic compound technique seems to lose a few points on the fluorescent tubes. In general, the subpattern methods allow the triangulation of more points in the screw part of the bulb, which is mostly reflective. It is interesting to note that the number theoretical method used with the subpattern strategy produces some artifacts (elongated triangles) on the boundary zones. This could be related to the aliasing effect between the bright surface of the bulb and the black background that produces slightly shifted codes which in turn introduce errors in the estimation of the depth of the points. Such artifacts, however, have little influence with respect to the previous quantitative experiments, since they affect only a very limited number of points. Nevertheless, their effect is very significant from a qualitative point of view since such errors stand out very much on the final reconstruction. Finally, the smoothness of the surface increases with the number of patterns, as the effect of the random noise is reduced. Interestingly, with a comparable number of patterns the Algebraic technique seems to give slightly smoother results.

In Fig. 11
                         we show the results obtained with the Ganesha figurine. It is immediately obvious that both compound methods allow the triangulation of much fewer points than the equivalent techniques paired with the subpattern strategy. While the Algebraic coding strategy still gives slightly better results, we can conclude that the subpattern strategy is to be preferred when the object to capture is dark and we can expect a low signal strength. Obviously the subpattern techniques work better with a high number of patterns, with the Algebraic coding being able to reconstruct a few more points. In contrast to the light bulb test, the Algebraic coding schema seems to produce a slightly rougher surface. This could suggest that this method is noisier when dealing with lower signal strength.

@&#CONCLUSIONS@&#

We have proposed a new fine-to-coarse phase encoding strategy that allows us to achieve high precision and noise robustness with a small number of patterns by applying a coarser angular quantization at the finest level and a finer one at higher levels, and provide a robust estimation approach allowing the recovery of the projector coordinate with subpixel precision. Further, we have introduced two novel pattern generation strategies that encode multiple phases with a small number of projected patterns and allow to selectively invest more patterns of signaling band to more critical phases. The proposed approaches have been analyzed and compared with the state-of-the-art, showing that they are at the same time more precise and robust with a high level of noise, not having any significant drawback for low noise levels. In particular, the experiments show that the number-theoretic approach in conjunction with the subpattern generation strategy should be preferred when using a large number of patterns, while the same number-theoretic approach does not perform very well with the compound pattern as proposed in [21] that suffers from a relatively high sensitivity to noise. By contrast, the algebraic technique can be used effectively even when projecting a number of patterns close to the Nyquist limit, allowing for a strong reduction in reconstruction time. While the subpattern strategy is still the most robust of the proposed pattern generation strategies, the compound strategy still works relatively well with the algebraic technique in conditions with high signal-to-noise ratio, allowing for good reconstructions with the minimal number of projected patterns.

@&#REFERENCES@&#

