@&#MAIN-TITLE@&#Fully automatic segmentation of AP pelvis X-rays via random forest regression with efficient feature selection and hierarchical sparse shape composition

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           A fully automatic approach for landmark detection and shape segmentation.


                        
                        
                           
                           The random forest regression framework with the sparse shape composition model.


                        
                        
                           
                           Effective feature selection that reduces dimension without sacrificing the accuracy.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

X-ray radiograph

Landmark detection

Shape segmentation

Feature selection

Statistical shape model

@&#ABSTRACT@&#


               
               
                  In clinical practice, traditional X-ray radiography is widely used, and knowledge of landmarks and contours in anteroposterior (AP) pelvis X-rays is invaluable for computer aided diagnosis, hip surgery planning and image-guided interventions. This paper presents a fully automatic approach for landmark detection and shape segmentation of both pelvis and femur in conventional AP X-ray images. Our approach is based on the framework of landmark detection via Random Forest (RF) regression and shape regularization via hierarchical sparse shape composition. We propose a visual feature FL-HoG (Flexible-Level Histogram of Oriented Gradients) and a feature selection algorithm based on trace radio optimization to improve the robustness and the efficacy of RF-based landmark detection. The landmark detection result is then used in a hierarchical sparse shape composition framework for shape regularization. Finally, the extracted shape contour is fine-tuned by a post-processing step based on low level image features. The experimental results demonstrate that our feature selection algorithm reduces the feature dimension in a factor of 40 and improves both training and test efficiency. Further experiments conducted on 436 clinical AP pelvis X-rays show that our approach achieves an average point-to-curve error around 1.2mm for femur and 1.9mm for pelvis.
               
            

@&#INTRODUCTION@&#

In clinical practice, X-ray radiography is widely used for various purposes due to its convenience and low cost. Detecting landmarks and segmenting shape contours such as femur and pelvis benefit many applications, such as computer aided diagnosis disease diagnosis [1,2], image based surgery planning and intervention [3]. In addition, three dimensional (3D) reconstruction of anatomical models can also be performed with the help of the segmented 2D contours [4,5]. Recently, we have developed a method that can reconstruct a patient-specific 3D model from a single conventional X-ray radiograph [6]. However, in [6], image contours are extracted semi-automatically with a live-wire method. A fully automatic image contour extraction will facilitate the clinical usage of this method.

Traditionally, landmark detection and shape segmentation in X-ray images, despite its extreme usefulness, is seldom done in clinical practice due to its difficulty. In cases where it is ever done, it is carried out manually by clinical doctors, making the work both time-consuming and error-prone. Therefore, in this paper we explore fully-automatic techniques, which will immediately make this traditionally useful but difficult task widely applicable. However, automatic landmarking and segmentation of X-ray images faces many challenges. The poor image contrast, along with the noise, makes the landmark detection very difficult. Due to the accumulation nature of X-ray imaging, multiple bone structures at different depth might be superimposed together on the image and it may be hard to distinguish bones from each other. Furthermore, the existence of implants, which is very common in AP pelvis radiography, often drastically changes the visual appearance of the relevant anatomical regions.

In literature, the tasks of landmark detection and shape segmentation in X-ray images are closely related [2,7]. Usually, a set of landmarks are defined along the shape contour, and landmark detection is the first step of the pipeline, where the position of these landmarks are predicted. Then, the detected landmark positions are regularized using a statistical shape model [2,7]. In this way, the final contour is controlled by both the image cue encoded in the landmark detection output, and the shape prior information conveyed in the statistical shape model. In this paper we also take this strategy.

In this paper, we propose a new fully automatic method for femur and pelvis segmentation in anteroposterior (AP) X-ray images. Our method consists of two key components: landmark detection with random forest regression, and shape regularization with hierarchical sparse shape composition. Specifically, the contributions of this paper include:
                        
                           1.
                           We propose a hierarchical landmark detection framework where we use global landmarks for image normalization and local landmarks for shape optimization. The hierarchical strategy has been used in other works [8,9], and we adapt it to our AP segmentation application.

We propose a visual feature FL-HoG (Flexible-Level HoG) for efficient landmark detections. Zhu et al. [10] used a similar strategy in defining HoG feature with variable-size blocks. They employed the Adaboost algorithm for the subsequent feature selection, while we employ a feature selection algorithm proposed in [11] to reduce the feature searching space. In this way we speed up the feature extraction and subsequent computations.

We exploit the recently proposed sparse shape composition model [12] combined with the RF based landmark detection approach.

To further increase the accuracy, we employ a post-processing strategy on the pre-segmented shape contour by considering the low-level image feature.

In the following, we first summarize related work in Section 2. we then give an overview of our method in Section 3. Our landmark detection algorithm is presented in Section 4, followed by the shape optimization algorithm in Section 5. We show our experimental results in Section 6 and conclude the paper in Section 7.

@&#RELATED WORK@&#

There has been a huge body of work on segmentation of medical image. Although various schools of methods have been proposed (for example, [13] proposed a general image based regression method by boosting and applied it to tumor detection), the two-step solutions consisting of landmark detection followed by shape regularization by statistical shape model gained prevalence. For example, Lindner et al. [2] detect landmarks by Random Forest method followed by shape regularization by constrained local models based PCA. Lay et al. [7] detect multiple landmarks simultaneously and then regularize the shape by robust model alignment. Our method also falls into this general framework. Below we address some related work separately to landmark detection and shape regularization separately.

In literature, there has been a considerable amount of related work in landmark detection in medical images. Some methods utilize low-level image features such as gradients and edges [1,14] to detect landmarks. For example, Chen et al. [1] locate candidate locations of femoral shafts and heads by detecting parallel lines and circles. This type of methods often suffers from the large appearance variation and image noise encountered in X-ray images. To alleviate this problem, some similar methods such as [15–18] incorporate the topological constraints in a model-based way, where they search for the best configuration of the model given the image cue revealed by the low-level image features.

To overcome the challenge of appearance variation, some machine learning based methods have been proposed which have shown promising performance. For example, Zhou and Comaniciu [19] introduce the so-called shape regression machine to segment in real time the left ventricle endocardium from an echocardiogram of an apical four chamber view. Zheng et al. [20] use marginal space learning [21] for localizing the heart chambers, and then estimate the 3D shape through learning-based boundary delineation.

In recent years, Random Forest (RF) [22] based methods are becoming more and more popular. RF was originally proposed by Breiman [22] for general classification or regression, and the class-specific Hough forest was presented in [23] for object detection. Since then, the methods based on RF have shown very promising results in tasks related to landmark detection or organ localization from medical data [24,2,25]. The basic idea is to sample local patches (image patches in 2D and volumes in 3D data) in the image, estimate the displacement from the patches to the landmark by RF regression, and then the landmark position is estimated by a voting scheme considering the individual estimations from all the patches. Recently, Donner et al. [26] combined the RF-based prediction with the high-level topological relation between the landmarks, and they get very good results on X-ray images and 3D CT data. First, RF classification and regression give the candidates for each landmark, and then an MRF model encoding the global configuration of landmarks is employed to get the final landmark positions. This method aims at disambiguating landmark candidates using a global model on top of the individual landmark predictions, which is especially suitable for repetitive anatomical patterns.

There are two key components behind the success of RF voting based methods. The first is the strategy of positioning landmarks by estimating its relative displacements with regard to nearby image parts. This is reasonable because features on the landmarks are usually not discriminative enough for accurate localization in complex images, while the fact of medical image being highly structured can be exploited to improve the localization using relational displacement prediction. The second is the discriminative power of the RF model. In this paper, we improve the RF regression method with a feature selection algorithm, and we combine the result of RF based landmark detection with the sparse shape composition model [12].

Another related topic of this paper is the statistical shape model which is typically used to regularize the landmark positions using global topological information. Apart from the methods inspired by the classical Active Shape Models (ASM) [27,28,14,29], different new shape models have been proposed, such as the models based on mixture of Gaussians [30], non-rigid shape deformation by SVM regression [31], sparse PCA [32], manifold learning [33,34]. Ling et al. [8] propose a hierarchical shape model for liver segmentation, where a model is built for each pyramid level of the mesh representation. Recently, Zhang et al. [12] proposed sparse shape composition, which is based on sparse representation techniques [35,36]. The sparse shape composition has advantage of keeping the local shape information and is shown to have better performance than previous methods. Also, we comment that, from a generalized point of view, models such as MRF in [16,26], which regularize the individual landmark positions by global topological constraints, can also be considered as a kind of shape model.

We define landmarks on AP X-images hierarchically in two different levels, as shown in Fig. 1
                        . The first level, global landmarks, contains one group of 22 landmarks 
                           
                              G
                              =
                              {
                              
                                 
                                    L
                                 
                                 
                                    1
                                 
                                 
                                    G
                                 
                              
                              ,
                              …
                              ,
                              
                                 
                                    L
                                 
                                 
                                    22
                                 
                                 
                                    G
                                 
                              
                              }
                           
                         manually defined on anatomically important positions over the whole image (Fig. 1(a)). The second level, local landmarks consists of two different groups: left femur 
                           
                              LF
                              =
                              {
                              
                                 
                                    L
                                 
                                 
                                    L
                                 
                              
                              
                                 
                                    F
                                 
                                 
                                    1
                                 
                              
                              ,
                              …
                              ,
                              
                                 
                                    L
                                 
                                 
                                    L
                                 
                              
                              
                                 
                                    F
                                 
                                 
                                    59
                                 
                              
                              }
                           
                         with 59 local landmarks (Fig. 1(b)), and left pelvis 
                           
                              LP
                              =
                              {
                              
                                 
                                    L
                                 
                                 
                                    L
                                 
                              
                              
                                 
                                    P
                                 
                                 
                                    1
                                 
                              
                              ,
                              …
                              ,
                              
                                 
                                    L
                                 
                                 
                                    L
                                 
                              
                              
                                 
                                    P
                                 
                                 
                                    97
                                 
                              
                              }
                           
                         with 97 local landmarks (Fig. 1(c)). These local landmarks are defined by evenly sampling the aligned contours of the corresponding shapes (see Section 6.1 for details).

Shapes are defined by the ordered landmarks in a group. For example, an instance of “global shape” 
                           
                              
                                 
                                    y
                                 
                                 
                                    G
                                 
                              
                           
                         is defined by 
                           
                              
                                 
                                    y
                                 
                                 
                                    G
                                 
                              
                              =
                              
                                 
                                    
                                       
                                          
                                             l
                                          
                                          
                                             1
                                          
                                          
                                             G
                                          
                                       
                                       ,
                                       …
                                       
                                          
                                             l
                                          
                                          
                                             22
                                          
                                          
                                             G
                                          
                                       
                                    
                                 
                              
                              ∈
                              
                                 
                                    R
                                 
                                 
                                    44
                                 
                              
                           
                        , where 
                           
                              
                                 
                                    l
                                 
                                 
                                    i
                                 
                                 
                                    G
                                 
                              
                           
                         is the location of landmark 
                           
                              
                                 
                                    L
                                 
                                 
                                    i
                                 
                                 
                                    G
                                 
                              
                           
                         in the image. For each landmark group, there is an associated statistical shape model. We denote 
                           
                              
                                 
                                    M
                                 
                                 
                                    G
                                 
                              
                              ,
                              
                                 
                                    M
                                 
                                 
                                    L
                                 
                              
                              F
                              ,
                              
                                 
                                    M
                                 
                                 
                                    L
                                 
                              
                              P
                           
                         as the shape models for 
                           
                              G
                              ,
                              LF
                           
                         and 
                           
                              LP
                           
                        , respectively. Shape models specify the prior distribution of landmark positions in the corresponding landmark group.


                        Fig. 2
                         shows the workflow of our method given a test image.
                           
                              (1)
                              
                                 Global landmark detection. First, we launch landmark detector for the global landmarks, which produces response images 
                                    
                                       {
                                       R
                                       
                                          
                                             (
                                             I
                                             )
                                          
                                          
                                             1
                                          
                                          
                                             G
                                          
                                       
                                       ,
                                       …
                                       ,
                                       R
                                       
                                          
                                             (
                                             I
                                             )
                                          
                                          
                                             22
                                          
                                          
                                             G
                                          
                                       
                                       }
                                    
                                 . The detailed definition of response image will be given in Section 4.1.


                                 Global shape regularization and image normalization. The response images 
                                    
                                       {
                                       R
                                       
                                          
                                             (
                                             I
                                             )
                                          
                                          
                                             i
                                          
                                          
                                             G
                                          
                                       
                                       }
                                    
                                 , together with the global shape model 
                                    
                                       
                                          
                                             M
                                          
                                          
                                             G
                                          
                                       
                                    
                                 , are used for a shape regularization process which finds the optimal global shape, as well as the similarity transform (rigid+scale) with regard to the shape model. Then, the image is normalized by this similarity transform, which compensates for the global translation, rotation and scaling. Note in Fig. 2 how the erroneous landmark detections can be corrected by the shape regularization.


                                 Local Shape initialization. The left femur shape 
                                    
                                       
                                          
                                             y
                                          
                                          
                                             L
                                          
                                       
                                       F
                                    
                                  and the left pelvis shape 
                                    
                                       
                                          
                                             y
                                          
                                          
                                             L
                                          
                                       
                                       P
                                    
                                  are initialized based on the positions of the 22 global landmarks derived in the previous step.


                                 Local landmark detection. Local landmarks are detected, which generates the response images 
                                    
                                       {
                                       R
                                       
                                          
                                             (
                                             I
                                             )
                                          
                                          
                                             L
                                          
                                       
                                       
                                          
                                             F
                                          
                                          
                                             1
                                          
                                       
                                       ,
                                       …
                                       ,
                                       R
                                       
                                          
                                             (
                                             I
                                             )
                                          
                                          
                                             L
                                          
                                       
                                       
                                          
                                             F
                                          
                                          
                                             59
                                          
                                       
                                       }
                                    
                                  and 
                                    
                                       {
                                       R
                                       
                                          
                                             (
                                             I
                                             )
                                          
                                          
                                             L
                                          
                                       
                                       
                                          
                                             P
                                          
                                          
                                             1
                                          
                                       
                                       ,
                                       …
                                       ,
                                       R
                                       
                                          
                                             (
                                             I
                                             )
                                          
                                          
                                             L
                                          
                                       
                                       
                                          
                                             P
                                          
                                          
                                             97
                                          
                                       
                                       }
                                    
                                 .


                                 Local shape regularization. With the initialized shape 
                                    
                                       
                                          
                                             y
                                          
                                          
                                             L
                                          
                                       
                                       F
                                    
                                  from step (3), the landmark response images 
                                    
                                       {
                                       R
                                       
                                          
                                             (
                                             I
                                             )
                                          
                                          
                                             L
                                          
                                       
                                       
                                          
                                             F
                                          
                                          
                                             i
                                          
                                       
                                       }
                                    
                                  from step (4), and the shape model 
                                    
                                       
                                          
                                             M
                                          
                                          
                                             L
                                          
                                       
                                       F
                                    
                                 , this final step searches for the optimal femur shape. The same process is repeated for the pelvis.

In short, we use global shape to compensate for the global image pose as well as to initialize the local shapes, and this (steps (1)–(2)) needs to be done only once for an image. After the global alignment is done, the local landmark detection in step (4) only has to be done in limited image region without considering large scale/rotation variance, which speeds up the detection.

Within the above workflow, two key components remain to be elaborated. First, how the landmark detection is conducted in steps (1) and (4). Second, how to regularize shape in steps (2) and (5). We answer these two questions in the following two sections.

The landmark detection is performed independently on each landmark. During training, in each training image, we sample a set of rectangular patches
                           1
                           We use 1000 patches per image for both training and testing in our implementation.
                        
                        
                           1
                         around the ground-truth landmark position. Each patch is represented by its visual feature 
                           
                              f
                              ∈
                              
                                 
                                    R
                                 
                                 
                                    q
                                 
                              
                           
                         and the displacement vector 
                           
                              d
                              ∈
                              
                                 
                                    R
                                 
                                 
                                    2
                                 
                              
                           
                         from the patch center to the landmark (Fig. 3
                        (a)). Let us denote all the sampled patches in all training images as 
                           
                              
                                 
                                    {
                                    
                                       
                                          P
                                       
                                       
                                          i
                                       
                                    
                                    =
                                    
                                       
                                          
                                             
                                                
                                                   f
                                                
                                                
                                                   i
                                                
                                             
                                             ,
                                             
                                                
                                                   d
                                                
                                                
                                                   i
                                                
                                             
                                          
                                       
                                    
                                    }
                                 
                                 
                                    i
                                    =
                                    1
                                    ,
                                    …
                                    ,
                                    N
                                 
                              
                           
                         (Fig. 3(b)). The goal is then to learn a mapping function 
                           
                              ϕ
                              :
                              
                                 
                                    R
                                 
                                 
                                    q
                                 
                              
                              
                              ↦
                              
                              
                                 
                                    R
                                 
                                 
                                    2
                                 
                              
                           
                         from the feature space to the displacement vector space. Principally, any regression method can be used. In this paper, similar to [25,2], we utilize the random forest regressor [23].

Once the regressor is trained, given a new image, as in Fig. 3(c), we randomly sample a another set of patches 
                           
                              
                                 
                                    
                                       
                                          
                                             
                                                P
                                             
                                             
                                                j
                                             
                                             
                                                ′
                                             
                                          
                                          =
                                          
                                             
                                                
                                                   
                                                      
                                                         f
                                                      
                                                      
                                                         j
                                                      
                                                      
                                                         ′
                                                      
                                                   
                                                   ,
                                                   
                                                      
                                                         c
                                                      
                                                      
                                                         j
                                                      
                                                      
                                                         ′
                                                      
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                                 
                                    j
                                    =
                                    1
                                    ,
                                    …
                                    ,
                                    
                                       
                                          N
                                       
                                       
                                          ′
                                       
                                    
                                 
                              
                           
                         all over the image,
                           2
                           Or an ROI if we know the search region is limited. In our case, when detecting global landmarks, the whole image is searched. When detecting local landmarks, only a limited region centered on the initialized position is searched.
                        
                        
                           2
                         where 
                           
                              
                                 
                                    f
                                 
                                 
                                    j
                                 
                                 
                                    ′
                                 
                              
                           
                         and 
                           
                              
                                 
                                    c
                                 
                                 
                                    j
                                 
                                 
                                    ′
                                 
                              
                           
                         are the visual feature and center coordinate of patch 
                           
                              
                                 
                                    P
                                 
                                 
                                    j
                                 
                                 
                                    ′
                                 
                              
                           
                        , respectively. Through the trained mapping 
                           
                              ϕ
                           
                        , we can calculate the predicted displacement 
                           
                              d
                              (
                              
                                 
                                    P
                                 
                                 
                                    j
                                 
                                 
                                    ′
                                 
                              
                              )
                              =
                              ϕ
                              
                                 
                                    
                                       
                                          
                                             f
                                          
                                          
                                             j
                                          
                                          
                                             ′
                                          
                                       
                                    
                                 
                              
                           
                        , and then 
                           
                              d
                              (
                              
                                 
                                    P
                                 
                                 
                                    j
                                 
                                 
                                    ′
                                 
                              
                              )
                              +
                              
                                 
                                    c
                                 
                                 
                                    j
                                 
                                 
                                    ′
                                 
                              
                           
                         is the prediction of the landmark location by a single patch 
                           
                              
                                 
                                    P
                                 
                                 
                                    j
                                 
                                 
                                    ′
                                 
                              
                           
                         (Fig. 3(d)). The individual predictions are very noisy, but when combined, they approach an accurate prediction 
                           
                              
                                 
                                    l
                                 
                                 
                                    ★
                                 
                              
                           
                        :
                           
                              (1)
                              
                                 
                                    
                                       l
                                    
                                    
                                       ★
                                    
                                 
                                 =
                                 
                                    
                                       1
                                    
                                    
                                       
                                          
                                             N
                                          
                                          
                                             ′
                                          
                                       
                                    
                                 
                                 
                                    
                                       
                                          ∑
                                       
                                       
                                          j
                                       
                                    
                                 
                                 
                                    
                                       
                                          ϕ
                                          
                                             
                                                
                                                   
                                                      
                                                         f
                                                      
                                                      
                                                         j
                                                      
                                                      
                                                         ′
                                                      
                                                   
                                                
                                             
                                          
                                          +
                                          
                                             
                                                c
                                             
                                             
                                                j
                                             
                                             
                                                ′
                                             
                                          
                                       
                                    
                                 
                              
                           
                        
                     

In practice, the output of random forest regressor 
                           
                              d
                              (
                              
                                 
                                    P
                                 
                                 
                                    j
                                 
                              
                              )
                           
                         is not a single value, but a distribution.
                           3
                           The raw output of the random forest regressor is the displacement vectors on the leaf where the test feature vector falls, from which we fit a gaussian distribution.
                        
                        
                           3
                         Similarly to Eq. (1), we add up the predicted distributions, getting a single distribution (as in Fig. 3(e)), which is called the response image.

We propose a visual feature called FL-HoG (Flexible-Level Histograms of Oriented Gradients) in the landmark detection algorithm. As in Fig. 4
                        , the patch is divided into 
                           
                              6
                              ×
                              6
                           
                         grids. Different from multi-level HoG feature [37], which calculates features in a single scale and aspect ratio, our blocks are flexible: they range from 
                           
                              1
                              ×
                              1
                           
                         to 
                           
                              6
                              ×
                              6
                           
                         in size, and can take any grid boundaries. For example, the four colored
                           4
                           For interpretation of color in Fig. 4, the reader is referred to the web version of this article.
                        
                        
                           4
                         rectangles in Fig. 4 are valid blocks. There are totally 441 possible blocks,
                           5
                           Essentially, we have to choose 2 from the 49 grid crossings as the top-left and bottom-right corners of the block. The two chosen corners cannot be on the same line (which excludes 12 possibilities once the first corner is fixed), and the top-left corner should be to the left and above the bottom-right corner (which reduces the total number by a factor of 4). Finally, there are 
                                 
                                    (
                                    49
                                    ×
                                    (
                                    48
                                    -
                                    12
                                    )
                                    )
                                    /
                                    4
                                    =
                                    441
                                 
                               possibilities.
                        
                        
                           5
                         for each of which we calculate the traditional 9 dimensional HoG feature by histogramming the orientation of gradients of all pixels. Our final feature vector is therefore 
                           
                              441
                              ×
                              9
                              =
                              3969
                           
                         dimensional.

Compared to the traditional multi-level HoG feature, our feature is more flexible: it can capture information at various locations and scales. Combined with the feature selection algorithm presented below, the feature is powerful and effective.

Our feature is very similar to the variable-size HoG feature proposed in [10], which suggested that allowing blocks with multiple scales and aspect ratios may capture more useful image patterns. Also, these blocks might correspond to some semantic part of the image. The main difference from [10] is that we allow all possible scales and aspect ratios on the grid, while in [10] the aspect ratio is limited to (1:1), (1:2) and (2:1).

In this section we present our feature selection algorithm. In theory, random forest algorithm already did a good job in automatically selecting the useful features from the feature space. However, this selection can be computationally expensive. For example, at each node of each tree, all available features (1/3 of all features in our case) will be tested, each with multiple thresholds. In our method, the FL-HoG feature contains 3969 components, and relying solely random forest for feature selection is even more inefficient. In fact, many feature components can be rejected earlier by a fast preliminary step. To this end, we propose to combine random forest with a preliminary feature selection method proposed in [11]. In the experiment section we will see that this considerably speeds up the computation without sacrificing accuracy.

Formally speaking, we are given the training data 
                           
                              
                                 
                                    {
                                    
                                       
                                          P
                                       
                                       
                                          i
                                       
                                    
                                    =
                                    
                                       
                                          
                                             
                                                
                                                   f
                                                
                                                
                                                   i
                                                
                                             
                                             ,
                                             
                                                
                                                   d
                                                
                                                
                                                   i
                                                
                                             
                                          
                                       
                                    
                                    }
                                 
                                 
                                    i
                                    =
                                    1
                                    ,
                                    …
                                    ,
                                    N
                                 
                              
                           
                         as in Section 4.1, where 
                           
                              
                                 
                                    f
                                 
                                 
                                    i
                                 
                              
                              ∈
                              
                                 
                                    R
                                 
                                 
                                    q
                                 
                              
                           
                         (
                           
                              q
                              =
                              3969
                           
                         in our case) are the feature vectors, and 
                           
                              
                                 
                                    d
                                 
                                 
                                    i
                                 
                              
                           
                         are the displacement vectors. We define a feature selection operator 
                           
                              ϒ
                              :
                              
                                 
                                    R
                                 
                                 
                                    q
                                 
                              
                              
                              ↦
                              
                              
                                 
                                    R
                                 
                                 
                                    
                                       
                                          q
                                       
                                       
                                          ′
                                       
                                    
                                 
                              
                              (
                              
                                 
                                    q
                                 
                                 
                                    ′
                                 
                              
                              ≪
                              q
                              )
                           
                        . Given a q dimensional feature vector 
                           
                              f
                              ,
                              ϒ
                              (
                              f
                              )
                           
                         gives a 
                           
                              
                                 
                                    q
                                 
                                 
                                    ′
                                 
                              
                           
                         dimensional feature by selecting 
                           
                              
                                 
                                    q
                                 
                                 
                                    ′
                                 
                              
                           
                         dimensions from f. The feature selection operation can be expressed in matrix form as: 
                           
                              ϒ
                              (
                              f
                              )
                              =
                              Sf
                           
                        , where 
                           
                              S
                              ∈
                              
                                 
                                    {
                                    0
                                    ,
                                    1
                                    }
                                 
                                 
                                    
                                       
                                          q
                                       
                                       
                                          ′
                                       
                                    
                                    ×
                                    q
                                 
                              
                           
                         is a selection matrix. Each row of S selects one feature component.

The selected features should be discriminative. That is, close data in the feature space should also be close in the output space, and vice versa. Assuming that 
                           
                              E
                           
                         and 
                           
                              D
                           
                         are two sets of pairs of features, where feature pairs in 
                           
                              E
                           
                        /
                           
                              D
                           
                         are similar/dissimilar in the output space. We have two objectives:
                           
                              (2)
                              
                                 
                                    min
                                 
                                 
                                    
                                       
                                          ∑
                                       
                                       
                                          
                                             
                                                
                                                   
                                                      
                                                         f
                                                      
                                                      
                                                         i
                                                      
                                                   
                                                   ,
                                                   
                                                      
                                                         f
                                                      
                                                      
                                                         j
                                                      
                                                   
                                                
                                             
                                          
                                          ∈
                                          E
                                       
                                    
                                 
                                 
                                    
                                       
                                          
                                             ϒ
                                             
                                                
                                                   
                                                      
                                                         
                                                            f
                                                         
                                                         
                                                            i
                                                         
                                                      
                                                   
                                                
                                             
                                             -
                                             ϒ
                                             
                                                
                                                   
                                                      
                                                         
                                                            f
                                                         
                                                         
                                                            j
                                                         
                                                      
                                                   
                                                
                                             
                                          
                                       
                                    
                                    
                                       2
                                    
                                 
                                 
                                 and
                                 
                                 
                                    max
                                 
                                 
                                 
                                    
                                       
                                          ∑
                                       
                                       
                                          
                                             
                                                
                                                   
                                                      
                                                         f
                                                      
                                                      
                                                         i
                                                      
                                                   
                                                   ,
                                                   
                                                      
                                                         f
                                                      
                                                      
                                                         j
                                                      
                                                   
                                                
                                             
                                          
                                          ∈
                                          D
                                       
                                    
                                 
                                 
                                    
                                       
                                          
                                             ϒ
                                             
                                                
                                                   
                                                      
                                                         
                                                            f
                                                         
                                                         
                                                            i
                                                         
                                                      
                                                   
                                                
                                             
                                             -
                                             ϒ
                                             
                                                
                                                   
                                                      
                                                         
                                                            f
                                                         
                                                         
                                                            j
                                                         
                                                      
                                                   
                                                
                                             
                                          
                                       
                                    
                                    
                                       2
                                    
                                 
                              
                           
                        
                     

Combining the two objectives in Eq. (2), the objective function we want to minimize is:
                           
                              (3)
                              
                                 f
                                 (
                                 S
                                 )
                                 =
                                 
                                    
                                       
                                          
                                             ∑
                                          
                                          
                                             E
                                          
                                       
                                       
                                          
                                             
                                                
                                                   ϒ
                                                   (
                                                   
                                                      
                                                         f
                                                      
                                                      
                                                         i
                                                      
                                                   
                                                   )
                                                   -
                                                   ϒ
                                                   (
                                                   
                                                      
                                                         f
                                                      
                                                      
                                                         j
                                                      
                                                   
                                                   )
                                                
                                             
                                          
                                          
                                             2
                                          
                                       
                                    
                                    
                                       
                                          
                                             ∑
                                          
                                          
                                             D
                                          
                                       
                                       
                                          
                                             
                                                
                                                   ϒ
                                                   (
                                                   
                                                      
                                                         f
                                                      
                                                      
                                                         i
                                                      
                                                   
                                                   )
                                                   -
                                                   ϒ
                                                   (
                                                   
                                                      
                                                         f
                                                      
                                                      
                                                         j
                                                      
                                                   
                                                   )
                                                
                                             
                                          
                                          
                                             2
                                          
                                       
                                    
                                 
                                 =
                                 
                                    
                                       
                                          
                                             ∑
                                          
                                          
                                             E
                                          
                                       
                                       
                                          
                                             
                                                
                                                   
                                                      (
                                                      
                                                         
                                                            f
                                                         
                                                         
                                                            i
                                                         
                                                      
                                                      -
                                                      
                                                         
                                                            f
                                                         
                                                         
                                                            j
                                                         
                                                      
                                                      )
                                                   
                                                   
                                                      ⊤
                                                   
                                                
                                                
                                                   
                                                      S
                                                   
                                                   
                                                      ⊤
                                                   
                                                
                                                S
                                                (
                                                
                                                   
                                                      f
                                                   
                                                   
                                                      i
                                                   
                                                
                                                -
                                                
                                                   
                                                      f
                                                   
                                                   
                                                      j
                                                   
                                                
                                                )
                                             
                                          
                                       
                                    
                                    
                                       
                                          
                                             ∑
                                          
                                          
                                             D
                                          
                                       
                                       
                                          
                                             
                                                
                                                   
                                                      (
                                                      
                                                         
                                                            f
                                                         
                                                         
                                                            i
                                                         
                                                      
                                                      -
                                                      
                                                         
                                                            f
                                                         
                                                         
                                                            j
                                                         
                                                      
                                                      )
                                                   
                                                   
                                                      ⊤
                                                   
                                                
                                                
                                                   
                                                      S
                                                   
                                                   
                                                      ⊤
                                                   
                                                
                                                S
                                                (
                                                
                                                   
                                                      f
                                                   
                                                   
                                                      i
                                                   
                                                
                                                -
                                                
                                                   
                                                      f
                                                   
                                                   
                                                      j
                                                   
                                                
                                                )
                                             
                                          
                                       
                                    
                                 
                                 =
                                 
                                    
                                       Tr
                                       
                                          
                                             
                                                
                                                   
                                                      SF
                                                   
                                                   
                                                      E
                                                   
                                                
                                                
                                                   
                                                      S
                                                   
                                                   
                                                      ⊤
                                                   
                                                
                                             
                                          
                                       
                                    
                                    
                                       Tr
                                       
                                          
                                             
                                                
                                                   
                                                      SF
                                                   
                                                   
                                                      D
                                                   
                                                
                                                
                                                   
                                                      S
                                                   
                                                   
                                                      ⊤
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           
                        where 
                           
                              
                                 
                                    F
                                 
                                 
                                    E
                                 
                              
                           
                         and 
                           
                              
                                 
                                    F
                                 
                                 
                                    D
                                 
                              
                           
                         are straightforward to derive.

The brute force search for S is prohibitive, as the searching space is factorial. We use an iterative solutions which is guaranteed to find the global optimum efficiently. For the details please refer to [11].

It is important to note that, although our feature selection algorithm may resemble the LDA (Linear Discriminant Analysis) algorithm [38], they are fundamentally different. In our algorithm, S is a (0,1) selection matrix, while in LDA, S is an unconstrained linear transformation. The consequence is that, in our method, for a new image, we only have to extract the very few feature components that are selected, while in LDA, all feature components still have to be extracted before performing the linear transformation. Therefore, our method is much more efficient. Moreover, due to the difficulty of optimizing the trace ratio, LDA makes an approximation by changing the trace operator in the last term of Eq. (3) to the determinant operator, which can be easily solved by eigen-value decomposition but deviates from the original objective. On the contrary, we stick to the original trace-ratio objective in Eq. (3), which is more accurate.

In this section we present our method which searches for the optimal shape in steps (2) and (5) of Section 3.2. Prior to the shape optimization, we have the response images 
                           
                              
                                 
                                    {
                                    R
                                    
                                       
                                          (
                                          I
                                          )
                                       
                                       
                                          i
                                       
                                    
                                    }
                                 
                                 
                                    i
                                    =
                                    1
                                    ,
                                    …
                                    ,
                                    K
                                 
                              
                           
                         for K landmarks, the initial shape 
                           
                              
                                 
                                    y
                                 
                                 
                                    0
                                 
                              
                              ∈
                              
                                 
                                    R
                                 
                                 
                                    2
                                    K
                                 
                              
                           
                        , and a shape model 
                           
                              M
                           
                        . The task is then to find the optimal shape 
                           
                              
                                 
                                    y
                                 
                                 
                                    ∗
                                 
                              
                              ∈
                              
                                 
                                    R
                                 
                                 
                                    2
                                    K
                                 
                              
                           
                        , constrained both by the image cue encoded in the response images, and the prior information encoded in the shape model.

The procedure is shown in Table 1
                        . Starting from the initial shape 
                           
                              
                                 
                                    y
                                 
                                 
                                    0
                                 
                              
                           
                         which is constructed by the mode of response images of each landmark, we update the shape iteratively. In each iteration, we perform three actions: update the shape by moving each local landmark to a better position according to response images, regularize the shape by the shape model, and update the shape pose by computing the optimal similarity (rigid+scale) transformation from the current shape to the mean shape by Procrustes Analysis. These steps are straightforward except step 3 in Table 1. Traditionally, this can be done by the Active Shape Model [28] based on PCA (Principal Component Analysis). In this paper, we instead employ the recently proposed shape model based on sparse representation [12]. Here we briefly explains this method.

The shape model consists of a set of pre-aligned training shapes 
                           
                              
                                 
                                    {
                                    
                                       
                                          y
                                       
                                       
                                          i
                                       
                                    
                                    }
                                 
                                 
                                    i
                                    =
                                    1
                                    ,
                                    …
                                    ,
                                    N
                                 
                              
                           
                        . For each new shape 
                           
                              
                                 
                                    y
                                 
                                 
                                    ′
                                 
                              
                           
                         to be regularized, after a transformation T (which is evaluated separately in step 4 of Table 1), it should be approximated by a linear combination involving only a small subset of the training shapes, plus a sparse error:
                           
                              (4)
                              
                                 T
                                 (
                                 
                                    
                                       y
                                    
                                    
                                       ′
                                    
                                 
                                 )
                                 ≈
                                 Yx
                                 +
                                 e
                                 =
                                 
                                    
                                       
                                          
                                             
                                                
                                                   Y
                                                
                                                
                                                   I
                                                
                                             
                                          
                                       
                                    
                                 
                                 
                                    
                                       
                                          
                                             
                                                
                                                   x
                                                
                                             
                                             
                                                
                                                   e
                                                
                                             
                                          
                                       
                                    
                                 
                                 =
                                 
                                    
                                       Y
                                    
                                    
                                       ′
                                    
                                 
                                 
                                    
                                       x
                                    
                                    
                                       ′
                                    
                                 
                              
                           
                        where 
                           
                              
                                 
                                    Y
                                 
                                 
                                    ′
                                 
                              
                              =
                              
                                 
                                    
                                       Y
                                       ,
                                       I
                                    
                                 
                              
                           
                        , and 
                           
                              
                                 
                                    x
                                 
                                 
                                    ′
                                 
                              
                              =
                              
                                 
                                    
                                       
                                          
                                             
                                                x
                                             
                                             
                                                ⊤
                                             
                                          
                                          ,
                                          
                                             
                                                e
                                             
                                             
                                                ⊤
                                             
                                          
                                       
                                    
                                 
                                 
                                    ⊤
                                 
                              
                           
                        . In Eq. (4), both the linear coefficients x and the error e are sparse. Therefore, the composite coefficient 
                           
                              
                                 
                                    x
                                 
                                 
                                    ′
                                 
                              
                           
                         is also sparse. Our goal becomes to solve the following 
                           
                              
                                 
                                    L
                                 
                                 
                                    1
                                 
                              
                           
                        -regularized least squares problem:
                           
                              (5)
                              
                                 
                                    
                                       x
                                    
                                    
                                       opt
                                    
                                    
                                       ′
                                    
                                 
                                 =
                                 arg
                                 
                                    
                                       
                                          min
                                       
                                       
                                          
                                             
                                                x
                                             
                                             
                                                ′
                                             
                                          
                                       
                                    
                                 
                                 
                                    
                                       
                                          
                                             
                                                
                                                   
                                                      T
                                                      (
                                                      
                                                         
                                                            y
                                                         
                                                         
                                                            ′
                                                         
                                                      
                                                      )
                                                      -
                                                      
                                                         
                                                            Y
                                                         
                                                         
                                                            ′
                                                         
                                                      
                                                      
                                                         
                                                            x
                                                         
                                                         
                                                            ′
                                                         
                                                      
                                                   
                                                
                                             
                                             
                                                2
                                             
                                             
                                                2
                                             
                                          
                                          +
                                          λ
                                          
                                             
                                                
                                                   
                                                      
                                                         
                                                            x
                                                         
                                                         
                                                            ′
                                                         
                                                      
                                                   
                                                
                                             
                                             
                                                1
                                             
                                          
                                       
                                    
                                 
                              
                           
                        where 
                           
                              λ
                           
                         is a parameter controlling the importance of the sparsity constraint. There are a number of solvers for Eq. (5), and we employ the method using truncated Newton interior-point method as described in [39].

Note that in Eqs. (4) and (5), we combine the sparsity of reconstruction coefficients x and residual error e. Wright et al. [40] used the same treatment. We could also separately control the sparsity on the two terms separately, as in [12].

The interpretation of Eq. (4) is clear: the shape 
                           
                              
                                 
                                    y
                                 
                                 
                                    ′
                                 
                              
                           
                         should be approximated (with a transformation T) as a linear combination of only a small number of “basis”, which can be either the training shapes, or standard basis of the 
                           
                              
                                 
                                    R
                                 
                                 
                                    2
                                    K
                                 
                              
                           
                         space. The contribution from the training shapes represents the “true” part of shape 
                           
                              
                                 
                                    y
                                 
                                 
                                    ′
                                 
                              
                           
                         that is consistent to the shape model, and the contribution from the standard basis accommodates large but sparse errors (noises). Therefore, after we get the optimal 
                           
                              
                                 
                                    x
                                 
                                 
                                    opt
                                 
                                 
                                    ′
                                 
                              
                           
                         by Eq. (5), we decompose 
                           
                              
                                 
                                    x
                                 
                                 
                                    opt
                                 
                                 
                                    ′
                                 
                              
                           
                         by 
                           
                              
                                 
                                    x
                                 
                                 
                                    opt
                                 
                                 
                                    ′
                                 
                              
                              =
                              
                                 
                                    
                                       
                                          
                                             
                                                x
                                             
                                             
                                                opt
                                             
                                             
                                                ⊤
                                             
                                          
                                          ,
                                          
                                             
                                                e
                                             
                                             
                                                opt
                                             
                                             
                                                ⊤
                                             
                                          
                                       
                                    
                                 
                                 
                                    ⊤
                                 
                              
                           
                         as in Eq. (4), discard the 
                           
                              
                                 
                                    e
                                 
                                 
                                    opt
                                 
                              
                           
                         which corresponds to the noises, and the regularized shape is given by back-projecting the “true” part of the shape:
                           
                              (6)
                              
                                 
                                    
                                       y
                                    
                                    
                                       regularized
                                    
                                    
                                       ′
                                    
                                 
                                 =
                                 
                                    
                                       T
                                    
                                    
                                       -
                                       1
                                    
                                 
                                 (
                                 
                                    
                                       Yx
                                    
                                    
                                       opt
                                    
                                 
                                 )
                              
                           
                        Thus we complete the shape regularization step in Table 1.

Up to now, we have derived the shape contour. In many cases this shape contour is already satisfactory. However, there might still be some local defects, and these defects can often be corrected by fine-tuning the contour using the low-level image features. Inspired by other method which update the shape contour along the normal direction [31,41], we propose the post-processing step as follows. As shown in Fig. 5
                        , the green dots are the landmark position on the shape contour after the previous steps. Around these points, we sample a thin rectangular region along the normal direction of the landmark. Now, all points along the major axis of the rectangle (the points on the dash green line) are candidate landmark positions, and the task now is to search for an optimal position (the red dots) for the landmarks. For each candidate landmark position, it divides the rectangle into two parts by drawing a line perpendicular to the main axis. A good landmark position should separate the rectangle into the bone region and the background region, both of which are homogenous. We use entropy as a criterion for the separation. Formally speaking, for an image region, denoting 
                           
                              
                                 
                                    
                                       
                                          
                                             
                                                p
                                             
                                             
                                                i
                                             
                                          
                                       
                                    
                                 
                                 
                                    i
                                    =
                                    1
                                    …
                                    K
                                 
                              
                           
                         as the histogram of image density in the region, its entropy is given by:
                           
                              (7)
                              
                                 E
                                 =
                                 -
                                 B
                                 
                                    
                                       
                                          ∑
                                       
                                       
                                          i
                                          =
                                          1
                                       
                                       
                                          K
                                       
                                    
                                 
                                 
                                    
                                       p
                                    
                                    
                                       i
                                    
                                 
                                 log
                                 
                                    
                                       p
                                    
                                    
                                       i
                                    
                                 
                              
                           
                        where B is the Boltzmann constant. Then, the entropy score of a candidate landmark position is calculated as the sum of the entropy of the two sub-regions it divides. Since we want the two sub-regions to be homogenous, we want this entropy score to be as small as possible.

On the other hand, we want to respect the result given by the landmark detection algorithm, which is encoded in the response image. Therefore, we also consider the response image score for each candidate landmark position, which is simply the value of response image at this position. We want this score to be as large as possible.

Combining the entropy score which we want to minimize and the response image score which we want to maximize, a natural criterion is then to search for a landmark position which has the maximum ration between the response image score and the entropy score.

After the local updates of the landmark positions, a final shape regularization is performed as in step 3 in Table 1 to generate the final shape contour.

@&#EXPERIMENTS@&#

We conduct experiments using a collection of 436 AP radiographs from our clinical partner. A considerable part of these images are post-operative X-ray radiographs after trauma or joint replacement surgery, which significantly increases the challenge due to large variation of femur/pelvis appearance and the presence of implants. As an indication, 115 of the 336 test images (34%) have different types of implants, which reflects the challenge of our dataset. From these 436 images, we randomly select 100 images for training, and the other 336 images are used for testing purpose. For the training images, we manually annotate all the (global and local) landmarks. To establish landmark correspondences, we randomly choose one image as the reference and other images are floating images. We evenly sample a set of landmarks along the contour on the reference image, and the corresponding landmarks in floating images are found by an Expectation Conditional Maximization (ECM)-based deformable shape registration method [42]. In this way, for each image, we have both the dense contour and landmarks.

@&#IMPLEMENTATION DETAILS@&#

We fix the same parameters as follows in our experiments: For each landmark, we uniformly sample 2000 training patches and 1000 test patches. Each patch is of size 
                           
                              100
                              ×
                              100
                           
                         pixels. From the original 3969 dimensional feature space we select a subset of 100 feature components which are used for random forest training. Each forest contains 10 trees. The data samples associated to each tree are sampled with replica with a sampling rate of 100%. In each tree of the forest, each node splits the training data points into either its left or right branch according to a threshold test on one dimension of the feature vector, where information gain is used to choose the best split. The features available to each node are randomly sampled 1/3 of the total feature space. Nodes with less than 8 data samples will stop expanding and become leaf nodes. Also, we constrain the maximum depth of a tree to be 20.

We implemented our segmentation algorithm on the 336 test images, and Fig. 6
                         shows examples done with our method. We can see that our method achieves good performance despite of challenges such as significant variation of appearance, poor image contrast, or implants.

For quantitative evaluation, from the 336 test images, we randomly choose 192 images, on which we manually annotated the left femur and left pelvis contour. The error of segmentation is thus calculated by the average point-to-curve distance between the points on the segmented shape and the annotated contour. Since the images are stored in Dicom format, we know the pixel spacing of each image and therefore the error is expressed in the physical unit of millimeter, which is shown in Table 2
                         in the first two rows. We can see that our method achieves an average error of 1.1mm for femur segmentation, and 1.9mm for pelvis segmentation.

Evaluated on all the 192 annotated test images, our method succeeded in 187 for femur segmentation, with a success rate of 97.4%. A segmentation is classified as successful if the average point-to-curve distance is smaller than 4mm. For pelvis segmentation, 19 images out of the 192 do not contain complete pelvis structure (as in Fig. 6, the middle subfigure of the first row) and are naturally excluded from the evaluation. Among the 173 valid images for pelvis, our method succeeded in 166 with a success rate of 96.0%.


                        Fig. 7
                         compares the distribution of the segmentation errors of both our method and PCA based model on femur and pelvis, respectively. The 90%th percentiles of the femur and pelvis segmentation error of our method are 2.0mm and 2.7mm, respectively.

To evaluate the effectiveness of our shape model, we compare with the PCA based shape model (as in [2]), for which the result is shown in the last two rows in Table 2. Comparing this with the first two rows of Table 2, we see that our shape model outperforms the PCA based one (with p-value 
                           
                              <
                              
                                 
                                    10
                                 
                                 
                                    -
                                    4
                                 
                              
                           
                         for both femur and pelvis, under paired t-test).

In Table 3
                        , we show the breakdown of our method, where “LM” means the landmark detection, “Reg.” means the shape regularization, and “Post” stands for the post-processing. For each step, we show the average time consumed (by the step itself, not the accumulated time), and the average error achieved up to this step. In this table we can see how each step increases the accuracy. We can also see that it takes 4–5min for all the steps needed to process an image. In Table 3 we are particularly interested by the post processing step, which reduces the mean error from 1.4mm to 1.2mm for femur and from 2.4mm to 1.9mm for pelvis. Some qualitative comparison for the post-processing is shown in Fig. 8
                        . We can see that some minor problems where the segmented contour is not tightly aligned with the ground-truth are solved.

Finally, we note that the result here is not directly comparable with the results reported in [2] due to several reasons. First, we are using different image sets. Particularly, in part of our test images the regions to be segmented are occluded by implants (see Fig. 6). Second, we perform both femur and pelvis segmentation, while [2] only segments femur. Third, we model the femur contour details such as the lesser trochanter, and these details are missing in [2] which uses a simplified model.

As mentioned above, to improve efficiency, we selected 100 features from the original 3969 dimensional feature space. In this section we estimate the impact of feature selection. As the quality of feature directly influences the quality of the random-forest mapping 
                           
                              d
                              =
                              ϕ
                              (
                              f
                              )
                           
                         as in Section 4.1, the most convincing evaluation is by calculating the error of the displacement vector given by the learned mapping. To this end, for a specific landmark, we split the training patches in Section 4.1 into two disjoint sets 
                           
                              
                                 
                                    {
                                    (
                                    
                                       
                                          f
                                       
                                       
                                          i
                                       
                                    
                                    ,
                                    
                                       
                                          d
                                       
                                       
                                          i
                                       
                                    
                                    )
                                    }
                                 
                                 
                                    i
                                    =
                                    1
                                    …
                                    
                                       
                                          N
                                       
                                       
                                          1
                                       
                                    
                                 
                              
                           
                         and 
                           
                              
                                 
                                    {
                                    (
                                    
                                       
                                          f
                                       
                                       
                                          i
                                       
                                       
                                          ′
                                       
                                    
                                    ,
                                    
                                       
                                          d
                                       
                                       
                                          i
                                       
                                       
                                          ′
                                       
                                    
                                    )
                                    }
                                 
                                 
                                    i
                                    =
                                    1
                                    …
                                    
                                       
                                          N
                                       
                                       
                                          2
                                       
                                    
                                 
                              
                           
                        . Then, from 
                           
                              
                                 
                                    {
                                    (
                                    
                                       
                                          f
                                       
                                       
                                          i
                                       
                                    
                                    ,
                                    
                                       
                                          d
                                       
                                       
                                          i
                                       
                                    
                                    )
                                    }
                                 
                                 
                                    i
                                    =
                                    1
                                    …
                                    
                                       
                                          N
                                       
                                       
                                          1
                                       
                                    
                                 
                              
                           
                        , we learn a feature selector 
                           
                              ϒ
                              (
                              f
                              )
                           
                         as in Section 4.3, and then a random forest mapping 
                           
                              ϕ
                           
                         is trained. The prediction error of the learned mapping is given by:
                           
                              (8)
                              
                                 
                                    
                                       1
                                    
                                    
                                       
                                          
                                             N
                                          
                                          
                                             2
                                          
                                       
                                    
                                 
                                 
                                    
                                       
                                          ∑
                                       
                                       
                                          i
                                          =
                                          1
                                       
                                       
                                          
                                             
                                                N
                                             
                                             
                                                2
                                             
                                          
                                       
                                    
                                 
                                 
                                    
                                       
                                          
                                             ϕ
                                             
                                                
                                                   
                                                      ϒ
                                                      (
                                                      
                                                         
                                                            f
                                                         
                                                         
                                                            i
                                                         
                                                         
                                                            ′
                                                         
                                                      
                                                      )
                                                   
                                                
                                             
                                             -
                                             
                                                
                                                   d
                                                
                                                
                                                   i
                                                
                                                
                                                   ′
                                                
                                             
                                          
                                       
                                    
                                    
                                       2
                                    
                                 
                              
                           
                        which is the average Euclidean distance between the ground-truth and predicted displacement vectors. This evaluation is repeated for different landmarks and the final average error is derived.

We compare our method with two competitors: PCA and feature importance 
                        [22]. PCA reduces feature dimension by projecting feature vector onto the largest principal components. Feature importance only keeps feature dimensions with high importance, which is measured by the performance drop by permute values of this dimension across all of the observations in the data.


                        Fig. 9
                        (a) shows the average error of the three compared methods, with different output feature dimensions. We can see that, with output dimension 100 (which is used in the following experiments), we are able to get similar accuracy as the original full 3969 dimensional feature. From this we conclude that our feature selection has no noticeable effect on accuracy. With regard to the efficiency, Fig. 9(b) shows the time used to detect each landmark when the feature dimension is 100 and 3969. We can see that with a reduced feature space, detecting each landmark using Random Forest method is at least twice faster than the original feature space. So from Fig. 9(a) and (b) we can conclude that our feature selection process speeds up the computation without sacrificing the accuracy. In addition, in Fig. 9(c) we plot the training time needed for different feature selection strategies. We see that our method is much faster than Feature importance measurement, although the latter has similar accuracy to our method as in Fig. 9(a).

@&#CONCLUSIONS@&#

We have proposed a new fully-automatic method for left femur and pelvis segmentation in conventional AP X-ray images. Our method features a hierarchical segmentation framework, a new visual feature, an efficient and effective feature selection algorithm, and the shape model based on sparse representation. Experiments show that our method achieves good results, and that the different contributions (feature selection, shape model) indeed improve the performance. Although we demonstrate our method using the left femur and left pelvis, our method can be readily extended to the right side. In the future, we are also interested in extending our method into 3D data.

@&#REFERENCES@&#

