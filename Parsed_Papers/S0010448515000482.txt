@&#MAIN-TITLE@&#Conformance checking of PMI representation in CAD model STEP data exchange files

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           Geometric and dimensional tolerances (PMI) are represented in STEP files.


                        
                        
                           
                           Correct implementation of PMI ensures interoperability with downstream applications.


                        
                        
                           
                           A software tool has been developed for conformance checking of PMI in STEP files.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

CAD software

Interoperability

PMI

STEP

Recommended practices

Tolerances

@&#ABSTRACT@&#


               Graphical abstract
               
                  
                     
                        
                           
                        
                     
                  
               
            

@&#INTRODUCTION@&#

Standards for product data representation that can be exchanged by most computer-aided design and manufacturing software applications are essential to digital manufacturing  [1]. No single software tool can perform all of the engineering tasks needed to design and manufacture a product. Users will mix and match software products according to their business objectives. Suppliers may not have access to the same software as original equipment manufacturers. In principle, data exchange standards define an agreed-upon syntax and structure of 3D modeling constructs and annotations for tolerances and dimensions so that all participants in the manufacturing supply chain can understand each other’s models. The reality, however, is that software implementations do not always conform to product information exchange standards.

Determining conformance of a software application to a product data exchange standard is hard due to two challenges inherent in information standards conformance testing. The first challenge is bridging the gap between product design concepts as presented to software developers and concepts in the data model defined in the standard. Product data formats are designed to be interoperable with other related data formats and to facilitate implementation in software. They are generally not designed with human-readability and comprehension in mind. The second challenge is determining whether a software application correctly implements the semantics as defined in the standard. This is hard because, although a standard may precisely specify data syntax and structure in a manner amenable to computer processing, semantics are usually specified less precisely in the form of technical implementation guidance with examples that can be used for human-assisted checking. If semantics are not directly computer-executable and are subject to human interpretation, checking for proper implementation of those semantics may yield ambiguous results and be difficult to automate.

This paper discusses an approach that addresses both challenges. It focuses on a subset of product data known as Product and Manufacturing Information (PMI), whose representation is specified in the ISO 10303 Standard for the Exchange of Product Model Data (STEP)  [2–4]. To bridge the mismatch between the views of PMI provided by computer-aided design (CAD) software versus the view of the data as represented using STEP, data exchange file syntax is converted into a format that is more amenable for human analysis and comparison with CAD software output. To aid in checking conformance of software to STEP recommended practices for PMI, automated checking of exported STEP files for conformance to the technical guidance in the recommended practices documentation is implemented.

In this paper, Section  2 discusses PMI, its representation and presentation, and how it is modeled using STEP. Section  3 introduces the concepts behind conformance and interoperability testing. Section  4 discusses recommended practices and introduces the STEP File Analyzer software tool for reporting conformance of STEP files to PMI recommended practices.

PMI consists of annotations and attributes associated with CAD model edges and faces in order to define product geometry and product specifications  [5]. PMI includes annotations to specify Geometric Dimensioning and Tolerancing (GD&T), as well as non-geometric data such as surface texture specifications, finish requirements, process notes, material specifications, and welding symbols. GD&T is a symbolic language used to communicate tolerances on manufactured parts. The industry standards for presentation of GD&T in views in 3D space, also used in CAD systems, are ASME Y14.41-2012  [6] and ISO 16792:2006  [7]. ASME Y14.5-2009  [8] and ISO 1101:2012  [9] are the industry standards for the syntax and semantics of GD&T. GD&T, as specified by the ASME and ISO standards, has been used since the 1940s. It was developed to address problems related to describing variations in part and assembly geometry  [10,11]. Some common types of GD&T include dimensional tolerances on length and diameter, and geometric tolerances on flatness, position, perpendicularity, surface profile, and circular runout.

PMI is a critical element to formally specify Model-Based Definition (MBD) in digital product models and enabling the transition to digital manufacturing  [12]. The MBD dataset comprises a complete definition of the product, without relying on supplemental documents such as 2D drawings. Drawings are not needed when annotations are associated with objects in the model and can be viewed with the model. The MBD dataset enables CAD systems to manipulate, import, and export 3D solid models. It also enables Computer Aided Manufacturing (CAM) software to define and validate machine-readable instructions for manufacturing and Computer Aided Engineering (CAE) software to validate and optimize the product definition. Manufacturers are recognizing the benefits of MBD and are moving away from reliance on 2D drawings to represent PMI  [13,14]. MBD is the chief driver for the inclusion of PMI in STEP, to be discussed in Section  2.3.

By augmenting a product’s MBD with information associating models with documents such as authorizations, approvals, and change requests, and by employing a service-oriented architecture, PMI representation can enable integration of engineering and business systems  [15]. This integration allows Product Lifecycle Management (PLM) software to control access and manage change of the various models and documents associated with the product. Applications such as Enterprise Resource Planning and Manufacturing Execution Systems can extract raw material and component information from product models.


                        Fig. 1
                         defines syntax and semantics for the flatness tolerance, one of many PMI constructs specified in the ASME Y14.5 standard. Two side views of a simple object are shown in both halves of the figure. The upper diagram labeled ‘This on the drawing’ defines the syntax of a flatness tolerance by way of an example. The rectangular frame, with the symbol and number, points to the surface to which the flatness tolerance is applied. The symbol for the flatness tolerance is a parallelogram. ‘0.15’ refers to the width of the tolerance zone. The lower diagram labeled ‘Means this’ defines the semantics of the flatness tolerance where the surface must lie between two parallel planes 0.15 units apart shown in gray. In other words, the actual surface of the manufactured part has to be contained within a tolerance zone that is 0.15 units thick.


                        Fig. 2
                         shows a CAD model with representative GD&T annotations including dimensions, tolerances, geometry control tools, tolerance zones, datum reference frames, and datum features. Many CAD systems have the capability to apply GD&T annotations to model geometry and export them to a STEP file.

An important distinction is the difference between PMI representation and presentation  [4]. PMI representation includes all information necessary to represent GD&T without any graphical presentation elements. PMI representation is associated with CAD model geometry and is computer-interpretable to facilitate automated consumption by downstream applications for manufacturing, measurement, inspection, and other processes. PMI representation does not contain any information regarding visual appearance of annotations, although an importing CAD system can recreate a (not necessarily identical) visual presentation from the representation. PMI presentation (also known as graphical PMI) consists of geometric elements such as lines and arcs preserving the exact appearance (color, shape, positioning) of the GD&T annotations. PMI presentation is not intended to be computer-interpretable and does not carry any representation information, although it can be linked to its corresponding PMI representation. PMI presentation corresponds to Fig. 2 and to the upper diagram ‘This on the drawing’ in Fig. 1.

STEP is a family of standards defining a methodology for describing product data throughout the life cycle of a product. STEP is widely used in CAD systems and is a critical enabler of digital manufacturing, an information-based paradigm that allows for rapid design-to-production and reduces downstream costs  [13,16].

An application protocol (AP) in STEP specifies an information model for a particular engineering or technical domain. APs are what software developers implement, most often as import and export interfaces to their CAD applications. For example, AP203 is for configuration-controlled 3D design of mechanical parts and assemblies  [17] and AP214 captures automotive mechanical design information  [18]. Both AP203 and AP214 are widely implemented in CAD applications. A STEP AP specifies its information model as a schema written in EXPRESS (ISO 10303-11)  [19], an information modeling language combining ideas from the entity-attribute relationship family of modeling languages with concepts from object-oriented modeling. This language was developed in the 1980s when few, if any, alternatives existed that had the combined representational capabilities needed for the ambitious scope of STEP  [20].

STEP AP242, known as Managed Model Based 3D Engineering, is a new STEP specification approved by ISO in 2014  [21]. It covers the scopes of both AP203 and AP214, and also contains many new capabilities that enable the machine-readable representation of manufacturing and assembly information, such as assembly tolerances, surface finish, and manufacturing process information [4,22]. This information is vital for digital manufacturing and interoperability with downstream application such as manufacturing and inspection. AP242 includes EXPRESS models for PMI representation. AP242’s EXPRESS models for PMI are based on definitions from other ISO standards, particularly those from Technical Committee (TC) 213  [23]. TC 213 standardizes specifications for dimensional and geometric tolerancing, surface properties, and the related verification principles and requirements. TC 213 standards define the syntax and semantics of the annotations used to specify PMI and are aligned with a mathematical theory of dimensioning and parameterization of product geometry  [10].


                        Fig. 3
                         shows the AP242 EXPRESS schema representation for the flatness_tolerance entity with four attributes: name, description, magnitude, and toleranced_shape_aspect, each with an attribute type. For example, the name attribute is represented by a label. The values for the magnitude and toleranced_shape_aspect correspond to the tolerance value and the surface to which the flatness tolerance is applied to in the “This on the drawing” section of Fig. 1.

STEP data (i.e., an instance population of an EXPRESS schema) are typically exchanged as files using an ASCII character-based syntax defined in ISO 10303-21 also known as a STEP “Part 21” file  [24]. Fig. 4
                         shows an example of STEP data for the representation of a flatness tolerance. Each entity instance is identified by a number which is used as a reference by other entity instances. In this example, the flatness_tolerance entity refers to the length_measure_with_unit and shape_aspect entities. These correspond to the magnitude and toleranced_shape_aspect attributes from Fig. 3. A shape aspect is any geometric element, in this case the surface to which the flatness tolerance is applied.

Kindrick et al.  [25] define conformance testing as “the assessment of a product to determine if it behaves as expected while interoperating with a reference system”. In the context of this paper, the “product” is a STEP file that is exported from a CAD system and the “reference system” is the STEP schema and relevant recommended practices. Conformance testing of a STEP file will “determine if it behaves as expected”, i.e., whether it conforms to the schema and recommended practices.

A guiding principle for improving conformance and interoperability testing of STEP implementations is that conformance testing should provide the basis for determining interoperability between CAD systems  [26]. Conformance testing can detect interoperability problems early in the development of a system. A system shown to pass conformance testing does not guarantee that it can interoperate with other systems, however, non-conformant systems will be less able to interoperate. While conformance testing is more formal with respect to the standard, interoperability testing is less constrained by the standard and can look at issues related to how information is exchanged between systems. Without conformance testing, interoperability testing usually results in satisfying the requirements of point-to-point information exchange, i.e., between only two interoperating systems with no guarantee that they can interoperate with a third system.

For conformance testing, input specifications, such as 2D or 3D drawings, are used to model a part or assembly in the CAD system that is being tested. The input specification for the object to be modeled can include geometry, dimensions, tolerances, materials, and relationships between other parts in an assembly. Conformance testing analyzes the resulting exported STEP file from the CAD system for syntax, structure, and semantics. The analysis of the syntax of the exchange format file looks at the ‘grammar’ of the values, i.e. whether values have the correct data type. Structure analysis looks at the values, entities, and relationships between them, for example, whether a linear dimension is correctly specified by a length value as opposed to an angle. The syntax and structure of a STEP file can be automatically tested with several free and commercial STEP file checkers.

Kindrick et al. define “semantic analysis” as verification “that the semantics defined by the information requirements of the application protocol of interest are accurately conveyed in the observed output”. The key phrase in this definition is “observed output”. In this context “semantic analysis” of a STEP file is a visual comparison and verification of the STEP geometry, the “observed output”, with the CAD system model and input specifications. The visual comparison can also include GD&T annotations. This type of analysis of a STEP file is harder and involves determining if the information in the file is accurate with respect to the input specifications of the model. A viewer can be used to confirm that the STEP file geometry and annotations appear the same as the original CAD system model and input specifications. A more detailed comparison between the STEP file geometry and CAD model can be done in a semi-automated manner with CAD model comparison software.

Recommended practices are specifications that provide common implementation guidance associated with specific functionalities for data exchange. Recommended practices define syntax and structure of information needed for conformance testing beyond what is defined in an EXPRESS schema. Recommended practices do not cover all aspects of functionality that could be included in a STEP file. Rather they target specific functionalities, such as PMI and GD&T, where additional guidance is needed for STEP translator and CAD system software developers. Without recommended practices, STEP files can reliably exchange only the simplest characteristics of a manufactured part such as basic geometry.

Recommended practices are limited in scope to the data CAD systems are able to represent and exchange. For PMI, this data consists of syntactic structures needed for PMI presentation and representation. Unlike the ISO 17450 standard developed by TC 213  [27], the recommended practices do not provide a comprehensive, mathematically-based model of semantics for PMI. ISO17450 has a bigger scope than syntactic structures represented in CAD systems  [28]. Its implementation in CAD systems and inclusion in recommended practices cannot happen without further advances in CAD technology.

Conformance testing checks STEP files exported from a CAD system against an EXPRESS schema and recommended practices. Conformance testing is necessary to better ensure interoperability with the CAD system that is importing the STEP file. Because of the limited scope of the recommended practices for PMI, PMI conformance testing of STEP files is confined to checking whether the STEP file correctly encodes the data structures a CAD system requires for PMI representation and presentation.

The following subsections describe the implementation for checking STEP file conformance to the recommended practice for PMI representation. The subsections will specifically discuss 
                        
                           •
                           how the CAx Implementor Forum creates recommended practices documentation,

how a recommended practice is documented, using an example from the Recommended Practices for PMI Representation and Presentation,

the STEP File Analyzer software application for checking conformance of the PMI representation in the STEP file to the recommended practice,

how the software reports results, including recreation of the PMI presentation from the PMI representation to aid humans in comparing a model’s PMI representation in STEP with its graphical presentation, and

how the software application reports results for PMI presentation and validation properties.

The CAx Implementor Forum (CAx-IF)  [29] defines recommended practices  [30] for interoperable data exchange using STEP files. CAx-IF experts in STEP and EXPRESS develop the recommended practices, with assistance from domain experts in the functionality that the recommended practice addresses. The CAx-IF’s objective is to advance CAx software system translator development and to ensure that user requirements for interoperability are satisfied. CAx refers mainly to Computer-Aided Design, Engineering, and Manufacturing (CAD, CAE, and CAM) software. The CAx-IF was formed in 1999 as a joint venture sponsored by PDES, Inc.  [31] and ProSTEP iViP  [32]. Members of CAx-IF include vendors of major CAD software systems and other software vendors who have import or export translators for AP203, AP214, and AP242  [33].

The CAx-IF also develops test case specifications  [34]. These provide guidance on which functionalities to test, how to create test models, and definitions of the test criteria. Software vendors author native CAD models based on test case specification guidance and export STEP files. Results based on test criteria are collected based on the conformance of the STEP files to their associated schemas and recommended practices, and the results of exchanging the STEP files with other CAD systems. Quarterly CAx-IF meetings and teleconferences provide a forum for discussing recommended practices, implementation issues, test case specifications, and test results. Software vendors use the test results to improve their STEP export and import translators.

Examples of CAx-IF developed recommended practices include: 
                           
                              •
                              representation and presentation of product manufacturing and information (PMI)  [35]
                              

validation properties — quantities related to features of a CAD model that are computed by the native CAD software used to validate the import of those quantities  [36]
                              

composite materials  [37]
                              

model styling and organization  [38]
                              

user-defined attributes  [39].

The CAx-IF also publishes an Implementation Coverage matrix that provides an overview of capabilities, based on CAx-IF Recommended Practices, which are supported in production versions of CAD system and STEP translator software [40]. The matrix lists, for each software that participates in CAx-IF testing, the import and export capabilities for STEP AP203, AP214, and AP242 files with respect to recommended practice functionalities including PMI representation and presentation.

A recommended practice specifies a pattern of STEP entities, attributes, and required values that define a specific functionality for data exchange. For example, a recommended practice for PMI representation specifies relationships between and the use of STEP entities for dimensional tolerances, geometric tolerances, and datum features to create representations of those features. Recommended practices are documented through EXPRESS-G diagrams (a graphical version of information similar to Fig. 3), examples of STEP file instantiations similar to Fig. 4, and technical implementation guidance.


                        Fig. 5
                         shows an EXPRESS diagram of the pattern of entities, attributes, and values from the recommended practice documentation [35] for the representation of a linear dimension between two surfaces with a plus–minus tolerance. An example of a linear dimension of 15.0 with plus–minus bounds of 0.05 (15±0.05) is shown on the CAD model in the upper right of Fig. 2. In Fig. 5, the boxes contain entity names. The names of entity attributes are displayed next to the lines connecting the boxes. A line between boxes indicates a reference from an entity attribute where the referred-to entity is at the end of the line with the circle. There are other entity attributes that are not shown in the diagram and are not relevant to the recommended practice. The numbers in parentheses are not part of the recommended practice and will be explained in Fig. 6
                        .

In Fig. 5, the dimensional_characteristic_representation entity has two attributes: dimension and representation. These attributes refer to two entities dimensional_location and shape_definition_representation, respectively. The shape_definition_representation entity refers to a length_measure_with_unit entity that contains the value of the dimension. The plus_minus_tolerance entity refers to the entities dimensional_location and tolerance_value to define the plus–minus bounds and associate it with the dimension.


                        Fig. 6 shows a small portion of a STEP file with the entities used for the representation of the linear dimension 15±0.05. This is an example of how the recommended practice shown in Fig. 5 is instantiated in a STEP file. STEP entities are rearranged and indented to show the hierarchy of information in the file. Only entities relevant to the description of the dimension are shown. The parenthetic numbers in Fig. 5 correspond to the ID of the entity instances in Fig. 6. The dimensional_location entity instance (#6507) is referred to by both the dimensional_characteristic_representation (#12271) and plus_minus_tolerance (#7761) entity instances.

In a manner similar to Fig. 5, there are patterns of entities, attributes, and required values that correspond to PMI representation for many other geometric tolerances and datum features  [35]. These can also be instantiated in STEP files similar to the example in Fig. 6.

NIST’s STEP File Analyzer  [41,42] software is used by developers of CAD software and STEP translator software to debug and verify their STEP file export capabilities. Input to the STEP File Analyzer is one or more STEP files. Output from the software is a spreadsheet that simplifies inspection of STEP entities and attributes. A worksheet is generated for every entity type in the STEP file where each row is an entity instance and the values in the columns are entity attributes. Sample output from the software is available on the STEP File Analyzer website  [41].

The STEP File Analyzer checks STEP files for conformance to CAx-IF recommended practices. The software checks that the pattern of entities, attributes, and required values for PMI representation is correct. The software also constructs a visual presentation of the PMI representation, which can be used for human-assisted confirmation against 2D or 3D graphical presentations of an annotation in a CAD model. This aids software developers in the “semantic analysis” of STEP files, referred to in Section  3, by visual comparison and verification of the PMI representation.


                        Fig. 7
                         shows an example of output from the STEP File Analyzer of an entity worksheet for the datum_system entity instances in a STEP file. Starting with row 4, each row contains the instance’s attribute values. Row 3 starting with cell B3 contains the names of the five entity attributes. 
                           
                              •
                              Column A is the entity ID

Column B is the name attribute and contains a string value

Column C is the optional description attributes

Column D is the of_shape attribute and contains a reference to a product_definition_shape entity instance with an ID of 37

Column E is the product_definitional attribute and contains a Boolean value

Column F is the constituents attribute that refers to either single or multiple datum_reference_compartment entity instances where the number in parentheses is the number of entity references and the numbers after the entity name are the instance IDs that are referenced.

The STEP File Analyzer’s internal representation of an instantiation pattern from a recommended practice is a nested list where each list is one entity and its associated relevant attributes. The first element in the list is always an entity, and the subsequent values are attributes. Lists are delimited by braces. Fig. 8
                         shows the nested list for the recommended practice for instantiating a linear dimension, and corresponds to the pattern of entities’ attributes in Fig. 5. Entities are shown in bold in the nested list.

The attributes of dimensional_characteristic_representation, dimension and representation refer to the entities dimensional_location and shape_dimension_representation respectively, thus the nested lists. The shape_dimension_representation entity has an attribute of items that refers to a length_measure_with_unit entity with an attribute of value_component.

Comparing the nested list of entities and attributes in Fig. 8 with the STEP entities and attributes in Fig. 6, the dimensional_location name attribute’s value is ‘linear distance’ and the length_measure_with_unit value_component attribute’s value is ‘15.0’. This results in the STEP File Analyzer reporting a linear dimension of 15 units. The plus–minus tolerance bounds are handled in a similar manner although the tolerance bounds refer to the dimension and not the other way around. In this manner, the STEP File Analyzer implementation encodes the visual presentations of recommended practices documentation, as shown in Fig. 5, as internal data structures that can be matched against a STEP file.

The STEP File Analyzer reports results of the conformance checking of PMI representation by recreating the visual presentation of a GD&T annotation. Fig. 9
                         shows one of the annotations from the model in Fig. 2. From top to bottom, the annotation contains three distinct components: 
                           
                              1.
                              Linear dimension (15.0) with plus–minus tolerance (0.05)

Feature Control Frame with three sections: 
                                    
                                       a.
                                       Position symbol (
                                             
                                          )

Tolerance Zone definition (0.12) with maximum material condition and free-state modifiers, ‘M’ and ‘F’ in circles, respectively

Datum Reference Frame referring to datums ‘A’ and ‘B’ with a least material condition modifier (‘L’ in circle)

Datum Feature ‘C’.

By following the pattern of entities and attributes, the visual presentation of dimensional tolerances can be reconstructed from their PMI representation. Fig. 10
                         shows the reconstructed dimensional tolerances, as reported in the spreadsheet generated by the STEP File Analyzer, corresponding to the CAD model shown in Fig. 2. Cell A3 in Fig. 10 corresponds to the dimensional tolerance in Fig. 9 and the STEP file example in Fig. 6.

The recommended practice for PMI representation also defines patterns of entities and attributes for the other components of a GD&T annotation, such as the datum feature and the feature control frame, which contains the geometry control tool, tolerance zone definition, and datum reference frame. Fig. 11
                         shows the reconstruction of the GD&T annotations in the CAD model in Fig. 2 from the representation of the GD&T in the STEP file. The annotations are displayed as best as possible given the limitations of the character set available in the spreadsheet. Cell A4 corresponds to the annotation in Fig. 9. Recreating the visual presentation of the PMI representation is used for “semantic analysis” that the PMI representation corresponds to the 3D graphical presentations of GD&T annotations in a CAD model. The visual presentation should correspond to the relevant ASME and ISO standards for 2D and 3D annotations.

Similar to Fig. 11, Fig. 12
                         shows the visual presentation of GD&T annotations reconstructed from PMI representations. However, in this case the visual presentation does not completely correspond to the expected CAD model GD&T annotations in Fig. 2. This indicates either non-conformance to the recommended practice for PMI or bugs in the STEP file. The following PMI information is missing or wrong: 
                           
                              •
                              Cell A2 is missing the datum feature ‘A’

Cell A3 is missing the plus–minus bounds on the dimension

Cell A4 is missing a modifier in the datum reference frame and the dimension tolerance

Cell A5 is missing the dimension diameter symbol

Cell A6 has the wrong dimension and is missing the tolerance zone modifier

Cell A7 is missing the tolerance zone modifier

Cell A8 has the wrong tolerance zone value

The tolerance in cell A9 in Fig. 11 is missing.

The STEP File Analyzer also reports results related to CAx-IF recommended practices for PMI presentation  [35] and STEP file validation properties [36]. PMI presentation consists of geometric elements such as lines and arcs preserving the exact appearance (color, shape, positioning) of the GD&T annotations. A CAD model with PMI presentation is shown in Fig. 2. From the lines and arcs in a STEP file, the STEP File Analyzer generates a Virtual Reality Modeling Language (VRML) file that can be used to visually verify that the PMI presentation in the STEP file corresponds to the PMI annotations in the CAD model. VRML files can be viewed with freely available VRML viewers and web browser plugins [43].

Validation properties, defined by the CAx-IF, are an important tool to verify the exchange of certain information in a STEP file. For example, geometric validation properties  [36] are characteristics of solid and surface models, such as the area, volume, and centroid of a part. Geometric validation properties are computed by a CAD system and exported in a STEP file. When the STEP file is imported to a receiving CAD system, that system computes the same validation properties based on the imported part geometry and compares them to the values in the STEP file from the originating system. If the computed validation properties are within an agreed tolerance to the original validation properties, then the exchange of that geometric information has been validated. There are also validation properties related to PMI presentation such as the number of annotations and the graphical elements that are used to draw an annotation.

This paper has shown the connection between PMI syntax and semantics defined in ISO TC 214 and ASME standards, PMI representations specified in EXPRESS schemas and STEP files, and PMI implementation guidance from CAx-IF recommended practices. NIST’s STEP File Analyzer exploits this connection when checking data exchange files against recommended practices for PMI representation, and when recreating the visual presentation of the PMI so that it can be compared with the ASME and ISO standards for PMI.

In the introduction, two challenges were described: the gap between concepts in CAD systems and concepts in data exchange standards, and testing the implementation of the standards in the CAD systems. These challenges are addressed by the ability of the STEP File Analyzer to perform the “semantic analysis”, described in Section  3, of STEP files with PMI representation and presentation. Correct implementation of PMI representation and presentation in STEP files will facilitate the automated-downstream consumption of PMI.

The STEP File Analyzer has tested dozens of STEP files containing PMI representation. Some of these files came from CAx-IF test rounds  [34]. Others were STEP files from the NIST MBE PMI Validation and Conformance Testing Project conformance test suite for the ASME Y14.5 and Y14.41 standards  [44]. Fig. 13
                      shows one of the test cases from the test suite. Test results show that the STEP File Analyzer accurately recreates the visual presentation of PMI representation, shows conformance or non-conformance to recommended practices, and aids in the identification of errors in STEP files — all of which have led to improvements in CAD software implementations for PMI representation.

CAx-IF recommended practices are human-readable, but not computer-interpretable. As described in Section  4.2, the STEP File Analyzer represents recommended practices as an internal data structure derived from the pattern of entities and attributes from diagrams similar to Fig. 5. A limitation of the STEP File Analyzer is the internal data structures are hard-coded in the software. When recommended practices are updated, the software also has to be updated. If the recommended practices could be specified in a computer-interpretable language, and the STEP File Analyzer software could be extended to read and process this language, then the software could become a framework for checking any recommended practice without having to update the software for new or revised recommendations.

Such a framework would require a fundamental shift in how recommended practices are specified, from human-readable to a computer-interpretable format. This idea has been explored in the building industry, which uses the Industry Foundation Classes (IFC) for data exchange — a format similar to STEP  [45]. IFC has a concept similar to recommended practices known as a Model View Definition (MVD). The mvdXML format  [46] defines information exchange requirements to help in validating IFC files. mvdXML should be investigated in the context of STEP to see how it could be applied toward developing a computer-interpretable form of recommended practices.

@&#ACKNOWLEDGMENTS@&#

The authors wish to thank their colleagues in the CAx-IF for their feedback on the STEP File Analyzer and Dr. Vijay Srinivasan of NIST for his detailed review of the paper and insight into PMI.


                  Disclaimer
               

Any mention of commercial products in this paper is for information only; it does not imply recommendation or endorsement by NIST.

@&#REFERENCES@&#

