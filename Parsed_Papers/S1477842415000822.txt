@&#MAIN-TITLE@&#Horn clause verification with convex polyhedral abstraction and tree automata-based refinement

@&#HIGHLIGHTS@&#


               
                  
                  
                     
                        
                           
                           We construct a correspondence between Horn clauses and finite tree automata (FTA).


                        
                        
                           
                           We construct a refined clauses from an FTA of the clauses and an infeasible trace.


                        
                        
                           
                           We propose a splitting operator on FTAs and describe its role in verification.


                        
                        
                           
                           We demonstrate the feasibility of our approach in practice.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Horn clauses

Abstract interpretation

Finite tree automata

Tree automata determinisation

@&#ABSTRACT@&#


               
               
                  In this paper we apply tree-automata techniques to refinement of abstract interpretation in Horn clause verification. We go beyond previous work on refining trace abstractions; firstly we handle tree automata rather than string automata and thereby can capture traces in any Horn clause derivations rather than just transition systems; secondly, we show how algorithms manipulating tree automata interact with abstract interpretations, establishing progress in refinement and generating refined clauses that eliminate causes of imprecision. We show how to derive a refined set of Horn clauses in which given infeasible traces have been eliminated, using a recent optimised algorithm for tree automata determinisation. We also show how we can introduce disjunctive abstractions selectively by splitting states in the tree automaton. The approach is independent of the abstract domain and constraint theory underlying the Horn clauses. Experiments using linear constraint problems and the abstract domain of convex polyhedra show that the refinement technique is practical and that iteration of abstract interpretation with tree automata-based refinement solves many challenging Horn clause verification problems. We compare the results with other state-of-the-art Horn clause verification tools.
               
            

@&#INTRODUCTION@&#

The formalism of Constrained Horn clauses (CHCs), as an intermediate language for verification of programs in various languages, has become popular due to its well understood properties and expressiveness; this has led to a range of tools for analysis and verification of CHCs. Given a program and a property ϕ to be verified, a set of CHCs V, such that V is satisfiable if and only if ϕ holds, is called a verification condition for ϕ. CHC verification conditions can be obtained from imperative, functional or concurrent languages, among others, by a variety of semantics-based techniques including big- and small-step semantics, Hoare triples, or other intermediate forms such as control-flow graphs [1–6]. We do not consider the process of generating CHC verification conditions in this paper.

There are several approaches to checking the satisfiability of CHC verification conditions, including abstract interpretation and counterexample-guided abstraction refinement (see Section 7). In this paper we apply tree-automata techniques to refinement of abstract interpretation in Horn clause verification. We go beyond previous work on refining trace abstractions [7]; firstly, we handle tree automata rather than word automata and thereby can capture traces in any Horn clause derivations rather than just transition systems; secondly, we show how algorithms manipulating tree automata interact with abstract interpretations, establishing progress in refinement and generating refined clauses that eliminate causes of imprecision.

Our approach is similar in spirit to counterexample-guided abstraction refinement (CEGAR) or iterative specialisation approaches, in which a refined set of clauses is generated by eliminating one or more of the infeasible paths from the original set of clauses until the safety or unsafety of the clauses is proven. More specifically, we show how to construct tree automata capturing both the traces (derivations) of a given set of Horn clauses and also one or more infeasible traces discovered after abstract interpretation of the clauses. From these we construct a refined automaton in which the infeasible trace(s) have been eliminated and a new set of clauses is constructed from the refined automaton. This guarantees progress in that the same infeasible trace cannot be generated (in any abstract interpretation). In addition, the clauses are restructured during the elimination of the trace, which can lead to more precise abstractions in subsequent iterations. The refinement is manifested in the refined clauses, rather than in an accumulated set of properties as in the CEGAR [8] approach. We rely on the abstract interpretation of the clauses to generate useful properties, rather than hoping to find them during the refinement itself.

We also show how we can introduce disjunctive abstractions selectively by splitting states in the tree automaton. This splitting induces splitting in the predicates of the original set of clauses and its analysis using convex polyhedra leads to disjunctive abstractions. The approach is independent of the abstract domain and constraint theory underlying the Horn clauses. Experiments using linear constraint problems and the abstract domain of convex polyhedra show that the refinement technique is practical and that iteration of abstract interpretation with tree automata-based refinement solves many challenging Horn clause verification problems. We compare the results with other state-of-the-art Horn clause verification tools.

The main contributions of this paper are the following: (1) we construct a correspondence between computations using Horn clauses and finite tree automata (FTA) (Section 4). (2) We construct a refined set of clauses directly from a tree automaton representation of the clauses and an infeasible trace; the trace is eliminated from the refined clauses (Section 4.4). (3) We propose a “splitting” operator on FTAs (Section 3) and describe its role in Horn clause verification (Section 5.1). (4) We demonstrate the feasibility of our approach in practice applying it to Horn clause verification problems (Section 6).

This paper is an extended version of [9]. The paper has been extended in the following directions: (1) the proofs of all propositions have been provided; (2) further information about the implementation of our tool chain is given (see Section 6); (3) further experiments comparing our results with the state-of-the-art verification tools in the literature are provided (see Sections 4.5.1 and 4.5.2); (4) further experimental results on some additional benchmarks from the software verification competition 2015 have been provided (see Section 1).

To motivate readers, we present an example set of CHCs P in Fig. 1
                      which will be used throughout this paper. This is an interesting problem in which the computations are trees rather than linear sequences.

After applying abstract interpretation to this set of clauses, we obtain the following set of constrained facts (also called approximation): 
                        
                           
                              
                                 
                                    
                                 
                              
                           
                        
                     
                  

Since 
                        false
                      is in our approximation, our tool generates an abstract derivation for 
                        false
                      which in our case is the clause c3 followed by the clause c1 and is represented by a trace term c3(c1). Since this abstract counterexample is infeasible, our refinement procedure removes this from the set of clauses in Fig. 1 to produce a new set of clauses as shown in Fig. 2
                     . Our refinement can be viewed as a program transformation guided by a counterexample. From the set of refined clauses, it can be seen that the counterexample c3(c1) is impossible to construct. This refinement split the predicate mc91 of the original clauses and as a result of this we gain some precision. We again analyse the refined clauses using abstract interpretation until its safety or unsafety is proven. In the sections to follow we describe our abstraction-refinement procedure which led to this result in detail.

The architecture of our abstraction-refinement scheme is shown in Fig. 3
                     . It is accompanied by our main Algorithm 1 to give the early picture of our approach.
                        Algorithm 1
                        
                           Algorithm for abstraction-refinement of Horn clauses.
                              
                                 
                                    
                                    
                                       
                                          
                                             Input: A set of Horn clauses P
                                          
                                       
                                       
                                          
                                             Output: safe or unsafe
                                          
                                       
                                       
                                          1. analyse P using abstract interpretation producing constrained facts M (Algorithm 3);
                                       
                                       
                                          2. if 
                                                false
                                                ∉
                                                M
                                              then return 
                                             safe ;
                                       
                                       
                                          3. if 
                                                false
                                                ∈
                                                M
                                              then produce derivation t of 
                                                false
                                              using P ;
                                       
                                       
                                          4. if t is feasible return 
                                             unsafe ;
                                       
                                       
                                          5. 
                                                
                                                   
                                                      P
                                                   
                                                   
                                                      ′
                                                   
                                                
                                                ←
                                                refinedCls
                                                (
                                                P
                                                ,
                                                t
                                                )
                                              (Algorithm 4) ;
                                       
                                       
                                          9. 
                                                P
                                                ←
                                                
                                                   
                                                      P
                                                   
                                                   
                                                      ′
                                                   
                                                
                                              and goto step 1 ;
                                       
                                    
                                 
                              
                           
                        

Finite tree automata (FTAs) are mathematical machines that define so-called recognisable tree languages, which are possibly infinite sets of terms that have desirable properties such as closure under Boolean set operations and decidability of membership and emptiness.
                        Definition 1
                        Finite tree automaton


                        An FTA 
                              A
                            is a tuple 
                              (
                              Q
                              ,
                              
                                 
                                    Q
                                 
                                 
                                    f
                                 
                              
                              ,
                              Σ
                              ,
                              Δ
                              )
                           , where Q is a finite set of states, 
                              
                                 
                                    Q
                                 
                                 
                                    f
                                 
                              
                              ⊆
                              Q
                            is a set of final states, 
                              Σ
                            is a set of function symbols, and 
                              Δ
                            is a set of transitions. We assume that Q and 
                              Σ
                            are disjoint.

Each function symbol 
                        f
                        ∈
                        Σ
                      has an arity 
                        n
                        ≥
                        0
                     , written as 
                        ar
                        (
                        f
                        )
                        =
                        n
                     . The function symbols with arity 0 are called constants. 
                        Term
                        (
                        Σ
                        )
                      is the set of ground terms or trees constructed from 
                        Σ
                      where 
                        t
                        ∈
                        Term
                        (
                        Σ
                        )
                      iff 
                        t
                        ∈
                        Σ
                      is a constant or 
                        t
                        =
                        f
                        (
                        
                           
                              t
                           
                           
                              1
                           
                        
                        ,
                        
                           
                              t
                           
                           
                              2
                           
                        
                        ,
                        …
                        ,
                        
                           
                              t
                           
                           
                              n
                           
                        
                        )
                      where 
                        ar
                        (
                        f
                        )
                        =
                        n
                      and 
                        
                           
                              t
                           
                           
                              1
                           
                        
                        ,
                        
                           
                              t
                           
                           
                              2
                           
                        
                        ,
                        …
                        ,
                        
                           
                              t
                           
                           
                              n
                           
                        
                        ∈
                        Term
                        (
                        Σ
                        )
                     . Similarly 
                        Term
                        (
                        Σ
                        ∪
                        Q
                        )
                      is the set of terms/trees constructed from 
                        Σ
                      and Q, treating the elements of Q as constants.

Each transition in 
                        Δ
                      is of the form 
                        f
                        (
                        
                           
                              q
                           
                           
                              1
                           
                        
                        ,
                        
                           
                              q
                           
                           
                              2
                           
                        
                        ,
                        …
                        ,
                        
                           
                              q
                           
                           
                              n
                           
                        
                        )
                        →
                        q
                      where 
                        ar
                        (
                        f
                        )
                        =
                        n
                     . Given 
                        δ
                        ∈
                        Δ
                      we refer to its left- and right-hand-sides as 
                        lhs
                        (
                        δ
                        )
                      and 
                        rhs
                        (
                        δ
                        )
                      respectively. Let 
                        ⇒
                      be a one-step rewrite in which 
                        
                           
                              t
                           
                           
                              1
                           
                        
                        ⇒
                        
                           
                              t
                           
                           
                              2
                           
                        
                      iff t
                     2 is the result of replacing one subterm of t
                     1 equal to 
                        lhs
                        (
                        δ
                        )
                      by 
                        rhs
                        (
                        δ
                        )
                     , from some 
                        δ
                        ∈
                        Δ
                     . The reflexive, transitive closure of 
                        ⇒
                      is 
                        
                           
                              ⇒
                           
                           
                              ⁎
                           
                        
                     . We say there is a run (resp. successful run) for 
                        t
                        ∈
                        Term
                        (
                        Σ
                        )
                      if 
                        t
                        
                           
                              ⇒
                           
                           
                              ⁎
                           
                        
                        q
                      where 
                        q
                        ∈
                        Q
                      (resp. 
                        q
                        ∈
                        
                           
                              Q
                           
                           
                              f
                           
                        
                     ), and we say that t is accepted if t has a successful run. An FTA 
                        A
                      defines a set of terms, that is, a tree language, denoted by 
                        L
                        (
                        A
                        )
                     , as the set of all terms accepted by 
                        A
                     .
                        Definition 2
                        Deterministic FTA (DFTA)


                        An FTA 
                              (
                              Q
                              ,
                              
                                 
                                    Q
                                 
                                 
                                    f
                                 
                              
                              ,
                              Σ
                              ,
                              Δ
                              )
                            is called bottom-up deterministic iff 
                              Δ
                            has no two transitions with the same left hand side.

We omit the adjective “bottom-up” in this paper and just refer to deterministic FTAs. Runs of a DFTA are deterministic in the sense that for every 
                        t
                        ∈
                        Term
                        (
                        Σ
                        )
                      there is at most one 
                        q
                        ∈
                        Q
                      such that 
                        t
                        
                           
                              ⇒
                           
                           
                              ⁎
                           
                        
                        q
                     .

FTAs are closed under Boolean set operations, but for our purposes we mention only union and difference of language of automata, where in addition we assume that the signature 
                           Σ
                         is fixed and that the states of FTAs are disjoint from each other when applying operations (the states can be renamed apart).
                           Definition 3
                           Union of FTAs


                           Let 
                                 
                                    
                                       A
                                    
                                    
                                       1
                                    
                                 
                              , 
                                 
                                    
                                       A
                                    
                                    
                                       2
                                    
                                 
                               be FTAs 
                                 (
                                 
                                    
                                       Q
                                    
                                    
                                       1
                                    
                                 
                                 ,
                                 
                                    
                                       Q
                                    
                                    
                                       f
                                    
                                    
                                       1
                                    
                                 
                                 ,
                                 Σ
                                 ,
                                 
                                    
                                       Δ
                                    
                                    
                                       1
                                    
                                 
                                 )
                               and 
                                 (
                                 
                                    
                                       Q
                                    
                                    
                                       2
                                    
                                 
                                 ,
                                 
                                    
                                       Q
                                    
                                    
                                       f
                                    
                                    
                                       2
                                    
                                 
                                 ,
                                 Σ
                                 ,
                                 
                                    
                                       Δ
                                    
                                    
                                       2
                                    
                                 
                                 )
                               respectively. Then 
                                 
                                    
                                       A
                                    
                                    
                                       1
                                    
                                 
                                 ∪
                                 
                                    
                                       A
                                    
                                    
                                       2
                                    
                                 
                                 =
                                 (
                                 
                                    
                                       Q
                                    
                                    
                                       1
                                    
                                 
                                 ∪
                                 
                                    
                                       Q
                                    
                                    
                                       2
                                    
                                 
                                 ,
                                 
                                    
                                       Q
                                    
                                    
                                       f
                                    
                                    
                                       1
                                    
                                 
                                 ∪
                                 
                                    
                                       Q
                                    
                                    
                                       f
                                    
                                    
                                       2
                                    
                                 
                                 ,
                                 Σ
                                 ,
                                 
                                    
                                       Δ
                                    
                                    
                                       1
                                    
                                 
                                 ∪
                                 
                                    
                                       Δ
                                    
                                    
                                       2
                                    
                                 
                                 )
                              , and we have 
                                 L
                                 (
                                 
                                    
                                       A
                                    
                                    
                                       1
                                    
                                 
                                 ∪
                                 
                                    
                                       A
                                    
                                    
                                       2
                                    
                                 
                                 )
                                 =
                                 L
                                 (
                                 
                                    
                                       A
                                    
                                    
                                       1
                                    
                                 
                                 )
                                 ∪
                                 L
                                 (
                                 
                                    
                                       A
                                    
                                    
                                       2
                                    
                                 
                                 )
                              .


                        Determinisation plays a key role in the theory of FTAs. As far as expressiveness is concerned, we can limit our attention to DFTAs since for every FTA 
                           A
                         there exists a DFTA 
                           
                              
                                 A
                              
                              
                                 d
                              
                           
                         such that 
                           L
                           (
                           A
                           )
                           =
                           L
                           (
                           
                              
                                 A
                              
                              
                                 d
                              
                           
                           )
                         
                        [10]. The standard construction builds a DFTA 
                           
                              
                                 A
                              
                              
                                 d
                              
                           
                         whose states are elements of the powerset of the states of 
                           A
                        . The textbook procedure for constructing 
                           
                              
                                 A
                              
                              
                                 d
                              
                           
                         from 
                           A
                         
                        [10] is not viewed as a practical procedure for manipulating tree automata, even fairly small ones. In a recent work Gallagher et al. [11] developed an optimised algorithm for determinisation, whose worst-case complexity remains unchanged, but which performs dramatically better than existing algorithms in practice. A critical aspect of the algorithm is that the transitions of the determinised automaton are generated in a potentially very compact form called product form, which can often be used directly when manipulating the determinised automaton.
                           Definition 4
                           Product transition


                           A product transition is of the form 
                                 f
                                 (
                                 
                                    
                                       Q
                                    
                                    
                                       1
                                    
                                 
                                 ,
                                 …
                                 ,
                                 
                                    
                                       Q
                                    
                                    
                                       n
                                    
                                 
                                 )
                                 →
                                 q
                               where Q
                              
                                 i
                               are sets of states and q is a state. The product transition represents a set of transitions 
                                 {
                                 f
                                 (
                                 
                                    
                                       q
                                    
                                    
                                       1
                                    
                                 
                                 ,
                                 …
                                 ,
                                 
                                    
                                       q
                                    
                                    
                                       n
                                    
                                 
                                 )
                                 →
                                 q
                                 ∣
                                 
                                    
                                       q
                                    
                                    
                                       i
                                    
                                 
                                 ∈
                                 
                                    
                                       Q
                                    
                                    
                                       i
                                    
                                 
                                 ,
                                 i
                                 =
                                 1
                                 
                                 ..
                                 
                                 n
                                 }
                              . Thus 
                                 
                                    
                                       Π
                                    
                                    
                                       i
                                       =
                                       1
                                    
                                    
                                       n
                                    
                                 
                                 |
                                 
                                    
                                       Q
                                    
                                    
                                       i
                                    
                                 
                                 |
                               transitions are represented by a single product transition.

Alternatively, we can regard a product transition as introducing ϵ-transitions. An ϵ-transition has the form 
                           
                              
                                 q
                              
                              
                                 1
                              
                           
                           →
                           
                              
                                 q
                              
                              
                                 2
                              
                           
                         where 
                           
                              
                                 q
                              
                              
                                 1
                              
                           
                           ,
                           
                              
                                 q
                              
                              
                                 2
                              
                           
                         are states. ϵ-Transitions can be eliminated, if desired. Given a product transition 
                           f
                           (
                           
                              
                                 Q
                              
                              
                                 1
                              
                           
                           ,
                           …
                           ,
                           
                              
                                 Q
                              
                              
                                 n
                              
                           
                           )
                           →
                           q
                        , introduce n new non-final states 
                           
                              
                                 s
                              
                              
                                 1
                              
                           
                           ,
                           …
                           ,
                           
                              
                                 s
                              
                              
                                 n
                              
                           
                         corresponding to 
                           
                              
                                 Q
                              
                              
                                 1
                              
                           
                           ,
                           …
                           ,
                           
                              
                                 Q
                              
                              
                                 n
                              
                           
                         respectively and replace the product transition by the set of transitions 
                           {
                           f
                           (
                           
                              
                                 s
                              
                              
                                 1
                              
                           
                           ,
                           …
                           ,
                           
                              
                                 s
                              
                              
                                 n
                              
                           
                           )
                           →
                           q
                           }
                           ∪
                           {
                           
                              
                                 q
                              
                              
                                 ′
                              
                           
                           →
                           
                              
                                 s
                              
                              
                                 i
                              
                           
                           ∣
                           
                              
                                 q
                              
                              
                                 ′
                              
                           
                           ∈
                           
                              
                                 Q
                              
                              
                                 i
                              
                           
                           ,
                           1
                           =
                           1
                           
                           ..
                           
                           n
                           }
                        . It can be shown that this transformation preserves the language of the FTA.

Given FTAs 
                           
                              
                                 A
                              
                              
                                 1
                              
                           
                         and 
                           
                              
                                 A
                              
                              
                                 2
                              
                           
                         there exists an FTA 
                           
                              
                                 A
                              
                              
                                 1
                              
                           
                           ⧹
                           
                              
                                 A
                              
                              
                                 2
                              
                           
                         such that 
                           L
                           (
                           
                              
                                 A
                              
                              
                                 1
                              
                           
                           ⧹
                           
                              
                                 A
                              
                              
                                 2
                              
                           
                           )
                           =
                           L
                           (
                           
                              
                                 A
                              
                              
                                 1
                              
                           
                           )
                           ⧹
                           L
                           (
                           
                              
                                 A
                              
                              
                                 2
                              
                           
                           )
                        . To construct the difference FTA we use union and determinisation and exploit the following property of determinised states [11].
                           Property 1
                           
                              Let 
                              
                                 
                                    
                                       A
                                    
                                    
                                       d
                                    
                                 
                               
                              be the DFTA constructed from 
                              
                                 A
                              . Let Q be the states of 
                              
                                 A
                              . Then there is a run 
                              
                                 t
                                 
                                    
                                       ⇒
                                    
                                    
                                       ⁎
                                    
                                 
                                 q
                               
                              in 
                              
                                 A
                               
                              if and only if there is a run 
                              
                                 t
                                 
                                    
                                       ⇒
                                    
                                    
                                       ⁎
                                    
                                 
                                 
                                    
                                       Q
                                    
                                    
                                       ′
                                    
                                 
                               
                              in 
                              
                                 
                                    
                                       A
                                    
                                    
                                       d
                                    
                                 
                               
                              where 
                              
                                 
                                    
                                       Q
                                    
                                    
                                       ′
                                    
                                 
                                 ∈
                                 
                                    
                                       2
                                    
                                    
                                       Q
                                    
                                 
                              , such that 
                              
                                 q
                                 ∈
                                 
                                    
                                       Q
                                    
                                    
                                       ′
                                    
                                 
                              .

Furthermore recall that a term is accepted by at most one state in a DFTA. This gives rise to the following construction of the difference FTA 
                           
                              
                                 A
                              
                              
                                 1
                              
                           
                           ⧹
                           
                              
                                 A
                              
                              
                                 2
                              
                           
                        . We first form the DFTA for the union of the two FTAs and then remove those of its final states containing the final states of 
                           
                              
                                 A
                              
                              
                                 2
                              
                           
                        . In this way we remove the terms, and only the terms (by Property 1), accepted by 
                           
                              
                                 A
                              
                              
                                 2
                              
                           
                        . The availability of a practical algorithm for determinisation is what makes this construction of the difference FTA feasible.
                           Definition 5
                           Construction of difference of FTAs


                           Let 
                                 
                                    
                                       A
                                    
                                    
                                       1
                                    
                                 
                                 ,
                                 
                                    
                                       A
                                    
                                    
                                       2
                                    
                                 
                               be FTAs 
                                 (
                                 
                                    
                                       Q
                                    
                                    
                                       1
                                    
                                 
                                 ,
                                 
                                    
                                       Q
                                    
                                    
                                       f
                                    
                                    
                                       1
                                    
                                 
                                 ,
                                 Σ
                                 ,
                                 
                                    
                                       Δ
                                    
                                    
                                       1
                                    
                                 
                                 )
                               and 
                                 (
                                 
                                    
                                       Q
                                    
                                    
                                       2
                                    
                                 
                                 ,
                                 
                                    
                                       Q
                                    
                                    
                                       f
                                    
                                    
                                       2
                                    
                                 
                                 ,
                                 Σ
                                 ,
                                 
                                    
                                       Δ
                                    
                                    
                                       2
                                    
                                 
                                 )
                               respectively. Let 
                                 (
                                 
                                    
                                       Q
                                    
                                    
                                       ′
                                    
                                 
                                 ,
                                 
                                    
                                       Q
                                    
                                    
                                       f
                                    
                                    
                                       ′
                                    
                                 
                                 ,
                                 Σ
                                 ,
                                 
                                    
                                       Δ
                                    
                                    
                                       ′
                                    
                                 
                                 )
                               be the determinisation of 
                                 
                                    
                                       A
                                    
                                    
                                       1
                                    
                                 
                                 ∪
                                 
                                    
                                       A
                                    
                                    
                                       2
                                    
                                 
                              . Let 
                                 
                                    
                                       Q
                                    
                                    
                                       2
                                    
                                 
                                 =
                                 {
                                 
                                    
                                       Q
                                    
                                    
                                       ′
                                    
                                 
                                 ∈
                                 
                                    
                                       Q
                                    
                                    
                                       ′
                                    
                                 
                                 ∣
                                 
                                    
                                       Q
                                    
                                    
                                       ′
                                    
                                 
                                 ∩
                                 
                                    
                                       Q
                                    
                                    
                                       f
                                    
                                    
                                       2
                                    
                                 
                                 ≠
                                 ∅
                                 }
                              . Then 
                                 
                                    
                                       A
                                    
                                    
                                       1
                                    
                                 
                                 ⧹
                                 
                                    
                                       A
                                    
                                    
                                       2
                                    
                                 
                                 =
                                 (
                                 
                                    
                                       Q
                                    
                                    
                                       ′
                                    
                                 
                                 ,
                                 
                                    
                                       Q
                                    
                                    
                                       f
                                    
                                    
                                       ′
                                    
                                 
                                 ⧹
                                 
                                    
                                       Q
                                    
                                    
                                       2
                                    
                                 
                                 ,
                                 Σ
                                 ,
                                 
                                    
                                       Δ
                                    
                                    
                                       ′
                                    
                                 
                                 )
                              .

Next we introduce a new operation over FTA called state splitting, which consists of splitting a state q into a number of states, based on a partition of the set of transitions whose 
                           rhs
                         is q. We define this splitting as follows:
                           Definition 6
                           Splitting a state in an FTA


                           Let 
                                 A
                                 =
                                 (
                                 Q
                                 ,
                                 
                                    
                                       Q
                                    
                                    
                                       f
                                    
                                 
                                 ,
                                 Σ
                                 ,
                                 Δ
                                 )
                               be an FTA. Let 
                                 q
                                 ∈
                                 Q
                               and 
                                 
                                    
                                       Δ
                                    
                                    
                                       q
                                    
                                 
                                 =
                                 {
                                 t
                                 ∈
                                 Δ
                                 ∣
                                 rhs
                                 (
                                 t
                                 )
                                 =
                                 q
                                 }
                              . Let 
                                 Φ
                                 =
                                 {
                                 
                                    
                                       Δ
                                    
                                    
                                       q
                                    
                                    
                                       1
                                    
                                 
                                 ,
                                 …
                                 ,
                                 
                                    
                                       Δ
                                    
                                    
                                       q
                                    
                                    
                                       k
                                    
                                 
                                 }
                               (
                                 k
                                 >
                                 1
                              ) be some partition of 
                                 
                                    
                                       Δ
                                    
                                    
                                       q
                                    
                                 
                              . Introduce k new states 
                                 
                                    
                                       q
                                    
                                    
                                       1
                                    
                                 
                                 ,
                                 …
                                 ,
                                 
                                    
                                       q
                                    
                                    
                                       k
                                    
                                 
                              . Then the FTA 
                                 
                                    
                                       split
                                    
                                    
                                       Φ
                                    
                                 
                                 (
                                 A
                                 )
                               is 
                                 (
                                 
                                    
                                       Q
                                    
                                    
                                       s
                                    
                                 
                                 ,
                                 
                                    
                                       Q
                                    
                                    
                                       f
                                    
                                    
                                       s
                                    
                                 
                                 ,
                                 Σ
                                 ,
                                 
                                    
                                       Δ
                                    
                                    
                                       s
                                    
                                 
                                 )
                               where:
                                 
                                    •
                                    
                                       
                                          
                                             
                                                Q
                                             
                                             
                                                s
                                             
                                          
                                          =
                                          Q
                                          ⧹
                                          {
                                          q
                                          }
                                          ∪
                                          {
                                          
                                             
                                                q
                                             
                                             
                                                1
                                             
                                          
                                          ,
                                          …
                                          ,
                                          
                                             
                                                q
                                             
                                             
                                                k
                                             
                                          
                                          }
                                       ;


                                       
                                          
                                             
                                                Q
                                             
                                             
                                                f
                                             
                                             
                                                s
                                             
                                          
                                          =
                                          
                                             
                                                Q
                                             
                                             
                                                f
                                             
                                          
                                          ⧹
                                          {
                                          q
                                          }
                                          ∪
                                          {
                                          
                                             
                                                q
                                             
                                             
                                                1
                                             
                                          
                                          ,
                                          …
                                          ,
                                          
                                             
                                                q
                                             
                                             
                                                k
                                             
                                          
                                          }
                                        if 
                                          q
                                          ∈
                                          
                                             
                                                Q
                                             
                                             
                                                f
                                             
                                          
                                       , otherwise 
                                          
                                             
                                                Q
                                             
                                             
                                                f
                                             
                                             
                                                s
                                             
                                          
                                          =
                                          
                                             
                                                Q
                                             
                                             
                                                f
                                             
                                          
                                       ;


                                       
                                          
                                             
                                                Δ
                                             
                                             
                                                s
                                             
                                          
                                          =
                                          
                                             
                                                unfold
                                             
                                             
                                                q
                                             
                                          
                                          (
                                          Δ
                                          ⧹
                                          
                                             
                                                Δ
                                             
                                             
                                                q
                                             
                                          
                                          ∪
                                          {
                                          lhs
                                          (
                                          t
                                          )
                                          →
                                          
                                             
                                                q
                                             
                                             
                                                i
                                             
                                          
                                          ∣
                                          t
                                          ∈
                                          
                                             
                                                Δ
                                             
                                             
                                                q
                                             
                                             
                                                i
                                             
                                          
                                          ,
                                          i
                                          =
                                          1
                                          
                                          ..
                                          
                                          k
                                          }
                                          )
                                       , where 
                                          
                                             
                                                unfold
                                             
                                             
                                                q
                                             
                                          
                                          (
                                          
                                             
                                                Δ
                                             
                                             
                                                ′
                                             
                                          
                                          )
                                        is the result of repeatedly replacing a transition 
                                          f
                                          (
                                          …
                                          ,
                                          q
                                          ,
                                          …
                                          )
                                          →
                                          s
                                          ∈
                                          
                                             
                                                Δ
                                             
                                             
                                                ′
                                             
                                          
                                        by the set of k transitions 
                                          {
                                          f
                                          (
                                          …
                                          ,
                                          
                                             
                                                q
                                             
                                             
                                                1
                                             
                                          
                                          ,
                                          …
                                          )
                                          →
                                          s
                                          ,
                                          …
                                          ,
                                          f
                                          (
                                          …
                                          ,
                                          
                                             
                                                q
                                             
                                             
                                                k
                                             
                                          
                                          ,
                                          …
                                          )
                                          →
                                          s
                                          }
                                        until no more such replacements can be made.


                              
                                 L
                                 (
                                 A
                                 )
                                 =
                                 L
                                 (
                                 
                                    
                                       split
                                    
                                    
                                       Φ
                                    
                                 
                                 (
                                 A
                                 )
                                 )
                              .

Let 
                                 A
                                 =
                                 〈
                                 Q
                                 ,
                                 
                                    
                                       Q
                                    
                                    
                                       f
                                    
                                 
                                 ,
                                 Σ
                                 ,
                                 Δ
                                 〉
                               and 
                                 
                                    
                                       split
                                    
                                    
                                       Φ
                                    
                                 
                                 (
                                 A
                                 )
                                 =
                                 〈
                                 
                                    
                                       Q
                                    
                                    
                                       s
                                    
                                 
                                 ,
                                 
                                    
                                       Q
                                    
                                    
                                       f
                                    
                                    
                                       s
                                    
                                 
                                 ,
                                 Σ
                                 ,
                                 
                                    
                                       Δ
                                    
                                    
                                       s
                                    
                                 
                                 〉
                              . Let 
                                 split
                                 (
                                 q
                                 )
                               mean that the state q is split and let 
                                 
                                    
                                       q
                                    
                                    
                                       1
                                    
                                 
                                 ,
                                 …
                                 ,
                                 
                                    
                                       q
                                    
                                    
                                       k
                                    
                                 
                               be the new states introduced during splitting. We write 
                                 
                                    
                                       ⇒
                                    
                                    
                                       ⁎
                                    
                                 
                               for derivations in 
                                 A
                               and 
                                 
                                    
                                       ⇒
                                    
                                    
                                       s
                                    
                                    
                                       ⁎
                                    
                                 
                               for derivations in 
                                 
                                    
                                       split
                                    
                                    
                                       Φ
                                    
                                 
                                 (
                                 A
                                 )
                              . We first prove by induction on the depth of terms that for all terms t and states 
                                 q
                                 ∈
                                 Q
                              , 
                                 
                                    (1)
                                    
                                       (
                                       split
                                       (
                                       q
                                       )
                                       →
                                       (
                                       t
                                       
                                          
                                             ⇒
                                          
                                          
                                             ⁎
                                          
                                       
                                       q
                                       ≡
                                       ∃
                                       i
                                       .
                                       (
                                       t
                                       
                                          
                                             ⇒
                                          
                                          
                                             s
                                          
                                          
                                             ⁎
                                          
                                       
                                       
                                          
                                             q
                                          
                                          
                                             i
                                          
                                       
                                       )
                                       )
                                       )
                                       ∧
                                       (
                                       ¬
                                       split
                                       (
                                       q
                                       )
                                       →
                                       (
                                       t
                                       
                                          
                                             ⇒
                                          
                                          
                                             ⁎
                                          
                                       
                                       q
                                       ≡
                                       t
                                       
                                          
                                             ⇒
                                          
                                          
                                             s
                                          
                                          
                                             ⁎
                                          
                                       
                                       q
                                       )
                                       )
                                       .
                                    
                                 
                              
                           


                              Base case: Let a be a term of depth 1 
                                 
                                    
                                       
                                          
                                             
                                                split
                                                (
                                                q
                                                )
                                                →
                                             
                                             
                                             
                                          
                                          
                                             
                                                a
                                                
                                                   
                                                      ⇒
                                                   
                                                   
                                                      ⁎
                                                   
                                                
                                                q
                                             
                                             
                                                ≡
                                             
                                             
                                                a
                                                →
                                                q
                                                ∈
                                                Δ
                                                ∧
                                                ∃
                                                i
                                                .
                                                (
                                                q
                                                ∈
                                                
                                                   
                                                      Δ
                                                   
                                                   
                                                      q
                                                   
                                                   
                                                      i
                                                   
                                                
                                                ∧
                                                a
                                                →
                                                
                                                   
                                                      q
                                                   
                                                   
                                                      i
                                                   
                                                
                                                ∈
                                                
                                                   
                                                      Δ
                                                   
                                                   
                                                      s
                                                   
                                                
                                                )
                                             
                                          
                                          
                                             
                                             
                                             
                                                following
                                                
                                                Definition
                                                
                                                
                                                   6
                                                
                                             
                                          
                                          
                                             
                                             
                                                ≡
                                             
                                             
                                                ∃
                                                i
                                                .
                                                (
                                                a
                                                
                                                   
                                                      ⇒
                                                   
                                                   
                                                      s
                                                   
                                                   
                                                      ⁎
                                                   
                                                
                                                
                                                   
                                                      q
                                                   
                                                   
                                                      i
                                                   
                                                
                                                )
                                             
                                          
                                          
                                             
                                                ¬
                                                split
                                                (
                                                q
                                                )
                                                →
                                             
                                             
                                             
                                          
                                          
                                             
                                                a
                                                
                                                   
                                                      ⇒
                                                   
                                                   
                                                      ⁎
                                                   
                                                
                                                q
                                             
                                             
                                                ≡
                                             
                                             
                                                a
                                                →
                                                q
                                                ∈
                                                Δ
                                                ∧
                                                a
                                                →
                                                q
                                                ∈
                                                
                                                   
                                                      Δ
                                                   
                                                   
                                                      s
                                                   
                                                
                                             
                                          
                                          
                                             
                                             
                                                ≡
                                             
                                             
                                                a
                                                
                                                   
                                                      ⇒
                                                   
                                                   
                                                      s
                                                   
                                                   
                                                      ⁎
                                                   
                                                
                                                q
                                                )
                                             
                                          
                                       
                                    
                                 
                              
                           


                              Inductive case: Let 
                                 f
                                 (
                                 
                                    
                                       t
                                    
                                    
                                       1
                                    
                                 
                                 ,
                                 …
                                 ,
                                 
                                    
                                       t
                                    
                                    
                                       n
                                    
                                 
                                 )
                                 ⇒
                                 q
                               where 
                                 f
                                 (
                                 
                                    
                                       t
                                    
                                    
                                       1
                                    
                                 
                                 ,
                                 …
                                 ,
                                 
                                    
                                       t
                                    
                                    
                                       n
                                    
                                 
                                 )
                               is a term of depth 
                                 k
                                 +
                                 1
                               and assume that the property holds for all terms with depth at most k 
                              
                                 
                                    
                                       
                                          
                                             
                                                split
                                                (
                                                q
                                                )
                                                →
                                             
                                             
                                             
                                          
                                          
                                             
                                                f
                                                (
                                                
                                                   
                                                      t
                                                   
                                                   
                                                      1
                                                   
                                                
                                                ,
                                                …
                                                ,
                                                
                                                   
                                                      t
                                                   
                                                   
                                                      n
                                                   
                                                
                                                )
                                                
                                                   
                                                      ⇒
                                                   
                                                   
                                                      ⁎
                                                   
                                                
                                                q
                                             
                                             
                                                ≡
                                             
                                             
                                                ∃
                                                
                                                   
                                                      r
                                                   
                                                   
                                                      1
                                                   
                                                
                                                ,
                                                …
                                                ,
                                                
                                                   
                                                      r
                                                   
                                                   
                                                      n
                                                   
                                                
                                                .
                                                (
                                                f
                                                (
                                                
                                                   
                                                      r
                                                   
                                                   
                                                      1
                                                   
                                                
                                                ,
                                                …
                                                ,
                                                
                                                   
                                                      r
                                                   
                                                   
                                                      n
                                                   
                                                
                                                )
                                                →
                                                q
                                                ∈
                                                Δ
                                                ∧
                                             
                                          
                                          
                                             
                                             
                                             
                                                
                                                   
                                                      t
                                                   
                                                   
                                                      1
                                                   
                                                
                                                
                                                   
                                                      ⇒
                                                   
                                                   
                                                      ⁎
                                                   
                                                
                                                
                                                   
                                                      r
                                                   
                                                   
                                                      1
                                                   
                                                
                                                ∧
                                                ⋯
                                                ∧
                                                
                                                   
                                                      t
                                                   
                                                   
                                                      n
                                                   
                                                
                                                
                                                   
                                                      ⇒
                                                   
                                                   
                                                      ⁎
                                                   
                                                
                                                
                                                   
                                                      r
                                                   
                                                   
                                                      n
                                                   
                                                
                                                )
                                                ∧
                                             
                                          
                                          
                                             
                                             
                                             
                                                (
                                                split
                                                (
                                                
                                                   
                                                      r
                                                   
                                                   
                                                      1
                                                   
                                                
                                                )
                                                ∨
                                                ¬
                                                split
                                                (
                                                
                                                   
                                                      r
                                                   
                                                   
                                                      1
                                                   
                                                
                                                )
                                                )
                                                ∧
                                                ⋯
                                                ∧
                                                (
                                                split
                                                (
                                                
                                                   
                                                      r
                                                   
                                                   
                                                      n
                                                   
                                                
                                                )
                                                ∨
                                                ¬
                                                split
                                                (
                                                
                                                   
                                                      r
                                                   
                                                   
                                                      n
                                                   
                                                
                                                )
                                                )
                                             
                                          
                                          
                                             
                                             
                                                ≡
                                             
                                             
                                                ∃
                                                
                                                   
                                                      r
                                                   
                                                   
                                                      1
                                                   
                                                
                                                ,
                                                …
                                                ,
                                                
                                                   
                                                      r
                                                   
                                                   
                                                      n
                                                   
                                                
                                                .
                                                [
                                                f
                                                (
                                                
                                                   
                                                      r
                                                   
                                                   
                                                      1
                                                   
                                                
                                                ,
                                                …
                                                ,
                                                
                                                   
                                                      r
                                                   
                                                   
                                                      n
                                                   
                                                
                                                )
                                                →
                                                q
                                                ∈
                                                Δ
                                                ∧
                                             
                                          
                                          
                                             
                                             
                                             
                                                (
                                                split
                                                (
                                                
                                                   
                                                      r
                                                   
                                                   
                                                      1
                                                   
                                                
                                                )
                                                ∧
                                                ∃
                                                
                                                   
                                                      i
                                                   
                                                   
                                                      1
                                                   
                                                
                                                (
                                                
                                                   
                                                      t
                                                   
                                                   
                                                      1
                                                   
                                                
                                                
                                                   
                                                      ⇒
                                                   
                                                   
                                                      s
                                                   
                                                   
                                                      ⁎
                                                   
                                                
                                                
                                                   
                                                      r
                                                   
                                                   
                                                      1
                                                      ,
                                                      
                                                         
                                                            i
                                                         
                                                         
                                                            1
                                                         
                                                      
                                                   
                                                
                                                )
                                                )
                                                ∨
                                                (
                                                ¬
                                                split
                                                (
                                                
                                                   
                                                      r
                                                   
                                                   
                                                      1
                                                   
                                                
                                                )
                                                ∧
                                                
                                                   
                                                      t
                                                   
                                                   
                                                      1
                                                   
                                                
                                                
                                                   
                                                      ⇒
                                                   
                                                   
                                                      s
                                                   
                                                   
                                                      ⁎
                                                   
                                                
                                                
                                                   
                                                      r
                                                   
                                                   
                                                      1
                                                   
                                                
                                                )
                                                ∧
                                             
                                          
                                          
                                             
                                             
                                             
                                                ⋯
                                             
                                          
                                          
                                             
                                             
                                             
                                                (
                                                split
                                                (
                                                
                                                   
                                                      r
                                                   
                                                   
                                                      n
                                                   
                                                
                                                )
                                                ∧
                                                ∃
                                                
                                                   
                                                      i
                                                   
                                                   
                                                      n
                                                   
                                                
                                                (
                                                
                                                   
                                                      t
                                                   
                                                   
                                                      n
                                                   
                                                
                                                
                                                   
                                                      ⇒
                                                   
                                                   
                                                      s
                                                   
                                                   
                                                      ⁎
                                                   
                                                
                                                
                                                   
                                                      r
                                                   
                                                   
                                                      n
                                                      ,
                                                      
                                                         
                                                            i
                                                         
                                                         
                                                            n
                                                         
                                                      
                                                   
                                                
                                                )
                                                )
                                                ∨
                                                (
                                                ¬
                                                split
                                                (
                                                
                                                   
                                                      r
                                                   
                                                   
                                                      n
                                                   
                                                
                                                )
                                                ∧
                                                
                                                   
                                                      t
                                                   
                                                   
                                                      n
                                                   
                                                
                                                
                                                   
                                                      ⇒
                                                   
                                                   
                                                      s
                                                   
                                                   
                                                      ⁎
                                                   
                                                
                                                
                                                   
                                                      r
                                                   
                                                   
                                                      n
                                                   
                                                
                                                )
                                                )
                                                ]
                                             
                                          
                                          
                                             
                                             
                                             
                                                by
                                                
                                                inductive
                                                
                                                hypothesis
                                                
                                                after
                                                
                                                rearranging
                                                
                                                formula
                                                ,
                                                
                                                since
                                                
                                                
                                                   
                                                      t
                                                   
                                                   
                                                      1
                                                   
                                                
                                                ,
                                                …
                                                ,
                                                
                                                   
                                                      t
                                                   
                                                   
                                                      n
                                                   
                                                
                                                
                                                have
                                                
                                                depth
                                                
                                                at
                                                
                                                most
                                                
                                                k
                                             
                                          
                                          
                                             
                                             
                                                ≡
                                             
                                             
                                                ∃
                                                
                                                   
                                                      r
                                                   
                                                   
                                                      1
                                                   
                                                
                                                ,
                                                …
                                                ,
                                                
                                                   
                                                      r
                                                   
                                                   
                                                      n
                                                   
                                                
                                                ∃
                                                
                                                   
                                                      i
                                                   
                                                   
                                                      1
                                                   
                                                
                                                ,
                                                …
                                                ,
                                                
                                                   
                                                      i
                                                   
                                                   
                                                      n
                                                   
                                                
                                                .
                                                [
                                                f
                                                (
                                                
                                                   
                                                      r
                                                   
                                                   
                                                      1
                                                   
                                                
                                                ,
                                                …
                                                ,
                                                
                                                   
                                                      r
                                                   
                                                   
                                                      n
                                                   
                                                
                                                )
                                                →
                                                q
                                                ∈
                                                Δ
                                                ∧
                                             
                                          
                                          
                                             
                                             
                                             
                                                (
                                                (
                                                
                                                   
                                                      t
                                                   
                                                   
                                                      1
                                                   
                                                
                                                
                                                   
                                                      ⇒
                                                   
                                                   
                                                      s
                                                   
                                                   
                                                      ⁎
                                                   
                                                
                                                
                                                   
                                                      r
                                                   
                                                   
                                                      1
                                                      ,
                                                      
                                                         
                                                            i
                                                         
                                                         
                                                            1
                                                         
                                                      
                                                   
                                                
                                                ∨
                                                
                                                   
                                                      t
                                                   
                                                   
                                                      1
                                                   
                                                
                                                
                                                   
                                                      ⇒
                                                   
                                                   
                                                      s
                                                   
                                                   
                                                      ⁎
                                                   
                                                
                                                
                                                   
                                                      r
                                                   
                                                   
                                                      1
                                                   
                                                
                                                )
                                                ∧
                                                ⋯
                                                ∧
                                                (
                                                
                                                   
                                                      t
                                                   
                                                   
                                                      n
                                                   
                                                
                                                
                                                   
                                                      ⇒
                                                   
                                                   
                                                      s
                                                   
                                                   
                                                      ⁎
                                                   
                                                
                                                
                                                   
                                                      r
                                                   
                                                   
                                                      n
                                                      ,
                                                      
                                                         
                                                            i
                                                         
                                                         
                                                            n
                                                         
                                                      
                                                   
                                                
                                                ∨
                                                
                                                   
                                                      t
                                                   
                                                   
                                                      n
                                                   
                                                
                                                
                                                   
                                                      ⇒
                                                   
                                                   
                                                      s
                                                   
                                                   
                                                      ⁎
                                                   
                                                
                                                
                                                   
                                                      r
                                                   
                                                   
                                                      n
                                                   
                                                
                                                )
                                                )
                                                ]
                                             
                                          
                                          
                                             
                                             
                                             
                                                after
                                                
                                                rearranging
                                                
                                                formula
                                                ,
                                                
                                                moving
                                                
                                                quantifiers
                                                
                                                outwards
                                             
                                          
                                          
                                             
                                             
                                             
                                                and
                                                
                                                eliminating
                                                
                                                split
                                                (
                                                
                                                   
                                                      r
                                                   
                                                   
                                                      i
                                                   
                                                
                                                )
                                                ∨
                                                ¬
                                                split
                                                (
                                                
                                                   
                                                      r
                                                   
                                                   
                                                      i
                                                   
                                                
                                                )
                                                ,
                                                1
                                                ≤
                                                i
                                                ≤
                                                n
                                             
                                          
                                          
                                             
                                             
                                                ≡
                                             
                                             
                                                ∃
                                                i
                                                ,
                                                
                                                   
                                                      r
                                                   
                                                   
                                                      1
                                                   
                                                
                                                ,
                                                …
                                                ,
                                                
                                                   
                                                      r
                                                   
                                                   
                                                      n
                                                   
                                                
                                                ∃
                                                
                                                   
                                                      i
                                                   
                                                   
                                                      1
                                                   
                                                
                                                ,
                                                …
                                                ,
                                                
                                                   
                                                      i
                                                   
                                                   
                                                      n
                                                   
                                                
                                                .
                                                [
                                                f
                                                (
                                                
                                                   
                                                      r
                                                   
                                                   
                                                      1
                                                      ,
                                                      
                                                         
                                                            i
                                                         
                                                         
                                                            1
                                                         
                                                      
                                                   
                                                
                                                ,
                                                …
                                                ,
                                                
                                                   
                                                      r
                                                   
                                                   
                                                      n
                                                      ,
                                                      
                                                         
                                                            i
                                                         
                                                         
                                                            n
                                                         
                                                      
                                                   
                                                
                                                )
                                                →
                                                
                                                   
                                                      q
                                                   
                                                   
                                                      i
                                                   
                                                
                                                ∈
                                                
                                                   
                                                      Δ
                                                   
                                                   
                                                      s
                                                   
                                                
                                                ∧
                                             
                                          
                                          
                                             
                                             
                                             
                                                (
                                                (
                                                
                                                   
                                                      t
                                                   
                                                   
                                                      1
                                                   
                                                
                                                
                                                   
                                                      ⇒
                                                   
                                                   
                                                      s
                                                   
                                                   
                                                      ⁎
                                                   
                                                
                                                
                                                   
                                                      r
                                                   
                                                   
                                                      1
                                                      ,
                                                      
                                                         
                                                            i
                                                         
                                                         
                                                            1
                                                         
                                                      
                                                   
                                                
                                                ∨
                                                (
                                                
                                                   
                                                      r
                                                   
                                                   
                                                      1
                                                      ,
                                                      
                                                         
                                                            i
                                                         
                                                         
                                                            1
                                                         
                                                      
                                                   
                                                
                                                =
                                                
                                                   
                                                      r
                                                   
                                                   
                                                      1
                                                   
                                                
                                                ∧
                                                
                                                   
                                                      t
                                                   
                                                   
                                                      1
                                                   
                                                
                                                
                                                   
                                                      ⇒
                                                   
                                                   
                                                      s
                                                   
                                                   
                                                      ⁎
                                                   
                                                
                                                
                                                   
                                                      r
                                                   
                                                   
                                                      1
                                                   
                                                
                                                )
                                                )
                                                ∧
                                                ⋯
                                                ∧
                                                (
                                                
                                                   
                                                      t
                                                   
                                                   
                                                      n
                                                   
                                                
                                                
                                                   
                                                      ⇒
                                                   
                                                   
                                                      s
                                                   
                                                   
                                                      ⁎
                                                   
                                                
                                                
                                                   
                                                      r
                                                   
                                                   
                                                      n
                                                      ,
                                                      
                                                         
                                                            i
                                                         
                                                         
                                                            n
                                                         
                                                      
                                                   
                                                
                                                ∨
                                                (
                                                
                                                   
                                                      r
                                                   
                                                   
                                                      n
                                                      ,
                                                      
                                                         
                                                            i
                                                         
                                                         
                                                            n
                                                         
                                                      
                                                   
                                                
                                                =
                                                
                                                   
                                                      r
                                                   
                                                   
                                                      n
                                                   
                                                
                                                ∧
                                                
                                                   
                                                      t
                                                   
                                                   
                                                      n
                                                   
                                                
                                                
                                                   
                                                      ⇒
                                                   
                                                   
                                                      s
                                                   
                                                   
                                                      ⁎
                                                   
                                                
                                                
                                                   
                                                      r
                                                   
                                                   
                                                      n
                                                   
                                                
                                                )
                                                )
                                                )
                                                ]
                                             
                                          
                                          
                                             
                                             
                                             
                                                applying
                                                
                                                Definition
                                                
                                                
                                                   6
                                                
                                                
                                                to
                                                
                                                introduce
                                                
                                                f
                                                (
                                                
                                                   
                                                      r
                                                   
                                                   
                                                      1
                                                      ,
                                                      
                                                         
                                                            i
                                                         
                                                         
                                                            1
                                                         
                                                      
                                                   
                                                
                                                ,
                                                …
                                                ,
                                                
                                                   
                                                      r
                                                   
                                                   
                                                      n
                                                      ,
                                                      
                                                         
                                                            i
                                                         
                                                         
                                                            n
                                                         
                                                      
                                                   
                                                
                                                )
                                                →
                                                
                                                   
                                                      q
                                                   
                                                   
                                                      i
                                                   
                                                
                                             
                                          
                                          
                                             
                                             
                                             
                                                since
                                                
                                                f
                                                (
                                                
                                                   
                                                      r
                                                   
                                                   
                                                      1
                                                      ,
                                                      
                                                         
                                                            i
                                                         
                                                         
                                                            1
                                                         
                                                      
                                                   
                                                
                                                ,
                                                …
                                                ,
                                                
                                                   
                                                      r
                                                   
                                                   
                                                      n
                                                      ,
                                                      
                                                         
                                                            i
                                                         
                                                         
                                                            n
                                                         
                                                      
                                                   
                                                
                                                )
                                                →
                                                
                                                   
                                                      q
                                                   
                                                   
                                                      i
                                                   
                                                
                                                
                                                is
                                                
                                                included
                                                
                                                after
                                                
                                                applying
                                                
                                                unfold
                                                
                                                to
                                                
                                                f
                                                (
                                                
                                                   
                                                      r
                                                   
                                                   
                                                      1
                                                   
                                                
                                                ,
                                                …
                                                ,
                                                
                                                   
                                                      r
                                                   
                                                   
                                                      n
                                                   
                                                
                                                )
                                                →
                                                
                                                   
                                                      q
                                                   
                                                   
                                                      i
                                                   
                                                
                                             
                                          
                                          
                                             
                                             
                                                ≡
                                             
                                             
                                                ∃
                                                i
                                                .
                                                f
                                                (
                                                
                                                   
                                                      t
                                                   
                                                   
                                                      1
                                                   
                                                
                                                ,
                                                …
                                                ,
                                                
                                                   
                                                      t
                                                   
                                                   
                                                      n
                                                   
                                                
                                                )
                                                
                                                   
                                                      ⇒
                                                   
                                                   
                                                      s
                                                   
                                                   
                                                      ⁎
                                                   
                                                
                                                
                                                   
                                                      q
                                                   
                                                   
                                                      i
                                                   
                                                
                                             
                                          
                                          
                                             
                                                ¬
                                                split
                                                (
                                                q
                                                )
                                                →
                                             
                                             
                                             
                                          
                                          
                                             
                                                f
                                                (
                                                
                                                   
                                                      t
                                                   
                                                   
                                                      1
                                                   
                                                
                                                ,
                                                …
                                                ,
                                                
                                                   
                                                      t
                                                   
                                                   
                                                      n
                                                   
                                                
                                                )
                                                
                                                   
                                                      ⇒
                                                   
                                                   
                                                      ⁎
                                                   
                                                
                                                q
                                             
                                             
                                                ≡
                                             
                                             
                                                [
                                                Similar
                                                
                                                to
                                                
                                                previous
                                                
                                                case
                                                
                                                but
                                                
                                                where
                                                
                                                f
                                                (
                                                
                                                   
                                                      r
                                                   
                                                   
                                                      1
                                                      ,
                                                      
                                                         
                                                            i
                                                         
                                                         
                                                            1
                                                         
                                                      
                                                   
                                                
                                                ,
                                                …
                                                ,
                                                
                                                   
                                                      r
                                                   
                                                   
                                                      n
                                                      ,
                                                      
                                                         
                                                            i
                                                         
                                                         
                                                            n
                                                         
                                                      
                                                   
                                                
                                                )
                                                →
                                                q
                                             
                                          
                                          
                                             
                                             
                                             
                                                is
                                                
                                                in
                                                
                                                the
                                                
                                                unfolding
                                                
                                                of
                                                
                                                f
                                                (
                                                
                                                   
                                                      r
                                                   
                                                   
                                                      1
                                                   
                                                
                                                ,
                                                …
                                                ,
                                                
                                                   
                                                      r
                                                   
                                                   
                                                      n
                                                   
                                                
                                                )
                                                →
                                                q
                                                
                                                in
                                                
                                                Definition
                                                
                                                
                                                   6
                                                
                                                ]
                                             
                                          
                                          
                                             
                                             
                                                ≡
                                             
                                             
                                                f
                                                (
                                                
                                                   
                                                      t
                                                   
                                                   
                                                      1
                                                   
                                                
                                                ,
                                                …
                                                ,
                                                
                                                   
                                                      t
                                                   
                                                   
                                                      n
                                                   
                                                
                                                )
                                                
                                                   
                                                      ⇒
                                                   
                                                   
                                                      s
                                                   
                                                   
                                                      ⁎
                                                   
                                                
                                                q
                                             
                                          
                                       
                                    
                                 
                              
                           

Finally, if 
                                 q
                                 ∈
                                 
                                    
                                       Q
                                    
                                    
                                       f
                                    
                                 
                               and 
                                 split
                                 (
                                 q
                                 )
                               then 
                                 
                                    
                                       q
                                    
                                    
                                       i
                                    
                                 
                                 ∈
                                 
                                    
                                       Q
                                    
                                    
                                       f
                                    
                                    
                                       s
                                    
                                 
                               where q
                              
                                 i
                               is a new state introduced during the splitting. It follows from this and property (1) that for all t, 
                                 ∃
                                 q
                                 ∈
                                 
                                    
                                       Q
                                    
                                    
                                       f
                                    
                                 
                                 .
                                 t
                                 
                                    
                                       ⇒
                                    
                                    
                                       ⁎
                                    
                                 
                                 q
                                 ≡
                                 ∃
                                 
                                    
                                       q
                                    
                                    
                                       ′
                                    
                                 
                                 ∈
                                 
                                    
                                       Q
                                    
                                    
                                       f
                                    
                                    
                                       s
                                    
                                 
                                 .
                                 t
                                 
                                    
                                       ⇒
                                    
                                    
                                       s
                                    
                                    
                                       ⁎
                                    
                                 
                                 
                                    
                                       q
                                    
                                    
                                       ′
                                    
                                 
                              . Thus for all t, 
                                 t
                                 ∈
                                 L
                                 (
                                 A
                                 )
                               iff 
                                 t
                                 ∈
                                 L
                                 (
                                 
                                    
                                       split
                                    
                                    
                                       Φ
                                    
                                 
                                 (
                                 A
                                 )
                                 )
                              .□

A constrained Horn clause (CHC) is a first order predicate logic formula of the form 
                        ∀
                        (
                        ϕ
                        ∧
                        
                           
                              p
                           
                           
                              1
                           
                        
                        (
                        
                           
                              X
                           
                           
                              1
                           
                        
                        )
                        ∧
                        …
                        ∧
                        
                           
                              p
                           
                           
                              k
                           
                        
                        (
                        
                           
                              X
                           
                           
                              k
                           
                        
                        )
                        →
                        p
                        (
                        X
                        )
                        )
                      (
                        k
                        ≥
                        0
                     ), where ϕ is a conjunction of constraints with respect to some constraint theory, X
                     
                        i
                     , 
                        X
                      are (possibly empty) vectors of distinct variables, 
                        
                           
                              p
                           
                           
                              1
                           
                        
                        ,
                        …
                        ,
                        
                           
                              p
                           
                           
                              k
                           
                        
                        ,
                        p
                      are predicate symbols, p(X) is the head of the clause and 
                        ϕ
                        ∧
                        
                           
                              p
                           
                           
                              1
                           
                        
                        (
                        
                           
                              X
                           
                           
                              1
                           
                        
                        )
                        ∧
                        …
                        ∧
                        
                           
                              p
                           
                           
                              k
                           
                        
                        (
                        
                           
                              X
                           
                           
                              k
                           
                        
                        )
                      is the body.

There is a distinguished predicate symbol 
                        false
                      which is interpreted as false. In practice the predicate 
                        false
                      only occurs in the head of clauses; we call clauses whose head is 
                        false
                      
                     integrity constraints, following the terminology of deductive databases. They are also sometimes referred to as negative clauses. We follow the syntactic conventions of constraint logic programs and write a clause as 
                        p
                        (
                        X
                        )
                        ←
                        ϕ
                        ,
                        
                           
                              p
                           
                           
                              1
                           
                        
                        (
                        
                           
                              X
                           
                           
                              1
                           
                        
                        )
                        ,
                        …
                        ,
                        
                           
                              p
                           
                           
                              k
                           
                        
                        (
                        
                           
                              X
                           
                           
                              k
                           
                        
                        )
                     .

An interpretation of a set of CHCs is represented as a set of constrained facts of the form 
                           A
                           ←
                           ϕ
                         where A is an atomic formula 
                           p
                           (
                           
                              
                                 Z
                              
                              
                                 1
                              
                           
                           ,
                           …
                           ,
                           
                              
                                 Z
                              
                              
                                 n
                              
                           
                           )
                         where 
                           
                              
                                 Z
                              
                              
                                 1
                              
                           
                           ,
                           …
                           ,
                           
                              
                                 Z
                              
                              
                                 n
                              
                           
                         are distinct variables and ϕ is a constraint over 
                           
                              
                                 Z
                              
                              
                                 1
                              
                           
                           ,
                           …
                           ,
                           
                              
                                 Z
                              
                              
                                 n
                              
                           
                        . This set may be infinite. The constrained fact 
                           A
                           ←
                           ϕ
                         is shorthand for the set of variable-free facts 
                           A
                           θ
                         such that 
                           ϕ
                           θ
                         holds in the constraint theory, and an interpretation M denotes the set of all facts denoted by its elements; M assigns true to exactly those facts. 
                           
                              
                                 M
                              
                              
                                 1
                              
                           
                           ⊆
                           
                              
                                 M
                              
                              
                                 2
                              
                           
                         if the set of denoted facts of M
                        1 is contained in the set of denoted facts of M
                        2.


                        Minimal models: A model of a set of CHCs is an interpretation that satisfies (whenever the body of a clause holds under the given interpretation then so does the head) each clause. There exists a minimal model with respect to the subset ordering, denoted 
                           M
                           〚
                           P
                           〛
                         where P is a satisfiable set of CHCs. 
                           M
                           〚
                           P
                           〛
                         can be computed as the least fixed point (
                           lfp
                        ) of an immediate consequences operator (called 
                           
                              
                                 S
                              
                              
                                 P
                              
                              
                                 D
                              
                           
                         in [12, Section 4]), which is an extension of the standard T
                        
                           P
                         operator from logic programming, extended to handle the constraint theory D. Furthermore 
                           lfp
                           (
                           
                              
                                 S
                              
                              
                                 P
                              
                              
                                 D
                              
                           
                           )
                         can be computed as the limit of the ascending sequence of interpretations 
                           ∅
                           ,
                           
                              
                                 S
                              
                              
                                 P
                              
                              
                                 D
                              
                           
                           (
                           ∅
                           )
                           ,
                           
                              
                                 S
                              
                              
                                 P
                              
                              
                                 D
                              
                           
                           (
                           
                              
                                 S
                              
                              
                                 P
                              
                              
                                 D
                              
                           
                           (
                           ∅
                           )
                           )
                           ,
                           …
                        . This sequence provides a basis for abstract interpretation of CHC clauses. The minimal model of P is equivalent to the set of atomic logic consequences of P.

Given a set of CHCs P, the CHC verification problem is to check whether there exists a model of P. Obviously any model of P assigns false to the bodies of integrity constraints. We restate this property in terms of the derivability of the predicate 
                           false
                        . Let 
                           P
                           ⊨
                           F
                         mean that F is a logical consequence of P, that is, that every interpretation satisfying P also satisfies F.
                           Lemma 1
                           
                              P has a model if and only if 
                              
                                 P
                                 ⊭
                                 false
                              .

Writing I(F) to mean that interpretation I satisfies F, we have:
                                 
                                    
                                       P
                                       ⊭
                                       false
                                       ≡
                                       there
                                       
                                       exists
                                       
                                       an
                                       
                                       interpretation
                                       
                                       I
                                       
                                       such
                                       
                                       that
                                       
                                       I
                                       (
                                       P
                                       )
                                       
                                       and
                                       
                                       ¬
                                       I
                                       (
                                       false
                                       )
                                       by
                                       
                                       definition
                                       
                                       of
                                       
                                       ⊨
                                       ≡
                                       there
                                       
                                       exists
                                       
                                       an
                                       
                                       interpretation
                                       
                                       I
                                       
                                       such
                                       
                                       that
                                       
                                       I
                                       (
                                       P
                                       )
                                       (
                                       since
                                       ¬
                                       I
                                       (
                                       false
                                       )
                                       
                                       is
                                       
                                       true
                                       
                                       by
                                       
                                       defn
                                       .
                                       
                                       of
                                       
                                       false
                                       )
                                       ≡
                                       P
                                       
                                       has
                                       
                                       a
                                       
                                       model
                                       .
                                       □
                                    
                                 
                              
                           

This lemma holds for arbitrary interpretations (only assuming that the predicate 
                           false
                         is interpreted as false), uses only the textbook definitions of “interpretation” and “model” and does not depend on the constraint theory. We have yet another equivalent formulation of the CHC verification problem.
                           Lemma 2
                           
                              P has a model if and only if 
                              
                                 false
                                 ∉
                                 M
                                 〚
                                 P
                                 〛
                              .

Follows from the equivalence of the minimal model of P with the set of atomic logical consequences of P 
                              [13]. See also Proposition 2 later.□

It is this formulation that is most relevant to our method, since we compute over-approximations of 
                           M
                           〚
                           P
                           〛
                         by abstract interpretation. That is, if 
                           false
                           ∉
                           
                              
                                 M
                              
                              
                                 ′
                              
                           
                         where 
                           M
                           〚
                           P
                           〛
                           ⊆
                           
                              
                                 M
                              
                              
                                 ′
                              
                           
                         then we have shown that P has a model. An assertion ϕ is an invariant (over-approximation) for a predicate q in P, if 
                           P
                           ⊨
                           ∀
                           (
                           q
                           →
                           ϕ
                           )
                        . If a set of Horn clauses P have a model then we say that P is safe, otherwise we say that P is unsafe.

Before constructing the trace automaton we introduce identifiers for each clause. An identifier is a function symbol whose arity is the same as the number of atoms in the clause body. For instance a clause 
                           p
                           (
                           X
                           )
                           ←
                           ϕ
                           ,
                           
                              
                                 p
                              
                              
                                 1
                              
                           
                           (
                           
                              
                                 X
                              
                              
                                 1
                              
                           
                           )
                           ,
                           …
                           ,
                           
                              
                                 p
                              
                              
                                 k
                              
                           
                           (
                           
                              
                                 X
                              
                              
                                 k
                              
                           
                           )
                         is assigned a function symbol with arity k. More than one clause can be assigned the same function symbol, but all the clauses with the same identifier have the same structure, including their constraints; that is, they differ only in one or more predicate names. Given a set of CHCs and a set 
                           Σ
                         of ranked function symbols, let 
                           
                              
                                 id
                              
                              
                                 P
                              
                           
                           :
                           P
                           →
                           Σ
                         be the assignment of function symbols to clauses.
                           Definition 7
                           Trace FTA for a set of CHCs


                           Let P be a set of CHCs. Define the trace FTA for P as 
                                 
                                    
                                       A
                                    
                                    
                                       P
                                    
                                 
                                 =
                                 (
                                 Q
                                 ,
                                 
                                    
                                       Q
                                    
                                    
                                       f
                                    
                                 
                                 ,
                                 Σ
                                 ,
                                 Δ
                                 )
                               where
                                 
                                    •
                                    
                                       Q is the set of predicate symbols of P;


                                       
                                          
                                             
                                                Q
                                             
                                             
                                                f
                                             
                                          
                                          =
                                          Q
                                       ;


                                       
                                          Σ
                                        is a set of function symbols;


                                       
                                          Δ
                                          =
                                          {
                                          c
                                          (
                                          
                                             
                                                p
                                             
                                             
                                                1
                                             
                                          
                                          ,
                                          …
                                          ,
                                          
                                             
                                                p
                                             
                                             
                                                k
                                             
                                          
                                          )
                                          →
                                          p
                                          ∣
                                          
                                          where
                                          
                                          c
                                          ∈
                                          Σ
                                          ,
                                          c
                                          =
                                          
                                             
                                                id
                                             
                                             
                                                P
                                             
                                          
                                          (
                                          cl
                                          )
                                          ,
                                          
                                          where
                                          
                                          cl
                                          =
                                          p
                                          (
                                          X
                                          )
                                          ←
                                          ϕ
                                          ,
                                          
                                             
                                                p
                                             
                                             
                                                1
                                             
                                          
                                          (
                                          
                                             
                                                X
                                             
                                             
                                                1
                                             
                                          
                                          )
                                          ,
                                          …
                                          ,
                                          
                                             
                                                p
                                             
                                             
                                                k
                                             
                                          
                                          (
                                          
                                             
                                                X
                                             
                                             
                                                k
                                             
                                          
                                          )
                                          }
                                       .

Let P be the set of CHCs in Fig. 1. Let 
                                 
                                    
                                       id
                                    
                                    
                                       P
                                    
                                 
                               map the clauses to 
                                 
                                    
                                       c
                                    
                                    
                                       1
                                    
                                 
                                 ,
                                 …
                                 ,
                                 
                                    
                                       c
                                    
                                    
                                       4
                                    
                                 
                               respectively. Then 
                                 
                                    
                                       A
                                    
                                    
                                       P
                                    
                                 
                                 =
                                 (
                                 Q
                                 ,
                                 
                                    
                                       Q
                                    
                                    
                                       f
                                    
                                 
                                 ,
                                 Σ
                                 ,
                                 Δ
                                 )
                               where: 
                                 
                                    
                                       
                                          
                                             
                                          
                                       
                                    
                                 
                              
                           

For each trace term there exists a corresponding derivation tree called an AND-tree, which is unique up to variable renaming. The concept of an AND-tree is derived from [14,15].
                           Definition 8
                           AND-tree for a trace term


                           Let P be a set of CHCs and let 
                                 t
                                 ∈
                                 L
                                 (
                                 
                                    
                                       A
                                    
                                    
                                       P
                                    
                                 
                                 )
                              . Denote by 
                                 AND
                                 (
                                 t
                                 )
                               the following labelled tree, where each node of 
                                 AND
                                 (
                                 t
                                 )
                               is labelled by a clause and an atomic formula.
                                 
                                    1.
                                    For each subterm 
                                          
                                             
                                                c
                                             
                                             
                                                j
                                             
                                          
                                          (
                                          
                                             
                                                t
                                             
                                             
                                                1
                                             
                                          
                                          ,
                                          …
                                          ,
                                          
                                             
                                                t
                                             
                                             
                                                k
                                             
                                          
                                          )
                                        of t there is a corresponding node in 
                                          AND
                                          (
                                          t
                                          )
                                        labelled by an atom p(X) and a clause 
                                          p
                                          (
                                          X
                                          )
                                          ←
                                          ϕ
                                          ,
                                          
                                             
                                                p
                                             
                                             
                                                1
                                             
                                          
                                          (
                                          
                                             
                                                X
                                             
                                             
                                                1
                                             
                                          
                                          )
                                          ,
                                          …
                                          ,
                                          
                                             
                                                p
                                             
                                             
                                                k
                                             
                                          
                                          (
                                          
                                             
                                                X
                                             
                                             
                                                k
                                             
                                          
                                          )
                                        which is a renamed version of some clause c in P, such that 
                                          
                                             
                                                c
                                             
                                             
                                                j
                                             
                                          
                                          =
                                          
                                             
                                                id
                                             
                                             
                                                P
                                             
                                          
                                          (
                                          c
                                          )
                                       ; the node׳s children (if 
                                          k
                                          >
                                          0
                                       ) are the nodes corresponding to 
                                          
                                             
                                                t
                                             
                                             
                                                1
                                             
                                          
                                          ,
                                          …
                                          ,
                                          
                                             
                                                t
                                             
                                             
                                                k
                                             
                                          
                                        and are labelled by 
                                          
                                             
                                                p
                                             
                                             
                                                1
                                             
                                          
                                          (
                                          
                                             
                                                X
                                             
                                             
                                                1
                                             
                                          
                                          )
                                          ,
                                          …
                                          ,
                                          
                                             
                                                p
                                             
                                             
                                                k
                                             
                                          
                                          (
                                          
                                             
                                                X
                                             
                                             
                                                k
                                             
                                          
                                          )
                                       .

The variables in the labels are chosen such that if a node n is labelled by a clause, the local variables in the clause body do not occur outside the subtree rooted at n.

Let P be a set of CHCs. The set of constraints of a trace 
                                 t
                                 ∈
                                 L
                                 (
                                 
                                    
                                       A
                                    
                                    
                                       P
                                    
                                 
                                 )
                              , represented as 
                                 constr
                                 (
                                 t
                                 )
                               is the set of all constraints in the clause labels of 
                                 AND
                                 (
                                 t
                                 )
                              .

We say that a trace term t is feasible if 
                                 constr
                                 (
                                 t
                                 )
                               is satisfiable.

Let P be a set of CHCs and 
                                 t
                                 ∈
                                 L
                                 (
                                 
                                    
                                       A
                                    
                                    
                                       P
                                    
                                 
                                 )
                              . The FTA A
                              
                                 t
                               (whose construction is trivial) such that 
                                 L
                                 (
                                 
                                    
                                       A
                                    
                                    
                                       t
                                    
                                 
                                 )
                                 =
                                 {
                                 t
                                 }
                               is called the FTA for t. The states of 
                                 
                                    
                                       A
                                    
                                    
                                       t
                                    
                                 
                               are chosen to be disjoint from those of 
                                 
                                    
                                       A
                                    
                                    
                                       P
                                    
                                 
                              .

Consider the FTA in Example 1. Let 
                                 t
                                 =
                                 
                                    
                                       c
                                    
                                    
                                       3
                                    
                                 
                                 (
                                 
                                    
                                       c
                                    
                                    
                                       2
                                    
                                 
                                 (
                                 
                                    
                                       c
                                    
                                    
                                       1
                                    
                                 
                                 ,
                                 
                                    
                                       c
                                    
                                    
                                       1
                                    
                                 
                                 )
                                 )
                              . Each 
                                 
                                    
                                       e
                                    
                                    
                                       i
                                    
                                 
                               represents a label in the trace. Then 
                                 
                                    
                                       A
                                    
                                    
                                       t
                                    
                                 
                                 =
                                 (
                                 Q
                                 ,
                                 
                                    
                                       Q
                                    
                                    
                                       f
                                    
                                 
                                 ,
                                 Σ
                                 ,
                                 Δ
                                 )
                               is defined as:
                                 
                                    
                                       Q
                                       =
                                       {
                                       
                                          
                                             
                                                e
                                             
                                          
                                          
                                             
                                                1
                                             
                                          
                                       
                                       ,
                                       
                                       
                                          
                                             
                                                e
                                             
                                          
                                          
                                             
                                                2
                                             
                                          
                                       
                                       ,
                                       
                                       
                                          
                                             
                                                e
                                             
                                          
                                          
                                             
                                                3
                                             
                                          
                                       
                                       ,
                                       
                                       
                                          
                                             
                                                e
                                             
                                          
                                          
                                             
                                                4
                                             
                                          
                                       
                                       }
                                       
                                          
                                             Q
                                          
                                          
                                             f
                                          
                                       
                                       =
                                       {
                                       
                                          
                                             
                                                e
                                             
                                          
                                          
                                             
                                                1
                                             
                                          
                                       
                                       }
                                       Σ
                                       =
                                       {
                                       
                                          
                                             c
                                          
                                          
                                             1
                                          
                                       
                                       ,
                                       
                                          
                                             c
                                          
                                          
                                             2
                                          
                                       
                                       ,
                                       
                                          
                                             c
                                          
                                          
                                             3
                                          
                                       
                                       ,
                                       
                                          
                                             c
                                          
                                          
                                             4
                                          
                                       
                                       }
                                       Δ
                                       =
                                       {
                                       
                                          
                                             c
                                          
                                          
                                             1
                                          
                                       
                                       →
                                       
                                          
                                             
                                                e
                                             
                                          
                                          
                                             
                                                3
                                             
                                          
                                       
                                       ,
                                       
                                          
                                             c
                                          
                                          
                                             1
                                          
                                       
                                       →
                                       
                                          
                                             
                                                e
                                             
                                          
                                          
                                             
                                                4
                                             
                                          
                                       
                                       ,
                                       
                                          
                                             c
                                          
                                          
                                             2
                                          
                                       
                                       (
                                       
                                          
                                             
                                                e
                                             
                                          
                                          
                                             
                                                3
                                             
                                          
                                       
                                       ,
                                       
                                       
                                          
                                             
                                                e
                                             
                                          
                                          
                                             
                                                4
                                             
                                          
                                       
                                       )
                                       →
                                       
                                          
                                             
                                                e
                                             
                                          
                                          
                                             
                                                2
                                             
                                          
                                       
                                       ,
                                       
                                          
                                             c
                                          
                                          
                                             3
                                          
                                       
                                       (
                                       
                                          
                                             
                                                e
                                             
                                          
                                          
                                             
                                                2
                                             
                                          
                                       
                                       )
                                       →
                                       
                                          
                                             
                                                e
                                             
                                          
                                          
                                             
                                                1
                                             
                                          
                                       
                                       }
                                    
                                 
                              and 
                                 Σ
                               is the same as in 
                                 
                                    
                                       A
                                    
                                    
                                       P
                                    
                                 
                              . The trace t is not feasible since 
                                 
                                    
                                       constr
                                       (
                                       t
                                       )
                                       =
                                       {
                                       
                                          A
                                       
                                       ≤
                                       
                                          100
                                       
                                       ,
                                       
                                       
                                          B
                                       
                                       >
                                       
                                          91
                                       
                                       ,
                                       
                                       
                                          A
                                       
                                       ≤
                                       
                                          100
                                       
                                       ,
                                       
                                       
                                          C
                                       
                                       =
                                       
                                          A
                                       
                                       +
                                       
                                          11
                                       
                                       ,
                                       
                                       
                                          C
                                       
                                       >
                                       
                                          100
                                       
                                       ,
                                       
                                       
                                          D
                                       
                                       =
                                       
                                          C
                                       
                                       −
                                       
                                          10
                                       
                                       ,
                                       
                                       
                                          D
                                       
                                       >
                                       
                                          100
                                       
                                       ,
                                       
                                       
                                          B
                                       
                                       =
                                       
                                          D
                                       
                                       −
                                       
                                          10
                                       
                                       }
                                    
                                 
                              and this is not satisfiable.

Consider the FTA in Example 1 and a linear trace 
                                 t
                                 =
                                 
                                    
                                       c
                                    
                                    
                                       3
                                    
                                 
                                 (
                                 
                                    
                                       c
                                    
                                    
                                       1
                                    
                                 
                                 )
                              . Let 
                                 
                                    
                                       e
                                    
                                    
                                       1
                                    
                                 
                               and 
                                 e
                               represents the labels in the trace. Then 
                                 
                                    
                                       A
                                    
                                    
                                       t
                                    
                                 
                                 =
                                 (
                                 Q
                                 ,
                                 
                                    
                                       Q
                                    
                                    
                                       f
                                    
                                 
                                 ,
                                 Σ
                                 ,
                                 Δ
                                 )
                               is defined as:
                                 
                                    
                                       Q
                                       =
                                       {
                                       e
                                       ,
                                       
                                       
                                          
                                             e
                                          
                                          
                                             1
                                          
                                       
                                       }
                                       
                                          
                                             Q
                                          
                                          
                                             f
                                          
                                       
                                       =
                                       {
                                       e
                                       }
                                       Σ
                                       =
                                       {
                                       
                                          
                                             c
                                          
                                          
                                             1
                                          
                                       
                                       ,
                                       
                                          
                                             c
                                          
                                          
                                             2
                                          
                                       
                                       ,
                                       
                                          
                                             c
                                          
                                          
                                             3
                                          
                                       
                                       ,
                                       
                                          
                                             c
                                          
                                          
                                             4
                                          
                                       
                                       }
                                       Δ
                                       =
                                       {
                                       
                                          
                                             c
                                          
                                          
                                             1
                                          
                                       
                                       →
                                       e
                                       ,
                                       
                                          
                                             c
                                          
                                          
                                             3
                                          
                                       
                                       (
                                       
                                          
                                             e
                                          
                                          
                                             1
                                          
                                       
                                       )
                                       →
                                       e
                                       }
                                    
                                 
                              and 
                                 Σ
                               is the same as in 
                                 
                                    
                                       A
                                    
                                    
                                       P
                                    
                                 
                              . The trace t is not feasible.

Let P be a set of CHCs and 
                                 t
                                 ∈
                                 L
                                 (
                                 
                                    
                                       A
                                    
                                    
                                       P
                                    
                                 
                                 )
                              . Let p(X) be the atom labeling the root of 
                                 AND
                                 (
                                 t
                                 )
                              . Then the constrained trace atom of t is 
                                 ∀
                                 X
                                 .
                                 (
                                 ∃
                                 
                                    
                                       Z
                                    
                                    
                                       ¯
                                    
                                 
                                 .
                                 constr
                                 (
                                 t
                                 )
                                 →
                                 p
                                 (
                                 X
                                 )
                                 )
                              , where 
                                 
                                    
                                       Z
                                    
                                    
                                       ¯
                                    
                                 
                                 =
                                 vars
                                 (
                                 constr
                                 (
                                 t
                                 )
                                 )
                                 ⧹
                                 X
                              .

We now restate standard soundness and completeness results from constraint logic programming [13] in terms of the concepts defined above. We assume that the underlying constraint theory 
                           T
                         has a complete satisfiability procedure. Note that the domain of linear arithmetic constraints, which is used in our experiments, satisfies these conditions.
                           Proposition 2
                           
                              Let P be a set of CHCs, whose underlying constraint theory 
                              
                                 T
                               
                              has a complete satisfiability procedure. Let 
                              
                                 
                                    
                                       A
                                    
                                    
                                       P
                                    
                                 
                               
                              be the trace FTA for P. Then
                              
                                 
                                    1.
                                    
                                       for all 
                                       
                                          t
                                          ∈
                                          L
                                          (
                                          
                                             
                                                A
                                             
                                             
                                                P
                                             
                                          
                                          )
                                       , 
                                          P
                                          ∪
                                          ⊨
                                          A
                                       , where A is the constrained trace atom of t;


                                       p(c) is a variable-free atomic formula such that 
                                       
                                          P
                                          ∪
                                          ⊨
                                          p
                                          (
                                          c
                                          )
                                       , iff
                                       
                                          
                                             (a)
                                             
                                                there exists a feasible trace 
                                                
                                                   t
                                                   ∈
                                                   L
                                                   (
                                                   
                                                      
                                                         A
                                                      
                                                      
                                                         P
                                                      
                                                   
                                                   )
                                                 
                                                whose constrained trace atom is of the form 
                                                
                                                   ∀
                                                   X
                                                   .
                                                   ϕ
                                                   →
                                                   p
                                                   (
                                                   X
                                                   )
                                                 
                                                where the constraint 
                                                
                                                   ϕ
                                                   [
                                                   X
                                                   /
                                                   c
                                                   ]
                                                 
                                                is true; and
                                             


                                                p(c) is in 
                                                
                                                   M
                                                   〚
                                                   P
                                                   〛
                                                , the minimal model of P.

The proof depends on a close correspondence between 
                                 AND
                                 -
                                 trees
                               (Definition 8) and derivations defined as sequences in [13]; we do not elaborate the correspondence in detail but just note that for each 
                                 AND
                                 -
                                 tree
                               with constrained trace atom 
                                 ∀
                                 X
                                 .
                                 (
                                 ∃
                                 
                                    
                                       Z
                                    
                                    
                                       ¯
                                    
                                 
                                 .
                                 constr
                                 (
                                 t
                                 )
                                 →
                                 p
                                 (
                                 X
                                 )
                                 )
                               there exists one or more derivations for p(X) with answer constraint 
                                 ∃
                                 
                                    
                                       Z
                                    
                                    
                                       ¯
                                    
                                 
                                 .
                                 constr
                                 (
                                 t
                                 )
                              . Conversely for each derivation for p(X) with answer constraint ϕ there exists a unique 
                                 AND
                                 -
                                 tree
                               whose root is labelled with p(X) and whose constrained trace atom is 
                                 ∀
                                 X
                                 .
                                 ϕ
                                 →
                                 p
                                 (
                                 X
                                 )
                              .
                                 
                                    1.
                                    Let 
                                          AND
                                          (
                                          t
                                          )
                                        be the 
                                          AND
                                          -
                                          tree
                                        for t (Definition 8), let p(X) be the atom labeling the root and let 
                                          ∀
                                          X
                                          .
                                          ϕ
                                          →
                                          p
                                          (
                                          X
                                          )
                                        be the constrained trace atom for t.
                                          
                                             
                                                
                                                   ⇒
                                                
                                             
                                             there is some derivation (as defined in [13]) for p(X) having answer constraint 
                                                   ϕ
                                                   →
                                                   p
                                                   (
                                                   X
                                                   )
                                                ;


                                                
                                                   P
                                                   ∪
                                                   T
                                                   ⊨
                                                   ϕ
                                                   →
                                                   p
                                                   (
                                                   X
                                                   )
                                                 by [13] (Theorem 6.0.1, Part 2).


                                       
                                          P
                                          ∪
                                          T
                                          ⊨
                                          p
                                          (
                                          c
                                          )
                                        is equivalent to 
                                          P
                                          ∪
                                          ⊨
                                          X
                                          =
                                          c
                                          →
                                          p
                                          (
                                          X
                                          )
                                       .
                                          
                                             
                                                
                                                   ⇒
                                                
                                             
                                             there is a derivation for p(X) with answer constraint ϕ, where 
                                                   T
                                                   ⊨
                                                   X
                                                   =
                                                   c
                                                   →
                                                   ϕ
                                                 (by [13] (Theorem 6.0.1, Part 4));

there is a trace term t and 
                                                   AND
                                                   -
                                                   tree
                                                 
                                                
                                                   AND
                                                   (
                                                   t
                                                   )
                                                 with root labelled by p(X) and constrained trace atom 
                                                   ∀
                                                   X
                                                   .
                                                   ϕ
                                                   →
                                                   p
                                                   (
                                                   X
                                                   )
                                                , where 
                                                   T
                                                   ⊨
                                                   ϕ
                                                   [
                                                   X
                                                   /
                                                   c
                                                   ]
                                                .

Follows directly from [13] (Theorem 6.0.1, Parts 1 and 2)□

For part 2(a) of the proof, note that the constrained trace atom in the 
                           AND
                           -
                           tree
                         can be more general than the atom p(c). For example, say that 
                           p
                           (
                           1
                           )
                         is a consequence of the set of CHCs; then the constrained trace atom could be 
                           ∀
                           X
                           .
                           X
                           ≥
                           0
                           →
                           p
                           (
                           X
                           )
                        .


                        Proposition 2establishes the correspondence between the semantics of CHCs and the feasible traces of the trace FTA for the CHCs. Essentially, the set of feasible traces of the FTA is a representation of the minimal model of the clauses.

If we transform 
                           
                              
                                 A
                              
                              
                                 P
                              
                           
                         to another FTA while preserving the set of traces, we also preserve the feasible traces. More generally, we can transform 
                           
                              
                                 A
                              
                              
                                 P
                              
                           
                         to another FTA 
                           
                              
                                 A
                              
                              
                                 ′
                              
                           
                         so long as 
                           L
                           (
                           
                              
                                 A
                              
                              
                                 ′
                              
                           
                           )
                           ⊆
                           L
                           (
                           
                              
                                 A
                              
                              
                                 P
                              
                           
                           )
                         and the elements of 
                           L
                           (
                           
                              
                                 A
                              
                              
                                 P
                              
                           
                           )
                           ⧹
                           L
                           (
                           
                              
                                 A
                              
                              
                                 ′
                              
                           
                           )
                         are all infeasible. In this case the feasible traces of 
                           L
                           (
                           
                              
                                 A
                              
                              
                                 ′
                              
                           
                           )
                         are still a representation of the minimal model of P. We will exploit this in our refinement procedure (see Section 5).

Now we describe a procedure (Algorithm 2) for generating a set of clauses 
                           
                              
                                 P
                              
                              
                                 ′
                              
                           
                         from an FTA 
                           A
                           =
                           (
                           Q
                           ,
                           
                              
                                 Q
                              
                              
                                 f
                              
                           
                           ,
                           Σ
                           ,
                           Δ
                           )
                         and a set of clauses P. We assume that 
                           Σ
                         is the same as that of 
                           
                              
                                 A
                              
                              
                                 P
                              
                           
                        ; so 
                           Σ
                         is the range of the function 
                           
                              
                                 id
                              
                              
                                 P
                              
                           
                         mapping clauses of P to function symbols. The transitions 
                           Δ
                         are not in product form; a modification of the algorithm and its correctness proposition is possible for product form (which is in fact an enabling factor which makes possible the determinisation of FTAs in practice) but we omit that here for the simplicity of presentation. We first introduce an injective function for renaming the states of 
                           A
                         since we need predicate names for the generated clauses 
                           
                              
                                 ρ
                                 :
                                 Q
                                 →
                                 Predicates
                              
                           
                        
                     

The function 
                           ρ
                         maps each FTA state to a distinct predicate name. The algorithm simply generates a clause for each transition, applying the renaming function from states to predicates, and introducing variables arguments according to the pattern obtained from any clause with the corresponding identifier (all clauses with the same identifier having the same variable pattern).
                           Algorithm 2
                           Generating a set of clauses represented by an FTA.
                                 
                                    
                                       
                                       
                                          
                                             
                                                Input: An FTA 
                                                   A
                                                   =
                                                   (
                                                   Q
                                                   ,
                                                   
                                                      
                                                         Q
                                                      
                                                      
                                                         f
                                                      
                                                   
                                                   ,
                                                   Σ
                                                   ,
                                                   Δ
                                                   )
                                                , set of Horn clauses P, injective functions 
                                                   ρ
                                                   :
                                                   Q
                                                   →
                                                   Predicates
                                                , 
                                                   
                                                      
                                                         id
                                                      
                                                      
                                                         P
                                                      
                                                   
                                                   :
                                                   P
                                                   →
                                                   Σ
                                                
                                             
                                          
                                          
                                             
                                                Output: A set of Horn clauses 
                                                   
                                                      
                                                         P
                                                      
                                                      
                                                         ′
                                                      
                                                   
                                                 represented by 
                                                   A
                                                 and function 
                                                   
                                                      
                                                         id
                                                      
                                                      
                                                         
                                                            
                                                               P
                                                            
                                                            
                                                               ′
                                                            
                                                         
                                                      
                                                   
                                                   :
                                                   
                                                      
                                                         P
                                                      
                                                      
                                                         ′
                                                      
                                                   
                                                   →
                                                   Σ
                                                 
                                                
                                                   
                                                      
                                                         P
                                                      
                                                      
                                                         ′
                                                      
                                                   
                                                   ←
                                                   ∅
                                                ;
                                          
                                          
                                             
                                                for each 
                                                   
                                                      
                                                         c
                                                      
                                                      
                                                         i
                                                      
                                                   
                                                   (
                                                   
                                                      
                                                         q
                                                      
                                                      
                                                         1
                                                      
                                                   
                                                   ,
                                                   …
                                                   ,
                                                   
                                                      
                                                         q
                                                      
                                                      
                                                         n
                                                      
                                                   
                                                   )
                                                   →
                                                   q
                                                 (where 
                                                   n
                                                   ≥
                                                   0
                                                ) 
                                                   ∈
                                                   Δ
                                                 
                                                do
                                             
                                          
                                          
                                             
                                                
                                                   |
                                                   
                                                      
                                                         
                                                            
                                                               let
                                                               
                                                               c
                                                               =
                                                               p
                                                               (
                                                               X
                                                               )
                                                               ←
                                                               ϕ
                                                               ,
                                                               
                                                                  
                                                                     p
                                                                  
                                                                  
                                                                     1
                                                                  
                                                               
                                                               (
                                                               
                                                                  
                                                                     X
                                                                  
                                                                  
                                                                     1
                                                                  
                                                               
                                                               )
                                                               ,
                                                               …
                                                               ,
                                                               
                                                                  
                                                                     p
                                                                  
                                                                  
                                                                     n
                                                                  
                                                               
                                                               (
                                                               
                                                                  
                                                                     X
                                                                  
                                                                  
                                                                     n
                                                                  
                                                               
                                                               )
                                                               
                                                               be
                                                               
                                                               the
                                                               
                                                               clause
                                                               
                                                               in
                                                               
                                                               P
                                                               
                                                               where
                                                               
                                                               
                                                                  
                                                                     id
                                                                  
                                                                  
                                                                     P
                                                                  
                                                               
                                                               (
                                                               c
                                                               )
                                                               =
                                                               
                                                                  
                                                                     c
                                                                  
                                                                  
                                                                     i
                                                                  
                                                               
                                                               ;
                                                            
                                                         
                                                         
                                                            
                                                               
                                                                  
                                                                     c
                                                                  
                                                                  
                                                                     new
                                                                  
                                                               
                                                               =
                                                               ρ
                                                               (
                                                               q
                                                               )
                                                               (
                                                               X
                                                               )
                                                               ←
                                                               ϕ
                                                               ,
                                                               ρ
                                                               (
                                                               
                                                                  
                                                                     q
                                                                  
                                                                  
                                                                     1
                                                                  
                                                               
                                                               )
                                                               (
                                                               
                                                                  
                                                                     X
                                                                  
                                                                  
                                                                     1
                                                                  
                                                               
                                                               )
                                                               ,
                                                               …
                                                               ,
                                                               ρ
                                                               (
                                                               
                                                                  
                                                                     q
                                                                  
                                                                  
                                                                     n
                                                                  
                                                               
                                                               )
                                                               (
                                                               
                                                                  
                                                                     X
                                                                  
                                                                  
                                                                     n
                                                                  
                                                               
                                                               )
                                                               ;
                                                            
                                                         
                                                         
                                                            
                                                               
                                                                  
                                                                     id
                                                                  
                                                                  
                                                                     
                                                                        
                                                                           P
                                                                        
                                                                        
                                                                           ′
                                                                        
                                                                     
                                                                  
                                                               
                                                               (
                                                               
                                                                  
                                                                     c
                                                                  
                                                                  
                                                                     new
                                                                  
                                                               
                                                               )
                                                               =
                                                               
                                                                  
                                                                     c
                                                                  
                                                                  
                                                                     i
                                                                  
                                                               
                                                               ;
                                                            
                                                         
                                                         
                                                            
                                                               
                                                                  
                                                                     P
                                                                  
                                                                  
                                                                     ′
                                                                  
                                                               
                                                               ←
                                                               
                                                                  
                                                                     P
                                                                  
                                                                  
                                                                     ′
                                                                  
                                                               
                                                               ∪
                                                               {
                                                               
                                                                  
                                                                     c
                                                                  
                                                                  
                                                                     new
                                                                  
                                                               
                                                               }
                                                               ;
                                                            
                                                         
                                                      
                                                   
                                                
                                             
                                          
                                          
                                             
                                                end
                                             
                                          
                                          
                                             
                                                return 
                                                
                                                   
                                                      
                                                         P
                                                      
                                                      
                                                         ′
                                                      
                                                   
                                                ;
                                          
                                       
                                    
                                 
                              
                           

Apart from generating a set of clauses 
                           
                              
                                 P
                              
                              
                                 ′
                              
                           
                        , Algorithm 2 also generates the clause identification mapping 
                           
                              
                                 id
                              
                              
                                 
                                    
                                       P
                                    
                                    
                                       ′
                                    
                                 
                              
                           
                        , preserving the function symbols from the FTA. In this way the set of traces is preserved from P to 
                           
                              
                                 P
                              
                              
                                 ′
                              
                           
                        . The correctness of Algorithm 2 is expressed by the following proposition.
                           Proposition 3
                           
                              Let P be a set of CHCs and let 
                              
                                 A
                               
                              be an FTA whose signature is the same as that of 
                              
                                 
                                    
                                       A
                                    
                                    
                                       P
                                    
                                 
                              . Let 
                              
                                 
                                    
                                       P
                                    
                                    
                                       ′
                                    
                                 
                               
                              be the set of clauses generated from 
                              
                                 A
                               
                              and P by 
                              
                                 Algorithm 2. Then 
                              
                                 L
                                 (
                                 A
                                 )
                                 =
                                 L
                                 (
                                 
                                    
                                       A
                                    
                                    
                                       
                                          
                                             P
                                          
                                          
                                             ′
                                          
                                       
                                    
                                 
                                 )
                              . Furthermore if 
                              
                                 L
                                 (
                                 A
                                 )
                                 ⊆
                                 L
                                 (
                                 
                                    
                                       A
                                    
                                    
                                       P
                                    
                                 
                                 )
                               
                              and 
                              
                                 L
                                 (
                                 A
                                 )
                               
                              includes all the feasible traces of 
                              
                                 L
                                 (
                                 
                                    
                                       A
                                    
                                    
                                       P
                                    
                                 
                                 )
                               
                              then the minimal model of 
                              
                                 
                                    
                                       P
                                    
                                    
                                       ′
                                    
                                 
                               
                              is the same as the minimal model of P, modulo predicate renaming.

We first prove that 
                                 L
                                 (
                                 A
                                 )
                                 =
                                 L
                                 (
                                 
                                    
                                       A
                                    
                                    
                                       
                                          
                                             P
                                          
                                          
                                             ′
                                          
                                       
                                    
                                 
                                 )
                              , that is, 
                                 ∀
                                 t
                                 .
                                 t
                                 ∈
                                 L
                                 (
                                 A
                                 )
                                 ≡
                                 t
                                 ∈
                                 L
                                 (
                                 
                                    
                                       A
                                    
                                    
                                       
                                          
                                             P
                                          
                                          
                                             ′
                                          
                                       
                                    
                                 
                                 )
                              . The proof is by induction on the depth of t. Let 
                                 A
                                 =
                                 〈
                                 Q
                                 ,
                                 
                                    
                                       Q
                                    
                                    
                                       f
                                    
                                 
                                 ,
                                 Σ
                                 ,
                                 Δ
                                 〉
                               and 
                                 
                                    
                                       A
                                    
                                    
                                       
                                          
                                             P
                                          
                                          
                                             ′
                                          
                                       
                                    
                                 
                                 =
                                 〈
                                 
                                    
                                       Q
                                    
                                    
                                       ′
                                    
                                 
                                 ,
                                 
                                    
                                       Q
                                    
                                    
                                       f
                                    
                                    
                                       ′
                                    
                                 
                                 ,
                                 Σ
                                 ,
                                 
                                    
                                       Δ
                                    
                                    
                                       ′
                                    
                                 
                                 〉
                               and we assume that 
                                 Q
                                 =
                                 
                                    
                                       Q
                                    
                                    
                                       f
                                    
                                 
                               and 
                                 
                                    
                                       Q
                                    
                                    
                                       ′
                                    
                                 
                                 =
                                 
                                    
                                       Q
                                    
                                    
                                       f
                                    
                                    
                                       ′
                                    
                                 
                              
                              
                                 
                                    •
                                    
                                       Base case. 
                                          
                                             
                                                t
                                                
                                                has
                                                
                                                depth
                                                
                                                0
                                                
                                                and
                                                
                                                t
                                                ∈
                                                L
                                                (
                                                A
                                                )
                                                ≡
                                                ∃
                                                t
                                                →
                                                q
                                                ∈
                                                Δ
                                                ≡
                                                ∃
                                                c
                                                =
                                                p
                                                (
                                                X
                                                )
                                                ←
                                                ϕ
                                                ∈
                                                P
                                                
                                                where
                                                
                                                
                                                   
                                                      id
                                                   
                                                   
                                                      P
                                                   
                                                
                                                (
                                                c
                                                )
                                                =
                                                t
                                                ≡
                                                ∃
                                                
                                                   
                                                      c
                                                   
                                                   
                                                      new
                                                   
                                                
                                                =
                                                ρ
                                                (
                                                q
                                                )
                                                (
                                                X
                                                )
                                                ←
                                                ϕ
                                                ∈
                                                
                                                   
                                                      P
                                                   
                                                   
                                                      ′
                                                   
                                                
                                                
                                                and
                                                
                                                
                                                   
                                                      id
                                                   
                                                   
                                                      
                                                         
                                                            P
                                                         
                                                         
                                                            ′
                                                         
                                                      
                                                   
                                                
                                                (
                                                
                                                   
                                                      c
                                                   
                                                   
                                                      new
                                                   
                                                
                                                )
                                                =
                                                t
                                                ≡
                                                ∃
                                                t
                                                →
                                                ρ
                                                (
                                                q
                                                )
                                                ∈
                                                
                                                   
                                                      Δ
                                                   
                                                   
                                                      ′
                                                   
                                                
                                                ≡
                                                t
                                                ∈
                                                L
                                                (
                                                
                                                   
                                                      A
                                                   
                                                   
                                                      
                                                         
                                                            P
                                                         
                                                         
                                                            ′
                                                         
                                                      
                                                   
                                                
                                                )
                                             
                                          
                                       
                                    


                                       Inductive case: Assume that for all terms t of depth at most k, 
                                          t
                                          
                                             
                                                ⇒
                                             
                                             
                                                ⁎
                                             
                                          
                                          q
                                        in 
                                          A
                                        iff 
                                          t
                                          
                                             
                                                ⇒
                                             
                                             
                                                ⁎
                                             
                                          
                                          ρ
                                          (
                                          q
                                          )
                                        in 
                                          
                                             
                                                A
                                             
                                             
                                                
                                                   
                                                      P
                                                   
                                                   
                                                      ′
                                                   
                                                
                                             
                                          
                                       . Let 
                                          t
                                          =
                                          
                                             
                                                c
                                             
                                             
                                                t
                                             
                                          
                                          (
                                          
                                             
                                                t
                                             
                                             
                                                1
                                             
                                          
                                          ,
                                          …
                                          ,
                                          
                                             
                                                t
                                             
                                             
                                                n
                                             
                                          
                                          )
                                        have depth 
                                          k
                                          +
                                          1
                                       . 
                                          
                                             
                                                
                                                   
                                                      c
                                                   
                                                   
                                                      t
                                                   
                                                
                                                (
                                                
                                                   
                                                      t
                                                   
                                                   
                                                      1
                                                   
                                                
                                                ,
                                                …
                                                ,
                                                
                                                   
                                                      t
                                                   
                                                   
                                                      n
                                                   
                                                
                                                )
                                                ∈
                                                L
                                                (
                                                A
                                                )
                                                ≡
                                                ∃
                                                
                                                   
                                                      c
                                                   
                                                   
                                                      t
                                                   
                                                
                                                (
                                                
                                                   
                                                      q
                                                   
                                                   
                                                      1
                                                   
                                                
                                                ,
                                                …
                                                ,
                                                
                                                   
                                                      q
                                                   
                                                   
                                                      n
                                                   
                                                
                                                )
                                                →
                                                q
                                                ∈
                                                Δ
                                                ∧
                                                
                                                   
                                                      t
                                                   
                                                   
                                                      i
                                                   
                                                
                                                
                                                   
                                                      ⇒
                                                   
                                                   
                                                      ⁎
                                                   
                                                
                                                
                                                   
                                                      q
                                                   
                                                   
                                                      i
                                                   
                                                
                                                ,
                                                1
                                                ≤
                                                i
                                                ≤
                                                n
                                                ≡
                                                ∃
                                                
                                                   
                                                      c
                                                   
                                                   
                                                      t
                                                   
                                                
                                                (
                                                
                                                   
                                                      q
                                                   
                                                   
                                                      1
                                                   
                                                
                                                ,
                                                …
                                                ,
                                                
                                                   
                                                      q
                                                   
                                                   
                                                      n
                                                   
                                                
                                                )
                                                →
                                                q
                                                ∈
                                                Δ
                                                ∧
                                                
                                                   
                                                      t
                                                   
                                                   
                                                      i
                                                   
                                                
                                                
                                                   
                                                      ⇒
                                                   
                                                   
                                                      ⁎
                                                   
                                                
                                                ρ
                                                (
                                                
                                                   
                                                      q
                                                   
                                                   
                                                      i
                                                   
                                                
                                                )
                                                ,
                                                1
                                                ≤
                                                i
                                                ≤
                                                n
                                                by
                                                
                                                ind
                                                .
                                                
                                                hyp
                                                .
                                                
                                                since
                                                
                                                depth
                                                
                                                of
                                                
                                                
                                                   
                                                      t
                                                   
                                                   
                                                      1
                                                   
                                                
                                                ,
                                                …
                                                
                                                   
                                                      t
                                                   
                                                   
                                                      n
                                                   
                                                
                                                
                                                is
                                                
                                                at
                                                
                                                most
                                                
                                                k
                                                ≡
                                                ∃
                                                c
                                                =
                                                p
                                                (
                                                X
                                                )
                                                ←
                                                ϕ
                                                ,
                                                
                                                   
                                                      p
                                                   
                                                   
                                                      1
                                                   
                                                
                                                (
                                                
                                                   
                                                      X
                                                   
                                                   
                                                      1
                                                   
                                                
                                                )
                                                ,
                                                …
                                                ,
                                                
                                                   
                                                      p
                                                   
                                                   
                                                      n
                                                   
                                                
                                                (
                                                
                                                   
                                                      X
                                                   
                                                   
                                                      n
                                                   
                                                
                                                )
                                                ∈
                                                P
                                                
                                                where
                                                
                                                
                                                   
                                                      id
                                                   
                                                   
                                                      P
                                                   
                                                
                                                (
                                                c
                                                )
                                                =
                                                
                                                   
                                                      c
                                                   
                                                   
                                                      t
                                                   
                                                
                                                ∧
                                                
                                                   
                                                      t
                                                   
                                                   
                                                      i
                                                   
                                                
                                                
                                                   
                                                      ⇒
                                                   
                                                   
                                                      ⁎
                                                   
                                                
                                                ρ
                                                (
                                                
                                                   
                                                      q
                                                   
                                                   
                                                      i
                                                   
                                                
                                                )
                                                ,
                                                1
                                                ≤
                                                i
                                                ≤
                                                n
                                                ≡
                                                ∃
                                                
                                                   
                                                      c
                                                   
                                                   
                                                      new
                                                   
                                                
                                                =
                                                ρ
                                                (
                                                q
                                                )
                                                (
                                                X
                                                )
                                                ←
                                                ϕ
                                                ,
                                                ρ
                                                (
                                                
                                                   
                                                      q
                                                   
                                                   
                                                      1
                                                   
                                                
                                                )
                                                (
                                                
                                                   
                                                      X
                                                   
                                                   
                                                      1
                                                   
                                                
                                                )
                                                ,
                                                …
                                                ,
                                                ρ
                                                (
                                                
                                                   
                                                      q
                                                   
                                                   
                                                      n
                                                   
                                                
                                                )
                                                (
                                                
                                                   
                                                      X
                                                   
                                                   
                                                      n
                                                   
                                                
                                                )
                                                ∈
                                                
                                                   
                                                      P
                                                   
                                                   
                                                      ′
                                                   
                                                
                                                
                                                and
                                                
                                                
                                                   
                                                      id
                                                   
                                                   
                                                      
                                                         
                                                            P
                                                         
                                                         
                                                            ′
                                                         
                                                      
                                                   
                                                
                                                (
                                                
                                                   
                                                      c
                                                   
                                                   
                                                      new
                                                   
                                                
                                                )
                                                =
                                                
                                                   
                                                      c
                                                   
                                                   
                                                      t
                                                   
                                                
                                                ∧
                                                
                                                   
                                                      t
                                                   
                                                   
                                                      i
                                                   
                                                
                                                
                                                   
                                                      ⇒
                                                   
                                                   
                                                      ⁎
                                                   
                                                
                                                ρ
                                                (
                                                
                                                   
                                                      q
                                                   
                                                   
                                                      i
                                                   
                                                
                                                )
                                                ,
                                                1
                                                ≤
                                                i
                                                ≤
                                                n
                                                ≡
                                                ∃
                                                
                                                   
                                                      c
                                                   
                                                   
                                                      t
                                                   
                                                
                                                (
                                                ρ
                                                (
                                                
                                                   
                                                      q
                                                   
                                                   
                                                      1
                                                   
                                                
                                                )
                                                ,
                                                …
                                                ,
                                                ρ
                                                (
                                                
                                                   
                                                      q
                                                   
                                                   
                                                      n
                                                   
                                                
                                                )
                                                )
                                                →
                                                ρ
                                                (
                                                q
                                                )
                                                ∈
                                                
                                                   
                                                      Δ
                                                   
                                                   
                                                      ′
                                                   
                                                
                                                ∧
                                                
                                                   
                                                      t
                                                   
                                                   
                                                      i
                                                   
                                                
                                                
                                                   
                                                      ⇒
                                                   
                                                   
                                                      ⁎
                                                   
                                                
                                                ρ
                                                (
                                                
                                                   
                                                      q
                                                   
                                                   
                                                      i
                                                   
                                                
                                                )
                                                ,
                                                1
                                                ≤
                                                i
                                                ≤
                                                n
                                                ≡
                                                
                                                   
                                                      c
                                                   
                                                   
                                                      t
                                                   
                                                
                                                (
                                                
                                                   
                                                      t
                                                   
                                                   
                                                      1
                                                   
                                                
                                                ,
                                                …
                                                ,
                                                
                                                   
                                                      t
                                                   
                                                   
                                                      n
                                                   
                                                
                                                )
                                                ∈
                                                L
                                                (
                                                
                                                   
                                                      A
                                                   
                                                   
                                                      
                                                         
                                                            P
                                                         
                                                         
                                                            ′
                                                         
                                                      
                                                   
                                                
                                                )
                                             
                                          
                                       
                                    

Consider the following transitions, relating to the signature for the program in Fig. 1. The set of states is {[false],[mc91],[e,false],[mc91,e1]}. (These are elements of the powerset of the set of states {false,mc91,e,e1} obtained from the union of FTA in Example 1 and FTA in Example 3, which were generated by the determinisation algorithm) 
                                 
                                    
                                       
                                          
                                             
                                          
                                       
                                    
                                 
                              The clauses generated by Algorithm 2 are the following, with the renaming function 
                                 ρ
                                 =
                                 {
                                 [
                                 false
                                 ]
                                 ↦
                                 false
                                 ,
                                 [
                                 mc
                                 91
                                 ]
                                 ↦
                                 mc
                                 91
                                 ,
                                 [
                                 e
                                 ,
                                 false
                                 ]
                                 ↦
                                 false
                                 _
                                 1
                                 ,
                                 [
                                 mc
                                 91
                                 ,
                                 e
                                 1
                                 ]
                                 ↦
                                 mc
                                 91
                                 _
                                 1
                                 }
                              . Below we also show the clause identifiers (the 
                                 id
                               function for the generated clauses) showing that several clauses can have the same identifier, thus preserving traces 
                                 
                                    
                                       
                                          
                                             
                                          
                                       
                                    
                                 
                              
                           

Abstract interpretation [16] is a technique which derives sound over-approximations by computing abstract fixed points. Convex polyhedron analysis (CPA) [17] is a program analysis technique based on abstract interpretation [16]. When applied to a set of CHCs P it constructs an over-approximation 
                           
                              
                                 M
                              
                              
                                 ′
                              
                           
                         of the minimal model of P, where 
                           
                              
                                 M
                              
                              
                                 ′
                              
                           
                         contains at most one constrained fact 
                           p
                           (
                           X
                           )
                           ←
                           ϕ
                         for each predicate p. The constraint ϕ is a conjunction of linear inequalities, representing a convex polyhedron. The first application of convex polyhedron analysis to CHCs was by Benoy and King [18].

We summarise briefly the elements of convex polyhedron analysis for CHC; further details (with application to CHC) can be found in [17,18]. The abstract interpretation consists of the computation of an increasing sequence of elements of the abstract domain of tuples of convex polyhedra (one for each predicate) 
                           
                              
                                 D
                              
                              
                                 n
                              
                           
                        . We construct a monotonic abstract semantic function 
                        
                           
                              
                                 F
                              
                              
                                 P
                              
                           
                           :
                           
                              
                                 D
                              
                              
                                 n
                              
                           
                           →
                           
                              
                                 D
                              
                              
                                 n
                              
                           
                         for the set of Horn clauses P, approximating the concrete semantic “immediate consequences” operator.

Since 
                           
                              
                                 D
                              
                              
                                 n
                              
                           
                         contains infinite increasing chains, a widening operator for convex polyhedra [17] is needed to ensure convergence of the sequence. The sequence computed is 
                           
                              
                                 Z
                              
                              
                                 0
                              
                           
                           =
                           
                              
                                 ⊥
                              
                              
                                 n
                              
                           
                        , 
                           
                              
                                 Z
                              
                              
                                 n
                                 +
                                 1
                              
                           
                           =
                           
                              
                                 Z
                              
                              
                                 n
                              
                           
                           ∇
                           
                              
                                 F
                              
                              
                                 P
                              
                           
                           (
                           
                              
                                 Z
                              
                              
                                 n
                              
                           
                           )
                         where 
                           ∇
                         is a widening operator for convex polyhedra and the empty polyhedron is denoted 
                           ⊥
                        . The conditions on 
                           ∇
                         ensure that the sequence stabilises; thus for some finite j, 
                           
                              
                                 Z
                              
                              
                                 i
                              
                           
                           =
                           
                              
                                 Z
                              
                              
                                 j
                              
                           
                         for all 
                           i
                           >
                           j
                         and furthermore the value Z
                        
                           j
                         represents an over-approximation of the least model of P. Algorithm 3 presents convex polyhedral analysis for Horn clauses. For each constrained fact derived from the set of clauses P using this algorithm, there is a derivation tree (trace term) associated with it. These are syntactically possible trace terms using the clauses in P but may not be feasible due to abstraction. Thus all such trace terms are in 
                           L
                           (
                           
                              
                                 A
                              
                              
                                 P
                              
                           
                           )
                        . 
                           Algorithm 3
                           
                              Algorithm for convex polyhedral abstraction.
                                 
                                    
                                       
                                       
                                          
                                             
                                                Input: CHCs P
                                             
                                          
                                          
                                             
                                                Output: a set of constrained facts Z
                                                
                                                   i
                                                
                                             
                                          
                                          
                                             
                                                
                                                   i
                                                   ←
                                                   0
                                                 ;
                                          
                                          
                                             
                                                
                                                   
                                                      
                                                         Z
                                                      
                                                      
                                                         0
                                                      
                                                   
                                                   ←
                                                   ⊥
                                                 ;
                                          
                                          
                                             
                                                
                                                   New
                                                   ←
                                                   ⊥
                                                 ;
                                          
                                          
                                             
                                                repeat
                                             
                                          
                                          
                                             
                                                
                                                   |
                                                   
                                                      
                                                         
                                                            
                                                               for
                                                               
                                                               all
                                                               
                                                               p
                                                               (
                                                               X
                                                               )
                                                               ←
                                                               Body
                                                               ∈
                                                               P
                                                               
                                                               do
                                                            
                                                         
                                                         
                                                            
                                                               
                                                               |
                                                               
                                                               New
                                                               ←
                                                               New
                                                               ⊔
                                                               solve
                                                               (
                                                               p
                                                               (
                                                               X
                                                               )
                                                               ,
                                                               Body
                                                               ,
                                                               
                                                                  
                                                                     Z
                                                                  
                                                                  
                                                                     i
                                                                  
                                                               
                                                               )
                                                            
                                                         
                                                         
                                                            
                                                               end
                                                            
                                                         
                                                         
                                                            
                                                               
                                                                  
                                                                     Z
                                                                  
                                                                  
                                                                     i
                                                                     +
                                                                     1
                                                                  
                                                               
                                                               ←
                                                               
                                                                  
                                                                     Z
                                                                  
                                                                  
                                                                     i
                                                                  
                                                               
                                                               ∇
                                                               (
                                                               New
                                                               ⊔
                                                               
                                                                  
                                                                     Z
                                                                  
                                                                  
                                                                     i
                                                                  
                                                               
                                                               )
                                                               
                                                               ▹
                                                               Upper
                                                               
                                                               bound
                                                               
                                                               and
                                                               
                                                               widen
                                                               ;
                                                            
                                                         
                                                         
                                                            
                                                               i
                                                               ←
                                                               i
                                                               +
                                                               1
                                                               ;
                                                            
                                                         
                                                      
                                                   
                                                
                                             
                                          
                                          
                                             
                                                until 
                                                
                                                   
                                                      
                                                         Z
                                                      
                                                      
                                                         i
                                                      
                                                   
                                                   ⊑
                                                   
                                                      
                                                         Z
                                                      
                                                      
                                                         i
                                                         −
                                                         1
                                                      
                                                   
                                                ;
                                          
                                          
                                             
                                                return 
                                                Z
                                                
                                                   i
                                                 ;
                                          
                                       
                                    
                                 
                              
                           

Much research has been done on improving the precision of widening operators. One technique is known as widening up-to, or widening with thresholds [19]. A threshold is an assertion that is combined with a widening operator to improve its precision.

Our tool for convex polyhedral abstract interpretation, called CPA in the rest of this paper, uses the Parma Polyhedra Library [20] to implement the operations on convex polyhedra, and incorporates a threshold generation phase based on the method described by Lakhdar-Chaouch et al. [21], as well as a constraint strengthening pre-processing which propagates constraints both forwards and backwards in the clauses of P.

Recently, a technique for deriving more effective thresholds was developed [21], which we have adapted and found to be effective in experimental studies. In brief, the method collects constraints by iterating the concrete immediate consequence function 
                              
                                 
                                    S
                                 
                                 
                                    P
                                 
                                 
                                    D
                                 
                              
                            three times starting from the “top” interpretation, that is, the interpretation in which all atomic facts are true. The thresholds are computed by the following method. Let 
                              
                                 
                                    S
                                 
                                 
                                    P
                                 
                                 
                                    D
                                 
                              
                            be the standard immediate consequence operator for CHCs mentioned in Section 4.1. That is, if I is a set of constrained facts, 
                              
                                 
                                    S
                                 
                                 
                                    P
                                 
                                 
                                    D
                                 
                              
                              (
                              I
                              )
                            is the set of constrained facts that can be derived in one step from I. Given a constrained fact 
                              p
                              (
                              
                                 
                                    Z
                                 
                                 
                                    ¯
                                 
                              
                              )
                              ←
                              C
                           , define 
                              atomconstraints
                              (
                              p
                              (
                              
                                 
                                    Z
                                 
                                 
                                    ¯
                                 
                              
                              )
                              ←
                              C
                              )
                            to be the set of constrained facts 
                              {
                              p
                              (
                              
                                 
                                    Z
                                 
                                 
                                    ¯
                                 
                              
                              )
                              ←
                              
                                 
                                    C
                                 
                                 
                                    i
                                 
                              
                              ∣
                              C
                              =
                              
                                 
                                    C
                                 
                                 
                                    1
                                 
                              
                              ∧
                              …
                              ∧
                              
                                 
                                    C
                                 
                                 
                                    k
                                 
                              
                              ,
                              (
                              1
                              ≤
                              i
                              ≤
                              k
                              )
                              }
                           . The function 
                              atomconstraints
                            is extended to interpretations by 
                              atomconstraints
                              (
                              I
                              )
                              =
                              
                                 
                                    ⋃
                                 
                                 
                                    p
                                    (
                                    
                                       
                                          Z
                                       
                                       
                                          ¯
                                       
                                    
                                    )
                                    ←
                                    C
                                    ∈
                                    I
                                 
                              
                              {
                              atomconstraints
                              (
                              p
                              (
                              
                                 
                                    Z
                                 
                                 
                                    ¯
                                 
                              
                              )
                              ←
                              C
                              )
                              }
                           .

Let 
                              
                                 
                                    I
                                 
                                 
                                    ⊤
                                 
                              
                            be the interpretation consisting of the set of constrained facts 
                              p
                              (
                              
                                 
                                    Z
                                 
                                 
                                    ¯
                                 
                              
                              )
                              ←
                              true
                            for each predicate p. We perform three iterations of 
                              
                                 
                                    S
                                 
                                 
                                    P
                                 
                                 
                                    D
                                 
                              
                            (represented as 
                              
                                 
                                    S
                                 
                                 
                                    P
                                 
                                 
                                    D
                                    (
                                    3
                                    )
                                 
                              
                           ) starting with 
                              
                                 
                                    I
                                 
                                 
                                    ⊤
                                 
                              
                            (the first three elements of a “top-down” Kleene sequence) and then extract the atomic constraints. That is, 
                              thresholds
                            is defined as follows: 
                              
                                 
                                    thresholds
                                    (
                                    P
                                    )
                                    =
                                    atomconstraints
                                    (
                                    
                                       
                                          S
                                       
                                       
                                          P
                                       
                                       
                                          D
                                          (
                                          3
                                          )
                                       
                                    
                                    (
                                    
                                       
                                          I
                                       
                                       
                                          ⊤
                                       
                                    
                                    )
                                    )
                                 
                              
                           
                        

A difference from the method in [21] is that we use the concrete semantic function 
                              
                                 
                                    S
                                 
                                 
                                    P
                                 
                                 
                                    D
                                 
                              
                            rather than the abstract semantic function when computing thresholds. The set of threshold constraints represents an attempt to find useful predicate properties and when widening they help to preserve invariants that might otherwise be lost during widening. See [21] for further details. Threshold constraints that are not invariants are simply discarded during widening. Thresholds constraints are not necessarily over-approximations (invariants).

The operation 
                              thresholds
                              (
                              P
                              )
                            can become expensive and generate a very large number of constraints. Alternatively we can generate more general threshold constraints (called abstract threshold), possibly losing precision while gaining efficiency, by following more closely the approach defined in [21], using the abstract semantic function F
                           
                              P
                           . Then the threshold operation P becomes 
                              
                                 
                                    thresholds
                                    (
                                    P
                                    )
                                    =
                                    atomconstraints
                                    (
                                    
                                       
                                          F
                                       
                                       
                                          P
                                       
                                       
                                          (
                                          3
                                          )
                                       
                                    
                                    (
                                    
                                       
                                          I
                                       
                                       
                                          ⊤
                                       
                                    
                                    )
                                    )
                                 
                              
                           
                        

The effectiveness of abstract interpretation can be improved by combining it with specialisation with respect to some property. Therefore we specialise (pre-process) the set of clauses with respect to the property to be verified using the method described in [22]. The method is summarised as follows: the inputs are a set of CHCs P and an atomic formula A (a property) and the output is P
                           
                              A
                           , a set of specialised clauses.
                              
                                 1.
                                 Compute a query-answer transformation 
                                    [22] of P with respect to A, denoted 
                                       
                                          
                                             P
                                          
                                          
                                             qa
                                          
                                       
                                    , containing predicates 
                                       
                                          
                                             p
                                          
                                          
                                             q
                                          
                                       
                                     and 
                                       
                                          
                                             p
                                          
                                          
                                             a
                                          
                                       
                                     representing query and answer predicates for each predicate p in P.

Compute an over-approximation M of the model of 
                                       
                                          
                                             P
                                          
                                          
                                             qa
                                          
                                       
                                     using abstract interpretation.

Strengthen the constraints in the clauses in P, by adding constraints from the answer predicates in M. That is, for each clause
                                       
                                          
                                             p
                                             (
                                             X
                                             )
                                             ←
                                             ϕ
                                             ,
                                             
                                                
                                                   p
                                                
                                                
                                                   1
                                                
                                             
                                             (
                                             
                                                
                                                   X
                                                
                                                
                                                   1
                                                
                                             
                                             )
                                             ,
                                             …
                                             ,
                                             
                                                
                                                   p
                                                
                                                
                                                   k
                                                
                                             
                                             (
                                             
                                                
                                                   X
                                                
                                                
                                                   k
                                                
                                             
                                             )
                                          
                                       
                                    in P, we construct a clause
                                       
                                          
                                             p
                                             (
                                             X
                                             )
                                             ←
                                             ϕ
                                             ,
                                             
                                                
                                                   ϕ
                                                
                                                
                                                   0
                                                
                                             
                                             ,
                                             
                                                
                                                   ϕ
                                                
                                                
                                                   1
                                                
                                             
                                             ,
                                             …
                                             ,
                                             
                                                
                                                   ϕ
                                                
                                                
                                                   n
                                                
                                             
                                             ,
                                             
                                                
                                                   p
                                                
                                                
                                                   1
                                                
                                             
                                             (
                                             
                                                
                                                   X
                                                
                                                
                                                   1
                                                
                                             
                                             )
                                             ,
                                             …
                                             ,
                                             
                                                
                                                   p
                                                
                                                
                                                   k
                                                
                                             
                                             (
                                             
                                                
                                                   X
                                                
                                                
                                                   k
                                                
                                             
                                             )
                                          
                                       
                                    in P
                                    
                                       A
                                    , where 
                                       
                                          
                                             p
                                          
                                          
                                             a
                                          
                                       
                                       (
                                       X
                                       )
                                       ←
                                       
                                          
                                             ϕ
                                          
                                          
                                             0
                                          
                                       
                                    , 
                                       
                                          
                                             p
                                          
                                          
                                             1
                                          
                                          
                                             a
                                          
                                       
                                       (
                                       X
                                       )
                                       ←
                                       
                                          
                                             ϕ
                                          
                                          
                                             1
                                          
                                       
                                       ,
                                       …
                                       ,
                                       
                                          
                                             p
                                          
                                          
                                             n
                                          
                                          
                                             a
                                          
                                       
                                       (
                                       X
                                       )
                                       ←
                                       
                                          
                                             ϕ
                                          
                                          
                                             n
                                          
                                       
                                     are in 
                                       
                                          
                                             M
                                          
                                          
                                             ′
                                          
                                       
                                    .

The method propagates constraints globally, both forwards and backwards, and makes explicit constraints from the original clauses. This allows better analysis of the transformed clauses. Furthermore, the method is independent of the abstract domain and the constraints theory underlying the clauses.

If an over-approximation of the clauses derived by polyhedral abstraction does not contain 
                        false
                     , the clauses are safe. However if 
                        false
                      is contained in the approximation, we do not know whether the clauses are unsafe or whether the approximation was too imprecise. In such cases we can produce a trace term 
                        t
                        ∈
                        
                           
                              A
                           
                           
                              P
                           
                        
                      using the clauses in P which justifies the abstract derivation of 
                        false
                     . The feasibility of this trace can be checked by a constraint satisfiability check. If the trace is feasible, then it corresponds to a proof of unsafety. Otherwise, refinement is considered based on this trace. In some other approaches, a more precise abstract domain is derived from the trace. In our refinement approach, which is described next, we aim to generate a modified set of clauses that could yield a better approximation. This is achieved through the steps shown in Algorithm 4.
                        Algorithm 4
                        
                           Algorithm for clause refinement using FTA operations.
                              
                                 
                                    
                                    
                                       
                                          
                                             Input: A set of Horn clauses P and an infeasible trace 
                                                t
                                                ∈
                                                
                                                   
                                                      A
                                                   
                                                   
                                                      P
                                                   
                                                
                                             
                                          
                                       
                                       
                                          
                                             Output: A set of refined Horn clauses 
                                                
                                                   
                                                      P
                                                   
                                                   
                                                      ′
                                                   
                                                
                                             
                                          
                                       
                                       
                                          1. construct the trace FTA 
                                                
                                                   
                                                      A
                                                   
                                                   
                                                      P
                                                   
                                                
                                              (Definition 7);
                                       
                                       
                                          2. construct an FTA 
                                                
                                                   
                                                      A
                                                   
                                                   
                                                      t
                                                   
                                                
                                              such that 
                                                L
                                                (
                                                
                                                   
                                                      A
                                                   
                                                   
                                                      t
                                                   
                                                
                                                )
                                                =
                                                {
                                                t
                                                }
                                              (Definition 11);
                                       
                                       
                                          3. compute the difference FTA 
                                                
                                                   
                                                      A
                                                   
                                                   
                                                      P
                                                   
                                                
                                                ⧹
                                                
                                                   
                                                      A
                                                   
                                                   
                                                      t
                                                   
                                                
                                              (Definition 5);
                                       
                                       
                                          4. generate 
                                                
                                                   
                                                      P
                                                   
                                                   
                                                      ′
                                                   
                                                
                                              from 
                                                
                                                   
                                                      A
                                                   
                                                   
                                                      P
                                                   
                                                
                                                ⧹
                                                
                                                   
                                                      A
                                                   
                                                   
                                                      t
                                                   
                                                
                                              and P (Algorithm 2) ;
                                       
                                       
                                          
                                             return 
                                             
                                                
                                                   
                                                      P
                                                   
                                                   
                                                      ′
                                                   
                                                
                                             ;
                                       
                                    
                                 
                              
                           
                        

Both 
                        
                           
                              A
                           
                           
                              P
                           
                        
                      and 
                        
                           
                              A
                           
                           
                              t
                           
                        
                      in Algorithm 4 are deterministic FTAs by construction, however their union is not. Determinisation is used to generate the difference FTA (step 3) and its result is in product form. The program 
                        
                           
                              P
                           
                           
                              ′
                           
                        
                      has the same model (modulo predicate renaming) as P, since the steps result in the removal of an infeasible trace but all other traces are preserved.

Removal of one trace from the clauses might not seem much of a refinement. However, modifying the clauses to remove a single trace can result in significant restructuring, which arises as a side-effect of determinisation which isolates the infeasible trace. This in turn can induce a more precise abstract interpretation, with less precision loss due to convex hull operations and widening.

The correctness of this refinement follows from Proposition 3. In particular 
                        false
                        ∈
                        M
                        〚
                        P
                        〛
                      if and only if 
                        false
                        ∈
                        M
                        〚
                        
                           
                              P
                           
                           
                              ′
                           
                        
                        〛
                      (assuming that the predicate renaming at least preserves the predicate name 
                        false
                      ).
                        Example 5
                        Consider again the FTA shown in Example 4. This is in fact the determinisation of 
                              
                                 
                                    A
                                 
                                 
                                    P
                                 
                              
                              ∪
                              
                                 
                                    A
                                 
                                 
                                    t
                                 
                              
                            where P is the set of clauses in Fig. 1 and 
                              
                                 
                                    A
                                 
                                 
                                    t
                                 
                              
                            where t is the infeasible trace c3(c1). The only accepting state of 
                              
                                 
                                    A
                                 
                                 
                                    t
                                 
                              
                            is e; thus to construct the difference 
                              
                                 
                                    A
                                 
                                 
                                    P
                                 
                              
                              ⧹
                              
                                 
                                    A
                                 
                                 
                                    t
                                 
                              
                            we need only to remove from the automaton the states containing e, namely [mc91,e]. We can also remove any transitions containing this state in the right hand side. This leaves the following FTA and refined program in Fig. 2, using the same renaming function as in Example 4. In this program, the infeasible trace corresponding to c3(c1) cannot be constructed 
                              
                                 
                                    
                                       
                                          
                                       
                                    
                                 
                              
                           
                        

It can be seen that although the infeasible trace was very simple, its removal led to a considerably restructured set of clauses. We have not shown the product form here, which is in fact somewhat more compact.

The refinement process guarantees progress; that is, the infeasible computation once eliminated never arises again. Due to the construction of the 
                        id
                      mapping for 
                        
                           
                              P
                           
                           
                              ′
                           
                        
                      the traces in the languages of the FTAs of P and 
                        
                           
                              P
                           
                           
                              ′
                           
                        
                      are preserved, apart from the eliminated trace.
                        Proposition 4
                        Progress


                        
                           Let P be a set of CHCs, and t be a trace in P. Let 
                           
                              
                                 
                                    P
                                 
                                 
                                    ′
                                 
                              
                            
                           be a refined set of CHCs obtained from P after the removal of t. Then t cannot be generated in any approximation of 
                           
                              
                                 
                                    P
                                 
                                 
                                    ′
                                 
                              
                           .

The proof of this proposition follows from the following points:
                              
                                 1.
                                 
                                    
                                       
                                          
                                             A
                                          
                                          
                                             P
                                          
                                       
                                     recognizes all syntactically possible traces of P, which is an over-approximation of the traces of P since the constraints in P are not taken in account while constructing 
                                       
                                          
                                             A
                                          
                                          
                                             P
                                          
                                       
                                    .

After the removal of the trace t from all possible traces of P (step 3 of Algorithm 4) the language of 
                                       
                                          
                                             A
                                          
                                          
                                             P
                                          
                                       
                                       ⧹
                                       
                                          
                                             A
                                          
                                          
                                             t
                                          
                                       
                                     does not contain t (difference automata).

Then using Algorithm 2 to generate 
                                       
                                          
                                             P
                                          
                                          
                                             ′
                                          
                                       
                                     from 
                                       
                                          
                                             A
                                          
                                          
                                             P
                                          
                                       
                                       ⧹
                                       
                                          
                                             A
                                          
                                          
                                             t
                                          
                                       
                                     and P, t will be syntactically impossible trace in 
                                       
                                          
                                             P
                                          
                                          
                                             ′
                                          
                                       
                                     (follows from Proposition 3).

Since t is syntactically impossible trace in 
                                       
                                          
                                             P
                                          
                                          
                                             ′
                                          
                                       
                                    , there is no constrained fact associated with it in any abstract domain using 
                                       
                                          
                                             P
                                          
                                          
                                             ′
                                          
                                       
                                     (see Section 4.5).□

Progress is an interesting and relevant refinement property but it gives no guarantees that a proof will eventually be found if such exists. In the worst case the algorithm will just eliminate longer and longer infeasible traces. Even if there exists some convex polyhedral approximation that establishes P׳s satisfiability, the abstract interpretation algorithm involving the widening heuristic cannot guarantee to find it.

We also apply a tree-automata-based transformation to split states representing predicates where convex hull operations have lost precision. A typical case is where a number of clauses with the same head predicate contain disjoint constraints, such as a predicate representing an if–then–else statement in an imperative program. The clauses defining the statement will have a clause for the then branch and a clause for the else branch. The respective constraints in these clauses are disjoint since one is the negation of the other. The convex hull will thus contain the whole space for the variables involved in these constraints.

As defined in Definition 6, the FTA state corresponding to such a predicate can be split. We partition the transitions corresponding to the clauses according to the disjoint groups of constraints and apply the procedure in Definition 6, preserving the set of traces. Thus the feasible traces and the model of the resulting clauses is preserved. This enhances precision of polyhedral analysis [23].

Splitting has to be carried out in a controlled manner to prevent blow up in the size of FTA and hence on the size of the clauses generated. With this in mind we split only those states appearing in a counterexample trace, but this is not necessary in our approach to avoid a counterexample.

It would have been possible to formulate the splitting operation directly on CHCs, without any reference to FTAs. However, since the whole procedure is based on transformations that preserve the set of feasible traces, we preferred to present splitting as a language-preserving operation on FTAs.

Our tool consists of an implementation of a convex polyhedra analyser for CLP written in Ciao Prolog
                           1
                        
                        
                           1
                           
                              http://ciao-lang.org/.
                         interfaced to the Parma Polyhedra Library [20] as well as an implementation of an FTA determiniser written in Java. It takes as an input a CLP program and returns “safe”, “unsafe” or “unknown” (after resources are exhausted). The input is first pre-processed using the method described in Section 4.5.2. The benchmark set contains 216 CHCs verification problems (179 safe and 37 unsafe problems), taken mainly from the repositories of several state-of-the-art software verification tools such as DAGGER [24] (21 problems), TRACER [25] (66 problems), InvGen [26] (68 problems), and also from the TACAS 2013 Software Verification Competition [27] (52 problems). These problems are also available in C (http://akira.ruc.dk/~kafle/comlan-vmcai15-benchmarks.zip) and they were first translated to CLP form.
                           2
                        
                        
                           2
                           Thanks to Emanuele De Angelis for the translation.
                         The chosen problems are representatives of different categories of the Software Verification Competition (loops, control flow and integer, SystemC, etc.) as well as specific problems used to demonstrate the strength of different verification tools. The benchmarks in CLP form are available from http://akira.ruc.dk/~kafle/VMCAI15-Benchmarks.zip. The experiments were carried out on an Intel(R) computer with a 2.66GHz processor running Debian 5 in 6 GB memory.

The results of our experiments are summarised in Fig. 4
                        . Column CPA summarises the results using our own convex polyhedra analyser (Section 4.5) with no refinement step. Column CPA+R shows the results obtained by iterating the CPA algorithm with the refinement step described in Section 5, Algorithm 4. Column CPA+R+Split incorporates the FTA-based state splitting into the refinement step (Section 5.1). In all the above cases, we used a concrete threshold generation as described in Section 4.5.1. Column QARMC shows the results obtained on the same problems using the QARMC tool [28,29]. The columns VeriMAP(GenPH), TRACER-SPost, TRACER-WPre respectively report results using the VeriMAP system implementing Iterated Specialisation method with the generalisation operator GenPH [30], TRACER [25] using the strongest postcondition (SPost) and the weakest precondition (WPre) options. The results in these three columns are taken from [30] since we could not run these tools. We used the same set of benchmarks as in [30]. The last column ELDARICA reports results using Eldarica tool
                           3
                        
                        
                           3
                           
                              http://lara.epfl.ch/w/eldarica.
                         which uses disjunctive interpolants for the Horn clause verification purpose [31].

The results show that CPA is reasonably effective on its own, solving 74% (160/216) of the problems. When combined with a refinement phase we can solve further 22 problems. Although only one infeasible trace is eliminated in each refinement step, the refined program splits some of the predicates appearing in the trace, which we noted to be a crucial point of precision for polyhedral analysis [23]. When adding the state splitting refinement we solve an additional 13 problems. Further splitting would solve more problems but we are unwilling to introduce uncontrolled splitting due to the blow up in program size that could result. The maximum number of iterations required to solve a problem was 8. Although the timeout limit was 5min, only 5% of the solved problems required more than 1min.

Our implementation uses the product form for DFTAs produced by the determinisation algorithm, although the formalisation of refinement in Section 5 uses only standard FTA transitions. Although the traces for clauses with predicates produced from product states differ from the original clauses, they can be regarded as representing the original traces, by unfolding the clauses resulting from ϵ-transitions. Product form adds to the scalability of the approach, especially for Horn clauses with more than one body atom. Empirically we have not shown this here but this is due to the scalability of the product form during determinisation of FTAs (see [11]).

On the set of verification problems considered, our results (CPA+R+Split) improve on other tools both in average time and the number of instances solved. The results of VeriMAP and QARMC are close to ours while results of TRACER are bit far. This is due to the fact that TRACER uses symbolic execution and does not scale well. Out of 216 problems QARMC solves 178 problems with an average time of 59s whereas we can solve 195 problems with an average time of 50s. However, all unsafe programs in the benchmark set are solved by QARMC in contrast to ours. Surprisingly enough, the number of unsafe problems solved by VeriMAP and our tool is the same. Since both of our tool use convex hull and widening, the precision lost due to these operators in the rest of the unsafe programs cannot be recovered. The model checking algorithm implemented in Eldarica for Horn solving is similar in spirit as the one described in [29] but uses disjunctive interpolation for counterexamples generalisation instead of tree interpolation which is strictly more general than tree interpolation [31]. We suspect that it is due to this, the average time taken by Eldarica is slightly less than that of QARMC though it solves lesser number of instance than QARMC. Our results show that for these set of examples, tools using polyhedral abstraction seems more powerful than the others.

Convex polyhedral analysis is good at finding the required invariants to prove the safety of a program and due to this our tool and VeriMAP solved more safe problems than QARMC. On the other hand, QARMC seems to be more effective at finding bugs. Most of the problems challenging to us come from some particular categories e.g. SystemC (modeled over fixed size integers) and Control Flow and Integer Variables of [27] which requires some specific techniques to solve. Safe problems challenging to us are also challenging to QARMC though this is not the case for unsafe problems.

We chose a subset of 132 problems from SV-COMP 2015
                           4
                        
                        
                           4
                           
                              http://sv-comp.sosy-lab.org/2015/benchmarks.php.
                         
                        [32]. This set contains benchmarks from the categories which were not reported in our experiments before such as recursive benchmarks which needs recursive analysis. Additionally it contains some benchmarks from Loop category such as loop-acceleration, loop-lit, loop-new. We used SeaHorn [33,5], a verification framework based on LLVM, for Horn clause generation. SeaHorn first compiles C to LLVM intermediate representation (LLVM IR), also known as bitcode using clang, a C-family front-end for LLVM.
                           5
                        
                        
                           5
                           
                              http://clang.llvm.org/.
                         The bitcode is further simplified and optimised reusing the vast amount of work done on LLVM (e.g. function inlining, dead code elimination, CFG simplifications, etc.) whose purpose is to make the verification task easier. The resulting bitcode is translated to Horn clauses using different semantics for example small step, large block encoding, etc. More details can be found in [33,5]. These benchmarks are available in C as well as in Horn clause form from http://akira.ruc.dk/~kafle/comlan-vmcai15-benchmarks.zip. The results are summarised in Table 1
                        . The column CPA+R+Split+AT reports results using our tool described above which now uses abstract threshold as described in Section 4.5.1 rather than the concrete one. The results show that our tool with the option abstract threshold (column 2) scales more than the concrete one (column 1) though the number of instances solved is the same. In these benchmarks, though we solve a few more problems than QARMC, it is much faster than our tool.

@&#RELATED WORK@&#

The work by Heizmann et al. [7,34] uses nested word automata to construct a framework for abstraction refinement. Our work could certainly be regarded as extending that framework to tree-structured computations, using tree automata instead of (nested) word automata. However our aim is somewhat different. We use automata techniques to perform the refinement whereas in [7] automata notation is only used to re-express the verification problem, shifting the verification problem to the construction of “interpolant automata”, without providing any automata-based algorithms to do this. On the other hand we discuss the practicality of the automata-based approach on a set of challenging problems.

While we eliminate only one trace at a time in the described procedure, the FTA difference algorithm extends naturally to eliminating (infinite) sets of traces. This is a goal that is well worth pursuing – although to find an interpolant automaton describing an infinite set of infeasible traces is sometimes as difficult as solving the original problem.

Verification of CLP programs using abstract interpretation and specialisation has been studied for some time. The use of an over-approximation of the semantics of a program can be used to establish safety properties – if a state or property does not appear in an over-approximation, it certainly does not appear in the actual program behaviour. A general framework for logic program verification through abstraction was described by Levi [35]. Peralta et al. [1] introduced the idea of using a Horn clause representation of imperative languages and a convex polyhedral analyser to discover invariants of a program. Another approach is taken in the work of De Angelis et al. [36,37] on applying program specialisation to achieve verification. Unfolding and folding operations play a vital role in that approach, and hence the program structure is changed much more fundamentally than in our approach.

CEGAR [8] has been successfully used in verification to automatically refine (predicate) abstractions [38,39] to reduce false alarms but not much has been explored in refining abstractions in the convex polyhedral domain. Some work on this (with progress guarantee) has been done in [40,24]. Ref. [40] uses the powerset domain, while [24] uses a Hint DAG to gain precision lost during the convex hull operation. Both make use of interpolation. The use of interpolation in refinement in verification of Horn clauses is explored in [41,42]. In our approach we guarantee elimination of only one trace and elimination of others depends on properties of the abstract interpretation techniques. One drawback of our approach is that we cannot characterise what other infeasible traces are removed by the refinement if there is any. By contrast in interpolation-based techniques the refinement introduces new properties which guarantee progress and the elimination of all counterexamples covered by those properties. However the effectiveness of interpolation-based refinement depends on the generation of “good” interpolants, which is a matter of continuing research, for example by Rümmer et al. [31]. There is no generalisation of counterexamples currently since we remove a single counterexample in each iteration. In this sense our refinement approach is weak. The ideas developed in [31] are certainly useful to extend our refinement approach. A number of tools implementing predicate abstraction and refinement are available, such as HSF [29] and BLAST [43]. TRACER [44] is a verification tool based on CLP that uses symbolic execution.

A point of contrast is that in our approach, the refinements are embedded in the clauses whereas in CEGAR they are accumulated in the set of properties used for property-based abstraction. Also we rely on the abstraction using convex polyhedral analysis to discover invariants whereas CEGAR-based approaches rely on interpolation in the refinement stage to perform generalisation, this discovering useful properties. A weakness of invariant generation using interpolation is that the interpolants must share variables with the unsatisfiable part of the constraints, typically those in the integrity constraints, which can be insufficient for finding invariants of inner recursive predicates. Polyhedral analysis is more expensive, yet seems (along with the threshold assertions, see Section 4.5) to be very effective at finding invariants even on the first iteration.

Informally one can say that approaches differ in where the “hard work” is performed. In the CEGAR approaches and in [7] the refinement step is crucial, and interpolation plays a central role. In our approach, by contrast, most of the hard work is done by the abstract interpretation, which finds useful invariants. Finding the most effective balance between abstraction and refinement techniques is a matter of ongoing research.

In this paper we presented a procedure for abstraction refinement in Horn clause verification based on tree automata. This was achieved through a combination of abstraction (using abstraction interpretation) followed by a trace refinement (using finite tree automata). The refinement is independent of the abstract domain used. The practicality of our approach was demonstrated on a set of Horn clause verification problems.

In the future, we will investigate the elimination of a larger set of infeasible traces in each refinement step, possibly by generalising a trace using interpolation or by discovering a set of infeasible traces. At the moment, a new program is generated after refinement and the analysis is restarted from the scratch. In the future, we would like to reuse the result of analysis from the previous iterations and build on this instead of starting the analysis from the scratch. The optimisation of our tool chain is also an important topic for future work as it is clear that our prototype, built by chaining together tools using shell scripts, contains much redundancy.

@&#ACKNOWLEDGEMENTS@&#

This paper is an extended version of a paper presented at the 16th International Conference on Verification, Model Checking, and Abstract Interpretation (VMCAI׳15). We thank the anonymous referees of VMCAI׳15 for useful comments. The paper has been extended by adding proofs of all propositions, adding further information about the implementation and performing some further experiments. We also thank Jorge A. Navas for his help with the tool SeaHorn and for several interesting discussions. B. Kafle was supported by European Commission Framework 7 project ENTRA (Project 318337). J. Gallagher was supported by Danish Research Council Grant FNU 10-084290 “Numeric and Symbolic Abstractions for Software Model Checking”.

@&#REFERENCES@&#

