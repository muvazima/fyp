@&#MAIN-TITLE@&#Growing construction of conlitron and multiconlitron

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           Multiconlitron is a general piecewise linear classifier as a union of conlitrons.


                        
                        
                           
                           A new technique is proposed for improving the performance of a conlitron/multiconlitron.


                        
                        
                           
                           This technique consists of two basic operations, SQUEEZE and INFLATE.


                        
                        
                           
                           SQUEEZE and INFLATE result in two new algorithms, GSCA and GSMA.


                        
                        
                           
                           GSCA/GSMA can construct a better conlitron/multiconlitron.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Conlitron

Multiconlitron

Piecewise linear classifiers

Piecewise linear learning

Support vector machines

@&#ABSTRACT@&#


               
               
                  Based on the concepts of conlitron and multiconlitron, we propose a growing construction technique for improving the performance of piecewise linear classifiers on two-class problems. This growing technique consists of two basic operations: SQUEEZE and INFLATE, which can produce relatively reliable linear boundaries. In the convexly separable case, the growing process, forming a growing support conlitron algorithm (GSCA), starts with an initial conlitron and uses SQUEEZE to train a new conlitron, moving its classification boundary closer to the interior convex region and fitting the data distribution better statistically. In the commonly separable case, the growing process, forming a growing support multiconlitron algorithm (GSMA), starts with an initial multiconlitron and uses INFLATE and SQUEEZE to train a new multiconlitron, making its classification boundary adjusted to improve the generalization ability. Experimental evaluation shows that the growing technique can simplify the structure of a conlitron/multiconlitron effectively by reducing the number of linear functions, largely keeping and even greatly improving the level of classification performances. Therefore, it would come to play an important role in the subsequent development of piecewise linear learning, with the main goal to improve piecewise linear classifiers in a general framework.
               
            

@&#INTRODUCTION@&#

There have been extensive studies on designing a classifier with one hyperplane. If two data sets are linearly separable, a perception algorithm [1] may separate them without guarantee of the optimality, whereas a support vector machine (SVM) [2,3] can produce an optimal separating hyperplane in the sense of maximal margin. However, it needs an appropriate kernel function [4,5] for solving nonlinear problems. This may lead to some difficulties in the interpretability/transparency of metric change without intuitive geometric meaning [6,7]. Accordingly, there remains a problem that, how to directly design a large margin classifier in the original space, not using any nonlinear kernels. A possible solution is to construct a piecewise linear classifier (PLC) via large margin training with multiple hyperplanes instead of one hyperplane.

The main advantage of a PLC is very simple to implement with requirement of low memory usage, making it suitable for small reconnaissance robots, intelligent cameras, imbedded and real-time systems, and portable devices. Despite of the simplicity, a PLC-building technique usually requires complex computational procedures for selecting the number of hyperplanes and minimizing the error of classification. In fact, it is a challenging and complicated task to synthesize an optimal PLC with appropriate number of hyperplanes. For addressing this problem, there have been a lot of methods such as based on linear programming [8,9], local training [10–12], decision tree [13,14], and max–min separability [15–18]. However, these methods generally construct a PLC not from the viewpoint of large margin, which has been widely accepted as an effective paradigm in machine learning. Moreover, they need to manually specify a set of integers in advance, for describing how to organize linear functions in groups.

Using the notion of large margin, our previous research [19] presented a general framework for constructing a PLC based on the concepts of convex separability, conlitron and multiconlitron, etc. Under the framework, cross-distance minimization algorithm (CDMA) is applied to solving linearly separable problems, support conlitron algorithm (SCA) to solving convexly separable problems, and support multiconlitron algorithm (SMA) to solving commonly separable problems. In theory, support conlitrons and support multiconlitrons can be thought of as a nonkernel extension of SVMs. They can be dynamically constructed in training without a prespecified set of integers grouping linear functions. And they often perform better than linear SVMs, but below Gaussian kernel SVMs. The related problems to improving their generalization performances are forming the new direction of piecewise linear learning.

In this paper, our motivation is to propose a growing construction technique for improving the performance of SCA and SMA. This work can effectively simplify the structure of a PLC by reducing the number of linear functions in a conlitron/multiconlitron, while largely keeping and even greatly improving the level of classification performances. Hence, it is significant in terms of integrating a PLC into small reconnaissance robots, intelligent cameras, real-time systems, portable devices or even in financial systems (e.g., recognizing bankrupt and nonbankrupt enterprises).

We organize the rest of the paper as follows. In Section 2, we give a review of related work. In Section 3, we describe a more efficient CDMA. Then, we present two basic growing operations: SQUEEZE and INFLATE, to develop a growing support conlitron algorithm (GSCA) and a growing support multiconlitron algorithm (GSMA) in Sections 4 and 5, respectively. Furthermore, in Section 6 we compare their performances with SCA and SMA as well as with linear SVM and RBF SVM by experimenting on UCI benchmark data sets and artificial data sets. Finally, we summarize the main contributions and discuss future research in Section 7.

@&#RELATED WORK@&#

By a combination of hyperplanes, many methods have been proposed for constructing a PLC. As a special form of the PLC, Nilsson’s committee machine might be a very early method [20], but it uses a complex discrimination step of large computation cost. Meisel suggested to put hyperplanes at the minimum of probability density functions [21], but requiring an generally difficult estimation of the density functions. Moreover, some methods impose severe restrictions on the shape of class regions and seem to be impractical [8,22]. Additionally, with a reference of Mangasarian’s work [8], Herman and Yeung [9] proposed a linear programming method to construct a PLC based on linear abnormality functions. However, this method needs to carry out the linear programming optimization many times, involving a lengthy computation not straightforward for multiple-class problems.

In 1980, Sklansky and Michelotti [10] described a local training method to design a PLC. This method first uses Forgy’s algorithm to form prototypes, then finds all close-opposed pairs of prototypes to produce a set of initial hyperplanes for local training with the data in the prototype regions. Based on the local training method, Park and Sklansky [11] further developed a Tomek-link-cutting algorithm to design a multi-class PLC, which sometimes suffers from underfitting due to an insufficient number of hyperplanes. To resolve this problem, Tenmoto et al. [12] used the minimum description length criterion to choose an appropriate number of linear hyperplanes under a threshold of the local training error rate. With a relative idea of local training, in 2010 Gai and Zhang [23] developed a two-step method to construct a new discriminative piecewise linear model for classification. The first step is to sample some boundary points between positive and negative data as well as corresponding directions from negative data to positive data. From the sampling result, a nonparametric decision surfaces is obtained for preserving enough information to correctly classify all training data. The second step is to simplify this surface by a nonparametric approach for linear surface segmentation using Dirichlet process mixtures.

Decision tree is another strategy to construct a PLC. In 1996, Cai et al. [13] proposed a binary tree-genetic algorithm to design and optimize a PLC in the sense of maximum impurity reduction. However, this algorithm requires a long time in optimization especially when using more discriminatory features and more data samples to obtain a better result. For simplifying the construction of a decision-tree PLC, in 2006 Kostin [14] proposed and implemented a simple and fast multi-class PLC with acceptable classification accuracies, based on tree division of subregion centroids. For a pair of classes, the PLC is collection of hyperplanes created as perpendicular bisectors of line segments linking centroids of the classes or parts of classes. For a multi-class problem, a binary partition tree is initially created for hierarchically dividing given pattern classes into groups, with each nonleaf node corresponding to some group, then a two-class PLC classifier is constructed for each nonleaf node of the partition tree.

A PLC can also be constructed by an approach of max–min separability [15], which is regarded as a generalization of polyhedral separability [24]. In this approach, a nonconvex and nonsmooth error function is minimized by the discrete gradient to construct a piecewise linear function with the form of a max–min of linear functions, which can be essentially considered a “multiconlitron” [19]. As a general piecewise linear classifier separating any two commonly separable data sets, a multiconlitron is a union of multiple conlitrons that comprise a set of hyperplanes or linear functions surrounding a convex region for separating two convexly separable data sets. It can be constructed by SMA, which is a combination of CDMA and SCA. However, SCA and SMA often produce a relative large number of linear functions. For reducing this number while largely keeping and even improving the performance of SCA and SMA, in the following sections we will propose a growing construction technique composed of two basic operations: SQUEEZE and INFLATE, resulting in two new algorithms, i.e., GSCA and GSMA.

Based on the relationship between convex hulls and SVMs, we designed a CDMA [19] to iteratively compute the nearest points of two convex hulls for constructing a hard-margin SVM. Here, we will propose a more efficient CDMA (see Algorithm 1) as a basis of GSCA and GSMA.

For any two finite sets 
                        
                           X
                           ,
                           Y
                           ⊂
                           
                              
                                 R
                              
                              
                                 n
                              
                           
                        
                     , we define the distance between them as
                        
                           (1)
                           
                              d
                              (
                              X
                              ,
                              Y
                              )
                              =
                              
                                 min
                              
                              {
                              ‖
                              x
                              -
                              y
                              ‖
                              ,
                              x
                              ∈
                              X
                              ,
                              y
                              ∈
                              Y
                              }
                              ,
                           
                        
                     where 
                        
                           ‖
                           ·
                           ‖
                        
                      stands for the 
                        
                           
                              
                                 L
                              
                              
                                 2
                              
                           
                        
                      norm.

Let CH(S) denote the convex hull of the set S. If X and Y are linearly separable, their hard-margin SVM can be equivalently converted to the problem of computing the nearest point pair between CH(X) and CH(Y) [25],
                        
                           (2)
                           
                              
                                 min
                              
                              ‖
                              x
                              -
                              y
                              ‖
                              
                              s
                              .
                              t
                              .
                              
                              x
                              ∈
                              CH
                              (
                              X
                              )
                              ,
                              y
                              ∈
                              CH
                              (
                              Y
                              )
                              .
                           
                        
                     
                  

If 
                        
                           (
                           
                              
                                 x
                              
                              
                                 ∗
                              
                           
                           ,
                           
                              
                                 y
                              
                              
                                 ∗
                              
                           
                           )
                        
                      is a nearest point pair, 
                        
                           d
                           (
                           CH
                           (
                           X
                           )
                           ,
                           CH
                           (
                           Y
                           )
                           )
                           =
                           ‖
                           
                              
                                 x
                              
                              
                                 ∗
                              
                           
                           -
                           
                              
                                 y
                              
                              
                                 ∗
                              
                           
                           ‖
                        
                     , and it can be proven that their perpendicular bisector is exactly the hard-margin SVM of X and Y 
                     [19], namely,
                        
                           (3)
                           
                              f
                              (
                              x
                              )
                              =
                              
                                 
                                    w
                                 
                                 
                                    ∗
                                 
                              
                              ·
                              x
                              +
                              
                                 
                                    b
                                 
                                 
                                    ∗
                                 
                              
                              ,
                           
                        
                     where 
                        
                           
                              
                                 w
                              
                              
                                 ∗
                              
                           
                           =
                           
                              
                                 x
                              
                              
                                 ∗
                              
                           
                           -
                           
                              
                                 y
                              
                              
                                 ∗
                              
                           
                           ,
                           
                              
                                 b
                              
                              
                                 ∗
                              
                           
                           =
                           
                              
                                 (
                                 
                                    
                                       y
                                    
                                    
                                       ∗
                                    
                                 
                                 -
                                 
                                    
                                       x
                                    
                                    
                                       ∗
                                    
                                 
                                 )
                                 ·
                                 (
                                 
                                    
                                       y
                                    
                                    
                                       ∗
                                    
                                 
                                 +
                                 
                                    
                                       x
                                    
                                    
                                       ∗
                                    
                                 
                                 )
                              
                              
                                 2
                              
                           
                           =
                           
                              
                                 ‖
                                 
                                    
                                       y
                                    
                                    
                                       ∗
                                    
                                 
                                 
                                    
                                       ‖
                                    
                                    
                                       2
                                    
                                 
                                 -
                                 ‖
                                 
                                    
                                       x
                                    
                                    
                                       ∗
                                    
                                 
                                 
                                    
                                       ‖
                                    
                                    
                                       2
                                    
                                 
                              
                              
                                 2
                              
                           
                        
                     . The margin of 
                        
                           f
                           (
                           x
                           )
                        
                      is defined as:
                        
                           (4)
                           
                              margin
                              (
                              f
                              )
                              =
                              ‖
                              
                                 
                                    w
                                 
                                 
                                    ∗
                                 
                              
                              ‖
                              =
                              ‖
                              
                                 
                                    x
                                 
                                 
                                    ∗
                                 
                              
                              -
                              
                                 
                                    y
                                 
                                 
                                    ∗
                                 
                              
                              ‖
                              .
                           
                        
                     
                     
                        Algorithm 1
                        Cross-distance minimization algorithm (CDMA)
                              
                                 
                                    
                                    
                                       
                                          
                                             Input: Two finite nonintersecting sets 
                                                
                                                   X
                                                   ,
                                                   Y
                                                   ⊆
                                                   
                                                      
                                                         R
                                                      
                                                      
                                                         n
                                                      
                                                   
                                                
                                             ,
                                       
                                       
                                          
                                             
                                             precision parameter 
                                                
                                                   ε
                                                
                                             .
                                       
                                       
                                          
                                             1: 
                                                
                                                   (
                                                   
                                                      
                                                         x
                                                      
                                                      
                                                         ∗
                                                      
                                                   
                                                   ,
                                                   
                                                      
                                                         y
                                                      
                                                      
                                                         ∗
                                                      
                                                   
                                                   )
                                                   =
                                                   PAIR
                                                   (
                                                   X
                                                   ,
                                                   Y
                                                   ,
                                                   ε
                                                   )
                                                
                                             ;
                                       
                                       
                                          
                                             2: 
                                                
                                                   
                                                      
                                                         w
                                                      
                                                      
                                                         ∗
                                                      
                                                   
                                                   =
                                                   
                                                      
                                                         x
                                                      
                                                      
                                                         ∗
                                                      
                                                   
                                                   -
                                                   
                                                      
                                                         y
                                                      
                                                      
                                                         ∗
                                                      
                                                   
                                                   ,
                                                   
                                                   
                                                      
                                                         b
                                                      
                                                      
                                                         ∗
                                                      
                                                   
                                                   =
                                                   
                                                      
                                                         1
                                                      
                                                      
                                                         2
                                                      
                                                   
                                                   (
                                                   
                                                      
                                                         y
                                                      
                                                      
                                                         ∗
                                                      
                                                   
                                                   -
                                                   
                                                      
                                                         x
                                                      
                                                      
                                                         ∗
                                                      
                                                   
                                                   )
                                                   ·
                                                   (
                                                   
                                                      
                                                         x
                                                      
                                                      
                                                         ∗
                                                      
                                                   
                                                   +
                                                   
                                                      
                                                         y
                                                      
                                                      
                                                         ∗
                                                      
                                                   
                                                   )
                                                
                                             ;
                                       
                                       
                                          
                                             Output: A linear discriminant function 
                                                
                                                   f
                                                   (
                                                   x
                                                   )
                                                   =
                                                   
                                                      
                                                         w
                                                      
                                                      
                                                         ∗
                                                      
                                                   
                                                   ·
                                                   x
                                                   +
                                                   
                                                      
                                                         b
                                                      
                                                      
                                                         ∗
                                                      
                                                   
                                                
                                             .
                                       
                                    
                                 
                              
                           
                        

The procedure of CDMA includes two basic steps: (1) use PAIR (see Operation 1) to compute a nearest point pair 
                        
                           (
                           
                              
                                 x
                              
                              
                                 ∗
                              
                           
                           ,
                           
                              
                                 y
                              
                              
                                 ∗
                              
                           
                           )
                        
                      between CH(X) and CH(Y); (2) use 
                        
                           (
                           
                              
                                 x
                              
                              
                                 ∗
                              
                           
                           ,
                           
                              
                                 y
                              
                              
                                 ∗
                              
                           
                           )
                        
                      to construct a support vector machine, 
                        
                           f
                           (
                           x
                           )
                        
                     . The PAIR operation maintains NEARER (see Operation 2) as its key building block.
                        Operation 1
                        PAIR
                              
                                 (
                                 X
                                 ,
                                 Y
                                 ,
                                 ε
                                 )
                              
                           
                           
                              
                                 
                                    
                                    
                                       
                                          1: Pick 
                                                
                                                   
                                                      
                                                         x
                                                      
                                                      
                                                         ∗
                                                      
                                                   
                                                   ∈
                                                   X
                                                   ,
                                                   
                                                      
                                                         y
                                                      
                                                      
                                                         ∗
                                                      
                                                   
                                                   ∈
                                                   Y
                                                
                                             ;
                                       
                                       
                                          2: Repeat
                                          
                                       
                                       
                                          
                                             
                                             
                                                
                                                   
                                                      
                                                         x
                                                      
                                                      
                                                         1
                                                      
                                                   
                                                   ←
                                                   
                                                      
                                                         x
                                                      
                                                      
                                                         ∗
                                                      
                                                   
                                                   ,
                                                   
                                                      
                                                         y
                                                      
                                                      
                                                         1
                                                      
                                                   
                                                   ←
                                                   
                                                      
                                                         y
                                                      
                                                      
                                                         ∗
                                                      
                                                   
                                                
                                             ;
                                       
                                       
                                          
                                             
                                             
                                                
                                                   
                                                      
                                                         x
                                                      
                                                      
                                                         ∗
                                                      
                                                   
                                                   ←
                                                   NEARER
                                                   (
                                                   
                                                      
                                                         x
                                                      
                                                      
                                                         1
                                                      
                                                   
                                                   ,
                                                   
                                                      
                                                         y
                                                      
                                                      
                                                         1
                                                      
                                                   
                                                   ,
                                                   X
                                                   )
                                                
                                             ;
                                       
                                       
                                          
                                             
                                             
                                                
                                                   
                                                      
                                                         y
                                                      
                                                      
                                                         ∗
                                                      
                                                   
                                                   ←
                                                   NEARER
                                                   (
                                                   
                                                      
                                                         y
                                                      
                                                      
                                                         1
                                                      
                                                   
                                                   ,
                                                   
                                                      
                                                         x
                                                      
                                                      
                                                         ∗
                                                      
                                                   
                                                   ,
                                                   Y
                                                   )
                                                
                                             ;
                                       
                                       
                                          
                                             
                                             until 
                                             
                                                
                                                   ‖
                                                   
                                                      
                                                         x
                                                      
                                                      
                                                         1
                                                      
                                                   
                                                   -
                                                   
                                                      
                                                         y
                                                      
                                                      
                                                         1
                                                      
                                                   
                                                   ‖
                                                   -
                                                   ‖
                                                   
                                                      
                                                         x
                                                      
                                                      
                                                         ∗
                                                      
                                                   
                                                   -
                                                   
                                                      
                                                         y
                                                      
                                                      
                                                         ∗
                                                      
                                                   
                                                   ‖
                                                   <
                                                   ε
                                                
                                             
                                          
                                       
                                       
                                          3: Return A nearest point pair 
                                                
                                                   (
                                                   
                                                      
                                                         x
                                                      
                                                      
                                                         ∗
                                                      
                                                   
                                                   ,
                                                   
                                                      
                                                         y
                                                      
                                                      
                                                         ∗
                                                      
                                                   
                                                   )
                                                
                                             .
                                       
                                    
                                 
                              
                           
                        

NEARER
                              
                                 (
                                 
                                    
                                       x
                                    
                                    
                                       ∗
                                    
                                 
                                 ,
                                 
                                    
                                       y
                                    
                                    
                                       ∗
                                    
                                 
                                 ,
                                 X
                                 )
                              
                           
                           
                              
                                 
                                    
                                    
                                       
                                          1: 
                                                
                                                   
                                                      
                                                         x
                                                      
                                                      
                                                         1
                                                      
                                                   
                                                   ←
                                                   
                                                      
                                                         x
                                                      
                                                      
                                                         ∗
                                                      
                                                   
                                                
                                             ;
                                       
                                       
                                          2: 
                                                
                                                   Z
                                                   =
                                                   
                                                      
                                                         
                                                            z
                                                            
                                                               
                                                                  
                                                                     z
                                                                     =
                                                                     
                                                                        
                                                                           
                                                                              
                                                                                 
                                                                                    
                                                                                       
                                                                                          
                                                                                             x
                                                                                          
                                                                                          
                                                                                             2
                                                                                          
                                                                                       
                                                                                       ,
                                                                                       
                                                                                       if
                                                                                       
                                                                                       λ
                                                                                       ⩾
                                                                                       1
                                                                                    
                                                                                 
                                                                                 
                                                                                    
                                                                                       
                                                                                          
                                                                                             x
                                                                                          
                                                                                          
                                                                                             1
                                                                                          
                                                                                       
                                                                                       +
                                                                                       λ
                                                                                       ·
                                                                                       (
                                                                                       
                                                                                          
                                                                                             x
                                                                                          
                                                                                          
                                                                                             2
                                                                                          
                                                                                       
                                                                                       -
                                                                                       
                                                                                          
                                                                                             x
                                                                                          
                                                                                          
                                                                                             1
                                                                                          
                                                                                       
                                                                                       )
                                                                                       ,
                                                                                       
                                                                                       if
                                                                                       
                                                                                       0
                                                                                       <
                                                                                       λ
                                                                                       <
                                                                                       1
                                                                                    
                                                                                 
                                                                              
                                                                           
                                                                        
                                                                     
                                                                  
                                                               
                                                            
                                                         
                                                      
                                                   
                                                
                                             
                                          
                                       
                                       
                                          
                                             
                                             
                                             
                                                
                                                   
                                                      
                                                         
                                                            ,
                                                            λ
                                                            =
                                                            
                                                               
                                                                  (
                                                                  
                                                                     
                                                                        x
                                                                     
                                                                     
                                                                        2
                                                                     
                                                                  
                                                                  -
                                                                  
                                                                     
                                                                        x
                                                                     
                                                                     
                                                                        1
                                                                     
                                                                  
                                                                  )
                                                                  ·
                                                                  (
                                                                  
                                                                     
                                                                        y
                                                                     
                                                                     
                                                                        ∗
                                                                     
                                                                  
                                                                  -
                                                                  
                                                                     
                                                                        x
                                                                     
                                                                     
                                                                        1
                                                                     
                                                                  
                                                                  )
                                                               
                                                               
                                                                  (
                                                                  
                                                                     
                                                                        x
                                                                     
                                                                     
                                                                        2
                                                                     
                                                                  
                                                                  -
                                                                  
                                                                     
                                                                        x
                                                                     
                                                                     
                                                                        1
                                                                     
                                                                  
                                                                  )
                                                                  ·
                                                                  (
                                                                  
                                                                     
                                                                        x
                                                                     
                                                                     
                                                                        2
                                                                     
                                                                  
                                                                  -
                                                                  
                                                                     
                                                                        x
                                                                     
                                                                     
                                                                        1
                                                                     
                                                                  
                                                                  )
                                                               
                                                            
                                                            >
                                                            0
                                                            ,
                                                            
                                                               
                                                                  x
                                                               
                                                               
                                                                  2
                                                               
                                                            
                                                            
                                                            ≠
                                                            
                                                            
                                                               
                                                                  x
                                                               
                                                               
                                                                  1
                                                               
                                                            
                                                            ,
                                                            
                                                            
                                                               
                                                                  x
                                                               
                                                               
                                                                  2
                                                               
                                                            
                                                            ∈
                                                            X
                                                         
                                                      
                                                   
                                                
                                             ;
                                       
                                       
                                          3: 
                                                
                                                   
                                                      
                                                         z
                                                      
                                                      
                                                         ∗
                                                      
                                                   
                                                   ←
                                                   arg
                                                   min
                                                   {
                                                   ‖
                                                   z
                                                   -
                                                   
                                                      
                                                         y
                                                      
                                                      
                                                         ∗
                                                      
                                                   
                                                   ‖
                                                   ,
                                                   
                                                   z
                                                   ∈
                                                   Z
                                                   }
                                                
                                             ;
                                       
                                       
                                          4: If 
                                             
                                                
                                                   ‖
                                                   
                                                      
                                                         z
                                                      
                                                      
                                                         ∗
                                                      
                                                   
                                                   -
                                                   
                                                      
                                                         y
                                                      
                                                      
                                                         ∗
                                                      
                                                   
                                                   ‖
                                                   <
                                                   ‖
                                                   
                                                      
                                                         x
                                                      
                                                      
                                                         ∗
                                                      
                                                   
                                                   -
                                                   
                                                      
                                                         y
                                                      
                                                      
                                                         ∗
                                                      
                                                   
                                                   ‖
                                                
                                             , then Return 
                                             
                                                
                                                   
                                                      
                                                         z
                                                      
                                                      
                                                         ∗
                                                      
                                                   
                                                
                                             ;
                                       
                                       
                                          
                                             
                                             Else Return 
                                             
                                                
                                                   
                                                      
                                                         x
                                                      
                                                      
                                                         ∗
                                                      
                                                   
                                                
                                             ;
                                       
                                    
                                 
                              
                           
                        

NEARER is an operation to compute a nearer point for a given pair 
                        
                           (
                           
                              
                                 x
                              
                              
                                 ∗
                              
                           
                           ,
                           
                              
                                 y
                              
                              
                                 ∗
                              
                           
                           )
                        
                     . That is to say, if 
                        
                           
                              
                                 x
                              
                              
                                 1
                              
                           
                           =
                           
                              
                                 x
                              
                              
                                 ∗
                              
                           
                        
                      is not the nearest point from 
                        
                           
                              
                                 y
                              
                              
                                 ∗
                              
                           
                        
                      to CH(X) (see Fig. 1
                     ), we can use NEARER
                        
                           (
                           
                              
                                 x
                              
                              
                                 ∗
                              
                           
                           ,
                           
                              
                                 y
                              
                              
                                 ∗
                              
                           
                           ,
                           X
                           )
                        
                      to find 
                        
                           
                              
                                 x
                              
                              
                                 2
                              
                           
                           
                           ≠
                           
                           
                              
                                 x
                              
                              
                                 1
                              
                           
                        
                      in X such that 
                        
                           
                              
                                 z
                              
                              
                                 ∗
                              
                           
                        
                      satisfies (5)–(7):
                        
                           (5)
                           
                              λ
                              =
                              
                                 
                                    (
                                    
                                       
                                          x
                                       
                                       
                                          2
                                       
                                    
                                    -
                                    
                                       
                                          x
                                       
                                       
                                          1
                                       
                                    
                                    )
                                    ·
                                    (
                                    
                                       
                                          y
                                       
                                       
                                          ∗
                                       
                                    
                                    -
                                    
                                       
                                          x
                                       
                                       
                                          1
                                       
                                    
                                    )
                                 
                                 
                                    (
                                    
                                       
                                          x
                                       
                                       
                                          2
                                       
                                    
                                    -
                                    
                                       
                                          x
                                       
                                       
                                          1
                                       
                                    
                                    )
                                    ·
                                    (
                                    
                                       
                                          x
                                       
                                       
                                          2
                                       
                                    
                                    -
                                    
                                       
                                          x
                                       
                                       
                                          1
                                       
                                    
                                    )
                                 
                              
                              >
                              0
                              ,
                           
                        
                     
                     
                        
                           (6)
                           
                              
                                 
                                    z
                                 
                                 
                                    ∗
                                 
                              
                              =
                              
                                 
                                    
                                       
                                          
                                             
                                                
                                                   
                                                      x
                                                   
                                                   
                                                      2
                                                   
                                                
                                                ,
                                                
                                                if
                                                
                                                λ
                                                ⩾
                                                1
                                             
                                          
                                          
                                             
                                                
                                                   
                                                      x
                                                   
                                                   
                                                      1
                                                   
                                                
                                                +
                                                λ
                                                ·
                                                (
                                                
                                                   
                                                      x
                                                   
                                                   
                                                      2
                                                   
                                                
                                                -
                                                
                                                   
                                                      x
                                                   
                                                   
                                                      1
                                                   
                                                
                                                )
                                                ,
                                                
                                                if
                                                
                                                0
                                                <
                                                λ
                                                <
                                                1
                                             
                                          
                                       
                                    
                                 
                              
                              ,
                           
                        
                     
                     
                        
                           (7)
                           
                              ‖
                              
                                 
                                    z
                                 
                                 
                                    ∗
                                 
                              
                              -
                              
                                 
                                    y
                                 
                                 
                                    ∗
                                 
                              
                              ‖
                              <
                              ‖
                              
                                 
                                    x
                                 
                                 
                                    ∗
                                 
                              
                              -
                              
                                 
                                    y
                                 
                                 
                                    ∗
                                 
                              
                              ‖
                              ,
                           
                        
                     where (5) and (6) mean 
                        
                           
                              
                                 z
                              
                              
                                 ∗
                              
                           
                           ∈
                           CH
                           (
                           X
                           )
                        
                     , and (7) means 
                        
                           
                              
                                 z
                              
                              
                                 ∗
                              
                           
                        
                      and 
                        
                           
                              
                                 y
                              
                              
                                 ∗
                              
                           
                        
                      are nearer than 
                        
                           
                              
                                 x
                              
                              
                                 ∗
                              
                           
                        
                      and 
                        
                           
                              
                                 y
                              
                              
                                 ∗
                              
                           
                        
                     .

Accordingly, if 
                        
                           
                              
                                 y
                              
                              
                                 1
                              
                           
                        
                      is not the nearest point from 
                        
                           
                              
                                 x
                              
                              
                                 ∗
                              
                           
                        
                      to CH(Y), we can use NEARER
                        
                           (
                           
                              
                                 y
                              
                              
                                 ∗
                              
                           
                           ,
                           
                              
                                 x
                              
                              
                                 ∗
                              
                           
                           ,
                           Y
                           )
                        
                      to find 
                        
                           
                              
                                 y
                              
                              
                                 2
                              
                           
                           
                           ≠
                           
                           
                              
                                 y
                              
                              
                                 1
                              
                           
                        
                      in Y such that 
                        
                           
                              
                                 z
                              
                              
                                 ∗
                              
                           
                           ∈
                           CH
                           (
                           Y
                           )
                        
                      satisfies 
                        
                           ‖
                           
                              
                                 x
                              
                              
                                 ∗
                              
                           
                           -
                           
                              
                                 z
                              
                              
                                 ∗
                              
                           
                           ‖
                           <
                           ‖
                           
                              
                                 x
                              
                              
                                 ∗
                              
                           
                           -
                           
                              
                                 y
                              
                              
                                 ∗
                              
                           
                           ‖
                        
                     .

Let 
                        
                           |
                           S
                           |
                        
                      denote the cardinality of the set S. CDMA has a space complexity of 
                        
                           O
                           (
                           |
                           X
                           |
                           +
                           |
                           Y
                           |
                           )
                        
                      and a time complexity of 
                        
                           O
                           (
                           D
                           ·
                           (
                           |
                           X
                           |
                           +
                           |
                           Y
                           |
                           )
                           /
                           ε
                           )
                        
                     , where 
                        
                           D
                           =
                           
                              
                                 max
                              
                              
                                 x
                                 ∈
                                 X
                                 ,
                                 y
                                 ∈
                                 Y
                              
                           
                           {
                           ‖
                           x
                           -
                           y
                           ‖
                           }
                        
                     , and 
                        
                           ε
                        
                      is called precision parameter, for controlling the convergence condition. In addition, no matter X and Y are linearly separable or not, CDMA can always converge theoretically. But in the linearly nonseparable case, CDMA may output 
                        
                           f
                           (
                           x
                           )
                           =
                           0
                        
                      because the final nearest point pair 
                        
                           (
                           
                              
                                 x
                              
                              
                                 ∗
                              
                           
                           ,
                           
                              
                                 y
                              
                              
                                 ∗
                              
                           
                           )
                        
                      are probably superposed and thus result in a zero normal vector, i.e., 
                        
                           
                              
                                 w
                              
                              
                                 ∗
                              
                           
                           =
                           
                              
                                 x
                              
                              
                                 ∗
                              
                           
                           -
                           
                              
                                 y
                              
                              
                                 ∗
                              
                           
                           =
                           0
                        
                     .

Conlitron means a convex linear perceptron (CLP), which is a set of linear functions. We call X is “convexly separable” to Y, if and only if there exists a conlitron from X to Y, namely,
                        
                           (8)
                           
                              CLP
                              =
                              {
                              
                                 
                                    f
                                 
                                 
                                    l
                                 
                              
                              (
                              x
                              )
                              =
                              
                                 
                                    w
                                 
                                 
                                    l
                                 
                              
                              ·
                              x
                              +
                              
                                 
                                    b
                                 
                                 
                                    l
                                 
                              
                              ,
                              1
                              ⩽
                              l
                              ⩽
                              L
                              }
                              ,
                           
                        
                     satisfying (9) and (10):
                        
                           (9)
                           
                              ∀
                              x
                              ∈
                              X
                              ,
                              ∀
                              1
                              ⩽
                              l
                              ⩽
                              L
                              ,
                              
                              
                                 
                                    f
                                 
                                 
                                    l
                                 
                              
                              (
                              x
                              )
                              =
                              
                                 
                                    w
                                 
                                 
                                    l
                                 
                              
                              ·
                              x
                              +
                              
                                 
                                    b
                                 
                                 
                                    l
                                 
                              
                              >
                              0
                              ,
                           
                        
                     
                     
                        
                           (10)
                           
                              ∀
                              y
                              ∈
                              Y
                              ,
                              ∃
                              1
                              ⩽
                              l
                              ⩽
                              L
                              ,
                              
                              
                                 
                                    f
                                 
                                 
                                    l
                                 
                              
                              (
                              y
                              )
                              =
                              
                                 
                                    w
                                 
                                 
                                    l
                                 
                              
                              ·
                              y
                              +
                              
                                 
                                    b
                                 
                                 
                                    l
                                 
                              
                              <
                              0
                              .
                           
                        
                     
                  

The decision function of a CLP from X to Y is defined as
                        
                           (11)
                           
                              CLP
                              (
                              x
                              )
                              =
                              
                                 
                                    
                                       
                                          
                                             
                                                +
                                                1
                                                ,
                                                
                                                ∀
                                                1
                                                ⩽
                                                l
                                                ⩽
                                                L
                                                ,
                                                
                                                
                                                   
                                                      f
                                                   
                                                   
                                                      l
                                                   
                                                
                                                (
                                                x
                                                )
                                                >
                                                0
                                             
                                          
                                          
                                             
                                                -
                                                1
                                                ,
                                                
                                                ∃
                                                1
                                                ⩽
                                                l
                                                ⩽
                                                L
                                                ,
                                                
                                                
                                                   
                                                      f
                                                   
                                                   
                                                      l
                                                   
                                                
                                                (
                                                x
                                                )
                                                <
                                                0
                                             
                                          
                                       
                                    
                                 
                              
                              ,
                           
                        
                     with the margin defined as:
                        
                           (12)
                           
                              margin
                              (
                              CLP
                              )
                              =
                              
                                 min
                              
                              {
                              margin
                              (
                              
                                 
                                    f
                                 
                                 
                                    l
                                 
                              
                              )
                              |
                              
                                 
                                    f
                                 
                                 
                                    l
                                 
                              
                              ∈
                              CLP
                              }
                              .
                           
                        
                     
                  

We call X and Y “convexly separable” if X is convexly separable to Y or Y is convexly separable to X. According to [19], X and Y are convexly separable iff 
                        
                           X
                           ∩
                           CH
                           (
                           Y
                           )
                           =
                           ∅
                        
                      or 
                        
                           Y
                           ∩
                           CH
                           (
                           X
                           )
                           =
                           ∅
                        
                     . If X and Y are linearly separable, they must be convexly separable; However, if X and Y are convexly separable, they may not be linearly separable.

If X is convexly separable to Y, support conlitron algorithm (SCA, see Algorithm 2) can be applied to compute a conlitron CLP from X to Y. As Fig. 2
                      illustrates, SCA starts with selecting a nearest point 
                        
                           
                              
                                 y
                              
                              
                                 p
                              
                           
                        
                      from Y to CH(X) and constructing a SVM 
                        
                           
                              
                                 f
                              
                              
                                 1
                              
                           
                           (
                           x
                           )
                           =
                           CDMA
                           (
                           X
                           ,
                           {
                           
                              
                                 y
                              
                              
                                 p
                              
                           
                           }
                           ,
                           ε
                           )
                        
                      as the first linear function of the CLP. Then, it cuts out those points satisfying 
                        
                           
                              
                                 f
                              
                              
                                 1
                              
                           
                           (
                           y
                           )
                           ⩽
                           
                              
                                 f
                              
                              
                                 1
                              
                           
                           (
                           
                              
                                 y
                              
                              
                                 p
                              
                           
                           )
                        
                     , chooses another nearest point 
                        
                           
                              
                                 y
                              
                              
                                 q
                              
                           
                        
                      from the left in Y to CH(X), produces a new SVM 
                        
                           
                              
                                 f
                              
                              
                                 2
                              
                           
                           (
                           x
                           )
                           =
                           CDMA
                           (
                           X
                           ,
                           {
                           
                              
                                 y
                              
                              
                                 q
                              
                           
                           }
                           ,
                           ε
                           )
                        
                      as the second linear function of the CLP, and repeats similarly until no point left in Y. Note that the margins of 
                        
                           
                              
                                 f
                              
                              
                                 1
                              
                           
                           (
                           x
                           )
                        
                      and 
                        
                           
                              
                                 f
                              
                              
                                 2
                              
                           
                           (
                           x
                           )
                        
                      are 
                        
                           
                              
                                 -
                                 2
                                 
                                    
                                       f
                                    
                                    
                                       1
                                    
                                 
                                 (
                                 
                                    
                                       y
                                    
                                    
                                       p
                                    
                                 
                                 )
                              
                           
                        
                      and 
                        
                           
                              
                                 -
                                 2
                                 
                                    
                                       f
                                    
                                    
                                       2
                                    
                                 
                                 (
                                 
                                    
                                       y
                                    
                                    
                                       q
                                    
                                 
                                 )
                              
                           
                        
                     , respectively. And the margin of the final CLP is just the margin of 
                        
                           
                              
                                 f
                              
                              
                                 1
                              
                           
                           (
                           x
                           )
                        
                     , i.e., 
                        
                           
                              
                                 -
                                 2
                                 
                                    
                                       f
                                    
                                    
                                       1
                                    
                                 
                                 (
                                 
                                    
                                       y
                                    
                                    
                                       p
                                    
                                 
                                 )
                              
                           
                        
                     . Additionally, the complexities of SCA are 
                        
                           O
                           (
                           |
                           X
                           |
                           +
                           |
                           Y
                           |
                           )
                        
                      in space and 
                        
                           O
                           (
                           D
                           ·
                           (
                           |
                           X
                           |
                           |
                           Y
                           |
                           )
                           /
                           ε
                           )
                        
                      in time.
                        Algorithm 2
                        Support conlitron algorithm (SCA).
                              
                                 
                                    
                                    
                                       
                                          
                                             Input: Two finite nonintersecting sets 
                                                
                                                   X
                                                   ,
                                                   Y
                                                   ⊆
                                                   
                                                      
                                                         R
                                                      
                                                      
                                                         n
                                                      
                                                   
                                                
                                             ,
                                       
                                       
                                          
                                             
                                             precision parameter 
                                                
                                                   ε
                                                
                                             .
                                       
                                       
                                          
                                             1: 
                                                
                                                   l
                                                   ←
                                                   1
                                                
                                             ;
                                       
                                       
                                          
                                             2: Repeat
                                          
                                       
                                       
                                          
                                             
                                             
                                             
                                                
                                                   p
                                                   =
                                                   
                                                      
                                                         
                                                            arg
                                                            min
                                                         
                                                         
                                                            j
                                                         
                                                      
                                                   
                                                   {
                                                   d
                                                   (
                                                   CH
                                                   (
                                                   X
                                                   )
                                                   ,
                                                   {
                                                   
                                                      
                                                         y
                                                      
                                                      
                                                         j
                                                      
                                                   
                                                   }
                                                   )
                                                   ,
                                                   
                                                      
                                                         y
                                                      
                                                      
                                                         j
                                                      
                                                   
                                                   ∈
                                                   Y
                                                   }
                                                
                                             ;
                                       
                                       
                                          
                                             
                                             
                                             
                                                
                                                   
                                                      
                                                         f
                                                      
                                                      
                                                         l
                                                      
                                                   
                                                   (
                                                   x
                                                   )
                                                   =
                                                   CDMA
                                                   (
                                                   X
                                                   ,
                                                   {
                                                   
                                                      
                                                         y
                                                      
                                                      
                                                         p
                                                      
                                                   
                                                   }
                                                   ,
                                                   ε
                                                   )
                                                
                                             ;
                                       
                                       
                                          
                                             
                                             
                                             
                                                
                                                   Y
                                                   =
                                                   {
                                                   y
                                                   |
                                                   
                                                      
                                                         f
                                                      
                                                      
                                                         l
                                                      
                                                   
                                                   (
                                                   y
                                                   )
                                                   >
                                                   
                                                      
                                                         f
                                                      
                                                      
                                                         l
                                                      
                                                   
                                                   (
                                                   
                                                      
                                                         y
                                                      
                                                      
                                                         p
                                                      
                                                   
                                                   )
                                                   ,
                                                   y
                                                   ∈
                                                   Y
                                                   }
                                                
                                             ;
                                       
                                       
                                          
                                             
                                             
                                             
                                                
                                                   l
                                                   ←
                                                   l
                                                   +
                                                   1
                                                
                                             ;
                                       
                                       
                                          
                                             
                                             until 
                                             
                                                
                                                   Y
                                                   =
                                                   ∅
                                                
                                             
                                          
                                       
                                       
                                          
                                             Output: A conlitron 
                                                
                                                   CLP
                                                   =
                                                   {
                                                   
                                                      
                                                         f
                                                      
                                                      
                                                         i
                                                      
                                                   
                                                   (
                                                   x
                                                   )
                                                   ,
                                                   1
                                                   ⩽
                                                   i
                                                   <
                                                   l
                                                   }
                                                
                                             .
                                       
                                    
                                 
                              
                           
                        

Obviously, the conlitron by SCA has each of its linear functions trained by CDMA using the total points in X and an individual point in Y. However, from a statistical point of view, individual training points in Y, especially those near class boundaries, are not always strong evidence for true class boundaries, since they occur randomly by nature and are often influenced by stochastic noise. As a consequence, a number of linear functions in the conlitron are apt to overfit the distribution of the total points in Y, leading to loss of generalization ability. Thus, one possible solution is to exploit an appropriate number of reasonable training points simultaneously instead of individual points in Y.

For selection of the reasonable training points from Y, we start with a CLP for partitioning Y into a union of overlapped subsets, namely,
                        
                           
                              Y
                              =
                              ∪
                              
                                 
                                    Y
                                 
                                 
                                    l
                                 
                              
                              ,
                              Ω
                              =
                              {
                              
                                 
                                    Y
                                 
                                 
                                    l
                                 
                              
                              ,
                              1
                              ⩽
                              l
                              ⩽
                              |
                              CLP
                              |
                              }
                              ,
                           
                        
                     where 
                        
                           
                              
                                 Y
                              
                              
                                 l
                              
                           
                           =
                           {
                           y
                           |
                           
                              
                                 f
                              
                              
                                 l
                              
                           
                           (
                           y
                           )
                           <
                           0
                           ,
                           y
                           ∈
                           Y
                           }
                           ,
                           
                           
                              
                                 f
                              
                              
                                 l
                              
                           
                           ∈
                           CLP
                        
                     .
                        Operation 3
                        SQUEEZE
                              
                                 (
                                 CLP
                                 ,
                                 X
                                 ,
                                 Y
                                 ,
                                 ε
                                 )
                              
                           
                           
                              
                                 
                                    
                                    
                                       
                                          1: 
                                                
                                                   
                                                      
                                                         Y
                                                      
                                                      
                                                         l
                                                      
                                                   
                                                   =
                                                   {
                                                   y
                                                   |
                                                   
                                                      
                                                         f
                                                      
                                                      
                                                         l
                                                      
                                                   
                                                   (
                                                   y
                                                   )
                                                   <
                                                   0
                                                   ,
                                                   y
                                                   ∈
                                                   Y
                                                   }
                                                   ,
                                                   
                                                   
                                                      
                                                         f
                                                      
                                                      
                                                         l
                                                      
                                                   
                                                   ∈
                                                   CLP
                                                
                                             ;
                                       
                                       
                                          2: 
                                                
                                                   l
                                                   ←
                                                   1
                                                   ,
                                                   Ω
                                                   ←
                                                   {
                                                   
                                                      
                                                         Y
                                                      
                                                      
                                                         i
                                                      
                                                   
                                                   ,
                                                   1
                                                   ⩽
                                                   i
                                                   ⩽
                                                   |
                                                   CLP
                                                   |
                                                   }
                                                
                                             ;
                                       
                                       
                                          3: Repeat
                                          
                                       
                                       
                                          
                                             
                                             
                                                
                                                   p
                                                   =
                                                   
                                                      
                                                         
                                                            arg
                                                            max
                                                         
                                                         
                                                            i
                                                         
                                                      
                                                   
                                                   {
                                                   |
                                                   
                                                      
                                                         Y
                                                      
                                                      
                                                         i
                                                      
                                                   
                                                   |
                                                   ,
                                                   
                                                      
                                                         Y
                                                      
                                                      
                                                         i
                                                      
                                                   
                                                   ∈
                                                   Ω
                                                   }
                                                
                                             ;
                                       
                                       
                                          
                                             
                                             
                                                
                                                   
                                                      
                                                         g
                                                      
                                                      
                                                         l
                                                      
                                                   
                                                   (
                                                   x
                                                   )
                                                   =
                                                   CDMA
                                                   (
                                                   X
                                                   ,
                                                   
                                                      
                                                         Y
                                                      
                                                      
                                                         p
                                                      
                                                   
                                                   ,
                                                   ε
                                                   )
                                                
                                             ;
                                       
                                       
                                          
                                             
                                             
                                                
                                                   Ω
                                                   =
                                                   {
                                                   
                                                      
                                                         Y
                                                      
                                                      
                                                         i
                                                      
                                                   
                                                   |
                                                   
                                                      
                                                         Y
                                                      
                                                      
                                                         i
                                                      
                                                   
                                                   ∈
                                                   Ω
                                                   -
                                                   {
                                                   
                                                      
                                                         Y
                                                      
                                                      
                                                         p
                                                      
                                                   
                                                   }
                                                   ,
                                                   
                                                   ∃
                                                   y
                                                   ∈
                                                   
                                                      
                                                         Y
                                                      
                                                      
                                                         i
                                                      
                                                   
                                                   ,
                                                   
                                                      
                                                         g
                                                      
                                                      
                                                         l
                                                      
                                                   
                                                   (
                                                   y
                                                   )
                                                   >
                                                   0
                                                   }
                                                
                                             ;
                                       
                                       
                                          
                                             
                                             
                                                
                                                   l
                                                   ←
                                                   l
                                                   +
                                                   1
                                                
                                             ;
                                       
                                       
                                          
                                             
                                             until 
                                             
                                                
                                                   Ω
                                                   =
                                                   ∅
                                                
                                             
                                          
                                       
                                       
                                          4: Return 
                                             
                                                
                                                   CLP
                                                   =
                                                   {
                                                   
                                                      
                                                         g
                                                      
                                                      
                                                         i
                                                      
                                                   
                                                   (
                                                   x
                                                   )
                                                   ,
                                                   1
                                                   ⩽
                                                   i
                                                   ⩽
                                                   l
                                                   }
                                                
                                             .
                                       
                                    
                                 
                              
                           
                        

It is easy to know that 
                        
                           
                              
                                 Y
                              
                              
                                 l
                              
                           
                        
                      is the set of all points in Y that can be correctly classified by 
                        
                           
                              
                                 f
                              
                              
                                 l
                              
                           
                           (
                           x
                           )
                        
                     , and there may exist 
                        
                           i
                           
                           ≠
                           
                           j
                        
                      such that 
                        
                           
                              
                                 Y
                              
                              
                                 i
                              
                           
                        
                      and 
                        
                           
                              
                                 Y
                              
                              
                                 j
                              
                           
                        
                      are overlapped, i.e., 
                        
                           
                              
                                 Y
                              
                              
                                 i
                              
                           
                           ∩
                           
                              
                                 Y
                              
                              
                                 j
                              
                           
                           
                           ≠
                           
                           ∅
                        
                     .

Using 
                        
                           Ω
                           =
                           {
                           
                              
                                 Y
                              
                              
                                 l
                              
                           
                           ,
                           1
                           ⩽
                           l
                           ⩽
                           |
                           CLP
                           |
                           }
                        
                     , we can apply operation SQUEEZE (see Operation 3) to growing the CLP. Firstly, SQUEEZE chooses a biggest subset 
                        
                           
                              
                                 Y
                              
                              
                                 p
                              
                           
                        
                      from 
                        
                           Ω
                        
                     , and uses CDMA to train a SVM between X and 
                        
                           
                              
                                 Y
                              
                              
                                 p
                              
                           
                        
                     , i.e., 
                        
                           
                              
                                 g
                              
                              
                                 1
                              
                           
                           (
                           x
                           )
                           =
                           CDMA
                           (
                           X
                           ,
                           
                              
                                 Y
                              
                              
                                 p
                              
                           
                           ,
                           ε
                           )
                        
                     . Then, it cuts out those subsets in 
                        
                           Ω
                        
                      that can be correctly classified as a whole, chooses another biggest subset 
                        
                           
                              
                                 Y
                              
                              
                                 q
                              
                           
                        
                      from the left in 
                        
                           Ω
                        
                     , produces a new SVM 
                        
                           
                              
                                 g
                              
                              
                                 2
                              
                           
                           (
                           x
                           )
                           =
                           CDMA
                           (
                           X
                           ,
                           
                              
                                 Y
                              
                              
                                 q
                              
                           
                           ,
                           ε
                           )
                        
                     , and repeats similarly until no subset left in 
                        
                           Ω
                        
                     . Apparently, SQUEEZE may contract a CLP by reducing the number of linear functions it contains. For example, the CLP by SCA contains 10 linear functions initially (see Fig. 3
                     a, note that they surrounds the interior convex region, and some of them look almost superposed), but it contains 8 linear functions after growing by one SQUEEZE operation (see Fig. 3b), and only 6 linear functions after growing by two or more SQUEEZE operations (see Fig. 3c). Since SQUEEZE is employed as a process that the exterior of a CLP grows nibbling and tuning the interior, it is thought of as a basic growing operation in this paper.

With T SQUEEZE operations, we show a growing support conlitron algorithm (GSCA, see Algorithm 3). Because the final CLP by GSCA is formed by growing an initial one, the linear functions it contains are in general trained by the total samples in X and many samples in Y, accordingly fitting the distribution of Y better than those by SCA. Hence, GSCA should generally have superior performance to SCA due to less overfitting.

In the case that X is convexly separable to Y and vice versa, we can use GSCA to produce two conlitrons with the same times of SQUEEZE operations, namely, 
                        
                           
                              
                                 CLP
                              
                              
                                 1
                              
                           
                           =
                           GSCA
                           (
                           X
                           ,
                           Y
                           ,
                           ε
                           ,
                           T
                           )
                        
                      and 
                        
                           
                              
                                 CLP
                              
                              
                                 2
                              
                           
                           =
                           GSCA
                           (
                           Y
                           ,
                           X
                           ,
                           ε
                           ,
                           T
                           )
                        
                     , where the one with the larger margin is defined as the final CLP of GSCA.
                        Algorithm 3
                        Growing support conlitron algorithm (GSCA)
                              
                                 
                                    
                                    
                                       
                                          
                                             Input: Two finite nonintersecting sets 
                                                
                                                   X
                                                   ,
                                                   Y
                                                   ⊆
                                                   
                                                      
                                                         R
                                                      
                                                      
                                                         n
                                                      
                                                   
                                                
                                             ,
                                       
                                       
                                          
                                             
                                             precision parameter 
                                                
                                                   ε
                                                
                                             ,
                                       
                                       
                                          
                                             
                                             number of operation SQUEEZE, T.
                                       
                                       
                                          
                                             1: 
                                                
                                                   CLP
                                                   =
                                                   SCA
                                                   (
                                                   X
                                                   ,
                                                   Y
                                                   ,
                                                   ε
                                                   )
                                                
                                             ;
                                       
                                       
                                          
                                             2: 
                                                
                                                   t
                                                   ←
                                                   1
                                                
                                             ;
                                       
                                       
                                          
                                             3: Repeat
                                          
                                       
                                       
                                          
                                             
                                             
                                             
                                                
                                                   CLP
                                                   =
                                                   SQUEEZE
                                                   (
                                                   CLP
                                                   ,
                                                   X
                                                   ,
                                                   Y
                                                   ,
                                                   ε
                                                   )
                                                
                                             ;
                                       
                                       
                                          
                                             
                                             
                                             
                                                
                                                   t
                                                   ←
                                                   t
                                                   +
                                                   1
                                                
                                             ;
                                       
                                       
                                          
                                             
                                             until 
                                             
                                                
                                                   t
                                                   >
                                                   T
                                                
                                             
                                          
                                       
                                       
                                          
                                             Output: A new conlitron CLP.
                                       
                                    
                                 
                              
                           
                        

GSCA requires new memory to save 
                        
                           Ω
                        
                      for running SQUEEZE, its space complexity may be conservatively estimated as 
                        
                           O
                           (
                           
                              
                                 (
                                 |
                                 X
                                 |
                                 +
                                 |
                                 Y
                                 |
                                 )
                              
                              
                                 2
                              
                           
                           )
                        
                     . Its time complexity that depends on SCA and times of SQUEEZE can be estimated as 
                        
                           O
                           (
                           D
                           ·
                           (
                           |
                           X
                           |
                           |
                           Y
                           |
                           +
                           T
                           ·
                           
                              
                                 (
                                 |
                                 X
                                 |
                                 +
                                 |
                                 Y
                                 |
                                 )
                              
                              
                                 2
                              
                           
                           )
                           /
                           ε
                           )
                        
                     .

Multiconlitron is a union of multiple conlitrons. If two finite data sets 
                        
                           X
                           ,
                           Y
                           ⊆
                           
                              
                                 R
                              
                              
                                 n
                              
                           
                        
                      are commonly separable (i.e., they have no common points), it can be proven that there must exist a multiconlitron from X to Y for separating them [19]. The multiconlitron may be denoted as 
                        
                           MCLP
                           =
                           {
                           
                              
                                 CLP
                              
                              
                                 k
                              
                           
                           ,
                           1
                           ⩽
                           k
                           ⩽
                           K
                           }
                        
                     , satisfying (13) and (14):
                        
                           (13)
                           
                              ∀
                              x
                              ∈
                              X
                              ,
                              ∃
                              1
                              ⩽
                              k
                              ⩽
                              K
                              ,
                              
                                 
                                    CLP
                                 
                                 
                                    k
                                 
                              
                              (
                              x
                              )
                              =
                              +
                              1
                              ,
                           
                        
                     
                     
                        
                           (14)
                           
                              ∀
                              y
                              ∈
                              Y
                              ,
                              ∀
                              1
                              ⩽
                              k
                              ⩽
                              K
                              ,
                              
                                 
                                    CLP
                                 
                                 
                                    k
                                 
                              
                              (
                              y
                              )
                              =
                              -
                              1
                              .
                           
                        
                     
                  

The decision function of a MCLP from X to Y is defined as
                        
                           (15)
                           
                              MCLP
                              (
                              x
                              )
                              =
                              
                                 
                                    
                                       
                                          
                                             
                                                +
                                                1
                                                ,
                                                
                                                ∃
                                                1
                                                ⩽
                                                k
                                                ⩽
                                                K
                                                ,
                                                
                                                
                                                   
                                                      CLP
                                                   
                                                   
                                                      k
                                                   
                                                
                                                (
                                                x
                                                )
                                                =
                                                +
                                                1
                                             
                                          
                                          
                                             
                                                -
                                                1
                                                ,
                                                
                                                ∀
                                                1
                                                ⩽
                                                k
                                                ⩽
                                                K
                                                ,
                                                
                                                
                                                   
                                                      CLP
                                                   
                                                   
                                                      k
                                                   
                                                
                                                (
                                                x
                                                )
                                                =
                                                -
                                                1
                                             
                                          
                                       
                                    
                                 
                              
                              ,
                           
                        
                     with the margin defined as
                        
                           (16)
                           
                              margin
                              (
                              MCLP
                              )
                              =
                              
                                 min
                              
                              {
                              margin
                              (
                              
                                 
                                    CLP
                                 
                                 
                                    k
                                 
                              
                              )
                              |
                              
                                 
                                    CLP
                                 
                                 
                                    k
                                 
                              
                              ∈
                              MCLP
                              }
                              .
                           
                        
                     
                  

In the case that X and Y are commonly separable, support multiconlitron algorithm (SMA, see Algorithm 4) can be employed to calculate a multiconlitron from X to Y 
                     [19]. As Fig. 4
                      illustrates, SMA starts with selecting a nearest point 
                        
                           
                              
                                 x
                              
                              
                                 p
                              
                           
                        
                      from X to Y and constructing 
                        
                           
                              
                                 CLP
                              
                              
                                 1
                              
                           
                           =
                           SCA
                           (
                           {
                           
                              
                                 x
                              
                              
                                 p
                              
                           
                           }
                           ,
                           Y
                           ,
                           ε
                           )
                        
                      as the first conlitron of the MCLP; Then, it cuts out those points satisfying 
                        
                           
                              
                                 f
                              
                              
                                 l
                              
                           
                           (
                           x
                           )
                           ⩾
                           
                              
                                 f
                              
                              
                                 l
                              
                           
                           (
                           
                              
                                 x
                              
                              
                                 p
                              
                           
                           )
                           ,
                           ∀
                           
                              
                                 f
                              
                              
                                 l
                              
                           
                           ∈
                           
                              
                                 CLP
                              
                              
                                 1
                              
                           
                        
                     , chooses another nearest point 
                        
                           
                              
                                 x
                              
                              
                                 q
                              
                           
                        
                      from the left in X to Y, produces 
                        
                           
                              
                                 CLP
                              
                              
                                 2
                              
                           
                           =
                           SCA
                           (
                           {
                           
                              
                                 x
                              
                              
                                 q
                              
                           
                           }
                           ,
                           Y
                           ,
                           ε
                           )
                        
                      as the second conlitron of the MCLP, and repeats similarly until no point left in X. Note that the precision parameter 
                        
                           ε
                        
                      has little influence on SMA, whose space and time complexities are 
                        
                           O
                           (
                           |
                           X
                           |
                           ·
                           |
                           Y
                           |
                           )
                        
                      and 
                        
                           O
                           (
                           |
                           X
                           |
                           ·
                           |
                           Y
                           |
                           ·
                           (
                           |
                           X
                           |
                           +
                           |
                           Y
                           |
                           )
                           )
                        
                      respectively.
                        Algorithm 4
                        Support multiconlitron algorithm (SMA)
                              
                                 
                                    
                                    
                                       
                                          
                                             Input: Two finite nonintersecting sets 
                                                
                                                   X
                                                   ,
                                                   Y
                                                   ⊆
                                                   
                                                      
                                                         R
                                                      
                                                      
                                                         n
                                                      
                                                   
                                                
                                             ,
                                       
                                       
                                          
                                             
                                             precision parameter 
                                                
                                                   ε
                                                
                                             .
                                       
                                       
                                          
                                             1: 
                                                
                                                   k
                                                   ←
                                                   1
                                                
                                             ;
                                       
                                       
                                          
                                             2: Repeat
                                          
                                       
                                       
                                          
                                             
                                             
                                             
                                                
                                                   p
                                                   =
                                                   
                                                      
                                                         
                                                            arg
                                                            min
                                                         
                                                         
                                                            i
                                                         
                                                      
                                                   
                                                   {
                                                   d
                                                   (
                                                   {
                                                   
                                                      
                                                         x
                                                      
                                                      
                                                         i
                                                      
                                                   
                                                   }
                                                   ,
                                                   Y
                                                   )
                                                   ,
                                                   
                                                   
                                                      
                                                         x
                                                      
                                                      
                                                         i
                                                      
                                                   
                                                   ∈
                                                   X
                                                   }
                                                
                                             ;
                                       
                                       
                                          
                                             
                                             
                                             
                                                
                                                   
                                                      
                                                         CLP
                                                      
                                                      
                                                         k
                                                      
                                                   
                                                   =
                                                   SCA
                                                   (
                                                   {
                                                   
                                                      
                                                         x
                                                      
                                                      
                                                         p
                                                      
                                                   
                                                   }
                                                   ,
                                                   Y
                                                   ,
                                                   ε
                                                   )
                                                
                                             ;
                                       
                                       
                                          
                                             
                                             
                                             
                                                
                                                   X
                                                   =
                                                   {
                                                   
                                                      
                                                         x
                                                      
                                                      
                                                         i
                                                      
                                                   
                                                   |
                                                   ∃
                                                   f
                                                   ∈
                                                   
                                                      
                                                         CLP
                                                      
                                                      
                                                         k
                                                      
                                                   
                                                   ,
                                                   
                                                   f
                                                   (
                                                   
                                                      
                                                         x
                                                      
                                                      
                                                         i
                                                      
                                                   
                                                   )
                                                   <
                                                   f
                                                   (
                                                   
                                                      
                                                         x
                                                      
                                                      
                                                         p
                                                      
                                                   
                                                   )
                                                   ,
                                                   
                                                      
                                                         x
                                                      
                                                      
                                                         i
                                                      
                                                   
                                                   ∈
                                                   X
                                                   -
                                                   {
                                                   
                                                      
                                                         x
                                                      
                                                      
                                                         p
                                                      
                                                   
                                                   }
                                                   }
                                                
                                             ;
                                       
                                       
                                          
                                             
                                             
                                             
                                                
                                                   k
                                                   ←
                                                   k
                                                   +
                                                   1
                                                
                                             ;
                                       
                                       
                                          
                                             
                                             until 
                                             
                                                
                                                   X
                                                   =
                                                   ∅
                                                
                                             
                                          
                                       
                                       
                                          
                                             Output: A multiconlitron 
                                                
                                                   MCLP
                                                   =
                                                   {
                                                   
                                                      
                                                         CLP
                                                      
                                                      
                                                         i
                                                      
                                                   
                                                   ,
                                                   1
                                                   ⩽
                                                   i
                                                   ⩽
                                                   k
                                                   }
                                                
                                             .
                                       
                                    
                                 
                              
                           
                        

The multiconlitron by SMA has each of its conlitrons trained by an individual point in X and the total points in Y. From a stochastic viewpoint, individual training points in X, do not always provide strong evidence for true class boundaries due to random occurrence often influenced by noise. Consequently, an amount of conlitrons in the multiconlitron are prone to suffer from overfitting effects on the distribution of the total points in X, resulting in cost of generalization performance. To resolve this problem, an appropriate amount of reasonable training points may be utilized simultaneously instead of individual points in X.

For selection of the reasonable training points from X, we start with a MCLP for partitioning X into a union of overlapped subsets, namely,
                        
                           
                              X
                              =
                              ∪
                              
                                 
                                    X
                                 
                                 
                                    k
                                 
                              
                              ,
                              
                              Ψ
                              =
                              {
                              
                                 
                                    X
                                 
                                 
                                    k
                                 
                              
                              ,
                              1
                              ⩽
                              k
                              ⩽
                              |
                              MCLP
                              |
                              }
                              ,
                           
                        
                     where 
                        
                           
                              
                                 X
                              
                              
                                 k
                              
                           
                           =
                           {
                           x
                           |
                           
                              
                                 CLP
                              
                              
                                 k
                              
                           
                           (
                           x
                           )
                           =
                           +
                           1
                           ,
                           x
                           ∈
                           X
                           }
                           ,
                           
                              
                                 CLP
                              
                              
                                 k
                              
                           
                           ∈
                           MCLP
                        
                     .

Obviously, 
                        
                           
                              
                                 X
                              
                              
                                 k
                              
                           
                        
                      is the set of all points in X that can be correctly classified by 
                        
                           
                              
                                 CLP
                              
                              
                                 k
                              
                           
                           (
                           x
                           )
                        
                     , and there may exist 
                        
                           i
                           
                           ≠
                           
                           j
                        
                      such that 
                        
                           
                              
                                 X
                              
                              
                                 i
                              
                           
                        
                      and 
                        
                           
                              
                                 X
                              
                              
                                 j
                              
                           
                        
                      are overlapped, i.e., 
                        
                           
                              
                                 X
                              
                              
                                 i
                              
                           
                           ∩
                           
                              
                                 X
                              
                              
                                 j
                              
                           
                           
                           ≠
                           
                           ∅
                        
                     .

By using 
                        
                           Ψ
                           =
                           {
                           
                              
                                 X
                              
                              
                                 k
                              
                           
                           ,
                           1
                           ⩽
                           k
                           ⩽
                           |
                           MCLP
                           |
                           }
                        
                     , we can apply operation INFLATE (see Operation 4) to growing the MCLP. At first, INFLATE chooses a biggest subset 
                        
                           
                              
                                 X
                              
                              
                                 p
                              
                           
                        
                      from 
                        
                           Ψ
                        
                     , and uses GSCA to train a conlitron from 
                        
                           
                              
                                 X
                              
                              
                                 p
                              
                           
                        
                      to Y, 
                        
                           
                              
                                 CLP
                              
                              
                                 1
                              
                              
                                 ′
                              
                           
                           =
                           GSCA
                           (
                           
                              
                                 X
                              
                              
                                 p
                              
                           
                           ,
                           Y
                           ,
                           ε
                           ,
                           T
                           )
                        
                     . Then, it cuts out those subsets in 
                        
                           Ψ
                        
                      that can be correctly classified as a whole, chooses another biggest subset 
                        
                           
                              
                                 X
                              
                              
                                 q
                              
                           
                        
                      from 
                        
                           Ψ
                        
                     , produces a new conlitron 
                        
                           
                              
                                 CLP
                              
                              
                                 2
                              
                              
                                 ′
                              
                           
                           =
                           GSCA
                           (
                           
                              
                                 X
                              
                              
                                 q
                              
                           
                           ,
                           Y
                           ,
                           ε
                           ,
                           T
                           )
                        
                     , and repeats similarly until no subset left in 
                        
                           Ψ
                        
                     .
                        Operation 4
                        INFLATE
                              
                                 (
                                 MCLP
                                 ,
                                 X
                                 ,
                                 Y
                                 ,
                                 ε
                                 ,
                                 T
                                 )
                              
                           
                           
                              
                                 
                                    
                                    
                                       
                                          1: 
                                                
                                                   
                                                      
                                                         X
                                                      
                                                      
                                                         k
                                                      
                                                   
                                                   =
                                                   {
                                                   x
                                                   |
                                                   
                                                      
                                                         CLP
                                                      
                                                      
                                                         k
                                                      
                                                   
                                                   (
                                                   x
                                                   )
                                                   =
                                                   +
                                                   1
                                                   ,
                                                   x
                                                   ∈
                                                   X
                                                   }
                                                   ,
                                                   
                                                   
                                                      
                                                         CLP
                                                      
                                                      
                                                         k
                                                      
                                                   
                                                   ∈
                                                   MCLP
                                                
                                             ;
                                       
                                       
                                          2: 
                                                
                                                   k
                                                   ←
                                                   1
                                                   ,
                                                   
                                                   Ψ
                                                   =
                                                   {
                                                   
                                                      
                                                         X
                                                      
                                                      
                                                         i
                                                      
                                                   
                                                   ,
                                                   1
                                                   ⩽
                                                   i
                                                   ⩽
                                                   |
                                                   MCLP
                                                   |
                                                   }
                                                
                                             ;
                                       
                                       
                                          3: Repeat
                                          
                                       
                                       
                                          
                                             
                                             
                                                
                                                   p
                                                   =
                                                   
                                                      
                                                         
                                                            arg
                                                            max
                                                         
                                                         
                                                            i
                                                         
                                                      
                                                   
                                                   {
                                                   |
                                                   
                                                      
                                                         X
                                                      
                                                      
                                                         i
                                                      
                                                   
                                                   |
                                                   ,
                                                   
                                                   
                                                      
                                                         X
                                                      
                                                      
                                                         i
                                                      
                                                   
                                                   ∈
                                                   Ψ
                                                   }
                                                
                                             ;
                                       
                                       
                                          
                                             
                                             
                                                
                                                   
                                                      
                                                         CLP
                                                      
                                                      
                                                         k
                                                      
                                                      
                                                         ′
                                                      
                                                   
                                                   =
                                                   GSCA
                                                   (
                                                   
                                                      
                                                         X
                                                      
                                                      
                                                         p
                                                      
                                                   
                                                   ,
                                                   
                                                   Y
                                                   ,
                                                   ε
                                                   ,
                                                   T
                                                   )
                                                
                                             ;
                                       
                                       
                                          
                                             
                                             
                                                
                                                   Ψ
                                                   =
                                                   {
                                                   
                                                      
                                                         X
                                                      
                                                      
                                                         i
                                                      
                                                   
                                                   |
                                                   
                                                      
                                                         X
                                                      
                                                      
                                                         i
                                                      
                                                   
                                                   ∈
                                                   Ψ
                                                   -
                                                   {
                                                   
                                                      
                                                         X
                                                      
                                                      
                                                         p
                                                      
                                                   
                                                   }
                                                   ,
                                                   
                                                   ∃
                                                   x
                                                   ∈
                                                   
                                                      
                                                         X
                                                      
                                                      
                                                         i
                                                      
                                                   
                                                   ,
                                                   
                                                      
                                                         CLP
                                                      
                                                      
                                                         k
                                                      
                                                      
                                                         ′
                                                      
                                                   
                                                   (
                                                   x
                                                   )
                                                   =
                                                   -
                                                   1
                                                   }
                                                
                                             ;
                                       
                                       
                                          
                                             
                                             
                                                
                                                   k
                                                   ←
                                                   k
                                                   +
                                                   1
                                                
                                             ;
                                       
                                       
                                          
                                             
                                             until 
                                             
                                                
                                                   Ψ
                                                   =
                                                   ∅
                                                
                                              4: Return 
                                             
                                                
                                                   MCLP
                                                   =
                                                   
                                                      
                                                         
                                                            
                                                               
                                                                  CLP
                                                               
                                                               
                                                                  i
                                                               
                                                               
                                                                  ′
                                                               
                                                            
                                                            ,
                                                            1
                                                            ⩽
                                                            i
                                                            <
                                                            k
                                                         
                                                      
                                                   
                                                
                                             .
                                       
                                    
                                 
                              
                           
                        

Obviously, INFLATE may expand a MCLP by reducing the number of conlitrons it contains. For instance, the MCLP by SMA contains 16 conlitrons (see Fig. 5
                     a, note that the union of their interiors forms the outside region), but it contains 10 conlitrons after growing by one INFLATE operation (see Fig. 5b, 
                        
                           
                              
                                 T
                              
                              
                                 1
                              
                           
                           =
                           1
                        
                      and 
                        
                           
                              
                                 T
                              
                              
                                 2
                              
                           
                           =
                           0
                        
                      in GSMA), and only 8 conlitrons after one following SQUEEZE operation on each conlitron again (see Fig. 5c, 
                        
                           
                              
                                 T
                              
                              
                                 1
                              
                           
                           =
                           1
                        
                      and 
                        
                           
                              
                                 T
                              
                              
                                 2
                              
                           
                           =
                           1
                        
                      in GSMA). Since INFLATE is used as a process that the interiors of all conlitrons contained in a MCLP grow nibbling and tuning their exteriors, it is also thought of as a basic growing operation in this paper.

With 
                        
                           
                              
                                 T
                              
                              
                                 1
                              
                           
                        
                      INFLATE operations and 
                        
                           
                              
                                 T
                              
                              
                                 2
                              
                           
                        
                      SQUEEZE operations following each of them, we present a growing support multiconlitron algorithm (GSMA, see Algorithm 5). Because the final MCLP by GSMA is formed by growing an initial one, the conlitrons it contains are generally trained by many samples in X and the total samples in Y, accordingly fitting the distributions of X better than those by SMA. Thus, GSMA should in general outperform SMA due to mitigation of overfitting.
                        Algorithm 5
                        Growing support multiconlitron algorithm (GSMA)
                              
                                 
                                    
                                    
                                       
                                          
                                             Input: Two finite nonintersecting sets 
                                                
                                                   X
                                                   ,
                                                   Y
                                                   ⊆
                                                   
                                                      
                                                         R
                                                      
                                                      
                                                         n
                                                      
                                                   
                                                
                                             ,
                                       
                                       
                                          
                                             
                                             precision parameter 
                                                
                                                   ε
                                                
                                             ,
                                       
                                       
                                          
                                             
                                             number of SQUEEZE and INFLATE, 
                                                
                                                   
                                                      
                                                         T
                                                      
                                                      
                                                         1
                                                      
                                                   
                                                
                                              and 
                                                
                                                   
                                                      
                                                         T
                                                      
                                                      
                                                         2
                                                      
                                                   
                                                
                                             .
                                       
                                       
                                          
                                             1: 
                                                
                                                   MCLP
                                                   =
                                                   SMA
                                                   (
                                                   X
                                                   ,
                                                   Y
                                                   ,
                                                   ε
                                                   )
                                                
                                             ;
                                       
                                       
                                          
                                             2: 
                                                
                                                   t
                                                   ←
                                                   1
                                                
                                             ;
                                       
                                       
                                          
                                             3: Repeat
                                          
                                       
                                       
                                          
                                             
                                             
                                             
                                                
                                                   MCLP
                                                   =
                                                   INFLATE
                                                   (
                                                   MCLP
                                                   ,
                                                   X
                                                   ,
                                                   Y
                                                   ,
                                                   ε
                                                   ,
                                                   
                                                      
                                                         T
                                                      
                                                      
                                                         2
                                                      
                                                   
                                                   )
                                                
                                             ;
                                       
                                       
                                          
                                             
                                             
                                             
                                                
                                                   t
                                                   ←
                                                   t
                                                   +
                                                   1
                                                
                                             ;
                                       
                                       
                                          
                                             
                                             until 
                                             
                                                
                                                   t
                                                   >
                                                   
                                                      
                                                         T
                                                      
                                                      
                                                         1
                                                      
                                                   
                                                
                                             
                                          
                                       
                                       
                                          
                                             Output: A new multiconlitron MCLP.
                                       
                                    
                                 
                              
                           
                        

If X and Y are commonly separable, we can use GSMA to produce two multiconlitrons with 
                        
                           
                              
                                 T
                              
                              
                                 1
                              
                           
                        
                      INFLATE operations and 
                        
                           
                              
                                 T
                              
                              
                                 2
                              
                           
                        
                      SQUEEZE operations, namely, 
                        
                           
                              
                                 MCLP
                              
                              
                                 1
                              
                           
                           =
                           GSMA
                           (
                           X
                           ,
                           Y
                           ,
                           ε
                           ,
                           
                              
                                 T
                              
                              
                                 1
                              
                           
                           ,
                           
                              
                                 T
                              
                              
                                 2
                              
                           
                           )
                        
                      and 
                        
                           
                              
                                 MCLP
                              
                              
                                 2
                              
                           
                           =
                           GSMA
                           (
                           Y
                           ,
                           X
                           ,
                           ε
                           ,
                           
                              
                                 T
                              
                              
                                 1
                              
                           
                           ,
                           
                              
                                 T
                              
                              
                                 2
                              
                           
                           )
                        
                     , where the one with the smaller total number of linear functions is defined as the final MCLP of GSMA, in accordance with SMA [19]. Note that the two multiconlitrons by GSMA may have different margins, whereas the two by SMA always have the same margin.

Additionally, the space complexity of GSMA can be estimated as 
                        
                           O
                           (
                           
                              
                                 (
                                 |
                                 X
                                 |
                                 +
                                 |
                                 Y
                                 |
                                 )
                              
                              
                                 2
                              
                           
                           )
                        
                     , which includes memory required for running INFLATE and SQUEEZE. Depending on analysis of SMA, INFLATE and SQUEEZE, the time complexity of GSMA can be estimated as, 
                        
                           O
                           (
                           (
                           1
                           +
                           D
                           ·
                           
                              
                                 T
                              
                              
                                 1
                              
                           
                           /
                           ε
                           +
                           D
                           ·
                           
                              
                                 T
                              
                              
                                 1
                              
                           
                           ·
                           
                              
                                 T
                              
                              
                                 2
                              
                           
                           /
                           ε
                           )
                           ·
                           |
                           X
                           |
                           ·
                           |
                           Y
                           |
                           ·
                           (
                           |
                           X
                           |
                           +
                           |
                           Y
                           |
                           )
                           )
                        
                     .

@&#EXPERIMENTAL RESULTS@&#

This section compares the performances of GSCA to SCA and GSMA to SMA. Since these algorithms are designed and implemented for solving two-class problems at the moment, we selected 12 two-class benchmark data sets from the UCI machine learning repository [26], so as to evaluate them objectively.

Moreover, we also compare GSMA with linear SVM (SVM.lin) and RBF SVM (SVM.rbf). We scaled each feature to [0, 1] for all the data sets before training and testing, then used a library of support vector machine, i.e. LIBSVM [27] to conduct experiments on these normalized data sets for C-parameterized SVM.lin and (C, 
                        
                           γ
                        
                     )-parameterized SVM.rbf in the soft margin model, where we adopted 10-fold cross-validation to identify the optimal values for the two parameters C and 
                        
                           γ
                        
                      from the candidate sets 
                        
                           {
                           
                              
                                 2
                              
                              
                                 i
                              
                           
                           |
                           i
                           =
                           -
                           4
                           ,
                           -
                           3
                           ,
                           …
                           ,
                           3
                           ,
                           4
                           }
                        
                      and 
                        
                           {
                           
                              
                                 2
                              
                              
                                 i
                              
                           
                           |
                           i
                           =
                           -
                           7
                           ,
                           -
                           6
                           ,
                           …
                           ,
                           4
                           ,
                           5
                           }
                        
                     . The training time for SVM.lin and SVM.rbf includes in part the time to choose optimal parameters.

These data sets, including their keys, examples and dimensionalities
                        
                           (
                           D
                           )
                        
                     , are described in Table 1
                     , with the “training+test” sets indicated for the last four, but not for the first eight. On the last four data sets (SPE, MO1, MO2 and MO3), we conducted comparative experiments by directly using the indicated training and test sets. However on the first eight data sets, we randomly split each of them into two halves for 10 times, one half for training, the other for testing, performed the applicable algorithms with these same training and test sets, and report the results averaged over the 10 times. Additionally, we conducted a series of experiments on n-dimensional unit spheres to demonstrate the influence of dimensional numbers on performances of GSCA and GSMA. All the experiments, with applicable precision parameter 
                        
                           ε
                           =
                           
                              
                                 10
                              
                              
                                 -
                                 3
                              
                           
                        
                     , are conducted on a PC with I5-2400 3.10-GHz processors, 4-GB memory, and Windows 7.0 operation system.

In Table 1, there are three convexly separable data sets: SON, MUS and SPE. We run SCA and GSCA on them, and summarize testing accuracies and training time in Table 2
                         as well as CLP sizes and testing time in Table 3
                        . For 
                           
                              T
                              =
                              1
                           
                        –5, GSCA-T means that GSCA grows a conlitron (or CLP) with T SQUEEZE operations. CLP size means the number of linear functions that a CLP contains.

From Tables 2 and 3, we can generate the following,
                           
                              (1)
                              On the three convexly separable data sets (SON, MUS, and SPE), GSCA achieves almost as good testing accuracies as SCA on SON, and even a lot higher accuracies than SCA on MUS and SPE.

With T increasing, it takes GSCA-T more and more training time. And GSCA-T performs gradually better than SCA on MUS and SPE. GSCA-5 achieves the highest accuracies of 88.70% on MUS and 73.26% on SPE, while consuming the most of training time: 23.869s and 0.206s, respectively. Compared to the accuracy (59.36%) of SCA on SPE, GSCA gains a great improvement on classification performance. Nonetheless, GSCA-T performs a bit up and down on SON: GSCA-1 has a slightly worse accuracy (78.48%) than SCA (78.67%), GSCA-5 has the same accuracy as SCA, whereas GSCA-2, GSCA-3 and GSCA-4 have higher accuracies (80.48%, 80.57%, and 78.86%).

With T increasing, the conlitron by GSCA-T generally contains less linear functions, thereby needs less testing time. Especially when T
                                 =1, a conspicuous decrement of both linear functions and testing time can be observed in using GSCA-1 to construct conlitrons. For example, the conlitron by SCA on MUS has 120 linear functions and 4.40ms testing time, whereas the one by GSCA-1 has only 46 linear functions and 1.80ms testing time, with 74 linear functions and 2.60ms testing time decreased. However, this kind of decrement on linear functions and testing time may die away after some more growing times.

Since in Table 1 all data sets are commonly separable, we run GSMA and SMA on all of them, and summarize testing accuracies and training time in Table 4
                         as well as MCLP sizes, LF numbers and testing time in Table 5
                        . For 
                           
                              T
                              =
                              1
                           
                        –5, GSMA-T-1 means that GSMA grows a multiconlitron (or MCLP) with T INFLATE operations and 1 SQUEEZE following each of them. MCLP size means the number of conlitrons that a MCLP contains, and LF number means the total number of linear functions that a MCLP contains. For comparison with linear SVM and RBF SVM, we also summarize the corresponding experimental results in the rightmost two columns of Table 4.

From Tables 4 and 5, we can conclude that,
                           
                              (1)
                              As for testing accuracies, GSMA performs obviously better than SMA on 7 data sets (i.e., ION, MUS, MAG, GER, SPE, MO1, and MO3), largely as well as SMA on 5 data sets (i.e., SON, BRE, PAR, PIM, and MO2).

Even if 
                                    
                                       T
                                       =
                                       1
                                    
                                 , GSMA-T-1 may gain a conspicuous improvement of classification performance on some data sets. For example, SMA achieves 60.43% testing accuracy on SPE, whereas GSMA-1-1 achieves 70.05%, increasing about 10%. Besides, GSMA-T-1 has a small variation of testing accuracies with T, which largely displays a slight increasing tendency.

With T increasing, GSMA-T-1 needs more and more training time, probably with a great increment on some large data sets. For example, it takes SMA 168s to train a multiconlitron on MAG, whereas it takes GSMA-1-1 5013s to train a grown multiconlitron, with the training time increased about 29 times. Moreover, it takes GSMA-5-1 41,691s to train a grown multiconlitron, with the training time increased about 248 times.

When T increases, the multiconlitron by GSMA-T-1 generally contains less conlitrons and less linear functions than SMA, thus leading to less testing time. Especially when T
                                 =1, there is often a conspicuous decrement of conlitrons, linear functions and testing time if GSMA-T-1 is applied to constructing a multiconlitron. For example, the multiconlitron by SMA on MUS has 134 conlitrons, 5095 linear functions and 11.90ms testing time, whereas the one by GSMA-1-1 has only 42 conlitrons, 84 linear functions and 2.00ms testing time, decreasing 92 conlitrons, 5011 linear functions and 9.90ms testing time. However, this kind of decrement may also die away after some more growing times, like the similar decrement observed on GSCA.

In terms of accuracy, SMA performs better than SVM.lin on 9 data sets (except for MAG, PIM, GER), GSMA does on 10 data sets (except for PIM and GER). However, SVM.rbf performs better than SMA on 10 data sets and better than GSMA on 8 data sets.

Generally, both SMA and GSMA take less training time than SVM.lin and SVM.rbf because they have no parameter optimization process. However, with the increase of growing times, GSMA takes more training time.

In order to demonstrate the dimensional influence on performances of GSCA and GSMA, we randomly generated a series of data sets containing 2000 samples from n-dimensional unit hyperspheres 
                           
                              (
                              ‖
                              x
                              ‖
                              ⩽
                              1
                              )
                           
                        , which are divided into two classes by the separating boundary 
                           
                              ‖
                              x
                              ‖
                              =
                              0.5
                           
                        . Then we randomly split each of these data sets into two halves only once, one half for training, the other for testing. Furthermore, we conducted a series of experiments on these unit hypersphere problems, and report the performances (i.e., testing correct rates) of SCA and GSCA in Table 6
                         with a dim-rate graph illustrated in Fig. 6
                        , as well as the performances of SMA and GSMA in Table 7
                         with a dim-rate graph displayed in Fig. 7
                        .

From Tables 6 and 7 and Figs. 6 and 7, we can further conclude that,
                           
                              (1)
                              On these n-dimensional unit hypersphere problems, GSCA and GSMA largely have better performances than SCA and SMA, but they both have an overall decreasing tendency of testing correct rates with the dimension numbers. This means that they may still have an obvious overfitting effect on high-dimensional data sets, but not so serious as SCA and SMA.

GSCA may perform better than SCA in a range of dimension numbers. If dimension number 
                                    
                                       n
                                       ⩽
                                       20
                                    
                                 , GSCA may be worse than SCA; but if 
                                    
                                       n
                                       ⩾
                                       25
                                    
                                 , GSCA clearly outperforms SCA, with an approaching tendency to SCA for 
                                    
                                       n
                                       ⩾
                                       80
                                    
                                 .

GSMA almost always achieves higher accuracies than SMA. If 
                                    
                                       n
                                       >
                                       10
                                    
                                 , GSMA clearly outperforms SMA, with an approaching tendency to SMA for 
                                    
                                       n
                                       ⩾
                                       80
                                    
                                 .

@&#CONCLUSION@&#

Multiconlitron is a general piecewise linear classifier [19]. In theory, it can solve any commonly separable problems, and conlitron as its special case can solve any convexly separable problems. In practice, a conlitron may be constructed by SCA, a multiconlitron may be constructed by SMA [19]. However, SCA and SMA often produce too many linear functions in construction of a conlitron and a multiconlitron, so they are prone to suffer from overfitting effects, especially on high dimensional data sets. In order to alleviate the overfitting, we propose a growing technique to improve SCA and SMA, which is composed of two basic operations: SQUEEZE and INFLATE. Using SQUEEZE, we present a GSCA. Using INFLATE and SQUEEZE, we further present a GSMA. The two new algorithms, i.e., GSCA and GSMA, can effectively reduce the total number of linear functions, and thereby simplify the structure of a conlitron and the structure of a multiconltiron, respectively. At the same time, they can largely keep and even greatly improve the level of classification performances, compared with SCA and SMA. Despite that it increases training time, by compensation it can decrease testing time for a conlitron and a multiconlitron due to their structure simplification, which may provide more convenience for integrating a piecewise linear classifier into small reconnaissance robots, intelligent cameras, imbedded and real-time systems, and portable devices. Therefore, the presented GSCA and GSMA make an important step to approach the main goal of piecewise linear learning, i.e., improving the performance of piecewise linear classifiers in a general framework.

However, we should emphasize that the presented technique still has some weaknesses and limitations in current strongly globalized but nonlinear world. For example, it requires that the data sets must be commonly separable (i.e., disjoint). Moreover, it may also suffer from an overfitting effect on high-dimensional data sets. In addition, it generally has a lower performance than nonlinear SVMs. Although there remain a number of other problems to be solved in piecewise linear learning, as future work we would try to incorporate the idea of soft margin into the growing technique for dealing with commonly nonseparable cases and further alleviating the overfitting effect. Since soft margin is a very useful and successful strategy in design of support vector machines, it might as well be beneficial to improving the performance of a conlitron/multiconlitron. With a soft-margin GSCA and a soft-margin GSMA, we expect that much progress will be made for drawing more potential of a conlitron/multiconlitron, and for training a more robust PLC in the subsequent development of piecewise linear learning.

@&#ACKNOWLEDGEMENTS@&#

The authors would like to thank all of the editors and the anonymous reviewers, whose comments were of great value.

This work was supported in part by the National Natural Science Foundation of China under Grant 61175004 and the Beijing Natural Science Foundation under Grant 4112009, the Beijing Municipal Education Commission Science and Technology Development Plan key project under Grant KZ201210005007, and the Specialized Research Fund for the Doctoral Program of Higher Education of China under Grant 20121103110029.

@&#REFERENCES@&#

