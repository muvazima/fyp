@&#MAIN-TITLE@&#A methodological approach for trustworthiness assessment and prediction in mobile online collaborative learning

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           Methodology to modelling trustworthiness in mobile online collaborative learning


                        
                        
                           
                           Guidelines for incorporating security into mobile online collaborative activities


                        
                        
                           
                           Provide trustworthiness assessment methods


                        
                        
                           
                           Trustworthiness prediction based on a neuronal network approach


                        
                        
                           
                           Evaluation of trustworthiness prediction and methodology on real online courses


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Information security

Trustworthiness

e-Assessment

Online collaborative learning

Mobile learning

@&#ABSTRACT@&#


               
               
                  Trustworthiness and technological security solutions are closely related to online collaborative learning and they can be combined with the aim of reaching information security requirements for e-Learning participants and designers. Moreover, mobile collaborative learning is an emerging educational model devoted to providing the learner with the ability to assimilate learning any time and anywhere. In this paper, we justify the need of trustworthiness models as a functional requirement devoted to improving information security. To this end, we propose a methodological approach to modelling trustworthiness in online collaborative learning. Our proposal sets out to build a theoretical approach with the aim to provide e-Learning designers and managers with guidelines for incorporating security into mobile online collaborative activities through trustworthiness assessment and prediction.
               
            

@&#INTRODUCTION@&#

Over the last decade, Computer Supported Collaborative Learning (CSCL) has become one of the most influencing paradigms devoted to improving e-Learning [1]. Similarity, mobile learning is an emerging educational model devoted to providing the learner with the ability to assimilate learning any time and anywhere [2]. Mobile learning provides ubiquity and pervasiveness, which have become essential requirements to support learning and allow all learning community members from a variety of locations to cooperate with each other by means of a large variety of technological equipment [3]. While there has been an explosion of mobile devices and applications in the marketplace to gain access to e-Learning systems and collaborative learning processes, the development of mobile supported collaborative learning guided by technological security as a key and transverse factor has been, to the best of our knowledge, little investigated [4]. However, Information and Communication Technologies (ICT) have been widely adopted and exploited in most of educational institutions in order to support e-Learning through different learning methodologies, ICT solutions and design paradigms. In this context, e-Learning designers, managers, tutors, and students are increasingly demanding new requirements. Among these requirements, information security is a significant factor involved in e-Learning processes. However, according to [5,6], e-Learning services are usually designed and implemented without much consideration of security aspects. This finding has been usually tackled with ICT security solutions, but as stated in [7], the problems encountered in ensuring modern computing systems, cannot be solved with ICT alone. In contrast, current advanced ICT security solutions are feasible in many e-Learning scenarios though assessment processes in CSCL involve specific non-technological components. Indeed, online assessment activities (e-assessment) usually have specific issues, such as student's grades or course certification, that e-Learning designers have to consider when they manage security requirements. In this context, even most advanced and comprehensive technological security solutions cannot cope with the whole domain of e-Learning vulnerabilities.

An e-Learning activity is a general concept that can involve very different cases, actors, processes, requirements, and learning objectives in the complex context of e-Learning [8]. To conduct our research we focus on specific online collaborative activities, namely, online assessment (e-assessment). In [9], the authors report that the e-assessment process offers enormous opportunities to enhance the student's learning experience, such as delivering on-demand tests, providing electronic assessment, and immediate feedback on tests. In this context, e-assessment is considered an e-exam with most common characteristics of virtual exams, and is typically employed to deliver formative tests to the students. An e-assessment activity is an e-exam with most common characteristics of virtual exams. Moreover, in [10] it is discussed how unethical conduct during e-learning exam-taking may occur and an approach that suggests practical solutions based on technological and biometrics user authentication is proposed.

In our real context of online higher education, we mainly consider peer-to-peer assessment processes and online collaborative activities, which will form e-assessment components. In this context, we propose security technological solutions extended with a functional trustworthiness approach [11–13] by proposing a hybrid assessment method based on trustworthiness models. From these previous works, in this paper, we endow trustworthiness models for security in e-Learning with a trustworthiness methodology. This approach is devoted to improving security in CSCL by building a trustworthiness methodology to offer guidelines for designing as well as managing security in online collaborative activities, through trustworthiness assessment and prediction. To this end, we propose a trustworthiness methodology with the aim of managing and predicting reliable assessment processes in e-assessment. As a result, by predicting collaborative e-assessment results, e-Learning designers will be able to manage assessment process with additional information generated by automatic prediction models.

This paper is structured as follows. In Section 2 we review the main works in the literature on mobile collaborative learning and security in CSCL, how trustworthiness assessment and prediction are related to security, and trustworthiness methodologies. In Section 3, we describe the theoretical features, phases, data, and processes of our methodological approach. In order to validate and support the application of the methodology, in Section 4 we concrete the most significant aspects in terms of specific methods through their application in real online courses. Moreover, in Section 5 we present and evaluate a neural network approach for peer-to-peer e-assessment prediction. Finally, conclusions and further work are presented in Section 6.

@&#BACKGROUND@&#

In this section, we review the main works in the literature on mobile collaborative learning and security in collaborative learning, how trustworthiness assessment and prediction are related to security, and trustworthiness existing methodologies.

According to [1], Computer Supported Collaborative Learning has become one of the most influencing educational paradigms devoted to improving e-Learning. Some authors argued that information security has to be considered with the aim of ensuring information managed in CSCL. In addition, several technological solutions were proposed [5,6]. These security solutions, based on technological approaches, tackle the security in e-Learning problem with specific methods and techniques that deal with particular security issues, but these models do not offer an overall security solution [4,14]. One of the key strategies in information security is that security drawbacks cannot be solved with technology solutions alone [7]. Even most advances security ICT solutions have drawbacks that impede the development of complete security frameworks.

Finally, some authors argue that we need to understand attacks in order to discover relevant security design factors [15]. Real-life security attacks and vulnerabilities are presented in many security reports, which justify the relevance of security attacks over the last years [16,17].

Mobile learning has lately emerged with the increasing use of mobile technology in education. According to [2] and [3] the needs of educational organizations are increasingly related to modern online learning environments which must provide advanced capability for the distribution of learning activities and the necessary functionalities and learning resources to all participants, regardless of where these participants and resources are located, and whether this location is static or dynamic. The aim of newest learning environments is to enable the learning experience in open, dynamic, large-scale, and heterogeneous environments.

Although, from a general point of view, mobile learning can be considered as any time and anywhere learning experiences, [18] shows how we can consider multiple definitions of m-Learning. Moreover, because of the complexity and multidisciplinary factors of Mobile Computer Supported Collaborative Learning (MCSCL) paradigm, in [3] a three-dimensional approach has been provided to understand and unify the rather dispersion currently existing in advanced learning practices and pedagogical goals from the era of MCSCL. This approach considers the context of MCSCL from a multiple dimensional perspective: pedagogical, technological and evaluation.

In this paper, we will focus mobile learning specially on the use of mobile devices (i.e. tablets or smart phones) when developing CSCL activities. In this sense, mobile learning educational process can be considered as any learning and teaching activity that is possible through mobile tools or in settings where mobile equipment is available [18]. Therefore, we consider that mobile devices do not change significantly the CSCL processes and methodologies presented in the next sections. Hence, for the sake of simplicity, in the rest of the paper we will refer to online collaborative learning or CSCL only, which implicitly include MCSCL and collaborative learning supported by mobile devices.

According to [19], there is a degree of convergence on the definition of trustworthiness. This can be summarized as follows: trustworthiness is a particular level of the subjective probability with which an agent assesses that another agent (or group of agents) will perform a particular action, before the agent can monitor such action (or independently of his capacity ever to be able to monitor it) and in a context in which it affects its own action. Regarding trustworthiness and e-Learning, according to [20], a trustworthy e-Learning system is a learning system, which contains reliable serving peers and useful learning resources.

As stated by the authors in [21], through the study of the most relevant existing trust models, trustworthiness modelling can be classified into trustworthiness assessment and prediction models (note that in the literature on trustworthiness modelling, the terms determination and estimation are also used to refer assessment and prediction respectively). The first formally trustworthiness model related to information technology services was proposed in [22] from three levels. This approach considers the main factors and rules dealing with trustworthiness, which can be summarized as follows:
                           
                              1.
                              Basic trust is the general trusting disposition of an agent at time.

General trust represents the trust that agent has on other agent at time.

Situational trust is the amount of trust taking into account a specific situation.

It is worth mentioning that this early proposal takes into account the time factor (discussed in Section 2.5) as a key trustworthiness component in the model.

Although trustworthiness models can be defined and included as a service in e-assessment security frameworks, there are multiple issues related to trustworthiness, which cannot be managed without normalization [23]. Among these issues, we can highlight trustworthiness multiple sources, different data formats, measure techniques, and other trustworthiness issues, such as rules, evolution, or context. Hence, in [13], we justify why trustworthiness normalization is needed and a normalized trustworthiness model is proposed by reviewing existing normalization procedures for trustworthy values applied to e-assessments.

To overcome security deficiencies discussed above, we researched into enhancing technological security models with functional approaches [11–13]. In [20], a trustworthy e-Learning system is defined as a learning system, which contains reliable serving peers and useful learning resources. As stated by the authors in [21], through the study of the most relevant existing trust models, trustworthiness modelling can be classified into trustworthiness assessment and prediction models. In this paper, we considered both purposes of trustworthiness. In addition, we also consider trustworthiness models, rules, factors and features that we discussed in [11–13] with the aim to enhance security in e-Learning through trustworthiness methods.

To establish the difference between assessment and prediction, in [21] it is stated that trustworthiness prediction, unlike trust assessment, deals with uncertainty as it aims to predict the trust value over a period in the future. In such cases, the accuracy of the trust values at a point in time in the future is an important issue to be considered, as the future of business decisions will be based on these.

Several studies investigating trustworthiness show that time factor is strongly related to trustworthiness [20,24,25]. The authors in [20] stated that trust is dynamic and will attenuate when time goes by. For instance, A trusts B at time t
                        0, but A might not trust B in a follow-up time t
                        1. In [23], it is presented the design and development of a trust management system. This system addresses its specifications and architecture to facilitate the system implementation through a module-oriented architecture. Among the modules of the system, the authors define a module for dynamic assessment, which includes trust level assessment based on dynamic trust criteria. The module integrates assessment from all parts to calculate trust value by the weighted average.

As aforementioned, we can consider both assessment and prediction trustworthiness models. Although the models reviewed analysing trustworthiness include the time factor as a key component, we need further modelling techniques that allow us to conduct trustworthiness assessment towards prediction. To this end, we reviewed the concept of Trustworthiness History Sequence [25]. In the context of grid services, Trustworthy History Sequence is a history record of trustworthy of grid service that the requester has traded with. It can be denoted with an ordered tuple where each component is the trustworthiness score of the transaction between a requester and a service.

Trustworthiness prediction models, to the best of our knowledge, have been little investigated in the context of e-assessment, even in a general prediction scope. The existing literature suggests that the term trust prediction is used synonymously and interchangeably with the trust assessment process [21] presented in the sections above. Moreover, trustworthiness does not focus on an isolated technical application, but on the social context in which it is embedded. Although trustworthiness building can be supported by institutions, there is no easy way out [26]. In addition, the building of trust can be a very lengthy process, the outcome of which is very hard to predict.

Several studies investigating trustworthiness prediction were carried out with neural networks [21,25,27]. In [21], the authors propose the use of neural networks to predict the trust values for any given entities. The neural networks are considered one of the most reliable methods for predicting values [21]. A neural network can capture any type of non-linear relationship between input and output data through iterative training, which produces better prediction accuracy in any domain such as time series prediction. The key contribution of this work is focused on the dynamic nature of trust, in which the performance of this approach is tested under four different types of data sets (e.g. non-uniform stationary data, different size, etc.), and the optimal configuration of the neural network is identified.

In [25], the authors stated that trustworthiness prediction with the method of neural network is feasible. The experiments presented in [25] confirm that the methods with neural networks are effective to predict trustworthiness. This method is based on defining a neural network structure, a neural network constructing, an input standardization, a training sample constructing, and the procedure of predicting trustworthiness with trained neural network.

The work presented in [27] proposes a novel application of neural network in evaluating multiple recommendations of various trust standards. This contribution presents the design of a trust model to derive recommendation trust from heterogeneous agents. The experimental results show that the model has robust performance when there is high prediction accuracy requirement or when there are deceptive recommendations.

Moreover, other trustworthiness models were proposed without neural networks methods [28,29], such as similarity approaches. In [29], it is stated that predicting trust among the agents is of great importance to various open distributed settings. The author focuses the study on peer-to-peer systems in that dishonest agents can easily join the system and achieve their goals by circumventing agreed rules, or gaining unfair advantages. These cases are closely related to e-assessment regarding anomalous assessment processes as well as integrity and identity security properties. To this end, this work proposed a trust prediction approach to capture dynamic behaviour of the target agent by identifying features, which are capable of describing context of a transaction. A further work [28], on users' rating systems, presents experimental results which demonstrate that ratings volume is positively associated with trust, as well as the congruence between one's own and others' opinions. This study also demonstrates that rating source and volume interact to impact credibility perceptions, reliance on user-generated information, and opinion congruence. These results indicate important theoretical extensions by demonstrating that social information may be filtered through signals indicating its veracity, which may not apply equally to all social users.

To date, little research has been carried out to build trustworthiness methodological approaches. However, in the context of business processes, the authors in [30] propose a generic methodology, called Trustworthiness Measurement Methodology (TMM). This methodology can be used to determine both the quality of service of a given provider and the quality of product. The scope of this study is the business processes, but the key concept of this methodology is the interaction between agents. Indeed, this is the same topic that we study in collaborative learning, but in our context, considering students' interactions and trustworthiness between them. This methodology is based on the following phases:
                           
                              1.
                              Determine the context of interaction between the trusting agent and the trusted entity.

Determine the criteria involved in the interaction.

Develop a criterion assessment policy for each criterion involved in the interaction.

Determine the trustworthiness value of the trusted entity in the given context.

In [31], the authors presented the foundations of formal models for trust in global information security environments, with the aim of underpinning the use of trustworthiness based security mechanisms as an alternative to the traditional ones. As stated by the authors, this formal model is based on a novel notion of trust structures, which is built on concepts from trust management and domain theory as well as features at the same time a trust and an information partial order. The formal model is focused on the following target aspects:
                           
                              1.
                              Trustworthiness involves entities.

Trustworthiness has a degree.

Trustworthiness is based on observations.

Trustworthiness determines the interaction among entities.

In addition to the methodology and formal approaches, in another work [32], a trust architecture is presented by introducing a basic trust management model.

In this section, we first describe the main theoretical features of our methodological approach and then, the summary of its key phases is presented. Finally, we detail each phase by analysing the processes, data, and components involved in the methodology.

In these sections, we present our methodological approach called Trustworthiness and Security Methodology (TSM) in CSCL. TSM is a theoretical approach devoted to offering a guideline for designing and managing security in mobile collaborative e-Learning activities through trustworthiness assessment and prediction.

TSM is defined in terms of TSM cycles and phases, as well as, components, trustworthiness data and main processes involved in data management and design. We define a TSM phase as a set of processes, components, and data. TSM phases are sequentially arranged and the three main phases (see Fig. 1
                        ) in TSM form a TSM design and deploy cycle (i.e. TSM-cycle). Each TSM-cycle corresponds to an interaction over the overall design process. Firstly, these concepts are presented as a methodological approach and then we complete the theoretical analysis with those methods and evaluation processes that we discussed in our previous research [11–13].

TSM aims to deliver solutions for e-Learning designers. TSM supports all analysis, design, and management activities in the context of trustworthiness collaborative learning activities, reaching security levels defined as a part of the methodology. Therefore, TSM tackles the problem of security in CSCL through the following guidelines and main goals:
                           
                              1.
                              Define security properties and services required by e-Learning designers.

Build secure CSCL activities and to design them in terms of trustworthiness.

Manage trustworthiness in learning systems with the aim of modelling, predicting, and processing trustworthiness levels.

Detect security events which can be defined as a condition that can violate a security property, thus introducing a security breach in the learning system.

The scope of our methodological approach is an e-Learning system formed by collaborative activities developed in a Learning Management System (LMS). The LMS has to provide support to carry out these activities and to collect trustworthiness data generated by learning and collaboration processes. Although in the context of collaborative e-Learning we can consider several actors with different roles in the overall process, for the sake of simplicity, we only consider the most significant actors and roles related to this research, as follows:
                           
                              1.
                              Students, as the main actors in the collaborative learning process and as targets of the trustworthiness analysis.

Designers, that represent the role in charge of all e-Learning analysis and design tasks.

Managers, that develop management processes, such as deployment, monitoring or control tasks.

As shown in Fig. 1, the TSM methodology is divided into three sequential phases:
                           
                              1.
                              Building trustworthiness components, integrated into the design of secure collaborative learning activities.

Trustworthiness analysis and data processing, based on trustworthiness modelling.

Trustworthiness assessment and prediction, to detect security events and to refine the design process.

Although we assess each phase of the methodology as potential sets of concurrent processes (see next sections), these core phases have to be developed following the sequential phases presented. The main reason for defining this sequential model is the input and output flow. In other words, the output of one phase is the input of the next one. For instance, we can only start the data collection phase when trustworthiness components are deployed. Likewise, we cannot start trustworthiness prediction or assessment until data processing has been completed.

Despite the sequential model between each phase, we can consider the overall process, formed by these three phase, as a TSM-cycle. Each TSM-cycle allows e-Learning designers to improve the collaborative learning activities from the results, and trustworthiness decision information retrieved from the previous cycle. This information can introduce design enhancements which will be deployed in the next deployment (i.e. the next time that the students will carry out the activity supported by the learning component). In terms of the data flow between TSM-cycles, the input for the new design iteration is the trustworthiness decision information. For instance, if decision information shows that there exists a deficiency in a component, the detected impediment can be overcome through design changes that are deployed in the next TSM-cycle execution.

The first phase of TSM deals with the design of collaborative activities. The key challenge of the design process is to integrate trustworthiness data collection inside the learning process. In other words, the trustworthiness component has to carry out its learning purpose. In addition, the learning component has to produce trustworthiness basic data. Moreover, data collection methods and processes should not disturb the learning activity. To this end, we propose the processes, data, and components that can be seen from the diagram in Fig. 2
                        . Due to the first goal of the methodology is to design the trustworthiness component, we divide this phase into the following analysis considerations:
                           
                              1.
                              Collaborative learning activities generate a significant amount of interactions. Due to students' interactions are closely related to trustworthiness modelling, designers have to consider and analyse each interaction, which may be related to trustworthiness.

Analyse and determine relations between students' interaction and trustworthiness could be a challenging task in e-Learning design. Hence, we propose the study of trustworthiness factors [11], which can be defined as those behaviours that reduce or build trustworthiness in a collaborative group. Trustworthiness factors can be divided into trustworthiness reducing factors and trustworthiness building factors. This resource will allow designers to determine those interactions, which may generate trustworthiness basic data.

Designers have to model security issues so that they are compatible with trustworthiness data and students' interactions.

Based on the above considerations, we propose the analysis of general security properties and services presented in [4]. Through selecting and analysing security properties we can connect trustworthiness, interactions, and security requirements in terms of collaborative learning activities.

From the study of security properties, students' interactions and trustworthiness factors, the initial collaborative learning activity has evolved to a peer-to-peer assessment component. Once we endowed the collaborative activity with security and trustworthiness, the next process is focused on data collection. To this end, we define research instruments for data collection intended to retrieve all trustworthiness data generated by the peer-to-peer assessment component.

Note that, for the sake of simplicity, we present a case dealing with one collaborative activity only, which generate its peer-to-peer assessment component. Despite this, the case may be extended to a set of collaborative activities implemented in one or several peer-to-peer components. Moreover, the components can be supported by several research instruments or a peer-to-peer component, including multiple collaborative activities. Eventually, the result in any case (i.e. single and multiple activities, components and instruments) is a set of trustworthiness basic data that will feed the next phase of the methodology. For this reason, we define the input of the next phase in terms of multiple trustworthiness data sources.

We suggested the need of modelling activities, components, security properties, or interactions in the context of a general design process. This process may be a challenge if the e-Learning designer does not use suitable modelling tools. To overcome this impediment, we reviewed the Educational Modelling Language (EML) [33] that, with the indications presented in [4], allows designers to tackle with modelling security, CSCL activities and interactions.

So far, the e-Learning designer has built the trustworthiness component, which will be deployed in the LMS. It is worth mentioning that the deployment of collaborative learning activities may involve multiple LMSs. In fact, we are proposing a learning activity deployment in conjunction with research instruments for data collection. The implementation of these instruments may require additional technological solutions such as normalization processes. Trustworthiness modelling and normalization processes in TSM (see Fig. 3
                        ) are based on the key concepts presented in the rest of this subsection (further information and details of these concepts can be found in our previous research [11–13]).

We introduced the concept of trustworthiness indicator as a measure of trustworthiness factors. Trustworthiness factors were presented (see Section 3.3) as those behaviours that reduce or build trustworthiness in a collaborative activity and they were integrated in the design of research instruments. Therefore, we define a trustworthiness indicator as a basic measure of a trustworthiness factor that is implemented by a research instrument and integrated in the peer-to-peer assessment component. Finally, trustworthiness levels can be defined as a composition of trustworthiness indicators. The concept of levels is needed because trustworthiness rules and characteristics must be considered and, consequently, we have to compose this more complex measure [11].

Regarding normalization functions there are several reasons that impede the management and processing of trustworthiness levels directly. Among them, we can highlight several aspects, such as multiple sources, different data formats, measure techniques and other trustworthiness factors such as rules, trustworthiness evolution, or context. Therefore, both trustworthiness indicators and levels have to be normalized through normalization functions. The selection of these functions depends on the data sources and the format selected for each instrument for data collection [13].

Once trustworthiness modelling concepts are defined, the task of data processing starts, and then basic data from trustworthiness data sources is computed in order to determine indicators or levels, for each student, group of students, evaluation components, etc. The main challenge of data processing in this case is that extracting and structuring these data are a prerequisite for trustworthiness data processing. In addition, with regarding to computational complexity, extracting and structuring trustworthiness data is a costly process. Moreover, the amount of basic data tends to be very large [12]. Therefore, techniques to speed and scale up the structuring and processing of trustworthiness basic data are required (see [12] for a parallel implementation approach to be developed in the context of trustworthiness data processing).

From the trustworthiness data computed in the previous phase, we can carry out both assessment and prediction processes, which allow e-Learning managers to make security decisions based on the output of this phase (i.e. trustworthiness decision information). Furthermore, this information can be taken into account as input data for an iterative design process as mentioned in Section 3.2.

Trustworthiness assessment and prediction stem from the analysis of the time factor in trustworthiness. Fig. 4
                         shows how trustworthiness assessment and prediction begin with the conversion of processed data into trustworthiness sequences by considering the time factor. The concept of trustworthiness sequence is related to levels and indicators and can be defined as the ordered list of a student's trustworthiness normalized levels when the student is performing the peer-to-peer assessment component over several points in time.

Once trustworthiness sequences are built, the e-Learning manager is able to set out predictions and assessment processes. As presented in [11], methods intended to predict and assess trustworthiness are available in the context of peer-to-peer assessment. The e-Learning designer has to select and determine suitable methods for the specific target scenario.

We cannot use trustworthiness decision information (i.e. reliable trustworthiness information) without the validation process. The validation process is intended to filter anomalous cases, to compare results that represent the same information from different sources, and to verify results using methods such a similarity coefficients. Nevertheless, this information may indicate signs and the complex nature of trustworthiness modelling requires additional validation processes. These validation models can be classified into internal and external, and each type may involve automatic and manual tasks. For instance, in the context of e-assessment, we could compare trustworthiness results generated by the peer-to-peer assessment component to external (respect to the peer-to-peer component) results from the manual tutor evaluation. Moreover, this comparison could be automatically developed by the system and analysed by the tutor before taking any decision.

Finally, trustworthiness decision information is available and then e-Learning managers can analyse valid and useful information devoted to reporting security events, improve the framework design, or manage security enhances. In the rest of the paper we present specific TSM aspects in real online courses, focused on trustworthiness assessment (see Section 4) and trustworthiness prediction (see Section 5).

In order to evaluate and support the application and deployment of TSM, in this section, we apply several significant aspects of TSM. These aspects are considered in terms of specific methods and techniques through their application in real online courses.

We carried out two studies [12,34] based on real online courses at the Open University of Catalonia.
                           1
                        
                        
                           1
                           
                              http://www.uoc.edu.
                         These studies were performed with the aim to experiment with specific trustworthiness methods and techniques involved in TSM as well as to illustrate specific applications and to evaluate the feasibility of the TSM.

In the first study [12], the mobile collaborative activities represented a relevant component of the e-assessment of the course. Students' evaluation was based on a hybrid continuous evaluation model by using several manual and automatic evaluation instruments. There were 12 students distributed in three groups and the course was arranged in four stages. These stages were taken as time references in order to implement trustworthiness sequences. At the end of each collaborative stage, each student had to complete a survey. The coordinator of the group had to complete two reports, public and private, and at the end of each stage, the members the group was evaluated by the coordinator. General e-Learning activities were supported by a standard LMS, which offered both rating systems and general learning management indicators. Given the low number of students, we could study the data in much more detail and flexibility. Likewise, we could experiment with several design alternatives and adapting the model to the design cycles proposed in TSM (see Section 3).

The second study [34] extended the scope of the first one to a more standard scenario in which we could not manage so much flexibility and manual processes. The course was focused on peer-to-peer e-assessment and it has the following main features:
                           
                              •
                              Students' assessment was based on a continuous assessment model by using several manual assessment instruments. Manual assessment was completed with automatic methods, which represented up to 20% of the total student's grade. Therefore, we implemented a hybrid assessment method, which combined manual and automatics assessment methods, and the model allowed us to compare results in both models.

Number of students participating: 12 students performed a subjective peer-to-peer assessment, that is, each student could assess any student in the classroom following the assessment design.

The course followed seven stages that could be taken as time references in order to validate and to analyse results. Each stage corresponded to a module of the course, which had a learning module (i.e. book) that the student must study before developing the assessment activities of the course.

From the above base course features, we built the peer-to-peer e-assessment activity encapsulated as a Continuous Assessment (CA), which was formed by three assessment activities (described in the rest of this section). Once the student has studied a module, the student receives an invitation to answer (i.e. a short text response) a set of evaluation questions about the current module. This is the first activity of the CA named the Module Questionnaire and denoted by Q. The student did not have to answer as soon as Q was sent, because the second activity of the CA was a students' forum (F) intended to create a mobile collaborative framework devoted to enhancing responses in activity Q, in other words, Q and F activities are concurrent tasks. The final activity was the core of the peer-to-peer assessment and the student has to complete a survey (P) which contained the set of responses from Q. The student had to assess each classmate's responses in Q and, furthermore, the activity of each student in the forum F was assessed. These collaborative activities were designed considering the use of mobile devices.

After the experience designing components in the first study, in the second one, we built a comprehensive peer-to-peer assessment component. We selected integrity and identity as target security properties for the component and, after the analysis of potential students' interactions in basic activities, the first version of the peer-to-peer assessment component was proposed.

The final version of the component had three stages: Once the student had studied a module, the student received an invitation to a survey (S1) with questions about the current module. Students did not have to answer S1 as soon as the invitation was received. The second activity of the component was a students' forum (F), which created a collaborative framework devoted to enhancing responses' quality in S1. Eventually, the student had to complete another survey (S2), which contained the set of responses over the first one (S1). By using S2, the student had to evaluate each classmate's responses as well as the participation of each student in the forum F. The design of this activity endorsed our proposal regarding the analysis of security properties, students' interactions, and factors.

Regarding research instruments and data collection, we included the following instruments:
                           
                              1.
                              Surveys.

Ratings.

Students reports.

LMS indicators.

To sum up, each instrument was integrated into the mobile collaborative activity (through mobile tools) and it managed its own data formats.

Before the analysis and data processing phase, we introduce the key terms presented in the next sections (see Table 1
                        ).

We analysed research instruments data formats in terms of data sources in TSM. For each case, we selected a set of normalization functions intended to convert basic trustworthiness data in normalized trustworthiness values. Normalization functions are combined with trustworthiness levels and indicators. As an example of this combination, when a student evaluates every classmate's responses, we use the following normalization function [13]:
                           
                              (1)
                              
                                 N
                                 
                                    
                                       t
                                       
                                          w
                                          
                                             R
                                             
                                                q
                                                ,
                                                m
                                                ,
                                                s
                                             
                                          
                                       
                                    
                                 
                                 =
                                 
                                    
                                       ∑
                                       
                                          j
                                          =
                                          1
                                       
                                       
                                          N
                                          S
                                       
                                    
                                    
                                 
                                 
                                    
                                       t
                                       
                                          w
                                          
                                             R
                                             
                                                q
                                                ,
                                                m
                                                ,
                                                j
                                             
                                          
                                       
                                    
                                    
                                       
                                          N
                                          S
                                       
                                       −
                                       1
                                    
                                 
                                 ,
                                 j
                                 ≠
                                 s
                                 ,
                                 
                                    N
                                    S
                                 
                                 =
                                 |
                                 S
                                 |
                                 ,
                                 q
                                 ∈
                                 Q
                                 ,
                                 m
                                 ∈
                                 M
                                 ,
                                 s
                                 ∈
                                 S
                                 ,
                                 j
                                 ∈
                                 S
                              
                           
                        where 
                           t
                           
                              w
                              
                                 R
                                 
                                    q
                                    ,
                                    m
                                    ,
                                    s
                                 
                              
                           
                         is the responses (R) indicator, s is the target student (i.e. the student evaluated), NS
                         is the number of students in the course, and q is the one of the questions evaluated in the module m.

With respect to trustworthiness normalized levels Ltw
                        
                           N
                        , we managed several indicators composition. The most suitable level in both courses is based on a weight model:
                           
                              (2)
                              
                                 L
                                 t
                                 
                                    w
                                    N
                                 
                                 =
                                 
                                    
                                       ∑
                                       
                                          i
                                          =
                                          1
                                       
                                       
                                          N
                                          I
                                       
                                    
                                    
                                 
                                 
                                    
                                       t
                                       
                                          w
                                          i
                                       
                                       ⋅
                                       
                                          w
                                          i
                                       
                                    
                                    
                                       N
                                       I
                                    
                                 
                                 ,
                                 i
                                 ∈
                                 I
                                 ,
                                 
                                    w
                                    i
                                 
                                 ∈
                                 
                                    
                                       w
                                       1
                                    
                                    …
                                    
                                       w
                                       
                                          N
                                          I
                                       
                                    
                                 
                                 ,
                                 
                                    
                                       ∑
                                       
                                          i
                                          =
                                          1
                                       
                                       
                                          N
                                          I
                                       
                                    
                                    
                                 
                                 
                                    w
                                    i
                                 
                                 =
                                 1
                                 ,
                                 
                                    N
                                    I
                                 
                                 =
                                 |
                                 I
                                 |
                              
                           
                        where NI
                         is the total number of trustworthiness indicators and wi
                         is the weight for the normalized indicator twi
                        .

Regarding data processing, we experimented with sequential and parallel implementations [12]. Sequential approaches were feasible to manage data sources from several activities, such as responses in a survey or number of posts in a forum. However, processing the log data took too long to complete and it had to be done offline (i.e. after the completion of the learning activity). For this reason, we endowed our trustworthiness framework with parallel processing facilities.

To this end, we designed a MapReduce algorithm [12] implemented in an Apache Hadoop
                           2
                        
                        
                           2
                           
                              http://hadoop.apache.org.
                         and deployed in the RDlab
                           3
                        
                        
                           3
                           
                              http://rdlab.lsi.upc.edu.
                         computing cluster. Using this model, a considerable speed up was achieved in processing large log file, namely, more than 75% for 10 nodes (see [12] for the whole results).

Peer-to-peer components were designed considering the time factor. Activities are arranged in stages that conduct the definition of trustworthiness sequences. In both studies, trustworthiness indicators and levels are instanced in points of time (e.g. the same indicator measured for each module) and arranged in trustworthiness sequences. The concept of trustworthiness sequence in an e-assessment component allows us to support assessment and prediction. Actually, it could be directly incorporated, in some cases, as input for assessment and prediction methods. Regarding validation, we experimented with a hybrid validation approach by combining manual, automatic, external, and internal validation methods. As an example of this model, we analysed similarity between manual assessment results and automatic trustworthiness levels. The method to tackle similarity proposed is based on Pearson correlation [35].

Finally, we consider two different methods to deal with prediction. The first approach is based on neural networks [21] and the second one on collaborative filtering. On the one hand, a neural network captures any type of non-linear relationship between input and output. In our case, the input is the trustworthiness history sequence and the output is the prediction calculated by the neural network (i.e. trustworthiness predicted value). On the other hand, filtering recommendation algorithms concern the prediction of the target user's assessment, for the target item that the user has not given the rating, based on the users' ratings on observed items. In our context, items involved in the recommendation system are the students themselves.

In the rest of this paper, we focus the validation of TSM on trustworthiness prediction based on a neural network approach. Furthermore, the methods presented in this section (i.e. trustworthiness data sources, indicators, normalizations processes, and history sequences) are also applied from the view of trustworthiness prediction.

In this section, a trustworthiness prediction model is presented in the context of the real online course based on peer-to-peer e-assessment described in Section 4.1.

Once the peer-to-peer e-assessment has been designed, we analyse and define trustworthiness data sources and levels. In the context of Continuous Assessment (CA), we defined a trustworthiness data source as those data generated by the CA that we use to define trustworthiness levels as presented in [11–13]. Each CA correspond to a module m
                        ∈
                        M, which is a unit of the course. The modules will be used as a point in time references. Each CA (i.e. one CA per module) will manage three data sources, which are denoted with the following ordered tuples:
                           
                              (3)
                              
                                 D
                                 
                                    S
                                    
                                       Q
                                       C
                                    
                                 
                                 =
                                 
                                    M
                                    Q
                                    S
                                    count
                                 
                              
                           
                        where the questionnaire data source 
                           D
                           
                              S
                              
                                 Q
                                 C
                              
                           
                         is defined as the total number of responses (count) that each student in S has answered in the questionnaire Q for the module M.
                           
                              (4)
                              
                                 D
                                 
                                    S
                                    
                                       Q
                                       R
                                    
                                 
                                 =
                                 
                                    M
                                    Q
                                    S
                                    
                                       r
                                       e
                                       s
                                    
                                 
                              
                           
                        where the questionnaire data source 
                           D
                           
                              S
                              
                                 Q
                                 R
                              
                           
                         is defined as the response res (i.e. a student answers res to a question) that each student in S has responded regarding a specific question in Q in the module M.
                           
                              (5)
                              
                                 D
                                 
                                    S
                                    F
                                 
                                 =
                                 
                                    M
                                    F
                                    S
                                    count
                                 
                              
                           
                        where the forum participation data source DS
                        
                           F
                         is defined as the total number of posts (count) that each student in S sent to a forum F regarding a specific question in Q in the module M.
                           
                              (6)
                              
                                 D
                                 
                                    S
                                    R
                                 
                                 =
                                 
                                    M
                                    Q
                                    S
                                    
                                       S
                                       S
                                    
                                    score
                                 
                              
                           
                        where the responses data source denotes the score that a student (in S) has assessed a student's (in SS) response of a question in Q. Hence, S is the set of students who assess and SS is the set of students who are assessed by students in S.

In this case, modelling trustworthiness involves multiple complex and heterogeneous data sources with different formatting, which cannot be managed without normalization. According to the model presented in [13], we define a normalized trustworthiness indicator for the case of a CA as follow:
                           
                              (7)
                              
                                 t
                                 
                                    w
                                    
                                       c
                                       
                                          a
                                          
                                             q
                                             ,
                                             m
                                             ,
                                             s
                                          
                                       
                                    
                                    N
                                 
                                 =
                                 N
                                 
                                    
                                       t
                                       
                                          w
                                          
                                             c
                                             
                                                a
                                                
                                                   q
                                                   ,
                                                   m
                                                   ,
                                                   s
                                                
                                             
                                          
                                       
                                    
                                 
                                 ,
                                 c
                                 a
                                 ∈
                                 D
                                 
                                    S
                                    
                                       R
                                       ,
                                       F
                                       ,
                                       
                                          Q
                                          r
                                       
                                       ,
                                       
                                          Q
                                          c
                                       
                                    
                                 
                                 ,
                                 q
                                 ∈
                                 Q
                                 ,
                                 m
                                 ∈
                                 M
                                 ,
                                 s
                                 ∈
                                 S
                              
                           
                        where 
                           D
                           
                              S
                              
                                 R
                                 ,
                                 F
                                 ,
                                 
                                    Q
                                    r
                                 
                                 ,
                                 
                                    Q
                                    c
                                 
                              
                           
                         are the CA data sources, S is the set of students, M is the set of modules, and Q is the set of questions in each module.

We now define the normalization functions. Note that although in [13] we included four normalization functions, in this case, a subset is selected: N
                        2 and N
                        4. The reason for this is that we focus the data analysis on two data sources, forum participation (N
                        4) and questionnaires (N
                        2). Regarding the responses data source R, a student can assess every classmate's responses. To this end, we use the normalization function N
                        2:
                           
                              (8)
                              
                                 
                                    N
                                    2
                                 
                                 
                                    
                                       t
                                       
                                          w
                                          
                                             R
                                             
                                                q
                                                ,
                                                m
                                                ,
                                                s
                                             
                                          
                                       
                                    
                                 
                                 =
                                 
                                    
                                       ∑
                                       
                                          i
                                          =
                                          1
                                       
                                       
                                          N
                                          S
                                       
                                    
                                    
                                 
                                 
                                    
                                       t
                                       
                                          w
                                          
                                             R
                                             
                                                q
                                                ,
                                                m
                                                ,
                                                i
                                             
                                          
                                       
                                    
                                    
                                       
                                          N
                                          S
                                       
                                       −
                                       1
                                    
                                 
                                 ,
                                 i
                                 ≠
                                 s
                              
                           
                        where 
                           t
                           
                              w
                              
                                 R
                                 
                                    q
                                    ,
                                    m
                                    ,
                                    s
                                 
                              
                           
                         is the responses indicator, s is the target student (i.e. the student who is assessed), N
                        S is the number of students in the course, and q is the one of the questions assessed in the module m.

It is worth mentioning that the scale for 
                           t
                           
                              w
                              
                                 R
                                 
                                    q
                                    ,
                                    m
                                    ,
                                    s
                                 
                              
                           
                         must be converted to integer values before normalizing with function N
                        2. Similarity, the forum participation indicator also needs normalization. In this case, we apply the normalization function N
                        4:
                           
                              (9)
                              
                                 
                                    N
                                    4
                                 
                                 
                                    
                                       t
                                       
                                          w
                                          
                                             F
                                             ,
                                             m
                                             ,
                                             s
                                          
                                       
                                    
                                 
                                 =
                                 
                                    
                                       t
                                       
                                          w
                                          
                                             F
                                             ,
                                             m
                                             ,
                                             s
                                          
                                       
                                    
                                    
                                       T
                                       F
                                    
                                 
                                 ,
                                 m
                                 ∈
                                 M
                                 ,
                                 s
                                 ∈
                                 S
                              
                           
                        where T
                        F is the maximum number of post in the forum by a student s in the module m.

We normalize the trustworthiness indicators for forum participation and responses (i.e. a student answers a question in the questionnaire). Then, trustworthiness levels [11] are defined in order to measure students' overall trustworthiness. To this end, we define the following trustworthiness levels:
                           
                              (10)
                              
                                 
                                    L
                                    I
                                    N
                                 
                                 =
                                 
                                    
                                       ∑
                                       
                                          i
                                          =
                                          1
                                       
                                       
                                          N
                                          I
                                       
                                    
                                    
                                 
                                 
                                    
                                       
                                          t
                                          
                                             w
                                             i
                                             N
                                          
                                          *
                                          
                                             w
                                             i
                                          
                                       
                                    
                                    
                                       N
                                       I
                                    
                                 
                                 ,
                                 i
                                 ∈
                                 I
                                 ,
                                 
                                    w
                                    i
                                 
                                 ∈
                                 
                                    
                                       w
                                       1
                                    
                                    …
                                    
                                       w
                                       
                                          N
                                          I
                                       
                                    
                                 
                                 ,
                                 
                                    
                                       ∑
                                       
                                          i
                                          =
                                          1
                                       
                                       
                                          N
                                          I
                                       
                                    
                                    
                                 
                                 
                                    w
                                    i
                                 
                                 =
                                 1
                              
                           
                        where NI
                         is the total number of trustworthiness indicators and wi
                         is the weight assigned to twi
                        .

Following this model, we first combine the trustworthiness indicators of each question in the module and then, the overall trustworthiness level for the student in a specific module m
                        ∈
                        M is defined:
                           
                              (11)
                              
                                 
                                    L
                                    
                                       R
                                       ,
                                       m
                                       ,
                                       s
                                    
                                    N
                                 
                                 =
                                 
                                    
                                       ∑
                                       
                                          q
                                          =
                                          1
                                       
                                       
                                          N
                                          Q
                                       
                                    
                                    
                                 
                                 
                                    
                                       
                                          t
                                          
                                             w
                                             q
                                             N
                                          
                                          *
                                          
                                             w
                                             q
                                          
                                       
                                    
                                    
                                       N
                                       Q
                                    
                                 
                                 ,
                                 q
                                 ∈
                                 Q
                                 ,
                                 
                                    N
                                    Q
                                 
                                 =
                                 |
                                 Q
                                 |
                                 ,
                                 
                                    
                                       ∑
                                       
                                          q
                                          =
                                          1
                                       
                                       
                                          N
                                          Q
                                       
                                    
                                    
                                 
                                 
                                    w
                                    q
                                 
                                 =
                                 1
                                 ,
                                 
                                    w
                                    q
                                 
                                 =
                                 
                                    1
                                    
                                       N
                                       Q
                                    
                                 
                                 ,
                                 m
                                 ∈
                                 M
                                 ,
                                 s
                                 ∈
                                 S
                              
                           
                        
                        
                           
                              (12)
                              
                                 
                                    L
                                    
                                       F
                                       ,
                                       m
                                       ,
                                       s
                                    
                                    N
                                 
                                 =
                                 
                                    N
                                    4
                                 
                                 
                                    
                                       t
                                       
                                          w
                                          
                                             F
                                             ,
                                             m
                                             ,
                                             s
                                          
                                       
                                    
                                 
                                 ,
                                 m
                                 ∈
                                 M
                                 ,
                                 s
                                 ∈
                                 S
                              
                           
                        
                        
                           
                              (13)
                              
                                 
                                    L
                                    
                                       m
                                       ,
                                       s
                                    
                                    N
                                 
                                 =
                                 
                                    
                                       ∑
                                       
                                          j
                                          =
                                          1
                                       
                                       2
                                    
                                    
                                 
                                 
                                    
                                       
                                          L
                                          t
                                          
                                             w
                                             j
                                             N
                                          
                                          *
                                          
                                             w
                                             j
                                          
                                       
                                    
                                    2
                                 
                                 ,
                                 j
                                 ∈
                                 
                                    
                                       L
                                       
                                          F
                                          ,
                                          m
                                       
                                       N
                                    
                                    
                                       L
                                       
                                          R
                                          ,
                                          m
                                       
                                       N
                                    
                                 
                                 ,
                                 
                                    
                                       ∑
                                       
                                          j
                                          =
                                          1
                                       
                                       2
                                    
                                    
                                 
                                 
                                    w
                                    j
                                 
                                 =
                                 1
                                 ,
                                 w
                                 =
                                 
                                    
                                       0.4
                                       ,
                                       
                                       0.6
                                    
                                 
                                 ,
                                 m
                                 ∈
                                 M
                                 ,
                                 s
                                 ∈
                                 S
                              
                           
                        where L
                        
                           m,s
                        
                        
                           N
                         is the overall trustworthiness level for the student s in the module m, calculated by combining the trustworthiness level for responses L
                        
                           R,m,s
                        
                        
                           N
                         and the trustworthiness level for forum participation L
                        
                           F,m,s
                        
                        
                           N
                        .

Once trustworthiness levels are defined, we endow our model with time factor. Although the concept of trustworthiness sequence was defined in the context of grid services and requesters [25], it is feasible to apply this approach to another modelling scenario such as peer-to-peer e-assessment. The only requirement is time factor, in other words, the model should allow us to compute an overall trustworthiness level referred to multiple points of time. Therefore, we define Continuous Assessment Trustworthiness Sequence CATS as the ordered list of a student's trustworthiness history levels over several points in time:
                           
                              (14)
                              
                                 CAT
                                 
                                    S
                                    s
                                 
                                 =
                                 
                                    
                                       L
                                       
                                          
                                             m
                                             1
                                          
                                          ,
                                          s
                                       
                                       N
                                    
                                    …
                                    
                                       L
                                       
                                          
                                             m
                                             k
                                          
                                          ,
                                          s
                                       
                                       N
                                    
                                    …
                                    
                                       L
                                       
                                          
                                             m
                                             
                                                N
                                                M
                                             
                                          
                                          ,
                                          s
                                       
                                       N
                                    
                                 
                                 
                                    m
                                    k
                                 
                                 ∈
                                 M
                                 ,
                                 s
                                 ∈
                                 S
                              
                           
                        where M is the set of modules, each module mk
                         refers to a point in time and 
                           
                              L
                              
                                 
                                    m
                                    k
                                 
                                 ,
                                 s
                              
                              N
                           
                         is the overall trustworthiness level for the student s in the module mk
                        .

Likewise, we can define the overall students' CA trustworthiness history sequence as the matrix:
                           
                              (15)
                              
                                 CATS
                                 =
                                 
                                    
                                       
                                          
                                             
                                                L
                                                
                                                   
                                                      m
                                                      1
                                                   
                                                   ,
                                                   
                                                      s
                                                      1
                                                   
                                                
                                                N
                                             
                                          
                                          
                                             ⋯
                                          
                                          
                                             
                                                L
                                                
                                                   
                                                      m
                                                      1
                                                   
                                                   ,
                                                   
                                                      s
                                                      
                                                         N
                                                         S
                                                      
                                                   
                                                
                                                N
                                             
                                          
                                       
                                       
                                          
                                             ⋮
                                          
                                          
                                             ⋱
                                          
                                          
                                             ⋮
                                          
                                       
                                       
                                          
                                             
                                                L
                                                
                                                   
                                                      m
                                                      
                                                         N
                                                         M
                                                      
                                                   
                                                   ,
                                                   
                                                      s
                                                      1
                                                   
                                                
                                                N
                                             
                                          
                                          
                                             ⋯
                                          
                                          
                                             
                                                L
                                                
                                                   
                                                      m
                                                      
                                                         N
                                                         M
                                                      
                                                   
                                                   ,
                                                   
                                                      s
                                                      
                                                         N
                                                         S
                                                      
                                                   
                                                
                                                N
                                             
                                          
                                       
                                    
                                 
                              
                           
                        where NM
                         is the number of modules (i.e. points in time analysed), and NS
                         is the number of students in the course.

Processing trustworthiness sequences results involves large amount of data generated by the peer-to-peer activity of the CA. To this end, we compute the following elements:
                           
                              1.
                              The trustworthiness history sequence matrix has N
                                 
                                    S
                                 
                                 *
                                 N
                                 
                                    M
                                 ,
                                 N
                                 
                                    S
                                 
                                 =|S|,
                                 N
                                 
                                    M
                                 
                                 =|M| elements.

For each element in CATS, L
                                 
                                    m,s
                                 
                                 
                                    N
                                 , we compute both forum participation and responses trustworthiness levels.

Although forum participation is a single indicator, with respect to responses, there are three different questions.

Moreover, for each trustworthiness levels we compute each student's score for the indicator.

With the aim of managing this trustworthiness sequences results, we developed a data parse Java tool called parse_tw_tuples that converts peer-to-peer values into basic tuples presented above. This tool generates basic tuples from the web applications and these primitive records can be imported in a relational database for further processing. In order to deal with the results, we have to consider the size of the result set of records generated by each data source. At the end of the process the responses data source maximum size is:
                           
                              (16)
                              
                                 |
                                 D
                                 
                                    S
                                    R
                                 
                                 |
                                 =
                                 |
                                 M
                                 |
                                 ×
                                 
                                    
                                       |
                                       Q
                                       |
                                       +
                                       1
                                    
                                 
                                 ×
                                 |
                                 S
                                 |
                                 ×
                                 |
                                 S
                                 |
                              
                           
                        where |M| is the number of modules, |Q| is the number of questions (+1 is added because the student also assesses the forum activity), and |S| is the number of students who could participate in both questionnaires (i.e. Q and P).

The total number of computed tuples is:
                           
                              (17)
                              
                                 |
                                 D
                                 
                                    S
                                    R
                                 
                                 |
                                 =
                                 10.522
                              
                           
                        
                     

To sum up, the diagram depicted in Fig. 5
                         shows the overall process including how we have to normalize data sources. Then, this figure shows the creation of trustworthiness indicators and levels, and finally, the procedure presented to compose trustworthiness sequences.

So far, we have presented the design of trustworthiness history sequences in the peer-to-peer assessment components of the target online course. To this end, we have to consider the main concepts presented in [25] related to trustworthiness history sequence as a foremost step in trustworthiness prediction based on neural network design.

Active trustworthiness history sequence is the recent trustworthy history sequence. Then, we define active CA trustworthiness history sequence CATS
                        
                           s
                        
                        
                           a
                         as the ordered list of students' trustworthiness levels over the points in time:
                           
                              (18)
                              
                                 CAT
                                 
                                    S
                                    s
                                 
                                 =
                                 
                                    
                                       L
                                       
                                          
                                             m
                                             1
                                          
                                          ,
                                          s
                                       
                                       N
                                    
                                    …
                                    
                                       L
                                       
                                          
                                             m
                                             k
                                          
                                          ,
                                          s
                                       
                                       N
                                    
                                    …
                                    
                                       L
                                       
                                          
                                             m
                                             
                                                N
                                                M
                                             
                                          
                                          ,
                                          s
                                       
                                       N
                                    
                                 
                                 ,
                                 
                                    m
                                    k
                                 
                                 ∈
                                 M
                                 ,
                                 s
                                 ∈
                                 S
                              
                           
                        
                        
                           
                              (19)
                              
                                 CAT
                                 
                                    S
                                    s
                                    a
                                 
                                 =
                                 
                                    
                                       L
                                       
                                          
                                             m
                                             
                                                
                                                   N
                                                   Q
                                                
                                                −
                                                a
                                                +
                                                1
                                             
                                          
                                          ,
                                          s
                                       
                                       N
                                    
                                    
                                       L
                                       
                                          
                                             m
                                             
                                                
                                                   N
                                                   Q
                                                
                                                −
                                                a
                                                +
                                                2
                                             
                                          
                                          ,
                                          s
                                       
                                       N
                                    
                                    …
                                    
                                       L
                                       
                                          
                                             m
                                             
                                                N
                                                M
                                             
                                          
                                          ,
                                          s
                                       
                                       N
                                    
                                 
                                 ,
                                 s
                                 ∈
                                 S
                              
                           
                        where M is the set of modules, each module mk
                         refers to a point in time, and 
                           
                              L
                              
                                 
                                    m
                                    k
                                 
                                 ,
                                 s
                              
                              N
                           
                         is the overall trustworthiness level for the student s in each module.

Constrictive trustworthy history is the subsection average of active trustworthy history sequence.
                           
                              (20)
                              
                                 CAT
                                 
                                    S
                                    s
                                    c
                                 
                                 =
                                 
                                    
                                       L
                                       
                                          
                                             m
                                             
                                                1
                                                …
                                                
                                                   N
                                                   S
                                                
                                             
                                          
                                          ,
                                          s
                                       
                                       N
                                    
                                    
                                       L
                                       
                                          
                                             m
                                             
                                                r
                                                +
                                                1
                                                …
                                                
                                                   N
                                                   Q
                                                
                                             
                                          
                                          ,
                                          s
                                       
                                       N
                                    
                                    …
                                 
                                 ,
                                 s
                                 ∈
                                 S
                              
                           
                        where each element in the tuple is the average of a subset of elements in CATS
                        
                           s
                        
                        
                           a
                        , and k is the number of inputs of NN.

These tuples are presented in order to prepare those input sets that are required in neural network training and validation. The concept of trustworthiness sequences in prediction with neural networks is also suggested in [21]. In this proposal, the trustworthiness sequence is split into subsequences of fixed sizes, without average transformation:
                           
                              (21)
                              
                                 CAT
                                 
                                    S
                                    s
                                    W
                                 
                                 =
                                 
                                    
                                       L
                                       
                                          
                                             m
                                             1
                                          
                                          ,
                                          s
                                       
                                       N
                                    
                                    …
                                    
                                       L
                                       
                                          
                                             m
                                             w
                                          
                                          ,
                                          s
                                       
                                       N
                                    
                                 
                                 ,
                                 
                                    
                                       L
                                       
                                          
                                             m
                                             
                                                w
                                                +
                                                1
                                             
                                          
                                          ,
                                          s
                                       
                                       N
                                    
                                    …
                                    
                                       L
                                       
                                          
                                             m
                                             
                                                2
                                                w
                                             
                                          
                                          ,
                                          s
                                       
                                       N
                                    
                                 
                                 ,
                                 …
                                 ,
                                 s
                                 ∈
                                 S
                              
                           
                        where each component in the trustworthiness window is a subset of the CATS
                        
                           s
                        .

We reviewed complementary related trustworthiness prediction work. Among existing models, we select the neural network-based approaches for predicting trust values presented in [21] and [25], because these approaches are feasible in the context of e-assessment. These models present several significant differences, especially with respect to how to build training sets, these differences are considered in our e-assessment proposal. Although we evaluated both approaches, in the rest of the paper, we address our NN design to a training model based on CATS
                        
                           s
                        
                        
                           W
                        . We consider this approach more suitable for our case because CATS
                        
                           s
                        
                        
                           W
                         generates a greater amount of training sequences.

A neural network can capture any type of non-linear relationship between input and output data through iterative training. In our case, the input is the CA trustworthiness history sequence formed by trustworthiness results generated by the peer-to-peer assessment component, and the output is the prediction calculated by the neural network (i.e. trustworthiness predicted value):
                           
                              (22)
                              
                                 
                                    L
                                    
                                       
                                          m
                                          
                                             t
                                             +
                                             1
                                          
                                       
                                       ,
                                       s
                                    
                                    N
                                 
                                 =
                                 N
                                 N
                                 
                                    
                                       CAT
                                       
                                          S
                                          s
                                       
                                    
                                 
                                 ,
                                 s
                                 ∈
                                 S
                              
                           
                        where entity s denotes the student whose normalized trustworthiness level value is being predicted through the CATS
                        
                           s
                         representing data generated by the peer-to-peer activity of the CA, and m
                        
                           t
                           +1 denotes the trustworthiness point in time in the future predicted by the function NN for the student s (i.e. the output of the NN).

As presented in [21], the main principle of neural computing is the decomposition of the input–output relationship into a series of linearly separable steps using hidden layers. The NN architecture (see Fig. 6
                        ) is composed of sets of neurons that are arranged in multiple layers. The first layer, which inputs are fed to the network, is called the input layer. The last layer, which produces the NN output, is called the output layer. The layers in between these two layers (i.e. between input and output layers) are all hidden layers. The input consists of values that constitute the inputs for the hidden layers.

Every node computes a weighted function of its inputs and applies an activation function to compute the next output. The output is transmitted to all the connected nodes on the next layer with associated weights. The activation of each node depends on the bias of the node, which calculates the output as follows:
                           
                              (23)
                              
                                 
                                    y
                                    j
                                 
                                 =
                                 
                                    
                                       ∑
                                       
                                          i
                                          =
                                          0
                                       
                                       n
                                    
                                    
                                 
                                 
                                    w
                                    
                                       i
                                       j
                                    
                                 
                                 
                                    x
                                    i
                                 
                              
                           
                        where y is the result of the summation of the product of the input x with its associated interconnection weight w. The initial weights are assigned randomly but are gradually changed to reduce the error. The difference between the desired output and the actual output constitutes the input to the back propagation algorithm for training the network based on the difference.

Through the iterative training, the NN produces better prediction accuracy in the domain of time series prediction, such as trustworthiness history sequences.

With the aim of implementing the NN for trustworthiness prediction, we evaluated several simulators. Among them, we selected Emergent
                        
                           4
                        
                        
                           4
                           
                              https://grey.colorado.edu/emergent/.
                         as a suitable software tool that reaches all the requirements for our case. Emergent (formerly PDP++) is defined as a comprehensive, full-featured deep neural network simulator that enables the creation and analysis of complex, sophisticated models [36]. The main reasons to use Emergent in the context of this paper can be summarized as follow:
                           
                              •
                              
                                 Emergent provides powerful visualization and infrastructure tools.

Provides a structured environment for using and modify models based on NN templates, as well as, test and training programmes.


                                 Emergent is completely open source software.

Highly optimized runtime performance. In fact, we deployed the simulator environment in a virtual machine running on a personal computer.

With the aim of developing a first simulation approach in Emergent, we carried out the following tasks:
                           
                              1.
                              A new simulation project was created based on the template BpStd (i.e. standard initialization of back-propagation). This resource is provided by Emergent and allows the designer to begin the neural network design from a standard configuration.

As shown in Fig. 7
                                  we generated and configured a standard network, specifying number of layers, layer names, sizes, types, and connectivity. The NN is formed by 3 layers with 2 input values and 1 output. In terms of Emergent design, the geometry for both input and hidden layers is a 2 units×1 units matrix.

The NN geometry corresponds to the size of the data contained in the StdInputData table. This table contains each student's trustworthiness window sequence CATS
                                 
                                    s
                                 
                                 
                                    W
                                  defined in Section 5.4. The data import process was managed through text file elements (see Fig. 8
                                 ). Emergent offers import and export tools that bind the StdInputData tables and the text files.

Once NN basic design and input data were configured, the next step was the training process of the NN. Following the model defined in Section 5.4, we split the input values for each student into two trustworthiness sequences (i.e. training and test). The training trustworthiness window sequence contained 5 instances (i.e. time slots or modules in the course), which were arranged in tuples of 3 elements. The 3-tuple was also divided into the input values and the output result. Therefore, for each CATS
                                 
                                    s
                                 
                                 
                                    W
                                  sequence we generate tuples of 3 elements containing the 2 input values and the output expected value.

The training process is managed by Emergent in the BpTrain programme whose initial parameters are shown in Fig. 9
                                 .

Finally, we introduced the test elements in order to validate the model.

The deviation in prediction results for each student is depicted in Fig. 10
                        . The sample of the experiment was formed by 12 students. Fig. 10 presents the results obtained from the NN simulation process for each student. The horizontal axis represents students and the vertical axis represents the difference between the value predicted by the NN and the test value (i.e. the prediction error in absolute value). For instance, the NN for the student 5 predicted a value with a 2.54% of error.

Interestingly, regarding overall error prediction, the results reveal a notable similarity between the test and predicted values. However, the observed difference between the trustworthiness levels through the modules is not significant. Therefore, the model is suitable for this students' trustworthiness behaviour, but we cannot demonstrate the stability of this prediction approach for other cases (i.e. more differences in trustworthiness evolution).

With respect to e-assessment security, the most significant finding is related to detect anomalous user assessment. From these data, 2 students (student 6 and 9), whose error prediction is greater than 3%, were found anomalous and required further investigation for potential cheating in order to validate the authenticity of the students' learning process.

Finally, we discovered that the number of modules in the course (i.e. the slots or the points in time) must be increased. If the number of training instances is increased, the student's NN will be able to accurately predict more trustworthiness different cases (not only those cases with low variation in trustworthiness evolution).

In this paper, we first motivated the need to improve information security in mobile online collaborative learning and in particular MCSCL supported by mobile devices. To this end, we justified the feasibility of an approach focused on functional solutions, namely, based on trustworthiness assessment and prediction. The study reviewed the main works in the literature on security in mobile collaborative learning, how trustworthiness assessment and prediction are related to security, the time factor in trustworthiness modelling, and trustworthiness existing methodologies.

Then, we proposed an innovative trustworthiness and security methodological approach to build secure collaborative activities devoted to offering a comprehensive guideline for e-Learning designers and managers. The architecture of the methodology is based on building trustworthiness learning components, trustworthiness analysis and data processing, and trustworthiness assessment and prediction. We first described the main theoretical features of our methodological approach and then, the summary of its key phases is presented. Finally, we detailed each phase by analysing the processes, data, and components involved in the methodology.

The methodology was evaluated by presenting specific methods and techniques applied to real online courses. We used two studies, based on real online courses at the Open University of Catalonia, to evaluate and support the application and deployment of our trustworthiness methodology. Several significant aspects of our methodology were considered in terms of specific methods and techniques through their application in these real online courses.

Finally, we have presented an innovative prediction approach for trustworthiness behaviour to enhance security in online assessment. This study showed how neural network methods may support e-assessment prediction. These e-assessment prediction methods were performed in a real online course based on peer-to-peer assessment processes and mobile online collaborative activities. The processes and learning activities involved in the course were encapsulated as continuous assessment component. Moreover, from this component, we presented the design of trustworthiness history sequences with the aim of designing a neural network e-assessment proposal.

The most relevant findings that emerge from the results presented in this paper are related to trustworthiness methodological applications and trustworthiness prediction models. Regarding the trustworthiness methodology proposed, we supported the application and deployment of the methodology in two real online courses. The learning activities performed in the course were designed following the theoretical features, phases, data, and processes of our methodological approach. With respect to trustworthiness prediction, we demonstrated the feasibility of our neural network prediction approach. Regarding the overall error prediction, the results revealed a notable similarity between the test and predicted values. From these results, we were able to detect anomalous user assessment. From these data, 2 students, whose error prediction is greater than 3%, were found anomalous and required further investigation.

As ongoing work, we plan to continue the methodology testing and evaluation process by deploying its components in additional real online courses. Due to further deployments will require large amount of data analysis, we will continue investigating parallel processing methods to manage trustworthiness factors, indicators, and levels. Moreover, we would also like to investigate the use of location-based information of mobile learners to our approach, with the aim of improving trustworthiness assessment and then, trustworthiness prediction.

Finally, we discovered that the number of training instances should be increased. Therefore, with the aim of enhancing the prediction model, we plan to modify the learning activity presented in this study in order to generate more training instances. Hence, the student's neural network will be able to accurately predict more trustworthiness different cases (not only those cases with low variation in trustworthiness evolution).

@&#ACKNOWLEDGEMENT@&#

This research was partly funded by the Spanish Government through the following projects: TIN2011-27076-C03-02 “CO-PRIVACY”; CONSOLIDER INGENIO 2010 CSD2007-0 004 “ARES”; TIN2013-45303-P “ICT-FLAG” Enhancing ICT education through Formative assessment, Learning Analytics and Gamification; and by funds from the Spanish Ministry for Economy and Competitiveness (MINECO) and the European Union (FEDER funds) under grant COMMAS (ref. TIN2013-46181-C2-1-R).

@&#REFERENCES@&#

