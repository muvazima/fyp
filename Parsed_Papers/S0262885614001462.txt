@&#MAIN-TITLE@&#A local approach for 3D object recognition through a set of size functions

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           The 3D object is split into 18 portions according to its principal axes.


                        
                        
                           
                           Each portion is represented by a size function.


                        
                        
                           
                           A well suited similarity measure is used to compare between the 3D objects.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

3D model description

Object recognition

Object categorization

Shape classification

@&#ABSTRACT@&#


               
               
                  In this paper, a local approach for 3D object recognition is presented. It is based on the topological invariants provided by the critical points of the 3D object. The critical points and the links between them are represented by a set of size functions obtained after splitting the 3D object into portions. A suitable similarity measure is used to compare the sets of size functions associated with the 3D objects. In order to validate our approach's recognition performance, we used different collections of 3D objects. The obtained scores are favourably comparable to the related work.
               
            

@&#INTRODUCTION@&#

The recognition of 3D objects has been widely studied during the last decade [29,30]. Its applications are various, including medical imaging [31,32], virtual reality [33], face detection [34,35], cultural heritage [36], and quality control [37]. The principle is to recognize 3D objects based on their shape properties extracted by the mean of a shape descriptor. The recognition process has three major steps. The first step is the computation of descriptors, which can be global [1], local [2], structural [11,12,53], transform-based [6,59], or view-based [7,52]. The second step is the similarity measure which can be distance-based [17], probability-based [18], or graph-based [48]. A decision-making process is performed in the third step in order to classify the 3D objects according to the similarity measure used, and it can be hard [29,30], or soft [30,50].

In our work, we chose to take advantage of the topological invariants provided by the critical points of the 3D object and the link between them. In fact, the critical points and the links between them provide the topological changes of the 3D object through a function defined on it. The topological changes have been previously used for 2D and 3D object recognition [8–12,16,54]. The main idea behind the definition of the size function consists in encoding quantitatively these topological changes. In fact, it relies on a real continuous function defined on the shape called measure function [11], which is chosen to capture some specific features of the 3D object [10].

This paper is organized as follows: in Section 2, the related work is presented and discussed. Our proposed method is detailed in Section 3. The pre-processing stage of the 3D objects is detailed in Section 4. The interpretation of the obtained results using the proposed method and some well-known methods is presented in Section 5. Finally, conclusions and future work are presented in Section 6.

@&#RELATED WORK@&#

The 3D object recognition can be implemented by the comparison of a 3D object to several objects, several objects to a model, or several objects to several models [50]. The decision can be hard [29,30], in this case the 3D object can be described or not by one of the 3D models. It can be soft [30,55]; in this case, the 3D models are sorted according to their resemblance to the 3D object to be recognized. Indeed, there are several strategies to identify similar objects such as the nearest neighbours [50], the ranking [50], the Bayesian decision rule [49,60], the risk functions [67], and the discrimination [68].

The criterion of similarity and decision is strongly related to the feature space and to the 3D object collection's size [50,51]. The 3D shape descriptors can be regrouped into five categories [20,21] which are global, local, transform-based, views-based, and structural. In what follows, we present the different groups of approaches, and we indicate for each one of them the description principle, the similarity measure, and the used decision.

In the global approaches, the description of the 3D object relies on the measure of its geometric properties. It can be performed by calculating, for example, distances between vertices, or by a histogram associated with a specific feature of the 3D object. Ion et al. [1] described the 3D object by an eccentricity histogram of its vertices. The similarity measure between the 3D objects is performed by using the Euclidean distance between their associated histograms, and the decision is soft. Rabin et al. [3] characterized the 3D object by a global descriptor that contains the geodesic information of its mesh. At first, the 3D object is sampled to 500 vertices. Afterwards, for each mesh vertex representing the 3D object, the geodesic distance, the median geodesic distance, and the eccentricity transforms are computed. The global descriptor associated with the 3D object is composed of the geodesic information of the 500 vertices. Finally, the similarity measure between the 3D objects is performed by using the distance of Wasserstein [61] between their associated global descriptors, and the decision is soft.

In the local approaches, the description of the 3D object relies on the neighborhood of each vertex on it. Assflag et al. [2] developed the idea that the shape of a 3D object can be described by its surface curvature map. The description of the 3D object is performed in four steps. The first step consists in smoothing and decimating the vertices of the 3D object. During the second step, the principal curvatures are estimated on each vertex. The third step consists in deforming the surface of the 3D object to adapt it to a surface of a sphere and keep up the curvatures of the initial surface. The mesh's surface obtained after the deformation is projected to an image which encodes the vertex's position and curvatures of the original surface in the fourth stage. The obtained image represents the curvature map of the 3D object. The similarity measure between the 3D objects is performed by using the distance of Kolmogorov–Smirnov between their associated curvature map, and the decision is soft. Xiaofeng et al. [71] described the 3D object by the projected areas of its mesh's vertices. At first, for each vertex of the mesh that represents the 3D object, the projected area on the vertical plane of the normal vector is computed. Afterwards, the result is transferred to the 1D Fourier transform to obtain the integral invariants from which the feature vector is formed. Finally, the similarity measure between the 3D objects is performed by using the Euclidean distance between their associated feature vectors, and the decision is soft.

The idea of the transform-based approaches is that in the transform domain, some coefficients of high frequency contain most of the energy, especially when the transform is orthogonal. For this purpose, the description of the 3D object relies upon the use of these coefficients as a feature vector. Vranic et al. [6] used the coefficients of the Fourier transform like a feature vector which represents the 3D object. At first, the 3D object is centred, scaled, and aligned by the principal component analysis [15] in order to ensure invariance to translation, scale, and orientation. Afterwards, the 3D object is discretized in a grid of voxels. Finally, the first 172 coefficients of Fourier are computed, which form the feature vector of the 3D object. The similarity measure between the 3D objects is performed by using the Euclidean distance between their associated feature vectors, and the decision is soft. Laga et al. [59] developed three 3D object descriptors extracted from the spherical wavelet. In the two other descriptors, the feature vectors of the 3D object are formed respectively from the L
                     1, and L
                     2 energies of the spherical wavelet sub-bands. At first, the 3D object is uniformly sampled using a geodesic dome. Afterwards, the three descriptors associated with the 3D object are computed. Finally, the similarity measure between the 3D objects is performed by using the L
                     2-distance between their associated feature vectors, and the decision is soft.

In the view-based approaches, the 3D object is represented by a set of 2D views, where each one is described by a 2D descriptor. Vranic [7] described a 3D object by six depth images. In order to ensure invariance to translation, to scale, and to orientation, the 3D object is normalized by the principal component analysis [15]. Subsequently, the 3D object is set within its bounding box from which the six gray level depth images are computed and transformed in the Fourier domain. The feature vector is composed of the absolute value of the Fourier coefficients of the six depth images. The similarity measure between the 3D objects is performed by using the Euclidean distance of their associated feature vectors, and the decision is soft. Mahmoudi et al. [56] described the 3D object by seven characteristic 2D views. Each 2D view is represented by the curvature scale space descriptor of its 2D shape [57]. For the similarity measure between the 3D objects, the authors used the geodesic distance defined in [66] in order to compare the curvature scale space descriptors of their associated 2D views, and the decision is soft.

In the structural approaches, the description of the 3D object relies on the analysis of its topological changes based on a function defined on it. The size function has been used for 3D objects matching for the first time in the work of Biasotti et al. [11]. At first, they described the 3D object by a suitable skeletal graph based on the construction of a centreline skeleton. Afterwards, they defined the skeletal graph by a set of measure functions, which captures quantitative attributes of the 3D object, and they computed the associated size functions with the help of D'Amico's algorithm [23]. A suitable distance between size functions is used to perform the similarity measure between the 3D objects, and the decision is soft. In another work, multidimensional size functions are introduced [12] to describe the 3D object defined by either triangular meshes or by voxel volume. The idea is that the shape of a 3D object can be described by a set of measuring functions, each one representing some specific features of the 3D object. In order to reuse the 1D size functions' principles, they conceived a theorem which generalizes the 1D size functions' concepts for the multidimensional case. For the similarity measure, they developed a lower bound matching distance to compare the multidimensional size functions associated with the 3D objects, and the decision is soft.


                     Table 1
                      represents a summary of the mentioned methods for describing 3D objects, which belong to the five approaches of 3D object recognition. From Table 1, we noticed that most of the description methods rely on the triangular mesh that represents the 3D object. The usage choice of descriptors presented in Table 1 is related to the collection of the 3D objects, which categories may contain some specific problems. For example, structural descriptors [11,12] and global descriptors [1,3] showed invariance to affine transforms, to articulations, and to torsions when they were validated using the articulated 3D models of the 3D object collection of McGill [19]. We noticed that some of these descriptors [1,11,12] were validated by using only 255 3D models of the 3D object collection of McGill. Meanwhile, the description process for all the mentioned methods did not rely on the contextual information of the 3D objects, because the used collections of 3D objects contain isolated 3D models. For the similarity measure, most of the description methods used the Euclidean distance in order to compare between the 3D objects through their associated feature vectors. However, the structural descriptors rely on the correspondence between the graph-based features representing the 3D objects as a similarity measure. Regarding the decision, the retrieval process is performed by using a soft decision for all the mentioned descriptors.

Unlike the first work of Biasotti et al. [11], which requires the definition of the triangular mesh by skeletal graph before the descriptions by the set of size functions, and the second work of Biasotti et al. [12], where the description of the 3D object relies on a multidimensional size function resulting from a multidimensional measure function defined on its whole, our method takes advantage of the different spatial information provided by each benchmark axis. For that purpose, the 3D object is split into a set of portions. Each portion is described by a size function resulting from a measure function, which is chosen to capture the concavity and the convexity features of the 3D object. In the next section, we will go further into the principles of size functions in the context of 3D object recognition.

@&#PROPOSED METHOD@&#

The size function has been developed since the beginning of the 1990s by Frosini et al. [69] and Verri et al. [70]. It was used by Handouyahia et al. [9] for the recognition of sign language, by Ferri et al. [4] for the automatic classification of white blood cells, by D'Amico et al. [45] for the automatic classification of melanocytic lesions, and by Biasotti et al. [11,12] for the 3D object recognition. Its principle is to describe the 3D object by encoding the topological changes provided by its critical points and the links between them. In fact, the critical points are those of a real function defined on the 3D object, called measure function. The values taken by the measure function on its critical points are called critical values. A critical point can be a local or a global maximum or minimum or saddle point of the measure function defined on the 3D object. The idea is to describe the 3D object by a feature as a function. For example, the measure function can be the distance between the centre of the mass of the 3D object and another of its points. The critical points of this function may have physical significations, such as the appearance or disappearance of one or several connected components. The computation of critical points is performed by a topological analysis of the measure function as it will be explained in Section 3.1. To illustrate, we consider the cyclide in Fig. 1(a) defined by a function φ which takes values in the R axis. The critical points P
                     1, P
                     2, P
                     3, and P
                     4 associated with the critical values a, b, c, and d, indicate the appearance or the disappearance of one or several connected components. For example, between the critical values a and b associated with the critical points P
                     1 and P
                     2, there is an only one connected component, between the critical values b and c associated with the critical points P
                     2 and P
                     3, there are two connected components, and so on.

However, if we associate with the same cyclide a measure function ψ that takes values in the R
                     ′ axis, it will be described by other critical points, and consequently by other connected components as illustrated in Fig. 2
                     . Therefore, the definition of different measure functions in the same 3D object leads to different descriptions.

Let M be a connected topological space endowed by a continuous function φ defined as follows: φ
                        :
                        M
                        →ℝ. The pair (φ,
                        M) is called a size pair, and φ is the measure function. Let l
                        (M,φ)
                        :ℝ×ℝ→ℕ∪{∞} defined by l
                        (M,φ)(x,
                        y) the size function corresponding to the number of connected components of the subset {P
                        ∈
                        M,
                        x
                        <
                        φ(P)<
                        y}. Consider the example of Fig. 1.(a). When a
                        <
                        φ(P)<
                        b, there is only one connected component, the size function takes the value one. When b
                        <
                        φ(P)<
                        c, there are two connected components, the size function takes the value two, and so on. The result is the size function graph represented in Fig. 1.(c), in which the regions where the size function takes different constants are delimited by corner-points. In Fig. 1.(c), the bold dashed line r is a corner-line, and it indicates the appearance of the first critical point associated with the minimal critical value taken by the measure function φ. The point p is a corner-point that represents the intersection point between the two bold solid lines, which delimits the region where the size function takes the value one, and the region where the size function φ takes the value two. In fact, the corner-point p=(b, c) represents a detail of the 3D object, and it is associated with the local minimum critical point P
                        2 where the measure function takes the critical value b, where two new connected components appear, and the saddle critical point P
                        3 where the measure function takes the critical value c, where the two connected components disappear.

The aim is to represent the 3D object by a measure function on its mesh, which describes the concavity and convexity features. However, one measure function may not be sufficient to extract relevant spatial information of the 3D object. A feasible scheme is to segment the 3D object into a set of portions, and to represent each one of them by a size function. However, the existing 3D object segmentation algorithms [72–74] have some limitations. In fact, if the 3D object underwent a high smoothing (resp. noise) rate, it would be under-segmented (resp. over-segmented). Henceforward, in our method we chose to take advantage of the different spatial information on each benchmark axis, by splitting the 3D object into 18 portions; as illustrated in the example of Fig. 3
                        . For example, for the case of x
                        ≥0, only the vertices that have positive abscissas are selected; the others are omitted from the mesh data structure, and consequently; the referenced faces are updated, and so on for the other cases.

Afterwards, each portion is represented by a measure function that describes the concavity and convexity features. It can be expressed by the function 
                           φ
                           
                              
                                 P
                                 i
                              
                           
                           =
                           
                              e
                              
                                 −
                                 
                                    d
                                    Euclidean
                                 
                                 
                                    O
                                    
                                       P
                                       i
                                    
                                 
                              
                           
                        , where d
                        Euclidean(O,
                        P
                        
                           i
                        ) is the Euclidean distance of each vertex Pi
                         in the portion from the benchmark centre O. In other words, the use of an exponent in the measure function, defines how each portion's vertex is viewed from the benchmark centre O. According to the portion's topology, a vertex can belong to a convex or to a concave region, which expresses a topological change that will be encoded by the resulting size function. For that purpose, for each portion, the measure function 
                           φ
                           
                              
                                 P
                                 i
                              
                           
                           =
                           
                              e
                              
                                 −
                                 
                                    d
                                    Euclidean
                                 
                                 
                                    O
                                    
                                       P
                                       i
                                    
                                 
                              
                           
                         is computed on each vertex Pi
                        , and its associated graph is constructed by finding the adjacent vertices of Pi
                        . However, the measure function's graph has often a large number of vertices, which requires a large storage capacity in memory, and makes the computation of size function more time-consuming. To overcome these limitations, the portion of the 3D object can be sampled in a small set of vertices, before computing the measure function. Meanwhile, the sampling process of the portion may cause the loss of some details of it that can be relevant for its description. In order to avoid this problem, the measure function's graph is simplified through a Δ∗
                        −reduction process [23,78]. In fact, it was demonstrated by Frosini et al. [78] and D'Amico [28], that this reduction process of the measure function's graph does not influence the resulting size function. The aim of simplifying the measure function's graph is to obtain an oriented arborescence that contains only the critical points and the links between them. This arborescence is used for the direct computation of corner-lines and corner-points of the resulting size function with the help of D'Amico's algorithm [23]. Finally, each 3D object will be described by a set of 18 size functions. Fig. 4
                         illustrates the description of two portions of a 3D object by size functions.

However, the splitting of the same 3D object, but with a different position, scale, orientation, articulation, or torsion can generate different portions, and consequently, different descriptions by the set of 18 size functions. In order to overcome this invariance problem, the 3D object must undergo a preprocessing stage, which will be detailed in Section 4.

As mentioned previously, each 3D object is described by a set of 18 size functions. Thus, the comparison between two 3D objects is performed through the similarity measure between their associated set of 18 size functions. However, this similarity measure can be expressed in several manners. It can be expressed by finding the minimum distance among the matching distances between the 18 size functions associated with the 3D objects, but it can create confusion between 3D objects of different categories. Since we can find 3D objects belonging to a category that have one or several similar portions to those of 3D objects that belong to another category. For example, the ants and the spiders have almost the same abdomen, and consequently, the description by the size function of the ant's abdomen and description by the size function of the spider's abdomen will be almost the same. In order to avoid this drawback, one of the possible solutions is to express the similarity measure as an average of minimum distances between their associated 18 size functions. In fact, it was demonstrated by Terrades et al. [76] that the average of minimum distances got better results than the minimum of minimum distances. The principle is that if a 3D object is very similar to the 3D query object, the average of minimum distances between its associated set of 18 size functions, and those of the query object is the most minimal, comparing to those of the other 3D objects. Meanwhile, according to Fig. 3, six portions of the 3D object are extracted by relying on one constraint, and their associated size functions are stored in the set S, and there are twelve portions that are extracted from the 3D object by relying on two constraints but according to the different benchmark axis. The subsets SX
                        , SY
                        , and SZ
                         represent, respectively the portions according to the X, Y, and Z axes that were extracted by relying on two constraints, and each one of them contains four size functions. For that purpose, we chose to ramify the average of the minimum distances between 18 size functions associated with the 3D objects into two parts. The first part, expresses the average of the minimum distances between the size functions associated with the portions that were extracted by relying on one constraint. The second part, expresses the average of the average minimum between the twelve remaining size functions, and they are associated with the portions that were extracted by relying on two constraints. Consider two 3D objectsA and B, and their associated sets of size functions F
                        
                           s
                        
                        
                           A
                         and F
                        
                           s
                        
                        
                           B
                         respectively, with F
                        
                           s
                        
                        
                           A
                        
                        ={S
                        
                           A
                        ,
                        S
                        
                           X
                        
                        
                           A
                        ,
                        S
                        
                           Y
                        
                        
                           A
                        ,
                        S
                        
                           Z
                        
                        
                           A
                        }, with S
                        
                           A
                        
                        ={S
                        
                           i
                        
                        
                           A
                        }(i
                           =1,…,6), 
                           
                              S
                              X
                              A
                           
                           =
                           
                              
                                 
                                    S
                                    
                                       X
                                       i
                                    
                                    A
                                 
                              
                              
                                 
                                    i
                                    =
                                    1
                                    ,
                                    …
                                    ,
                                    4
                                 
                              
                           
                        , 
                           
                              S
                              Y
                              A
                           
                           =
                           
                              
                                 
                                    S
                                    
                                       Y
                                       i
                                    
                                    A
                                 
                              
                              
                                 
                                    i
                                    =
                                    1
                                    ,
                                    …
                                    ,
                                    4
                                 
                              
                           
                        , and 
                           
                              S
                              Z
                              A
                           
                           =
                           
                              
                                 
                                    S
                                    
                                       Z
                                       i
                                    
                                    A
                                 
                              
                              
                                 
                                    i
                                    =
                                    1
                                    ,
                                    …
                                    ,
                                    4
                                 
                              
                           
                        , and F
                        
                           s
                        
                        
                           B
                        
                        ={S
                        
                           B
                        ,
                        S
                        
                           X
                        
                        
                           B
                        ,
                        S
                        
                           Y
                        
                        
                           B
                        ,
                        S
                        
                           Z
                        
                        
                           B
                        }, with S
                        
                           B
                        
                        ={S
                        
                           i
                        
                        
                           B
                        }(i
                           =1,…,6), 
                           
                              S
                              X
                              B
                           
                           =
                           
                              
                                 
                                    S
                                    
                                       X
                                       i
                                    
                                    B
                                 
                              
                              
                                 
                                    i
                                    =
                                    1
                                    ,
                                    …
                                    ,
                                    4
                                 
                              
                           
                        , 
                           
                              S
                              Y
                              B
                           
                           =
                           
                              
                                 
                                    S
                                    
                                       Y
                                       i
                                    
                                    B
                                 
                              
                              
                                 
                                    i
                                    =
                                    1
                                    ,
                                    …
                                    ,
                                    4
                                 
                              
                           
                        , and 
                           
                              S
                              Z
                              B
                           
                           =
                           
                              
                                 
                                    S
                                    
                                       Z
                                       i
                                    
                                    B
                                 
                              
                              
                                 
                                    i
                                    =
                                    1
                                    ,
                                    …
                                    ,
                                    4
                                 
                              
                           
                        . The first part of the similarity measure is formulated as follows:
                           
                              (1)
                              
                                 
                                    d
                                    1
                                 
                                 
                                    A
                                    B
                                 
                                 =
                                 
                                    1
                                    6
                                 
                                 
                                    
                                       ∑
                                       
                                          i
                                          =
                                          1
                                       
                                       6
                                    
                                    
                                       
                                          d
                                          
                                             
                                                ⁢
                                                min
                                                ⁡
                                             
                                             1
                                          
                                       
                                       
                                          
                                             S
                                             i
                                             A
                                          
                                          
                                             S
                                             B
                                          
                                       
                                    
                                 
                              
                           
                        where 
                           
                              d
                              
                                 
                                    ⁢
                                    min
                                    ⁡
                                 
                                 1
                              
                           
                           
                              
                                 S
                                 i
                                 A
                              
                              
                                 S
                                 B
                              
                           
                         is the minimum distance between the ith size function S
                        
                           i
                        
                        
                           A
                         of the subset S
                        
                           A
                         associated with the 3D object A and all the size functions of the subset S
                        
                           B
                         associated with the 3D object B, and it can be defined as follows:
                           
                              (2)
                              
                                 
                                    d
                                    
                                       m
                                       i
                                       
                                          n
                                          1
                                       
                                    
                                 
                                 
                                    
                                       S
                                       i
                                       A
                                    
                                    
                                       S
                                       B
                                    
                                 
                                 =
                                 
                                    min
                                    
                                       1
                                       ≤
                                       j
                                       ≤
                                       6
                                    
                                 
                                 
                                    d
                                    match
                                 
                                 
                                    
                                       S
                                       i
                                       A
                                    
                                    
                                       S
                                       j
                                       B
                                    
                                 
                              
                           
                        where d
                        
                           match
                        (S
                        
                           i
                        
                        
                           A
                        ,
                        S
                        
                           j
                        
                        
                           B
                        ) is the matching distance between the ith size function S
                        
                           i
                        
                        
                           A
                         of the subset S
                        
                           A
                         associated with the 3D object A and the jth size function S
                        
                           j
                        
                        
                           B
                         of the subset S
                        
                           B
                         associated with the 3D object B. The size function is represented by a graph composed of a finite number of corner-lines and corner-points in the upper diagonal. For that purpose, the similarity measure between two size functions is graph-based, and it can be performed by computing the correspondence between their associated graphs. The principle is to measure the cost of displacing the corner-lines and corner-points of a size function to those of the other one as shown in the example of Fig. 5
                        . Given two size functions l
                        1 and l
                        2, with their associated sets of corner-lines and corner-points C
                        1 and C
                        2 respectively, the matching distance between l
                        1 and l
                        2 is defined in [13] as follows:
                           
                              (3)
                              
                                 
                                    d
                                    match
                                 
                                 
                                    
                                       l
                                       1
                                    
                                    
                                       l
                                       2
                                    
                                 
                                 =
                                 
                                    min
                                    σ
                                 
                                 
                                    max
                                    
                                       p
                                       ∈
                                       
                                          C
                                          1
                                       
                                    
                                 
                                 δ
                                 
                                    
                                       p
                                       ,
                                       σ
                                       
                                          p
                                       
                                    
                                 
                              
                           
                        where σ varies among all the bijections between C
                        1 and C
                        2. In fact, the corner-lines and the corner-points of l
                        1 and l
                        2 are stored respectively in the sets C
                        1 and C
                        2 in the ascending order of their abscissas. In the examples of Fig. 5, the minimum constraint mentioned in Eq. (3) for the bijection σ between the sets C
                        1 and C
                        2, implies that the matching between l
                        1 and l
                        2 is given by the displacement of r to r
                        ′, a to a
                        ′, b to b
                        ′, and c to Δ
                           c
                        . In general, if the size function l
                        2 has an inferior number of corner-lines and corner-points than those of the size function l
                        1, its set of corner-points is completed by the orthogonal projection of the remaining corner-points of the size function l
                        1 at the diagonal, as illustrated in the example of Fig. 5(c). δ is the displacement cost of a corner-point p
                        =(x,
                        y) that belongs to the set of corner-points C
                        1 associated with the size function l
                        1; to a corner-point p
                        ′=(x
                        ′,
                        y
                        ′) that belongs to the set of corner-points C
                        2 associated with the size function l
                        2, and it is defined [13] as follows:
                           
                              (4)
                              
                                 δ
                                 
                                    
                                       p
                                       ,
                                       p
                                       ′
                                    
                                 
                                 =
                                 min
                                 
                                    
                                       max
                                       
                                          
                                             
                                                x
                                                −
                                                x
                                                ′
                                                |
                                                ,
                                                |
                                                y
                                                −
                                                y
                                                ′
                                             
                                          
                                       
                                       ,
                                       max
                                       
                                          
                                             
                                                
                                                   y
                                                   −
                                                   x
                                                
                                             
                                             2
                                          
                                          
                                             
                                                
                                                   y
                                                   ′
                                                   −
                                                   x
                                                   ′
                                                
                                             
                                             2
                                          
                                       
                                    
                                 
                                 .
                              
                           
                        
                     

The second part of the similarity measure expresses the average of the average minimum between the twelve remaining size functions. For that purpose, it is ramified into three subparts expressed as follows:
                           
                              (5)
                              
                                 
                                    d
                                    X
                                 
                                 
                                    
                                       S
                                       X
                                       A
                                    
                                    
                                       S
                                       X
                                       B
                                    
                                 
                                 =
                                 
                                    1
                                    4
                                 
                                 
                                    
                                       ∑
                                       
                                          i
                                          =
                                          1
                                       
                                       4
                                    
                                    
                                       
                                          d
                                          
                                             
                                                ⁢
                                                min
                                                ⁡
                                             
                                             2
                                          
                                       
                                       
                                          
                                             S
                                             Xi
                                             A
                                          
                                          
                                             S
                                             X
                                             B
                                          
                                       
                                       ,
                                    
                                 
                              
                           
                        where 
                           
                              d
                              
                                 
                                    ⁢
                                    min
                                    ⁡
                                 
                                 2
                              
                           
                           
                              
                                 S
                                 
                                    X
                                    i
                                 
                                 A
                              
                              
                                 S
                                 X
                                 B
                              
                           
                           =
                           m
                           i
                           
                              n
                              
                                 1
                                 ≤
                                 j
                                 ≤
                                 4
                              
                           
                           
                              d
                              match
                           
                           
                              
                                 S
                                 
                                    X
                                    i
                                 
                                 A
                              
                              
                                 S
                                 
                                    X
                                    j
                                 
                                 B
                              
                           
                        
                        
                           
                              (6)
                              
                                 
                                    d
                                    Y
                                 
                                 
                                    
                                       S
                                       Y
                                       A
                                    
                                    
                                       S
                                       Y
                                       B
                                    
                                 
                                 =
                                 
                                    1
                                    4
                                 
                                 
                                    
                                       ∑
                                       
                                          i
                                          =
                                          1
                                       
                                       4
                                    
                                    
                                       
                                          d
                                          
                                             
                                                ⁢
                                                min
                                                ⁡
                                             
                                             2
                                          
                                       
                                       
                                          
                                             S
                                             
                                                Y
                                                i
                                             
                                             A
                                          
                                          
                                             S
                                             Y
                                             B
                                          
                                       
                                       ,
                                    
                                 
                              
                           
                        
                        
                           
                              (7)
                              
                                 
                                    d
                                    Z
                                 
                                 
                                    
                                       S
                                       Z
                                       A
                                    
                                    
                                       S
                                       Z
                                       B
                                    
                                 
                                 =
                                 
                                    1
                                    4
                                 
                                 
                                    
                                       ∑
                                       
                                          i
                                          =
                                          1
                                       
                                       4
                                    
                                    
                                       
                                          d
                                          
                                             
                                                ⁢
                                                min
                                                ⁡
                                             
                                             2
                                          
                                       
                                       
                                          
                                             S
                                             
                                                Z
                                                i
                                             
                                             A
                                          
                                          
                                             S
                                             Z
                                             B
                                          
                                       
                                       .
                                    
                                 
                              
                           
                        
                     

The second part of the similarity measure can be formulated as follows:
                           
                              (8)
                              
                                 
                                    d
                                    2
                                 
                                 
                                    A
                                    B
                                 
                                 =
                                 
                                    
                                       
                                          d
                                          X
                                       
                                       
                                          
                                             S
                                             X
                                             A
                                          
                                          
                                             S
                                             X
                                             B
                                          
                                       
                                       +
                                       
                                          d
                                          Y
                                       
                                       
                                          
                                             S
                                             Y
                                             A
                                          
                                          
                                             S
                                             Y
                                             B
                                          
                                       
                                       +
                                       
                                          d
                                          Z
                                       
                                       
                                          
                                             S
                                             Z
                                             A
                                          
                                          
                                             S
                                             Z
                                             B
                                          
                                       
                                    
                                    3
                                 
                                 .
                              
                           
                        
                     

Finally, the similarity measure between the two 3D objects A and B is formulated as follows:
                           
                              (9)
                              
                                 d
                                 
                                    A
                                    B
                                 
                                 =
                                 
                                    
                                       
                                          d
                                          1
                                       
                                       
                                          A
                                          B
                                       
                                       +
                                       
                                          d
                                          2
                                       
                                       
                                          A
                                          B
                                       
                                    
                                    2
                                 
                                 .
                              
                           
                        
                     

The available digital 3D objects in the various 3D model collections are generated from 3D acquisition devices such as 3D scanners [38], and stereovision systems [39,75,77] or by the computer aided design software [46,47]. However, these processes have some limitations which can be mechanical, optical, and in accuracy. And consequently, they often generate meshes with artefacts like representations with gaps and overlapping regions as illustrated in the examples in Fig. 6
                     . Thus, the presence of artefacts in the mesh influences the features to be extracted from the 3D objects. Therefore, the 3D objects must undergo a preprocessing stage, which can be performed in two steps. The first step is a low level preprocessing, which consists in repairing the mesh of the 3D object by removing artefacts to ensure its connectivity, and to enhance its quality for further usage. The second step consists in normalizing the 3D object in order to endow the features to be extracted invariance to affine transforms, articulations, and torsions. In what follows, we will describe the principle of each step.

This step consists in repairing the mesh of the 3D object by removing its artefacts like holes and separating or overlapping regions. The main idea consists in the approximation of the mesh in a way that the resulting one does not contain artefacts. For this purpose, there are two approaches of mesh repairing. The first approach is surface oriented, where the repairing process relies on filling holes, and stitching separated or overlapping regions. However, the available algorithms [40–42,63] belonging to this approach cannot resolve all the artefacts, especially when all the mesh triangles are isolated. Henceforward, we chose to proceed with the second approach which is volume oriented. The principle consists in converting the input defective mesh into an intermediate volumetric representation from which the corrected mesh is extracted. For that purpose, the 3D object is discretized under GPU in a grid of 2563
                        voxels. At first, the 3D object is placed inside its bounding cube. This latter is subdivided regularly into 2533
                        voxels. Afterwards, each voxel that overlaps with one of the mesh triangles is marked to determine the boundary of the 3D model in the grid of voxels. The overlapping test is performed with the help of Akenine–Möller's algorithm [27]. Finally, the obtained grid has 2563
                        voxels, from which the corrected mesh is extracted by using the marching cube algorithm [5]. Fig. 7
                         illustrates the mesh repairing process.

However the 3D mesh representing the 3D object obtained after the repairing process, can have a high vertex resolution, which requires a large storage capacity in memory, and consequently, it makes the further processing more time-consuming. To overcome these shortcomings, a mesh vertices' decimation process must be performed in order to reduce the number of vertices, and to attribute the same number of vertices to the 3D objects in the collection. For this aim, we chose to work with the approach of Garland et al. [22]. In fact, it consists in decimating the mesh's vertices by using a quadratic error measurement which determines the cost of contracting a pair of vertices that belong to the mesh. For that purpose, this decimation process is performed in five steps. The first step consists in computing the quadratic error for each mesh vertex. In the second step, each two vertices that belong to an edge are selected, and considered as a valid pair for the contraction. The cost of contracting each valid pair is computed during the third step. In the fourth step, the valid pairs are inserted and sorted in a data structure according to the minimum cost. During the fifth step, the decimation process is performed by contracting iteratively the valid pair with a minimum cost.

The aim of this stage is to endow the features to be extracted invariance to articulations, to torsions, and to affine transforms. In fact, a 3D object can have an infinite number of articulations and torsions. Fig. 8
                         shows examples of four possible articulations that a horse can have.

If the articulations and torsions of a 3D object change, then the inter-vertex Euclidean distance changes. However, the surface of the 3D object does not change. Therefore, the displacement from a vertex v
                        
                           i
                         to another vertex v
                        
                           j
                         along the 3D object's mesh does not change, and it can be expressed by the geodesic distance between the two vertices v
                        
                           i
                         and v
                        
                           j
                        . For that purpose, the aim is to find an embedding of the mesh's vertices that best preserves the inter-vertex Euclidean distance. In other words, we have to find a space W, where for each w
                        
                           i
                        , w
                        
                           j
                         ∈
                        W we have:
                           
                              (10)
                              
                                 
                                    d
                                    geodesic
                                 
                                 
                                    
                                       v
                                       i
                                    
                                    
                                       v
                                       j
                                    
                                 
                                 =
                                 
                                    d
                                    Euclidean
                                 
                                 
                                    
                                       w
                                       i
                                    
                                    
                                       w
                                       j
                                    
                                 
                              
                           
                        where w
                        
                           i
                         and w
                        
                           j
                         are respectively the embedding of the vertices v
                        
                           i
                         and v
                        
                           j
                         in the Euclidean space W. PCA preserves the covariance of the data points [58], and the multidimensional scaling finds an embedding that preserves the Euclidean distances between data points [24]. However, these data points can have a non-linear structure that cannot be visible by the PCA and the multidimensional scaling. For this reason, the kernel PCA [43,58,65] appeared as an alternative of PCA in order to capture the hidden non-linear structure of the data points. But, its disadvantage is the choice of the kernel to use, because it depends on the non-linear structure to be identified from the data points [65]. In order to overcome the shortcomings of the previously mentioned methods, the ISOMAP embedding [14] is a non-linear dimensionality reduction method, which takes into consideration the non-linearity between the data points to preserve the Euclidean distance between them. To do so, the ISOMAP relies on the neighbourhoods of the data points and uses the geodesic distances between all its pairs. In the case of a 3D object, the targeted space is a set of its mesh's vertices linked by edges which constitute its connectivity graph. In fact, the ISOMAP proceeds in three steps. The first step consists in constructing the connectivity graph of the input mesh by finding the adjacent vertices of each vertex v
                        
                           i
                        . The second step consists in estimating the geodesic distance between the pairs of mesh's vertices. To do so, for each vertices' pair, the ISOMAP finds the shortest path along the mesh's graph which connects the two vertices with the help of Dijkstra's algorithm [25]. The estimated geodesic distance is computed from this shortest path, and it is stored in a matrix D
                        
                           G
                         of dimension n
                        ×
                        n, where n is the number of vertices, and 
                           
                              D
                              
                                 G
                                 
                                    i
                                    ,
                                    j
                                 
                              
                           
                         denotes the geodesic distance between the vertex v
                        
                           i
                         and the vertex v
                        
                           j
                        . In the third step, the ISOMAP applies a multidimensional scaling to the matrix D
                        
                           G
                        . The aim is to construct an embedding of the mesh in a three-dimensional Euclidean space W that best preserves the mesh's inter-vertex Euclidean distances. The vertices of the space W are chosen to minimize the following cost function:
                           
                              (11)
                              
                                 E
                                 =
                                 
                                    
                                       
                                          τ
                                          
                                             
                                                D
                                                G
                                             
                                          
                                          −
                                          τ
                                          
                                             
                                                D
                                                W
                                             
                                          
                                       
                                    
                                    
                                       L
                                       2
                                    
                                 
                              
                           
                        where D
                        
                           W
                         denotes the matrix of Euclidean distances {d
                        
                           W
                        (i,
                        j)=‖w
                        
                           i
                        
                        −
                        w
                        
                           j
                        ‖}, 
                           
                              
                                 M
                              
                              
                                 L
                                 2
                              
                           
                         is the L
                        2 matrix norm, and τ is an operator that converts distances to inner products by the following formula:
                           
                              (12)
                              
                                 τ
                                 
                                    D
                                 
                                 =
                                 −
                                 
                                    1
                                    2
                                 
                                 H
                                 S
                                 H
                              
                           
                        where S is the matrix of squared distances {S
                        
                           i,j
                        
                        =
                        D
                        
                           i,j
                        
                        2}, and H is a centering matrix {H
                        
                           i,j
                        
                        =
                        δ
                        
                           i,j
                        
                        −1/n} with δ is an identity matrix of dimension n
                        ×
                        n. The role of the matrix H is to decrease the influence of any constant added in the elements of the distance matrix D 
                        [65]. The cost function E reaches its minimum when the coordinates of w
                        
                           i
                        
                        ∈
                        W are set to the top three eigenvectors of the matrix τ(D
                        
                           G
                        ), where w
                        
                           i
                         represents the embedding of the vertex v
                        
                           i
                         in the space W. Fig. 9
                         illustrates examples of obtaining almost the same articulations and torsions after the embedding with ISOMAP of three horses of the Robert Sumner's collection of 3D objects [44].

However, the 3D objects can still have arbitrary positions, orientations and scales in 3D space, even if they were embedded by the ISOMAP. On the one hand, the ISOMAP embedding does not have an influence on the original scale of the 3D object. Indeed, if a 3D object is put into a scale α
                        ≠1, then {v
                        ′
                        
                           k
                        
                        =
                        αv
                        
                           k
                        }
                           k
                           =1,…,n
                        , and consequently the geodesic distance between each vertex pair v
                        ′
                        
                           i
                         and v
                        ′
                        
                           j
                         is:
                           
                              (13)
                              
                                 
                                    d
                                    geodesic
                                 
                                 
                                    
                                       v
                                       
                                          ′
                                          i
                                       
                                       ,
                                       v
                                       
                                          ′
                                          j
                                       
                                    
                                 
                                 =
                                 α
                                 
                                    d
                                    geodesic
                                 
                                 
                                    
                                       v
                                       i
                                    
                                    
                                       v
                                       j
                                    
                                 
                                 ≠
                                 
                                    d
                                    Euclidean
                                 
                                 
                                    
                                       w
                                       i
                                    
                                    
                                       w
                                       j
                                    
                                 
                                 .
                              
                           
                        
                     

On the other hand, for a given 3D object with different articulations and torsions, the ISOMAP embedding's role is to find a vertices' space W, where the inter-vertex Euclidean distance is preserved. But, this does not ensure associating the same orientation for 3D objects which belong to the same category. Because the principal axes of the resulting space W do not coincide with those of the benchmark reference [14,65].

In order to capture the invariant features to affine transforms for each 3D object, a feasible scheme is to centre, to scale, and to orient the 3D model by using the PCA [15]. To do so, the PCA proceeds in three steps. The first step consists in centering the 3D objects in order to have the same position in the 3D space, and to endow the features invariance to translation. The centering is performed through the following formula:
                           
                              (14)
                              
                                 
                                    P
                                    i
                                    ′
                                 
                                 =
                                 
                                    P
                                    i
                                 
                                 −
                                 G
                                 =
                                 
                                    
                                       
                                          x
                                          i
                                       
                                       −
                                       
                                          x
                                          G
                                       
                                       ,
                                       
                                          y
                                          i
                                       
                                       −
                                       
                                          y
                                          G
                                       
                                       ,
                                       
                                          z
                                          i
                                       
                                       −
                                       
                                          z
                                          G
                                       
                                    
                                 
                              
                           
                        where P
                        
                           i
                         is a vertex of the 3D object, and G is the mass centre of the 3D object defined by the following formula:
                           
                              (15)
                              
                                 G
                                 =
                                 
                                    
                                       
                                          
                                             ∑
                                             
                                                i
                                                =
                                                1
                                             
                                             N
                                          
                                          
                                             
                                                s
                                                i
                                             
                                             
                                                g
                                                i
                                             
                                          
                                       
                                    
                                    
                                       
                                          ∑
                                          
                                             i
                                             =
                                             1
                                          
                                          N
                                       
                                       
                                          
                                             s
                                             i
                                          
                                       
                                    
                                 
                              
                           
                        where N is the number of triangles, and s
                        
                           i
                         and g
                        
                           i
                        
                        =(g
                        
                           ix
                        ,
                        g
                        
                           iy
                        ,
                        g
                        
                           iz
                        ) are respectively the surface and centre of the ith triangle of the mesh that represents the 3D object.

In the second step, the 3D object is scaled in order to be bound by a unit sphere. The principle is to search the farthest vertex from the benchmark's centre O and to compute the associated distance by the following formula:
                           
                              (16)
                              
                                 
                                    d
                                    m
                                 
                                 =
                                 
                                    max
                                    
                                       i
                                       =
                                       1
                                       ,
                                       …
                                       ,
                                       n
                                    
                                 
                                 d
                                 
                                    O
                                    
                                       P
                                       i
                                       ′
                                    
                                 
                              
                           
                        where d(O,
                        P
                        
                           i
                        
                        ′) is the Euclidean distance between the vertex P
                        
                           i
                        ′ and the benchmark's centre O, and d
                        
                           m
                         is the distance of the farthest vertex to O. The scaling is performed through the following formula:
                           
                              (17)
                              
                                 
                                    P
                                    i
                                    ″
                                 
                                 =
                                 
                                    1
                                    
                                       d
                                       m
                                    
                                 
                                 
                                    P
                                    i
                                    ′
                                 
                                 =
                                 
                                    
                                       
                                          x
                                          i
                                          ′
                                       
                                       
                                          d
                                          m
                                       
                                    
                                    
                                       
                                          y
                                          i
                                          ′
                                       
                                       
                                          d
                                          m
                                       
                                    
                                    
                                       
                                          y
                                          i
                                          ′
                                       
                                       
                                          d
                                          m
                                       
                                    
                                 
                                 .
                              
                           
                        
                     

The third step consists in aligning the 3D objects in order to have the same orientation. For that purpose, the mesh covariance analysis is performed to determine the principal axes of the 3D object. To do so, the mesh's covariance matrix is computed through the following formula:
                           
                              (18)
                              
                                 C
                                 =
                                 
                                    1
                                    N
                                 
                                 
                                    
                                       ∑
                                       
                                          i
                                          =
                                          1
                                       
                                       N
                                    
                                    
                                       
                                          S
                                          i
                                       
                                       
                                          g
                                          i
                                       
                                       
                                          g
                                          i
                                          T
                                       
                                       =
                                       
                                          1
                                          N
                                       
                                    
                                 
                                 
                                    
                                       ∑
                                       
                                          i
                                          =
                                          1
                                       
                                       N
                                    
                                    
                                       
                                          S
                                          i
                                       
                                       
                                          
                                             
                                                
                                                   
                                                      g
                                                      
                                                         i
                                                         x
                                                      
                                                      2
                                                   
                                                
                                                
                                                   
                                                      g
                                                      
                                                         i
                                                         x
                                                      
                                                   
                                                   
                                                      g
                                                      
                                                         i
                                                         y
                                                      
                                                   
                                                
                                                
                                                   
                                                      g
                                                      
                                                         i
                                                         x
                                                      
                                                   
                                                   
                                                      g
                                                      
                                                         i
                                                         z
                                                      
                                                   
                                                
                                             
                                             
                                                
                                                   
                                                      g
                                                      
                                                         i
                                                         y
                                                      
                                                   
                                                   
                                                      g
                                                      
                                                         i
                                                         x
                                                      
                                                   
                                                
                                                
                                                   
                                                      g
                                                      
                                                         i
                                                         y
                                                      
                                                      2
                                                   
                                                
                                                
                                                   
                                                      g
                                                      
                                                         i
                                                         y
                                                      
                                                   
                                                   
                                                      g
                                                      
                                                         i
                                                         z
                                                      
                                                   
                                                
                                             
                                             
                                                
                                                   
                                                      g
                                                      
                                                         i
                                                         z
                                                      
                                                   
                                                   
                                                      g
                                                      
                                                         i
                                                         x
                                                      
                                                   
                                                
                                                
                                                   
                                                      g
                                                      
                                                         i
                                                         z
                                                      
                                                   
                                                   
                                                      g
                                                      
                                                         i
                                                         y
                                                      
                                                   
                                                
                                                
                                                   
                                                      g
                                                      
                                                         i
                                                         z
                                                      
                                                      2
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                                 .
                              
                           
                        
                     

The covariance matrix C is symmetric, consequently its eigenvalues are positives. The eigenvalues of the matrix C and their associated eigenvectors are sorted in descending order. These eigenvectors represent the principal axes of the 3D object and they are normalized to form the rows of the alignment matrix R. The alignment of the 3D object is performed as follows:
                           
                              (19)
                              
                                 
                                    P
                                    ‴
                                 
                                 =
                                 
                                    P
                                    ″
                                 
                                 R
                                 =
                                 
                                    
                                       
                                          P
                                          i
                                          ″
                                       
                                       
                                       R
                                       ,
                                       i
                                       =
                                       1
                                       ,
                                       …
                                       ,
                                       n
                                    
                                 
                                 .
                              
                           
                        
                     

The different normalization steps of the 3D object can be summarized in Fig. 10
                        .

@&#EXPERIMENTAL RESULTS@&#

At first, the proposed method was experimentally evaluated using the manifold version of the 3D object collection of McGill [19]. This latter is composed of 457 3D models in high-level semantics 19 categories, where the 3D objects of the same category have different shapes, articulations, torsions, positions, scales, and orientations. Fig. 11
                      illustrates examples of 3D objects of each category of the 19 classes of the 3D object collection of McGill. In fact, it is one of the standard 3D model collection used to validate several descriptors of 3D objects [1,3,11,12].

Afterwards, the proposed method was experimentally evaluated by merging different collections of 3D objects. For that purpose, we extended the 3D object collection of McGill by 3D models from the 3D shape benchmark of architectural data [64], by the articulated 3D objects from Robert Sumner's collection of 3D shapes [44], and by 3D models from the Princeton's collection of 3D objects [62]. The obtained collection of 3D objects has 2902 models and 121 categories. Our 3D object recognition system can be summarized in Fig. 12
                     . At first, for each 3D object in the collection of 3D models, a preprocessing stage is performed to repair its mesh and to endow the features invariance to affine transforms, articulations, and torsions. Afterwards, the 3D object is described by a set of 18 size functions which will be stored in the feature dataset. Thus, the comparison between the 3D objects is performed through the similarity measure between their associated sets of 18 size functions. Finally, a soft decision process is performed in order to retrieve the 3D models according to their resemblance to the 3D query object.

To evaluate the proposed method, each 3D model is used as a query object, and a soft decision process is performed to sort the 3D objects of the collection according to their resemblance to the 3D model to be recognized. The recognition performance was evaluated in terms of recall and precision [26]. For that purpose, a query is formed by a 3D object belonging to a category C
                     
                        i
                      of Q 3D models. The recall represents the number of 3D objects belonging to the category C
                     
                        i
                      from the k first 3D objects retrieved, we denote it by N
                     
                        corrects
                     (k), on the number Q of the 3D objects of the category C
                     
                        i
                     . The precision is the number of 3D objects which belong to the category C
                     
                        i
                      found from the k first retrieved 3D objects, on the number of responses k. The precision and recall can be formulated as follows:
                        
                           (20)
                           
                              Precision
                              
                                 k
                              
                              =
                              
                                 
                                    
                                       N
                                       corrects
                                    
                                    
                                       k
                                    
                                 
                                 k
                              
                              ,
                           
                        
                     
                     
                        
                           (21)
                           
                              Recall
                              
                                 k
                              
                              =
                              
                                 
                                    
                                       N
                                       corrects
                                    
                                    
                                       k
                                    
                                 
                                 Q
                              
                              .
                           
                        
                     
                  

We compared the proposed method with its global version which relies on the description of the 3D object by one size function resulting from the measuring function 
                        φ
                        
                           
                              P
                              i
                           
                        
                        =
                        
                           e
                           
                              −
                              
                                 d
                                 Euclidean
                              
                              
                                 O
                                 
                                    P
                                    i
                                 
                              
                           
                        
                     , with the work of Biasotti et al. [12] where they described a 3D object by a multidimensional size function, the work of Ion et al. [1] where the 3D object is described by an eccentricity histogram, and the local approach of Xiaofeng et al. [71] where the 3D object is described by the local areas of its vertices. We implemented the mentioned methods in C++ programming language.


                     Figs. 13 and 14
                     
                      represent, respectively the averages precision/recall curves of our method, the work of Biasotti et al. [12], the work of Ion et al. [28], and the local approach of Xiaofeng et al. [71] for the 457 3D models of the 3D object collection of McGill, and for the 2902 3D objects of the extended collection. Table 2
                      summarizes the accuracy of our method, the scores obtained by the method Zimmer et al. [80], the scores obtained by the method of Lian et al. [79], and the other approaches for the 457 3D models of the 3D object collection of McGill by the means of the first tier and the second tier evaluation measures [19]. In fact, the first tier has the same principle of the recall, because it provides the recognition score, where the number of retrieved 3D objects is the number of 3D objects in the category of the 3D query model. The second tier provides the recognition score, where the number of retrieved 3D objects is twice the number of 3D objects in the category of the 3D query model. As illustrated in Fig. 13 and Table 2, our method got the highest scores when it was compared with the other approaches of the related work for the 457 3D models of the 3D object collection of McGill. From Fig. 14, the scores obtained by our method are favourably comparable to the related work when the recall is upper than 0.1 when it was validated on the extended 3D object collection. This illustrates the relevant local spatial information provided by the critical points of each portion of the 3D object.


                     Table 3
                      summarizes the scores gotten by our method the mean of first tier, the different combinations of the subsets of portions according to the benchmark axis, the global version of our method, and the three methods of the related work for the 19 categories of the 3D object collection of McGill, where the highest scores are marked in bold. In Table 3, our method where the 3D object description relies on the set of 18 size functions and the similarity measure is based on the ramified distance that got the best average score. However, some categories such as spectacles and chairs need respectively four size functions associated with subset S
                     
                        Z
                     , and six size function associated with the subset S in order to get a high score. Besides, the usage of the average minimum distances of our method decreased the average recognition score, because the subsets S, S
                     
                        X
                     , S
                     
                        Y
                     , and S
                     
                        Z
                      do not have the same relevance. Our method got the lowest score in the airplanes' category, because the 3D objects that belong to it have a significant difference between their shapes. Indeed, in the normalization stage, the ISOMAP requires the computation of geodesic distances of the vertex pairs by finding the shortest path between them. Where the 3D objects have significant differences between their shapes, their ISOMAP embeddings outcome different articulations and torsions as it is illustrated in Fig. 15
                     .(b). As a result, the 3D objects of the airplanes' category got different portions after the splitting process, and consequently, different descriptions by the set of 18 size functions.


                     Table 4
                      summarizes the accuracy of our method, and the other approaches for the 2902 3D objects of the extended collection by the means of the first tier, and the second tier evaluation measures [62]. On the table, our method that relies on ramified distance got the highest recognition scores on all the other approaches. Meanwhile, using the average minimum distance on our method could not get the best scores, because as in the case of the 3D object collection of McGill, the subsets S, S
                     
                        X
                     , S
                     
                        Y
                     , and S
                     
                        Z
                      do not have the same relevance for all the 3D objects in the extended collection. Besides, the other combinations of the sets of portions according to the benchmark axis could not reach the highest recognition scores comparing to the other approaches of the related work. Consequently, the use of the combination of 18 portions with the ramified distance was necessary to improve the recognition score of our method.


                     Fig. 16
                      represents the average computation time of the different methods obtained on a PC with 2.80 Ghz Intel Xeon CPU with RAM 12.2 Go and NVIDIA Tesla c2050/c2070 GPU computing processors, and running under Windows 7 64 bits. According to Fig. 16, our method is more computation time-consuming than the other approaches, because it requires the normalization stage and the splitting of the 3D object into 18 portions in order to represent each one of them by a size function.

@&#CONCLUSIONS@&#

In this paper, we developed a new local approach which describes the 3D object by a set of 18 size functions. The main idea of our method is the local usage of the topological invariants provided by the critical points to describe the 3D object. For that purpose, the 3D object is split into 18 portions, to represent each one of them by a size function resulting from a measure function, which captures the concavity and the convexity features of the portion. At first, the method was validated by using the 3D object collection of McGill of 457 models. The obtained scores outperform the related work. Afterwards, the method was validated by using an extended 3D object collection of 2902 models. The obtained scores are favourably comparable to the related work. However, our method is more computation time-consuming than the other approaches, because it requires a normalization stage, the splitting of the 3D object into 18 portions, and the description of each portion by a size function splitting the targeted 3D object into 18. To overcome this limitation, we are planning to parallelize the size function's computation on GPU in order to accelerate the computation time of our method.

@&#ACKNOWLEDGEMENTS@&#

The completion of this research was made possible thanks to the research scholarship of the computer science department, Faculty of science at the Université de Sherbrooke, and the Natural Sciences and Engineering Research Council of Canada (NSERC).

@&#REFERENCES@&#

