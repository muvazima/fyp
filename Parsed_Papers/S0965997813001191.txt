@&#MAIN-TITLE@&#As-rigid-as-possible mesh deformation and its application in hexahedral mesh generation

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           A novel as-rigid-as-possible mesh deformation algorithm is proposed.


                        
                        
                           
                           Intrinsic variable and elastic energy are grouped together for property preserving.


                        
                        
                           
                           A mesh projection scheme is introduced for sweep-based hexahedral mesh generation.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Mesh deformation

Scale-invariant intrinsic variables

Elastic deformation energy

Hexahedral mesh generation

As-rigid-as-possible

Quadric energy function

@&#ABSTRACT@&#


               
               
                  This paper presents an efficient and stable as-rigid-as-possible mesh deformation algorithm for planar shape deformation and hexahedral mesh generation. The deformation algorithm aims to preserve two local geometric properties: scale-invariant intrinsic variables and elastic deformation energy, which are together represented in a quadric energy function. To preserve these properties, the position of each vertex is further adjusted by iteratively minimizing this quadric energy function to meet the position constraint of the controlling points. Experimental results show that the deformation algorithm is efficient, and can obtain physically plausible results, which have the same topology structure with the original mesh. Such a mesh deformation method is useful to project the source surface mesh onto the target surfaces in hexahedral mesh generation based on sweep method, and application results show that the proposed method is feasible to mesh projection not only between similar surface contours but also dissimilar surface contours.
               
            

@&#INTRODUCTION@&#

Mesh has gradually become the mainstream representation of geometric models, and deformation technique for planar mesh model has received a lot of attentions in recent years. Planar mesh deformation is widely used in many application fields, such as computer aided design, mesh generation, shape modeling, computer animation and other applications. A good mesh deformation algorithm aims to produce naturally deforming results, which are homeomorphic to the original planar mesh, and the final positions of the controlling points should be precise. Furthermore, in the field of solid mesh generation, hexahedral mesh generation has always been concerned, since hexahedral mesh offers several numerical advantages over tetrahedral mesh due to its tensor product nature. Surveys show that more than 60% volumes are meshed by sweep method, which shows that sweep method has been the workhorse algorithm in hexahedral mesh applications [1]. Given a swept volume, it is necessary to project the source surface mesh onto the target surfaces, and therefore the most challenging issue to be dealt with by any sweep method is the interpolation between the source mesh contours and the target surface contours.

In this paper, we focus on planar mesh deformation, a critical step towards generation of hexahedral mesh based on sweep method, and propose a new as-rigid-as-possible planar mesh deformation algorithm. The deformation algorithm aims to preserve two local properties: scale-invariant intrinsic variables and elastic deformation energy, which are together represented in a quadric energy function. We iteratively minimize the linear quadric energy function to adjust the position of each vertex to obtain a physically plausible deforming result, which can meet the position constraints of the controlling points. We also introduce a scheme to project the source surface mesh onto the target surfaces in sweep based hexahedral mesh generation via the proposed deformation algorithm, and numerical experiments show that a homeomorphous deformed mesh can be obtained and used to achieve the projection between surfaces with dissimilar contours.

@&#RELATED WORK@&#

The problem of shape deformation for planar mesh has attracted huge interest in the past, which started with the work of Sederberg and Parry [2], who produced deforming results by the most well-known method, called free form deformation (FFD). FFD is a space-based technique [3,4], which embeds a shape into a lattice and then makes the shape to deform by moving the controlling points of the lattice. While FFD method is applicable to any type of shapes, easy to implement and very efficient in computation, it cannot keep the geometric features of the input shapes accurately. For shapes with significantly skeleton structure, skeleton-based deformation [5] provides an intuitive tool to control the deformation of these shapes, and it is convenient for users to manipulate the skeletons. The most important issue to skeleton-based deformation method is to determine the weight of each vertex in the affected mesh area, and the deformed results are quite sensitive to weight selection, which is a painful process for users.

To obtain a physically deforming result, Gibson and Mirtich [6] proposed a physically based shape deformation algorithm by mass–spring system, which is very easy to implement. However, it is too slow to converge and not stable in some cases, and various parameters need to be carefully adjusted. Celniker and Gossard [7] provide a more accurate simulation tool to achieve physically plausible results by using finite element theory, but it is complex and very expensive in computation, making it unsuitable for interactive deformation applications. Alexa et al. [8] presented as-rigid-as-possible shape deformation method first, and more methods [9,10] were developed by using a similar idea. The key contribution of the idea is a local to global algorithm, which combines a local rigid transformation on each triangle, with a global stitch operation to all triangles. But these methods are unstable in some cases.

Recently, many feature preserving deformation methods are proposed for planar mesh models. They try to minimize an energy function representing local properties of the model, and the most important thing to these methods is the selection of local properties. The more related feature preserving approaches proposed in this paper are those works introduced by Igarashi et al. [10], Weng et al. [11], and Guo et al. [12]. Igarshi et al. proposed a two-step algorithm to deform a planar shape by manipulating a few controlling points. The first step finds a local rigid transformation for each triangle and the second step adjusts its scale globally. The key contribution is to use quadratic error metrics so that each minimization problem can be solved quickly and stably. Duo to its linear nature, the two-step algorithm may cause implausible results in some cases. Weng et al. presented a 2D shape deformation algorithm using non-linear least squares method. Their method aims to preserve the Laplacian coordinates of the boundary curve and the local area of the shape interior, and a physically plausible deformed result can be obtained by minimize a nonlinear energy function using an iterative Gauss–Newton method. This non-linear 2D shape deformation does not take into account the difference of mesh structure, and Guo et al. provide a detailed analysis of the shape deformation method and prove that triangle mesh gains more advantages in deforming. Based on the triangle mesh, they proposed an improved edge length preserving shape deformation algorithm, which is enough to preserve the local, global and boundary properties of the shape. For some deformations with huge shape changes, the aforementioned methods may produce implausible results with face flips. Differential domain techniques [13–15] cast deformation as an energy minimization problem, and it preserves surface details and produces visually pleasing deformation results by distributing errors globally through least-squares minimization. Sorkine and Alexa [16] proposed an ARAP surface deformation method by using an iterative minimizing scheme, which can make small parts of the model change as rigidly as possible.

Sweep based method is the most common used method in hexahedral mesh generation, and the main issue to be dealt with by any sweep algorithm is the projection of the source surface mesh onto the target surfaces. Goodrich [17] proposed an orthogonal projection method to map nodes onto the target surfaces, the projection process is named as root finding, and the root finding problem is time-consuming and very complex. Knupp [18] presented a node placement way based on the linear transformation between bounding node loops and smoothing method. Roca and Sarrate [19,20] presented a method such that the projection of the source mesh onto the target surfaces is determined by means of an improved least-square approximation of an affine mapping. The affine mapping is a linear transformation that preserves the “straightness” of shape, the relative position of each node keeps unchanged. Hence, the affine mapping method is not suitable for the projection between surfaces with dissimilar contours.

Mesh has been widely used in shape representation, and shapes discussed in our algorithm are composed of triangle meshes and quadrilateral meshes. Our algorithm can be viewed as a feature preserving deformation method, which aims to preserve the scale-invariant intrinsic variables and elastic deformation energy of planar mesh. The scale-invariant intrinsic variables represent the local intrinsic geometry characteristic of planar mesh and they are invariant to geometric transformation such as translation, rotation and scaling. While preserving scale invariant intrinsic variables often produces good deformation results for slight deformations, it is not enough to produce physically plausible deformation results for large deformations with too much controlling points. In these situations, the deformed mesh with local self-intersection is not homeomorphic to the original planar mesh. Therefore, we introduce the elastic deformation energy to preserve the area of each mesh and to ensure the validity of deformed mesh. Instead of minimizing a non-quadratic energy function, the proposed algorithm deals only with quadratic energy function that consists of three parts: Scale-invariant intrinsic variables preserving, elastic deformation energy and position constraints of all controlling points, and a linear solution can be used iteratively to obtain a homeomorphous deformed mesh.

We consider a two-dimensional mesh M
                     =(V, E) is an abstract simplicial complex representing the connectivity of the mesh, where V
                     ={v
                     0,
                     v
                     1,…,
                     vn
                     
                     −1}is the set of vertices, n is the number of vertices; E is the simplicial complex that contains vertices v
                     ={i}∈
                     E, edges e
                     ={i,
                     j}∈
                     E and faces f
                     ={i,
                     j,
                     k}∈
                     E. The adjacent vertices of vertex vi
                      are denoted by N(vi
                     )={j∣(i,
                     j)∈
                     E }, the number of adjacent vertices is called the degree of vertex vi
                     , and is denoted as |N(vi
                     )| .

The scale-invariant intrinsic variables are defined for adjacent edges of vertices at its first order neighborhood, and it is composed of the length ratio and orientation angle of adjacent edges [21]. For a vertex v
                        0 in a planar mesh M and the polygon constructed by its first order neighborhood (see Fig. 1
                        ), the adjacent edge of v
                        0
                        vi
                         is v
                        0
                        vi
                        
                        +1 in counterclockwise; αi
                         is the orientation angle between v
                        0
                        vi
                         and v
                        0
                        vi
                        
                        +1; 
                           
                              
                                 
                                    λ
                                 
                                 
                                    i
                                 
                              
                              =
                              |
                              |
                              
                                 
                                    v
                                 
                                 
                                    0
                                 
                              
                              
                                 
                                    v
                                 
                                 
                                    i
                                    +
                                    1
                                 
                              
                              |
                              |
                              /
                              |
                              |
                              
                                 
                                    v
                                 
                                 
                                    0
                                 
                              
                              
                                 
                                    v
                                 
                                 
                                    i
                                 
                              
                              |
                              |
                           
                         is the length ratio between v
                        0
                        vi
                         and v
                        0
                        vi
                        
                        +1. In order to describe the scale-invariant intrinsic variables of adjacent edge v
                        0
                        vi
                         and v
                        0
                        vi
                        
                        +1, edge v
                        0
                        vi
                        
                        +1 is considered to be a vector which firstly rotate αi
                         from v
                        0
                        vi
                         and then scale λi
                        . For vertex v
                        0, we can derive the equations:
                           
                              (1)
                              
                                 
                                    
                                       
                                          
                                             v
                                          
                                          
                                             0
                                          
                                       
                                       
                                          
                                             v
                                          
                                          
                                             i
                                             +
                                             1
                                          
                                       
                                    
                                    
                                       →
                                    
                                 
                                 =
                                 
                                    
                                       λ
                                    
                                    
                                       i
                                    
                                 
                                 R
                                 (
                                 
                                    
                                       α
                                    
                                    
                                       i
                                    
                                 
                                 )
                                 
                                    
                                       
                                          
                                             v
                                          
                                          
                                             0
                                          
                                       
                                       
                                          
                                             v
                                          
                                          
                                             i
                                          
                                       
                                    
                                    
                                       →
                                    
                                 
                                 
                                 (
                                 vi
                                 ∈
                                 N
                                 (
                                 
                                    
                                       ν
                                    
                                    
                                       0
                                    
                                 
                                 )
                                 )
                              
                           
                        where 
                           R
                        (α) is a rotation matrix. In two-dimensional space, v
                        0
                        =(x
                        0,
                        y
                        0) is the coordinates of v
                        0, the Eq. (1) can be written as:
                           
                              (2)
                              
                                 
                                    
                                       
                                          
                                             
                                                
                                                   
                                                      
                                                         λ
                                                      
                                                      
                                                         i
                                                      
                                                   
                                                   cos
                                                   
                                                      
                                                         α
                                                      
                                                      
                                                         i
                                                      
                                                   
                                                   -
                                                   1
                                                
                                                
                                                   -
                                                   
                                                      
                                                         λ
                                                      
                                                      
                                                         i
                                                      
                                                   
                                                   sin
                                                   
                                                      
                                                         α
                                                      
                                                      
                                                         i
                                                      
                                                   
                                                
                                                
                                                   -
                                                   
                                                      
                                                         λ
                                                      
                                                      
                                                         i
                                                      
                                                   
                                                   cos
                                                   
                                                      
                                                         α
                                                      
                                                      
                                                         i
                                                      
                                                   
                                                
                                                
                                                   
                                                      
                                                         λ
                                                      
                                                      
                                                         i
                                                      
                                                   
                                                   sin
                                                   
                                                      
                                                         α
                                                      
                                                      
                                                         i
                                                      
                                                   
                                                
                                                
                                                   1
                                                
                                                
                                                   0
                                                
                                             
                                             
                                                
                                                   
                                                      
                                                         λ
                                                      
                                                      
                                                         i
                                                      
                                                   
                                                   sin
                                                   
                                                      
                                                         α
                                                      
                                                      
                                                         i
                                                      
                                                   
                                                
                                                
                                                   
                                                      
                                                         λ
                                                      
                                                      
                                                         i
                                                      
                                                   
                                                   cos
                                                   
                                                      
                                                         α
                                                      
                                                      
                                                         i
                                                      
                                                   
                                                   -
                                                   1
                                                
                                                
                                                   -
                                                   
                                                      
                                                         λ
                                                      
                                                      
                                                         i
                                                      
                                                   
                                                   sin
                                                   
                                                      
                                                         α
                                                      
                                                      
                                                         i
                                                      
                                                   
                                                
                                                
                                                   -
                                                   
                                                      
                                                         λ
                                                      
                                                      
                                                         i
                                                      
                                                   
                                                   cos
                                                   
                                                      
                                                         α
                                                      
                                                      
                                                         i
                                                      
                                                   
                                                
                                                
                                                   0
                                                
                                                
                                                   1
                                                
                                             
                                          
                                       
                                    
                                 
                                 
                                    
                                       
                                          
                                             
                                                
                                                   
                                                      
                                                         x
                                                      
                                                      
                                                         0
                                                      
                                                   
                                                
                                             
                                             
                                                
                                                   
                                                      
                                                         y
                                                      
                                                      
                                                         0
                                                      
                                                   
                                                
                                             
                                             
                                                
                                                   
                                                      
                                                         x
                                                      
                                                      
                                                         i
                                                      
                                                   
                                                
                                             
                                             
                                                
                                                   
                                                      
                                                         y
                                                      
                                                      
                                                         i
                                                      
                                                   
                                                
                                             
                                             
                                                
                                                   
                                                      
                                                         x
                                                      
                                                      
                                                         i
                                                         +
                                                         1
                                                      
                                                   
                                                
                                             
                                             
                                                
                                                   
                                                      
                                                         y
                                                      
                                                      
                                                         i
                                                         +
                                                         1
                                                      
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                                 =
                                 
                                    
                                       
                                          
                                             
                                                
                                                   0
                                                
                                             
                                             
                                                
                                                   0
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           
                        
                     

Hence, the simultaneous equations of all vertices can be obtained equivalent to the matrix form:
                           
                              (3)
                              
                                 AX
                                 =
                                 0
                              
                           
                        where 
                           X
                        
                        =(x
                        0,
                        y
                        0,
                        x
                        1,
                        y
                        1,…,
                        xn
                        
                        −1,
                        yn
                        
                        −1)
                           T
                        ; 
                           A
                         is 2m
                        ×2n sparse matrix, 
                           
                              m
                              =
                              
                                 
                                    ∑
                                 
                                 
                                    
                                       
                                          v
                                       
                                       
                                          i
                                       
                                    
                                    ∈
                                    V
                                 
                              
                              |
                              N
                              (
                              
                                 
                                    v
                                 
                                 
                                    i
                                 
                              
                              )
                              |
                           
                        . The scale-invariant intrinsic matrix 
                           A
                         is invariant to geometric transformation such as translation, rotation and scaling, it determines the relative positions with respect to its first order neighborhood vertices. To preserve the intrinsic characteristics of scale-invariant during deformation, we try to minimize the following local energy function:
                           
                              (4)
                              
                                 |
                                 |
                                 AX
                                 |
                                 
                                    
                                       |
                                    
                                    
                                       2
                                    
                                 
                              
                           
                        
                     

For each mesh in planar mesh M, we want to minimize the deformation energy of every mesh during deformation. To do this, the linear-elastic finite element method [22] is adopted to compute the deformation energy. For arbitrary elastic deformable mesh e in equilibrium state, the principle of virtual work (PVW) must be satisfied as the sufficient and necessary condition for the stress field, the elastic deformation energy of mesh e without external force can be described as:
                           
                              (5)
                              
                                 
                                    
                                       E
                                    
                                    
                                       e
                                    
                                 
                                 =
                                 
                                    ∫
                                    
                                       Ω
                                    
                                 
                                 
                                    
                                       1
                                    
                                    
                                       2
                                    
                                 
                                 
                                    
                                       ε
                                    
                                    
                                       eT
                                    
                                 
                                 D
                                 
                                    
                                       ε
                                    
                                    
                                       e
                                    
                                 
                                 
                                 tdxdy
                              
                           
                        where matrix 
                           D
                         is the elastic matrix; t is the thickness of the element; 
                           ε
                         is the element strain express as:
                           
                              (6)
                              
                                 ε
                                 =
                                 B
                                 Δ
                                 
                                    
                                       X
                                    
                                    
                                       e
                                    
                                 
                              
                           
                        where 
                           
                              Δ
                              
                                 
                                    X
                                 
                                 
                                    e
                                 
                              
                           
                         is the displacement vector; 
                           B
                         is the strain matrix. Put 
                           
                              
                                 
                                    K
                                 
                                 
                                    e
                                 
                              
                              =
                              
                                 ∫
                                 
                                    Ω
                                 
                              
                              
                                 
                                    B
                                 
                                 
                                    T
                                 
                              
                              
                              DBtdxdy
                           
                        , 
                           K
                           e
                         is the element stiffness matrix. Hence, the elastic energy equation of element e is:
                           
                              (7)
                              
                                 
                                    
                                       E
                                    
                                    
                                       e
                                    
                                 
                                 =
                                 1
                                 /
                                 2
                                 Δ
                                 
                                    
                                       X
                                    
                                    
                                       eT
                                    
                                 
                                 
                                    
                                       K
                                    
                                    
                                       e
                                    
                                 
                                 Δ
                                 
                                    
                                       X
                                    
                                    
                                       e
                                    
                                 
                              
                           
                        
                     

All element stiffness matrices 
                           K
                           e
                         are combined into a stiffness matrix 
                           K
                         of planar mesh Ds
                        , and the elastic deformation energy function can be written as:
                           
                              (8)
                              
                                 E
                                 =
                                 1
                                 /
                                 2
                                 Δ
                                 
                                    
                                       X
                                    
                                    
                                       T
                                    
                                 
                                 K
                                 Δ
                                 X
                              
                           
                        where Δ
                           X
                        
                        =(
                           X
                        
                        −
                        
                           X
                        
                        0), 
                           X
                        
                        0 is the current vertex coordinates.

For each controlling point, the final position should be precise to a given position defined by the user. To constrain the position of each controlling point during deformation, we can minimize the following energy function:
                           
                              (9)
                              
                                 |
                                 |
                                 CX
                                 -
                                 R
                                 |
                                 
                                    
                                       |
                                    
                                    
                                       2
                                    
                                 
                              
                           
                        where the matrix 
                           C
                         is a sparse matrix with 2l row and 2n column; 
                           R
                         is 2l
                        ×1 matrix composed of the coordinates of vertices of the given position; l is the number of controlling points.To produce a plausible deformation result for a planar mesh, the deformed positions of all vertices are calculated by minimizing the sum of all energy terms. In our work, we also allow the user to specify a weighting parameter for each energy term. Accordingly, the energy function takes the form as follows:
                           
                              (10)
                              
                                 E
                                 (
                                 X
                                 )
                                 =
                                 
                                    
                                       ω
                                    
                                    
                                       A
                                    
                                 
                                 ‖
                                 AX
                                 
                                    
                                       ‖
                                    
                                    
                                       2
                                    
                                 
                                 +
                                 1
                                 /
                                 2
                                 
                                    
                                       ω
                                    
                                    
                                       K
                                    
                                 
                                 
                                    
                                       (
                                       X
                                       -
                                       
                                          
                                             X
                                          
                                          
                                             0
                                          
                                       
                                       )
                                    
                                    
                                       T
                                    
                                 
                                 K
                                 (
                                 X
                                 -
                                 
                                    
                                       X
                                    
                                    
                                       0
                                    
                                 
                                 )
                                 +
                                 
                                    
                                       ω
                                    
                                    
                                       C
                                    
                                 
                                 ‖
                                 CX
                                 -
                                 R
                                 
                                    
                                       ‖
                                    
                                    
                                       2
                                    
                                 
                              
                           
                        where the genes ωA
                        , ωK
                         and ωC
                         represent the weights of scale-invariant intrinsic variables, elastic deformation energy and vertex position constraints respectively. The above energy minimization function can be reformulated as the following:
                           
                              (11)
                              
                                 E
                                 (
                                 X
                                 )
                                 =
                                 
                                    
                                       ω
                                    
                                    
                                       A
                                    
                                 
                                 
                                    
                                       X
                                    
                                    
                                       T
                                    
                                 
                                 
                                    
                                       A
                                    
                                    
                                       T
                                    
                                 
                                 AX
                                 +
                                 1
                                 /
                                 2
                                 
                                    
                                       ω
                                    
                                    
                                       K
                                    
                                 
                                 
                                    
                                       (
                                       X
                                       -
                                       
                                          
                                             X
                                          
                                          
                                             0
                                          
                                       
                                       )
                                    
                                    
                                       T
                                    
                                 
                                 K
                                 (
                                 X
                                 -
                                 
                                    
                                       X
                                    
                                    
                                       0
                                    
                                 
                                 )
                                 +
                                 
                                    
                                       ω
                                    
                                    
                                       C
                                    
                                 
                                 
                                    
                                       (
                                       CX
                                       -
                                       R
                                       )
                                    
                                    
                                       T
                                    
                                 
                                 (
                                 CX
                                 -
                                 R
                                 )
                                 =
                                 
                                    
                                       X
                                    
                                    
                                       T
                                    
                                 
                                 
                                    
                                       A
                                    
                                    
                                       K
                                    
                                 
                                 X
                                 +
                                 1
                                 /
                                 2
                                 
                                    
                                       ω
                                    
                                    
                                       K
                                    
                                 
                                 (
                                 
                                    
                                       X
                                    
                                    
                                       0
                                    
                                    
                                       T
                                    
                                 
                                 
                                    
                                       X
                                    
                                    
                                       0
                                    
                                 
                                 -
                                 2
                                 
                                    
                                       X
                                    
                                    
                                       T
                                    
                                 
                                 
                                    
                                       KX
                                    
                                    
                                       0
                                    
                                 
                                 )
                                 +
                                 
                                    
                                       ω
                                    
                                    
                                       C
                                    
                                 
                                 (
                                 
                                    
                                       R
                                    
                                    
                                       T
                                    
                                 
                                 R
                                 -
                                 2
                                 
                                    
                                       X
                                    
                                    
                                       T
                                    
                                 
                                 
                                    
                                       C
                                    
                                    
                                       T
                                    
                                 
                                 R
                                 )
                              
                           
                        where 
                           
                              
                                 
                                    A
                                 
                                 
                                    K
                                 
                              
                              =
                              
                                 
                                    ω
                                 
                                 
                                    A
                                 
                              
                              
                                 
                                    A
                                 
                                 
                                    T
                                 
                              
                              A
                              +
                              1
                              /
                              2
                              
                                 
                                    ω
                                 
                                 
                                    K
                                 
                              
                              K
                              +
                              
                                 
                                    ω
                                 
                                 
                                    C
                                 
                              
                              
                                 
                                    C
                                 
                                 
                                    T
                                 
                              
                              C
                           
                         and then setting 
                           
                              
                                 
                                    ∂
                                    E
                                    (
                                    X
                                    )
                                 
                                 
                                    ∂
                                    X
                                 
                              
                              =
                              0
                           
                        , it follows that
                           
                              (12)
                              
                                 
                                    
                                       A
                                    
                                    
                                       K
                                    
                                 
                                 X
                                 =
                                 
                                    
                                       ω
                                    
                                    
                                       C
                                    
                                 
                                 
                                    
                                       C
                                    
                                    
                                       T
                                    
                                 
                                 R
                                 +
                                 1
                                 /
                                 2
                                 
                                    
                                       ω
                                    
                                    
                                       K
                                    
                                 
                                 
                                    
                                       KX
                                    
                                    
                                       0
                                    
                                 
                              
                           
                        
                     

The matrix 
                           A
                        , 
                           K
                        , and 
                           C
                         are sparse matrix, therefore the coefficient matrix 
                           A
                           K
                         of function is a sparse matrix, a fast solution for sparse equation cab be derived by TAUCS lib [23].

In our work, the final positions of controlling points should be precise to positions given by the user, but the positions of controlling points calculated by minimizing the energy function (10) are merely a practical approximation. Therefore, we need to minimize the global energy function iteratively until appeasing the convergence criterion, and the global energy function is recomputed according to the mesh from the last iteration. Where Pc
                         is a controlling point, and its corresponding constraint point is Pt
                        , the convergence criterion is determined as:
                           
                              (13)
                              
                                 
                                    max
                                 
                                 
                                 
                                    
                                       
                                          Distance
                                          
                                          (
                                          
                                             
                                                P
                                             
                                             
                                                c
                                             
                                          
                                          ,
                                          
                                             
                                                P
                                             
                                             
                                                t
                                             
                                          
                                          )
                                       
                                    
                                 
                                 <
                                 γ
                              
                           
                        where Distance (Pc
                        , Pt
                        ) is the distance between Pc
                         and Pt
                        ; γ is the tolerance given by the user. The number of iterations needed for convergence of the solver varies significantly and depends on many factors, e.g. the shape itself and the magnitude of the deformation. For the models used in this paper, the average number of iterations is 8 with γ
                        =0.01.

In this paper, the described mesh deformation algorithm was realized using object oriented programming and C++ language, and was implemented on a 3.00GHz Pentium(R) 4 computer with 2.00GB memory. We have tested our algorithm on a variety of planar mesh models, and presented a couple of results in this section.

In Fig. 2
                        , we show an example to illustrate the effects of scale-invariant intrinsic variables and elastic deformation energy on deformation results. Fig. 2a shows the original triangle meshes of a balloon model with five controlling points marked by black dots, and the balloon is squeezed by manipulating these controlling points. In Fig. 2b, the deformed mesh is obtained with only scale-invariant intrinsic variables. Fig. 2c shows the result by using only elastic deformation energy. As can be seen in the case of Fig. 2b, the area of the model obtained by scale-invariant intrinsic variables based deformation changes significantly. Such a rapid change in geometry is undesirable in the case of the mesh deformation approach. The elastic deformation energy can keep the area of the element, but may yield implausible results for large deformations due to its linear nature. The deforming result produced by our method according to Eq. (12) is shown in Fig. 2d, and the parameters are set to ωA
                        
                        =1, ωK
                        
                        =10 and ωC
                        
                        =100. Fig. 2e and f present the deforming results of the balloon model with Igarashi et al. [10] and Guo et al. [12] respectively.


                        Fig. 3
                         demonstrates the performance of our algorithm using different weights. In the figure, ωA
                        , ωK
                         and ωC
                         are the parameters in Eq. (10), and ni is the resulting number of iterations with these specified parameters. The original shape is Fig. 3a and b shows the original triangle meshes with five controlling points. As the weights change a lot in this example, there is no obvious influence on the deforming result, and the convergence for mesh deformation is quick. According to our experimental tests, default settings ωA
                        
                        =1, ωK
                        
                        =10 and ωC
                        
                        =100 always yield good results for large deformations of planar models.

In the field of computer-aided design, morphing between two dissimilar shapes occurs frequently, and Fig. 4
                         compares the results generated by some classical different planar mesh deformation methods with our method. Fig. 4a is an original planar mesh with one hole, and the target deformation result is a homeomorphism mesh with unchanged outer boundary and mutative inner hole. We can see that our method obtains a plausible result with valid mesh topology and precise positions of controlling points, while other methods [10,12] produce implausible results between two dissimilar shapes.


                        Fig. 5
                         shows a large deformation example of a rest shape model. Fig. 5b shows the smooth and natural results which are stretched and bended by manipulating the black dots marked controlling points. The deforming results with these controlling points obtained by Igarashi et al. [10] and Guo et al. [12] are shown in Fig. 5c and d respectively. As can be seen in the case of rest shape model, our method can provide more realistic result than the other two deformation methods.

To illustrate the versatility of our 2D mesh deformation method, more examples are given in Figs. 6 and 7
                        
                        . Fig. 6 shows a deformation of a flower with red
                           1
                           For interpretation of color in Fig. 6, the reader is referred to the web version of this article.
                        
                        
                           1
                         colored controlling points. The stem and leaves of the flower are deformed naturally with large distortion and large local rotations, and the shape of the flower is preserved well. Fig. 7 illustrates a large deformation of a horse. The details of the horse are well preserved with large deformations of the body and legs of the horse, which can be performed by manipulating the controlling points marked by black dots.

Our algorithm is not only applicable to models composed of triangle meshes but also models with hybrid meshes. Fig. 8
                         demonstrates a mesh deformation for 2D model consists of triangle meshes and quadrilateral meshes, and all nodes in the outer boundary are controlling points.


                        Table 1
                         shows the computational times of the aforementioned models by our method, Igarashi et al. and Guo et al. From the result, the time consumptions of our method are acceptable, and our method obtains a more physically plausible than those methods in [10,12]. Overall, our method achieves a good combination of efficiency and effectiveness in terms of deformation quality and computational time.

Hexahedral mesh generation is important to computer aided design and numerical simulation, the most common used hexahedral mesh generation technique [24] is to divide a solid model into many sub-volumes, which can be meshed by sweep method. Given a extrusion volume that consist of source surfaces, target surfaces and a set of surfaces that join them, called linking sides, the hexahedral mesh generation process of a swept volume is generally as follows: (1) Mesh source surfaces using structured or unstructured quadrilateral mesh generation algorithm; (2) Mesh linking sides by standard structured quadrilateral mesh algorithm and build boundary node layers; (3) Project the source surface mesh onto the target surfaces(the target mesh to be generated must have the same connectivity as the source mesh); (4) Locate the inner layers of nodes and generate hexahedral elements. Note that several quadrilateral mesh generation algorithms [25] have been proven to be applicable to the first step, and some standard structured quadrilateral surface mesh generator [26] can create grid in the second step. The location of interior nodes depends heavily on the source mesh and the target mesh. Hence, the main issue to be dealt with by any sweep algorithm is the third step. We use the described mesh deformation algorithm to achieve mesh projection not only between similar surfaces but also dissimilar surfaces, and the interior nodes can be located by Shepard interpolation method [27].

Let Ms
                         be the given source surface mesh, and St
                         is the target surfaces, our goal is to find a mapping between Ms
                         and St
                         which aims to get a target mesh Mt
                         with the same connectivity of source mesh Ms
                        . It is difficult to project the source mesh to the target surfaces directly when the surfaces are non-planar or consist of dissimilar shapes. Thus, a mesh projection method using the described planar mesh deformation is presented in this paper, and the process of this method for target mesh generation is described in detail as follows:
                           
                              (1)
                              Mesh the target surfaces St
                                  into triangles by Delaunay triangulation algorithm, and a triangular mesh can be obtained, named as target base mesh Mb
                                 .

Flatten the target base mesh Mb
                                  and the source mesh Ms
                                  by mesh parameterization method, and the planar mesh of Mb
                                  and Ms
                                  can be obtained respectively, denoted as Ds
                                  and Dt
                                 .

Morph the planar source mesh Ds
                                  to the area bounded by the planar target base mesh Dt
                                  using the described planar mesh deformation method, and the barycentric coordinates of source vertices in target triangular elements are calculated.

Project the planar source vertices onto the three dimensional target base mesh Mb
                                  using the barycentric coordinate of the vertices, and the homeomorphism target mesh Mt
                                  is obtained.

Nowadays, the Delaunay triangulation algorithm in step (1) is fully mature, and the triangular mesh created by Delaunay algorithm [28] is associated with the local surface curvature, which keeps the shape of the target surfaces. To minimize the distortion of mesh generated in the parameterization, we adopt the as-rigid-as-possible mesh parameterization algorithm [29] in the second step. This algorithm is simple, effective and fast, and the parameterization result is shape preserving and boundary free. The described planar mesh deformation algorithm has been proven to be applicable to the third step, and target mesh Mt
                         can be obtained by the barycentric coordinate in step (4).

In Fig. 9
                        , we show an example to demonstrate the process of the mesh projection method. Fig. 9a shows the extrusion volume with the source mesh generation result and the target base mesh. Fig. 9b and c are results of planar parameterization for source mesh and target base mesh in the second step by Liu’s method [29]. The boundary nodes of planar source mesh are moved to the corresponding planar target nodes using our mesh deformation algorithm and the result mesh is shown in Fig. 9d. Then, the homeomorphism target mesh will be obtained by projection the planar nodes to three dimensional space and the interior nodes can be located by Shepard interpolation between source nodes and target nodes. The resulting unstructured hexahedral elements are shown in Fig. 9e.

The described mesh projection scheme was implemented and several extrusion volumes were meshed by our mesh projection method. In order to confirm the effectiveness of our method, we adopt the Scaled Jacobian to evaluate the mesh quality. The Scaled Jacobian is the fundamental quality criterion to a finite element mesh [30]. For a hexahedron, the full range of the scaled Jacobian value is from −1 to 1. And f
                        scaled_jacobian
                        =1 if the hexahedral element is an ideal cubical element, f
                        scaled_jacobian
                        =−1 if the hexahedral element is a worst distorted element. The acceptable range of Scaled Jacobian for finite element method is from 0.5 to 1.


                        Fig. 10
                         shows the mesh quality of the resulting mesh in Fig. 9 evaluated by Scaled Jacobian. The resulting unstructured hexahedral mesh has 12,694 nodes, 11,256 elements. As can be seen from Fig. 10, 100% of the elements are suitable for the finite element method with the Scaled Jacobian value above 0.65, and the minimal Scaled Jacobian value of all elements is 0.67. More than 91% of the elements have good or excellent shapes with the Scaled Jacobian value above 0.85.


                        Fig. 11
                         presents the hexahedral mesh generation result for part of a blade by our method. Duo to the large changes between source and target surfaces, the hexahedral mesh generation of this volume cannot be solved by the affine mapping method. The initial source mesh consists of 351 nodes, 285 elements, which have been extruded along a sweep axis generating 36 layers of hexahedral elements, and the resulting unstructured hexahedral mesh is shown in Fig. 11a. The 20th layer, 30th layer, and 36th layer are showed in Fig. 11b–d respectively. In order to compare the changes of mesh quality in mesh projection, the first layer of the resulting mesh in Fig. 11a is compared with the last layer, as shown in Fig. 12
                        . Fig. 12a shows the histogram of Scaled Jacobian for the first layer elements and the histogram for the last layer elements evaluated by Scaled Jacobian is shown in Fig. 12b. The minimal Scaled Jacobian value in the first layer is 0.55 with the minimal value in last layer is 0.51. From Fig. 12, we can see that our projection method produces a plausible target mesh with low distortion.


                        Fig. 13
                         shows the hexahedral mesh of a volume with non-planar source surfaces. The resulting unstructured hexahedral mesh has 27,528 nodes and 24,510 hexahedral elements with 30 layers, as shown in Fig. 13a. The inner layers are showed in Fig. 13b. Fig. 14
                         presents the hexahedral mesh generated for a blade decomposed in several sub-volumes using a multi-sweep algorithm.

In this paper, a novel planar mesh deformation algorithm is demonstrated. In order to preserve the local and global properties of a planar shape, the scale-invariant variables and linear-elastic deformation energy are introduced to obtain a global energy function, and the planar deforming results can be obtained by minimizing the global energy function. 2D mesh deformation examples show that our mesh deformation algorithm is stable and efficient, and can deal with large deformations between dissimilar shapes. Furthermore, we present a new mesh projection approach based on our planar mesh deformation algorithm in Section 4. Detailed steps are given to obtain the target mesh, and the presented approach is easy to comprehend and to implement. Hexahedral mesh generation results for extrusion volumes show that the mesh quality of hexahedral element generated by our mesh projection approach is acceptable for finite element method, and the generated target mesh has small distortion compared with the source mesh.

In the future work, we will test our planar mesh deformation algorithm with more constraints, such as vector field constraint, form feature constraint or a combination of them, which are commonly used in engineering applications. Furthermore, we will consider the mesh deformation with three-dimensional models, and extend our algorithm to 3D by preserving more geometric properties.

@&#ACKNOWLEDGEMENTS@&#

This work was funded by the Key Project of the National Natural Science Foundation of China (No. 10932010) and National Basic Research Program of China (No. 2011CB707305). These supports are gratefully acknowledged.

@&#REFERENCES@&#

