@&#MAIN-TITLE@&#Alpha-plane based automatic general type-2 fuzzy clustering based on simulated annealing meta-heuristic algorithm for analyzing gene expression data

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           Presenting a new two-stage meta-heuristic clustering algorithm based on general type-2 fuzzy sets.


                        
                        
                           
                           Incorporating a new similarity-based objective function using alpha-plane representation of general type-2 fuzzy sets.


                        
                        
                           
                           Implementing the proposed approach on real microarray gene expression datasets.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

General type-2 fuzzy sets

Clustering

Gene expression data

Simulated annealing

α-plane representation

@&#ABSTRACT@&#


               
               
                  This paper considers microarray gene expression data clustering using a novel two stage meta-heuristic algorithm based on the concept of α-planes in general type-2 fuzzy sets. The main aim of this research is to present a powerful data clustering approach capable of dealing with highly uncertain environments. In this regard, first, a new objective function using α-planes for general type-2 fuzzy c-means clustering algorithm is represented. Then, based on the philosophy of the meta-heuristic optimization framework ‘Simulated Annealing’, a two stage optimization algorithm is proposed. The first stage of the proposed approach is devoted to the annealing process accompanied by its proposed perturbation mechanisms. After termination of the first stage, its output is inserted to the second stage where it is checked with other possible local optima through a heuristic algorithm. The output of this stage is then re-entered to the first stage until no better solution is obtained. The proposed approach has been evaluated using several synthesized datasets and three microarray gene expression datasets. Extensive experiments demonstrate the capabilities of the proposed approach compared with some of the state-of-the-art techniques in the literature.
               
            

@&#INTRODUCTION@&#

As an efficient high throughput technology, microarrays play a fundamental role in different biomedical disciplines such as computational biology and bioinformatics. This technology has brought about parallel investigation of thousands of genomic codes, simultaneously. This technology has been widely used in characterizing various gene functions, understanding different molecular biological processes [1–4], etc. Microarray gene expression data is generally of huge volume. Therefore, the latent knowledge behind them can only be used through computational analysis techniques. Among these techniques, clustering is a widespread data mining tool to group the data into several subgroups with similar functionalities and characteristics.

Clustering is an unsupervised pattern classification method which partitions the input space into M regions 
                        {
                        
                           
                              C
                           
                           
                              1
                           
                        
                        ,
                        
                        
                           
                              C
                           
                           
                              2
                           
                        
                        ,
                        
                        ⋯
                        ,
                        
                        
                           
                              C
                           
                           
                              M
                           
                        
                        }
                      based on some similarity criteria. Given a dataset X, most clustering algorithms aim to obtain a M×N matrix U(X) called the partition matrix whose element 
                        
                           
                              u
                           
                           
                              i
                              j
                           
                        
                      represents the membership degree of the pattern 
                        j
                      to the cluster prototype 
                        i
                     . Among various crisp and fuzzy clustering algorithms, the Fuzzy C-Means (FCM) [5] algorithm has been proved to be quite efficient in dealing with different clustering tasks. However, FCM suffers from serious drawbacks including:
                        
                           •
                           It is highly sensitive to outliers.

Its clustering quality is fine just for datasets with spherical or circular geometry.

Its performance is not suitable to handle datasets with complex geometrical shapes such as manifolds.

Application of different clustering algorithms for extracting the hidden knowledge in microarray data has been under attention of researchers during the past few years. Among them, several standard clustering algorithms have been applied to bioinformatics and medical fields including: k-means algorithm [6], FCM [7], hierarchical methods [4], Self Organizing Maps (SOM) [8], meta-heuristic clustering approaches [9–14], fuzzy systems [15], hybrid methods [16], and image segmentation methods based on clustering [18].

Among the mentioned references, fuzzy logic based approaches have long been applied to various science and engineering fields including medicine [17,19,20], function approximation [21–24], etc. Fuzzy logic enables researchers to deal with uncertain, dirty, noisy, incomplete, and sometimes contradictory data. Higher order fuzzy sets, as extension of type-1 fuzzy sets (T1 FSs) have been proved to be more flexible in dealing with highly uncertain environments [21]. Type-2 fuzzy sets (T2 FSs), including interval type-2 fuzzy sets (IT2 FSs) and general type-2 fuzzy sets (GT2 FSs) are the most widespread and evolving higher order FSs where each primary domain member has a membership function in the form of an interval instead of a single value. As the general frame of IT2 FSs, GT2 FSs represent an additional dimension to each primary value as the secondary membership function which makes them much stronger in uncertain environments. With the advent of new representation techniques, such FSs are becoming ubiquitous in various fuzzy disciplines especially fuzzy pattern recognition.

One of the main applications of fuzzy logic is pattern recognition and its branches such as clustering. Based on the traditional FCM, IT2 fuzzy clustering was first introduced by Hwang and Rhee [25]. They had used two fuzzifier coefficients for the FCM clustering and finally combined the results of both clustering algorithms using Karnik–Mendel (KM) type-reduction algorithm [26] to compute the cluster prototypes. Then, based on the concept of α-planes, Linda and Manic [27] introduced general type-2 FCM. The core of both these methods is the FCM algorithm. A disadvantage of the FCM based clustering algorithms is that in these algorithms the number of optimal clusters is not known a priori. To tackle such a drawback, researchers have focused on some criteria to find the optimal or near-optimal number of clusters. Such criteria are called cluster validity indices (CVIs). CVIs usually concentrate on two main issues:
                        
                           •
                           
                              Compactness of clusters: A clustering is optimal where each cluster is compact as much as possible.


                              Separation of clusters: Members of each cluster are close to each other and separated from members of other clusters as much as possible.

So far, a considerable number of CVIs have been introduced to the literature. Some of these approaches can be found in [28–35]. In these approaches, to find the near-optimal number of clusters, clustering algorithms should be executed several times for each cluster number and its outputs should be implemented into the CVI to find the near-optimal number of clusters. However, they cannot automatically find the optimal number of clusters. In this regard, in [13], an automated clustering algorithm based on Simulated Annealing (SA) and FCM is presented. The objective function used in [13] was the old Xie-Beni CVI [36] which mainly concentrates on separation of clusters. On the other hand, its basis is the FCM which suffers from the drawbacks mentioned before.

In this paper, we aim to present a two-stage SA clustering algorithm based on the concept of α-planes in GT2 FSs which utilizes a newly developed GT2 CVI. The objective function of this approach has been previously developed by the authors [44] as the first similarity based GT2 fuzzy CVI. Then, the mechanism of the GT2 fuzzy SA will be represented which can automatically detect the near-optimal number of clusters. Of course, because of the stochastic nature of meta-heuristic approaches, in some cases only the near-optimal number of clusters would be obtained.

In the first stage of the algorithm, the GT2 FCM is implemented. Then, quality of the computed results are analyzed using a GT2 fuzzy CVI developed by the authors. The objective function used in the proposed approach, is primarily developed on the concept of α-planes as a criterion to measure the similarity between patterns in each cluster. The best partitioning is obtained when the similarity between members of each cluster is in its highest degree while patterns in different clusters are dissimilar as much as possible. In the first stage, three different mechanisms for searching the solution space have been utilized. After finding the best solution, the second stage begins. The second stage aims at constructing a blacklist of probable local optima. During the second stage, based on the computed number of clusters in the first stage, the GT2 FCM is repeated for two other cluster numbers, one larger and one smaller than the solution of the stage 1. Based on the new CVI, if the first stage solution is better than these two number of clusters, then the algorithm terminates. But, if one of those new solutions has a larger objective function value, then the number of clusters obtained at stage one is added to the blacklist and it would not be considered any more. In this situation, the stage one is iterated again until the best number of clusters with the highest objective function is obtained.

The proposed framework is one of the very first hybrid meta-heuristic approaches deploying GT2 FSs. To date, no similar approach has been introduced to the literature. In the forthcoming sections, using synthesized datasets, capabilities of the proposed approach will be tested and then it would be implemented for clustering three real microarray datasets accompanied by extensive experiments.

The rest of the paper is organized as follows: The foundations of microarray data and GT2 FSs are briefly reviewed in Sections 2 and 3, respectively. The proposed approach is discussed in Section 4 and its computational complexity will be computed in Section 5. Sections 6 and 7 are devoted to experimental evaluations and conclusion remarks, respectively.

A microarray is a small chip on which a huge number of DNA molecules are attached. Each cell of a microarray chip corresponds to a DNA sequence. The first step in a microarray experiment is to extract RNA from a tissue sample and the amplification of RNA. Thereafter, two mRNA samples are reverse-transcribed into cDNA (targets) labeled using different fluorescent dyes (red-fluorescent dye Cy5 and green-fluorescent dye Cy3). According to the nature of the base-pairs, the cDNA binds to the specific oligonucleotides on the array. In the next stage, a laser excites the dye so that the amount of cDNA can be quantified by measuring the fluorescence intensities. Gene expression profiles can be obtained by the log ratio of the two intensities of each dye:
                        
                           (1)
                           
                              Gene
                              
                              expression
                              
                              level
                              =
                              
                                 
                                    log
                                 
                                 
                                    2
                                 
                              
                              
                              
                                 
                                    Intensity
                                    
                                    (
                                    Cy
                                    5
                                    )
                                 
                                 
                                    Intensity
                                    
                                    (
                                    Cy
                                    3
                                    )
                                 
                              
                           
                        
                     
                  

In microarray experiments, expression levels of thousands of genes are measured, simultaneously. A typical gene expression microarray dataset is usually represented by a 
                        m
                        ×
                        n
                      matrix 
                        M
                      whose element 
                        
                           
                              k
                           
                           
                              i
                              j
                           
                        
                      represents the expression level for the gene 
                        i
                      at the condition 
                        j
                     .

Gene expression data may be noisy and also may suffer from variations caused by biological experiments. So, such data should take a preprocessing operation before implementing the clustering process. In this regard, several preprocessing methods have been used in this area such as missing value estimation and normalization. For more information on preprocessing activities on microarray datasets, the reader can refer to [37].

A GT2 FS 
                        
                           A
                           ˜
                        
                      which is expressed on a universe of discourse 
                        X
                      using its T2 membership function 
                        
                           
                              μ
                           
                           
                              
                                 A
                                 ˜
                              
                           
                        
                        (
                        x
                        ,
                        u
                        )
                      can be defined as follows [38]:
                        
                           (2)
                           
                              
                                 A
                                 ˜
                              
                              =
                              
                                 ∫
                                 
                                    x
                                    ∈
                                    X
                                 
                              
                              
                                 
                                    ∫
                                    
                                       u
                                       ∈
                                       
                                          
                                             J
                                          
                                          
                                             x
                                          
                                       
                                    
                                 
                                 
                                    
                                       
                                          μ
                                       
                                       
                                          
                                             A
                                             ˜
                                          
                                       
                                    
                                    (
                                    x
                                    ,
                                    u
                                    )
                                    /
                                    (
                                    x
                                    ,
                                    u
                                    )
                                    d
                                    x
                                    d
                                    u
                                    ,
                                 
                              
                              
                              
                                 
                                    J
                                 
                                 
                                    x
                                 
                              
                              ⊆
                              [
                              0
                              ,
                              
                              1
                              ]
                           
                        
                     where 
                        u
                      denotes the primary membership variable, 
                        x
                      is the primary domain variable, 
                        
                           
                              J
                           
                           
                              x
                           
                        
                      denotes an interval between the lower and the upper membership functions, 
                        
                           
                              μ
                           
                           
                              
                                 A
                                 ˜
                              
                           
                        
                        (
                        x
                        ,
                        u
                        )
                      denotes the secondary membership function, 
                        x
                        ∈
                        X
                     , and 
                        u
                        ∈
                        
                           
                              J
                           
                           
                              x
                           
                        
                     . Here, 
                        ∬
                        
                     represents the union over the entire possible values of 
                        x
                        ,
                        
                        u
                        ,
                      and 
                        
                           
                              μ
                           
                           
                              
                                 A
                                 ˜
                              
                           
                        
                        (
                        x
                        ,
                        u
                        )
                     .

Basically, there are two major representations for GT2 FSs including: the Vertical Slice representation and the Wavy Slice representation [39].

Vertical slices at each point represent a secondary membership function 
                        
                           
                              μ
                           
                           
                              
                                 A
                                 ˜
                              
                           
                        
                        (
                        x
                        =
                        x
                        ′
                        ,
                        
                        u
                        )
                      for 
                        x
                        ′
                        ∈
                        X
                      and 
                        ∀
                        u
                        ∈
                        
                           
                              J
                           
                           
                              x
                              ′
                           
                        
                        ⊆
                        [
                        0
                        ,
                        
                        1
                        ]
                     :
                        
                           (3)
                           
                              
                                 
                                    μ
                                 
                                 
                                    
                                       A
                                       ˜
                                    
                                 
                              
                              (
                              x
                              =
                              x
                              ′
                              ,
                              
                              u
                              )
                              ≡
                              
                                 ∫
                                 
                                    u
                                    ∈
                                    
                                       
                                          J
                                       
                                       
                                          x
                                          ′
                                       
                                    
                                 
                              
                              
                                 (
                                 
                                    
                                       f
                                    
                                    
                                       x
                                       ′
                                    
                                 
                                 (
                                 u
                                 )
                                 /
                                 u
                                 )
                                 d
                                 u
                                 ,
                                 
                                 
                                    
                                       J
                                    
                                    
                                       x
                                       ′
                                    
                                 
                                 ⊆
                                 [
                                 0
                                 ,
                                 
                                 1
                                 ]
                              
                           
                        
                     where 
                        
                           
                              f
                           
                           
                              x
                              ′
                           
                        
                        (
                        u
                        )
                      is the grade of the secondary membership function and 
                        
                           
                              f
                           
                           
                              x
                              ′
                           
                        
                        (
                        u
                        )
                        ⊆
                        [
                        0
                        ,
                        
                        1
                        ]
                     . Suppose that the entire domain is discretized into N samples. Then, 
                        
                           A
                           ˜
                        
                      can be represented as an aggregation of its entire vertical slices ([40]):
                        
                           (4)
                           
                              
                                 A
                                 ˜
                              
                              =
                              
                                 ∑
                                 
                                    i
                                    =
                                    1
                                 
                                 N
                              
                              
                                 
                                    [
                                    
                                       
                                          ∫
                                          
                                             u
                                             ∈
                                             
                                                
                                                   J
                                                
                                                
                                                   
                                                      
                                                         x
                                                      
                                                      
                                                         i
                                                      
                                                   
                                                
                                             
                                          
                                       
                                       
                                          (
                                          
                                             
                                                f
                                             
                                             
                                                
                                                   
                                                      x
                                                   
                                                   
                                                      i
                                                   
                                                
                                             
                                          
                                          (
                                          u
                                          )
                                          /
                                          u
                                          )
                                          d
                                          u
                                       
                                    
                                    ]
                                 
                                 /
                                 
                                    
                                       x
                                    
                                    
                                       i
                                    
                                 
                              
                           
                        
                     
                  


                     
                        
                           A
                           ˜
                        
                      can also be represented as follows ([40]):
                        
                           (5)
                           
                              
                                 A
                                 ˜
                              
                              =
                              
                                 ∪
                                 
                                    ∀
                                    
                                       
                                          
                                             A
                                             ˜
                                          
                                       
                                       
                                          e
                                       
                                    
                                 
                              
                              
                                 
                                    
                                       
                                          A
                                          ˜
                                       
                                    
                                    
                                       e
                                    
                                 
                              
                           
                        
                     where, 
                        
                           A
                           ˜
                        
                      is represented by the union of its all embedded T2 FSs. An embedded T1 fuzzy set of 
                        
                           A
                           ˜
                        
                     , 
                        
                           
                              
                                 A
                                 ˜
                              
                           
                           
                              e
                           
                        
                     , can be described by a MF 
                        
                           
                              u
                           
                           
                              
                                 
                                    
                                       A
                                       ˜
                                    
                                 
                                 
                                    e
                                 
                              
                           
                        
                        :
                        
                        X
                        →
                        [
                        0
                        ,
                        
                        1
                        ]
                     , where 
                        
                           
                              u
                           
                           
                              
                                 
                                    
                                       A
                                       ˜
                                    
                                 
                                 
                                    e
                                 
                              
                           
                        
                        ∈
                        
                           
                              J
                           
                           
                              x
                           
                        
                     . 
                        
                           
                              
                                 A
                                 ˜
                              
                           
                           
                              e
                           
                        
                      is expressed as [41]:
                        
                           (6)
                           
                              
                                 
                                    
                                       A
                                       ˜
                                    
                                 
                                 
                                    e
                                 
                              
                              =
                              
                                 ∫
                                 
                                    x
                                    ∈
                                    X
                                 
                              
                              
                                 (
                                 u
                                 /
                                 x
                                 )
                                 d
                                 x
                              
                              ,
                              
                              u
                              ∈
                              
                                 
                                    J
                                 
                                 
                                    x
                                 
                              
                           
                        
                     where the embedded T1 FS 
                        
                           
                              
                                 A
                                 ˜
                              
                           
                           
                              e
                           
                        
                     , which corresponds to an embedded T2 FS 
                        
                           
                              
                                 A
                                 ˜
                              
                           
                           
                              e
                           
                        
                     , contains the primary memberships of that 
                        
                           
                              
                                 A
                                 ˜
                              
                           
                           
                              e
                           
                        
                     .

An α-plane of a GT2 FS 
                           
                              A
                              ˜
                           
                         can be defined as the union of the entire primary memberships of 
                           
                              A
                              ˜
                           
                         whose secondary grades are greater than or equal to α (
                           0
                           ≤
                           α
                           ≤
                           1
                        ). α-plane of 
                           
                              A
                              ˜
                           
                         is denoted by 
                           
                              
                                 
                                    A
                                    ˜
                                 
                              
                              
                                 α
                              
                           
                         
                        [42].
                           
                              (7)
                              
                                 
                                    
                                       
                                          A
                                          ˜
                                       
                                    
                                    
                                       α
                                    
                                 
                                 =
                                 
                                    ∫
                                    
                                       ∀
                                       x
                                       ∈
                                       X
                                    
                                 
                                 
                                    
                                       ∫
                                       
                                          ∀
                                          u
                                          ∈
                                          
                                             
                                                J
                                             
                                             
                                                x
                                             
                                          
                                       
                                    
                                    
                                       {
                                       (
                                       x
                                       ,
                                       
                                       u
                                       )
                                       |
                                       
                                          
                                             f
                                          
                                          
                                             x
                                          
                                       
                                       (
                                       u
                                       )
                                       ≥
                                       α
                                       }
                                    
                                 
                                 d
                                 x
                                 d
                                 u
                              
                           
                        
                        
                           
                              
                                 S
                              
                              
                                 
                                    A
                                    ˜
                                 
                              
                           
                           (
                           x
                           |
                           α
                           )
                         denotes the α-cut of the secondary MF 
                           
                              
                                 μ
                              
                              
                                 
                                    A
                                    ˜
                                 
                              
                           
                           (
                           x
                           )
                        :
                           
                              (8)
                              
                                 
                                    
                                       S
                                    
                                    
                                       
                                          A
                                          ˜
                                       
                                    
                                 
                                 (
                                 x
                                 |
                                 α
                                 )
                                 =
                                 [
                                 
                                    
                                       S
                                    
                                    
                                       L
                                    
                                 
                                 (
                                 x
                                 |
                                 α
                                 )
                                 ,
                                 
                                 
                                    
                                       S
                                    
                                    
                                       R
                                    
                                 
                                 (
                                 x
                                 |
                                 α
                                 )
                                 ]
                              
                           
                        
                     

A composition of the entire α-cuts yields 
                           
                              
                                 
                                    A
                                    ˜
                                 
                              
                              
                                 α
                              
                           
                        , i.e.,
                           
                              (9)
                              
                                 
                                    
                                       
                                          A
                                          ˜
                                       
                                    
                                    
                                       α
                                    
                                 
                                 =
                                 
                                    ∫
                                    
                                       ∀
                                       x
                                       ∈
                                       X
                                    
                                 
                                 
                                    (
                                    
                                       
                                          S
                                       
                                       
                                          
                                             A
                                             ˜
                                          
                                       
                                    
                                    (
                                    x
                                    |
                                    α
                                    )
                                    /
                                    x
                                    )
                                    d
                                    x
                                 
                                 =
                                 
                                    ∫
                                    
                                       ∀
                                       x
                                       ∈
                                       X
                                    
                                 
                                 
                                    (
                                    
                                       
                                          ∫
                                          
                                             ∀
                                             u
                                             ∈
                                             [
                                             
                                                
                                                   S
                                                
                                                
                                                   L
                                                
                                             
                                             (
                                             x
                                             |
                                             α
                                             )
                                             ,
                                             
                                             
                                                
                                                   S
                                                
                                                
                                                   R
                                                
                                             
                                             (
                                             x
                                             |
                                             α
                                             )
                                             ]
                                          
                                       
                                       
                                          u
                                          
                                          d
                                          u
                                       
                                    
                                    )
                                 
                                 /
                                 x
                                 
                                 d
                                 x
                              
                           
                        
                     

According to [41], each α-plane is bounded from the top by its upper membership function, 
                           
                              
                                 
                                    μ
                                    ¯
                                 
                              
                              
                                 
                                    A
                                    ˜
                                 
                              
                           
                           (
                           x
                           |
                           α
                           )
                        , and from the bottom by its lower membership function, 
                           
                              
                                 
                                    μ
                                    
                                       ̲
                                    
                                 
                              
                              
                                 
                                    A
                                    ˜
                                 
                              
                           
                           (
                           x
                           |
                           α
                           )
                        . The upper and lower membership functions of 
                           
                              
                                 
                                    A
                                    ˜
                                 
                              
                              
                                 α
                              
                           
                         can be described in terms of α-cuts:
                           
                              (10)
                              
                                 
                                    
                                       
                                          μ
                                          ¯
                                       
                                    
                                    
                                       
                                          A
                                          ˜
                                       
                                    
                                 
                                 (
                                 x
                                 |
                                 α
                                 )
                                 =
                                 
                                    ∫
                                    
                                       ∀
                                       x
                                       ∈
                                       X
                                    
                                 
                                 
                                    
                                       
                                          s
                                       
                                       
                                          R
                                       
                                    
                                    (
                                    x
                                    |
                                    α
                                    )
                                 
                                 d
                                 x
                              
                           
                        
                        
                           
                              (11)
                              
                                 
                                    
                                       
                                          μ
                                          ̲
                                       
                                    
                                    
                                       
                                          A
                                          ˜
                                       
                                    
                                 
                                 (
                                 x
                                 |
                                 α
                                 )
                                 =
                                 
                                    ∫
                                    
                                       ∀
                                       x
                                       ∈
                                       X
                                    
                                 
                                 
                                    
                                       
                                          s
                                       
                                       
                                          L
                                       
                                    
                                    (
                                    x
                                    |
                                    α
                                    )
                                 
                                 d
                                 x
                              
                           
                        
                     

Each α-plane is indeed an interval T2 FS with the centroid 
                           
                              
                                 C
                              
                              
                                 
                                    
                                       
                                          A
                                          ˜
                                       
                                    
                                    
                                       α
                                    
                                 
                              
                           
                           (
                           x
                           )
                        . Liu [43] states that the centroid of a GT2 FS 
                           
                              A
                              ˜
                           
                        , 
                           
                              
                                 C
                              
                              
                                 
                                    A
                                    ˜
                                 
                              
                           
                           (
                           x
                           )
                        , is a composition of its all α-planes, i.e.,
                           
                              (12)
                              
                                 
                                    
                                       C
                                    
                                    
                                       
                                          A
                                          ˜
                                       
                                    
                                 
                                 (
                                 x
                                 )
                                 =
                                 
                                    ∪
                                    
                                       α
                                       ∈
                                       [
                                       0
                                       ,
                                       
                                       1
                                       ]
                                    
                                 
                                 
                                    α
                                    /
                                    
                                       
                                          C
                                       
                                       
                                          
                                             
                                                
                                                   A
                                                   ˜
                                                
                                             
                                             
                                                α
                                             
                                          
                                       
                                    
                                    (
                                    x
                                    )
                                 
                              
                           
                        
                     

Centroid of each α-plane, 
                           
                              
                                 C
                              
                              
                                 
                                    
                                       
                                          A
                                          ˜
                                       
                                    
                                    
                                       α
                                    
                                 
                              
                           
                           (
                           x
                           )
                        , is bounded so it can be rewritten as (13):
                           
                              (13)
                              
                                 
                                    
                                       C
                                    
                                    
                                       
                                          A
                                          ˜
                                       
                                    
                                 
                                 (
                                 x
                                 )
                                 =
                                 
                                    ∪
                                    
                                       α
                                       ∈
                                       [
                                       0
                                       ,
                                       
                                       1
                                       ]
                                    
                                 
                                 
                                    α
                                    /
                                    [
                                    
                                       
                                          c
                                       
                                       
                                          l
                                       
                                    
                                    (
                                    
                                       A
                                       ˜
                                    
                                    |
                                    α
                                    )
                                    ,
                                    
                                    
                                       
                                          c
                                       
                                       
                                          r
                                       
                                    
                                    (
                                    
                                       A
                                       ˜
                                    
                                    |
                                    α
                                    )
                                    ]
                                 
                              
                           
                        
                     

A schematic view of a GT2 FS with mixed Gaussian primary MFs represented by its α-planes is depicted in 
                        Fig. 1.

In this section, the proposed approach will be discussed step by step. The framework of this approach includes two main stages. During the first stage, the annealing process is performed. Stage one includes: generating initial solution, initial energy computation, new solution generation, blacklist checking, and selection of the best solution. Stage two consists of obtaining the number of solutions (C) computed in the previous stage, implementing GT2 FCM for the number of clusters C+1 and C−1, choosing the best local optimum solution and mapping the worse solution into the blacklist. In the following, each step of the algorithm is described.

In this paper, the computed solutions are arranged as a matrix where each row represents the cluster center and columns represent dimensions of that cluster center. For example, in a 4-dimensional space, if there exists three clusters, then the entire cluster centers will be represented by a 3×4 matrix.

In order to begin the algorithm from a ‘good’ start point, first a random integer 
                           K
                           ∈
                           
                              {
                              
                                 1
                                 ,
                                 
                                 2
                                 ,
                                 
                                 ⋯
                                 ,
                                 
                                 10
                              
                              }
                           
                         is generated. Then, using 
                           K
                        , GT2 FCM is applied to the dataset and partitions it into 
                           K
                         clusters. The output cluster centers will be ordered according to the matrix representation described in the previous section.

During each iteration, the objective function value is computed using the first GT2 fuzzy CVI proposed by the authors in their recent research [44]. This CVI has an algorithmic framework and operates on α-planes of GT2 FSs

The algorithmic CVI represented in [44] is based on the fact that the membership value of each pattern to its cluster is in its highest level if the number of clusters are determined correctly. This algorithm begins from the lowest α-plane and computes the distance between the largest and the smallest membership values of patterns in each cluster for both the upper and the lower membership functions of that α-plane. This process is repeated for the all objects in the dataset. Finally, the computed values for both the lower and the upper membership functions of that α-plane are averaged and the maximum of these two average values is selected. This general process is repeated for the all α-planes. The key point is that by using α-planes, effects of noises and outliers are automatically considered. This is because in higher α-planes, objects in the vicinity of cluster centers take more weight so that effects of outliers in estimating the number of clusters decrease. At the end, a weighted average is applied to the output of the entire α-planes and the clustering with the highest weighted average is chosen to be the best clustering with the best number of clusters.

In order to reach near-optimal solutions, it is necessary to make intelligent search across the solution space. In this article, three perturbation mechanisms are used for generating new cluster configurations. These mechanisms include: perturbing a center, splitting a center, and deleting a center. It should be noted that during each iteration of the proposed algorithm, these three perturbation mechanisms are chosen with equal probability. In the following, these mechanisms are thoroughly explained.

In this mechanism, one of the cluster centers is chosen randomly. Then, its values in different dimensions will be changed as follows. First, a random number 
                              θ
                            is generated from the uniform distribution with the domain [−1, 1]. If the value of the 
                              d
                           th dimension is 
                              
                                 
                                    c
                                 
                                 
                                    d
                                 
                              
                            then it will change to 
                              (
                              1
                              ±
                              2
                              ×
                              θ
                              ×
                              p
                              )
                              
                                 
                                    c
                                 
                                 
                                    d
                                 
                              
                            after perturbation. Note that the signs ‘+’ and ‘−’ are chosen with equal probability. If 
                              
                                 
                                    c
                                 
                                 
                                    d
                                 
                              
                            is zero, then it will become 
                              (
                              ±
                              2
                              ×
                              θ
                              ×
                              p
                              )
                            after perturbation. Here, 
                              p
                            denotes the perturbation rate and it has been considered to be 0.05 in this article.

In order to split a center, the center regarding the biggest cluster should be chosen. In order to find the biggest cluster, the upper and lower membership matrices of the lowest α-plane for the all clusters are computed. Then, for all clusters, the average of these two matrices are computed and the largest cluster is chosen as below:
                              
                                 (14)
                                 
                                    
                                       
                                          S
                                       
                                       
                                          i
                                       
                                    
                                    =
                                    
                                       ∑
                                       
                                          j
                                          =
                                          1
                                       
                                       n
                                    
                                    
                                       
                                          
                                             u
                                          
                                          
                                             i
                                             j
                                          
                                       
                                       ,
                                       
                                       
                                       
                                       1
                                       ≤
                                       i
                                       ≤
                                       C
                                    
                                 
                              
                           where 
                              C
                            is the number of clusters. The selected largest cluster is then substituted by two new cluster centers. A reference point 
                              r
                            is found such that it has membership value closest to the mean of the membership values above 0.5 to the center of the largest cluster. The distance between the reference point and the selected center at its 
                              d
                           th dimension is:
                              
                                 (15)
                                 
                                    D
                                    i
                                    s
                                    
                                       
                                          t
                                       
                                       
                                          d
                                       
                                    
                                    =
                                    |
                                    
                                       
                                          c
                                       
                                       
                                          d
                                       
                                    
                                    −
                                    
                                       
                                          r
                                       
                                       
                                          d
                                       
                                    
                                    |
                                 
                              
                           
                        

Finally, for each dimension of the cluster center, the selected center will be substituted by two new values as 
                              
                                 
                                    c
                                 
                                 
                                    d
                                 
                              
                              ±
                              D
                              i
                              s
                              
                                 
                                    t
                                 
                                 
                                    d
                                 
                              
                           .

Using Eq. (14), the smallest center is chosen and then it is deleted from the list of the current configuration matrix. Note that this mechanism should be avoided when only two cluster centers exist in the current configuration.

According to the [44], a clustering with higher CVI value is better. Suppose that the energy level of the current configuration is 
                           
                              
                                 E
                              
                              
                                 c
                                 u
                                 r
                                 r
                              
                           
                        . If the energy level of the new configuration is 
                           
                              
                                 E
                              
                              
                                 n
                                 e
                                 w
                              
                           
                         and 
                           
                              
                                 E
                              
                              
                                 n
                                 e
                                 w
                              
                           
                           ≥
                           
                              
                                 E
                              
                              
                                 c
                                 u
                                 r
                                 r
                              
                           
                         then the new configuration is accepted. If the energy level of the new configuration is less than the current configuration then it can be accepted with a probability computed as follows:
                           
                              (16)
                              
                                 
                                    
                                       P
                                    
                                    
                                       a
                                       c
                                       c
                                       e
                                       p
                                       tan
                                       c
                                       e
                                    
                                 
                                 =
                                 1
                                 −
                                 exp
                                 (
                                 
                                    
                                       T
                                    
                                    
                                       t
                                    
                                 
                                 ×
                                 (
                                 
                                    
                                       E
                                    
                                    
                                       n
                                       e
                                       w
                                    
                                 
                                 −
                                 
                                    
                                       E
                                    
                                    
                                       c
                                       u
                                       r
                                       r
                                    
                                 
                                 )
                                 )
                              
                           
                        where 
                           
                              
                                 T
                              
                              
                                 t
                              
                           
                         is the current temperature. Eq. (16) reveals that that the probability of selecting a bad configuration decreases as the algorithm goes on.

The algorithm starts from the temperature 
                           
                              
                                 T
                              
                              
                                 1
                              
                           
                           =
                           
                              
                                 T
                              
                              
                                 max
                              
                           
                        . During each temperature the algorithm is iterated 
                           n
                         times. The temperature decreases during each iteration 
                           t
                         and it is computed by 
                           
                              
                                 T
                              
                              
                                 t
                              
                           
                           =
                           
                              
                                 T
                              
                              
                                 max
                              
                           
                           
                              
                                 (
                                 1
                                 −
                                 α
                                 )
                              
                              t
                           
                        . Here, 
                           α
                         is a positive real number close to zero. The annealing process terminates when the temperature reaches 
                           
                              
                                 T
                              
                              
                                 min
                              
                           
                        .

The steps of the proposed approach are represented in Algorithm 1.

@&#DISCUSSION@&#

In this section, the proposed approach represented in Algorithm 1 is thoroughly discussed. In this algorithm, first, an initial configuration based on the configuration representation method discussed in the previous section is generated using the GT2 FCM. This configuration is called 
                           C
                           o
                           n
                           f
                           i
                           
                              
                                 g
                              
                              
                                 c
                                 u
                                 r
                                 r
                              
                           
                        . Then its partition matrix containing the membership value of each pattern to each cluster is computed using the following equations.
                           
                              (17)
                              
                                 
                                    
                                       
                                          u
                                          ¯
                                       
                                    
                                    
                                       i
                                       j
                                    
                                 
                                 =
                                 
                                    1
                                    
                                       
                                          ∑
                                          
                                             l
                                             =
                                             1
                                          
                                          K
                                       
                                       
                                          
                                             
                                                (
                                                
                                                   (
                                                   D
                                                   (
                                                   
                                                      
                                                         c
                                                      
                                                      
                                                         i
                                                      
                                                   
                                                   ,
                                                   
                                                      
                                                         x
                                                      
                                                      
                                                         j
                                                      
                                                   
                                                   )
                                                   )
                                                   /
                                                   (
                                                   D
                                                   (
                                                   
                                                      
                                                         c
                                                      
                                                      
                                                         l
                                                      
                                                   
                                                   ,
                                                   
                                                      
                                                         x
                                                      
                                                      
                                                         j
                                                      
                                                   
                                                   )
                                                   )
                                                
                                                )
                                             
                                             
                                                2
                                                /
                                                (
                                                
                                                   
                                                      m
                                                   
                                                   
                                                      1
                                                   
                                                
                                                −
                                                1
                                                )
                                             
                                          
                                       
                                    
                                 
                                 ,
                                 
                                 
                                 1
                                 ≤
                                 i
                                 ≤
                                 K
                                 ,
                                 
                                 1
                                 ≤
                                 j
                                 ≤
                                 n
                              
                           
                        
                        
                           
                              (18)
                              
                                 
                                    
                                       
                                          u
                                          ̲
                                       
                                    
                                    
                                       i
                                       j
                                    
                                 
                                 =
                                 
                                    1
                                    
                                       
                                          ∑
                                          
                                             l
                                             =
                                             1
                                          
                                          K
                                       
                                       
                                          
                                             
                                                (
                                                
                                                   (
                                                   D
                                                   (
                                                   
                                                      
                                                         c
                                                      
                                                      
                                                         i
                                                      
                                                   
                                                   ,
                                                   
                                                      
                                                         x
                                                      
                                                      
                                                         j
                                                      
                                                   
                                                   )
                                                   )
                                                   /
                                                   (
                                                   D
                                                   (
                                                   
                                                      
                                                         c
                                                      
                                                      
                                                         l
                                                      
                                                   
                                                   ,
                                                   
                                                      
                                                         x
                                                      
                                                      
                                                         j
                                                      
                                                   
                                                   )
                                                   )
                                                
                                                )
                                             
                                             
                                                2
                                                /
                                                (
                                                
                                                   
                                                      m
                                                   
                                                   
                                                      2
                                                   
                                                
                                                −
                                                1
                                                )
                                             
                                          
                                       
                                    
                                 
                                 ,
                                 
                                 
                                 1
                                 ≤
                                 i
                                 ≤
                                 K
                                 ,
                                 
                                 1
                                 ≤
                                 j
                                 ≤
                                 n
                              
                           
                        
                        
                           
                              (19)
                              
                                 u
                                 
                                    =
                                    
                                    
                                    
                                    
                                       i
                                       j
                                    
                                    
                                 
                                 (
                                 
                                    u
                                    ¯
                                 
                                 
                                    +
                                    
                                    
                                    
                                    
                                       i
                                       j
                                    
                                    
                                 
                                 
                                    
                                       
                                          u
                                          ̲
                                       
                                    
                                    
                                       i
                                       j
                                    
                                 
                                 )
                                 /
                                 2
                              
                           
                        where 
                           
                              
                                 m
                              
                              
                                 1
                              
                           
                         and 
                           
                              
                                 m
                              
                              
                                 2
                              
                           
                         represent two fuzzifiers constructing the upper and the lower membership functions of the lowest α-plane. Here, 
                           K
                         denotes the total number of clusters in the configuration and 
                           n
                         denotes the number of patterns. Also, 
                           D
                           (
                           
                              
                                 c
                              
                              
                                 i
                              
                           
                           ,
                           
                              
                                 x
                              
                              
                                 j
                              
                           
                           )
                         denotes the distance between the cluster center 
                           
                              
                                 c
                              
                              
                                 i
                              
                           
                         and the pattern 
                           
                              
                                 x
                              
                              
                                 j
                              
                           
                        . During the next step, an empty list called ‘Blacklist’ is generated to be used in the forthcoming steps. Both stages of the proposed framework are repeated 
                           N
                         times which can be determined based on the problem characteristics.
                           Algorithm 1
                           The proposed algorithm

The first stage of the algorithm is the annealing process. It begins with setting the maximum and minimum temperatures and the number of iterations to be performed at each temperature. During each iteration in each temperature, three perturbation mechanisms are selected with equal probability. But we should note that for two mechanisms of center splitting and center deleting, the Blacklist should be checked. If a new configuration exists in the list then the perturbation on that configuration should not be performed and algorithm goes on. The first stage ends when the annealing process is over. In the second stage, the output of the first stage is rechecked. If the number of clusters in the final output of stage 1 is 
                           C
                         such that 
                           C
                           >
                           2
                        , then the GT2 FCM should be performed for two partitioning with 
                           C
                           +
                           1
                         and 
                           C
                           −
                           1
                         number of clusters. Then, the energy levels for both new clusterings are computed. If the energy level for any of them is larger than the energy level of the output of stage 1, then the number of clusters in the output configuration of stage 1 is put to the Blacklist and the new configuration with higher energy level is chosen as an initial solution to be used again in the first stage. This process is repeated several times and finally the best solution with the highest energy level is chosen.

In fact, the stage 2 makes a subsequent search to enhance the quality of the computed global optima and puts the output of the 4 stage one in a list so that worse configurations will be ignored in the incoming annealing processes.

Suppose that the total number of possible number of clusters is 
                        K
                     , each cluster center is 
                        d
                      dimensional, there are 
                        n
                      patters to be clustered, 
                        A
                      α-planes are considered for GT2 FCM, and 
                        I
                      is the total number of iterations at each GT2 FCM stage. The initial step of the algorithm involves executing the GT2 FCM on a predetermined number of clusters 
                        c
                     . This process can be done in 
                        O
                        (
                        I
                        A
                        (
                        2
                        n
                        
                           
                              c
                           
                           2
                        
                        +
                        n
                        c
                        )
                        )
                      time. There are three perturbation steps each with its own time complexity. The center perturbation mechanism can be performed in 
                        O
                        (
                        d
                        )
                      time. Center splitting mechanism is performed in 
                        O
                        (
                        n
                        ×
                        K
                        ×
                        d
                        )
                      time and the center deleting mechanism can be done in 
                        O
                        (
                        n
                        ×
                        K
                        ×
                        d
                        )
                      time. Therefore in the worst case the perturbation complexity becomes 
                        O
                        (
                        n
                        ×
                        K
                        ×
                        d
                        )
                     .

Energy computation is directly affected by the number of patterns and the number of α-planes and it can be done in 
                        O
                        (
                        n
                        ×
                        A
                        ×
                        d
                        )
                      time. The process of energy computation is iterated 
                        I
                        t
                        e
                        r
                      times for the entire 
                        T
                      temperatures. Therefore, the time complexity of the annealing process will be 
                        O
                        (
                        I
                        t
                        e
                        r
                        ×
                        T
                        ×
                        n
                        ×
                        A
                        ×
                        d
                        )
                     .

During the second stage, based on the dimension of the output of stage 1, there may be one or two energy computations and GT2 FCM executions. In the worst case, e.g., two energy computation and two GT2 FCM executions, the complexity for GT2 FCM would be 
                        O
                        (
                        2
                        ×
                        I
                        A
                        (
                        2
                        n
                        
                           
                              c
                           
                           2
                        
                        +
                        n
                        c
                        )
                        )
                      and the time complexity for energy computation would be 
                        O
                        (
                        2
                        n
                        ×
                        A
                        ×
                        d
                        )
                     . Therefore the total complexity of the second stage will be 
                        O
                        (
                        I
                        A
                        (
                        2
                        n
                        
                           
                              c
                           
                           2
                        
                        +
                        n
                        c
                        )
                        +
                        n
                        ×
                        A
                        ×
                        d
                        )
                     .

For one iteration of both stages, the time complexity would be 
                        O
                        (
                        I
                        t
                        e
                        r
                        ×
                        T
                        ×
                        n
                        ×
                        A
                        ×
                        d
                        +
                        I
                        A
                        (
                        2
                        n
                        
                           
                              c
                           
                           2
                        
                        +
                        n
                        c
                        )
                        +
                        n
                        ×
                        A
                        ×
                        d
                        )
                     . The main body of the algorithm may be repeated 
                        J
                      times. Therefore the final time complexity of the proposed approach will be 
                        O
                        (
                        J
                        ×
                        (
                        I
                        t
                        e
                        r
                        ×
                        T
                        ×
                        n
                        ×
                        A
                        ×
                        d
                        +
                        I
                        A
                        (
                        2
                        n
                        
                           
                              c
                           
                           2
                        
                        +
                        n
                        c
                        )
                        +
                        n
                        ×
                        A
                        ×
                        d
                        )
                        )
                     .

This section is devoted to experimental evaluation of the proposed approach. This section includes two parts. In the first part, several synthesized datasets are created and then their numbers of clusters are computed using the proposed approach accompanied by some other well-known CVIs in the literature. In the second part, three real microarray gene expression datasets are tested and the quality of the proposed approach will be analyzed from different viewpoints.

Before applying the introduced framework to real datasets, it is necessary to analyze its performance on artificial datasets. To do this, we have generated six datasets with 3, 4, and 5 clusters. The level of noise in these datasets is different and we expect to have good performance on these sets especially for the data with higher noise level. These datasets are represented in 
                        Fig. 2.

These six datasets contain 300, 450, 400, 680, 500, 850 data points, respectively. Outliers in these sets have been generated using a Normal distribution with the mean equal to 1 and standard deviation of 0.5. In order to compare the proposed method with other well-known CVIs in the literature, we have tested the generated artificial datasets using three other CVIs: Kwon CVI [45], Xie and Beni CVI [46], Fukuyama and Sugeno CVI [47]. Computational results for these CVIs have been reported in 
                        Table 1.

According to Table 1, the compared CVIs perform well but for the dataset with the highest level of outliers, they give wrong results (wrong results are highlighted). This is because they all rely on FCM clustering algorithm which is highly sensitive to outliers.

Based on Table 1, Fukuyama and Sugeno, Kwon, and Xie and Beni give 66.67% correct solutions while the proposed approach gives 100% correct results on the artificial datasets. This demonstrates the capability of our algorithm in dealing with highly uncertain datasets. Based on this experiment, T1 FCM and CVIs designed on its basis are quite sensitive to noise which makes them unreliable for real data such as microarray data.

To test the proposed algorithm on a more demanding condition, four other artificial datasets are used where data points have various geometric shapes. We have generated four datasets containing 400, 450, 490, and 450 observations each. These four datasets contain 4, 5, 7, and 9 clusters, respectively. The scatter diagram of these datasets is shown in 
                        Fig. 3. The obtained number of clusters using the mentioned methods are represented in 
                        Table 2.

According to Table 2, it is obvious that the proposed algorithm outperforms other approaches for datasets whose elements have irregular (or various) geometric shapes and forms.

In this paper, three real life gene expression datasets are adopted from [51]. A short description on these datasets is given below:
                           
                              •
                              
                                 Human Fibroblasts Serum: In this dataset, expression levels for 8613 human genes are collected. It has 13 dimensions each of them representing 12 time points (0, 0.25, 0.5, 1, 2, 4, 6, 8, 12, 16, 20, and 24h) and an unsynchronized sample. Then, 517 important genes have been selected whose expression values have drastically changed over time. As a preprocessing stage, Log2 transformation is applied on the expression values.


                                 Arabidopsis Thaliana: This dataset contains 138 genes of Arabidopsis Thaliana recorded in 8 time points viz., 15min, 30min, 60min, 90min, 3h, 6h, and 24h.


                                 Rat CNS: This dataset is 9-dimensional and it represents the expression levels of 112 genes during rat central nervous system development.

After executing the proposed algorithm, Eisen plots and cluster profile plots as visual tools and Silhouette index as a numeric evaluation measure will be presented on the proposed method.

Silhouette index [48] is a numeric measure for evaluating the performance of clustering algorithms. Suppose 
                           a
                         to be the average distance of a point from the other points of the cluster which it belongs to. Also, suppose 
                           b
                         to be the minimum of the average distances of the point from the points of the other clusters. The Silhouette index is defined as below:
                           
                              (20)
                              
                                 s
                                 =
                                 
                                    
                                       b
                                       −
                                       a
                                    
                                    
                                       max
                                       
                                       {
                                       a
                                       ,
                                       b
                                       }
                                    
                                 
                              
                           
                        
                     

Higher values of the Silhouette index demonstrate a more compact and well separated clustering.

According to our computations, the near-optimal number of clusters for the all datasets is 4. For an easier recognition of influences of the GT2 FCM, for each dataset, we have also provided a random sequence of genes and its corresponding Eisen plot. These plots are represented in 
                        
                        
                        Figs. 4–6. Lines in each Eisen plot are the boundaries of clusters. In the Eisen plots, each row represents a gene and each column represents the features being considered in microarray experiment. Then for each gene, the corresponding expression value for each feature is shown with a specific color so that genes with similar expression values for each feature can be easily compared and grouped.

To have a better understanding of Figs. 4–6, corresponding cluster profile plots for these Eisen plots are represented in 
                        
                        
                        Figs. 7–9. Cluster profile plots represent the expression values for genes in each cluster. In each plot, the horizontal axis denotes the features of genes being considered while the vertical axis represents the expression value for each gene with respect to its corresponding feature. For instance, for the Arabidopsis dataset (Fig. 8), there are 8 features as they can also be observed in Fig. 5. These features have been numbered from 1 to 8. Then, expression values for the genes which are in the same cluster are depicted for each of the eight existing features.

For more investigation, we have computed the Silhouette index values for these datasets. In order to compare the obtained results with other similar existing approaches in the literature, we have computed mean and median of the Silhouette index values for SOM, T1 FCM, Average Linkage Method [49], Chinese Restaurant Process (CRP) [50], and the algorithmic GT2 CVI [44].

In order to make a numeric evaluation of the proposed method versus the other clustering methods, all these approaches have been executed 50 times and evaluation results are represented in 
                        
                        Tables 3 and 4.

For a better view of the contents of Tables 3 and 4, the mean and median Silhouette index values are depicted in 
                        
                        Figs. 10 and 11, respectively. Using the Silhouette index, the best number of clusters using the abovementioned methods has been computed. Their corresponding results have been reported in 
                        Table 5.

The information represented by Tables 3 and 4 reveals the fact that the proposed approach performs much better than its rivals for the datasets ‘Rat’ and ‘Human Fibroblasts’. However, for the dataset ‘Arabidopsis Thaliana’ the method presented in [44] gives a better result. In fact, higher Silhouette index values reveals that the cluster is more compact and well separated. When the inter-cluster distances between members of the same cluster is small while intra-cluster distances between members of different clusters is high, then compactness and separability of clusters are automatically considered.

The difference between Silhouette values is more apparent for datasets with larger number of features. For example, in the Human Fibroblasts dataset, which has more features than the others, the obtained median and mean value of the Silhouette index is much larger than the others while in other datasets this difference is smaller.

In the experiments performed on six synthesized datasets, three widespread CVIs were applied. These CVIs are mostly used on the traditional FCM or Gustaffson-Kessel (GK) clustering algorithms. Some of them concentrate on compactness of the clusters. However, these techniques are weak in dealing with noisy environments and cannot handle highly uncertain datasets.

According to the visual tools used in the previous subsection, some points can be obtained. Based on the presented Eisen plots, it can be observed that the gene sets are appropriately separated and their boundaries are quite separated. Based on these plots, cluster profile plots also demonstrate the same result. Suitable separation and also compactness of the clusters can be observed in cluster profile plots since the shape of profile plots for the members of each cluster are simply different while for each cluster, the profile plots for each pattern are similar to each other. Such similarity reveals how compact the obtained clusters are. For instance in Fig. 7, for the entire four clusters, expression values for different genes are highly dense. This shows how well the genes have been collected.

@&#DISCUSSION@&#

In this section, two groups of artificial datasets and three real microarray datasets were tested under the proposed approach and several other algorithms. The first group of synthesized datasets includes 6 subgroups with 3, 4, and 5 clusters with different noise levels. The second group of synthesized datasets consists of 4 subgroups with 4, 5, 7, and 9 clusters where geometric form of these clusters are different from the first synthesized group so that the proposed approach could be evaluated under various conditions. We had also prepared three real microarray gene expression datasets.

The proposed approach was implemented on these sets and final computational results demonstrate that the proposed approach performs the best among other approaches especially on the real datasets. As noted before, the proposed algorithm uses the GT2 fuzzy CVI presented in [44] as its fitness function. The proposed approach performs better in two datasets ‘Rat CNS’ and ‘Human Fibroblasts’. This superiority shows itself in both median and mean of the computed Silhouette indices. However, for the ‘Arabidopsis’ dataset, the GT2 CVI gives better Silhouette values. As a result, the proposed approach yields 4 clusters for the entire microarray datasets while the GT2 CV [44] gives 4 number of clusters for the ‘Arabidopsis’ dataset and 3 number of clusters for the remaining datasets.

By looking at the Silhouette values, we can see that the results of the proposed algorithm are close to the GT2 CVI [44] and for some cases they can be substituted. But we see that their computational complexities are different and they can be used according to the available computational time; which means, if the available computational time is enough then the method with higher accuracy and larger computational time can be used. On the other hand, due to the closeness of Silhouette index values, if the available time is limited, then less accurate but faster methods can be used.

@&#CONCLUSIONS@&#

This paper addresses the problem of microarray data clustering using GT2 fuzzy sets. The proposed approach is a two-stage SA framework with a new objective function which works using the α-plane representation technique of GT2 FSs. During the first stage of the algorithm, a good solution using three new perturbation mechanisms will be generated. After the termination of the SA process, the first stage solution is inserted to the second stage where local optimum point are deleted from the solution space through a heuristic approach. These two stages continue until no better solution can be obtained any more. The proposed approach has been evaluated using different artificial datasets and three real gene expression datasets. These experiments demonstrated effectiveness and flexibility of the presented framework under highly uncertain environments in comparison with several well-known approaches in the literature.

The authors declare no conflict of interests.

@&#REFERENCES@&#

