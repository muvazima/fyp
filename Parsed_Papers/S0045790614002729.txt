@&#MAIN-TITLE@&#Process fault detection based on dynamic kernel slow feature analysis

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           A nonlinear dynamic process monitoring method is presented.


                        
                        
                           
                           The proposed method can extract the inherent slow features from the high-dimensional observed data.


                        
                        
                           
                           A statistic index is built based on slow features to carry out process monitoring.


                        
                        
                           
                           The method is more sensitive to process faults than the conventional KPCA-based method.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Fault detection

Slow feature analysis

Kernel principal component analysis

Nonlinear dynamic process

@&#ABSTRACT@&#


               
               
                  A fault detection method based on dynamic kernel slow feature analysis (DKSFA) is presented in the paper. SFA is a new feature extraction technology which can find a group of slowly varying feature outputs from the high-dimensional inputs. In order to analyze the nonlinear dynamic characteristics of the process data, DKSFA is presented which applies the augmented matrix to consider the dynamic characteristic and uses kernel slow feature analysis (KSFA) to extract the nonlinear slow features hidden in the observed data. For the purpose of fault detection, the D monitoring statistic index is built based on DKSFA model and its confidence limit is computed by kernel density estimation. Simulations on a nonlinear system and Tennessee Eastman (TE) benchmark process show that the proposed method has a better fault detection performance compared with the conventional (kernel principal component analysis) KPCA-based method.
               
            

@&#INTRODUCTION@&#

Process monitoring is very important to ensure safe operation and production of high quality products in the industrialproduction process. Once a fault happens, enormous economic loss may be made, even it can cause casualty and pollute the environment severely. Data-driven methods have gained great attention and become a research hotspot gradually in the fields of fault diagnosis in recent years. However, the high-dimensional data often include some redundant information and the key point of data-driven methods is to extract the feature information from multi-dimensional measured signals [1–4].

Multi-variable statistical process monitoring technology such as principal component analysis (PCA) [5], partial least squares (PLS) [6], and independent component analysis (ICA) [7,8], have been used widely and successfully in the research fields. However, these methods mentioned above are the linear dimensional reduction techniques which may cause incorrect results for nonlinear industrial process. Besides, nonlinear transformations aiming to the original variables are not easy to construct. To address the nonlinear characteristics of the process, several nonlinear extensions of the traditional PCA method have already been proposed such as principle curves [9] and neural network [10–12]. Lawrence proposed Gaussian process latent variable model (GP-LVM)[13] which could easily be non-linearized through Gaussian processes, and related to popular spectral techniques. Recently, nonlinear process monitoring methods based on kernel function were proposed [14–17], which have been applied for fault detection and fault diagnosis successfully. Kernel PCA (KPCA) [18,19] firstly mapped the inputs into a linear feature space by a nonlinear mapping, and then extracted principal components in the kernel feature space.

Slow feature analysis (SFA), a new learning principle, is inspired by slow change phenomenon that occurs in real life. SFA aims for invariant features out of the high-dimensional measurements. It can extract the slowly varying features which carry significant information. The obtained feature components are mutually uncorrelated and independent from each other. SFA differs from simple low-pass filter fundamentally. If the input signals have some underlying and slowly varying causes, SFA can always extract slowly varying output signals. Through SFA algorithm [20], we can obtain the slowly varying features which are very useful for classification and identification from input signals. Berkes and Wiskott employed it to learn the self-organized receptive field of cortical neuron from synthetic image sequences [21,22]. Zhang considered four kinds of SFA learning strategies to extract slow feature functions from a large amount of training cuboids for human action recognition [23]. MA proposed kernel-based method to solve the nonlinear expansion problem of SFA and supplied an algorithm evaluation criterion [24]. All the above findings suggest that SFA can extract the useful slow feature information for data analysis.

In this paper, a nonlinear dynamic fault detection method is introduced based on dynamic kernel slow feature analysis (DKSFA), which can generate a set of output signals that vary as slowly as possible but carry significant information from the input signals. The monitoring statistic index is constructed for process monitoring with the extracted information. The effectiveness of the proposed method is demonstrated through a numerical sample and Tennessee Eastman (TE) process. The following sections sketch the introduction of the algorithm and its application. Firstly, the SFA algorithm is reviewed in Section 2, as it is necessary for understanding the remainder of the work. The nonlinear dynamic fault detection method named DKSFA is also presented in Section 2. Section 3 describes the procedure of the fault detection method based on DKSFA. Simulation studies on a simple nonlinear system and the TE process are shown in Section 4, followed by a discussion of the proposed method in Section 5.

Given a multi-dimensional input signal 
                           x
                        (t), SFA algorithm can find a set of function, and the output signals yj
                        (t)=
                        fj
                        (
                           x
                        (t)) can be generated through fj
                        . SFA focuses on finding slowly varying components from the input signals.

Let 
                           
                              x
                              (
                              t
                              )
                              =
                              
                                 
                                    [
                                    
                                       
                                          x
                                       
                                       
                                          1
                                       
                                    
                                    (
                                    t
                                    )
                                    ,
                                    
                                       
                                          x
                                       
                                       
                                          2
                                       
                                    
                                    (
                                    t
                                    )
                                    ,
                                    …
                                    ,
                                    
                                       
                                          x
                                       
                                       
                                          m
                                       
                                    
                                    (
                                    t
                                    )
                                    ]
                                 
                                 
                                    T
                                 
                              
                           
                         be the m-dimensional input signals, 
                           
                              y
                              (
                              t
                              )
                              =
                              
                                 
                                    [
                                    
                                       
                                          y
                                       
                                       
                                          1
                                       
                                    
                                    (
                                    t
                                    )
                                    ,
                                    
                                       
                                          y
                                       
                                       
                                          2
                                       
                                    
                                    (
                                    t
                                    )
                                    ,
                                    …
                                    
                                       
                                          y
                                       
                                       
                                          
                                             
                                                m
                                             
                                             
                                                1
                                             
                                          
                                       
                                    
                                    (
                                    t
                                    )
                                    ]
                                 
                                 
                                    T
                                 
                              
                           
                         be the m
                        1-dimensional output signals, and 
                           
                              f
                              (
                              x
                              )
                              =
                              
                                 
                                    [
                                    
                                       
                                          f
                                       
                                       
                                          1
                                       
                                    
                                    (
                                    x
                                    )
                                    ,
                                    
                                       
                                          f
                                       
                                       
                                          2
                                       
                                    
                                    (
                                    x
                                    )
                                    ,
                                    …
                                    ,
                                    
                                       
                                          f
                                       
                                       
                                          
                                             
                                                m
                                             
                                             
                                                1
                                             
                                          
                                       
                                    
                                    (
                                    x
                                    )
                                    ]
                                 
                                 
                                    T
                                 
                              
                           
                         be a set of real valued functions. The primary objective of SFA is as follows:
                           
                              (1)
                              
                                 
                                    min
                                 
                                 Δ
                                 
                                    
                                       y
                                    
                                    
                                       j
                                    
                                 
                                 (
                                 t
                                 )
                                 =
                                 〈
                                 
                                    
                                       
                                          
                                             y
                                          
                                          
                                             ̇
                                          
                                       
                                    
                                    
                                       j
                                    
                                    
                                       2
                                    
                                 
                                 
                                    
                                       〉
                                    
                                    
                                       t
                                    
                                 
                              
                           
                        under the constraints of
                           
                              (2)
                              
                                 〈
                                 
                                    
                                       y
                                    
                                    
                                       j
                                    
                                 
                                 
                                    
                                       〉
                                    
                                    
                                       t
                                    
                                 
                                 =
                                 0
                              
                           
                        
                        
                           
                              (3)
                              
                                 〈
                                 
                                    
                                       y
                                    
                                    
                                       j
                                    
                                    
                                       2
                                    
                                 
                                 
                                    
                                       〉
                                    
                                    
                                       t
                                    
                                 
                                 =
                                 1
                              
                           
                        and
                           
                              (4)
                              
                                 ∀
                                 i
                                 <
                                 j
                                 ,
                                 〈
                                 
                                    
                                       y
                                    
                                    
                                       i
                                    
                                 
                                 
                                    
                                       y
                                    
                                    
                                       j
                                    
                                 
                                 
                                    
                                       〉
                                    
                                    
                                       t
                                    
                                 
                                 =
                                 0
                              
                           
                        where 
                           
                              
                                 
                                    y
                                 
                                 
                                    ̇
                                 
                              
                           
                         denotes the first order derivative of y and 〈·〉
                           t
                         is the mean of signal y over time. Eq. (1) introduces the temporal variation measure of the output signals, which is equal to the mean of the squared first order derivative of the original measured signals. Its value is large for quickly varying signals and is close to zero for lower varying signals. The zero mean constraint (2) is introduced for convenience. Constraint (3) means that the transformed output signals should carry some information and prevent constant signals yj
                        (t)=
                        const from emerging. Different output components carry different aspects of information, and they can reflect different characteristics of input information. Besides, it also induces an order [21]. The first output signal is the slowest one, and the second is the second slowest while obeying the constraint (4), etc.

The nonlinear mapping relationship between input data and output data is:
                           
                              (5)
                              
                                 y
                                 (
                                 t
                                 )
                                 =
                                 ψ
                                 (
                                 x
                                 (
                                 t
                                 )
                                 )
                              
                           
                        However, it is not easy to obtain the implicit mapping ψ directly. Therefore, the idea of KPCA is introduced to extend SFA for extracting nonlinear slow features in the paper.

The input space can be mapped into a high-dimensional feature space by kernel transformation. SFA algorithm is a linear transformation method, which is expanded to the nonlinear method by introducing the idea of KPCA and a set of slowly varying outputs can be obtained by the nonlinear SFA method.

The kernel transformation 
                              K
                              ij
                           
                           =
                           k(
                              x
                           (i), 
                              x
                           (j)) is used on the inputs 
                              x
                            to calculate kernel characteristics. It is necessary to carry on centralization operation on kernel matrix 
                              K
                            to get 
                              
                                 
                                    
                                       K
                                    
                                    
                                       ̃
                                    
                                 
                              
                            
                           [24]. The kernel transformation vector can be found by resolving the eigenvalue problem as follows:
                              
                                 (6)
                                 
                                    n
                                    λ
                                    α
                                    =
                                    
                                       
                                          K
                                       
                                       
                                          ̃
                                       
                                    
                                    α
                                 
                              
                           where n is the number of samples. The new kernel principal component features can be acquired by
                              
                                 (7)
                                 
                                    
                                       
                                          ν
                                       
                                       
                                          kj
                                       
                                       
                                          ′
                                       
                                    
                                    =
                                    
                                       
                                          
                                             ∑
                                          
                                          
                                             i
                                             =
                                             1
                                          
                                          
                                             d
                                          
                                       
                                    
                                    
                                       
                                          α
                                       
                                       
                                          i
                                       
                                       
                                          j
                                       
                                    
                                    
                                       
                                          K
                                       
                                       
                                          ̃
                                       
                                    
                                    (
                                    x
                                    ,
                                    
                                       
                                          x
                                       
                                       
                                          i
                                       
                                    
                                    )
                                 
                              
                           The vector 
                              
                                 
                                    
                                       ν
                                    
                                    
                                       k
                                    
                                    
                                       ′
                                    
                                 
                              
                            is zero mean, uncorrelated from each other and 
                              
                                 
                                    
                                       ν
                                    
                                    
                                       k
                                    
                                    
                                       ′
                                    
                                 
                                 =
                                 [
                                 
                                    
                                       ν
                                    
                                    
                                       k
                                       1
                                    
                                    
                                       ′
                                    
                                 
                                 ,
                                 
                                    
                                       ν
                                    
                                    
                                       k
                                       2
                                    
                                    
                                       ′
                                    
                                 
                                 ,
                                 …
                                 
                                    
                                       ν
                                    
                                    
                                       kd
                                    
                                    
                                       ′
                                    
                                 
                                 ]
                              
                           . In order to meet the application conditions in Eq. (3), normalized operation is then carried on 
                              
                                 
                                    
                                       ν
                                    
                                    
                                       k
                                    
                                    
                                       ′
                                    
                                 
                              
                            to get 
                              ν
                              k
                           .

Further orthogonal transformation is implemented to the vectors 
                              v
                              k
                           , and it does not change the vector mean, variance and non-correlation characteristic.
                              
                                 (8)
                                 
                                    y
                                    (
                                    t
                                    )
                                    =
                                    
                                       
                                          W
                                       
                                       
                                          T
                                       
                                    
                                    
                                       
                                          ν
                                       
                                       
                                          k
                                       
                                    
                                    (
                                    t
                                    )
                                 
                              
                           where 
                              ν
                              k
                           
                           =[νk
                           
                           1,
                           νk
                           
                           2,…νkd
                           ], and 
                              W
                            is the projection transformation vector. In the following text, the objective function (1) can be obtained to get 
                              W
                           . The optimization problem is as follows:
                              
                                 (9)
                                 
                                    
                                       
                                          
                                             
                                                
                                                   min
                                                
                                                Δ
                                                
                                                   
                                                      y
                                                   
                                                   
                                                      j
                                                   
                                                
                                                (
                                                t
                                                )
                                             
                                          
                                          
                                             
                                                =
                                                〈
                                                
                                                   
                                                      
                                                         
                                                            y
                                                         
                                                         
                                                            ̇
                                                         
                                                      
                                                   
                                                   
                                                      j
                                                   
                                                   
                                                      2
                                                   
                                                
                                                
                                                   
                                                      〉
                                                   
                                                   
                                                      t
                                                   
                                                
                                             
                                          
                                       
                                       
                                          
                                          
                                             
                                                =
                                                
                                                   
                                                      w
                                                   
                                                   
                                                      j
                                                   
                                                   
                                                      T
                                                   
                                                
                                                〈
                                                
                                                   
                                                      
                                                         
                                                            ν
                                                         
                                                         
                                                            ̇
                                                         
                                                      
                                                   
                                                   
                                                      k
                                                   
                                                
                                                (
                                                t
                                                )
                                                
                                                   
                                                      
                                                         
                                                            ν
                                                         
                                                         
                                                            ̇
                                                         
                                                      
                                                   
                                                   
                                                      k
                                                   
                                                
                                                
                                                   
                                                      (
                                                      t
                                                      )
                                                   
                                                   
                                                      T
                                                   
                                                
                                                〉
                                                
                                                   
                                                      w
                                                   
                                                   
                                                      j
                                                   
                                                
                                             
                                          
                                       
                                       
                                          
                                          
                                             
                                                =
                                                
                                                   
                                                      w
                                                   
                                                   
                                                      j
                                                   
                                                   
                                                      T
                                                   
                                                
                                                
                                                   
                                                      V
                                                   
                                                   
                                                      k
                                                   
                                                
                                                
                                                   
                                                      w
                                                   
                                                   
                                                      j
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           Thus, the nonlinear slow feature analysis algorithm can be transformed into the problems of eigenvalue solution. The covariance matrix of 
                              ν
                              k
                            can be obtained, which is defined as 
                              
                                 
                                    
                                       C
                                    
                                    
                                       
                                          
                                             ν
                                          
                                          
                                             k
                                          
                                       
                                    
                                 
                              
                           
                           
                              
                                 (10)
                                 
                                    
                                       
                                          C
                                       
                                       
                                          
                                             
                                                ν
                                             
                                             
                                                k
                                             
                                          
                                       
                                    
                                    =
                                    
                                       
                                          
                                             
                                                ν
                                             
                                             
                                                ̇
                                             
                                          
                                       
                                       
                                          k
                                       
                                    
                                    (
                                    t
                                    )
                                    
                                       
                                          
                                             
                                                ν
                                             
                                             
                                                ̇
                                             
                                          
                                       
                                       
                                          k
                                       
                                    
                                    
                                       
                                          (
                                          t
                                          )
                                       
                                       
                                          T
                                       
                                    
                                 
                              
                           
                        

The transformation vector 
                              w
                              j
                            can be obtained by resolving the following eigenvalue-decomposition problem:
                              
                                 (11)
                                 
                                    
                                       
                                          C
                                       
                                       
                                          
                                             
                                                ν
                                             
                                             
                                                k
                                             
                                          
                                       
                                    
                                    
                                       
                                          w
                                       
                                       
                                          j
                                       
                                    
                                    =
                                    λ
                                    
                                       
                                          w
                                       
                                       
                                          j
                                       
                                    
                                 
                              
                           where 
                              w
                           
                           0, 
                           
                              w
                           
                           1, …
                              w
                              d
                           
                           −
                           1 are the eigenvectors corresponding to the first d eigenvalues 
                              
                                 
                                    
                                       λ
                                    
                                    
                                       0
                                    
                                 
                                 ,
                                 
                                    
                                       λ
                                    
                                    
                                       1
                                    
                                 
                                 ,
                                 …
                                 
                                    
                                       λ
                                    
                                    
                                       d
                                       -
                                       1
                                    
                                 
                              
                            with 
                              
                                 
                                    
                                       λ
                                    
                                    
                                       0
                                    
                                 
                                 >
                                 
                                    
                                       λ
                                    
                                    
                                       1
                                    
                                 
                                 >
                                 …
                                 
                                    
                                       λ
                                    
                                    
                                       d
                                       -
                                       1
                                    
                                 
                              
                           . Therefore, the projection between nonlinear principal components and slow feature outputs can be established as follows:
                              
                                 (12)
                                 
                                    y
                                    =
                                    
                                       
                                          W
                                       
                                       
                                          T
                                       
                                    
                                    
                                       
                                          ν
                                       
                                       
                                          k
                                       
                                    
                                 
                              
                           where 
                              W
                              T
                           
                           =[
                              w
                           
                           0, 
                              w
                           
                           1, …
                              w
                              d
                           
                           −
                           1] and 
                              w
                           
                           1 is the optimal solution corresponding to a normalized feature vector of the smallest eigenvalue of 
                              
                                 
                                    
                                       C
                                    
                                    
                                       
                                          
                                             ν
                                          
                                          
                                             k
                                          
                                       
                                    
                                 
                              
                           , while the sub-optimal solution 
                              w
                           
                           2 corresponds to a normalized feature vector of the second smallest eigenvalue of 
                              
                                 
                                    
                                       C
                                    
                                    
                                       
                                          
                                             ν
                                          
                                          
                                             k
                                          
                                       
                                    
                                 
                              
                           , etc.

Therefore, the nonlinear vectors can be calculated by projecting the original space into a high-dimensional space. Then the SFA algorithm is carried on the nonlinear principal components, and the nonlinear slowly varying features can be extracted finally.

The process monitoringmethods such as PCA, assume the currentsampling data are statistically independent from the previous observations. This assumptionis effective only forthe longersampling intervalin the practical industrial processes. However, the dynamic characteristic is obvious in the observed data. Thus furtherconsideration of the serial correlation of the data is required. For monitoring the dynamic process efficiently, KSFA is extended to dynamic KSFA (DKSFA) by augmenting each observation vector with the previous d observations [25], which can well account for the correlation of the data. The augmented data matrix can be given as follows.
                           
                              (13)
                              
                                 
                                    
                                       X
                                    
                                    
                                       t
                                    
                                 
                                 (
                                 d
                                 )
                                 =
                                 [
                                 X
                                 (
                                 t
                                 )
                                 
                                 X
                                 (
                                 t
                                 -
                                 1
                                 )
                                 ·
                                 ·
                                 ·
                                 X
                                 (
                                 t
                                 -
                                 d
                                 )
                                 ]
                                 =
                                 
                                    
                                       
                                          
                                             
                                                
                                                   
                                                      
                                                         x
                                                      
                                                      
                                                         t
                                                      
                                                      
                                                         T
                                                      
                                                   
                                                
                                                
                                                   
                                                      
                                                         x
                                                      
                                                      
                                                         t
                                                         -
                                                         1
                                                      
                                                      
                                                         T
                                                      
                                                   
                                                
                                                
                                                   …
                                                
                                                
                                                   
                                                      
                                                         x
                                                      
                                                      
                                                         t
                                                         -
                                                         d
                                                      
                                                      
                                                         T
                                                      
                                                   
                                                
                                             
                                             
                                                
                                                   
                                                      
                                                         x
                                                      
                                                      
                                                         t
                                                         -
                                                         1
                                                      
                                                      
                                                         T
                                                      
                                                   
                                                
                                                
                                                   
                                                      
                                                         x
                                                      
                                                      
                                                         t
                                                         -
                                                         2
                                                      
                                                      
                                                         T
                                                      
                                                   
                                                
                                                
                                                   …
                                                
                                                
                                                   
                                                      
                                                         x
                                                      
                                                      
                                                         t
                                                         -
                                                         d
                                                         -
                                                         1
                                                      
                                                      
                                                         T
                                                      
                                                   
                                                
                                             
                                             
                                                
                                                   …
                                                
                                                
                                                   …
                                                
                                                
                                                   …
                                                
                                                
                                                   …
                                                
                                             
                                             
                                                
                                                   
                                                      
                                                         x
                                                      
                                                      
                                                         t
                                                         +
                                                         d
                                                         -
                                                         n
                                                      
                                                      
                                                         T
                                                      
                                                   
                                                
                                                
                                                   
                                                      
                                                         x
                                                      
                                                      
                                                         t
                                                         +
                                                         d
                                                         -
                                                         n
                                                         -
                                                         1
                                                      
                                                      
                                                         T
                                                      
                                                   
                                                
                                                
                                                   …
                                                
                                                
                                                   
                                                      
                                                         x
                                                      
                                                      
                                                         t
                                                         -
                                                         n
                                                      
                                                      
                                                         T
                                                      
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           
                        The selection of d is closely related to the dynamic nature of the process. The value should not be too large, and 1 or 2 is suited according toKu’sproposal [25].

Based on the DKSFA model, a new monitoring statistic is built for fault detection and process monitoring. The D statistic is built to measure the output deviation between the new sample and all the observed data under normal condition, which is defined as
                        
                           (14)
                           
                              D
                              =
                              
                                 ∑
                              
                              
                                 
                                    1
                                 
                                 
                                    2
                                 
                              
                              log
                              10
                              
                                 
                                    
                                       
                                          ∑
                                       
                                       
                                          
                                             
                                                
                                                   
                                                      y
                                                   
                                                   
                                                      new
                                                   
                                                
                                             
                                          
                                       
                                       /
                                       
                                          
                                             
                                                
                                                   
                                                      y
                                                   
                                                   
                                                      nor
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           
                        
                     where 
                        y
                        new
                      is the nonlinear slow feature output of the new sample and 
                        y
                        nor
                      is the output vector under normal condition. By comparing the current outputs with all the outputs from the modeling data, the current operating status can be monitored.

Therefore, fault detection method based on DKSFA is implemented as follows. Firstly, each observation vector is extended to the augmented data matrix with the previous d-dimensional observations to account for the dynamic characteristics of the process. The original linear SFA algorithm is extended with kernel principal component analysis to solve the nonlinear problem in the next step. Further, based on the slow feature outputs generated by DKSFA, the monitoring statistic index is built to carry out process monitoring.

The process monitoring based on DKSFA includes two stages: offline modeling stage and online fault detection stage. The normal operating model is set up by DKSFA in the offline modeling stage, and the corresponding confidence limit of D chart is calculated. During online detection stage, the online statistic of new collected data is calculated to determine whether process is under normal operation condition.

Stage I: offline modeling stage
                        
                           i.
                           Obtain the augmented data matrix in (13) and calculate its mean and variance.

Compute the kernel matrix 
                                 K
                               by nonlinear kernel transformation, and carry out mean centering in the high-dimensional feature space to get 
                                 
                                    
                                       
                                          K
                                       
                                       
                                          ̃
                                       
                                    
                                 
                              .

Solve generalized eigenvalue problem in (6) to get the eigenvectors further.

Calculate the kernel principal components 
                                 
                                    
                                       
                                          ν
                                       
                                       
                                          k
                                       
                                       
                                          ′
                                       
                                    
                                    (
                                    t
                                    )
                                 
                               in the feature space in (7), and normalize it to get the vectors 
                                 vk
                                 
                              (t).

Calculate the covariance matrix 
                                 
                                    
                                       
                                          C
                                       
                                       
                                          
                                             
                                                ν
                                             
                                             
                                                k
                                             
                                          
                                       
                                    
                                 
                               of 
                                 vk
                                 
                              (t) in (10), and solve eigenvalue problem in (11).

Get the slow feature 
                                 y
                               with output function in (12).

Calculate the monitoring statistic of the normal operating data and determine the control limit for D chart in (14).

Stage II: online detection stage
                        
                           i.
                           Get a new data and preprocess it with mean and variance of normal data in the offline modeling stage.

Compute the kernel principal components of the new data in (6).

Compute the nonlinear slow features outputs in (12).

Calculate the monitoring statistic D based on slow features. If D exceeds its confidence limit, a fault is detected and the fault alarming should be given next.

In this section, the proposed monitoring method is evaluated by two cases including a simple nonlinear system and the benchmark Tennessee Eastman process. In both the two case studies, the proposed method is compared with the conventional KPCA-based fault detection method. The results are detailed in the following context.

In this section, a simple nonlinear system with three monitored variables is simulated to test the robustness of the DKSFA method. The mathematical description of the system is given as follows [9]:
                           
                              (15)
                              
                                 
                                    
                                       
                                          
                                             
                                                
                                                   
                                                      
                                                         x
                                                      
                                                      
                                                         1
                                                      
                                                   
                                                   =
                                                   t
                                                   +
                                                   
                                                      
                                                         e
                                                      
                                                      
                                                         1
                                                      
                                                   
                                                
                                             
                                             
                                                
                                                   
                                                      
                                                         x
                                                      
                                                      
                                                         2
                                                      
                                                   
                                                   =
                                                   
                                                      
                                                         x
                                                      
                                                      
                                                         1
                                                      
                                                      
                                                         2
                                                      
                                                   
                                                   -
                                                   3
                                                   
                                                      
                                                         x
                                                      
                                                      
                                                         1
                                                      
                                                   
                                                   +
                                                   
                                                      
                                                         e
                                                      
                                                      
                                                         2
                                                      
                                                   
                                                
                                             
                                             
                                                
                                                   
                                                      
                                                         x
                                                      
                                                      
                                                         3
                                                      
                                                   
                                                   =
                                                   
                                                      
                                                         x
                                                      
                                                      
                                                         1
                                                      
                                                      
                                                         2
                                                      
                                                   
                                                   +
                                                   3
                                                   
                                                      
                                                         x
                                                      
                                                      
                                                         2
                                                      
                                                   
                                                   +
                                                   
                                                      
                                                         e
                                                      
                                                      
                                                         3
                                                      
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           
                        where e
                        1,
                        e
                        2,
                        e
                        3
                        ∼
                        N(0, 0.12) are three independent noise variables under normal condition respectively, 
                           
                              t
                              ∈
                              [
                              0
                              ,
                              2
                              ]
                           
                         is a random variable with uniform distribution and the output 
                           
                              x
                              =
                              
                                 
                                    [
                                    
                                       
                                          x
                                       
                                       
                                          1
                                       
                                    
                                    
                                       
                                          x
                                       
                                       
                                          2
                                       
                                    
                                    
                                       
                                          x
                                       
                                       
                                          3
                                       
                                    
                                    ]
                                 
                                 
                                    T
                                 
                              
                           
                         are measured as monitored variables. Therefore, three process variables are measured and collected in the simulation. There are 1500 samples to build fault detection model under normal condition. The dimension of the low-dimensional space in both the two methods is selected by cumulative variance contribution method, and its value is 2 just as the intrinsic dimension of the nonlinear system in (15). And the explained variance information using the two low-dimensional variables is approximately 99.94% of the total variance. Furthermore, the first dataset is used to test the performance of the proposed method, and to build the control limit of the monitoring statistic. The confidence limit of fault detection also known as alarming threshold is set as 95%.

Two groups of normal datasets with different noise information from 1001st sample are generated respectively, and each dataset involves 1500 samples. Noise variance of the first group dataset is still with e
                        1, e
                        2, e
                        3
                        ∼
                        N(0, 0.12) while the noise variance of the second group test dataset is changed from the 1001st sample with e
                        1,
                        e
                        2,
                        e
                        3
                        ∼
                        N(0,0.152). The second group of dataset is still collected under normal condition, which can be used to verify the robustness of the proposed method against noise interference. Besides, the monitoring statistics T
                        2,
                        Q,
                        D are plotted as solid line and their confidence limits are plotted as dot-dash line respectively in the paper. As we can see in Fig. 1
                        (b), the Q monitoring chart based on KPCA indicates the abnormality from the 1001st sample. Although T
                        2 monitoring statistic is below its control limit, the fault alarming is provided to the operators when one of the monitoring indexes exceeds its control limit. In contrast, from Fig. 1(c), the proposed DKSFA method indicates that the process is in normal operation, and thus the robustness of the proposed method against noise disturbances is verified clearly. Slow features are useful information as has been mentioned earlier, through which we can monitor the process more effectively. The changing rate of the disturbances is comparatively large, and then the disturbances can be filtered as the non-useful information.

The TE process is presented by Downs and Vogel [4], and since then it has been widely used as a benchmark simulation in applications such as model predictive control (MPC), process monitoring, and fault diagnosis. The simulator is based on a nonlinear industrial process consisting of five major units: a reactor, a condenser, a compressor, a separator, and a stripper. TE is a first-order irreversible exothermic reaction, and it contains 148 algebraic equations. A flowchart of the TE process is illustrated in Fig. 2
                           .

The simulator includes a set of programmed fault modes, and all these 21 faults are listed in Table 1
                           . The training data consist of 500 samples under normal operating conditions and the number of test data from each kind of fault mode is 960. All faults in the test datasets are introduced after the 160th sample. There are 52 variables used for monitoring the TE process, including 12 manipulated variables and 41 measurements. Further details can be found in the relevant literature [4]. The simulation data of the TE process used in the paper are downloaded from the corresponding website http://brahms.scs.uiuc.edu.

@&#RESULTS AND DISCUSSION@&#

In this section, the two monitoring methods, the KPCA-based method and the proposed DKSFA-based method are applied to detect faults for performance comparison. For the convenience of method comparison, the confidence limits of the two methods are set to 95%. In the normal process dataset, 500 samples are used for model training and 960 normal samples are used to build confidence limits of the monitoring statistics. For the two methods, kernel function is selected as Gaussian kernel and kernel parameter is set as 104 by cross-validation. The number of principal components for both KPCA and DKSFA is selected according to the percentage of eigenvalues cumulative contribution rate, and it is set as 95%. In this paper, there are 46 principal components selected for process monitoring.


                           Fig. 3
                            shows the first three slow feature outputs based on DKSFA, and we can see that DKSFA-based method can suppress noise and obtain the slowly varying feature information hidden in the inputs. So, DKSFA can acquire more full information from the high-dimensional data and it is helpful for fault detection.

The monitoring charts of fault 5 are firstly illustrated to show the effectiveness of the proposed monitoring method. It is interesting to discuss the monitoring results of KPCA and DKSFA in Fig. 4
                           . The temperature of the condenser cooling water takes a positive step change in this fault. When it occurs, the flow rate of the outlet stream from the condenser to the separator increases and the temperature of separator cooling water also changes. As shown in Fig. 4, all the detection charts can detect the fault immediately. Nevertheless, the control loops compensate for the change and most variables return to their set-points from the 360th sample. T
                           2 chart and Q chart of KPCA show that the process has returned to the stable state. However, the condenser cooling water temperature and its flow rate are still higher than the normal value. According to DKSFA, the statistic value exceeds its threshold clearly from the 161st sample to the end. It means that fault exists during the simulation. So it can be seen that DKSFA is more effective than KPCA for detecting fault 5.

A smaller stochastic occurrence of reactant feeding temperature takes place in the fault 10. It is difficult to detect this fault. Fault detection results of the two methods are shown in Fig. 5
                           . T
                           2 monitoring chart based on KPCA discovers the fault at the 201st sample and the detection time of Q monitoring chart is the 197th sample. However, D monitoring chart based on DKSFA can detect this fault at the 164th sample. The comparison shows that DKSFA outperforms KPCA in terms of fault detection performance.

Different from the other common faults, step change and random variation, fault 19 is a kind of unknown fault. In the T
                           2 monitoring chart Fig. 5(a) of KPCA, it is easy to see that there are only a few data exceeding the threshold, thus KPCA cannot point out the running condition now. Although the result of Q index in Fig. 5(b) is better than T
                           2 monitoring chart, it also cannot give a clear and continuous alarming suggestion. The fault detection result based on DKSFA is shown in Fig. 6
                            and the fault detection rate based on DKSFA is 93.63% which is much higher than that of KPCA. So, DKSFA can detect the fault 19 more effectively than KPCA.


                           Table 2
                            shows the detection rates of KPCA and DKSFA on all 21 fault modes in the TE process. For faults IDV (4), (5), (8), (10), (11), (12), (13), (16), (17), (18), (19), (20), (21), DKSFA shows the better detection performance than KPCA. It is obvious that the two methods provide the considerable fault detection percentage for fault IDV (1), (2), (6), (7), (14). However, the two methods perform poorly for fault IDV (3), (9) and (15), and these three faults have been proved to be hard for data-based fault detection methods as there are no observable changes in the mean or variance of the corresponding fault data. According to the above results, it is not difficult to recognize that fault detection based on DKSFA provides the higher detection rates than KPCA, and DKSFA performs better than KPCA in detecting the abnormal state.

@&#CONCLUSION@&#

A new nonlinear dynamic process monitoring method based on DKSFA has been proposed in this paper. The nonlinear dynamic slow features are extracted by DKSFA from the high-dimensional measurements. Based on the extracted features, the monitoring statistic index is built to carry out process monitoring. To validate the effectiveness of the proposed approach, the simulated experiments on a simple nonlinear numerical sample and the benchmark TE process have been conducted. The results show that the proposed approach can achieve the higher fault detection rate than the KPCA method, and it is also more robust against disturbances.

@&#ACKNOWLEDGMENTS@&#

Supported by the National Natural Science Foundation of China (61273160); the Natural Science Foundation of Shandong Province (ZR2011FM014); Shandong Province Doctor Foundation (BS2012ZZ011).

@&#REFERENCES@&#

