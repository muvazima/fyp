@&#MAIN-TITLE@&#A new optimization method: Dolphin echolocation

@&#HIGHLIGHTS@&#


               
               
                  
                     
                        
                           
                           Echolocation ability of dolphins is mimicked to develop a new optimization method.


                        
                        
                           
                           Dolphin echolocation (DE) takes advantages of different meta-heuristics rules.


                        
                        
                           
                           DE outperforms many existing methods.


                        
                        
                           
                           DE leads to excellent results with low computational efforts.


                        
                     
                  
               
            

@&#KEYPHRASES@&#

Optimization

Meta-heuristic

Dolphin echolocation

Optimal design

Trusses

Frames

@&#ABSTRACT@&#


               
               
                  Nature has provided inspiration for most of the man-made technologies. Scientists believe that dolphins are the second to humans in smartness and intelligence. Echolocation is the biological sonar used by dolphins and several kinds of other animals for navigation and hunting in various environments. This ability of dolphins is mimicked in this paper to develop a new optimization method. There are different meta-heuristic optimization methods, but in most of these algorithms parameter tuning takes a considerable time of the user, persuading the scientists to develop ideas to improve these methods. Studies have shown that meta-heuristic algorithms have certain governing rules and knowing these rules helps to get better results. Dolphin echolocation takes advantages of these rules and outperforms many existing optimization methods, while it has few parameters to be set. The new approach leads to excellent results with low computational efforts.
               
            

@&#INTRODUCTION@&#

The recent generation of the optimization methods is meta-heuristics that are proposed to solve complex problems. Every meta-heuristic method consists of a group of search agents that explore the feasible region based on both randomization and some specified rules [1]. The rules are usually inspired by the laws of natural phenomena. Genetic Algorithm (GA) proposed by Holland [2] and Goldberg [3] is inspired by Darwin’s theory about biological evolutions. Particle swarm optimization (PSO) proposed by Eberhart and Kennedy [4] simulates social behavior, and it is inspired by the movement of organisms in a bird flock or fish school. Truss optimization with dynamic constraints using a particle swarm algorithm can be found in the work of Gomes [5]. Ant Colony Optimization (ACO) formulated by Dorigo et al. [6] imitates foraging behavior of ant colonies. Many other natural-inspired algorithms such as Simulated Annealing (SA) proposed by Kirkpatrick et al. [7], Harmony Search (SA) presented by Geem et al. [8], Gravitational Search Algorithm (GSA) proposed by Rashedi et al. [9], Big Bang–Big Crunch algorithm (BB–BC) proposed by Erol and Eksin [10], and improved by Kaveh and Talatahari [11]. Due to their good performance and ease of implementation, these methods have been widely applied to various problems in different fields of science and engineering. Structural optimization is one of the active branches of the applications of optimization algorithms [12–15]. One of the most recent meta-heuristic algorithms is the Charged System Search (CSS) proposed by Kaveh and Talatahari [16] that uses the electric laws of physics and the Newtonian laws of mechanics to guide the Charged Particles (CPs) to explore the locations of the optimum. Bat-inspired algorithm introduced by Yang [17] is another recent meta-heuristic algorithm which mimics the behavior of bats in detecting prey.

Dolphin echolocation is a new optimization method which is presented in this paper. This method mimics strategies used by dolphins for their hunting process. Dolphins produce a kind of voice called sonar to locate the target, doing this dolphin change sonar to modify the target and its location. Dolphin echolocation is depicted in Fig. 1
                     . This fact is mimicked here as the main feature of the new optimization method.

After this introduction, Section 2 presents the dolphin’s echolocation in nature. Section 3 introduces dolphin echolocation algorithm, Section 4 presents structural optimization problems to be solved. This follows by Section 5 which includes some numerical examples from truss and frame structures. The last section is devoted to concluding remarks indicating the capabilities of the new method in comparison to some other meta-heuristic algorithms like GA, ACO, PSO, BB, HS, SA, and CSS.

The term “echolocation” was initiated by Griffin [18] to describe the ability of flying bats to locate obstacles and preys by listening to echoes returning from high-frequency clicks that they emitted. Echolocating animals include some mammals and a few birds. The best studied echolocation in marine mammals is that of the bottlenose dolphins, Au [19].

A dolphin is able to generate sounds in the form of clicks. Frequency of these clicks is higher than that of the sounds used for communication and differs between species. When the sound strikes an object, some of the energy of the sound-wave is reflected back towards the dolphin. As soon as an echo is received, the dolphin generates another click. The time lapse between click and echo enables the dolphin to evaluate the distance from the object; the varying strength of the signal as it is received on the two sides of the dolphin’s head enabling him to evaluate the direction. By continuously emitting clicks and receiving echoes in this way, the dolphin can track objects and home in on them, May [20]. The clicks are directional and are for echolocation, often occurring in a short series called a click train. The click rate increases when approaching an object of interest, Au [19].

Though bats also use echolocation, however, they differ from dolphins in their sonar system. Bats use their sonar system at short ranges of up to approximately 3–4m, whereas dolphins can detect their targets at ranges varying from a few tens of meters to over a hundred meters. Many bats hunt for insects that dart rapidly to-and-fro, making it very different from the escape behavior of a fish chased by dolphin. The speed of sound in air is about one fifth of that of water, thus the information transfer rate during sonar transmission for bats is much shorter than that of the dolphins. These and many other differences in environment and prey require totally different types of sonar system, which naturally makes a direct comparison difficult [19,21].

Regarding an optimization problem, it can be understood that echolocation is similar to optimization in some aspects; the process of foraging preys using echolocation in dolphins is similar to finding the optimum answer of a problem.

As mentioned in the previous part, dolphins initially search all around the search space to find the prey. As soon as a dolphin approaches the target, the animal restricts its search, and incrementally increases its clicks in order to concentrate on the location.

The method simulates dolphin echolocation by limiting its exploration proportional to the distance from the target. For making the relationship much clear, consider an optimization problem. Two phases can be identified: in the first phase the algorithm explores all around the search space to perform a global search, therefore it should look for unexplored regions. This task is carried out by exploring some random locations in the search space, and in the second phase it concentrates on investigation around better results achieved from the previous stage. These are obvious inherent characteristics of all meta-heuristic algorithms. An efficient method is presented in Ref. [1] for controlling the value of the randomly created answers in order to set the ratio of the results to be achieved in phase 1 to phase 2.

By using dolphin echolocation (DE) algorithm, the user would be able to change the ratio of answers produced in phase 1 to the answers produces in phase 2 according to a predefined curve. In other words, global search, changes to a local one gradually in a user defined style.

The user defines a curve on which the optimization convergence should be performed, then the algorithm sets its parameters in order to be able to follow the curve. The method works with the likelihood of occurrence of the best answer in comparison to the others. In other words, for each variable there are different alternatives in the feasible region, in each loop the algorithm defines the possibility of choosing the best so far achieved alternative according to the user determined convergence curve. By using this curve, the convergence criterion is dictated to the algorithm, and then the convergence of the algorithm becomes less parameter dependent. The curve can be any smooth ascending curve but there are some recommendations for it, which will be discussed later.

Previously it has been shown that there is a unified method for parameter selection in meta-heuristics [1]. In the latter paper, an index called the convergence factor was presented. A Convergence Factor (CF) is defined as the average possibility of the elitist answer. As an example, if the aim is to devote some steel profiles to a structure that has four elements, then in the first step, frequency of modal profile of each element should be defined. CF is the mean of these frequencies. Table 1
                         illustrates an example of calculating the CF for a structure containing four elements.

Before starting optimization, search space should be sorted using the following rule:


                        Search space ordering: For each variable to be optimized during the process, sort alternatives of the search space in an ascending or descending order. If alternatives include more than one characteristic, perform ordering according to the most important one. Using this method, for variable j, vector Aj
                         of length LAj
                         is created which contains all possible alternatives for the jth variable putting these vectors next to each other, as the columns of a matrix, the Matrix AlternativesMA
                        
                        *
                        
                           NV
                         is created, in which MA is max(LAj
                        )
                           j
                        
                        =1:
                        
                           NV
                        ; with NV being the number of variables.

Moreover, a curve according to which the convergence factor should change during the optimization process, should be assigned. Here, the change of CF is considered to be according to the following curve:
                           
                              (1)
                              
                                 PP
                                 (
                                 
                                    
                                       Loop
                                    
                                    
                                       i
                                    
                                 
                                 )
                                 =
                                 
                                    
                                       PP
                                    
                                    
                                       1
                                    
                                 
                                 +
                                 (
                                 1
                                 -
                                 
                                    
                                       PP
                                    
                                    
                                       1
                                    
                                 
                                 )
                                 
                                    
                                       
                                          
                                             Loop
                                          
                                          
                                             i
                                          
                                          
                                             Power
                                          
                                       
                                       -
                                       1
                                    
                                    
                                       (
                                       LoopsNumber
                                       
                                          
                                             )
                                          
                                          
                                             Power
                                          
                                       
                                       -
                                       1
                                    
                                 
                              
                           
                        
                        PP is the predefined probability, PP
                        1 the convergence factor of the first loop in which the answers are selected randomly, Loopi
                         the number of the current loop, and Power is the degree of the curve. As it can be seen, the curve in Eq. (1) is of Power degree.


                        Loops Number: Number of loops in which the algorithm should reach to the convergence point. This number should be chosen by the user according to the computational effort that can be afforded for the algorithm.


                        Fig. 2
                         shows the variation of PP by the changes of the Power, using the proposed formula, Eq. (1).

The flowchart of the algorithm is shown in Fig. 3
                        . The main steps of dolphin echolocation (DE) for discrete optimization are as follows:
                           
                              1.
                              Initiate NL locations for a dolphin randomly.

This step contains creating LNL
                        
                        *
                        
                           NV
                         matrix, in which NL is the number of locations and NV is the number of variables (or dimension of each location).
                           
                              2.
                              Calculate the PP of the loop using Eq. (1).

Calculate the fitness of each location.

Fitness should be defined in a manner that the better answers get higher values. In other words the optimization goal should be to maximize the fitness.
                           
                              4.
                              Calculate the accumulative fitness according to dolphin rules as follows:

It should be added that for alternatives close to edges (where A
                        +
                        k is not a valid; A
                        +
                        k
                        <0 or A
                        +
                        k
                        >
                        LAj
                        ), the AF is calculated using a reflective characteristic. In this case, if the distance of an alternative to the edge is less than Re
                        , it is assumed that the same alternative exists where picture of the mentioned alternative can be seen, if a mirror is placed on the edge.
                           
                              (b)
                              In order to distribute the possibility much evenly in the search space, a small value of ε is added to all the arrays as AF
                                 =
                                 AF
                                 +
                                 ε. Here, ε should be chosen according to the way the fitness is defined. It is better to be less than the minimum value achieved for the fitness.

Find the best location of this loop and name it “The best location”. Find the alternatives allocated to the variables of the best location, and let their AF be equal to zero.

In other words:
                           
                              
                                 
                                 
                                 
                                    
                                       for j
                                          =1: Number of variables
                                       
                                    
                                    
                                       
                                          for i
                                          =1: Number of alternatives
                                       
                                    
                                    
                                       
                                          
                                          if i
                                          =The best location(j)
                                       
                                    
                                    
                                       
                                          
                                          
                                          
                                          
                                             
                                                
                                                   
                                                      AF
                                                   
                                                   
                                                      ij
                                                   
                                                
                                                =
                                                0
                                             
                                          
                                       
                                       (3)
                                    
                                    
                                       
                                          
                                          end
                                       
                                    
                                    
                                       
                                          end
                                       
                                    
                                    
                                       end
                                       
                                    
                                 
                              
                           
                        
                        
                           
                              5.
                              for variable j
                                 (
                                 
                                    j
                                 
                                 =1toNV), calculate the probability of choosing alternative i
                                 (
                                 
                                    i
                                 
                                 =1toALj), according to the following relationship:
                                    
                                       (4)
                                       
                                          
                                             
                                                P
                                             
                                             
                                                ij
                                             
                                          
                                          =
                                          
                                             
                                                
                                                   
                                                      AF
                                                   
                                                   
                                                      ij
                                                   
                                                
                                             
                                             
                                                
                                                   
                                                      ∑
                                                   
                                                   
                                                      i
                                                      =
                                                      1
                                                   
                                                   
                                                      LAj
                                                   
                                                
                                                
                                                   
                                                      AF
                                                   
                                                   
                                                      ij
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                              

Assign a probability equal to PP to all alternatives chosen for all variables of the best location and devote rest of the probability to the other alternatives according to the following formula:

Repeat Steps 2–6 as many times as the Loops Number.

Input parameters for the algorithm are:
                           
                              (a)
                              Loops number

For an optimization algorithm it is beneficial for the user to be able to dictate the algorithm to work according to the affordable computational cost. The answers may obviously be dependent on the selected number of loops and will improve by an increase in the loops number. However, the point is that one may not achieve results as bad as those of other optimization algorithms gained in less loops, because in this case although the algorithm quit its job much sooner than expected, the answer is good because of convergence criteria being reached. The number of loops can be selected by sensitivity analysis when high accuracy is required, however, in structural optimization of normal buildings, the loops number is recommended to be more than 50.
                           
                              (b)
                              Convergence curve formula

This is another important parameter to be selected for the algorithm. The curve should reach to the final point of 100% smoothly. If the curve satisfies the above mentioned criteria the algorithm will perform the job properly, but it is recommended to start with a linear curve and try the curves that spend more time (more loops) in high values of the PP. For example, if one is using proposed curves of this paper, it is recommended to start with Power
                        =1 which usually gives good results and it is better to try some cases of the Power
                        <1 to check if it improves the results.
                           
                              (c)
                              Effective radius (Re
                                 )

This parameter is better to be chosen according to the size of search space. It is recommended to be selected less than 1/4 of the size of the search space.
                           
                              (d)
                              
                                 ε
                              

This parameter is better to be less than any possible fitness.
                           
                              (e)
                              Number of locations (NL)

This parameter is the same as the population size in GA or number of ants in ACO. It should be chosen in a reasonable way.

As an example consider the following simple mathematical function optimization problem:
                           
                              (7)
                              
                                 
                                    min
                                 
                                 
                                    
                                       
                                          h
                                          =
                                          
                                             
                                                
                                                   ∑
                                                
                                                
                                                   i
                                                   =
                                                   1
                                                
                                                
                                                   N
                                                
                                             
                                          
                                          
                                             
                                                x
                                             
                                             
                                                i
                                             
                                             
                                                2
                                             
                                          
                                       
                                    
                                 
                                 ,
                                 
                                 
                                    
                                       x
                                    
                                    
                                       i
                                    
                                 
                                 ∈
                                 Z
                                 ,
                                 -
                                 20
                                 ⩽
                                 
                                    
                                       x
                                    
                                    
                                       i
                                    
                                 
                                 ⩽
                                 20
                              
                           
                        Considering N
                        =4, dolphin echolocation algorithm suggests the following steps:

Before starting the optimization process for the changes of CF, a curve should be selected using Eq. (1), utilizing Power=1, Loops number=8, and PP
                        1
                        =0.1, as follow:
                           
                              (8)
                              
                                 PP
                                 =
                                 0.1
                                 +
                                 0.9
                                 
                                    
                                       
                                          
                                             
                                                
                                                   
                                                      Loop
                                                   
                                                   
                                                      i
                                                   
                                                
                                                -
                                                1
                                             
                                             
                                                7
                                             
                                          
                                       
                                    
                                 
                                 =
                                 0.1
                                 +
                                 0.9
                                 (
                                 
                                    
                                       Loop
                                    
                                    
                                       i
                                    
                                 
                                 -
                                 1
                                 )
                              
                           
                        
                     

It should be noted that the PP
                        1 is better to be considered as the CF of the randomly selected generation of the first loop, which is equal to 0.11 for this example.

Dolphin echolocation steps to solve the problem are as follows:
                           
                              1.
                              Create the initial locations randomly, which includes the generating NL vectors consisting of N integer numbers between −20 and 20. For example, considering NL and N equal to 30 and 4, 30 vectors of length 4 should be selected randomly. One possible answer for the ith location can be Li
                                 
                                 ={−10,4,−7,18}.

Calculate the PP of the loop using Eq. (8).

Calculate fitness for each location. In this example as the objective function is defined by Eq. (7), for the considered location (Li
                                 ), h
                                 =(−10)2
                                 +42
                                 +(−7)2
                                 +182
                                 =489. As in DE, the fitness is used to calculate the probability. Better fitnesses should have higher possibilities, then we can use Fitness
                                 =1/h. It should be added that, for this special case, as h can be equal to zero, small value of 1 is added to the h in order to prevent the error of dividing by zero. Then the Fitness=
                                 1/(h
                                 +1), and for the considered location Fitness(Li
                                 )=1/(489+1)=0.00204.

Calculate the Accumulative fitness, using Eq. (2). As discussed before the alternatives should be sorted in an ascending order. The AlternativesMA∗NV
                                  (MA is the number of alternatives, and NV is the number of optimization variables) is allocated to the possible alternatives for variables. For this example, the Alternatives matrix is:


                        
                           
                              
                                 
                                 
                                 
                                    
                                       for i
                                          =
                                          Li
                                          
                                       
                                       
                                    
                                    
                                       
                                          for j
                                          =1 to 4
                                       
                                    
                                    
                                       
                                          
                                          find the position of L(i,
                                          j) in the jth column of the Alternatives matrix and name it as A.
                                       
                                    
                                    
                                       
                                          
                                          for k
                                          =−10 to 10
                                       
                                    
                                    
                                       
                                          
                                          
                                          
                                          
                                             
                                                
                                                   
                                                      AF
                                                   
                                                   
                                                      (
                                                      A
                                                      +
                                                      k
                                                      )
                                                      j
                                                   
                                                
                                                =
                                                
                                                   
                                                      1
                                                   
                                                   
                                                      10
                                                   
                                                
                                                *
                                                (
                                                10
                                                -
                                                |
                                                k
                                                |
                                                )
                                                Fitness
                                                (
                                                
                                                   
                                                      L
                                                   
                                                   
                                                      i
                                                   
                                                
                                                )
                                                +
                                                
                                                   
                                                      AF
                                                   
                                                   
                                                      (
                                                      A
                                                      +
                                                      k
                                                      )
                                                      j
                                                   
                                                
                                             
                                          
                                       
                                       (10)
                                    
                                    
                                       
                                          
                                          end
                                       
                                    
                                    
                                       
                                          end
                                       
                                    
                                    
                                       end
                                       
                                    
                                 
                              
                           
                        Eq. (10) can also be stated as:
                           
                              
                                 
                                 
                                 
                                    
                                       for j
                                          ={1,2,3,4}
                                       
                                    
                                    
                                       
                                          
                                          L(i,
                                          j)={−10,4,−7,18}, then A
                                          ={11,25,14,39}
                                       
                                    
                                    
                                       
                                          for k
                                          =−10 to 10
                                       
                                    
                                    
                                       
                                          
                                          
                                          
                                             
                                                
                                                   
                                                      AF
                                                   
                                                   
                                                      (
                                                      11
                                                      +
                                                      k
                                                      )
                                                      1
                                                   
                                                
                                                =
                                                
                                                   
                                                      1
                                                   
                                                   
                                                      10
                                                   
                                                
                                                ∗
                                                (
                                                10
                                                -
                                                |
                                                k
                                                |
                                                )
                                                Fitness
                                                (
                                                
                                                   
                                                      L
                                                   
                                                   
                                                      i
                                                   
                                                
                                                )
                                                +
                                                
                                                   
                                                      AF
                                                   
                                                   
                                                      (
                                                      11
                                                      +
                                                      k
                                                      )
                                                      1
                                                   
                                                
                                             
                                          
                                       
                                       (11)
                                    
                                    
                                       
                                          
                                          
                                          
                                             
                                                
                                                   
                                                      AF
                                                   
                                                   
                                                      (
                                                      25
                                                      +
                                                      k
                                                      )
                                                      2
                                                   
                                                
                                                =
                                                
                                                   
                                                      1
                                                   
                                                   
                                                      10
                                                   
                                                
                                                ∗
                                                (
                                                10
                                                -
                                                |
                                                k
                                                |
                                                )
                                                Fitness
                                                (
                                                
                                                   
                                                      L
                                                   
                                                   
                                                      i
                                                   
                                                
                                                )
                                                +
                                                
                                                   
                                                      AF
                                                   
                                                   
                                                      (
                                                      25
                                                      +
                                                      k
                                                      )
                                                      2
                                                   
                                                
                                             
                                          
                                       
                                    
                                    
                                       
                                          
                                          
                                          
                                             
                                                
                                                   
                                                      AF
                                                   
                                                   
                                                      (
                                                      14
                                                      +
                                                      k
                                                      )
                                                      3
                                                   
                                                
                                                =
                                                
                                                   
                                                      1
                                                   
                                                   
                                                      10
                                                   
                                                
                                                ∗
                                                (
                                                10
                                                -
                                                |
                                                k
                                                |
                                                )
                                                Fitness
                                                (
                                                
                                                   
                                                      L
                                                   
                                                   
                                                      i
                                                   
                                                
                                                )
                                                +
                                                
                                                   
                                                      AF
                                                   
                                                   
                                                      (
                                                      14
                                                      +
                                                      k
                                                      )
                                                      3
                                                   
                                                
                                             
                                          
                                       
                                    
                                    
                                       
                                          
                                          
                                          
                                             
                                                
                                                   
                                                      AF
                                                   
                                                   
                                                      (
                                                      39
                                                      +
                                                      k
                                                      )
                                                      4
                                                   
                                                
                                                =
                                                
                                                   
                                                      1
                                                   
                                                   
                                                      10
                                                   
                                                
                                                ∗
                                                (
                                                10
                                                -
                                                |
                                                k
                                                |
                                                )
                                                Fitness
                                                (
                                                
                                                   
                                                      L
                                                   
                                                   
                                                      i
                                                   
                                                
                                                )
                                                +
                                                
                                                   
                                                      AF
                                                   
                                                   
                                                      (
                                                      39
                                                      +
                                                      k
                                                      )
                                                      4
                                                   
                                                
                                             
                                          
                                       
                                    
                                    
                                       
                                          end
                                       
                                    
                                    
                                       end
                                       
                                    
                                 
                              
                           
                        
                     

Considering ε as the worth possible fitness, it will be ε
                        =1/(4*202) and then AF
                        =AF+0.000625.

In these equations, it can be seen that for example for j
                        =2 (the second variable), for calculating the accumulative fitness, search space should be divided into two regions: affected region (in effective radius) and not affected region. Choosing Re
                         equal to 10, alternatives with absolute distance to 4 (alternative 4 is chosen for the second variable) more than 10 (x
                        <−6 and x
                        >14) are considered not affected. Also in the affected area the accumulative fitness resulted from this sample location changes linearly in a way that its maximum appears in x
                        =4. The accumulative fitness to be added for this alternative is:
                           
                              (12)
                              
                                 
                                    
                                       
                                          
                                             
                                                AF
                                             
                                             
                                                (
                                                x
                                                +
                                                25
                                                )
                                                2
                                             
                                          
                                          =
                                          
                                             
                                                AF
                                             
                                             
                                                (
                                                x
                                                +
                                                25
                                                )
                                                2
                                             
                                          
                                          +
                                          
                                             
                                                
                                                   
                                                      
                                                         
                                                            0
                                                         
                                                         
                                                            x
                                                            <
                                                            -
                                                            6
                                                         
                                                      
                                                      
                                                         
                                                            
                                                               
                                                                  Fitness
                                                                  (
                                                                  Li
                                                                  )
                                                               
                                                               
                                                                  10
                                                               
                                                            
                                                            (
                                                            x
                                                            +
                                                            6
                                                            )
                                                         
                                                         
                                                            -
                                                            6
                                                            <
                                                            x
                                                            ⩽
                                                            4
                                                         
                                                      
                                                      
                                                         
                                                            
                                                               
                                                                  Fitness
                                                                  (
                                                                  Li
                                                                  )
                                                               
                                                               
                                                                  10
                                                               
                                                            
                                                            (
                                                            14
                                                            -
                                                            x
                                                            )
                                                         
                                                         
                                                            4
                                                            <
                                                            x
                                                            ⩽
                                                            14
                                                         
                                                      
                                                      
                                                         
                                                            0
                                                         
                                                         
                                                            x
                                                            >
                                                            14
                                                         
                                                      
                                                   
                                                
                                             
                                          
                                       
                                    
                                    
                                       
                                          AF
                                          =
                                          AF
                                          +
                                          0.000625
                                       
                                    
                                 
                              
                           
                        
                        Fig. 4
                         shows the result of performing the explained process for all four variables of this location.

Performing Step 4 for all the randomly selected answers, the final Accumulative fitness of the first loop is achieved.
                           
                              5.
                              For variable j
                                 (
                                 
                                    j
                                 
                                 =1to4), calculate the probability of choosing alternative i
                                 (
                                 
                                    i
                                 
                                 =1to40), according to the following relationship:


                        
                           
                              6.
                              
                                 Fig. 5 demonstrates the accumulative fitness of variables X1, X2, X3 and X4. The best location of the first loop is achieved by setting variables as: X1=−11, X2=3, X3=
                                 X4=4. On the other hand, according to Eq. (8), PP for the first loop is equal to 10%, as a result all variables in their best placement is equal to 10% probability of the other alternatives is defined distributing remaining value of probability equal to 90% to the other alternatives, using the following formula:


                        Figs. 7–10
                        
                        
                        
                         show the accumulative fitness and the probability of alternatives in loops 4 and 8, respectively. It can be seen from these figures that the probability changes in a way that in 8 loops DE reaches the best answer.

Bat inspired algorithm can be considered as a balanced combination of the standard particle swarm optimization and the intensive local search controlled by the loudness and pulse rate [17]. In this algorithm loudness and pulse frequency are echolocation parameters that gradually restrict the search according to pulse emission and loudness rules. This is while, in dolphin echolocation algorithm there is no movement to the best answer. DE algorithm works with possibilities.

In this study the structural optimization goal is to minimize the weight of the structure that is formulated as follows:
                        
                           (15)
                           
                              Minimize
                              :
                              
                              w
                              =
                              ρ
                              
                                 
                                    
                                       ∑
                                    
                                    
                                       i
                                       =
                                       1
                                    
                                    
                                       M
                                    
                                 
                              
                              
                                 
                                    A
                                 
                                 
                                    i
                                 
                              
                              
                                 
                                    L
                                 
                                 
                                    i
                                 
                              
                           
                        
                     
                     
                        
                           (16)
                           
                              s
                              .
                              t
                              .
                              :
                              
                              KU
                              -
                              P
                              =
                              0
                              
                                 
                                    g
                                 
                                 
                                    1
                                 
                              
                              ⩾
                              0
                              ,
                              
                              
                                 
                                    g
                                 
                                 
                                    2
                                 
                              
                              ⩾
                              0
                              ,
                              …
                              ,
                              
                                 
                                    g
                                 
                                 
                                    n
                                 
                              
                              ⩾
                              0
                           
                        
                     where g
                     1,
                     g
                     2,…,
                     gn
                      are constraint functions depending on the element being used in each problem and K, U and P are the stiffness matrix, nodal displacement and nodal force vectors, respectively. In this study, different constraints are implemented for structural design including drift, displacement and strength. Constraints are clarified in numerical examples.

Furthermore, such a constrained formulation is treated in an unconstrained form, using a penalized fitness function as:
                        
                           (17)
                           
                              F
                              =
                              
                                 
                                    F
                                 
                                 
                                    0
                                 
                              
                              -
                              w
                              *
                              (
                              1
                              +
                              
                                 
                                    K
                                 
                                 
                                    p
                                 
                              
                              ·
                              V
                              )
                           
                        
                     where F
                     0 is a constant taken as zero for the class of considered examples. Kp
                      is the penalty coefficient, and V denotes the total constraints’ violation considering all the load combinations.

In this section three trusses and two frames are optimized using the present algorithm and the results are compared to those of some other existing approaches. The algorithms are coded in Matlab and structures are analyzed using the direct stiffness method.

In the following three trusses are optimized and the results of the present algorithm are compared to those of different algorithm.

The 25-bar spatial truss structure shown in Fig. 11
                            has been studied in [22–24]. The material density is 0.1lb/in.3 (2767.990kg/m3) and the modulus of elasticity is 10,000ksi (68,950MPa). The stress limitations of the members are ±40kpsi (±275.80MPa). All nodes in three directions are subjected to displacement limitations of ±0.35 inch (in.) (±8.89mm) imposed on every node in each direction. The structure includes 25 members, which are divided into eight groups, as follows: (1) A1, (2) A2–A5, (3) A6–A9, (4) A10–A11, (5) A12–A13, (6) A14–A17, (7) A18–A21 and (8) A22–A25. Two optimization cases are implemented.
                              
                                 
                                    Case 1: The discrete variables are selected from the set D
                                    ={0.01,0.4,0.8,1.2,1.6,2.0,2.4,2.8,3.2,3.6,4.0,4.4,4.8,5.2,5.6,6.0} (in.2) or {0.065,2.58,5.16,7.74,10.32,12.90,15.48,18.06,20.65,23.22,25.81,28.39,30.97,33.55,36.13,38.71} (cm2).


                                    Case 2: The discrete variables are selected from the [26], listed in Table 2
                                    . The loads for both cases are shown in Table 3
                                    .

For solving this problem by the use of DE, Loops number is set to 80. Convergence curve is according to Eq. (1) considering PP
                           1
                           =0.15 and Power
                           =0.2. Re
                            and ε are equal to 5 and 1, respectively.

According to Tables 4 and 5
                           
                            and Fig. 12
                           , DE achieves the best answer in approximately 50 loops in Case 1 and near 80 loops in Case 2, while HPSACO reaches to the same result in around 100 loops. It should be mentioned that Kaveh and Talatahari [12] show that the HPSACO itself has better convergence rate in comparison to GA, PSO, PSOPC and HPSO.

In addition, Fig. 13
                            shows the convergence factor history. It can be seen that the algorithm follows the predefined linear curve as expected.

For the 72-bar spatial truss structure shown in Fig. 14
                           , the material density is 0.1lb/in.3 (2767:990kg/m3) and the modulus of elasticity is 10,000ksi (68,950MPa). The members are subjected to the stress limits of ±25 ksi (±172.375MPa). The nodes are subjected to the displacement limits of ±0.25in. (±0.635cm).

The 72 structural members of this spatial truss are sorted into 16 groups using symmetry: (1) A1–A4, (2) A5–A12, (3) A13–A16, (4) A17–A18, (5) A19–A22, (6) A23–A30, (7) A31–A34, (8) A35–A36, (9) A37–A40, (10) A41–A48, (11) A49–A52, (12) A53–A54, (13) A55–A58, (14) A59–A66 (15), A67–A70, and (16) A71–A72.

Two optimization cases are implemented.
                              
                                 
                                    Case 1: The discrete variables are selected from the set D
                                    ={0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8,0.9,1.0,1.1,1.2,1.3,1.4,1.5,1.6,1.7,1.8,1.9,2.0,2.1,2.2,2.3,2.4,2.5,2.6,2.7,2.8,2.9,3.0,3.1,3.2} (in.2) or {0.65,1.29,1.94,2.58,3.23,3.87,4.52,5.16,5.81,6.45,7.10,7.74,8.39,9.03,9.68,10.32,10.97,12.26,12.90,13.55,14.19,14.84,15.48,16.13,16.77,17.42,18.06,18.71,19.36,20.00,20.65} (cm2).


                                    Case 2: The discrete variables are selected from Table 2.


                           Table 6
                            lists the values and directions of the two load cases applied to the 72-bar spatial truss.

The problem has been solved by GA [22,23] and DHPSO [25].

Solving the problem using DE, the Loops number is set to 200. Convergence curve is according to Eq. (1) considering PP
                           1
                           =0.15 and Power
                           =1. Re
                            and ε are equal to 5 and 1, respectively.

It can be seen from Table 7
                            that in Case 1 the best answer is achieved using DE that is better than GA and HS and although it is the same as DHPACO, but the penalty of the optimum answer is less than that of the DHPACO. Moreover Table 8
                            shows that in Case 2, the DE achieves better results in comparison to the previously published works. Fig. 15
                            shows that the DE can converge to the best answer in 200 loops, then it has higher convergence rate compared to the other algorithms.

In addition, Fig. 16
                            shows the convergence factor history. It can be seen that the algorithm follows the predefined linear curve as expected.


                           Fig. 17
                            shows the allowable and existing displacements for the nodes of the 72-bar truss structure using the DE.

The 582-bar tower truss shown in Fig. 18
                           , is chosen from Ref. [27]. The symmetry of the tower about x-axis and y-axis is considered to group the 582 members into 32 independent size variables. A single load case is considered consisting of the lateral loads of 5.0kN (1.12 kips) applied in both x- and y-directions and a vertical load of 30kN (6.74 kips) applied in the z-direction at all nodes of the tower. A discrete set of 140 economical standard steel sections selected from W-shape profile list based on area and radii of gyration properties is used to size the variables, [27]. The lower and upper bounds on size variables are taken as 6.16in.2 (39.74cm2) and 215.0in.2 (1387.09cm2), respectively. The stress limitations of the members are imposed according to the provisions of ASD-AISC [26] as follows:
                              
                                 (18)
                                 
                                    
                                       
                                          
                                             
                                                
                                                   
                                                      
                                                         
                                                            σ
                                                         
                                                         
                                                            i
                                                         
                                                         
                                                            +
                                                         
                                                      
                                                      =
                                                      0.6
                                                      Fy
                                                   
                                                   
                                                      for
                                                      
                                                      
                                                         
                                                            σ
                                                         
                                                         
                                                            i
                                                         
                                                      
                                                      ⩾
                                                      0
                                                   
                                                
                                                
                                                   
                                                      
                                                         
                                                            σ
                                                         
                                                         
                                                            i
                                                         
                                                         
                                                            -
                                                         
                                                      
                                                   
                                                   
                                                      for
                                                      
                                                      
                                                         
                                                            σ
                                                         
                                                         
                                                            i
                                                         
                                                      
                                                      <
                                                      0
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           where 
                              
                                 
                                    
                                       σ
                                    
                                    
                                       i
                                    
                                    
                                       -
                                    
                                 
                              
                            is calculated according to the slenderness ratio
                              
                                 (19)
                                 
                                    
                                       
                                          σ
                                       
                                       
                                          i
                                       
                                       
                                          -
                                       
                                    
                                    =
                                    
                                       
                                          
                                             
                                                
                                                   
                                                      
                                                         
                                                            
                                                               
                                                                  
                                                                     
                                                                        
                                                                           
                                                                              
                                                                                 1
                                                                                 -
                                                                                 
                                                                                    
                                                                                       
                                                                                          
                                                                                             λ
                                                                                          
                                                                                          
                                                                                             i
                                                                                          
                                                                                          
                                                                                             2
                                                                                          
                                                                                       
                                                                                    
                                                                                    
                                                                                       2
                                                                                       
                                                                                          
                                                                                             C
                                                                                          
                                                                                          
                                                                                             i
                                                                                          
                                                                                          
                                                                                             2
                                                                                          
                                                                                       
                                                                                    
                                                                                 
                                                                              
                                                                           
                                                                        
                                                                        
                                                                           
                                                                              F
                                                                           
                                                                           
                                                                              y
                                                                           
                                                                        
                                                                     
                                                                  
                                                               
                                                            
                                                         
                                                      
                                                      
                                                         
                                                            
                                                               
                                                                  
                                                                     5
                                                                  
                                                                  
                                                                     3
                                                                  
                                                               
                                                               +
                                                               
                                                                  
                                                                     3
                                                                     
                                                                        
                                                                           λ
                                                                        
                                                                        
                                                                           i
                                                                        
                                                                     
                                                                  
                                                                  
                                                                     8
                                                                     
                                                                        
                                                                           C
                                                                        
                                                                        
                                                                           C
                                                                        
                                                                     
                                                                  
                                                               
                                                               -
                                                               
                                                                  
                                                                     
                                                                        
                                                                           λ
                                                                        
                                                                        
                                                                           i
                                                                        
                                                                        
                                                                           3
                                                                        
                                                                     
                                                                  
                                                                  
                                                                     8
                                                                     
                                                                        
                                                                           C
                                                                        
                                                                        
                                                                           C
                                                                        
                                                                        
                                                                           3
                                                                        
                                                                     
                                                                  
                                                               
                                                            
                                                         
                                                      
                                                   
                                                   
                                                      for
                                                      
                                                      
                                                         
                                                            λ
                                                         
                                                         
                                                            i
                                                         
                                                      
                                                      <
                                                      
                                                         
                                                            C
                                                         
                                                         
                                                            C
                                                         
                                                      
                                                   
                                                
                                                
                                                   
                                                      
                                                         
                                                            12
                                                            
                                                               
                                                                  π
                                                               
                                                               
                                                                  2
                                                               
                                                            
                                                            E
                                                         
                                                         
                                                            23
                                                            
                                                               
                                                                  λ
                                                               
                                                               
                                                                  i
                                                               
                                                               
                                                                  2
                                                               
                                                            
                                                         
                                                      
                                                   
                                                   
                                                      for
                                                      
                                                      
                                                         
                                                            λ
                                                         
                                                         
                                                            i
                                                         
                                                      
                                                      ⩾
                                                      
                                                         
                                                            C
                                                         
                                                         
                                                            C
                                                         
                                                      
                                                   
                                                
                                             
                                          
                                       
                                    
                                 
                              
                           where E
                           =the modulus of elasticity; Fy
                           
                           =the yield stress of A36 steel; 
                              
                                 
                                    
                                       C
                                    
                                    
                                       C
                                    
                                 
                                 =
                                 
                                    
                                       2
                                       
                                          
                                             π
                                          
                                          
                                             2
                                          
                                       
                                       E
                                       /
                                       
                                          
                                             F
                                          
                                          
                                             y
                                          
                                       
                                    
                                 
                              
                           ; 
                              
                                 
                                    
                                       λ
                                    
                                    
                                       i
                                    
                                 
                              
                           
                           =the slenderness ratio (kLi
                           /ri
                           ); k
                           =the effective length factor; Li
                           
                           =the member length; and ri
                           
                           =the radius of gyration. The other constraint is the limitation of the nodal displacements (no more than 8.0cm or 3.15 in for each direction). In addition, the maximum slenderness ratio is limited to 300 for the tension members, and this limit is recommended to be 200 for the compression members according to the ASD-AISC [26] design code provisions.

The problem was solved later by Kaveh and Talatahari [29] and Sonmez [30]. Two cases for analyzing are used according to Ref. [30], as follows:
                              
                                 
                                    Case 1: All members are selected from a set of 140W-shaped profiles according to Ref. [27] and the maximum number of evaluations is set to 50,000. For the DE, 25,000 evaluations are considered for this case to demonstrate the efficiency of the algorithm.


                                    Case 2: There is no difference between Case 1 and Case 2, but in the number of evaluations which is set to 100,000. For the DE, 50,000 evaluations are considered for this case to demonstrate efficiency of the algorithm.

Convergence curve is according to Eq. (1) considering PP
                           1
                           =15% and Power
                           =0.2. Re
                            and ε are equal to 10 and 1, respectively.

Results can be seen in Table 9
                           , which shows that in Case 1, the DE outperforms the HPSACO, ABC and PSO by 5.7%, 2.3% and 1%, respectively, and in Case 2, the DE results is 1.6% better than those of ABC algorithm. In addition comparing the results with those presented in [27], it can be seen that the optimum answer of the DE in Case 1 is 1.1%, 1.3%, 2.2%, 2.7%, 4.7% and 6.7% lighter than those of the ESs, SA, TS, ACO, HS and SGA.


                           Fig. 19
                            shows the comparison of the allowable and existing constrains for the 582-bar truss using the DE. The maximum values for displacement in x, y and z directions are 3.148 in (7.995cm), 2.986 in (7.584cm) and 0.931 in (2.365cm), respectively. The maximum stress ratio is 96.60%. It can be seen that some displacements and stresses are near the boundary conditions. It should be mentioned that there is a small difference between analysis results of Sap2000 (Hasançebi et al. [27]), C# programming language code (Sonmez [30]) and Matlab code (present study). Then checking the results of each code with another one may show a violation of constraints. Fig. 19 shows according to the finite element program coded in Matlab, there is no penalty for the best answer.


                           Fig. 20
                            shows the convergence history of the best answer and average results for the DE, and Fig. 21
                            illustrates the convergence factor history. It can be seen that the algorithm follows the predefined linear curve as expected.

The displacement and AISC combined strength constraints are the performance constraints of the frame as follows:
                           
                              (a)
                              Maximum lateral displacement:


                        
                           
                              (b)
                              The inter-story displacements:


                        
                           
                              (c)
                              Element forces:


                           Fig. 22
                            shows the configuration and applied loads of a 3-bay 15-story frame structure choosen from Ref. [29]. This frame consists of 64 joints and 105 members. The sway of the top story is limited to 23.5cm. The material has a modulus of elasticity equal to E
                           =205GPa and a yield stress of Fy
                           
                           =248.2MPa. The effective length factors of the members are calculated as Kx
                           
                           ⩾0 for a sway-permitted frame and the out-of-plane effective length factor is specified as Ky
                           
                           =1.0. Each column is considered as non-braced along its length, and the unbraced length for each beam member is specified as one-fifth of the span length.

For solving this problem by DE, the Loops number is set to 100. The convergence curve is according to Eq. (1) considering PP
                           1
                           =0.15 and Power
                           =1. Re
                            and ε are equal to 5 and 1, respectively.

Results of the present study and those of Refs. [14,29,31] are provided in Table 10
                           . It can be seen that the DE achieves results that are 26%, 14%, 8%, 6% and 4% lighter than the PSO, PSOPC, HPSACO, ICA and CSS, respectively.

Convergence history is depicted in Fig. 23
                           . It can be seen that the present algorithm leads to the best answer in 100 loops which is less than that of the CSS (250 loops).

The maximum value of displacement is 14.27cm which is less than the allowable limit (23.5cm).


                           Fig. 24
                            shows the inter-story drifts, the maximum value of which is 1.15cm. This is less than the allowable value (1.17cm). It can be recognized that by reducing the weight of structure its stiffness is reduced, then the inter-story drifts are closer to the maximum allowable value.

In Fig. 25
                            the stress ratios of the elements are shown. The maximum stress ratio is 99.69%. One can see that similar to the inter-story limitation, stress ratios are closer to the limit line.


                           Fig. 26
                            shows the CF changes during optimization. It is clear that the CF changes around predefined line.


                           Fig. 27
                            shows the topology and the service loading conditions for a 3-bay 24-story frame consisting of 100 joints and 168 members which is chosen from Camp et al. [32]. The frame is designed following the LRFD specification and uses an inter-story drift displacement constraint. The material properties are a modulus of elasticity equal to E
                           =205GPa and a yield stress of Fy
                           
                           =230.3MPa.

The effective length factors of the members are calculated as Kx
                           
                           ⩾0 for the sway-permitted frame and the out-of-plane effective length factor is specified as Ky
                           
                           =1.0. All columns and beams are considered non-braced along their lengths. Fabrication conditions are imposed on the construction of the 168-element frame requiring that the same beam section be used in the first and third bay on all the floors except the roof beams, resulting in four beam groups.

Beginning at the foundation, the exterior columns are combined into one group and the interior columns are combined together in another group over three consecutive stories. The grouping results in 16 column sections and 4 beam sections for a total of 20 design variables. In this example, each of the four beam element groups is chosen from all 267W-shapes, while the 16 column element groups are limited to W14 sections (37W-shapes).

For solving this problem by the DE, the Loops number is set to be equal to 200. The convergence curve is according to Eq. (1) considering PP
                           1
                           =0.15 and Power
                           =1. Re
                            and ε are equal to 5 and 1, respectively.

Results of the present study and those of Camp et al. [32], Degertekin [33] and Kaveh and Talatahari [34,31,14] are provided in Table 11
                           . It can be seen that the DE achieves results that are 7.5%, 4.8%, 6%, 3.7%, and 3.6% lighter than those of the ACO, HS, IACO, ICA and CSS, respectively.

Convergence history is depicted in Fig. 28
                           . It can be observed that DE leads to the best answer in 200 loops which is less than that of CSS being 275 loops.

The maximum value of displacement is 26.11cm which is less than the allowable limit (29.20cm).


                           Fig. 29
                            shows the inter-story drifts with maximum value being 1.202cm that is less than the allowable value (1.205cm). It can be recognized that by reducing the weight of structure its stiffness is reduced and the inter-story drifts are quite close to the maximum allowable value.

In Fig. 30
                            the stress ratios of the elements are shown. One can see that similar to the inter-story limitation, the stress ratios are closer to the limitation line. The maximum stress ratio is 98.33%.


                           Fig. 31
                            shows the CF changes during the optimization process. It is clear that the CF changes around the predefined line.

@&#CONCLUSION@&#

In this study a novel optimization method is developed based on dolphin echolocation. The new method has the advantage of working according to the computational effort that user can afford for his/her optimization. In this algorithm, the convergence factor defined by Kaveh and Farhoudi [1] is controlled in order to perform a suitable optimization.

For the examples optimized in this paper, the DE achieves better results with higher convergence rates compared to other existing meta-heuristic algorithms such as GA, ACO, PSO, BB–BC, HS, ESs, SGA, TS, ICA, IACO, PSOPC, HPSACO and CSS previously applied to these problems. The authors believe that the results achieved from meta-heuristics are mostly dependent on the parameter tuning of the algorithms. It is also believed that by performing a limited number of numerical examples, one cannot correctly conclude the superiority of one method with respect to the others. Dolphin echolocation is an optimization algorithm that has the capability of adopting itself by the type of the problem in hand, having a reasonable convergence rate, and leading to an acceptable optimum answer in a number of loops specified by the user.

@&#ACKNOWLEDGEMENTS@&#

The first author is grateful to the Iran National Science Foundation for the support.

@&#REFERENCES@&#

